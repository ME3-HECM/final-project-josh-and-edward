

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 01 13:05:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 06/04/2022 GMT
    73                           ; 
    74                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F67K40 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataBANK0
   108   003ED6                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _DataFlag
   112   003ED6  01                 	db	1
   113   000000                     _TX4REG	set	3812
   114   000000                     _RC4STAbits	set	3815
   115   000000                     _SP4BRGH	set	3814
   116   000000                     _SSP2CON2bits	set	3802
   117   000000                     _RX4PPS	set	3605
   118   000000                     _SSP2CLKPPS	set	3612
   119   000000                     _SSP2DATPPS	set	3613
   120   000000                     _ANSELDbits	set	3751
   121   000000                     _SSP2ADD	set	3798
   122   000000                     _SSP2CON1bits	set	3801
   123   000000                     _RC4REG	set	3811
   124   000000                     _SP4BRGL	set	3813
   125   000000                     _TX4STAbits	set	3816
   126   000000                     _BAUD4CONbits	set	3817
   127   000000                     _SSP2CON2	set	3802
   128   000000                     _TRISDbits	set	3972
   129   000000                     _SSP2STAT	set	3800
   130   000000                     _TRISFbits	set	3974
   131   000000                     _TRISGbits	set	3975
   132   000000                     _INTCONbits	set	4082
   133   000000                     _SSP2BUF	set	3797
   134   000000                     _PIE2bits	set	3627
   135   000000                     _PIE4bits	set	3629
   136   000000                     _PIR4bits	set	3639
   137   000000                     _RC0PPS	set	3682
   138   000000                     _RD5PPS	set	3695
   139   000000                     _RD6PPS	set	3696
   140   000000                     _LATAbits	set	3961
   141   000000                     _LATGbits	set	3967
   142   000000                     _TRISAbits	set	3969
   143   000000                     _LATDbits	set	3964
   144                           
   145                           	psect	smallconst
   146   000E00                     __psmallconst:
   147                           	callstack 0
   148   000E00  00                 	db	0
   149   000E01                     STR_1:
   150   000E01  72                 	db	114	;'r'
   151   000E02  65                 	db	101	;'e'
   152   000E03  64                 	db	100	;'d'
   153   000E04  3D                 	db	61	;'='
   154   000E05  25                 	db	37
   155   000E06  66                 	db	102	;'f'
   156   000E07  20                 	db	32
   157   000E08  67                 	db	103	;'g'
   158   000E09  72                 	db	114	;'r'
   159   000E0A  65                 	db	101	;'e'
   160   000E0B  65                 	db	101	;'e'
   161   000E0C  6E                 	db	110	;'n'
   162   000E0D  3D                 	db	61	;'='
   163   000E0E  25                 	db	37
   164   000E0F  66                 	db	102	;'f'
   165   000E10  20                 	db	32
   166   000E11  62                 	db	98	;'b'
   167   000E12  6C                 	db	108	;'l'
   168   000E13  75                 	db	117	;'u'
   169   000E14  65                 	db	101	;'e'
   170   000E15  3D                 	db	61	;'='
   171   000E16  25                 	db	37
   172   000E17  66                 	db	102	;'f'
   173   000E18  20                 	db	32
   174   000E19  6C                 	db	108	;'l'
   175   000E1A  75                 	db	117	;'u'
   176   000E1B  6D                 	db	109	;'m'
   177   000E1C  3D                 	db	61	;'='
   178   000E1D  25                 	db	37
   179   000E1E  64                 	db	100	;'d'
   180   000E1F  0D                 	db	13
   181   000E20  0A                 	db	10
   182   000E21  00                 	db	0
   183   000E22                     STR_2:
   184   000E22  69                 	db	105	;'i'
   185   000E23  6E                 	db	110	;'n'
   186   000E24  66                 	db	102	;'f'
   187   000E25  00                 	db	0
   188   000E26                     STR_5:
   189   000E26  6E                 	db	110	;'n'
   190   000E27  61                 	db	97	;'a'
   191   000E28  6E                 	db	110	;'n'
   192   000E29  00                 	db	0
   193   000E2A  00                 	db	0	; dummy byte at the end
   194   000000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198   003C2E                     __pcinit:
   199                           	callstack 0
   200   003C2E                     start_initialization:
   201                           	callstack 0
   202   003C2E                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Initialize objects allocated to BANK0 (1 bytes)
   206                           ; load TBLPTR registers with __pidataBANK0
   207   003C2E  0ED6               	movlw	low __pidataBANK0
   208   003C30  6EF6               	movwf	tblptrl,c
   209   003C32  0E3E               	movlw	high __pidataBANK0
   210   003C34  6EF7               	movwf	tblptrh,c
   211   003C36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   212   003C38  6EF8               	movwf	tblptru,c
   213   003C3A  0009               	tblrd		*+	;fetch initializer
   214   003C3C  CFF5 F0CE          	movff	tablat,__pdataBANK0
   215                           
   216                           ; Clear objects allocated to BANK1 (176 bytes)
   217   003C40  EE01  F000         	lfsr	0,__pbssBANK1
   218   003C44  0EB0               	movlw	176
   219   003C46                     clear_0:
   220   003C46  6AEE               	clrf	postinc0,c
   221   003C48  06E8               	decf	wreg,f,c
   222   003C4A  E1FD               	bnz	clear_0
   223                           
   224                           ; Clear objects allocated to BANK0 (18 bytes)
   225   003C4C  EE00  F0BC         	lfsr	0,__pbssBANK0
   226   003C50  0E12               	movlw	18
   227   003C52                     clear_1:
   228   003C52  6AEE               	clrf	postinc0,c
   229   003C54  06E8               	decf	wreg,f,c
   230   003C56  E1FD               	bnz	clear_1
   231                           
   232                           ; Clear objects allocated to COMRAM (7 bytes)
   233   003C58  EE00  F04D         	lfsr	0,__pbssCOMRAM
   234   003C5C  0E07               	movlw	7
   235   003C5E                     clear_2:
   236   003C5E  6AEE               	clrf	postinc0,c
   237   003C60  06E8               	decf	wreg,f,c
   238   003C62  E1FD               	bnz	clear_2
   239   003C64                     end_of_initialization:
   240                           	callstack 0
   241   003C64                     __end_of__initialization:
   242                           	callstack 0
   243   003C64  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   244   003C66  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   245   003C68  0100               	movlb	0
   246   003C6A  EF1E  F01B         	goto	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMRAM
   249   00004D                     __pbssCOMRAM:
   250                           	callstack 0
   251   00004D                     _prec:
   252                           	callstack 0
   253   00004D                     	ds	2
   254   00004F                     _flags:
   255                           	callstack 0
   256   00004F                     	ds	1
   257   000050                     _TxBufReadCnt:
   258                           	callstack 0
   259   000050                     	ds	1
   260   000051                     _TxBufWriteCnt:
   261                           	callstack 0
   262   000051                     	ds	1
   263   000052                     _RxBufReadCnt:
   264                           	callstack 0
   265   000052                     	ds	1
   266   000053                     _RxBufWriteCnt:
   267                           	callstack 0
   268   000053                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271   0000BC                     __pbssBANK0:
   272                           	callstack 0
   273   0000BC                     floorf@F526:
   274                           	callstack 0
   275   0000BC                     	ds	4
   276   0000C0                     ___fpclassifyf@F465:
   277                           	callstack 0
   278   0000C0                     	ds	4
   279   0000C4                     _width:
   280                           	callstack 0
   281   0000C4                     	ds	2
   282   0000C6                     _vals:
   283                           	callstack 0
   284   0000C6                     	ds	8
   285                           
   286                           	psect	dataBANK0
   287   0000CE                     __pdataBANK0:
   288                           	callstack 0
   289   0000CE                     _DataFlag:
   290                           	callstack 0
   291   0000CE                     	ds	1
   292                           
   293                           	psect	bssBANK1
   294   000100                     __pbssBANK1:
   295                           	callstack 0
   296   000100                     _EUSART4TXbuf:
   297                           	callstack 0
   298   000100                     	ds	60
   299   00013C                     _EUSART4RXbuf:
   300                           	callstack 0
   301   00013C                     	ds	20
   302   000150                     _dbuf:
   303                           	callstack 0
   304   000150                     	ds	80
   305   0001A0                     _rel:
   306                           	callstack 0
   307   0001A0                     	ds	16
   308                           
   309                           	psect	cstackBANK1
   310   0001B0                     __pcstackBANK1:
   311                           	callstack 0
   312   0001B0                     main@buf:
   313                           	callstack 0
   314                           
   315                           ; 50 bytes @ 0x0
   316   0001B0                     	ds	50
   317                           
   318                           	psect	cstackBANK0
   319   000060                     __pcstackBANK0:
   320                           	callstack 0
   321   000060                     efgtoa@ne:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x0
   325   000060                     	ds	2
   326   000062                     efgtoa@p:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x2
   330   000062                     	ds	2
   331   000064                     efgtoa@t:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x4
   335   000064                     	ds	2
   336   000066                     _efgtoa$1491:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x6
   340   000066                     	ds	2
   341   000068                     efgtoa@pp:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x8
   345   000068                     	ds	1
   346   000069                     efgtoa@mode:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x9
   350   000069                     	ds	1
   351   00006A                     efgtoa@nmode:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xA
   355   00006A                     	ds	1
   356   00006B                     efgtoa@d:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0xB
   360   00006B                     	ds	2
   361   00006D                     efgtoa@m:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0xD
   365   00006D                     	ds	2
   366   00006F                     efgtoa@e:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0xF
   370   00006F                     	ds	2
   371   000071                     efgtoa@w:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x11
   375   000071                     	ds	2
   376   000073                     efgtoa@ou:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0x13
   380   000073                     	ds	4
   381   000077                     efgtoa@i:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x17
   385   000077                     	ds	2
   386   000079                     efgtoa@h:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x19
   390   000079                     	ds	4
   391   00007D                     efgtoa@l:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x1D
   395   00007D                     	ds	4
   396   000081                     efgtoa@sign:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x21
   400   000081                     	ds	1
   401   000082                     efgtoa@g:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x22
   405   000082                     	ds	4
   406   000086                     efgtoa@n:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x26
   410   000086                     	ds	2
   411   000088                     efgtoa@u:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x28
   415   000088                     	ds	4
   416   00008C                     vfpfcnvrt@convarg:
   417                           	callstack 0
   418                           
   419                           ; 8 bytes @ 0x2C
   420   00008C                     	ds	8
   421   000094                     vfpfcnvrt@c:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x34
   425   000094                     	ds	1
   426   000095                     vfpfcnvrt@cp:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x35
   430   000095                     	ds	2
   431   000097                     ?_vfprintf:
   432                           	callstack 0
   433   000097                     vfprintf@fp:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x37
   437   000097                     	ds	2
   438   000099                     vfprintf@fmt:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x39
   442   000099                     	ds	2
   443   00009B                     vfprintf@ap:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x3B
   447   00009B                     	ds	2
   448   00009D                     ?_sprintf:
   449                           	callstack 0
   450   00009D                     sprintf@s:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x3D
   454   00009D                     	ds	2
   455   00009F                     sprintf@fmt:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x3F
   459   00009F                     	ds	16
   460   0000AF                     sprintf@ap:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x4F
   464   0000AF                     	ds	2
   465   0000B1                     sprintf@f:
   466                           	callstack 0
   467                           
   468                           ; 11 bytes @ 0x51
   469   0000B1                     	ds	11
   470                           
   471                           	psect	cstackCOMRAM
   472   000001                     __pcstackCOMRAM:
   473                           	callstack 0
   474   000001                     ??_getCharFromTxBuf:
   475   000001                     putCharToRxBuf@byte:
   476                           	callstack 0
   477   000001                     
   478                           ; 1 bytes @ 0x0
   479   000001                     	ds	2
   480   000003                     ??_HighISR:
   481                           
   482                           ; 1 bytes @ 0x2
   483   000003                     	ds	2
   484   000005                     ??_I2C_2_Master_Idle:
   485   000005                     ?___fpclassifyf:
   486                           	callstack 0
   487   000005                     ?___fladd:
   488                           	callstack 0
   489   000005                     ?___fldiv:
   490                           	callstack 0
   491   000005                     ?___flmul:
   492                           	callstack 0
   493   000005                     ?_labs:
   494                           	callstack 0
   495   000005                     ?___flneg:
   496                           	callstack 0
   497   000005                     ?___fltol:
   498                           	callstack 0
   499   000005                     ?___xxtofl:
   500                           	callstack 0
   501   000005                     ?___aodiv:
   502                           	callstack 0
   503   000005                     ?___aomod:
   504                           	callstack 0
   505   000005                     putCharToTxBuf@byte:
   506                           	callstack 0
   507   000005                     memcpy@d1:
   508                           	callstack 0
   509   000005                     fputc@c:
   510                           	callstack 0
   511   000005                     strcpy@dest:
   512                           	callstack 0
   513   000005                     ___fleq@ff1:
   514                           	callstack 0
   515   000005                     ___flneg@f1:
   516                           	callstack 0
   517   000005                     ___fltol@f1:
   518                           	callstack 0
   519   000005                     ___fladd@b:
   520                           	callstack 0
   521   000005                     ___fldiv@b:
   522                           	callstack 0
   523   000005                     ___flmul@b:
   524                           	callstack 0
   525   000005                     ___xxtofl@val:
   526                           	callstack 0
   527   000005                     ___fpclassifyf@x:
   528                           	callstack 0
   529   000005                     labs@a:
   530                           	callstack 0
   531   000005                     ___aodiv@dividend:
   532                           	callstack 0
   533   000005                     ___aomod@dividend:
   534                           	callstack 0
   535                           
   536                           ; 8 bytes @ 0x4
   537   000005                     	ds	1
   538   000006                     ??_I2C_2_Master_Read:
   539   000006                     I2C_2_Master_Write@data_byte:
   540                           	callstack 0
   541   000006                     TxBufferedString@string:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x5
   545   000006                     	ds	1
   546   000007                     color_writetoaddr@value:
   547                           	callstack 0
   548   000007                     I2C_2_Master_Read@ack:
   549                           	callstack 0
   550   000007                     memcpy@s1:
   551                           	callstack 0
   552   000007                     fputc@fp:
   553                           	callstack 0
   554   000007                     strcpy@src:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x6
   558   000007                     	ds	1
   559   000008                     color_writetoaddr@address:
   560                           	callstack 0
   561   000008                     I2C_2_Master_Read@tmp:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x7
   565   000008                     	ds	1
   566   000009                     ??_fputc:
   567   000009                     ??___fpclassifyf:
   568   000009                     ??_labs:
   569   000009                     ??_color_click_init:
   570   000009                     ??___fltol:
   571   000009                     ??___xxtofl:
   572   000009                     ?_color_read_lum:
   573                           	callstack 0
   574   000009                     ?_color_read_Red:
   575                           	callstack 0
   576   000009                     ?_color_read_Green:
   577                           	callstack 0
   578   000009                     ?_color_read_Blue:
   579                           	callstack 0
   580   000009                     memcpy@n:
   581                           	callstack 0
   582   000009                     strcpy@s:
   583                           	callstack 0
   584   000009                     ___fleq@ff2:
   585                           	callstack 0
   586   000009                     ___fladd@a:
   587                           	callstack 0
   588   000009                     ___fldiv@a:
   589                           	callstack 0
   590   000009                     ___flmul@a:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x8
   594   000009                     	ds	2
   595   00000B                     ??_color_read_lum:
   596   00000B                     ??_color_read_Red:
   597   00000B                     ??_color_read_Green:
   598   00000B                     ??_color_read_Blue:
   599   00000B                     memcpy@tmp:
   600                           	callstack 0
   601   00000B                     strcpy@d:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0xA
   605   00000B                     	ds	1
   606   00000C                     memcpy@d:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0xB
   610   00000C                     	ds	1
   611   00000D                     ??___fladd:
   612   00000D                     ??___fldiv:
   613   00000D                     ??___flmul:
   614   00000D                     ??___fleq:
   615   00000D                     ___fltol@sign1:
   616                           	callstack 0
   617   00000D                     ___xxtofl@sign:
   618                           	callstack 0
   619   00000D                     ___fpclassifyf@e:
   620                           	callstack 0
   621   00000D                     ___aodiv@divisor:
   622                           	callstack 0
   623   00000D                     ___aomod@divisor:
   624                           	callstack 0
   625                           
   626                           ; 8 bytes @ 0xC
   627   00000D                     	ds	1
   628   00000E                     ___fltol@exp1:
   629                           	callstack 0
   630   00000E                     ___xxtofl@exp:
   631                           	callstack 0
   632   00000E                     color_read_lum@tmp:
   633                           	callstack 0
   634   00000E                     color_read_Red@tmp:
   635                           	callstack 0
   636   00000E                     color_read_Green@tmp:
   637                           	callstack 0
   638   00000E                     color_read_Blue@tmp:
   639                           	callstack 0
   640   00000E                     memcpy@s:
   641                           	callstack 0
   642   00000E                     fputs@s:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xD
   646   00000E                     	ds	1
   647   00000F                     ___xxtofl@arg:
   648                           	callstack 0
   649   00000F                     ___fpclassifyf@u:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0xE
   653   00000F                     	ds	1
   654   000010                     readColours@vals:
   655                           	callstack 0
   656   000010                     fputs@fp:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0xF
   660   000010                     	ds	1
   661   000011                     ___fladd@signs:
   662                           	callstack 0
   663   000011                     ___flmul@sign:
   664                           	callstack 0
   665   000011                     ___fldiv@rem:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x10
   669   000011                     	ds	1
   670   000012                     ___fladd@aexp:
   671                           	callstack 0
   672   000012                     ___flmul@aexp:
   673                           	callstack 0
   674   000012                     fputs@c:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x11
   678   000012                     	ds	1
   679   000013                     ___fladd@bexp:
   680                           	callstack 0
   681   000013                     fputs@i:
   682                           	callstack 0
   683   000013                     ___flmul@grs:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x12
   687   000013                     	ds	1
   688   000014                     ___fladd@grs:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x13
   692   000014                     	ds	1
   693   000015                     ___aodiv@counter:
   694                           	callstack 0
   695   000015                     ___aomod@counter:
   696                           	callstack 0
   697   000015                     ___fldiv@sign:
   698                           	callstack 0
   699   000015                     pad@fp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x14
   703   000015                     	ds	1
   704   000016                     ___aodiv@sign:
   705                           	callstack 0
   706   000016                     ___aomod@sign:
   707                           	callstack 0
   708   000016                     ___fldiv@new_exp:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x15
   712   000016                     	ds	1
   713   000017                     ?_abs:
   714                           	callstack 0
   715   000017                     ___flmul@bexp:
   716                           	callstack 0
   717   000017                     pad@buf:
   718                           	callstack 0
   719   000017                     abs@a:
   720                           	callstack 0
   721   000017                     ___aodiv@quotient:
   722                           	callstack 0
   723                           
   724                           ; 8 bytes @ 0x16
   725   000017                     	ds	1
   726   000018                     ___fldiv@grs:
   727                           	callstack 0
   728   000018                     ___flmul@prod:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x17
   732   000018                     	ds	1
   733   000019                     ??_abs:
   734   000019                     pad@p:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x18
   738   000019                     	ds	2
   739   00001B                     ??_pad:
   740                           
   741                           ; 1 bytes @ 0x1A
   742   00001B                     	ds	1
   743   00001C                     ___fldiv@bexp:
   744                           	callstack 0
   745   00001C                     ___flmul@temp:
   746                           	callstack 0
   747   00001C                     pad@i:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x1B
   751   00001C                     	ds	1
   752   00001D                     ___fldiv@aexp:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x1C
   756   00001D                     	ds	1
   757   00001E                     ?___flsub:
   758                           	callstack 0
   759   00001E                     ?_floorf:
   760                           	callstack 0
   761   00001E                     colour_rel@vals:
   762                           	callstack 0
   763   00001E                     pad@w:
   764                           	callstack 0
   765   00001E                     ___flge@ff1:
   766                           	callstack 0
   767   00001E                     ___flsub@b:
   768                           	callstack 0
   769   00001E                     floorf@x:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x1D
   773   00001E                     	ds	2
   774   000020                     colour_rel@rel:
   775                           	callstack 0
   776   000020                     dtoa@fp:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1F
   780   000020                     	ds	2
   781   000022                     ??_floorf:
   782   000022                     colour_rel@R:
   783                           	callstack 0
   784   000022                     ___flge@ff2:
   785                           	callstack 0
   786   000022                     ___flsub@a:
   787                           	callstack 0
   788   000022                     dtoa@d:
   789                           	callstack 0
   790                           
   791                           ; 8 bytes @ 0x21
   792   000022                     	ds	4
   793   000026                     ??___flge:
   794   000026                     colour_rel@G:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x25
   798   000026                     	ds	2
   799   000028                     floorf@m:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x27
   803   000028                     	ds	2
   804   00002A                     ??_dtoa:
   805   00002A                     colour_rel@B:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x29
   809   00002A                     	ds	2
   810   00002C                     floorf@e:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x2B
   814   00002C                     	ds	2
   815   00002E                     colour_rel@L:
   816                           	callstack 0
   817   00002E                     floorf@u:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x2D
   821   00002E                     	ds	4
   822   000032                     _dtoa$1460:
   823                           	callstack 0
   824   000032                     efgtoa@fp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x31
   828   000032                     	ds	2
   829   000034                     dtoa@p:
   830                           	callstack 0
   831   000034                     efgtoa@f:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x33
   835   000034                     	ds	2
   836   000036                     dtoa@w:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x35
   840   000036                     	ds	2
   841   000038                     efgtoa@c:
   842                           	callstack 0
   843   000038                     dtoa@n:
   844                           	callstack 0
   845                           
   846                           ; 8 bytes @ 0x37
   847   000038                     	ds	1
   848   000039                     ??_efgtoa:
   849                           
   850                           ; 1 bytes @ 0x38
   851   000039                     	ds	7
   852   000040                     dtoa@s:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x3F
   856   000040                     	ds	1
   857   000041                     dtoa@i:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x40
   861   000041                     	ds	2
   862   000043                     vfpfcnvrt@fp:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x42
   866   000043                     	ds	2
   867   000045                     vfpfcnvrt@fmt:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x44
   871   000045                     	ds	2
   872   000047                     vfpfcnvrt@ap:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x46
   876   000047                     	ds	2
   877   000049                     ??_vfpfcnvrt:
   878                           
   879                           ; 1 bytes @ 0x48
   880   000049                     	ds	2
   881   00004B                     vfprintf@cfmt:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x4A
   885   00004B                     	ds	2
   886   00004D                     
   887                           ; 1 bytes @ 0x4C
   888 ;;
   889 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   890 ;;
   891 ;; *************** function _main *****************
   892 ;; Defined at:
   893 ;;		line 28 in file "main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  buf            50    0[BANK1 ] unsigned char [50]
   898 ;;  ADC             2    0        unsigned int 
   899 ;;  frac_part       2    0        unsigned int 
   900 ;;  int_part        2    0        unsigned int 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Totals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;Total ram usage:       50 bytes
   915 ;; Hardware stack levels required when called: 10
   916 ;; This function calls:
   917 ;;		_I2C_2_Master_Init
   918 ;;		_Interrupts_init
   919 ;;		_TxBufferedString
   920 ;;		_color_click_init
   921 ;;		_color_writetoaddr
   922 ;;		_colour_rel
   923 ;;		_initUSART4
   924 ;;		_readColours
   925 ;;		_sendTxBuf
   926 ;;		_sprintf
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text0
   933   00363C                     __ptext0:
   934                           	callstack 0
   935   00363C                     _main:
   936                           	callstack 21
   937   00363C                     
   938                           ;main.c: 29:     initUSART4();
   939   00363C  EC33  F01F         	call	_initUSART4	;wreg free
   940   003640                     
   941                           ;main.c: 30:     Interrupts_init();
   942   003640  EC4E  F01F         	call	_Interrupts_init	;wreg free
   943   003644                     
   944                           ;main.c: 31:     color_click_init();
   945   003644  EC73  F01E         	call	_color_click_init	;wreg free
   946   003648                     
   947                           ;main.c: 32:     I2C_2_Master_Init();
   948   003648  ECD0  F01E         	call	_I2C_2_Master_Init	;wreg free
   949   00364C                     
   950                           ;main.c: 33:     char buf[50];;main.c: 34:     unsigned int int_part;;main.c: 35:     un
      +                          signed int frac_part;;main.c: 36:     unsigned int ADC;;main.c: 45:     color_writetoadd
      +                          r(0x00, 0x01);
   951   00364C  0E01               	movlw	1
   952   00364E  6E07               	movwf	color_writetoaddr@value^0,c
   953   003650  0E00               	movlw	0
   954   003652  EC23  F01F         	call	_color_writetoaddr
   955   003656                     
   956                           ;main.c: 55:     TRISGbits.TRISG1=0;
   957   003656  9287               	bcf	135,1,c	;volatile
   958   003658                     
   959                           ;main.c: 56:     TRISAbits.TRISA4=0;
   960   003658  9881               	bcf	129,4,c	;volatile
   961   00365A                     
   962                           ;main.c: 57:     TRISFbits.TRISF7=0;
   963   00365A  9E86               	bcf	134,7,c	;volatile
   964   00365C                     
   965                           ;main.c: 58:     TRISDbits.TRISD7=0;
   966   00365C  9E84               	bcf	132,7,c	;volatile
   967   00365E                     
   968                           ;main.c: 60:     LATGbits.LATG1=1;
   969   00365E  827F               	bsf	127,1,c	;volatile
   970   003660                     
   971                           ;main.c: 61:     LATAbits.LATA4=1;
   972   003660  8879               	bsf	121,4,c	;volatile
   973   003662                     
   974                           ;main.c: 62:     LATDbits.LATD7=1;
   975   003662  8E7C               	bsf	124,7,c	;volatile
   976   003664                     l5526:
   977                           
   978                           ;main.c: 68:     {;main.c: 76:     readColours(&vals);
   979   003664  0EC6               	movlw	low _vals
   980   003666  6E10               	movwf	readColours@vals^0,c
   981   003668  0E00               	movlw	high _vals
   982   00366A  6E11               	movwf	(readColours@vals+1)^0,c
   983   00366C  EC45  F01C         	call	_readColours	;wreg free
   984   003670                     
   985                           ;main.c: 77:     colour_rel(&vals, &rel);
   986   003670  0EC6               	movlw	low _vals
   987   003672  6E1E               	movwf	colour_rel@vals^0,c
   988   003674  0E00               	movlw	high _vals
   989   003676  6E1F               	movwf	(colour_rel@vals+1)^0,c
   990   003678  0EA0               	movlw	low _rel
   991   00367A  6E20               	movwf	colour_rel@rel^0,c
   992   00367C  0E01               	movlw	high _rel
   993   00367E  6E21               	movwf	(colour_rel@rel+1)^0,c
   994   003680  ECFA  F016         	call	_colour_rel	;wreg free
   995   003684                     
   996                           ;main.c: 79:     sprintf(buf,"red=%f green=%f blue=%f lum=%d\r\n",rel.R, rel.G,rel.B,val
      +                          s.L);
   997   003684  0EB0               	movlw	low main@buf
   998   003686  0100               	movlb	0	; () banked
   999   003688  6F9D               	movwf	sprintf@s& (0+255),b
  1000   00368A  0E01               	movlw	high main@buf
  1001   00368C  6F9E               	movwf	(sprintf@s+1)& (0+255),b
  1002   00368E  0E01               	movlw	low STR_1
  1003   003690  6F9F               	movwf	sprintf@fmt& (0+255),b
  1004   003692  0E0E               	movlw	high STR_1
  1005   003694  6FA0               	movwf	(sprintf@fmt+1)& (0+255),b
  1006   003696  C1A0  F0A1         	movff	_rel,?_sprintf+4
  1007   00369A  C1A1  F0A2         	movff	_rel+1,?_sprintf+5
  1008   00369E  C1A2  F0A3         	movff	_rel+2,?_sprintf+6
  1009   0036A2  C1A3  F0A4         	movff	_rel+3,?_sprintf+7
  1010   0036A6  C1A4  F0A5         	movff	_rel+4,?_sprintf+8
  1011   0036AA  C1A5  F0A6         	movff	_rel+5,?_sprintf+9
  1012   0036AE  C1A6  F0A7         	movff	_rel+6,?_sprintf+10
  1013   0036B2  C1A7  F0A8         	movff	_rel+7,?_sprintf+11
  1014   0036B6  C1A8  F0A9         	movff	_rel+8,?_sprintf+12
  1015   0036BA  C1A9  F0AA         	movff	_rel+9,?_sprintf+13
  1016   0036BE  C1AA  F0AB         	movff	_rel+10,?_sprintf+14
  1017   0036C2  C1AB  F0AC         	movff	_rel+11,?_sprintf+15
  1018   0036C6  C0CC  F0AD         	movff	_vals+6,?_sprintf+16
  1019   0036CA  C0CD  F0AE         	movff	_vals+7,?_sprintf+17
  1020   0036CE  EC9E  F01C         	call	_sprintf	;wreg free
  1021   0036D2                     
  1022                           ;main.c: 81:     TxBufferedString(buf);
  1023   0036D2  0EB0               	movlw	low main@buf
  1024   0036D4  6E06               	movwf	TxBufferedString@string^0,c
  1025   0036D6  0E01               	movlw	high main@buf
  1026   0036D8  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1027   0036DA  EC8D  F01E         	call	_TxBufferedString	;wreg free
  1028                           
  1029                           ;main.c: 86:         while (DataFlag){
  1030   0036DE  EF73  F01B         	goto	l5536
  1031   0036E2                     l5534:
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;main.c: 87:             sendTxBuf();
  1035   0036E2  ECBB  F01E         	call	_sendTxBuf	;wreg free
  1036   0036E6                     l5536:
  1037                           
  1038                           ;main.c: 86:         while (DataFlag){
  1039   0036E6  0100               	movlb	0	; () banked
  1040   0036E8  51CE               	movf	_DataFlag& (0+255),w,b	;volatile
  1041   0036EA  A4D8               	btfss	status,2,c
  1042   0036EC  EF7A  F01B         	goto	u6341
  1043   0036F0  EF7C  F01B         	goto	u6340
  1044   0036F4                     u6341:
  1045   0036F4  EF71  F01B         	goto	l5534
  1046   0036F8                     u6340:
  1047   0036F8  EF32  F01B         	goto	l5526
  1048   0036FC  EF25  F000         	goto	start
  1049   003700                     __end_of_main:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _sprintf *****************
  1053 ;; Defined at:
  1054 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  s               2   61[BANK0 ] PTR unsigned char 
  1057 ;;		 -> main@buf(50), 
  1058 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  1059 ;;		 -> STR_1(33), 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  f              11   81[BANK0 ] struct _IO_FILE
  1062 ;;  ap              2   79[BANK0 ] PTR void [1]
  1063 ;;		 -> ?_sprintf(2), 
  1064 ;;  ret             2    0        int 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  2   61[BANK0 ] int 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1074 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1075 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1077 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;Total ram usage:       31 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 9
  1081 ;; This function calls:
  1082 ;;		_vfprintf
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text1
  1089   00393C                     __ptext1:
  1090                           	callstack 0
  1091   00393C                     _sprintf:
  1092                           	callstack 21
  1093   00393C  0EA1               	movlw	low (?_sprintf+4)
  1094   00393E  0100               	movlb	0	; () banked
  1095   003940  6FAF               	movwf	sprintf@ap& (0+255),b
  1096   003942  0E00               	movlw	high (?_sprintf+4)
  1097   003944  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  1098   003946  C09D  F0B1         	movff	sprintf@s,sprintf@f
  1099   00394A  C09E  F0B2         	movff	sprintf@s+1,sprintf@f+1
  1100   00394E                     
  1101                           ; BSR set to: 0
  1102   00394E  0E00               	movlw	0
  1103   003950  6FB5               	movwf	(sprintf@f+4)& (0+255),b
  1104   003952  0E00               	movlw	0
  1105   003954  6FB4               	movwf	(sprintf@f+3)& (0+255),b
  1106   003956                     
  1107                           ; BSR set to: 0
  1108   003956  0E00               	movlw	0
  1109   003958  6FBB               	movwf	(sprintf@f+10)& (0+255),b
  1110   00395A  0E00               	movlw	0
  1111   00395C  6FBA               	movwf	(sprintf@f+9)& (0+255),b
  1112   00395E                     
  1113                           ; BSR set to: 0
  1114   00395E  0EB1               	movlw	low sprintf@f
  1115   003960  6F97               	movwf	vfprintf@fp& (0+255),b
  1116   003962  0E00               	movlw	high sprintf@f
  1117   003964  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
  1118   003966  C09F  F099         	movff	sprintf@fmt,vfprintf@fmt
  1119   00396A  C0A0  F09A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1120   00396E  0EAF               	movlw	low sprintf@ap
  1121   003970  6F9B               	movwf	vfprintf@ap& (0+255),b
  1122   003972  0E00               	movlw	high sprintf@ap
  1123   003974  6F9C               	movwf	(vfprintf@ap+1)& (0+255),b
  1124   003976  EC74  F01C         	call	_vfprintf	;wreg free
  1125   00397A  0100               	movlb	0	; () banked
  1126   00397C  51B4               	movf	(sprintf@f+3)& (0+255),w,b
  1127   00397E  259D               	addwf	sprintf@s& (0+255),w,b
  1128   003980  6ED9               	movwf	fsr2l,c
  1129   003982  51B5               	movf	(sprintf@f+4)& (0+255),w,b
  1130   003984  219E               	addwfc	(sprintf@s+1)& (0+255),w,b
  1131   003986  6EDA               	movwf	fsr2h,c
  1132   003988  0E00               	movlw	0
  1133   00398A  6EDF               	movwf	indf2,c
  1134   00398C                     
  1135                           ; BSR set to: 0
  1136   00398C  0012               	return		;funcret
  1137   00398E                     __end_of_sprintf:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _vfprintf *****************
  1141 ;; Defined at:
  1142 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  1145 ;;		 -> sprintf@f(11), 
  1146 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  1147 ;;		 -> STR_1(33), 
  1148 ;;  ap              2   59[BANK0 ] PTR PTR void 
  1149 ;;		 -> sprintf@ap(2), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  cfmt            2   74[COMRAM] PTR unsigned char 
  1152 ;;		 -> STR_1(33), 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  2   55[BANK0 ] int 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1162 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;Total ram usage:        8 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; Hardware stack levels required when called: 8
  1169 ;; This function calls:
  1170 ;;		_vfpfcnvrt
  1171 ;; This function is called by:
  1172 ;;		_sprintf
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text2
  1177   0038E8                     __ptext2:
  1178                           	callstack 0
  1179   0038E8                     _vfprintf:
  1180                           	callstack 21
  1181   0038E8                     
  1182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1183   0038E8  C099  F04B         	movff	vfprintf@fmt,vfprintf@cfmt
  1184   0038EC  C09A  F04C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1187   0038F0  EF88  F01C         	goto	l5434
  1188   0038F4                     l5432:
  1189                           
  1190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1191   0038F4  C097  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1192   0038F8  C098  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1193   0038FC  0E4B               	movlw	low vfprintf@cfmt
  1194   0038FE  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1195   003900  0E00               	movlw	high vfprintf@cfmt
  1196   003902  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1197   003904  C09B  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1198   003908  C09C  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1199   00390C  EC56  F012         	call	_vfpfcnvrt	;wreg free
  1200   003910                     l5434:
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1203   003910  C04B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1204   003914  C04C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1205   003918                     	if	0	;tblptru may be non-zero
  1206   003918                     	endif
  1207   003918                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1208   003918  0E00               	movlw	low (__mediumconst shr (0+16))
  1209   00391A  6EF8               	movwf	tblptru,c
  1210   00391C                     	endif
  1211   00391C  0008               	tblrd		*
  1212   00391E  50F5               	movf	tablat,w,c
  1213   003920  0900               	iorlw	0
  1214   003922  A4D8               	btfss	status,2,c
  1215   003924  EF96  F01C         	goto	u6291
  1216   003928  EF98  F01C         	goto	u6290
  1217   00392C                     u6291:
  1218   00392C  EF7A  F01C         	goto	l5432
  1219   003930                     u6290:
  1220   003930                     
  1221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1222   003930  0E00               	movlw	0
  1223   003932  0100               	movlb	0	; () banked
  1224   003934  6F98               	movwf	(?_vfprintf+1)& (0+255),b
  1225   003936  0E00               	movlw	0
  1226   003938  6F97               	movwf	?_vfprintf& (0+255),b
  1227   00393A                     
  1228                           ; BSR set to: 0
  1229   00393A  0012               	return		;funcret
  1230   00393C                     __end_of_vfprintf:
  1231                           	callstack 0
  1232                           
  1233 ;; *************** function _vfpfcnvrt *****************
  1234 ;; Defined at:
  1235 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1238 ;;		 -> sprintf@f(11), 
  1239 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1240 ;;		 -> vfprintf@cfmt(2), 
  1241 ;;  ap              2   70[COMRAM] PTR PTR void 
  1242 ;;		 -> sprintf@ap(2), 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  convarg         8   44[BANK0 ] struct .
  1245 ;;  cp              2   53[BANK0 ] PTR unsigned char 
  1246 ;;		 -> STR_1(33), 
  1247 ;;  i               2    0        int 
  1248 ;;  done            2    0        int 
  1249 ;;  c               1   52[BANK0 ] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1259 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;      Totals:         8      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;Total ram usage:       19 bytes
  1264 ;; Hardware stack levels used: 1
  1265 ;; Hardware stack levels required when called: 7
  1266 ;; This function calls:
  1267 ;;		_dtoa
  1268 ;;		_efgtoa
  1269 ;;		_fputc
  1270 ;; This function is called by:
  1271 ;;		_vfprintf
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text3
  1276   0024AC                     __ptext3:
  1277                           	callstack 0
  1278   0024AC                     _vfpfcnvrt:
  1279                           	callstack 21
  1280   0024AC                     
  1281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1282   0024AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1283   0024B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1284   0024B4  CFDE FFF6          	movff	postinc2,tblptrl
  1285   0024B8  CFDD FFF7          	movff	postdec2,tblptrh
  1286   0024BC                     	if	0	;tblptru may be non-zero
  1287   0024BC                     	endif
  1288   0024BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1289   0024BC  0E00               	movlw	low (__mediumconst shr (0+16))
  1290   0024BE  6EF8               	movwf	tblptru,c
  1291   0024C0                     	endif
  1292   0024C0  0008               	tblrd		*
  1293   0024C2  50F5               	movf	tablat,w,c
  1294   0024C4  0A25               	xorlw	37
  1295   0024C6  A4D8               	btfss	status,2,c
  1296   0024C8  EF68  F012         	goto	u6121
  1297   0024CC  EF6A  F012         	goto	u6120
  1298   0024D0                     u6121:
  1299   0024D0  EFC2  F013         	goto	l5310
  1300   0024D4                     u6120:
  1301   0024D4                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1303   0024D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1304   0024D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1305   0024DC  2ADE               	incf	postinc2,f,c
  1306   0024DE  0E00               	movlw	0
  1307   0024E0  22DD               	addwfc	postdec2,f,c
  1308   0024E2                     
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1310   0024E2  0E00               	movlw	0
  1311   0024E4  0100               	movlb	0	; () banked
  1312   0024E6  6FC5               	movwf	(_width+1)& (0+255),b
  1313   0024E8  0E00               	movlw	0
  1314   0024EA  6FC4               	movwf	_width& (0+255),b
  1315   0024EC  C0C4  F04F         	movff	_width,_flags
  1316   0024F0                     
  1317                           ; BSR set to: 0
  1318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1319   0024F0  684D               	setf	_prec^0,c
  1320   0024F2  684E               	setf	(_prec+1)^0,c
  1321   0024F4                     
  1322                           ; BSR set to: 0
  1323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1324   0024F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1325   0024F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1326   0024FC  CFDE F095          	movff	postinc2,vfpfcnvrt@cp
  1327   002500  CFDD F096          	movff	postdec2,vfpfcnvrt@cp+1
  1328   002504                     
  1329                           ; BSR set to: 0
  1330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1331   002504  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1332   002508  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1333   00250C                     	if	0	;tblptru may be non-zero
  1334   00250C                     	endif
  1335   00250C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1336   00250C  0E00               	movlw	low (__mediumconst shr (0+16))
  1337   00250E  6EF8               	movwf	tblptru,c
  1338   002510                     	endif
  1339   002510  0008               	tblrd		*
  1340   002512  50F5               	movf	tablat,w,c
  1341   002514  0A64               	xorlw	100
  1342   002516  B4D8               	btfsc	status,2,c
  1343   002518  EF90  F012         	goto	u6131
  1344   00251C  EF92  F012         	goto	u6130
  1345   002520                     u6131:
  1346   002520  EFA2  F012         	goto	l5266
  1347   002524                     u6130:
  1348   002524                     
  1349                           ; BSR set to: 0
  1350   002524  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1351   002528  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1352   00252C                     	if	0	;tblptru may be non-zero
  1353   00252C                     	endif
  1354   00252C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1355   00252C  0E00               	movlw	low (__mediumconst shr (0+16))
  1356   00252E  6EF8               	movwf	tblptru,c
  1357   002530                     	endif
  1358   002530  0008               	tblrd		*
  1359   002532  50F5               	movf	tablat,w,c
  1360   002534  0A69               	xorlw	105
  1361   002536  A4D8               	btfss	status,2,c
  1362   002538  EFA0  F012         	goto	u6141
  1363   00253C  EFA2  F012         	goto	u6140
  1364   002540                     u6141:
  1365   002540  EFE5  F012         	goto	l5272
  1366   002544                     u6140:
  1367   002544                     l5266:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1371   002544  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1372   002548  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1373   00254C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1374   002550  0E02               	movlw	2
  1375   002552  26DE               	addwf	postinc2,f,c
  1376   002554  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1377   002558  0E00               	movlw	0
  1378   00255A  22DD               	addwfc	postdec2,f,c
  1379   00255C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1380   002560  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1381   002564  CFDE F08C          	movff	postinc2,vfpfcnvrt@convarg
  1382   002568  CFDD F08D          	movff	postdec2,vfpfcnvrt@convarg+1
  1383   00256C  0E00               	movlw	0
  1384   00256E  BF8D               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1385   002570  0EFF               	movlw	-1
  1386   002572  6F8E               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1387   002574  6F8F               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1388   002576  6F90               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1389   002578  6F91               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1390   00257A  6F92               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1391   00257C  6F93               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1394   00257E  0E01               	movlw	1
  1395   002580  2595               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1396   002582  6E49               	movwf	??_vfpfcnvrt^0,c
  1397   002584  0E00               	movlw	0
  1398   002586  2196               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1399   002588  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1400   00258A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401   00258E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402   002592  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1403   002596  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1404   00259A                     
  1405                           ; BSR set to: 0
  1406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1407   00259A  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1408   00259E  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1409   0025A2  C08C  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1410   0025A6  C08D  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1411   0025AA  C08E  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1412   0025AE  C08F  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1413   0025B2  C090  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1414   0025B6  C091  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1415   0025BA  C092  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1416   0025BE  C093  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1417   0025C2  ECD9  F013         	call	_dtoa	;wreg free
  1418   0025C6  EFD8  F013         	goto	l1087
  1419   0025CA                     l5272:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1423   0025CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1424   0025CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1425   0025D2  CFDE F095          	movff	postinc2,vfpfcnvrt@cp
  1426   0025D6  CFDD F096          	movff	postdec2,vfpfcnvrt@cp+1
  1427   0025DA                     
  1428                           ; BSR set to: 0
  1429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1430   0025DA  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1431   0025DE  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1432   0025E2                     	if	0	;tblptru may be non-zero
  1433   0025E2                     	endif
  1434   0025E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1435   0025E2  0E00               	movlw	low (__mediumconst shr (0+16))
  1436   0025E4  6EF8               	movwf	tblptru,c
  1437   0025E6                     	endif
  1438   0025E6  0008               	tblrd		*
  1439   0025E8  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1442   0025EC  EF04  F013         	goto	l5284
  1443   0025F0                     l5276:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1447   0025F0  4B95               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1448   0025F2  2B96               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1451   0025F4  EF1D  F013         	goto	l5286
  1452   0025F8                     l5278:
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1456   0025F8  0E6C               	movlw	108
  1457   0025FA  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  1458                           
  1459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1460   0025FC  EF1D  F013         	goto	l5286
  1461   002600                     l5280:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1465   002600  0E00               	movlw	0
  1466   002602  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1469   002604  EF1D  F013         	goto	l5286
  1470   002608                     l5284:
  1471                           
  1472                           ; BSR set to: 0
  1473   002608  5194               	movf	vfpfcnvrt@c& (0+255),w,b
  1474   00260A  6E49               	movwf	??_vfpfcnvrt^0,c
  1475   00260C  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1476                           
  1477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1478                           ; Switch size 1, requested type "simple"
  1479                           ; Number of cases is 1, Range of values is 0 to 0
  1480                           ; switch strategies available:
  1481                           ; Name         Instructions Cycles
  1482                           ; simple_byte            4     3 (average)
  1483                           ;	Chosen strategy is simple_byte
  1484   00260E  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1485   002610  0A00               	xorlw	0	; case 0
  1486   002612  B4D8               	btfsc	status,2,c
  1487   002614  EF0E  F013         	goto	l5628
  1488   002618  EF00  F013         	goto	l5280
  1489   00261C                     l5628:
  1490                           
  1491                           ; BSR set to: 0
  1492                           ; Switch size 1, requested type "simple"
  1493                           ; Number of cases is 3, Range of values is 76 to 108
  1494                           ; switch strategies available:
  1495                           ; Name         Instructions Cycles
  1496                           ; simple_byte           10     6 (average)
  1497                           ;	Chosen strategy is simple_byte
  1498   00261C  5049               	movf	??_vfpfcnvrt^0,w,c
  1499   00261E  0A4C               	xorlw	76	; case 76
  1500   002620  B4D8               	btfsc	status,2,c
  1501   002622  EFF8  F012         	goto	l5276
  1502   002626  0A2A               	xorlw	42	; case 102
  1503   002628  B4D8               	btfsc	status,2,c
  1504   00262A  EFFC  F012         	goto	l5278
  1505   00262E  0A0A               	xorlw	10	; case 108
  1506   002630  B4D8               	btfsc	status,2,c
  1507   002632  EFF8  F012         	goto	l5276
  1508   002636  EF00  F013         	goto	l5280
  1509   00263A                     l5286:
  1510                           
  1511                           ; BSR set to: 0
  1512   00263A  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1513   00263E  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1514   002642                     	if	0	;tblptru may be non-zero
  1515   002642                     	endif
  1516   002642                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1517   002642  0E00               	movlw	low (__mediumconst shr (0+16))
  1518   002644  6EF8               	movwf	tblptru,c
  1519   002646                     	endif
  1520   002646  0008               	tblrd		*
  1521   002648  50F5               	movf	tablat,w,c
  1522   00264A  0A66               	xorlw	102
  1523   00264C  A4D8               	btfss	status,2,c
  1524   00264E  EF2B  F013         	goto	u6151
  1525   002652  EF2D  F013         	goto	u6150
  1526   002656                     u6151:
  1527   002656  EFB9  F013         	goto	l5306
  1528   00265A                     u6150:
  1529   00265A  EF63  F013         	goto	l5294
  1530   00265E                     l5288:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1534   00265E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1535   002662  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1536   002666  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1537   00266A  0E04               	movlw	4
  1538   00266C  26DE               	addwf	postinc2,f,c
  1539   00266E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1540   002672  0E00               	movlw	0
  1541   002674  22DD               	addwfc	postdec2,f,c
  1542   002676  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1543   00267A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1544   00267E  CFDE F08C          	movff	postinc2,vfpfcnvrt@convarg
  1545   002682  CFDE F08D          	movff	postinc2,vfpfcnvrt@convarg+1
  1546   002686  CFDE F08E          	movff	postinc2,vfpfcnvrt@convarg+2
  1547   00268A  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg+3
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1550   00268E  EF78  F013         	goto	l5296
  1551   002692                     l5290:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1555   002692  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1556   002696  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1557   00269A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1558   00269E  0E04               	movlw	4
  1559   0026A0  26DE               	addwf	postinc2,f,c
  1560   0026A2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1561   0026A6  0E00               	movlw	0
  1562   0026A8  22DD               	addwfc	postdec2,f,c
  1563   0026AA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1564   0026AE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1565   0026B2  CFDE F08C          	movff	postinc2,vfpfcnvrt@convarg
  1566   0026B6  CFDE F08D          	movff	postinc2,vfpfcnvrt@convarg+1
  1567   0026BA  CFDE F08E          	movff	postinc2,vfpfcnvrt@convarg+2
  1568   0026BE  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg+3
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1571   0026C2  EF78  F013         	goto	l5296
  1572   0026C6                     l5294:
  1573                           
  1574                           ; BSR set to: 0
  1575   0026C6  5194               	movf	vfpfcnvrt@c& (0+255),w,b
  1576   0026C8  6E49               	movwf	??_vfpfcnvrt^0,c
  1577   0026CA  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1578                           
  1579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1580                           ; Switch size 1, requested type "simple"
  1581                           ; Number of cases is 1, Range of values is 0 to 0
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte            4     3 (average)
  1585                           ;	Chosen strategy is simple_byte
  1586   0026CC  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1587   0026CE  0A00               	xorlw	0	; case 0
  1588   0026D0  B4D8               	btfsc	status,2,c
  1589   0026D2  EF6D  F013         	goto	l5630
  1590   0026D6  EF78  F013         	goto	l5296
  1591   0026DA                     l5630:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ; Switch size 1, requested type "simple"
  1595                           ; Number of cases is 2, Range of values is 76 to 108
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte            7     4 (average)
  1599                           ;	Chosen strategy is simple_byte
  1600   0026DA  5049               	movf	??_vfpfcnvrt^0,w,c
  1601   0026DC  0A4C               	xorlw	76	; case 76
  1602   0026DE  B4D8               	btfsc	status,2,c
  1603   0026E0  EF49  F013         	goto	l5290
  1604   0026E4  0A20               	xorlw	32	; case 108
  1605   0026E6  B4D8               	btfsc	status,2,c
  1606   0026E8  EF2F  F013         	goto	l5288
  1607   0026EC  EF78  F013         	goto	l5296
  1608   0026F0                     l5296:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1612   0026F0  0E01               	movlw	1
  1613   0026F2  2595               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1614   0026F4  6E49               	movwf	??_vfpfcnvrt^0,c
  1615   0026F6  0E00               	movlw	0
  1616   0026F8  2196               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1617   0026FA  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1618   0026FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1619   002700  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1620   002704  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1621   002708  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1624   00270C  EFA1  F013         	goto	l5304
  1625   002710                     l5298:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1629   002710  C043  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  1630   002714  C044  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1631   002718  C08C  F034         	movff	vfpfcnvrt@convarg,efgtoa@f
  1632   00271C  C08D  F035         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1633   002720  C08E  F036         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1634   002724  C08F  F037         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1635   002728  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1636   00272C  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1637   002730                     	if	0	;tblptru may be non-zero
  1638   002730                     	endif
  1639   002730                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1640   002730  0E00               	movlw	low (__mediumconst shr (0+16))
  1641   002732  6EF8               	movwf	tblptru,c
  1642   002734                     	endif
  1643   002734  0008               	tblrd		*
  1644   002736  CFF5 F038          	movff	tablat,efgtoa@c
  1645   00273A  EC16  F007         	call	_efgtoa	;wreg free
  1646   00273E  EFD8  F013         	goto	l1087
  1647   002742                     l5304:
  1648                           
  1649                           ; BSR set to: 0
  1650   002742  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1651   002746  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1652   00274A                     	if	0	;tblptru may be non-zero
  1653   00274A                     	endif
  1654   00274A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1655   00274A  0E00               	movlw	low (__mediumconst shr (0+16))
  1656   00274C  6EF8               	movwf	tblptru,c
  1657   00274E                     	endif
  1658   00274E  0008               	tblrd		*
  1659   002750  50F5               	movf	tablat,w,c
  1660   002752  6E49               	movwf	??_vfpfcnvrt^0,c
  1661   002754  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1662                           
  1663                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1664                           ; Switch size 1, requested type "simple"
  1665                           ; Number of cases is 1, Range of values is 0 to 0
  1666                           ; switch strategies available:
  1667                           ; Name         Instructions Cycles
  1668                           ; simple_byte            4     3 (average)
  1669                           ;	Chosen strategy is simple_byte
  1670   002756  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1671   002758  0A00               	xorlw	0	; case 0
  1672   00275A  B4D8               	btfsc	status,2,c
  1673   00275C  EFB2  F013         	goto	l5632
  1674   002760  EFB9  F013         	goto	l5306
  1675   002764                     l5632:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 1, Range of values is 102 to 102
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte            4     3 (average)
  1683                           ;	Chosen strategy is simple_byte
  1684   002764  5049               	movf	??_vfpfcnvrt^0,w,c
  1685   002766  0A66               	xorlw	102	; case 102
  1686   002768  B4D8               	btfsc	status,2,c
  1687   00276A  EF88  F013         	goto	l5298
  1688   00276E  EFB9  F013         	goto	l5306
  1689   002772                     l5306:
  1690                           
  1691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1692   002772  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1693   002776  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1694   00277A  2ADE               	incf	postinc2,f,c
  1695   00277C  0E00               	movlw	0
  1696   00277E  22DD               	addwfc	postdec2,f,c
  1697   002780  EFD8  F013         	goto	l1087
  1698   002784                     l5310:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1701   002784  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1702   002788  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1703   00278C  CFDE FFF6          	movff	postinc2,tblptrl
  1704   002790  CFDD FFF7          	movff	postdec2,tblptrh
  1705   002794                     	if	0	;tblptru may be non-zero
  1706   002794                     	endif
  1707   002794                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1708   002794  0E00               	movlw	low (__mediumconst shr (0+16))
  1709   002796  6EF8               	movwf	tblptru,c
  1710   002798                     	endif
  1711   002798  0008               	tblrd		*
  1712   00279A  50F5               	movf	tablat,w,c
  1713   00279C  6E05               	movwf	fputc@c^0,c
  1714   00279E  6A06               	clrf	(fputc@c+1)^0,c
  1715   0027A0  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1716   0027A4  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1717   0027A8  ECB9  F01A         	call	_fputc	;wreg free
  1718   0027AC  EFB9  F013         	goto	l5306
  1719   0027B0                     l1087:
  1720   0027B0  0012               	return		;funcret
  1721   0027B2                     __end_of_vfpfcnvrt:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function _efgtoa *****************
  1725 ;; Defined at:
  1726 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  1729 ;;		 -> sprintf@f(11), 
  1730 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  1731 ;;  c               1   55[COMRAM] unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  u               4   40[BANK0 ] struct flui
  1734 ;;  g               4   34[BANK0 ] struct flui
  1735 ;;  l               4   29[BANK0 ] struct flui
  1736 ;;  h               4   25[BANK0 ] struct flui
  1737 ;;  ou              4   19[BANK0 ] struct flui
  1738 ;;  n               2   38[BANK0 ] int 
  1739 ;;  i               2   23[BANK0 ] int 
  1740 ;;  w               2   17[BANK0 ] int 
  1741 ;;  e               2   15[BANK0 ] int 
  1742 ;;  m               2   13[BANK0 ] int 
  1743 ;;  d               2   11[BANK0 ] int 
  1744 ;;  t               2    4[BANK0 ] int 
  1745 ;;  p               2    2[BANK0 ] int 
  1746 ;;  ne              2    0[BANK0 ] int 
  1747 ;;  sign            1   33[BANK0 ] unsigned char 
  1748 ;;  nmode           1   10[BANK0 ] unsigned char 
  1749 ;;  mode            1    9[BANK0 ] unsigned char 
  1750 ;;  pp              1    8[BANK0 ] unsigned char 
  1751 ;;  esign           1    0        unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1761 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1762 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;Total ram usage:       53 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 6
  1768 ;; This function calls:
  1769 ;;		___fladd
  1770 ;;		___fldiv
  1771 ;;		___fleq
  1772 ;;		___flge
  1773 ;;		___flmul
  1774 ;;		___flneg
  1775 ;;		___flsub
  1776 ;;		___fltol
  1777 ;;		___fpclassifyf
  1778 ;;		_floorf
  1779 ;;		_labs
  1780 ;;		_memcpy
  1781 ;;		_pad
  1782 ;;		_strcpy
  1783 ;; This function is called by:
  1784 ;;		_vfpfcnvrt
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text4
  1789   000E2C                     __ptext4:
  1790                           	callstack 0
  1791   000E2C                     _efgtoa:
  1792                           	callstack 21
  1793   000E2C                     
  1794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1795   000E2C  0E00               	movlw	0
  1796   000E2E  0100               	movlb	0	; () banked
  1797   000E30  6F81               	movwf	efgtoa@sign& (0+255),b
  1798   000E32                     
  1799                           ; BSR set to: 0
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1801   000E32  C034  F082         	movff	efgtoa@f,efgtoa@g
  1802   000E36  C035  F083         	movff	efgtoa@f+1,efgtoa@g+1
  1803   000E3A  C036  F084         	movff	efgtoa@f+2,efgtoa@g+2
  1804   000E3E  C037  F085         	movff	efgtoa@f+3,efgtoa@g+3
  1805   000E42                     
  1806                           ; BSR set to: 0
  1807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1808   000E42  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1809   000E44  EF28  F007         	goto	u5780
  1810   000E48  EF26  F007         	goto	u5781
  1811   000E4C                     u5781:
  1812   000E4C  EF3C  F007         	goto	l5010
  1813   000E50                     u5780:
  1814   000E50                     
  1815                           ; BSR set to: 0
  1816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1817   000E50  0E01               	movlw	1
  1818   000E52  6F81               	movwf	efgtoa@sign& (0+255),b
  1819   000E54                     
  1820                           ; BSR set to: 0
  1821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1822   000E54  C082  F005         	movff	efgtoa@g,___flneg@f1
  1823   000E58  C083  F006         	movff	efgtoa@g+1,___flneg@f1+1
  1824   000E5C  C084  F007         	movff	efgtoa@g+2,___flneg@f1+2
  1825   000E60  C085  F008         	movff	efgtoa@g+3,___flneg@f1+3
  1826   000E64  EC57  F01E         	call	___flneg	;wreg free
  1827   000E68  C005  F082         	movff	?___flneg,efgtoa@g
  1828   000E6C  C006  F083         	movff	?___flneg+1,efgtoa@g+1
  1829   000E70  C007  F084         	movff	?___flneg+2,efgtoa@g+2
  1830   000E74  C008  F085         	movff	?___flneg+3,efgtoa@g+3
  1831   000E78                     l5010:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1834   000E78  0E00               	movlw	0
  1835   000E7A  0100               	movlb	0	; () banked
  1836   000E7C  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1837   000E7E  0E00               	movlw	0
  1838   000E80  6F86               	movwf	efgtoa@n& (0+255),b
  1839   000E82                     
  1840                           ; BSR set to: 0
  1841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1842   000E82  C0C4  F071         	movff	_width,efgtoa@w
  1843   000E86  C0C5  F072         	movff	_width+1,efgtoa@w+1
  1844   000E8A                     
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1847   000E8A  5181               	movf	efgtoa@sign& (0+255),w,b
  1848   000E8C  B4D8               	btfsc	status,2,c
  1849   000E8E  EF4B  F007         	goto	u5791
  1850   000E92  EF4D  F007         	goto	u5790
  1851   000E96                     u5791:
  1852   000E96  EF61  F007         	goto	l5024
  1853   000E9A                     u5790:
  1854   000E9A                     
  1855                           ; BSR set to: 0
  1856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1857   000E9A  5181               	movf	efgtoa@sign& (0+255),w,b
  1858   000E9C  A4D8               	btfss	status,2,c
  1859   000E9E  EF53  F007         	goto	u5801
  1860   000EA2  EF55  F007         	goto	u5800
  1861   000EA6                     u5801:
  1862   000EA6  EF5B  F007         	goto	l5020
  1863   000EAA                     u5800:
  1864   000EAA                     
  1865                           ; BSR set to: 0
  1866   000EAA  0E00               	movlw	0
  1867   000EAC  6F67               	movwf	(_efgtoa$1491+1)& (0+255),b
  1868   000EAE  0E2B               	movlw	43
  1869   000EB0  6F66               	movwf	_efgtoa$1491& (0+255),b
  1870   000EB2  EF5F  F007         	goto	l5022
  1871   000EB6                     l5020:
  1872                           
  1873                           ; BSR set to: 0
  1874   000EB6  0E00               	movlw	0
  1875   000EB8  6F67               	movwf	(_efgtoa$1491+1)& (0+255),b
  1876   000EBA  0E2D               	movlw	45
  1877   000EBC  6F66               	movwf	_efgtoa$1491& (0+255),b
  1878   000EBE                     l5022:
  1879                           
  1880                           ; BSR set to: 0
  1881   000EBE  C066  F081         	movff	_efgtoa$1491,efgtoa@sign
  1882   000EC2                     l5024:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1886   000EC2  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  1887   000EC6  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1888   000ECA  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1889   000ECE  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1890   000ED2  EC3A  F01A         	call	___fpclassifyf	;wreg free
  1891   000ED6  0405               	decf	?___fpclassifyf^0,w,c
  1892   000ED8  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  1893   000EDA  A4D8               	btfss	status,2,c
  1894   000EDC  EF72  F007         	goto	u5811
  1895   000EE0  EF74  F007         	goto	u5810
  1896   000EE4                     u5811:
  1897   000EE4  EFA7  F007         	goto	l5042
  1898   000EE8                     u5810:
  1899   000EE8                     
  1900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1901   000EE8  0100               	movlb	0	; () banked
  1902   000EEA  5181               	movf	efgtoa@sign& (0+255),w,b
  1903   000EEC  B4D8               	btfsc	status,2,c
  1904   000EEE  EF7B  F007         	goto	u5821
  1905   000EF2  EF7D  F007         	goto	u5820
  1906   000EF6                     u5821:
  1907   000EF6  EF86  F007         	goto	l5034
  1908   000EFA                     u5820:
  1909   000EFA                     
  1910                           ; BSR set to: 0
  1911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1912   000EFA  C081  F150         	movff	efgtoa@sign,_dbuf
  1913   000EFE                     
  1914                           ; BSR set to: 0
  1915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1916   000EFE  0771               	decf	efgtoa@w& (0+255),f,b
  1917   000F00  A0D8               	btfss	status,0,c
  1918   000F02  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1919   000F04                     
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1922   000F04  0E00               	movlw	0
  1923   000F06  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1924   000F08  0E01               	movlw	1
  1925   000F0A  6F86               	movwf	efgtoa@n& (0+255),b
  1926   000F0C                     l5034:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1930   000F0C  0E50               	movlw	low _dbuf
  1931   000F0E  2586               	addwf	efgtoa@n& (0+255),w,b
  1932   000F10  6E05               	movwf	strcpy@dest^0,c
  1933   000F12  0E01               	movlw	high _dbuf
  1934   000F14  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1935   000F16  6E06               	movwf	(strcpy@dest+1)^0,c
  1936   000F18  0E22               	movlw	low STR_2
  1937   000F1A  6E07               	movwf	strcpy@src^0,c
  1938   000F1C  0E0E               	movlw	high STR_2
  1939   000F1E  6E08               	movwf	(strcpy@src+1)^0,c
  1940   000F20  ECB2  F01D         	call	_strcpy	;wreg free
  1941   000F24                     l5036:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1944   000F24  0100               	movlb	0	; () banked
  1945   000F26  0EFD               	movlw	253
  1946   000F28  2771               	addwf	efgtoa@w& (0+255),f,b
  1947   000F2A  0EFF               	movlw	255
  1948   000F2C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1949   000F2E                     
  1950                           ; BSR set to: 0
  1951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1952   000F2E  C032  F015         	movff	efgtoa@fp,pad@fp
  1953   000F32  C033  F016         	movff	efgtoa@fp+1,pad@fp+1
  1954   000F36  0E50               	movlw	low _dbuf
  1955   000F38  6E17               	movwf	pad@buf^0,c
  1956   000F3A  0E01               	movlw	high _dbuf
  1957   000F3C  6E18               	movwf	(pad@buf+1)^0,c
  1958   000F3E  C071  F019         	movff	efgtoa@w,pad@p
  1959   000F42  C072  F01A         	movff	efgtoa@w+1,pad@p+1
  1960   000F46  ECD5  F01B         	call	_pad	;wreg free
  1961   000F4A  EF13  F00C         	goto	l1039
  1962   000F4E                     l5042:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1965   000F4E  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  1966   000F52  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1967   000F56  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1968   000F5A  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1969   000F5E  EC3A  F01A         	call	___fpclassifyf	;wreg free
  1970   000F62  5005               	movf	?___fpclassifyf^0,w,c
  1971   000F64  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  1972   000F66  A4D8               	btfss	status,2,c
  1973   000F68  EFB8  F007         	goto	u5831
  1974   000F6C  EFBA  F007         	goto	u5830
  1975   000F70                     u5831:
  1976   000F70  EFDA  F007         	goto	l5060
  1977   000F74                     u5830:
  1978   000F74                     
  1979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  1980   000F74  0100               	movlb	0	; () banked
  1981   000F76  5181               	movf	efgtoa@sign& (0+255),w,b
  1982   000F78  B4D8               	btfsc	status,2,c
  1983   000F7A  EFC1  F007         	goto	u5841
  1984   000F7E  EFC3  F007         	goto	u5840
  1985   000F82                     u5841:
  1986   000F82  EFCC  F007         	goto	l5052
  1987   000F86                     u5840:
  1988   000F86                     
  1989                           ; BSR set to: 0
  1990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  1991   000F86  C081  F150         	movff	efgtoa@sign,_dbuf
  1992   000F8A                     
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  1995   000F8A  0771               	decf	efgtoa@w& (0+255),f,b
  1996   000F8C  A0D8               	btfss	status,0,c
  1997   000F8E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1998   000F90                     
  1999                           ; BSR set to: 0
  2000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2001   000F90  0E00               	movlw	0
  2002   000F92  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2003   000F94  0E01               	movlw	1
  2004   000F96  6F86               	movwf	efgtoa@n& (0+255),b
  2005   000F98                     l5052:
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2009   000F98  0E50               	movlw	low _dbuf
  2010   000F9A  2586               	addwf	efgtoa@n& (0+255),w,b
  2011   000F9C  6E05               	movwf	strcpy@dest^0,c
  2012   000F9E  0E01               	movlw	high _dbuf
  2013   000FA0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2014   000FA2  6E06               	movwf	(strcpy@dest+1)^0,c
  2015   000FA4  0E26               	movlw	low STR_5
  2016   000FA6  6E07               	movwf	strcpy@src^0,c
  2017   000FA8  0E0E               	movlw	high STR_5
  2018   000FAA  6E08               	movwf	(strcpy@src+1)^0,c
  2019   000FAC  ECB2  F01D         	call	_strcpy	;wreg free
  2020   000FB0  EF92  F007         	goto	l5036
  2021   000FB4                     l5060:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2024   000FB4  0E00               	movlw	0
  2025   000FB6  0100               	movlb	0	; () banked
  2026   000FB8  6F88               	movwf	efgtoa@u& (0+255),b
  2027   000FBA  0E00               	movlw	0
  2028   000FBC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2029   000FBE  0E80               	movlw	128
  2030   000FC0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2031   000FC2  0E3F               	movlw	63
  2032   000FC4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2035   000FC6  0E00               	movlw	0
  2036   000FC8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2037   000FCA  0E00               	movlw	0
  2038   000FCC  6F6F               	movwf	efgtoa@e& (0+255),b
  2039   000FCE                     
  2040                           ; BSR set to: 0
  2041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2042   000FCE  C082  F005         	movff	efgtoa@g,___fleq@ff1
  2043   000FD2  C083  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2044   000FD6  C084  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2045   000FDA  C085  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2046   000FDE  0E00               	movlw	0
  2047   000FE0  6E09               	movwf	___fleq@ff2^0,c
  2048   000FE2  0E00               	movlw	0
  2049   000FE4  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2050   000FE6  0E00               	movlw	0
  2051   000FE8  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2052   000FEA  0E00               	movlw	0
  2053   000FEC  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2054   000FEE  EC80  F01B         	call	___fleq	;wreg free
  2055   000FF2  B0D8               	btfsc	status,0,c
  2056   000FF4  EFFE  F007         	goto	u5851
  2057   000FF8  EF00  F008         	goto	u5850
  2058   000FFC                     u5851:
  2059   000FFC  EFDF  F008         	goto	l1042
  2060   001000                     u5850:
  2061   001000  EF0D  F008         	goto	l5068
  2062   001004                     l1044:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2065   001004  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2066   001008  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2067   00100C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2068   001010  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2069   001014                     
  2070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2071   001014  0100               	movlb	0	; () banked
  2072   001016  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2073   001018  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2074   00101A                     l5068:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2077   00101A  C088  F005         	movff	efgtoa@u,___flmul@b
  2078   00101E  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2079   001022  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2080   001026  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2081   00102A  0E00               	movlw	0
  2082   00102C  6E09               	movwf	___flmul@a^0,c
  2083   00102E  0E00               	movlw	0
  2084   001030  6E0A               	movwf	(___flmul@a+1)^0,c
  2085   001032  0E20               	movlw	32
  2086   001034  6E0B               	movwf	(___flmul@a+2)^0,c
  2087   001036  0E41               	movlw	65
  2088   001038  6E0C               	movwf	(___flmul@a+3)^0,c
  2089   00103A  EC74  F00E         	call	___flmul	;wreg free
  2090   00103E  C005  F073         	movff	?___flmul,efgtoa@ou
  2091   001042  C006  F074         	movff	?___flmul+1,efgtoa@ou+1
  2092   001046  C007  F075         	movff	?___flmul+2,efgtoa@ou+2
  2093   00104A  C008  F076         	movff	?___flmul+3,efgtoa@ou+3
  2094   00104E  0100               	movlb	0	; () banked
  2095   001050  5173               	movf	efgtoa@ou& (0+255),w,b
  2096   001052  5D82               	subwf	efgtoa@g& (0+255),w,b
  2097   001054  6E05               	movwf	labs@a^0,c
  2098   001056  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2099   001058  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2100   00105A  6E06               	movwf	(labs@a+1)^0,c
  2101   00105C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2102   00105E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2103   001060  6E07               	movwf	(labs@a+2)^0,c
  2104   001062  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2105   001064  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2106   001066  6E08               	movwf	(labs@a+3)^0,c
  2107   001068  EC12  F01C         	call	_labs	;wreg free
  2108   00106C  BE08               	btfsc	(?_labs+3)^0,7,c
  2109   00106E  EF44  F008         	goto	u5861
  2110   001072  5008               	movf	(?_labs+3)^0,w,c
  2111   001074  1007               	iorwf	(?_labs+2)^0,w,c
  2112   001076  1006               	iorwf	(?_labs+1)^0,w,c
  2113   001078  E109               	bnz	u5860
  2114   00107A  0E02               	movlw	2
  2115   00107C  5C05               	subwf	?_labs^0,w,c
  2116   00107E  A0D8               	btfss	status,0,c
  2117   001080  EF44  F008         	goto	u5861
  2118   001084  EF46  F008         	goto	u5860
  2119   001088                     u5861:
  2120   001088  EF02  F008         	goto	l1044
  2121   00108C                     u5860:
  2122   00108C  C073  F01E         	movff	efgtoa@ou,___flge@ff1
  2123   001090  C074  F01F         	movff	efgtoa@ou+1,___flge@ff1+1
  2124   001094  C075  F020         	movff	efgtoa@ou+2,___flge@ff1+2
  2125   001098  C076  F021         	movff	efgtoa@ou+3,___flge@ff1+3
  2126   00109C  C082  F022         	movff	efgtoa@g,___flge@ff2
  2127   0010A0  C083  F023         	movff	efgtoa@g+1,___flge@ff2+1
  2128   0010A4  C084  F024         	movff	efgtoa@g+2,___flge@ff2+2
  2129   0010A8  C085  F025         	movff	efgtoa@g+3,___flge@ff2+3
  2130   0010AC  ECB8  F019         	call	___flge	;wreg free
  2131   0010B0  A0D8               	btfss	status,0,c
  2132   0010B2  EF5D  F008         	goto	u5871
  2133   0010B6  EF5F  F008         	goto	u5870
  2134   0010BA                     u5871:
  2135   0010BA  EF02  F008         	goto	l1044
  2136   0010BE                     u5870:
  2137   0010BE                     
  2138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2139   0010BE  0100               	movlb	0	; () banked
  2140   0010C0  5188               	movf	efgtoa@u& (0+255),w,b
  2141   0010C2  5D82               	subwf	efgtoa@g& (0+255),w,b
  2142   0010C4  6E05               	movwf	labs@a^0,c
  2143   0010C6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2144   0010C8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2145   0010CA  6E06               	movwf	(labs@a+1)^0,c
  2146   0010CC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2147   0010CE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2148   0010D0  6E07               	movwf	(labs@a+2)^0,c
  2149   0010D2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2150   0010D4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2151   0010D6  6E08               	movwf	(labs@a+3)^0,c
  2152   0010D8  EC12  F01C         	call	_labs	;wreg free
  2153   0010DC  BE08               	btfsc	(?_labs+3)^0,7,c
  2154   0010DE  EF7E  F008         	goto	u5880
  2155   0010E2  5008               	movf	(?_labs+3)^0,w,c
  2156   0010E4  1007               	iorwf	(?_labs+2)^0,w,c
  2157   0010E6  1006               	iorwf	(?_labs+1)^0,w,c
  2158   0010E8  E107               	bnz	u5881
  2159   0010EA  0E02               	movlw	2
  2160   0010EC  5C05               	subwf	?_labs^0,w,c
  2161   0010EE  B0D8               	btfsc	status,0,c
  2162   0010F0  EF7C  F008         	goto	u5881
  2163   0010F4  EF7E  F008         	goto	u5880
  2164   0010F8                     u5881:
  2165   0010F8  EFC6  F008         	goto	l5086
  2166   0010FC                     u5880:
  2167   0010FC                     l5076:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2170   0010FC  C088  F082         	movff	efgtoa@u,efgtoa@g
  2171   001100  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2172   001104  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2173   001108  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2176   00110C  EFDF  F008         	goto	l1042
  2177   001110                     l5078:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2180   001110  C088  F005         	movff	efgtoa@u,___fldiv@b
  2181   001114  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2182   001118  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2183   00111C  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2184   001120  0E00               	movlw	0
  2185   001122  6E09               	movwf	___fldiv@a^0,c
  2186   001124  0E00               	movlw	0
  2187   001126  6E0A               	movwf	(___fldiv@a+1)^0,c
  2188   001128  0E20               	movlw	32
  2189   00112A  6E0B               	movwf	(___fldiv@a+2)^0,c
  2190   00112C  0E41               	movlw	65
  2191   00112E  6E0C               	movwf	(___fldiv@a+3)^0,c
  2192   001130  EC89  F010         	call	___fldiv	;wreg free
  2193   001134  C005  F088         	movff	?___fldiv,efgtoa@u
  2194   001138  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2195   00113C  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2196   001140  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2197   001144                     
  2198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2199   001144  0100               	movlb	0	; () banked
  2200   001146  076F               	decf	efgtoa@e& (0+255),f,b
  2201   001148  A0D8               	btfss	status,0,c
  2202   00114A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2203   00114C                     
  2204                           ; BSR set to: 0
  2205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2206   00114C  5188               	movf	efgtoa@u& (0+255),w,b
  2207   00114E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2208   001150  6E05               	movwf	labs@a^0,c
  2209   001152  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2210   001154  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2211   001156  6E06               	movwf	(labs@a+1)^0,c
  2212   001158  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2213   00115A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2214   00115C  6E07               	movwf	(labs@a+2)^0,c
  2215   00115E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2216   001160  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2217   001162  6E08               	movwf	(labs@a+3)^0,c
  2218   001164  EC12  F01C         	call	_labs	;wreg free
  2219   001168  BE08               	btfsc	(?_labs+3)^0,7,c
  2220   00116A  EFC4  F008         	goto	u5890
  2221   00116E  5008               	movf	(?_labs+3)^0,w,c
  2222   001170  1007               	iorwf	(?_labs+2)^0,w,c
  2223   001172  1006               	iorwf	(?_labs+1)^0,w,c
  2224   001174  E107               	bnz	u5891
  2225   001176  0E02               	movlw	2
  2226   001178  5C05               	subwf	?_labs^0,w,c
  2227   00117A  B0D8               	btfsc	status,0,c
  2228   00117C  EFC2  F008         	goto	u5891
  2229   001180  EFC4  F008         	goto	u5890
  2230   001184                     u5891:
  2231   001184  EFC6  F008         	goto	l5086
  2232   001188                     u5890:
  2233   001188  EF7E  F008         	goto	l5076
  2234   00118C                     l5086:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2237   00118C  C082  F01E         	movff	efgtoa@g,___flge@ff1
  2238   001190  C083  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2239   001194  C084  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2240   001198  C085  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2241   00119C  C088  F022         	movff	efgtoa@u,___flge@ff2
  2242   0011A0  C089  F023         	movff	efgtoa@u+1,___flge@ff2+1
  2243   0011A4  C08A  F024         	movff	efgtoa@u+2,___flge@ff2+2
  2244   0011A8  C08B  F025         	movff	efgtoa@u+3,___flge@ff2+3
  2245   0011AC  ECB8  F019         	call	___flge	;wreg free
  2246   0011B0  A0D8               	btfss	status,0,c
  2247   0011B2  EFDD  F008         	goto	u5901
  2248   0011B6  EFDF  F008         	goto	u5900
  2249   0011BA                     u5901:
  2250   0011BA  EF88  F008         	goto	l5078
  2251   0011BE                     u5900:
  2252   0011BE                     l1042:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2255   0011BE  C038  F069         	movff	efgtoa@c,efgtoa@mode
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2258   0011C2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2259   0011C6                     
  2260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2261   0011C6  BE4E               	btfsc	(_prec+1)^0,7,c
  2262   0011C8  EFE8  F008         	goto	u5911
  2263   0011CC  EFEA  F008         	goto	u5910
  2264   0011D0                     u5911:
  2265   0011D0  EFF0  F008         	goto	l5092
  2266   0011D4                     u5910:
  2267   0011D4  C04D  F062         	movff	_prec,efgtoa@p
  2268   0011D8  C04E  F063         	movff	_prec+1,efgtoa@p+1
  2269   0011DC  EFF5  F008         	goto	l5094
  2270   0011E0                     l5092:
  2271   0011E0  0E00               	movlw	0
  2272   0011E2  0100               	movlb	0	; () banked
  2273   0011E4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2274   0011E6  0E06               	movlw	6
  2275   0011E8  6F62               	movwf	efgtoa@p& (0+255),b
  2276   0011EA                     l5094:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2279   0011EA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2280   0011EE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2281   0011F2                     
  2282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2283   0011F2  0100               	movlb	0	; () banked
  2284   0011F4  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2285   0011F6  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2286   0011F8                     
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2289   0011F8  0E66               	movlw	102
  2290   0011FA  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2291   0011FC  A4D8               	btfss	status,2,c
  2292   0011FE  EF03  F009         	goto	u5921
  2293   001202  EF05  F009         	goto	u5920
  2294   001206                     u5921:
  2295   001206  EF25  F009         	goto	l5108
  2296   00120A                     u5920:
  2297   00120A                     
  2298                           ; BSR set to: 0
  2299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2300   00120A  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2301   00120C  EF0C  F009         	goto	u5930
  2302   001210  EF0A  F009         	goto	u5931
  2303   001214                     u5931:
  2304   001214  EF18  F009         	goto	l5104
  2305   001218                     u5930:
  2306   001218                     
  2307                           ; BSR set to: 0
  2308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2309   001218  0E00               	movlw	0
  2310   00121A  6F88               	movwf	efgtoa@u& (0+255),b
  2311   00121C  0E00               	movlw	0
  2312   00121E  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2313   001220  0E80               	movlw	128
  2314   001222  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2315   001224  0E3F               	movlw	63
  2316   001226  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2319   001228  0E00               	movlw	0
  2320   00122A  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2321   00122C  0E00               	movlw	0
  2322   00122E  6F6F               	movwf	efgtoa@e& (0+255),b
  2323   001230                     l5104:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2327   001230  0E67               	movlw	103
  2328   001232  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2329   001234  B4D8               	btfsc	status,2,c
  2330   001236  EF1F  F009         	goto	u5941
  2331   00123A  EF21  F009         	goto	u5940
  2332   00123E                     u5941:
  2333   00123E  EF25  F009         	goto	l5108
  2334   001242                     u5940:
  2335   001242                     
  2336                           ; BSR set to: 0
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2338   001242  516F               	movf	efgtoa@e& (0+255),w,b
  2339   001244  276D               	addwf	efgtoa@m& (0+255),f,b
  2340   001246  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2341   001248  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2342   00124A                     l5108:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2346   00124A  0E00               	movlw	0
  2347   00124C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2348   00124E  0E00               	movlw	0
  2349   001250  6F77               	movwf	efgtoa@i& (0+255),b
  2350   001252                     
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2353   001252  C082  F079         	movff	efgtoa@g,efgtoa@h
  2354   001256  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2355   00125A  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2356   00125E  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2357   001262                     
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2360   001262  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2361   001266  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2362   00126A  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2363   00126E  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2366   001272  EFB6  F009         	goto	l5122
  2367   001276                     l5114:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2371   001276  C079  F005         	movff	efgtoa@h,___fldiv@b
  2372   00127A  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2373   00127E  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2374   001282  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2375   001286  C088  F009         	movff	efgtoa@u,___fldiv@a
  2376   00128A  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2377   00128E  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2378   001292  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2379   001296  EC89  F010         	call	___fldiv	;wreg free
  2380   00129A  C005  F01E         	movff	?___fldiv,floorf@x
  2381   00129E  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2382   0012A2  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2383   0012A6  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2384   0012AA  EC17  F015         	call	_floorf	;wreg free
  2385   0012AE  C01E  F07D         	movff	?_floorf,efgtoa@l
  2386   0012B2  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  2387   0012B6  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  2388   0012BA  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2391   0012BE  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2392   0012C2  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2393   0012C6  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2394   0012CA  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2395   0012CE  EC35  F019         	call	___fltol	;wreg free
  2396   0012D2  C005  F06B         	movff	?___fltol,efgtoa@d
  2397   0012D6  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  2398   0012DA                     
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2400   0012DA  C079  F01E         	movff	efgtoa@h,___flsub@b
  2401   0012DE  C07A  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2402   0012E2  C07B  F020         	movff	efgtoa@h+2,___flsub@b+2
  2403   0012E6  C07C  F021         	movff	efgtoa@h+3,___flsub@b+3
  2404   0012EA  C07D  F009         	movff	efgtoa@l,___flmul@a
  2405   0012EE  C07E  F00A         	movff	efgtoa@l+1,___flmul@a+1
  2406   0012F2  C07F  F00B         	movff	efgtoa@l+2,___flmul@a+2
  2407   0012F6  C080  F00C         	movff	efgtoa@l+3,___flmul@a+3
  2408   0012FA  C088  F005         	movff	efgtoa@u,___flmul@b
  2409   0012FE  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2410   001302  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2411   001306  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2412   00130A  EC74  F00E         	call	___flmul	;wreg free
  2413   00130E  C005  F022         	movff	?___flmul,___flsub@a
  2414   001312  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2415   001316  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2416   00131A  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2417   00131E  EC8F  F01D         	call	___flsub	;wreg free
  2418   001322  C01E  F079         	movff	?___flsub,efgtoa@h
  2419   001326  C01F  F07A         	movff	?___flsub+1,efgtoa@h+1
  2420   00132A  C020  F07B         	movff	?___flsub+2,efgtoa@h+2
  2421   00132E  C021  F07C         	movff	?___flsub+3,efgtoa@h+3
  2422   001332                     
  2423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2424   001332  C088  F005         	movff	efgtoa@u,___fldiv@b
  2425   001336  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2426   00133A  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2427   00133E  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2428   001342  0E00               	movlw	0
  2429   001344  6E09               	movwf	___fldiv@a^0,c
  2430   001346  0E00               	movlw	0
  2431   001348  6E0A               	movwf	(___fldiv@a+1)^0,c
  2432   00134A  0E20               	movlw	32
  2433   00134C  6E0B               	movwf	(___fldiv@a+2)^0,c
  2434   00134E  0E41               	movlw	65
  2435   001350  6E0C               	movwf	(___fldiv@a+3)^0,c
  2436   001352  EC89  F010         	call	___fldiv	;wreg free
  2437   001356  C005  F088         	movff	?___fldiv,efgtoa@u
  2438   00135A  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2439   00135E  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2440   001362  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2441   001366                     
  2442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2443   001366  0100               	movlb	0	; () banked
  2444   001368  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2445   00136A  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2446   00136C                     l5122:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2450   00136C  516D               	movf	efgtoa@m& (0+255),w,b
  2451   00136E  5D77               	subwf	efgtoa@i& (0+255),w,b
  2452   001370  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2453   001372  0A80               	xorlw	128
  2454   001374  6E39               	movwf	??_efgtoa^0,c
  2455   001376  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2456   001378  0A80               	xorlw	128
  2457   00137A  5839               	subwfb	??_efgtoa^0,w,c
  2458   00137C  A0D8               	btfss	status,0,c
  2459   00137E  EFC3  F009         	goto	u5951
  2460   001382  EFC5  F009         	goto	u5950
  2461   001386                     u5951:
  2462   001386  EF3B  F009         	goto	l5114
  2463   00138A                     u5950:
  2464   00138A                     
  2465                           ; BSR set to: 0
  2466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2467   00138A  C088  F005         	movff	efgtoa@u,___flmul@b
  2468   00138E  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2469   001392  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2470   001396  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2471   00139A  0E00               	movlw	0
  2472   00139C  6E09               	movwf	___flmul@a^0,c
  2473   00139E  0E00               	movlw	0
  2474   0013A0  6E0A               	movwf	(___flmul@a+1)^0,c
  2475   0013A2  0EA0               	movlw	160
  2476   0013A4  6E0B               	movwf	(___flmul@a+2)^0,c
  2477   0013A6  0E40               	movlw	64
  2478   0013A8  6E0C               	movwf	(___flmul@a+3)^0,c
  2479   0013AA  EC74  F00E         	call	___flmul	;wreg free
  2480   0013AE  C005  F07D         	movff	?___flmul,efgtoa@l
  2481   0013B2  C006  F07E         	movff	?___flmul+1,efgtoa@l+1
  2482   0013B6  C007  F07F         	movff	?___flmul+2,efgtoa@l+2
  2483   0013BA  C008  F080         	movff	?___flmul+3,efgtoa@l+3
  2484   0013BE                     
  2485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2486   0013BE  C079  F01E         	movff	efgtoa@h,___flge@ff1
  2487   0013C2  C07A  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  2488   0013C6  C07B  F020         	movff	efgtoa@h+2,___flge@ff1+2
  2489   0013CA  C07C  F021         	movff	efgtoa@h+3,___flge@ff1+3
  2490   0013CE  C07D  F022         	movff	efgtoa@l,___flge@ff2
  2491   0013D2  C07E  F023         	movff	efgtoa@l+1,___flge@ff2+1
  2492   0013D6  C07F  F024         	movff	efgtoa@l+2,___flge@ff2+2
  2493   0013DA  C080  F025         	movff	efgtoa@l+3,___flge@ff2+3
  2494   0013DE  ECB8  F019         	call	___flge	;wreg free
  2495   0013E2  B0D8               	btfsc	status,0,c
  2496   0013E4  EFF6  F009         	goto	u5961
  2497   0013E8  EFF8  F009         	goto	u5960
  2498   0013EC                     u5961:
  2499   0013EC  EF03  F00A         	goto	l5130
  2500   0013F0                     u5960:
  2501   0013F0                     
  2502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2503   0013F0  0E00               	movlw	0
  2504   0013F2  0100               	movlb	0	; () banked
  2505   0013F4  6F7D               	movwf	efgtoa@l& (0+255),b
  2506   0013F6  0E00               	movlw	0
  2507   0013F8  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2508   0013FA  0E00               	movlw	0
  2509   0013FC  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2510   0013FE  0E00               	movlw	0
  2511   001400  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2514   001402  EF2C  F00A         	goto	l5136
  2515   001406                     l5130:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2518   001406  C079  F005         	movff	efgtoa@h,___fleq@ff1
  2519   00140A  C07A  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  2520   00140E  C07B  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  2521   001412  C07C  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  2522   001416  C07D  F009         	movff	efgtoa@l,___fleq@ff2
  2523   00141A  C07E  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  2524   00141E  C07F  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  2525   001422  C080  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  2526   001426  EC80  F01B         	call	___fleq	;wreg free
  2527   00142A  A0D8               	btfss	status,0,c
  2528   00142C  EF1A  F00A         	goto	u5971
  2529   001430  EF1C  F00A         	goto	u5970
  2530   001434                     u5971:
  2531   001434  EF2C  F00A         	goto	l5136
  2532   001438                     u5970:
  2533   001438  0100               	movlb	0	; () banked
  2534   00143A  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2535   00143C  EF22  F00A         	goto	u5981
  2536   001440  EF24  F00A         	goto	u5980
  2537   001444                     u5981:
  2538   001444  EF2C  F00A         	goto	l5136
  2539   001448                     u5980:
  2540   001448                     
  2541                           ; BSR set to: 0
  2542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2543   001448  0E00               	movlw	0
  2544   00144A  6F7D               	movwf	efgtoa@l& (0+255),b
  2545   00144C  0E00               	movlw	0
  2546   00144E  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2547   001450  0E00               	movlw	0
  2548   001452  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2549   001454  0E00               	movlw	0
  2550   001456  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2551   001458                     l5136:
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2554   001458  C082  F005         	movff	efgtoa@g,___fladd@b
  2555   00145C  C083  F006         	movff	efgtoa@g+1,___fladd@b+1
  2556   001460  C084  F007         	movff	efgtoa@g+2,___fladd@b+2
  2557   001464  C085  F008         	movff	efgtoa@g+3,___fladd@b+3
  2558   001468  C07D  F009         	movff	efgtoa@l,___fladd@a
  2559   00146C  C07E  F00A         	movff	efgtoa@l+1,___fladd@a+1
  2560   001470  C07F  F00B         	movff	efgtoa@l+2,___fladd@a+2
  2561   001474  C080  F00C         	movff	efgtoa@l+3,___fladd@a+3
  2562   001478  EC14  F00C         	call	___fladd	;wreg free
  2563   00147C  C005  F079         	movff	?___fladd,efgtoa@h
  2564   001480  C006  F07A         	movff	?___fladd+1,efgtoa@h+1
  2565   001484  C007  F07B         	movff	?___fladd+2,efgtoa@h+2
  2566   001488  C008  F07C         	movff	?___fladd+3,efgtoa@h+3
  2567   00148C                     
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2569   00148C  C079  F01E         	movff	efgtoa@h,___flge@ff1
  2570   001490  C07A  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  2571   001494  C07B  F020         	movff	efgtoa@h+2,___flge@ff1+2
  2572   001498  C07C  F021         	movff	efgtoa@h+3,___flge@ff1+3
  2573   00149C  0E00               	movlw	0
  2574   00149E  6E09               	movwf	___flmul@a^0,c
  2575   0014A0  0E00               	movlw	0
  2576   0014A2  6E0A               	movwf	(___flmul@a+1)^0,c
  2577   0014A4  0E20               	movlw	32
  2578   0014A6  6E0B               	movwf	(___flmul@a+2)^0,c
  2579   0014A8  0E41               	movlw	65
  2580   0014AA  6E0C               	movwf	(___flmul@a+3)^0,c
  2581   0014AC  C073  F005         	movff	efgtoa@ou,___flmul@b
  2582   0014B0  C074  F006         	movff	efgtoa@ou+1,___flmul@b+1
  2583   0014B4  C075  F007         	movff	efgtoa@ou+2,___flmul@b+2
  2584   0014B8  C076  F008         	movff	efgtoa@ou+3,___flmul@b+3
  2585   0014BC  EC74  F00E         	call	___flmul	;wreg free
  2586   0014C0  C005  F022         	movff	?___flmul,___flge@ff2
  2587   0014C4  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  2588   0014C8  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  2589   0014CC  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  2590   0014D0  ECB8  F019         	call	___flge	;wreg free
  2591   0014D4  A0D8               	btfss	status,0,c
  2592   0014D6  EF6F  F00A         	goto	u5991
  2593   0014DA  EF71  F00A         	goto	u5990
  2594   0014DE                     u5991:
  2595   0014DE  EF9A  F00A         	goto	l5148
  2596   0014E2                     u5990:
  2597   0014E2                     
  2598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2599   0014E2  0100               	movlb	0	; () banked
  2600   0014E4  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2601   0014E6  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2602   0014E8                     
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2605   0014E8  C073  F005         	movff	efgtoa@ou,___flmul@b
  2606   0014EC  C074  F006         	movff	efgtoa@ou+1,___flmul@b+1
  2607   0014F0  C075  F007         	movff	efgtoa@ou+2,___flmul@b+2
  2608   0014F4  C076  F008         	movff	efgtoa@ou+3,___flmul@b+3
  2609   0014F8  0E00               	movlw	0
  2610   0014FA  6E09               	movwf	___flmul@a^0,c
  2611   0014FC  0E00               	movlw	0
  2612   0014FE  6E0A               	movwf	(___flmul@a+1)^0,c
  2613   001500  0E20               	movlw	32
  2614   001502  6E0B               	movwf	(___flmul@a+2)^0,c
  2615   001504  0E41               	movlw	65
  2616   001506  6E0C               	movwf	(___flmul@a+3)^0,c
  2617   001508  EC74  F00E         	call	___flmul	;wreg free
  2618   00150C  C005  F073         	movff	?___flmul,efgtoa@ou
  2619   001510  C006  F074         	movff	?___flmul+1,efgtoa@ou+1
  2620   001514  C007  F075         	movff	?___flmul+2,efgtoa@ou+2
  2621   001518  C008  F076         	movff	?___flmul+3,efgtoa@ou+3
  2622   00151C                     
  2623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2624   00151C  0E66               	movlw	102
  2625   00151E  0100               	movlb	0	; () banked
  2626   001520  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2627   001522  A4D8               	btfss	status,2,c
  2628   001524  EF96  F00A         	goto	u6001
  2629   001528  EF98  F00A         	goto	u6000
  2630   00152C                     u6001:
  2631   00152C  EF9A  F00A         	goto	l5148
  2632   001530                     u6000:
  2633   001530                     
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2636   001530  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2637   001532  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2638   001534                     l5148:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2641   001534  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2642   001538  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2643   00153C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2644   001540  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2645   001544                     
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2647   001544  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2648   001548  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2649   00154C                     
  2650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2651   00154C  0E00               	movlw	0
  2652   00154E  0100               	movlb	0	; () banked
  2653   001550  6F68               	movwf	efgtoa@pp& (0+255),b
  2654   001552                     
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2657   001552  0E00               	movlw	0
  2658   001554  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2659   001556  0E00               	movlw	0
  2660   001558  6F64               	movwf	efgtoa@t& (0+255),b
  2661   00155A                     
  2662                           ; BSR set to: 0
  2663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2664   00155A  0E00               	movlw	0
  2665   00155C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2666   00155E  0E00               	movlw	0
  2667   001560  6F77               	movwf	efgtoa@i& (0+255),b
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2670   001562  EF98  F00B         	goto	l5198
  2671   001566                     l5158:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2675   001566  C079  F005         	movff	efgtoa@h,___fldiv@b
  2676   00156A  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2677   00156E  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2678   001572  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2679   001576  C088  F009         	movff	efgtoa@u,___fldiv@a
  2680   00157A  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2681   00157E  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2682   001582  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2683   001586  EC89  F010         	call	___fldiv	;wreg free
  2684   00158A  C005  F01E         	movff	?___fldiv,floorf@x
  2685   00158E  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2686   001592  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2687   001596  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2688   00159A  EC17  F015         	call	_floorf	;wreg free
  2689   00159E  C01E  F07D         	movff	?_floorf,efgtoa@l
  2690   0015A2  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  2691   0015A6  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  2692   0015AA  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2695   0015AE  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2696   0015B2  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2697   0015B6  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2698   0015BA  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2699   0015BE  EC35  F019         	call	___fltol	;wreg free
  2700   0015C2  BE06               	btfsc	(?___fltol+1)^0,7,c
  2701   0015C4  EFEF  F00A         	goto	u6010
  2702   0015C8  5006               	movf	(?___fltol+1)^0,w,c
  2703   0015CA  E107               	bnz	u6011
  2704   0015CC  0E0A               	movlw	10
  2705   0015CE  5C05               	subwf	?___fltol^0,w,c
  2706   0015D0  B0D8               	btfsc	status,0,c
  2707   0015D2  EFED  F00A         	goto	u6011
  2708   0015D6  EFEF  F00A         	goto	u6010
  2709   0015DA                     u6011:
  2710   0015DA  EFFF  F00A         	goto	l5162
  2711   0015DE                     u6010:
  2712   0015DE  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2713   0015E2  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2714   0015E6  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2715   0015EA  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2716   0015EE  EC35  F019         	call	___fltol	;wreg free
  2717   0015F2  C005  F06B         	movff	?___fltol,efgtoa@d
  2718   0015F6  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  2719   0015FA  EF04  F00B         	goto	l1072
  2720   0015FE                     l5162:
  2721   0015FE  0E00               	movlw	0
  2722   001600  0100               	movlb	0	; () banked
  2723   001602  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2724   001604  0E09               	movlw	9
  2725   001606  6F6B               	movwf	efgtoa@d& (0+255),b
  2726   001608                     l1072:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2729   001608  0100               	movlb	0	; () banked
  2730   00160A  5168               	movf	efgtoa@pp& (0+255),w,b
  2731   00160C  A4D8               	btfss	status,2,c
  2732   00160E  EF0B  F00B         	goto	u6021
  2733   001612  EF0D  F00B         	goto	u6020
  2734   001616                     u6021:
  2735   001616  EF35  F00B         	goto	l5182
  2736   00161A                     u6020:
  2737   00161A                     
  2738                           ; BSR set to: 0
  2739   00161A  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2740   00161C  EF14  F00B         	goto	u6030
  2741   001620  EF12  F00B         	goto	u6031
  2742   001624                     u6031:
  2743   001624  EF35  F00B         	goto	l5182
  2744   001628                     u6030:
  2745   001628                     
  2746                           ; BSR set to: 0
  2747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2748   001628  0E50               	movlw	low _dbuf
  2749   00162A  2586               	addwf	efgtoa@n& (0+255),w,b
  2750   00162C  6ED9               	movwf	fsr2l,c
  2751   00162E  0E01               	movlw	high _dbuf
  2752   001630  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2753   001632  6EDA               	movwf	fsr2h,c
  2754   001634  0E2E               	movlw	46
  2755   001636  6EDF               	movwf	indf2,c
  2756   001638                     
  2757                           ; BSR set to: 0
  2758   001638  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2759   00163A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2760   00163C                     
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2763   00163C  0771               	decf	efgtoa@w& (0+255),f,b
  2764   00163E  A0D8               	btfss	status,0,c
  2765   001640  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2766   001642                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2769   001642  0E01               	movlw	1
  2770   001644  6F68               	movwf	efgtoa@pp& (0+255),b
  2771   001646  EF35  F00B         	goto	l5182
  2772   00164A                     l5174:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2776   00164A  0E50               	movlw	low _dbuf
  2777   00164C  2586               	addwf	efgtoa@n& (0+255),w,b
  2778   00164E  6ED9               	movwf	fsr2l,c
  2779   001650  0E01               	movlw	high _dbuf
  2780   001652  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2781   001654  6EDA               	movwf	fsr2h,c
  2782   001656  0E30               	movlw	48
  2783   001658  6EDF               	movwf	indf2,c
  2784   00165A                     
  2785                           ; BSR set to: 0
  2786   00165A  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2787   00165C  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2788   00165E                     
  2789                           ; BSR set to: 0
  2790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2791   00165E  0771               	decf	efgtoa@w& (0+255),f,b
  2792   001660  A0D8               	btfss	status,0,c
  2793   001662  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2794   001664                     
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2797   001664  0764               	decf	efgtoa@t& (0+255),f,b
  2798   001666  A0D8               	btfss	status,0,c
  2799   001668  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2800   00166A                     l5182:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2804   00166A  5164               	movf	efgtoa@t& (0+255),w,b
  2805   00166C  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2806   00166E  A4D8               	btfss	status,2,c
  2807   001670  EF3C  F00B         	goto	u6041
  2808   001674  EF3E  F00B         	goto	u6040
  2809   001678                     u6041:
  2810   001678  EF25  F00B         	goto	l5174
  2811   00167C                     u6040:
  2812   00167C                     
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2815   00167C  0E50               	movlw	low _dbuf
  2816   00167E  2586               	addwf	efgtoa@n& (0+255),w,b
  2817   001680  6ED9               	movwf	fsr2l,c
  2818   001682  0E01               	movlw	high _dbuf
  2819   001684  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2820   001686  6EDA               	movwf	fsr2h,c
  2821   001688  516B               	movf	efgtoa@d& (0+255),w,b
  2822   00168A  0F30               	addlw	48
  2823   00168C  6EDF               	movwf	indf2,c
  2824   00168E                     
  2825                           ; BSR set to: 0
  2826   00168E  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2827   001690  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2828   001692                     
  2829                           ; BSR set to: 0
  2830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2831   001692  0771               	decf	efgtoa@w& (0+255),f,b
  2832   001694  A0D8               	btfss	status,0,c
  2833   001696  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2834   001698                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2837   001698  C079  F01E         	movff	efgtoa@h,___flsub@b
  2838   00169C  C07A  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2839   0016A0  C07B  F020         	movff	efgtoa@h+2,___flsub@b+2
  2840   0016A4  C07C  F021         	movff	efgtoa@h+3,___flsub@b+3
  2841   0016A8  C07D  F009         	movff	efgtoa@l,___flmul@a
  2842   0016AC  C07E  F00A         	movff	efgtoa@l+1,___flmul@a+1
  2843   0016B0  C07F  F00B         	movff	efgtoa@l+2,___flmul@a+2
  2844   0016B4  C080  F00C         	movff	efgtoa@l+3,___flmul@a+3
  2845   0016B8  C088  F005         	movff	efgtoa@u,___flmul@b
  2846   0016BC  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2847   0016C0  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2848   0016C4  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2849   0016C8  EC74  F00E         	call	___flmul	;wreg free
  2850   0016CC  C005  F022         	movff	?___flmul,___flsub@a
  2851   0016D0  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2852   0016D4  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2853   0016D8  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2854   0016DC  EC8F  F01D         	call	___flsub	;wreg free
  2855   0016E0  C01E  F079         	movff	?___flsub,efgtoa@h
  2856   0016E4  C01F  F07A         	movff	?___flsub+1,efgtoa@h+1
  2857   0016E8  C020  F07B         	movff	?___flsub+2,efgtoa@h+2
  2858   0016EC  C021  F07C         	movff	?___flsub+3,efgtoa@h+3
  2859   0016F0                     
  2860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2861   0016F0  C088  F005         	movff	efgtoa@u,___fldiv@b
  2862   0016F4  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2863   0016F8  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2864   0016FC  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2865   001700  0E00               	movlw	0
  2866   001702  6E09               	movwf	___fldiv@a^0,c
  2867   001704  0E00               	movlw	0
  2868   001706  6E0A               	movwf	(___fldiv@a+1)^0,c
  2869   001708  0E20               	movlw	32
  2870   00170A  6E0B               	movwf	(___fldiv@a+2)^0,c
  2871   00170C  0E41               	movlw	65
  2872   00170E  6E0C               	movwf	(___fldiv@a+3)^0,c
  2873   001710  EC89  F010         	call	___fldiv	;wreg free
  2874   001714  C005  F088         	movff	?___fldiv,efgtoa@u
  2875   001718  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2876   00171C  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2877   001720  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2878   001724                     
  2879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2880   001724  0100               	movlb	0	; () banked
  2881   001726  0760               	decf	efgtoa@ne& (0+255),f,b
  2882   001728  A0D8               	btfss	status,0,c
  2883   00172A  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2884   00172C                     
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2887   00172C  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2888   00172E  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2889   001730                     l5198:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2893   001730  516D               	movf	efgtoa@m& (0+255),w,b
  2894   001732  5D77               	subwf	efgtoa@i& (0+255),w,b
  2895   001734  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2896   001736  0A80               	xorlw	128
  2897   001738  6E39               	movwf	??_efgtoa^0,c
  2898   00173A  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2899   00173C  0A80               	xorlw	128
  2900   00173E  5839               	subwfb	??_efgtoa^0,w,c
  2901   001740  B0D8               	btfsc	status,0,c
  2902   001742  EFA5  F00B         	goto	u6051
  2903   001746  EFA7  F00B         	goto	u6050
  2904   00174A                     u6051:
  2905   00174A  EFB5  F00B         	goto	l5202
  2906   00174E                     u6050:
  2907   00174E                     
  2908                           ; BSR set to: 0
  2909   00174E  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2910   001750  EFB3  F00B         	goto	u6061
  2911   001754  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2912   001756  E109               	bnz	u6060
  2913   001758  0E4B               	movlw	75
  2914   00175A  5D86               	subwf	efgtoa@n& (0+255),w,b
  2915   00175C  A0D8               	btfss	status,0,c
  2916   00175E  EFB3  F00B         	goto	u6061
  2917   001762  EFB5  F00B         	goto	u6060
  2918   001766                     u6061:
  2919   001766  EFB3  F00A         	goto	l5158
  2920   00176A                     u6060:
  2921   00176A                     l5202:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2925   00176A  0E00               	movlw	0
  2926   00176C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2927   00176E  0E4F               	movlw	79
  2928   001770  6F77               	movwf	efgtoa@i& (0+255),b
  2929   001772                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2932   001772  0E50               	movlw	low _dbuf
  2933   001774  2577               	addwf	efgtoa@i& (0+255),w,b
  2934   001776  6ED9               	movwf	fsr2l,c
  2935   001778  0E01               	movlw	high _dbuf
  2936   00177A  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2937   00177C  6EDA               	movwf	fsr2h,c
  2938   00177E  0E00               	movlw	0
  2939   001780  6EDF               	movwf	indf2,c
  2940   001782                     
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2943   001782  0E50               	movlw	low _dbuf
  2944   001784  6E39               	movwf	??_efgtoa^0,c
  2945   001786  0E01               	movlw	high _dbuf
  2946   001788  6E3A               	movwf	(??_efgtoa+1)^0,c
  2947   00178A  5186               	movf	efgtoa@n& (0+255),w,b
  2948   00178C  5E39               	subwf	??_efgtoa^0,f,c
  2949   00178E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2950   001790  5A3A               	subwfb	(??_efgtoa+1)^0,f,c
  2951   001792  5177               	movf	efgtoa@i& (0+255),w,b
  2952   001794  2439               	addwf	??_efgtoa^0,w,c
  2953   001796  6E05               	movwf	memcpy@d1^0,c
  2954   001798  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2955   00179A  203A               	addwfc	(??_efgtoa+1)^0,w,c
  2956   00179C  6E06               	movwf	(memcpy@d1+1)^0,c
  2957   00179E  0E50               	movlw	low _dbuf
  2958   0017A0  6E07               	movwf	memcpy@s1^0,c
  2959   0017A2  0E01               	movlw	high _dbuf
  2960   0017A4  6E08               	movwf	(memcpy@s1+1)^0,c
  2961   0017A6  C086  F009         	movff	efgtoa@n,memcpy@n
  2962   0017AA  C087  F00A         	movff	efgtoa@n+1,memcpy@n+1
  2963   0017AE  ECC7  F01C         	call	_memcpy	;wreg free
  2964   0017B2                     
  2965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  2966   0017B2  0100               	movlb	0	; () banked
  2967   0017B4  5186               	movf	efgtoa@n& (0+255),w,b
  2968   0017B6  5D77               	subwf	efgtoa@i& (0+255),w,b
  2969   0017B8  6F86               	movwf	efgtoa@n& (0+255),b
  2970   0017BA  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2971   0017BC  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  2972   0017BE  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2973   0017C0                     
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  2976   0017C0  5181               	movf	efgtoa@sign& (0+255),w,b
  2977   0017C2  A4D8               	btfss	status,2,c
  2978   0017C4  EFE6  F00B         	goto	u6071
  2979   0017C8  EFE9  F00B         	goto	u6070
  2980   0017CC                     u6071:
  2981   0017CC  0E01               	movlw	1
  2982   0017CE  EFEA  F00B         	goto	u6080
  2983   0017D2                     u6070:
  2984   0017D2  0E00               	movlw	0
  2985   0017D4                     u6080:
  2986   0017D4  6F77               	movwf	efgtoa@i& (0+255),b
  2987   0017D6  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  2988   0017D8                     
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  2991   0017D8  5181               	movf	efgtoa@sign& (0+255),w,b
  2992   0017DA  B4D8               	btfsc	status,2,c
  2993   0017DC  EFF2  F00B         	goto	u6091
  2994   0017E0  EFF4  F00B         	goto	u6090
  2995   0017E4                     u6091:
  2996   0017E4  EFFF  F00B         	goto	l5216
  2997   0017E8                     u6090:
  2998   0017E8                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3001   0017E8  0786               	decf	efgtoa@n& (0+255),f,b
  3002   0017EA  A0D8               	btfss	status,0,c
  3003   0017EC  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3004   0017EE  0E50               	movlw	low _dbuf
  3005   0017F0  2586               	addwf	efgtoa@n& (0+255),w,b
  3006   0017F2  6ED9               	movwf	fsr2l,c
  3007   0017F4  0E01               	movlw	high _dbuf
  3008   0017F6  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3009   0017F8  6EDA               	movwf	fsr2h,c
  3010   0017FA  C081  FFDF         	movff	efgtoa@sign,indf2
  3011   0017FE                     l5216:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3015   0017FE  5177               	movf	efgtoa@i& (0+255),w,b
  3016   001800  5F71               	subwf	efgtoa@w& (0+255),f,b
  3017   001802  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3018   001804  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3019   001806                     
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3022   001806  C032  F015         	movff	efgtoa@fp,pad@fp
  3023   00180A  C033  F016         	movff	efgtoa@fp+1,pad@fp+1
  3024   00180E  0E50               	movlw	low _dbuf
  3025   001810  2586               	addwf	efgtoa@n& (0+255),w,b
  3026   001812  6E17               	movwf	pad@buf^0,c
  3027   001814  0E01               	movlw	high _dbuf
  3028   001816  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3029   001818  6E18               	movwf	(pad@buf+1)^0,c
  3030   00181A  C071  F019         	movff	efgtoa@w,pad@p
  3031   00181E  C072  F01A         	movff	efgtoa@w+1,pad@p+1
  3032   001822  ECD5  F01B         	call	_pad	;wreg free
  3033   001826                     l1039:
  3034   001826  0012               	return		;funcret
  3035   001828                     __end_of_efgtoa:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _strcpy *****************
  3039 ;; Defined at:
  3040 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3043 ;;		 -> dbuf(80), 
  3044 ;;  src             2    6[COMRAM] PTR const unsigned char 
  3045 ;;		 -> STR_5(4), STR_2(4), 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  d               2   10[COMRAM] PTR unsigned char 
  3048 ;;		 -> dbuf(80), 
  3049 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3050 ;;		 -> STR_5(4), STR_2(4), 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2    4[COMRAM] PTR unsigned char 
  3053 ;; Registers used:
  3054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;Total ram usage:        8 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 2
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_efgtoa
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text5
  3075   003B64                     __ptext5:
  3076                           	callstack 0
  3077   003B64                     _strcpy:
  3078                           	callstack 24
  3079   003B64  C007  F009         	movff	strcpy@src,strcpy@s
  3080   003B68  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  3081   003B6C  C005  F00B         	movff	strcpy@dest,strcpy@d
  3082   003B70  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  3083   003B74                     l4898:
  3084   003B74  C009  FFF6         	movff	strcpy@s,tblptrl
  3085   003B78  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  3086   003B7C  4A09               	infsnz	strcpy@s^0,f,c
  3087   003B7E  2A0A               	incf	(strcpy@s+1)^0,f,c
  3088   003B80                     	if	0	;tblptru may be non-zero
  3089   003B80                     	endif
  3090   003B80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3091   003B80  0E00               	movlw	low (__mediumconst shr (0+16))
  3092   003B82  6EF8               	movwf	tblptru,c
  3093   003B84                     	endif
  3094   003B84  C00B  FFD9         	movff	strcpy@d,fsr2l
  3095   003B88  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  3096   003B8C  4A0B               	infsnz	strcpy@d^0,f,c
  3097   003B8E  2A0C               	incf	(strcpy@d+1)^0,f,c
  3098   003B90  0008               	tblrd		*
  3099   003B92  CFF5 FFDF          	movff	tablat,indf2
  3100   003B96  50DF               	movf	indf2,w,c
  3101   003B98  A4D8               	btfss	status,2,c
  3102   003B9A  EFD1  F01D         	goto	u5531
  3103   003B9E  EFD3  F01D         	goto	u5530
  3104   003BA2                     u5531:
  3105   003BA2  EFBA  F01D         	goto	l4898
  3106   003BA6                     u5530:
  3107   003BA6  0012               	return		;funcret
  3108   003BA8                     __end_of_strcpy:
  3109                           	callstack 0
  3110                           
  3111 ;; *************** function _memcpy *****************
  3112 ;; Defined at:
  3113 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  d1              2    4[COMRAM] PTR void 
  3116 ;;		 -> dbuf(80), 
  3117 ;;  s1              2    6[COMRAM] PTR const void 
  3118 ;;		 -> dbuf(80), 
  3119 ;;  n               2    8[COMRAM] unsigned int 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3122 ;;		 -> dbuf(80), 
  3123 ;;  d               2   11[COMRAM] PTR unsigned char 
  3124 ;;		 -> dbuf(80), 
  3125 ;;  tmp             1   10[COMRAM] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  2    4[COMRAM] PTR void 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3135 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;Total ram usage:       11 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 2
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_efgtoa
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text6
  3150   00398E                     __ptext6:
  3151                           	callstack 0
  3152   00398E                     _memcpy:
  3153                           	callstack 24
  3154   00398E  C007  F00E         	movff	memcpy@s1,memcpy@s
  3155   003992  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  3156   003996  C005  F00C         	movff	memcpy@d1,memcpy@d
  3157   00399A  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  3158   00399E  EFE1  F01C         	goto	l4942
  3159   0039A2                     l4934:
  3160   0039A2  C00E  FFD9         	movff	memcpy@s,fsr2l
  3161   0039A6  C00F  FFDA         	movff	memcpy@s+1,fsr2h
  3162   0039AA  50DF               	movf	indf2,w,c
  3163   0039AC  6E0B               	movwf	memcpy@tmp^0,c
  3164   0039AE  4A0E               	infsnz	memcpy@s^0,f,c
  3165   0039B0  2A0F               	incf	(memcpy@s+1)^0,f,c
  3166   0039B2  C00C  FFD9         	movff	memcpy@d,fsr2l
  3167   0039B6  C00D  FFDA         	movff	memcpy@d+1,fsr2h
  3168   0039BA  C00B  FFDF         	movff	memcpy@tmp,indf2
  3169   0039BE  4A0C               	infsnz	memcpy@d^0,f,c
  3170   0039C0  2A0D               	incf	(memcpy@d+1)^0,f,c
  3171   0039C2                     l4942:
  3172   0039C2  0609               	decf	memcpy@n^0,f,c
  3173   0039C4  A0D8               	btfss	status,0,c
  3174   0039C6  060A               	decf	(memcpy@n+1)^0,f,c
  3175   0039C8  2809               	incf	memcpy@n^0,w,c
  3176   0039CA  E106               	bnz	u5651
  3177   0039CC  280A               	incf	(memcpy@n+1)^0,w,c
  3178   0039CE  A4D8               	btfss	status,2,c
  3179   0039D0  EFEC  F01C         	goto	u5651
  3180   0039D4  EFEE  F01C         	goto	u5650
  3181   0039D8                     u5651:
  3182   0039D8  EFD1  F01C         	goto	l4934
  3183   0039DC                     u5650:
  3184   0039DC  0012               	return		;funcret
  3185   0039DE                     __end_of_memcpy:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _labs *****************
  3189 ;; Defined at:
  3190 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  a               4    4[COMRAM] long 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  4    4[COMRAM] long 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;Total ram usage:        8 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 2
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_efgtoa
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text7
  3219   003824                     __ptext7:
  3220                           	callstack 0
  3221   003824                     _labs:
  3222                           	callstack 24
  3223   003824  BE08               	btfsc	(labs@a+3)^0,7,c
  3224   003826  EF21  F01C         	goto	u5540
  3225   00382A  5008               	movf	(labs@a+3)^0,w,c
  3226   00382C  1007               	iorwf	(labs@a+2)^0,w,c
  3227   00382E  1006               	iorwf	(labs@a+1)^0,w,c
  3228   003830  E106               	bnz	u5541
  3229   003832  0405               	decf	labs@a^0,w,c
  3230   003834  B0D8               	btfsc	status,0,c
  3231   003836  EF1F  F01C         	goto	u5541
  3232   00383A  EF21  F01C         	goto	u5540
  3233   00383E                     u5541:
  3234   00383E  EF3C  F01C         	goto	l1144
  3235   003842                     u5540:
  3236   003842  C005  F009         	movff	labs@a,??_labs
  3237   003846  C006  F00A         	movff	labs@a+1,??_labs+1
  3238   00384A  C007  F00B         	movff	labs@a+2,??_labs+2
  3239   00384E  C008  F00C         	movff	labs@a+3,??_labs+3
  3240   003852  1E09               	comf	??_labs^0,f,c
  3241   003854  1E0A               	comf	(??_labs+1)^0,f,c
  3242   003856  1E0B               	comf	(??_labs+2)^0,f,c
  3243   003858  1E0C               	comf	(??_labs+3)^0,f,c
  3244   00385A  2A09               	incf	??_labs^0,f,c
  3245   00385C  0E00               	movlw	0
  3246   00385E  220A               	addwfc	(??_labs+1)^0,f,c
  3247   003860  220B               	addwfc	(??_labs+2)^0,f,c
  3248   003862  220C               	addwfc	(??_labs+3)^0,f,c
  3249   003864  C009  F005         	movff	??_labs,?_labs
  3250   003868  C00A  F006         	movff	??_labs+1,?_labs+1
  3251   00386C  C00B  F007         	movff	??_labs+2,?_labs+2
  3252   003870  C00C  F008         	movff	??_labs+3,?_labs+3
  3253   003874  EF44  F01C         	goto	l1147
  3254   003878                     l1144:
  3255   003878  C005  F005         	movff	labs@a,?_labs
  3256   00387C  C006  F006         	movff	labs@a+1,?_labs+1
  3257   003880  C007  F007         	movff	labs@a+2,?_labs+2
  3258   003884  C008  F008         	movff	labs@a+3,?_labs+3
  3259   003888                     l1147:
  3260   003888  0012               	return		;funcret
  3261   00388A                     __end_of_labs:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _floorf *****************
  3265 ;; Defined at:
  3266 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  x               4   29[COMRAM] float 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  u               4   45[COMRAM] struct .
  3271 ;;  m               4   39[COMRAM] unsigned long 
  3272 ;;  e               2   43[COMRAM] int 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  4   29[COMRAM] float 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;Total ram usage:       20 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 2
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_efgtoa
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text8
  3297   002A2E                     __ptext8:
  3298                           	callstack 0
  3299   002A2E                     _floorf:
  3300                           	callstack 24
  3301   002A2E  C0BC  F02E         	movff	floorf@F526,floorf@u
  3302   002A32  C0BD  F02F         	movff	floorf@F526+1,floorf@u+1
  3303   002A36  C0BE  F030         	movff	floorf@F526+2,floorf@u+2
  3304   002A3A  C0BF  F031         	movff	floorf@F526+3,floorf@u+3
  3305   002A3E  C01E  F02E         	movff	floorf@x,floorf@u
  3306   002A42  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  3307   002A46  C020  F030         	movff	floorf@x+2,floorf@u+2
  3308   002A4A  C021  F031         	movff	floorf@x+3,floorf@u+3
  3309   002A4E  0E81               	movlw	129
  3310   002A50  6E22               	movwf	??_floorf^0,c
  3311   002A52  0EFF               	movlw	255
  3312   002A54  6E23               	movwf	(??_floorf+1)^0,c
  3313   002A56  C02E  F024         	movff	floorf@u,??_floorf+2
  3314   002A5A  C02F  F025         	movff	floorf@u+1,??_floorf+3
  3315   002A5E  C030  F026         	movff	floorf@u+2,??_floorf+4
  3316   002A62  C031  F027         	movff	floorf@u+3,??_floorf+5
  3317   002A66  0E18               	movlw	24
  3318   002A68  EF3B  F015         	goto	u5550
  3319   002A6C                     u5555:
  3320   002A6C  90D8               	bcf	status,0,c
  3321   002A6E  3227               	rrcf	(??_floorf+5)^0,f,c
  3322   002A70  3226               	rrcf	(??_floorf+4)^0,f,c
  3323   002A72  3225               	rrcf	(??_floorf+3)^0,f,c
  3324   002A74  3224               	rrcf	(??_floorf+2)^0,f,c
  3325   002A76                     u5550:
  3326   002A76  2EE8               	decfsz	wreg,f,c
  3327   002A78  EF36  F015         	goto	u5555
  3328   002A7C  5024               	movf	(??_floorf+2)^0,w,c
  3329   002A7E  2422               	addwf	??_floorf^0,w,c
  3330   002A80  6E2C               	movwf	floorf@e^0,c
  3331   002A82  0E00               	movlw	0
  3332   002A84  2023               	addwfc	(??_floorf+1)^0,w,c
  3333   002A86  6E2D               	movwf	(floorf@e+1)^0,c
  3334   002A88  BE2D               	btfsc	(floorf@e+1)^0,7,c
  3335   002A8A  EF50  F015         	goto	u5561
  3336   002A8E  502D               	movf	(floorf@e+1)^0,w,c
  3337   002A90  E109               	bnz	u5560
  3338   002A92  0E17               	movlw	23
  3339   002A94  5C2C               	subwf	floorf@e^0,w,c
  3340   002A96  A0D8               	btfss	status,0,c
  3341   002A98  EF50  F015         	goto	u5561
  3342   002A9C  EF52  F015         	goto	u5560
  3343   002AA0                     u5561:
  3344   002AA0  EF5C  F015         	goto	l4910
  3345   002AA4                     u5560:
  3346   002AA4                     l4908:
  3347   002AA4  C01E  F01E         	movff	floorf@x,?_floorf
  3348   002AA8  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  3349   002AAC  C020  F020         	movff	floorf@x+2,?_floorf+2
  3350   002AB0  C021  F021         	movff	floorf@x+3,?_floorf+3
  3351   002AB4  EF1F  F016         	goto	l1133
  3352   002AB8                     l4910:
  3353   002AB8  BE2D               	btfsc	(floorf@e+1)^0,7,c
  3354   002ABA  EF61  F015         	goto	u5571
  3355   002ABE  EF63  F015         	goto	u5570
  3356   002AC2                     u5571:
  3357   002AC2  EFD3  F015         	goto	l4920
  3358   002AC6                     u5570:
  3359   002AC6  C02C  F022         	movff	floorf@e,??_floorf
  3360   002ACA  0EFF               	movlw	255
  3361   002ACC  6E23               	movwf	(??_floorf+1)^0,c
  3362   002ACE  0EFF               	movlw	255
  3363   002AD0  6E24               	movwf	(??_floorf+2)^0,c
  3364   002AD2  0E7F               	movlw	127
  3365   002AD4  6E25               	movwf	(??_floorf+3)^0,c
  3366   002AD6  0E00               	movlw	0
  3367   002AD8  6E26               	movwf	(??_floorf+4)^0,c
  3368   002ADA                     u5585:
  3369   002ADA  6622               	tstfsz	??_floorf^0,c
  3370   002ADC  EF72  F015         	goto	u5586
  3371   002AE0  EF7A  F015         	goto	u5587
  3372   002AE4                     u5586:
  3373   002AE4  3426               	rlcf	(??_floorf+4)^0,w,c
  3374   002AE6  3226               	rrcf	(??_floorf+4)^0,f,c
  3375   002AE8  3225               	rrcf	(??_floorf+3)^0,f,c
  3376   002AEA  3224               	rrcf	(??_floorf+2)^0,f,c
  3377   002AEC  3223               	rrcf	(??_floorf+1)^0,f,c
  3378   002AEE  2E22               	decfsz	??_floorf^0,f,c
  3379   002AF0  EF6D  F015         	goto	u5585
  3380   002AF4                     u5587:
  3381   002AF4  C023  F028         	movff	??_floorf+1,floorf@m
  3382   002AF8  C024  F029         	movff	??_floorf+2,floorf@m+1
  3383   002AFC  C025  F02A         	movff	??_floorf+3,floorf@m+2
  3384   002B00  C026  F02B         	movff	??_floorf+4,floorf@m+3
  3385   002B04  5028               	movf	floorf@m^0,w,c
  3386   002B06  142E               	andwf	floorf@u^0,w,c
  3387   002B08  6E22               	movwf	??_floorf^0,c
  3388   002B0A  5029               	movf	(floorf@m+1)^0,w,c
  3389   002B0C  142F               	andwf	(floorf@u+1)^0,w,c
  3390   002B0E  6E23               	movwf	(??_floorf+1)^0,c
  3391   002B10  502A               	movf	(floorf@m+2)^0,w,c
  3392   002B12  1430               	andwf	(floorf@u+2)^0,w,c
  3393   002B14  6E24               	movwf	(??_floorf+2)^0,c
  3394   002B16  502B               	movf	(floorf@m+3)^0,w,c
  3395   002B18  1431               	andwf	(floorf@u+3)^0,w,c
  3396   002B1A  6E25               	movwf	(??_floorf+3)^0,c
  3397   002B1C  5022               	movf	??_floorf^0,w,c
  3398   002B1E  1023               	iorwf	(??_floorf+1)^0,w,c
  3399   002B20  1024               	iorwf	(??_floorf+2)^0,w,c
  3400   002B22  1025               	iorwf	(??_floorf+3)^0,w,c
  3401   002B24  A4D8               	btfss	status,2,c
  3402   002B26  EF97  F015         	goto	u5591
  3403   002B2A  EF99  F015         	goto	u5590
  3404   002B2E                     u5591:
  3405   002B2E  EF9B  F015         	goto	l4916
  3406   002B32                     u5590:
  3407   002B32  EF52  F015         	goto	l4908
  3408   002B36                     l4916:
  3409   002B36  C02E  F022         	movff	floorf@u,??_floorf
  3410   002B3A  C02F  F023         	movff	floorf@u+1,??_floorf+1
  3411   002B3E  C030  F024         	movff	floorf@u+2,??_floorf+2
  3412   002B42  C031  F025         	movff	floorf@u+3,??_floorf+3
  3413   002B46  0E20               	movlw	32
  3414   002B48  EFAB  F015         	goto	u5600
  3415   002B4C                     u5605:
  3416   002B4C  90D8               	bcf	status,0,c
  3417   002B4E  3225               	rrcf	(??_floorf+3)^0,f,c
  3418   002B50  3224               	rrcf	(??_floorf+2)^0,f,c
  3419   002B52  3223               	rrcf	(??_floorf+1)^0,f,c
  3420   002B54  3222               	rrcf	??_floorf^0,f,c
  3421   002B56                     u5600:
  3422   002B56  2EE8               	decfsz	wreg,f,c
  3423   002B58  EFA6  F015         	goto	u5605
  3424   002B5C  5022               	movf	??_floorf^0,w,c
  3425   002B5E  1023               	iorwf	(??_floorf+1)^0,w,c
  3426   002B60  1024               	iorwf	(??_floorf+2)^0,w,c
  3427   002B62  1025               	iorwf	(??_floorf+3)^0,w,c
  3428   002B64  B4D8               	btfsc	status,2,c
  3429   002B66  EFB7  F015         	goto	u5611
  3430   002B6A  EFB9  F015         	goto	u5610
  3431   002B6E                     u5611:
  3432   002B6E  EFC1  F015         	goto	l1136
  3433   002B72                     u5610:
  3434   002B72  5028               	movf	floorf@m^0,w,c
  3435   002B74  262E               	addwf	floorf@u^0,f,c
  3436   002B76  5029               	movf	(floorf@m+1)^0,w,c
  3437   002B78  222F               	addwfc	(floorf@u+1)^0,f,c
  3438   002B7A  502A               	movf	(floorf@m+2)^0,w,c
  3439   002B7C  2230               	addwfc	(floorf@u+2)^0,f,c
  3440   002B7E  502B               	movf	(floorf@m+3)^0,w,c
  3441   002B80  2231               	addwfc	(floorf@u+3)^0,f,c
  3442   002B82                     l1136:
  3443   002B82  1C28               	comf	floorf@m^0,w,c
  3444   002B84  6E22               	movwf	??_floorf^0,c
  3445   002B86  1C29               	comf	(floorf@m+1)^0,w,c
  3446   002B88  6E23               	movwf	(??_floorf+1)^0,c
  3447   002B8A  1C2A               	comf	(floorf@m+2)^0,w,c
  3448   002B8C  6E24               	movwf	(??_floorf+2)^0,c
  3449   002B8E  1C2B               	comf	(floorf@m+3)^0,w,c
  3450   002B90  6E25               	movwf	(??_floorf+3)^0,c
  3451   002B92  5022               	movf	??_floorf^0,w,c
  3452   002B94  162E               	andwf	floorf@u^0,f,c
  3453   002B96  5023               	movf	(??_floorf+1)^0,w,c
  3454   002B98  162F               	andwf	(floorf@u+1)^0,f,c
  3455   002B9A  5024               	movf	(??_floorf+2)^0,w,c
  3456   002B9C  1630               	andwf	(floorf@u+2)^0,f,c
  3457   002B9E  5025               	movf	(??_floorf+3)^0,w,c
  3458   002BA0  1631               	andwf	(floorf@u+3)^0,f,c
  3459   002BA2  EF17  F016         	goto	l4928
  3460   002BA6                     l4920:
  3461   002BA6  C02E  F022         	movff	floorf@u,??_floorf
  3462   002BAA  C02F  F023         	movff	floorf@u+1,??_floorf+1
  3463   002BAE  C030  F024         	movff	floorf@u+2,??_floorf+2
  3464   002BB2  C031  F025         	movff	floorf@u+3,??_floorf+3
  3465   002BB6  0E20               	movlw	32
  3466   002BB8  EFE3  F015         	goto	u5620
  3467   002BBC                     u5625:
  3468   002BBC  90D8               	bcf	status,0,c
  3469   002BBE  3225               	rrcf	(??_floorf+3)^0,f,c
  3470   002BC0  3224               	rrcf	(??_floorf+2)^0,f,c
  3471   002BC2  3223               	rrcf	(??_floorf+1)^0,f,c
  3472   002BC4  3222               	rrcf	??_floorf^0,f,c
  3473   002BC6                     u5620:
  3474   002BC6  2EE8               	decfsz	wreg,f,c
  3475   002BC8  EFDE  F015         	goto	u5625
  3476   002BCC  5022               	movf	??_floorf^0,w,c
  3477   002BCE  1023               	iorwf	(??_floorf+1)^0,w,c
  3478   002BD0  1024               	iorwf	(??_floorf+2)^0,w,c
  3479   002BD2  1025               	iorwf	(??_floorf+3)^0,w,c
  3480   002BD4  A4D8               	btfss	status,2,c
  3481   002BD6  EFEF  F015         	goto	u5631
  3482   002BDA  EFF1  F015         	goto	u5630
  3483   002BDE                     u5631:
  3484   002BDE  EFFB  F015         	goto	l4924
  3485   002BE2                     u5630:
  3486   002BE2  0E00               	movlw	0
  3487   002BE4  6E2E               	movwf	floorf@u^0,c
  3488   002BE6  0E00               	movlw	0
  3489   002BE8  6E2F               	movwf	(floorf@u+1)^0,c
  3490   002BEA  0E00               	movlw	0
  3491   002BEC  6E30               	movwf	(floorf@u+2)^0,c
  3492   002BEE  0E00               	movlw	0
  3493   002BF0  6E31               	movwf	(floorf@u+3)^0,c
  3494   002BF2  EF17  F016         	goto	l4928
  3495   002BF6                     l4924:
  3496   002BF6  90D8               	bcf	status,0,c
  3497   002BF8  342E               	rlcf	floorf@u^0,w,c
  3498   002BFA  6E22               	movwf	??_floorf^0,c
  3499   002BFC  342F               	rlcf	(floorf@u+1)^0,w,c
  3500   002BFE  6E23               	movwf	(??_floorf+1)^0,c
  3501   002C00  3430               	rlcf	(floorf@u+2)^0,w,c
  3502   002C02  6E24               	movwf	(??_floorf+2)^0,c
  3503   002C04  3431               	rlcf	(floorf@u+3)^0,w,c
  3504   002C06  6E25               	movwf	(??_floorf+3)^0,c
  3505   002C08  5022               	movf	??_floorf^0,w,c
  3506   002C0A  1023               	iorwf	(??_floorf+1)^0,w,c
  3507   002C0C  1024               	iorwf	(??_floorf+2)^0,w,c
  3508   002C0E  1025               	iorwf	(??_floorf+3)^0,w,c
  3509   002C10  B4D8               	btfsc	status,2,c
  3510   002C12  EF0D  F016         	goto	u5641
  3511   002C16  EF0F  F016         	goto	u5640
  3512   002C1A                     u5641:
  3513   002C1A  EF17  F016         	goto	l4928
  3514   002C1E                     u5640:
  3515   002C1E  0E00               	movlw	0
  3516   002C20  6E2E               	movwf	floorf@u^0,c
  3517   002C22  0E00               	movlw	0
  3518   002C24  6E2F               	movwf	(floorf@u+1)^0,c
  3519   002C26  0E80               	movlw	128
  3520   002C28  6E30               	movwf	(floorf@u+2)^0,c
  3521   002C2A  0EBF               	movlw	191
  3522   002C2C  6E31               	movwf	(floorf@u+3)^0,c
  3523   002C2E                     l4928:
  3524   002C2E  C02E  F01E         	movff	floorf@u,?_floorf
  3525   002C32  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  3526   002C36  C030  F020         	movff	floorf@u+2,?_floorf+2
  3527   002C3A  C031  F021         	movff	floorf@u+3,?_floorf+3
  3528   002C3E                     l1133:
  3529   002C3E  0012               	return		;funcret
  3530   002C40                     __end_of_floorf:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function ___fpclassifyf *****************
  3534 ;; Defined at:
  3535 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  x               4    4[COMRAM] float 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  u               4   14[COMRAM] struct .
  3540 ;;  e               2   12[COMRAM] int 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2    4[COMRAM] int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;Total ram usage:       14 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 2
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_efgtoa
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text9
  3565   003474                     __ptext9:
  3566                           	callstack 0
  3567   003474                     ___fpclassifyf:
  3568                           	callstack 24
  3569   003474  C0C0  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3570   003478  C0C1  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3571   00347C  C0C2  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3572   003480  C0C3  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3573   003484  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  3574   003488  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3575   00348C  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3576   003490  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3577   003494  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  3578   003498  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3579   00349C  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3580   0034A0  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3581   0034A4  0E18               	movlw	24
  3582   0034A6  EF5A  F01A         	goto	u5460
  3583   0034AA                     u5465:
  3584   0034AA  90D8               	bcf	status,0,c
  3585   0034AC  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  3586   0034AE  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  3587   0034B0  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  3588   0034B2  3209               	rrcf	??___fpclassifyf^0,f,c
  3589   0034B4                     u5460:
  3590   0034B4  2EE8               	decfsz	wreg,f,c
  3591   0034B6  EF55  F01A         	goto	u5465
  3592   0034BA  5009               	movf	??___fpclassifyf^0,w,c
  3593   0034BC  6E0D               	movwf	___fpclassifyf@e^0,c
  3594   0034BE  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  3595   0034C0  500D               	movf	___fpclassifyf@e^0,w,c
  3596   0034C2  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3597   0034C4  A4D8               	btfss	status,2,c
  3598   0034C6  EF67  F01A         	goto	u5471
  3599   0034CA  EF69  F01A         	goto	u5470
  3600   0034CE                     u5471:
  3601   0034CE  EF89  F01A         	goto	l4886
  3602   0034D2                     u5470:
  3603   0034D2  90D8               	bcf	status,0,c
  3604   0034D4  340F               	rlcf	___fpclassifyf@u^0,w,c
  3605   0034D6  6E09               	movwf	??___fpclassifyf^0,c
  3606   0034D8  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3607   0034DA  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  3608   0034DC  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3609   0034DE  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  3610   0034E0  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3611   0034E2  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  3612   0034E4  5009               	movf	??___fpclassifyf^0,w,c
  3613   0034E6  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  3614   0034E8  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  3615   0034EA  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  3616   0034EC  A4D8               	btfss	status,2,c
  3617   0034EE  EF7B  F01A         	goto	u5481
  3618   0034F2  EF7D  F01A         	goto	u5480
  3619   0034F6                     u5481:
  3620   0034F6  EF83  F01A         	goto	l4882
  3621   0034FA                     u5480:
  3622   0034FA  0E00               	movlw	0
  3623   0034FC  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3624   0034FE  0E02               	movlw	2
  3625   003500  6E05               	movwf	?___fpclassifyf^0,c
  3626   003502  EFB8  F01A         	goto	l1119
  3627   003506                     l4882:
  3628   003506  0E00               	movlw	0
  3629   003508  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3630   00350A  0E03               	movlw	3
  3631   00350C  6E05               	movwf	?___fpclassifyf^0,c
  3632   00350E  EFB8  F01A         	goto	l1119
  3633   003512                     l4886:
  3634   003512  280D               	incf	___fpclassifyf@e^0,w,c
  3635   003514  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3636   003516  A4D8               	btfss	status,2,c
  3637   003518  EF90  F01A         	goto	u5491
  3638   00351C  EF92  F01A         	goto	u5490
  3639   003520                     u5491:
  3640   003520  EFB4  F01A         	goto	l4892
  3641   003524                     u5490:
  3642   003524  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  3643   003528  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3644   00352C  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3645   003530  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3646   003534  0E09               	movlw	9
  3647   003536                     u5505:
  3648   003536  90D8               	bcf	status,0,c
  3649   003538  3609               	rlcf	??___fpclassifyf^0,f,c
  3650   00353A  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  3651   00353C  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  3652   00353E  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  3653   003540  2EE8               	decfsz	wreg,f,c
  3654   003542  EF9B  F01A         	goto	u5505
  3655   003546  5009               	movf	??___fpclassifyf^0,w,c
  3656   003548  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  3657   00354A  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  3658   00354C  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  3659   00354E  B4D8               	btfsc	status,2,c
  3660   003550  EFAC  F01A         	goto	u5511
  3661   003554  EFAF  F01A         	goto	u5510
  3662   003558                     u5511:
  3663   003558  0E01               	movlw	1
  3664   00355A  EFB0  F01A         	goto	u5520
  3665   00355E                     u5510:
  3666   00355E  0E00               	movlw	0
  3667   003560                     u5520:
  3668   003560  6E05               	movwf	?___fpclassifyf^0,c
  3669   003562  6A06               	clrf	(?___fpclassifyf+1)^0,c
  3670   003564  EFB8  F01A         	goto	l1119
  3671   003568                     l4892:
  3672   003568  0E00               	movlw	0
  3673   00356A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3674   00356C  0E04               	movlw	4
  3675   00356E  6E05               	movwf	?___fpclassifyf^0,c
  3676   003570                     l1119:
  3677   003570  0012               	return		;funcret
  3678   003572                     __end_of___fpclassifyf:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function ___fltol *****************
  3682 ;; Defined at:
  3683 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  f1              4    4[COMRAM] int 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  exp1            1   13[COMRAM] unsigned char 
  3688 ;;  sign1           1   12[COMRAM] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  4    4[COMRAM] long 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3702 ;;Total ram usage:       10 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; Hardware stack levels required when called: 2
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_efgtoa
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text10
  3713   00326A                     __ptext10:
  3714                           	callstack 0
  3715   00326A                     ___fltol:
  3716                           	callstack 24
  3717   00326A  3407               	rlcf	(___fltol@f1+2)^0,w,c
  3718   00326C  3408               	rlcf	(___fltol@f1+3)^0,w,c
  3719   00326E  6E0E               	movwf	___fltol@exp1^0,c
  3720   003270  500E               	movf	___fltol@exp1^0,w,c
  3721   003272  A4D8               	btfss	status,2,c
  3722   003274  EF3E  F019         	goto	u5361
  3723   003278  EF40  F019         	goto	u5360
  3724   00327C                     u5361:
  3725   00327C  EF4A  F019         	goto	l4818
  3726   003280                     u5360:
  3727   003280                     l4814:
  3728   003280  0E00               	movlw	0
  3729   003282  6E05               	movwf	?___fltol^0,c
  3730   003284  0E00               	movlw	0
  3731   003286  6E06               	movwf	(?___fltol+1)^0,c
  3732   003288  0E00               	movlw	0
  3733   00328A  6E07               	movwf	(?___fltol+2)^0,c
  3734   00328C  0E00               	movlw	0
  3735   00328E  6E08               	movwf	(?___fltol+3)^0,c
  3736   003290  EFB7  F019         	goto	l592
  3737   003294                     l4818:
  3738   003294  C005  F009         	movff	___fltol@f1,??___fltol
  3739   003298  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  3740   00329C  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  3741   0032A0  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  3742   0032A4  0E20               	movlw	32
  3743   0032A6  EF5A  F019         	goto	u5370
  3744   0032AA                     u5375:
  3745   0032AA  90D8               	bcf	status,0,c
  3746   0032AC  320C               	rrcf	(??___fltol+3)^0,f,c
  3747   0032AE  320B               	rrcf	(??___fltol+2)^0,f,c
  3748   0032B0  320A               	rrcf	(??___fltol+1)^0,f,c
  3749   0032B2  3209               	rrcf	??___fltol^0,f,c
  3750   0032B4                     u5370:
  3751   0032B4  2EE8               	decfsz	wreg,f,c
  3752   0032B6  EF55  F019         	goto	u5375
  3753   0032BA  5009               	movf	??___fltol^0,w,c
  3754   0032BC  6E0D               	movwf	___fltol@sign1^0,c
  3755   0032BE  8E07               	bsf	(___fltol@f1+2)^0,7,c
  3756   0032C0  0EFF               	movlw	255
  3757   0032C2  1605               	andwf	___fltol@f1^0,f,c
  3758   0032C4  0EFF               	movlw	255
  3759   0032C6  1606               	andwf	(___fltol@f1+1)^0,f,c
  3760   0032C8  0EFF               	movlw	255
  3761   0032CA  1607               	andwf	(___fltol@f1+2)^0,f,c
  3762   0032CC  0E00               	movlw	0
  3763   0032CE  1608               	andwf	(___fltol@f1+3)^0,f,c
  3764   0032D0  0E96               	movlw	150
  3765   0032D2  5E0E               	subwf	___fltol@exp1^0,f,c
  3766   0032D4  BE0E               	btfsc	___fltol@exp1^0,7,c
  3767   0032D6  EF71  F019         	goto	u5380
  3768   0032DA  EF6F  F019         	goto	u5381
  3769   0032DE                     u5381:
  3770   0032DE  EF87  F019         	goto	l4838
  3771   0032E2                     u5380:
  3772   0032E2  500E               	movf	___fltol@exp1^0,w,c
  3773   0032E4  0A80               	xorlw	128
  3774   0032E6  0F97               	addlw	151
  3775   0032E8  B0D8               	btfsc	status,0,c
  3776   0032EA  EF79  F019         	goto	u5391
  3777   0032EE  EF7B  F019         	goto	u5390
  3778   0032F2                     u5391:
  3779   0032F2  EF7D  F019         	goto	l4834
  3780   0032F6                     u5390:
  3781   0032F6  EF40  F019         	goto	l4814
  3782   0032FA                     l4834:
  3783   0032FA  90D8               	bcf	status,0,c
  3784   0032FC  3208               	rrcf	(___fltol@f1+3)^0,f,c
  3785   0032FE  3207               	rrcf	(___fltol@f1+2)^0,f,c
  3786   003300  3206               	rrcf	(___fltol@f1+1)^0,f,c
  3787   003302  3205               	rrcf	___fltol@f1^0,f,c
  3788   003304  3E0E               	incfsz	___fltol@exp1^0,f,c
  3789   003306  EF7D  F019         	goto	l4834
  3790   00330A  EF9F  F019         	goto	l4848
  3791   00330E                     l4838:
  3792   00330E  0E1F               	movlw	31
  3793   003310  640E               	cpfsgt	___fltol@exp1^0,c
  3794   003312  EF8D  F019         	goto	u5401
  3795   003316  EF8F  F019         	goto	u5400
  3796   00331A                     u5401:
  3797   00331A  EF97  F019         	goto	l4846
  3798   00331E                     u5400:
  3799   00331E  EF40  F019         	goto	l4814
  3800   003322                     l4844:
  3801   003322  90D8               	bcf	status,0,c
  3802   003324  3605               	rlcf	___fltol@f1^0,f,c
  3803   003326  3606               	rlcf	(___fltol@f1+1)^0,f,c
  3804   003328  3607               	rlcf	(___fltol@f1+2)^0,f,c
  3805   00332A  3608               	rlcf	(___fltol@f1+3)^0,f,c
  3806   00332C  060E               	decf	___fltol@exp1^0,f,c
  3807   00332E                     l4846:
  3808   00332E  500E               	movf	___fltol@exp1^0,w,c
  3809   003330  A4D8               	btfss	status,2,c
  3810   003332  EF9D  F019         	goto	u5411
  3811   003336  EF9F  F019         	goto	u5410
  3812   00333A                     u5411:
  3813   00333A  EF91  F019         	goto	l4844
  3814   00333E                     u5410:
  3815   00333E                     l4848:
  3816   00333E  500D               	movf	___fltol@sign1^0,w,c
  3817   003340  B4D8               	btfsc	status,2,c
  3818   003342  EFA5  F019         	goto	u5421
  3819   003346  EFA7  F019         	goto	u5420
  3820   00334A                     u5421:
  3821   00334A  EFAF  F019         	goto	l4852
  3822   00334E                     u5420:
  3823   00334E  1E08               	comf	(___fltol@f1+3)^0,f,c
  3824   003350  1E07               	comf	(___fltol@f1+2)^0,f,c
  3825   003352  1E06               	comf	(___fltol@f1+1)^0,f,c
  3826   003354  6C05               	negf	___fltol@f1^0,c
  3827   003356  0E00               	movlw	0
  3828   003358  2206               	addwfc	(___fltol@f1+1)^0,f,c
  3829   00335A  2207               	addwfc	(___fltol@f1+2)^0,f,c
  3830   00335C  2208               	addwfc	(___fltol@f1+3)^0,f,c
  3831   00335E                     l4852:
  3832   00335E  C005  F005         	movff	___fltol@f1,?___fltol
  3833   003362  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  3834   003366  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  3835   00336A  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  3836   00336E                     l592:
  3837   00336E  0012               	return		;funcret
  3838   003370                     __end_of___fltol:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function ___flsub *****************
  3842 ;; Defined at:
  3843 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  b               4   29[COMRAM] long 
  3846 ;;  a               4   33[COMRAM] long 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  4   29[COMRAM] long 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3858 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;Total ram usage:        8 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 3
  3865 ;; This function calls:
  3866 ;;		___fladd
  3867 ;; This function is called by:
  3868 ;;		_efgtoa
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text11
  3873   003B1E                     __ptext11:
  3874                           	callstack 0
  3875   003B1E                     ___flsub:
  3876                           	callstack 23
  3877   003B1E  0E00               	movlw	0
  3878   003B20  1A22               	xorwf	___flsub@a^0,f,c
  3879   003B22  0E00               	movlw	0
  3880   003B24  1A23               	xorwf	(___flsub@a+1)^0,f,c
  3881   003B26  0E00               	movlw	0
  3882   003B28  1A24               	xorwf	(___flsub@a+2)^0,f,c
  3883   003B2A  0E80               	movlw	128
  3884   003B2C  1A25               	xorwf	(___flsub@a+3)^0,f,c
  3885   003B2E  C01E  F005         	movff	___flsub@b,___fladd@b
  3886   003B32  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  3887   003B36  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  3888   003B3A  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  3889   003B3E  C022  F009         	movff	___flsub@a,___fladd@a
  3890   003B42  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  3891   003B46  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  3892   003B4A  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  3893   003B4E  EC14  F00C         	call	___fladd	;wreg free
  3894   003B52  C005  F01E         	movff	?___fladd,?___flsub
  3895   003B56  C006  F01F         	movff	?___fladd+1,?___flsub+1
  3896   003B5A  C007  F020         	movff	?___fladd+2,?___flsub+2
  3897   003B5E  C008  F021         	movff	?___fladd+3,?___flsub+3
  3898   003B62  0012               	return		;funcret
  3899   003B64                     __end_of___flsub:
  3900                           	callstack 0
  3901                           
  3902 ;; *************** function ___fladd *****************
  3903 ;; Defined at:
  3904 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  b               4    4[COMRAM] long 
  3907 ;;  a               4    8[COMRAM] long 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  grs             1   19[COMRAM] unsigned char 
  3910 ;;  bexp            1   18[COMRAM] unsigned char 
  3911 ;;  aexp            1   17[COMRAM] unsigned char 
  3912 ;;  signs           1   16[COMRAM] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  4    4[COMRAM] unsigned char 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3922 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;Total ram usage:       16 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; Hardware stack levels required when called: 2
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		___flsub
  3933 ;;		_efgtoa
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text12
  3938   001828                     __ptext12:
  3939                           	callstack 0
  3940   001828                     ___fladd:
  3941                           	callstack 23
  3942   001828  5008               	movf	(___fladd@b+3)^0,w,c
  3943   00182A  0B80               	andlw	128
  3944   00182C  6E11               	movwf	___fladd@signs^0,c
  3945   00182E  5008               	movf	(___fladd@b+3)^0,w,c
  3946   001830  2408               	addwf	(___fladd@b+3)^0,w,c
  3947   001832  6E13               	movwf	___fladd@bexp^0,c
  3948   001834  AE07               	btfss	(___fladd@b+2)^0,7,c
  3949   001836  EF1F  F00C         	goto	u4321
  3950   00183A  EF21  F00C         	goto	u4320
  3951   00183E                     u4321:
  3952   00183E  EF22  F00C         	goto	l4208
  3953   001842                     u4320:
  3954   001842  8013               	bsf	___fladd@bexp^0,0,c
  3955   001844                     l4208:
  3956   001844  5013               	movf	___fladd@bexp^0,w,c
  3957   001846  B4D8               	btfsc	status,2,c
  3958   001848  EF28  F00C         	goto	u4331
  3959   00184C  EF2A  F00C         	goto	u4330
  3960   001850                     u4331:
  3961   001850  EF3F  F00C         	goto	l4218
  3962   001854                     u4330:
  3963   001854  2813               	incf	___fladd@bexp^0,w,c
  3964   001856  A4D8               	btfss	status,2,c
  3965   001858  EF30  F00C         	goto	u4341
  3966   00185C  EF32  F00C         	goto	u4340
  3967   001860                     u4341:
  3968   001860  EF3A  F00C         	goto	l4214
  3969   001864                     u4340:
  3970   001864  0E00               	movlw	0
  3971   001866  6E05               	movwf	___fladd@b^0,c
  3972   001868  0E00               	movlw	0
  3973   00186A  6E06               	movwf	(___fladd@b+1)^0,c
  3974   00186C  0E00               	movlw	0
  3975   00186E  6E07               	movwf	(___fladd@b+2)^0,c
  3976   001870  0E00               	movlw	0
  3977   001872  6E08               	movwf	(___fladd@b+3)^0,c
  3978   001874                     l4214:
  3979   001874  8E07               	bsf	(___fladd@b+2)^0,7,c
  3980   001876  0E00               	movlw	0
  3981   001878  6E08               	movwf	(___fladd@b+3)^0,c
  3982   00187A  EF47  F00C         	goto	l4220
  3983   00187E                     l4218:
  3984   00187E  0E00               	movlw	0
  3985   001880  6E05               	movwf	___fladd@b^0,c
  3986   001882  0E00               	movlw	0
  3987   001884  6E06               	movwf	(___fladd@b+1)^0,c
  3988   001886  0E00               	movlw	0
  3989   001888  6E07               	movwf	(___fladd@b+2)^0,c
  3990   00188A  0E00               	movlw	0
  3991   00188C  6E08               	movwf	(___fladd@b+3)^0,c
  3992   00188E                     l4220:
  3993   00188E  500C               	movf	(___fladd@a+3)^0,w,c
  3994   001890  0B80               	andlw	128
  3995   001892  6E12               	movwf	___fladd@aexp^0,c
  3996   001894  5011               	movf	___fladd@signs^0,w,c
  3997   001896  1812               	xorwf	___fladd@aexp^0,w,c
  3998   001898  B4D8               	btfsc	status,2,c
  3999   00189A  EF51  F00C         	goto	u4351
  4000   00189E  EF53  F00C         	goto	u4350
  4001   0018A2                     u4351:
  4002   0018A2  EF54  F00C         	goto	l4226
  4003   0018A6                     u4350:
  4004   0018A6  8C11               	bsf	___fladd@signs^0,6,c
  4005   0018A8                     l4226:
  4006   0018A8  500C               	movf	(___fladd@a+3)^0,w,c
  4007   0018AA  240C               	addwf	(___fladd@a+3)^0,w,c
  4008   0018AC  6E12               	movwf	___fladd@aexp^0,c
  4009   0018AE  AE0B               	btfss	(___fladd@a+2)^0,7,c
  4010   0018B0  EF5C  F00C         	goto	u4361
  4011   0018B4  EF5E  F00C         	goto	u4360
  4012   0018B8                     u4361:
  4013   0018B8  EF5F  F00C         	goto	l4232
  4014   0018BC                     u4360:
  4015   0018BC  8012               	bsf	___fladd@aexp^0,0,c
  4016   0018BE                     l4232:
  4017   0018BE  5012               	movf	___fladd@aexp^0,w,c
  4018   0018C0  B4D8               	btfsc	status,2,c
  4019   0018C2  EF65  F00C         	goto	u4371
  4020   0018C6  EF67  F00C         	goto	u4370
  4021   0018CA                     u4371:
  4022   0018CA  EF7C  F00C         	goto	l4242
  4023   0018CE                     u4370:
  4024   0018CE  2812               	incf	___fladd@aexp^0,w,c
  4025   0018D0  A4D8               	btfss	status,2,c
  4026   0018D2  EF6D  F00C         	goto	u4381
  4027   0018D6  EF6F  F00C         	goto	u4380
  4028   0018DA                     u4381:
  4029   0018DA  EF77  F00C         	goto	l4238
  4030   0018DE                     u4380:
  4031   0018DE  0E00               	movlw	0
  4032   0018E0  6E09               	movwf	___fladd@a^0,c
  4033   0018E2  0E00               	movlw	0
  4034   0018E4  6E0A               	movwf	(___fladd@a+1)^0,c
  4035   0018E6  0E00               	movlw	0
  4036   0018E8  6E0B               	movwf	(___fladd@a+2)^0,c
  4037   0018EA  0E00               	movlw	0
  4038   0018EC  6E0C               	movwf	(___fladd@a+3)^0,c
  4039   0018EE                     l4238:
  4040   0018EE  8E0B               	bsf	(___fladd@a+2)^0,7,c
  4041   0018F0  0E00               	movlw	0
  4042   0018F2  6E0C               	movwf	(___fladd@a+3)^0,c
  4043   0018F4  EF84  F00C         	goto	l4244
  4044   0018F8                     l4242:
  4045   0018F8  0E00               	movlw	0
  4046   0018FA  6E09               	movwf	___fladd@a^0,c
  4047   0018FC  0E00               	movlw	0
  4048   0018FE  6E0A               	movwf	(___fladd@a+1)^0,c
  4049   001900  0E00               	movlw	0
  4050   001902  6E0B               	movwf	(___fladd@a+2)^0,c
  4051   001904  0E00               	movlw	0
  4052   001906  6E0C               	movwf	(___fladd@a+3)^0,c
  4053   001908                     l4244:
  4054   001908  5013               	movf	___fladd@bexp^0,w,c
  4055   00190A  5C12               	subwf	___fladd@aexp^0,w,c
  4056   00190C  B0D8               	btfsc	status,0,c
  4057   00190E  EF8B  F00C         	goto	u4391
  4058   001912  EF8D  F00C         	goto	u4390
  4059   001916                     u4391:
  4060   001916  EFB4  F00C         	goto	l4280
  4061   00191A                     u4390:
  4062   00191A  AC11               	btfss	___fladd@signs^0,6,c
  4063   00191C  EF92  F00C         	goto	u4401
  4064   001920  EF94  F00C         	goto	u4400
  4065   001924                     u4401:
  4066   001924  EF96  F00C         	goto	l4250
  4067   001928                     u4400:
  4068   001928  0E80               	movlw	128
  4069   00192A  1A11               	xorwf	___fladd@signs^0,f,c
  4070   00192C                     l4250:
  4071   00192C  C013  F014         	movff	___fladd@bexp,___fladd@grs
  4072   001930  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4073   001934  C014  F012         	movff	___fladd@grs,___fladd@aexp
  4074   001938  C005  F014         	movff	___fladd@b,___fladd@grs
  4075   00193C  C009  F005         	movff	___fladd@a,___fladd@b
  4076   001940  C014  F009         	movff	___fladd@grs,___fladd@a
  4077   001944  C006  F014         	movff	___fladd@b+1,___fladd@grs
  4078   001948  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  4079   00194C  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  4080   001950  C007  F014         	movff	___fladd@b+2,___fladd@grs
  4081   001954  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  4082   001958  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  4083   00195C  C008  F014         	movff	___fladd@b+3,___fladd@grs
  4084   001960  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  4085   001964  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  4086   001968                     l4280:
  4087   001968  0E00               	movlw	0
  4088   00196A  6E14               	movwf	___fladd@grs^0,c
  4089   00196C  5013               	movf	___fladd@bexp^0,w,c
  4090   00196E  C012  F00D         	movff	___fladd@aexp,??___fladd
  4091   001972  6A0E               	clrf	(??___fladd+1)^0,c
  4092   001974  5E0D               	subwf	??___fladd^0,f,c
  4093   001976  0E00               	movlw	0
  4094   001978  5A0E               	subwfb	(??___fladd+1)^0,f,c
  4095   00197A  BE0E               	btfsc	(??___fladd+1)^0,7,c
  4096   00197C  EFC9  F00C         	goto	u4411
  4097   001980  500E               	movf	(??___fladd+1)^0,w,c
  4098   001982  E109               	bnz	u4410
  4099   001984  0E1A               	movlw	26
  4100   001986  5C0D               	subwf	??___fladd^0,w,c
  4101   001988  A0D8               	btfss	status,0,c
  4102   00198A  EFC9  F00C         	goto	u4411
  4103   00198E  EFCB  F00C         	goto	u4410
  4104   001992                     u4411:
  4105   001992  EF02  F00D         	goto	l824
  4106   001996                     u4410:
  4107   001996  5005               	movf	___fladd@b^0,w,c
  4108   001998  1006               	iorwf	(___fladd@b+1)^0,w,c
  4109   00199A  1007               	iorwf	(___fladd@b+2)^0,w,c
  4110   00199C  1008               	iorwf	(___fladd@b+3)^0,w,c
  4111   00199E  A4D8               	btfss	status,2,c
  4112   0019A0  EFD4  F00C         	goto	u4421
  4113   0019A4  EFD7  F00C         	goto	u4420
  4114   0019A8                     u4421:
  4115   0019A8  0E01               	movlw	1
  4116   0019AA  EFD8  F00C         	goto	u4430
  4117   0019AE                     u4420:
  4118   0019AE  0E00               	movlw	0
  4119   0019B0                     u4430:
  4120   0019B0  6E14               	movwf	___fladd@grs^0,c
  4121   0019B2  0E00               	movlw	0
  4122   0019B4  6E05               	movwf	___fladd@b^0,c
  4123   0019B6  0E00               	movlw	0
  4124   0019B8  6E06               	movwf	(___fladd@b+1)^0,c
  4125   0019BA  0E00               	movlw	0
  4126   0019BC  6E07               	movwf	(___fladd@b+2)^0,c
  4127   0019BE  0E00               	movlw	0
  4128   0019C0  6E08               	movwf	(___fladd@b+3)^0,c
  4129   0019C2  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4130   0019C6  EF0B  F00D         	goto	l823
  4131   0019CA                     l825:
  4132   0019CA  A014               	btfss	___fladd@grs^0,0,c
  4133   0019CC  EFEA  F00C         	goto	u4441
  4134   0019D0  EFEC  F00C         	goto	u4440
  4135   0019D4                     u4441:
  4136   0019D4  EFF2  F00C         	goto	l4292
  4137   0019D8                     u4440:
  4138   0019D8  90D8               	bcf	status,0,c
  4139   0019DA  3014               	rrcf	___fladd@grs^0,w,c
  4140   0019DC  0901               	iorlw	1
  4141   0019DE  6E14               	movwf	___fladd@grs^0,c
  4142   0019E0  EFF4  F00C         	goto	l4294
  4143   0019E4                     l4292:
  4144   0019E4  90D8               	bcf	status,0,c
  4145   0019E6  3214               	rrcf	___fladd@grs^0,f,c
  4146   0019E8                     l4294:
  4147   0019E8  A005               	btfss	___fladd@b^0,0,c
  4148   0019EA  EFF9  F00C         	goto	u4451
  4149   0019EE  EFFB  F00C         	goto	u4450
  4150   0019F2                     u4451:
  4151   0019F2  EFFC  F00C         	goto	l4298
  4152   0019F6                     u4450:
  4153   0019F6  8E14               	bsf	___fladd@grs^0,7,c
  4154   0019F8                     l4298:
  4155   0019F8  3408               	rlcf	(___fladd@b+3)^0,w,c
  4156   0019FA  3208               	rrcf	(___fladd@b+3)^0,f,c
  4157   0019FC  3207               	rrcf	(___fladd@b+2)^0,f,c
  4158   0019FE  3206               	rrcf	(___fladd@b+1)^0,f,c
  4159   001A00  3205               	rrcf	___fladd@b^0,f,c
  4160   001A02  2A13               	incf	___fladd@bexp^0,f,c
  4161   001A04                     l824:
  4162   001A04  5012               	movf	___fladd@aexp^0,w,c
  4163   001A06  5C13               	subwf	___fladd@bexp^0,w,c
  4164   001A08  A0D8               	btfss	status,0,c
  4165   001A0A  EF09  F00D         	goto	u4461
  4166   001A0E  EF0B  F00D         	goto	u4460
  4167   001A12                     u4461:
  4168   001A12  EFE5  F00C         	goto	l825
  4169   001A16                     u4460:
  4170   001A16                     l823:
  4171   001A16  BC11               	btfsc	___fladd@signs^0,6,c
  4172   001A18  EF10  F00D         	goto	u4471
  4173   001A1C  EF12  F00D         	goto	u4470
  4174   001A20                     u4471:
  4175   001A20  EF52  F00D         	goto	l4326
  4176   001A24                     u4470:
  4177   001A24  5013               	movf	___fladd@bexp^0,w,c
  4178   001A26  A4D8               	btfss	status,2,c
  4179   001A28  EF18  F00D         	goto	u4481
  4180   001A2C  EF1A  F00D         	goto	u4480
  4181   001A30                     u4481:
  4182   001A30  EF24  F00D         	goto	l4308
  4183   001A34                     u4480:
  4184   001A34  0E00               	movlw	0
  4185   001A36  6E05               	movwf	?___fladd^0,c
  4186   001A38  0E00               	movlw	0
  4187   001A3A  6E06               	movwf	(?___fladd+1)^0,c
  4188   001A3C  0E00               	movlw	0
  4189   001A3E  6E07               	movwf	(?___fladd+2)^0,c
  4190   001A40  0E00               	movlw	0
  4191   001A42  6E08               	movwf	(?___fladd+3)^0,c
  4192   001A44  EF73  F00E         	goto	l832
  4193   001A48                     l4308:
  4194   001A48  5009               	movf	___fladd@a^0,w,c
  4195   001A4A  2605               	addwf	___fladd@b^0,f,c
  4196   001A4C  500A               	movf	(___fladd@a+1)^0,w,c
  4197   001A4E  2206               	addwfc	(___fladd@b+1)^0,f,c
  4198   001A50  500B               	movf	(___fladd@a+2)^0,w,c
  4199   001A52  2207               	addwfc	(___fladd@b+2)^0,f,c
  4200   001A54  500C               	movf	(___fladd@a+3)^0,w,c
  4201   001A56  2208               	addwfc	(___fladd@b+3)^0,f,c
  4202   001A58  A008               	btfss	(___fladd@b+3)^0,0,c
  4203   001A5A  EF31  F00D         	goto	u4491
  4204   001A5E  EF33  F00D         	goto	u4490
  4205   001A62                     u4491:
  4206   001A62  EFDF  F00D         	goto	l4362
  4207   001A66                     u4490:
  4208   001A66  A014               	btfss	___fladd@grs^0,0,c
  4209   001A68  EF38  F00D         	goto	u4501
  4210   001A6C  EF3A  F00D         	goto	u4500
  4211   001A70                     u4501:
  4212   001A70  EF40  F00D         	goto	l4316
  4213   001A74                     u4500:
  4214   001A74  90D8               	bcf	status,0,c
  4215   001A76  3014               	rrcf	___fladd@grs^0,w,c
  4216   001A78  0901               	iorlw	1
  4217   001A7A  6E14               	movwf	___fladd@grs^0,c
  4218   001A7C  EF42  F00D         	goto	l4318
  4219   001A80                     l4316:
  4220   001A80  90D8               	bcf	status,0,c
  4221   001A82  3214               	rrcf	___fladd@grs^0,f,c
  4222   001A84                     l4318:
  4223   001A84  A005               	btfss	___fladd@b^0,0,c
  4224   001A86  EF47  F00D         	goto	u4511
  4225   001A8A  EF49  F00D         	goto	u4510
  4226   001A8E                     u4511:
  4227   001A8E  EF4A  F00D         	goto	l4322
  4228   001A92                     u4510:
  4229   001A92  8E14               	bsf	___fladd@grs^0,7,c
  4230   001A94                     l4322:
  4231   001A94  3408               	rlcf	(___fladd@b+3)^0,w,c
  4232   001A96  3208               	rrcf	(___fladd@b+3)^0,f,c
  4233   001A98  3207               	rrcf	(___fladd@b+2)^0,f,c
  4234   001A9A  3206               	rrcf	(___fladd@b+1)^0,f,c
  4235   001A9C  3205               	rrcf	___fladd@b^0,f,c
  4236   001A9E  2A13               	incf	___fladd@bexp^0,f,c
  4237   001AA0  EFDF  F00D         	goto	l4362
  4238   001AA4                     l4326:
  4239   001AA4  5009               	movf	___fladd@a^0,w,c
  4240   001AA6  5C05               	subwf	___fladd@b^0,w,c
  4241   001AA8  500A               	movf	(___fladd@a+1)^0,w,c
  4242   001AAA  5806               	subwfb	(___fladd@b+1)^0,w,c
  4243   001AAC  500B               	movf	(___fladd@a+2)^0,w,c
  4244   001AAE  5807               	subwfb	(___fladd@b+2)^0,w,c
  4245   001AB0  5008               	movf	(___fladd@b+3)^0,w,c
  4246   001AB2  0A80               	xorlw	128
  4247   001AB4  6E0D               	movwf	??___fladd^0,c
  4248   001AB6  500C               	movf	(___fladd@a+3)^0,w,c
  4249   001AB8  0A80               	xorlw	128
  4250   001ABA  580D               	subwfb	??___fladd^0,w,c
  4251   001ABC  B0D8               	btfsc	status,0,c
  4252   001ABE  EF63  F00D         	goto	u4521
  4253   001AC2  EF65  F00D         	goto	u4520
  4254   001AC6                     u4521:
  4255   001AC6  EF90  F00D         	goto	l4336
  4256   001ACA                     u4520:
  4257   001ACA  5005               	movf	___fladd@b^0,w,c
  4258   001ACC  5C09               	subwf	___fladd@a^0,w,c
  4259   001ACE  6E0D               	movwf	??___fladd^0,c
  4260   001AD0  5006               	movf	(___fladd@b+1)^0,w,c
  4261   001AD2  580A               	subwfb	(___fladd@a+1)^0,w,c
  4262   001AD4  6E0E               	movwf	(??___fladd+1)^0,c
  4263   001AD6  5007               	movf	(___fladd@b+2)^0,w,c
  4264   001AD8  580B               	subwfb	(___fladd@a+2)^0,w,c
  4265   001ADA  6E0F               	movwf	(??___fladd+2)^0,c
  4266   001ADC  5008               	movf	(___fladd@b+3)^0,w,c
  4267   001ADE  580C               	subwfb	(___fladd@a+3)^0,w,c
  4268   001AE0  6E10               	movwf	(??___fladd+3)^0,c
  4269   001AE2  0EFF               	movlw	255
  4270   001AE4  240D               	addwf	??___fladd^0,w,c
  4271   001AE6  6E05               	movwf	___fladd@b^0,c
  4272   001AE8  0EFF               	movlw	255
  4273   001AEA  200E               	addwfc	(??___fladd+1)^0,w,c
  4274   001AEC  6E06               	movwf	(___fladd@b+1)^0,c
  4275   001AEE  0EFF               	movlw	255
  4276   001AF0  200F               	addwfc	(??___fladd+2)^0,w,c
  4277   001AF2  6E07               	movwf	(___fladd@b+2)^0,c
  4278   001AF4  0EFF               	movlw	255
  4279   001AF6  2010               	addwfc	(??___fladd+3)^0,w,c
  4280   001AF8  6E08               	movwf	(___fladd@b+3)^0,c
  4281   001AFA  0E80               	movlw	128
  4282   001AFC  1A11               	xorwf	___fladd@signs^0,f,c
  4283   001AFE  6C14               	negf	___fladd@grs^0,c
  4284   001B00  5014               	movf	___fladd@grs^0,w,c
  4285   001B02  A4D8               	btfss	status,2,c
  4286   001B04  EF86  F00D         	goto	u4531
  4287   001B08  EF88  F00D         	goto	u4530
  4288   001B0C                     u4531:
  4289   001B0C  EF98  F00D         	goto	l840
  4290   001B10                     u4530:
  4291   001B10  0E01               	movlw	1
  4292   001B12  2605               	addwf	___fladd@b^0,f,c
  4293   001B14  0E00               	movlw	0
  4294   001B16  2206               	addwfc	(___fladd@b+1)^0,f,c
  4295   001B18  2207               	addwfc	(___fladd@b+2)^0,f,c
  4296   001B1A  2208               	addwfc	(___fladd@b+3)^0,f,c
  4297   001B1C  EF98  F00D         	goto	l840
  4298   001B20                     l4336:
  4299   001B20  5009               	movf	___fladd@a^0,w,c
  4300   001B22  5E05               	subwf	___fladd@b^0,f,c
  4301   001B24  500A               	movf	(___fladd@a+1)^0,w,c
  4302   001B26  5A06               	subwfb	(___fladd@b+1)^0,f,c
  4303   001B28  500B               	movf	(___fladd@a+2)^0,w,c
  4304   001B2A  5A07               	subwfb	(___fladd@b+2)^0,f,c
  4305   001B2C  500C               	movf	(___fladd@a+3)^0,w,c
  4306   001B2E  5A08               	subwfb	(___fladd@b+3)^0,f,c
  4307   001B30                     l840:
  4308   001B30  5005               	movf	___fladd@b^0,w,c
  4309   001B32  1006               	iorwf	(___fladd@b+1)^0,w,c
  4310   001B34  1007               	iorwf	(___fladd@b+2)^0,w,c
  4311   001B36  1008               	iorwf	(___fladd@b+3)^0,w,c
  4312   001B38  A4D8               	btfss	status,2,c
  4313   001B3A  EFA1  F00D         	goto	u4541
  4314   001B3E  EFA3  F00D         	goto	u4540
  4315   001B42                     u4541:
  4316   001B42  EFD8  F00D         	goto	l4360
  4317   001B46                     u4540:
  4318   001B46  5014               	movf	___fladd@grs^0,w,c
  4319   001B48  A4D8               	btfss	status,2,c
  4320   001B4A  EFA9  F00D         	goto	u4551
  4321   001B4E  EFAB  F00D         	goto	u4550
  4322   001B52                     u4551:
  4323   001B52  EFD8  F00D         	goto	l4360
  4324   001B56                     u4550:
  4325   001B56  0E00               	movlw	0
  4326   001B58  6E05               	movwf	?___fladd^0,c
  4327   001B5A  0E00               	movlw	0
  4328   001B5C  6E06               	movwf	(?___fladd+1)^0,c
  4329   001B5E  0E00               	movlw	0
  4330   001B60  6E07               	movwf	(?___fladd+2)^0,c
  4331   001B62  0E00               	movlw	0
  4332   001B64  6E08               	movwf	(?___fladd+3)^0,c
  4333   001B66  EF73  F00E         	goto	l832
  4334   001B6A                     l4344:
  4335   001B6A  90D8               	bcf	status,0,c
  4336   001B6C  3605               	rlcf	___fladd@b^0,f,c
  4337   001B6E  3606               	rlcf	(___fladd@b+1)^0,f,c
  4338   001B70  3607               	rlcf	(___fladd@b+2)^0,f,c
  4339   001B72  3608               	rlcf	(___fladd@b+3)^0,f,c
  4340   001B74  AE14               	btfss	___fladd@grs^0,7,c
  4341   001B76  EFBF  F00D         	goto	u4561
  4342   001B7A  EFC1  F00D         	goto	u4560
  4343   001B7E                     u4561:
  4344   001B7E  EFC2  F00D         	goto	l4350
  4345   001B82                     u4560:
  4346   001B82  8005               	bsf	___fladd@b^0,0,c
  4347   001B84                     l4350:
  4348   001B84  A014               	btfss	___fladd@grs^0,0,c
  4349   001B86  EFC7  F00D         	goto	u4571
  4350   001B8A  EFC9  F00D         	goto	u4570
  4351   001B8E                     u4571:
  4352   001B8E  EFCD  F00D         	goto	l4354
  4353   001B92                     u4570:
  4354   001B92  80D8               	bsf	status,0,c
  4355   001B94  3614               	rlcf	___fladd@grs^0,f,c
  4356   001B96  EFCF  F00D         	goto	l4356
  4357   001B9A                     l4354:
  4358   001B9A  90D8               	bcf	status,0,c
  4359   001B9C  3614               	rlcf	___fladd@grs^0,f,c
  4360   001B9E                     l4356:
  4361   001B9E  5013               	movf	___fladd@bexp^0,w,c
  4362   001BA0  B4D8               	btfsc	status,2,c
  4363   001BA2  EFD5  F00D         	goto	u4581
  4364   001BA6  EFD7  F00D         	goto	u4580
  4365   001BAA                     u4581:
  4366   001BAA  EFD8  F00D         	goto	l4360
  4367   001BAE                     u4580:
  4368   001BAE  0613               	decf	___fladd@bexp^0,f,c
  4369   001BB0                     l4360:
  4370   001BB0  AE07               	btfss	(___fladd@b+2)^0,7,c
  4371   001BB2  EFDD  F00D         	goto	u4591
  4372   001BB6  EFDF  F00D         	goto	u4590
  4373   001BBA                     u4591:
  4374   001BBA  EFB5  F00D         	goto	l4344
  4375   001BBE                     u4590:
  4376   001BBE                     l4362:
  4377   001BBE  0E00               	movlw	0
  4378   001BC0  6E12               	movwf	___fladd@aexp^0,c
  4379   001BC2  AE14               	btfss	___fladd@grs^0,7,c
  4380   001BC4  EFE6  F00D         	goto	u4601
  4381   001BC8  EFE8  F00D         	goto	u4600
  4382   001BCC                     u4601:
  4383   001BCC  EF00  F00E         	goto	l849
  4384   001BD0                     u4600:
  4385   001BD0  C014  F00D         	movff	___fladd@grs,??___fladd
  4386   001BD4  0E7F               	movlw	127
  4387   001BD6  160D               	andwf	??___fladd^0,f,c
  4388   001BD8  B4D8               	btfsc	status,2,c
  4389   001BDA  EFF1  F00D         	goto	u4611
  4390   001BDE  EFF3  F00D         	goto	u4610
  4391   001BE2                     u4611:
  4392   001BE2  EFF7  F00D         	goto	l850
  4393   001BE6                     u4610:
  4394   001BE6                     l4368:
  4395   001BE6  0E01               	movlw	1
  4396   001BE8  6E12               	movwf	___fladd@aexp^0,c
  4397   001BEA  EF00  F00E         	goto	l849
  4398   001BEE                     l850:
  4399   001BEE  A005               	btfss	___fladd@b^0,0,c
  4400   001BF0  EFFC  F00D         	goto	u4621
  4401   001BF4  EFFE  F00D         	goto	u4620
  4402   001BF8                     u4621:
  4403   001BF8  EF00  F00E         	goto	l849
  4404   001BFC                     u4620:
  4405   001BFC  EFF3  F00D         	goto	l4368
  4406   001C00                     l849:
  4407   001C00  5012               	movf	___fladd@aexp^0,w,c
  4408   001C02  B4D8               	btfsc	status,2,c
  4409   001C04  EF06  F00E         	goto	u4631
  4410   001C08  EF08  F00E         	goto	u4630
  4411   001C0C                     u4631:
  4412   001C0C  EF33  F00E         	goto	l4380
  4413   001C10                     u4630:
  4414   001C10  0E01               	movlw	1
  4415   001C12  2605               	addwf	___fladd@b^0,f,c
  4416   001C14  0E00               	movlw	0
  4417   001C16  2206               	addwfc	(___fladd@b+1)^0,f,c
  4418   001C18  2207               	addwfc	(___fladd@b+2)^0,f,c
  4419   001C1A  2208               	addwfc	(___fladd@b+3)^0,f,c
  4420   001C1C  A008               	btfss	(___fladd@b+3)^0,0,c
  4421   001C1E  EF13  F00E         	goto	u4641
  4422   001C22  EF15  F00E         	goto	u4640
  4423   001C26                     u4641:
  4424   001C26  EF33  F00E         	goto	l4380
  4425   001C2A                     u4640:
  4426   001C2A  C005  F00D         	movff	___fladd@b,??___fladd
  4427   001C2E  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  4428   001C32  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  4429   001C36  C008  F010         	movff	___fladd@b+3,??___fladd+3
  4430   001C3A  3410               	rlcf	(??___fladd+3)^0,w,c
  4431   001C3C  3210               	rrcf	(??___fladd+3)^0,f,c
  4432   001C3E  320F               	rrcf	(??___fladd+2)^0,f,c
  4433   001C40  320E               	rrcf	(??___fladd+1)^0,f,c
  4434   001C42  320D               	rrcf	??___fladd^0,f,c
  4435   001C44  C00D  F005         	movff	??___fladd,___fladd@b
  4436   001C48  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  4437   001C4C  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  4438   001C50  C010  F008         	movff	??___fladd+3,___fladd@b+3
  4439   001C54  2813               	incf	___fladd@bexp^0,w,c
  4440   001C56  B4D8               	btfsc	status,2,c
  4441   001C58  EF30  F00E         	goto	u4651
  4442   001C5C  EF32  F00E         	goto	u4650
  4443   001C60                     u4651:
  4444   001C60  EF33  F00E         	goto	l4380
  4445   001C64                     u4650:
  4446   001C64  2A13               	incf	___fladd@bexp^0,f,c
  4447   001C66                     l4380:
  4448   001C66  2813               	incf	___fladd@bexp^0,w,c
  4449   001C68  B4D8               	btfsc	status,2,c
  4450   001C6A  EF39  F00E         	goto	u4661
  4451   001C6E  EF3B  F00E         	goto	u4660
  4452   001C72                     u4661:
  4453   001C72  EF43  F00E         	goto	l4384
  4454   001C76                     u4660:
  4455   001C76  5013               	movf	___fladd@bexp^0,w,c
  4456   001C78  A4D8               	btfss	status,2,c
  4457   001C7A  EF41  F00E         	goto	u4671
  4458   001C7E  EF43  F00E         	goto	u4670
  4459   001C82                     u4671:
  4460   001C82  EF55  F00E         	goto	l4388
  4461   001C86                     u4670:
  4462   001C86                     l4384:
  4463   001C86  0E00               	movlw	0
  4464   001C88  6E05               	movwf	___fladd@b^0,c
  4465   001C8A  0E00               	movlw	0
  4466   001C8C  6E06               	movwf	(___fladd@b+1)^0,c
  4467   001C8E  0E00               	movlw	0
  4468   001C90  6E07               	movwf	(___fladd@b+2)^0,c
  4469   001C92  0E00               	movlw	0
  4470   001C94  6E08               	movwf	(___fladd@b+3)^0,c
  4471   001C96  5013               	movf	___fladd@bexp^0,w,c
  4472   001C98  A4D8               	btfss	status,2,c
  4473   001C9A  EF51  F00E         	goto	u4681
  4474   001C9E  EF53  F00E         	goto	u4680
  4475   001CA2                     u4681:
  4476   001CA2  EF55  F00E         	goto	l4388
  4477   001CA6                     u4680:
  4478   001CA6  0E00               	movlw	0
  4479   001CA8  6E11               	movwf	___fladd@signs^0,c
  4480   001CAA                     l4388:
  4481   001CAA  A013               	btfss	___fladd@bexp^0,0,c
  4482   001CAC  EF5A  F00E         	goto	u4691
  4483   001CB0  EF5C  F00E         	goto	u4690
  4484   001CB4                     u4691:
  4485   001CB4  EF5F  F00E         	goto	l4392
  4486   001CB8                     u4690:
  4487   001CB8  8E07               	bsf	(___fladd@b+2)^0,7,c
  4488   001CBA  EF60  F00E         	goto	l4394
  4489   001CBE                     l4392:
  4490   001CBE  9E07               	bcf	(___fladd@b+2)^0,7,c
  4491   001CC0                     l4394:
  4492   001CC0  90D8               	bcf	status,0,c
  4493   001CC2  3013               	rrcf	___fladd@bexp^0,w,c
  4494   001CC4  6E08               	movwf	(___fladd@b+3)^0,c
  4495   001CC6  AE11               	btfss	___fladd@signs^0,7,c
  4496   001CC8  EF68  F00E         	goto	u4701
  4497   001CCC  EF6A  F00E         	goto	u4700
  4498   001CD0                     u4701:
  4499   001CD0  EF6B  F00E         	goto	l4400
  4500   001CD4                     u4700:
  4501   001CD4  8E08               	bsf	(___fladd@b+3)^0,7,c
  4502   001CD6                     l4400:
  4503   001CD6  C005  F005         	movff	___fladd@b,?___fladd
  4504   001CDA  C006  F006         	movff	___fladd@b+1,?___fladd+1
  4505   001CDE  C007  F007         	movff	___fladd@b+2,?___fladd+2
  4506   001CE2  C008  F008         	movff	___fladd@b+3,?___fladd+3
  4507   001CE6                     l832:
  4508   001CE6  0012               	return		;funcret
  4509   001CE8                     __end_of___fladd:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function ___flneg *****************
  4513 ;; Defined at:
  4514 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  f1              4    4[COMRAM] unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  4    4[COMRAM] unsigned char 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;Total ram usage:        4 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; Hardware stack levels required when called: 2
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_efgtoa
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text13
  4543   003CAE                     __ptext13:
  4544                           	callstack 0
  4545   003CAE                     ___flneg:
  4546                           	callstack 24
  4547   003CAE  5005               	movf	___flneg@f1^0,w,c
  4548   003CB0  1006               	iorwf	(___flneg@f1+1)^0,w,c
  4549   003CB2  1007               	iorwf	(___flneg@f1+2)^0,w,c
  4550   003CB4  1008               	iorwf	(___flneg@f1+3)^0,w,c
  4551   003CB6  B4D8               	btfsc	status,2,c
  4552   003CB8  EF60  F01E         	goto	u5351
  4553   003CBC  EF62  F01E         	goto	u5350
  4554   003CC0                     u5351:
  4555   003CC0  EF6A  F01E         	goto	l4808
  4556   003CC4                     u5350:
  4557   003CC4  0E00               	movlw	0
  4558   003CC6  1A05               	xorwf	___flneg@f1^0,f,c
  4559   003CC8  0E00               	movlw	0
  4560   003CCA  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  4561   003CCC  0E00               	movlw	0
  4562   003CCE  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  4563   003CD0  0E80               	movlw	128
  4564   003CD2  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  4565   003CD4                     l4808:
  4566   003CD4  C005  F005         	movff	___flneg@f1,?___flneg
  4567   003CD8  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  4568   003CDC  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  4569   003CE0  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  4570   003CE4  0012               	return		;funcret
  4571   003CE6                     __end_of___flneg:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function ___flmul *****************
  4575 ;; Defined at:
  4576 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  b               4    4[COMRAM] unsigned char 
  4579 ;;  a               4    8[COMRAM] unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  prod            4   23[COMRAM] struct .
  4582 ;;  grs             4   18[COMRAM] unsigned long 
  4583 ;;  temp            2   27[COMRAM] struct .
  4584 ;;  bexp            1   22[COMRAM] unsigned char 
  4585 ;;  aexp            1   17[COMRAM] unsigned char 
  4586 ;;  sign            1   16[COMRAM] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  4    4[COMRAM] unsigned char 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, prodl, prodh
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4596 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4598 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;Total ram usage:       25 bytes
  4601 ;; Hardware stack levels used: 1
  4602 ;; Hardware stack levels required when called: 2
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_efgtoa
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text14
  4611   001CE8                     __ptext14:
  4612                           	callstack 0
  4613   001CE8                     ___flmul:
  4614                           	callstack 24
  4615   001CE8  5008               	movf	(___flmul@b+3)^0,w,c
  4616   001CEA  0B80               	andlw	128
  4617   001CEC  6E11               	movwf	___flmul@sign^0,c
  4618   001CEE  5008               	movf	(___flmul@b+3)^0,w,c
  4619   001CF0  2408               	addwf	(___flmul@b+3)^0,w,c
  4620   001CF2  6E17               	movwf	___flmul@bexp^0,c
  4621   001CF4  AE07               	btfss	(___flmul@b+2)^0,7,c
  4622   001CF6  EF7F  F00E         	goto	u5081
  4623   001CFA  EF81  F00E         	goto	u5080
  4624   001CFE                     u5081:
  4625   001CFE  EF82  F00E         	goto	l4636
  4626   001D02                     u5080:
  4627   001D02  8017               	bsf	___flmul@bexp^0,0,c
  4628   001D04                     l4636:
  4629   001D04  5017               	movf	___flmul@bexp^0,w,c
  4630   001D06  B4D8               	btfsc	status,2,c
  4631   001D08  EF88  F00E         	goto	u5091
  4632   001D0C  EF8A  F00E         	goto	u5090
  4633   001D10                     u5091:
  4634   001D10  EF9D  F00E         	goto	l4644
  4635   001D14                     u5090:
  4636   001D14  2817               	incf	___flmul@bexp^0,w,c
  4637   001D16  A4D8               	btfss	status,2,c
  4638   001D18  EF90  F00E         	goto	u5101
  4639   001D1C  EF92  F00E         	goto	u5100
  4640   001D20                     u5101:
  4641   001D20  EF9A  F00E         	goto	l4642
  4642   001D24                     u5100:
  4643   001D24  0E00               	movlw	0
  4644   001D26  6E05               	movwf	___flmul@b^0,c
  4645   001D28  0E00               	movlw	0
  4646   001D2A  6E06               	movwf	(___flmul@b+1)^0,c
  4647   001D2C  0E00               	movlw	0
  4648   001D2E  6E07               	movwf	(___flmul@b+2)^0,c
  4649   001D30  0E00               	movlw	0
  4650   001D32  6E08               	movwf	(___flmul@b+3)^0,c
  4651   001D34                     l4642:
  4652   001D34  8E07               	bsf	(___flmul@b+2)^0,7,c
  4653   001D36  EFA5  F00E         	goto	l4646
  4654   001D3A                     l4644:
  4655   001D3A  0E00               	movlw	0
  4656   001D3C  6E05               	movwf	___flmul@b^0,c
  4657   001D3E  0E00               	movlw	0
  4658   001D40  6E06               	movwf	(___flmul@b+1)^0,c
  4659   001D42  0E00               	movlw	0
  4660   001D44  6E07               	movwf	(___flmul@b+2)^0,c
  4661   001D46  0E00               	movlw	0
  4662   001D48  6E08               	movwf	(___flmul@b+3)^0,c
  4663   001D4A                     l4646:
  4664   001D4A  500C               	movf	(___flmul@a+3)^0,w,c
  4665   001D4C  0B80               	andlw	128
  4666   001D4E  1A11               	xorwf	___flmul@sign^0,f,c
  4667   001D50  500C               	movf	(___flmul@a+3)^0,w,c
  4668   001D52  240C               	addwf	(___flmul@a+3)^0,w,c
  4669   001D54  6E12               	movwf	___flmul@aexp^0,c
  4670   001D56  AE0B               	btfss	(___flmul@a+2)^0,7,c
  4671   001D58  EFB0  F00E         	goto	u5111
  4672   001D5C  EFB2  F00E         	goto	u5110
  4673   001D60                     u5111:
  4674   001D60  EFB3  F00E         	goto	l4654
  4675   001D64                     u5110:
  4676   001D64  8012               	bsf	___flmul@aexp^0,0,c
  4677   001D66                     l4654:
  4678   001D66  5012               	movf	___flmul@aexp^0,w,c
  4679   001D68  B4D8               	btfsc	status,2,c
  4680   001D6A  EFB9  F00E         	goto	u5121
  4681   001D6E  EFBB  F00E         	goto	u5120
  4682   001D72                     u5121:
  4683   001D72  EFCE  F00E         	goto	l4662
  4684   001D76                     u5120:
  4685   001D76  2812               	incf	___flmul@aexp^0,w,c
  4686   001D78  A4D8               	btfss	status,2,c
  4687   001D7A  EFC1  F00E         	goto	u5131
  4688   001D7E  EFC3  F00E         	goto	u5130
  4689   001D82                     u5131:
  4690   001D82  EFCB  F00E         	goto	l4660
  4691   001D86                     u5130:
  4692   001D86  0E00               	movlw	0
  4693   001D88  6E09               	movwf	___flmul@a^0,c
  4694   001D8A  0E00               	movlw	0
  4695   001D8C  6E0A               	movwf	(___flmul@a+1)^0,c
  4696   001D8E  0E00               	movlw	0
  4697   001D90  6E0B               	movwf	(___flmul@a+2)^0,c
  4698   001D92  0E00               	movlw	0
  4699   001D94  6E0C               	movwf	(___flmul@a+3)^0,c
  4700   001D96                     l4660:
  4701   001D96  8E0B               	bsf	(___flmul@a+2)^0,7,c
  4702   001D98  EFD6  F00E         	goto	l909
  4703   001D9C                     l4662:
  4704   001D9C  0E00               	movlw	0
  4705   001D9E  6E09               	movwf	___flmul@a^0,c
  4706   001DA0  0E00               	movlw	0
  4707   001DA2  6E0A               	movwf	(___flmul@a+1)^0,c
  4708   001DA4  0E00               	movlw	0
  4709   001DA6  6E0B               	movwf	(___flmul@a+2)^0,c
  4710   001DA8  0E00               	movlw	0
  4711   001DAA  6E0C               	movwf	(___flmul@a+3)^0,c
  4712   001DAC                     l909:
  4713   001DAC  5012               	movf	___flmul@aexp^0,w,c
  4714   001DAE  B4D8               	btfsc	status,2,c
  4715   001DB0  EFDC  F00E         	goto	u5141
  4716   001DB4  EFDE  F00E         	goto	u5140
  4717   001DB8                     u5141:
  4718   001DB8  EFE6  F00E         	goto	l4666
  4719   001DBC                     u5140:
  4720   001DBC  5017               	movf	___flmul@bexp^0,w,c
  4721   001DBE  A4D8               	btfss	status,2,c
  4722   001DC0  EFE4  F00E         	goto	u5151
  4723   001DC4  EFE6  F00E         	goto	u5150
  4724   001DC8                     u5151:
  4725   001DC8  EFF0  F00E         	goto	l4670
  4726   001DCC                     u5150:
  4727   001DCC                     l4666:
  4728   001DCC  0E00               	movlw	0
  4729   001DCE  6E05               	movwf	?___flmul^0,c
  4730   001DD0  0E00               	movlw	0
  4731   001DD2  6E06               	movwf	(?___flmul+1)^0,c
  4732   001DD4  0E00               	movlw	0
  4733   001DD6  6E07               	movwf	(?___flmul+2)^0,c
  4734   001DD8  0E00               	movlw	0
  4735   001DDA  6E08               	movwf	(?___flmul+3)^0,c
  4736   001DDC  EF88  F010         	goto	l913
  4737   001DE0                     l4670:
  4738   001DE0  500B               	movf	(___flmul@a+2)^0,w,c
  4739   001DE2  0205               	mulwf	___flmul@b^0,c
  4740   001DE4  CFF3 F01C          	movff	prodl,___flmul@temp
  4741   001DE8  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4742   001DEC  501C               	movf	___flmul@temp^0,w,c
  4743   001DEE  6E13               	movwf	___flmul@grs^0,c
  4744   001DF0  6A14               	clrf	(___flmul@grs+1)^0,c
  4745   001DF2  6A15               	clrf	(___flmul@grs+2)^0,c
  4746   001DF4  6A16               	clrf	(___flmul@grs+3)^0,c
  4747   001DF6  501D               	movf	(___flmul@temp+1)^0,w,c
  4748   001DF8  6E18               	movwf	___flmul@prod^0,c
  4749   001DFA  6A19               	clrf	(___flmul@prod+1)^0,c
  4750   001DFC  6A1A               	clrf	(___flmul@prod+2)^0,c
  4751   001DFE  6A1B               	clrf	(___flmul@prod+3)^0,c
  4752   001E00  500A               	movf	(___flmul@a+1)^0,w,c
  4753   001E02  0206               	mulwf	(___flmul@b+1)^0,c
  4754   001E04  CFF3 F01C          	movff	prodl,___flmul@temp
  4755   001E08  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4756   001E0C  501C               	movf	___flmul@temp^0,w,c
  4757   001E0E  2613               	addwf	___flmul@grs^0,f,c
  4758   001E10  0E00               	movlw	0
  4759   001E12  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4760   001E14  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4761   001E16  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4762   001E18  501D               	movf	(___flmul@temp+1)^0,w,c
  4763   001E1A  2618               	addwf	___flmul@prod^0,f,c
  4764   001E1C  0E00               	movlw	0
  4765   001E1E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4766   001E20  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4767   001E22  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4768   001E24  5009               	movf	___flmul@a^0,w,c
  4769   001E26  0207               	mulwf	(___flmul@b+2)^0,c
  4770   001E28  CFF3 F01C          	movff	prodl,___flmul@temp
  4771   001E2C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4772   001E30  501C               	movf	___flmul@temp^0,w,c
  4773   001E32  2613               	addwf	___flmul@grs^0,f,c
  4774   001E34  0E00               	movlw	0
  4775   001E36  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4776   001E38  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4777   001E3A  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4778   001E3C  501D               	movf	(___flmul@temp+1)^0,w,c
  4779   001E3E  2618               	addwf	___flmul@prod^0,f,c
  4780   001E40  0E00               	movlw	0
  4781   001E42  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4782   001E44  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4783   001E46  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4784   001E48  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4785   001E4C  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4786   001E50  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4787   001E54  6A13               	clrf	___flmul@grs^0,c
  4788   001E56  5009               	movf	___flmul@a^0,w,c
  4789   001E58  0206               	mulwf	(___flmul@b+1)^0,c
  4790   001E5A  CFF3 F01C          	movff	prodl,___flmul@temp
  4791   001E5E  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4792   001E62  501C               	movf	___flmul@temp^0,w,c
  4793   001E64  2613               	addwf	___flmul@grs^0,f,c
  4794   001E66  501D               	movf	(___flmul@temp+1)^0,w,c
  4795   001E68  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4796   001E6A  0E00               	movlw	0
  4797   001E6C  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4798   001E6E  0E00               	movlw	0
  4799   001E70  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4800   001E72  500A               	movf	(___flmul@a+1)^0,w,c
  4801   001E74  0205               	mulwf	___flmul@b^0,c
  4802   001E76  CFF3 F01C          	movff	prodl,___flmul@temp
  4803   001E7A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4804   001E7E  501C               	movf	___flmul@temp^0,w,c
  4805   001E80  2613               	addwf	___flmul@grs^0,f,c
  4806   001E82  501D               	movf	(___flmul@temp+1)^0,w,c
  4807   001E84  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4808   001E86  0E00               	movlw	0
  4809   001E88  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4810   001E8A  0E00               	movlw	0
  4811   001E8C  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4812   001E8E  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4813   001E92  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4814   001E96  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4815   001E9A  6A13               	clrf	___flmul@grs^0,c
  4816   001E9C  5009               	movf	___flmul@a^0,w,c
  4817   001E9E  0205               	mulwf	___flmul@b^0,c
  4818   001EA0  CFF3 F01C          	movff	prodl,___flmul@temp
  4819   001EA4  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4820   001EA8  501C               	movf	___flmul@temp^0,w,c
  4821   001EAA  2613               	addwf	___flmul@grs^0,f,c
  4822   001EAC  501D               	movf	(___flmul@temp+1)^0,w,c
  4823   001EAE  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4824   001EB0  0E00               	movlw	0
  4825   001EB2  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4826   001EB4  0E00               	movlw	0
  4827   001EB6  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4828   001EB8  500B               	movf	(___flmul@a+2)^0,w,c
  4829   001EBA  0206               	mulwf	(___flmul@b+1)^0,c
  4830   001EBC  CFF3 F01C          	movff	prodl,___flmul@temp
  4831   001EC0  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4832   001EC4  501C               	movf	___flmul@temp^0,w,c
  4833   001EC6  2618               	addwf	___flmul@prod^0,f,c
  4834   001EC8  501D               	movf	(___flmul@temp+1)^0,w,c
  4835   001ECA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4836   001ECC  0E00               	movlw	0
  4837   001ECE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4838   001ED0  0E00               	movlw	0
  4839   001ED2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4840   001ED4  500A               	movf	(___flmul@a+1)^0,w,c
  4841   001ED6  0207               	mulwf	(___flmul@b+2)^0,c
  4842   001ED8  CFF3 F01C          	movff	prodl,___flmul@temp
  4843   001EDC  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4844   001EE0  501C               	movf	___flmul@temp^0,w,c
  4845   001EE2  2618               	addwf	___flmul@prod^0,f,c
  4846   001EE4  501D               	movf	(___flmul@temp+1)^0,w,c
  4847   001EE6  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4848   001EE8  0E00               	movlw	0
  4849   001EEA  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4850   001EEC  0E00               	movlw	0
  4851   001EEE  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4852   001EF0  500B               	movf	(___flmul@a+2)^0,w,c
  4853   001EF2  0207               	mulwf	(___flmul@b+2)^0,c
  4854   001EF4  CFF3 F01C          	movff	prodl,___flmul@temp
  4855   001EF8  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4856   001EFC  501C               	movf	___flmul@temp^0,w,c
  4857   001EFE  6E0D               	movwf	??___flmul^0,c
  4858   001F00  501D               	movf	(___flmul@temp+1)^0,w,c
  4859   001F02  6E0E               	movwf	(??___flmul+1)^0,c
  4860   001F04  6A0F               	clrf	(??___flmul+2)^0,c
  4861   001F06  6A10               	clrf	(??___flmul+3)^0,c
  4862   001F08  C00F  F010         	movff	??___flmul+2,??___flmul+3
  4863   001F0C  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  4864   001F10  C00D  F00E         	movff	??___flmul,??___flmul+1
  4865   001F14  6A0D               	clrf	??___flmul^0,c
  4866   001F16  500D               	movf	??___flmul^0,w,c
  4867   001F18  2618               	addwf	___flmul@prod^0,f,c
  4868   001F1A  500E               	movf	(??___flmul+1)^0,w,c
  4869   001F1C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4870   001F1E  500F               	movf	(??___flmul+2)^0,w,c
  4871   001F20  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4872   001F22  5010               	movf	(??___flmul+3)^0,w,c
  4873   001F24  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4874   001F26  C013  F00D         	movff	___flmul@grs,??___flmul
  4875   001F2A  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  4876   001F2E  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  4877   001F32  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  4878   001F36  0E19               	movlw	25
  4879   001F38  EFA3  F00F         	goto	u5160
  4880   001F3C                     u5165:
  4881   001F3C  90D8               	bcf	status,0,c
  4882   001F3E  3210               	rrcf	(??___flmul+3)^0,f,c
  4883   001F40  320F               	rrcf	(??___flmul+2)^0,f,c
  4884   001F42  320E               	rrcf	(??___flmul+1)^0,f,c
  4885   001F44  320D               	rrcf	??___flmul^0,f,c
  4886   001F46                     u5160:
  4887   001F46  2EE8               	decfsz	wreg,f,c
  4888   001F48  EF9E  F00F         	goto	u5165
  4889   001F4C  500D               	movf	??___flmul^0,w,c
  4890   001F4E  2618               	addwf	___flmul@prod^0,f,c
  4891   001F50  500E               	movf	(??___flmul+1)^0,w,c
  4892   001F52  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4893   001F54  500F               	movf	(??___flmul+2)^0,w,c
  4894   001F56  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4895   001F58  5010               	movf	(??___flmul+3)^0,w,c
  4896   001F5A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4897   001F5C  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4898   001F60  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4899   001F64  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4900   001F68  6A13               	clrf	___flmul@grs^0,c
  4901   001F6A  5012               	movf	___flmul@aexp^0,w,c
  4902   001F6C  C017  F00D         	movff	___flmul@bexp,??___flmul
  4903   001F70  6A0E               	clrf	(??___flmul+1)^0,c
  4904   001F72  260D               	addwf	??___flmul^0,f,c
  4905   001F74  0E00               	movlw	0
  4906   001F76  220E               	addwfc	(??___flmul+1)^0,f,c
  4907   001F78  0E82               	movlw	130
  4908   001F7A  240D               	addwf	??___flmul^0,w,c
  4909   001F7C  6E1C               	movwf	___flmul@temp^0,c
  4910   001F7E  0EFF               	movlw	255
  4911   001F80  200E               	addwfc	(??___flmul+1)^0,w,c
  4912   001F82  6E1D               	movwf	(___flmul@temp+1)^0,c
  4913   001F84  EFD9  F00F         	goto	l4718
  4914   001F88                     l4712:
  4915   001F88  90D8               	bcf	status,0,c
  4916   001F8A  3618               	rlcf	___flmul@prod^0,f,c
  4917   001F8C  3619               	rlcf	(___flmul@prod+1)^0,f,c
  4918   001F8E  361A               	rlcf	(___flmul@prod+2)^0,f,c
  4919   001F90  361B               	rlcf	(___flmul@prod+3)^0,f,c
  4920   001F92  AE16               	btfss	(___flmul@grs+3)^0,7,c
  4921   001F94  EFCE  F00F         	goto	u5171
  4922   001F98  EFD0  F00F         	goto	u5170
  4923   001F9C                     u5171:
  4924   001F9C  EFD1  F00F         	goto	l916
  4925   001FA0                     u5170:
  4926   001FA0  8018               	bsf	___flmul@prod^0,0,c
  4927   001FA2                     l916:
  4928   001FA2  90D8               	bcf	status,0,c
  4929   001FA4  3613               	rlcf	___flmul@grs^0,f,c
  4930   001FA6  3614               	rlcf	(___flmul@grs+1)^0,f,c
  4931   001FA8  3615               	rlcf	(___flmul@grs+2)^0,f,c
  4932   001FAA  3616               	rlcf	(___flmul@grs+3)^0,f,c
  4933   001FAC  061C               	decf	___flmul@temp^0,f,c
  4934   001FAE  A0D8               	btfss	status,0,c
  4935   001FB0  061D               	decf	(___flmul@temp+1)^0,f,c
  4936   001FB2                     l4718:
  4937   001FB2  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  4938   001FB4  EFDE  F00F         	goto	u5181
  4939   001FB8  EFE0  F00F         	goto	u5180
  4940   001FBC                     u5181:
  4941   001FBC  EFC4  F00F         	goto	l4712
  4942   001FC0                     u5180:
  4943   001FC0  0E00               	movlw	0
  4944   001FC2  6E12               	movwf	___flmul@aexp^0,c
  4945   001FC4  AE16               	btfss	(___flmul@grs+3)^0,7,c
  4946   001FC6  EFE7  F00F         	goto	u5191
  4947   001FCA  EFE9  F00F         	goto	u5190
  4948   001FCE                     u5191:
  4949   001FCE  EF0D  F010         	goto	l918
  4950   001FD2                     u5190:
  4951   001FD2  0EFF               	movlw	255
  4952   001FD4  1413               	andwf	___flmul@grs^0,w,c
  4953   001FD6  6E0D               	movwf	??___flmul^0,c
  4954   001FD8  0EFF               	movlw	255
  4955   001FDA  1414               	andwf	(___flmul@grs+1)^0,w,c
  4956   001FDC  6E0E               	movwf	(??___flmul+1)^0,c
  4957   001FDE  0EFF               	movlw	255
  4958   001FE0  1415               	andwf	(___flmul@grs+2)^0,w,c
  4959   001FE2  6E0F               	movwf	(??___flmul+2)^0,c
  4960   001FE4  0E7F               	movlw	127
  4961   001FE6  1416               	andwf	(___flmul@grs+3)^0,w,c
  4962   001FE8  6E10               	movwf	(??___flmul+3)^0,c
  4963   001FEA  500D               	movf	??___flmul^0,w,c
  4964   001FEC  100E               	iorwf	(??___flmul+1)^0,w,c
  4965   001FEE  100F               	iorwf	(??___flmul+2)^0,w,c
  4966   001FF0  1010               	iorwf	(??___flmul+3)^0,w,c
  4967   001FF2  B4D8               	btfsc	status,2,c
  4968   001FF4  EFFE  F00F         	goto	u5201
  4969   001FF8  EF00  F010         	goto	u5200
  4970   001FFC                     u5201:
  4971   001FFC  EF04  F010         	goto	l919
  4972   002000                     u5200:
  4973   002000                     l4726:
  4974   002000  0E01               	movlw	1
  4975   002002  6E12               	movwf	___flmul@aexp^0,c
  4976   002004  EF0D  F010         	goto	l918
  4977   002008                     l919:
  4978   002008  A018               	btfss	___flmul@prod^0,0,c
  4979   00200A  EF09  F010         	goto	u5211
  4980   00200E  EF0B  F010         	goto	u5210
  4981   002012                     u5211:
  4982   002012  EF0D  F010         	goto	l918
  4983   002016                     u5210:
  4984   002016  EF00  F010         	goto	l4726
  4985   00201A                     l918:
  4986   00201A  5012               	movf	___flmul@aexp^0,w,c
  4987   00201C  B4D8               	btfsc	status,2,c
  4988   00201E  EF13  F010         	goto	u5221
  4989   002022  EF15  F010         	goto	u5220
  4990   002026                     u5221:
  4991   002026  EF39  F010         	goto	l4738
  4992   00202A                     u5220:
  4993   00202A  0E01               	movlw	1
  4994   00202C  2618               	addwf	___flmul@prod^0,f,c
  4995   00202E  0E00               	movlw	0
  4996   002030  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4997   002032  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4998   002034  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4999   002036  A01B               	btfss	(___flmul@prod+3)^0,0,c
  5000   002038  EF20  F010         	goto	u5231
  5001   00203C  EF22  F010         	goto	u5230
  5002   002040                     u5231:
  5003   002040  EF39  F010         	goto	l4738
  5004   002044                     u5230:
  5005   002044  C018  F00D         	movff	___flmul@prod,??___flmul
  5006   002048  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  5007   00204C  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  5008   002050  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  5009   002054  3410               	rlcf	(??___flmul+3)^0,w,c
  5010   002056  3210               	rrcf	(??___flmul+3)^0,f,c
  5011   002058  320F               	rrcf	(??___flmul+2)^0,f,c
  5012   00205A  320E               	rrcf	(??___flmul+1)^0,f,c
  5013   00205C  320D               	rrcf	??___flmul^0,f,c
  5014   00205E  C00D  F018         	movff	??___flmul,___flmul@prod
  5015   002062  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  5016   002066  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  5017   00206A  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  5018   00206E  4A1C               	infsnz	___flmul@temp^0,f,c
  5019   002070  2A1D               	incf	(___flmul@temp+1)^0,f,c
  5020   002072                     l4738:
  5021   002072  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  5022   002074  EF44  F010         	goto	u5241
  5023   002078  501D               	movf	(___flmul@temp+1)^0,w,c
  5024   00207A  E108               	bnz	u5240
  5025   00207C  281C               	incf	___flmul@temp^0,w,c
  5026   00207E  A0D8               	btfss	status,0,c
  5027   002080  EF44  F010         	goto	u5241
  5028   002084  EF46  F010         	goto	u5240
  5029   002088                     u5241:
  5030   002088  EF50  F010         	goto	l4742
  5031   00208C                     u5240:
  5032   00208C  0E00               	movlw	0
  5033   00208E  6E18               	movwf	___flmul@prod^0,c
  5034   002090  0E00               	movlw	0
  5035   002092  6E19               	movwf	(___flmul@prod+1)^0,c
  5036   002094  0E80               	movlw	128
  5037   002096  6E1A               	movwf	(___flmul@prod+2)^0,c
  5038   002098  0E7F               	movlw	127
  5039   00209A  6E1B               	movwf	(___flmul@prod+3)^0,c
  5040   00209C  EF7E  F010         	goto	l4754
  5041   0020A0                     l4742:
  5042   0020A0  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  5043   0020A2  EF5D  F010         	goto	u5250
  5044   0020A6  501D               	movf	(___flmul@temp+1)^0,w,c
  5045   0020A8  E106               	bnz	u5251
  5046   0020AA  041C               	decf	___flmul@temp^0,w,c
  5047   0020AC  B0D8               	btfsc	status,0,c
  5048   0020AE  EF5B  F010         	goto	u5251
  5049   0020B2  EF5D  F010         	goto	u5250
  5050   0020B6                     u5251:
  5051   0020B6  EF69  F010         	goto	l926
  5052   0020BA                     u5250:
  5053   0020BA  0E00               	movlw	0
  5054   0020BC  6E18               	movwf	___flmul@prod^0,c
  5055   0020BE  0E00               	movlw	0
  5056   0020C0  6E19               	movwf	(___flmul@prod+1)^0,c
  5057   0020C2  0E00               	movlw	0
  5058   0020C4  6E1A               	movwf	(___flmul@prod+2)^0,c
  5059   0020C6  0E00               	movlw	0
  5060   0020C8  6E1B               	movwf	(___flmul@prod+3)^0,c
  5061   0020CA  0E00               	movlw	0
  5062   0020CC  6E11               	movwf	___flmul@sign^0,c
  5063   0020CE  EF7E  F010         	goto	l4754
  5064   0020D2                     l926:
  5065   0020D2  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  5066   0020D6  0EFF               	movlw	255
  5067   0020D8  1618               	andwf	___flmul@prod^0,f,c
  5068   0020DA  0EFF               	movlw	255
  5069   0020DC  1619               	andwf	(___flmul@prod+1)^0,f,c
  5070   0020DE  0E7F               	movlw	127
  5071   0020E0  161A               	andwf	(___flmul@prod+2)^0,f,c
  5072   0020E2  0E00               	movlw	0
  5073   0020E4  161B               	andwf	(___flmul@prod+3)^0,f,c
  5074   0020E6  A017               	btfss	___flmul@bexp^0,0,c
  5075   0020E8  EF78  F010         	goto	u5261
  5076   0020EC  EF7A  F010         	goto	u5260
  5077   0020F0                     u5261:
  5078   0020F0  EF7B  F010         	goto	l4752
  5079   0020F4                     u5260:
  5080   0020F4  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  5081   0020F6                     l4752:
  5082   0020F6  90D8               	bcf	status,0,c
  5083   0020F8  3017               	rrcf	___flmul@bexp^0,w,c
  5084   0020FA  6E1B               	movwf	(___flmul@prod+3)^0,c
  5085   0020FC                     l4754:
  5086   0020FC  5011               	movf	___flmul@sign^0,w,c
  5087   0020FE  121B               	iorwf	(___flmul@prod+3)^0,f,c
  5088   002100  C018  F005         	movff	___flmul@prod,?___flmul
  5089   002104  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  5090   002108  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  5091   00210C  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  5092   002110                     l913:
  5093   002110  0012               	return		;funcret
  5094   002112                     __end_of___flmul:
  5095                           	callstack 0
  5096                           
  5097 ;; *************** function ___flge *****************
  5098 ;; Defined at:
  5099 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  ff1             4   29[COMRAM] unsigned char 
  5102 ;;  ff2             4   33[COMRAM] unsigned char 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;		None               void
  5107 ;; Registers used:
  5108 ;;		wreg, status,2, status,0
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5114 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5117 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5118 ;;Total ram usage:       12 bytes
  5119 ;; Hardware stack levels used: 1
  5120 ;; Hardware stack levels required when called: 2
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_efgtoa
  5125 ;;		_Colour_decider
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text15
  5130   003370                     __ptext15:
  5131                           	callstack 0
  5132   003370                     ___flge:
  5133                           	callstack 24
  5134   003370  0E00               	movlw	0
  5135   003372  141E               	andwf	___flge@ff1^0,w,c
  5136   003374  6E26               	movwf	??___flge^0,c
  5137   003376  0E00               	movlw	0
  5138   003378  141F               	andwf	(___flge@ff1+1)^0,w,c
  5139   00337A  6E27               	movwf	(??___flge+1)^0,c
  5140   00337C  0E80               	movlw	128
  5141   00337E  1420               	andwf	(___flge@ff1+2)^0,w,c
  5142   003380  6E28               	movwf	(??___flge+2)^0,c
  5143   003382  0E7F               	movlw	127
  5144   003384  1421               	andwf	(___flge@ff1+3)^0,w,c
  5145   003386  6E29               	movwf	(??___flge+3)^0,c
  5146   003388  5026               	movf	??___flge^0,w,c
  5147   00338A  1027               	iorwf	(??___flge+1)^0,w,c
  5148   00338C  1028               	iorwf	(??___flge+2)^0,w,c
  5149   00338E  1029               	iorwf	(??___flge+3)^0,w,c
  5150   003390  A4D8               	btfss	status,2,c
  5151   003392  EFCD  F019         	goto	u5301
  5152   003396  EFCF  F019         	goto	u5300
  5153   00339A                     u5301:
  5154   00339A  EFD7  F019         	goto	l4786
  5155   00339E                     u5300:
  5156   00339E  0E00               	movlw	0
  5157   0033A0  6E1E               	movwf	___flge@ff1^0,c
  5158   0033A2  0E00               	movlw	0
  5159   0033A4  6E1F               	movwf	(___flge@ff1+1)^0,c
  5160   0033A6  0E00               	movlw	0
  5161   0033A8  6E20               	movwf	(___flge@ff1+2)^0,c
  5162   0033AA  0E00               	movlw	0
  5163   0033AC  6E21               	movwf	(___flge@ff1+3)^0,c
  5164   0033AE                     l4786:
  5165   0033AE  0E00               	movlw	0
  5166   0033B0  1422               	andwf	___flge@ff2^0,w,c
  5167   0033B2  6E26               	movwf	??___flge^0,c
  5168   0033B4  0E00               	movlw	0
  5169   0033B6  1423               	andwf	(___flge@ff2+1)^0,w,c
  5170   0033B8  6E27               	movwf	(??___flge+1)^0,c
  5171   0033BA  0E80               	movlw	128
  5172   0033BC  1424               	andwf	(___flge@ff2+2)^0,w,c
  5173   0033BE  6E28               	movwf	(??___flge+2)^0,c
  5174   0033C0  0E7F               	movlw	127
  5175   0033C2  1425               	andwf	(___flge@ff2+3)^0,w,c
  5176   0033C4  6E29               	movwf	(??___flge+3)^0,c
  5177   0033C6  5026               	movf	??___flge^0,w,c
  5178   0033C8  1027               	iorwf	(??___flge+1)^0,w,c
  5179   0033CA  1028               	iorwf	(??___flge+2)^0,w,c
  5180   0033CC  1029               	iorwf	(??___flge+3)^0,w,c
  5181   0033CE  A4D8               	btfss	status,2,c
  5182   0033D0  EFEC  F019         	goto	u5311
  5183   0033D4  EFEE  F019         	goto	u5310
  5184   0033D8                     u5311:
  5185   0033D8  EFF6  F019         	goto	l4790
  5186   0033DC                     u5310:
  5187   0033DC  0E00               	movlw	0
  5188   0033DE  6E22               	movwf	___flge@ff2^0,c
  5189   0033E0  0E00               	movlw	0
  5190   0033E2  6E23               	movwf	(___flge@ff2+1)^0,c
  5191   0033E4  0E00               	movlw	0
  5192   0033E6  6E24               	movwf	(___flge@ff2+2)^0,c
  5193   0033E8  0E00               	movlw	0
  5194   0033EA  6E25               	movwf	(___flge@ff2+3)^0,c
  5195   0033EC                     l4790:
  5196   0033EC  AE21               	btfss	(___flge@ff1+3)^0,7,c
  5197   0033EE  EFFB  F019         	goto	u5321
  5198   0033F2  EFFD  F019         	goto	u5320
  5199   0033F6                     u5321:
  5200   0033F6  EF06  F01A         	goto	l4794
  5201   0033FA                     u5320:
  5202   0033FA  6C1E               	negf	___flge@ff1^0,c
  5203   0033FC  1E1F               	comf	(___flge@ff1+1)^0,f,c
  5204   0033FE  B0D8               	btfsc	status,0,c
  5205   003400  2A1F               	incf	(___flge@ff1+1)^0,f,c
  5206   003402  1E20               	comf	(___flge@ff1+2)^0,f,c
  5207   003404  B0D8               	btfsc	status,0,c
  5208   003406  2A20               	incf	(___flge@ff1+2)^0,f,c
  5209   003408  0E80               	movlw	128
  5210   00340A  5621               	subfwb	(___flge@ff1+3)^0,f,c
  5211   00340C                     l4794:
  5212   00340C  AE25               	btfss	(___flge@ff2+3)^0,7,c
  5213   00340E  EF0B  F01A         	goto	u5331
  5214   003412  EF0D  F01A         	goto	u5330
  5215   003416                     u5331:
  5216   003416  EF16  F01A         	goto	l560
  5217   00341A                     u5330:
  5218   00341A  6C22               	negf	___flge@ff2^0,c
  5219   00341C  1E23               	comf	(___flge@ff2+1)^0,f,c
  5220   00341E  B0D8               	btfsc	status,0,c
  5221   003420  2A23               	incf	(___flge@ff2+1)^0,f,c
  5222   003422  1E24               	comf	(___flge@ff2+2)^0,f,c
  5223   003424  B0D8               	btfsc	status,0,c
  5224   003426  2A24               	incf	(___flge@ff2+2)^0,f,c
  5225   003428  0E80               	movlw	128
  5226   00342A  5625               	subfwb	(___flge@ff2+3)^0,f,c
  5227   00342C                     l560:
  5228   00342C  0E00               	movlw	0
  5229   00342E  1A1E               	xorwf	___flge@ff1^0,f,c
  5230   003430  0E00               	movlw	0
  5231   003432  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  5232   003434  0E00               	movlw	0
  5233   003436  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  5234   003438  0E80               	movlw	128
  5235   00343A  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  5236   00343C  0E00               	movlw	0
  5237   00343E  1A22               	xorwf	___flge@ff2^0,f,c
  5238   003440  0E00               	movlw	0
  5239   003442  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  5240   003444  0E00               	movlw	0
  5241   003446  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  5242   003448  0E80               	movlw	128
  5243   00344A  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  5244   00344C  5022               	movf	___flge@ff2^0,w,c
  5245   00344E  5C1E               	subwf	___flge@ff1^0,w,c
  5246   003450  5023               	movf	(___flge@ff2+1)^0,w,c
  5247   003452  581F               	subwfb	(___flge@ff1+1)^0,w,c
  5248   003454  5024               	movf	(___flge@ff2+2)^0,w,c
  5249   003456  5820               	subwfb	(___flge@ff1+2)^0,w,c
  5250   003458  5025               	movf	(___flge@ff2+3)^0,w,c
  5251   00345A  5821               	subwfb	(___flge@ff1+3)^0,w,c
  5252   00345C  B0D8               	btfsc	status,0,c
  5253   00345E  EF33  F01A         	goto	u5341
  5254   003462  EF35  F01A         	goto	u5340
  5255   003466                     u5341:
  5256   003466  EF38  F01A         	goto	l4800
  5257   00346A                     u5340:
  5258   00346A  90D8               	bcf	status,0,c
  5259   00346C  EF39  F01A         	goto	l565
  5260   003470                     l4800:
  5261   003470  80D8               	bsf	status,0,c
  5262   003472                     l565:
  5263   003472  0012               	return		;funcret
  5264   003474                     __end_of___flge:
  5265                           	callstack 0
  5266                           
  5267 ;; *************** function ___fleq *****************
  5268 ;; Defined at:
  5269 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  ff1             4    4[COMRAM] unsigned char 
  5272 ;;  ff2             4    8[COMRAM] unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;		None               void
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5284 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;Total ram usage:       12 bytes
  5289 ;; Hardware stack levels used: 1
  5290 ;; Hardware stack levels required when called: 2
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_efgtoa
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text16
  5299   003700                     __ptext16:
  5300                           	callstack 0
  5301   003700                     ___fleq:
  5302                           	callstack 24
  5303   003700  0E00               	movlw	0
  5304   003702  1405               	andwf	___fleq@ff1^0,w,c
  5305   003704  6E0D               	movwf	??___fleq^0,c
  5306   003706  0E00               	movlw	0
  5307   003708  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5308   00370A  6E0E               	movwf	(??___fleq+1)^0,c
  5309   00370C  0E80               	movlw	128
  5310   00370E  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5311   003710  6E0F               	movwf	(??___fleq+2)^0,c
  5312   003712  0E7F               	movlw	127
  5313   003714  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5314   003716  6E10               	movwf	(??___fleq+3)^0,c
  5315   003718  500D               	movf	??___fleq^0,w,c
  5316   00371A  100E               	iorwf	(??___fleq+1)^0,w,c
  5317   00371C  100F               	iorwf	(??___fleq+2)^0,w,c
  5318   00371E  1010               	iorwf	(??___fleq+3)^0,w,c
  5319   003720  A4D8               	btfss	status,2,c
  5320   003722  EF95  F01B         	goto	u5271
  5321   003726  EF97  F01B         	goto	u5270
  5322   00372A                     u5271:
  5323   00372A  EF9F  F01B         	goto	l4770
  5324   00372E                     u5270:
  5325   00372E  0E00               	movlw	0
  5326   003730  6E05               	movwf	___fleq@ff1^0,c
  5327   003732  0E00               	movlw	0
  5328   003734  6E06               	movwf	(___fleq@ff1+1)^0,c
  5329   003736  0E00               	movlw	0
  5330   003738  6E07               	movwf	(___fleq@ff1+2)^0,c
  5331   00373A  0E00               	movlw	0
  5332   00373C  6E08               	movwf	(___fleq@ff1+3)^0,c
  5333   00373E                     l4770:
  5334   00373E  0E00               	movlw	0
  5335   003740  1409               	andwf	___fleq@ff2^0,w,c
  5336   003742  6E0D               	movwf	??___fleq^0,c
  5337   003744  0E00               	movlw	0
  5338   003746  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5339   003748  6E0E               	movwf	(??___fleq+1)^0,c
  5340   00374A  0E80               	movlw	128
  5341   00374C  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5342   00374E  6E0F               	movwf	(??___fleq+2)^0,c
  5343   003750  0E7F               	movlw	127
  5344   003752  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5345   003754  6E10               	movwf	(??___fleq+3)^0,c
  5346   003756  500D               	movf	??___fleq^0,w,c
  5347   003758  100E               	iorwf	(??___fleq+1)^0,w,c
  5348   00375A  100F               	iorwf	(??___fleq+2)^0,w,c
  5349   00375C  1010               	iorwf	(??___fleq+3)^0,w,c
  5350   00375E  A4D8               	btfss	status,2,c
  5351   003760  EFB4  F01B         	goto	u5281
  5352   003764  EFB6  F01B         	goto	u5280
  5353   003768                     u5281:
  5354   003768  EFBE  F01B         	goto	l4774
  5355   00376C                     u5280:
  5356   00376C  0E00               	movlw	0
  5357   00376E  6E09               	movwf	___fleq@ff2^0,c
  5358   003770  0E00               	movlw	0
  5359   003772  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5360   003774  0E00               	movlw	0
  5361   003776  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5362   003778  0E00               	movlw	0
  5363   00377A  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5364   00377C                     l4774:
  5365   00377C  5009               	movf	___fleq@ff2^0,w,c
  5366   00377E  1805               	xorwf	___fleq@ff1^0,w,c
  5367   003780  E10F               	bnz	u5290
  5368   003782  500A               	movf	(___fleq@ff2+1)^0,w,c
  5369   003784  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5370   003786  E10C               	bnz	u5290
  5371   003788  500B               	movf	(___fleq@ff2+2)^0,w,c
  5372   00378A  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5373   00378C  E109               	bnz	u5290
  5374   00378E  500C               	movf	(___fleq@ff2+3)^0,w,c
  5375   003790  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5376   003792  B4D8               	btfsc	status,2,c
  5377   003794  EFCE  F01B         	goto	u5291
  5378   003798  EFD0  F01B         	goto	u5290
  5379   00379C                     u5291:
  5380   00379C  EFD3  F01B         	goto	l4778
  5381   0037A0                     u5290:
  5382   0037A0  90D8               	bcf	status,0,c
  5383   0037A2  EFD4  F01B         	goto	l554
  5384   0037A6                     l4778:
  5385   0037A6  80D8               	bsf	status,0,c
  5386   0037A8                     l554:
  5387   0037A8  0012               	return		;funcret
  5388   0037AA                     __end_of___fleq:
  5389                           	callstack 0
  5390                           
  5391 ;; *************** function _dtoa *****************
  5392 ;; Defined at:
  5393 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  5396 ;;		 -> sprintf@f(11), 
  5397 ;;  d               8   33[COMRAM] long long 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  n               8   55[COMRAM] long long 
  5400 ;;  i               2   64[COMRAM] int 
  5401 ;;  w               2   53[COMRAM] int 
  5402 ;;  p               2   51[COMRAM] int 
  5403 ;;  s               1   63[COMRAM] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5413 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;Total ram usage:       35 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; Hardware stack levels required when called: 6
  5420 ;; This function calls:
  5421 ;;		___aodiv
  5422 ;;		___aomod
  5423 ;;		_abs
  5424 ;;		_pad
  5425 ;; This function is called by:
  5426 ;;		_vfpfcnvrt
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text17
  5431   0027B2                     __ptext17:
  5432                           	callstack 0
  5433   0027B2                     _dtoa:
  5434                           	callstack 21
  5435   0027B2                     
  5436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5437   0027B2  C022  F038         	movff	dtoa@d,dtoa@n
  5438   0027B6  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  5439   0027BA  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  5440   0027BE  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  5441   0027C2  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  5442   0027C6  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  5443   0027CA  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  5444   0027CE  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  5445   0027D2                     
  5446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5447   0027D2  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  5448   0027D4  EFEE  F013         	goto	u5681
  5449   0027D8  EFF1  F013         	goto	u5680
  5450   0027DC                     u5681:
  5451   0027DC  0E01               	movlw	1
  5452   0027DE  EFF2  F013         	goto	u5690
  5453   0027E2                     u5680:
  5454   0027E2  0E00               	movlw	0
  5455   0027E4                     u5690:
  5456   0027E4  6E40               	movwf	dtoa@s^0,c
  5457   0027E6                     
  5458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5459   0027E6  5040               	movf	dtoa@s^0,w,c
  5460   0027E8  B4D8               	btfsc	status,2,c
  5461   0027EA  EFF9  F013         	goto	u5701
  5462   0027EE  EFFB  F013         	goto	u5700
  5463   0027F2                     u5701:
  5464   0027F2  EF0B  F014         	goto	l4956
  5465   0027F6                     u5700:
  5466   0027F6                     
  5467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5468   0027F6  1E3F               	comf	(dtoa@n+7)^0,f,c
  5469   0027F8  1E3E               	comf	(dtoa@n+6)^0,f,c
  5470   0027FA  1E3D               	comf	(dtoa@n+5)^0,f,c
  5471   0027FC  1E3C               	comf	(dtoa@n+4)^0,f,c
  5472   0027FE  1E3B               	comf	(dtoa@n+3)^0,f,c
  5473   002800  1E3A               	comf	(dtoa@n+2)^0,f,c
  5474   002802  1E39               	comf	(dtoa@n+1)^0,f,c
  5475   002804  6C38               	negf	dtoa@n^0,c
  5476   002806  0E00               	movlw	0
  5477   002808  2239               	addwfc	(dtoa@n+1)^0,f,c
  5478   00280A  223A               	addwfc	(dtoa@n+2)^0,f,c
  5479   00280C  223B               	addwfc	(dtoa@n+3)^0,f,c
  5480   00280E  223C               	addwfc	(dtoa@n+4)^0,f,c
  5481   002810  223D               	addwfc	(dtoa@n+5)^0,f,c
  5482   002812  223E               	addwfc	(dtoa@n+6)^0,f,c
  5483   002814  223F               	addwfc	(dtoa@n+7)^0,f,c
  5484   002816                     l4956:
  5485                           
  5486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5487   002816  BE4E               	btfsc	(_prec+1)^0,7,c
  5488   002818  EF18  F014         	goto	u5710
  5489   00281C  504E               	movf	(_prec+1)^0,w,c
  5490   00281E  E106               	bnz	u5711
  5491   002820  044D               	decf	_prec^0,w,c
  5492   002822  B0D8               	btfsc	status,0,c
  5493   002824  EF16  F014         	goto	u5711
  5494   002828  EF18  F014         	goto	u5710
  5495   00282C                     u5711:
  5496   00282C  EF1E  F014         	goto	l1014
  5497   002830                     u5710:
  5498   002830  0E00               	movlw	0
  5499   002832  6E35               	movwf	(dtoa@p+1)^0,c
  5500   002834  0E01               	movlw	1
  5501   002836  6E34               	movwf	dtoa@p^0,c
  5502   002838  EF22  F014         	goto	l1016
  5503   00283C                     l1014:
  5504   00283C  C04D  F034         	movff	_prec,dtoa@p
  5505   002840  C04E  F035         	movff	_prec+1,dtoa@p+1
  5506   002844                     l1016:
  5507                           
  5508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5509   002844  C0C4  F036         	movff	_width,dtoa@w
  5510   002848  C0C5  F037         	movff	_width+1,dtoa@w+1
  5511   00284C                     
  5512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5513   00284C  5040               	movf	dtoa@s^0,w,c
  5514   00284E  B4D8               	btfsc	status,2,c
  5515   002850  EF2C  F014         	goto	u5721
  5516   002854  EF2E  F014         	goto	u5720
  5517   002858                     u5721:
  5518   002858  EF45  F014         	goto	l1017
  5519   00285C                     u5720:
  5520   00285C                     
  5521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5522   00285C  0636               	decf	dtoa@w^0,f,c
  5523   00285E  A0D8               	btfss	status,0,c
  5524   002860  0637               	decf	(dtoa@w+1)^0,f,c
  5525   002862                     
  5526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5527   002862  5040               	movf	dtoa@s^0,w,c
  5528   002864  A4D8               	btfss	status,2,c
  5529   002866  EF37  F014         	goto	u5731
  5530   00286A  EF39  F014         	goto	u5730
  5531   00286E                     u5731:
  5532   00286E  EF3F  F014         	goto	l4968
  5533   002872                     u5730:
  5534   002872  0E00               	movlw	0
  5535   002874  6E33               	movwf	(_dtoa$1460+1)^0,c
  5536   002876  0E2B               	movlw	43
  5537   002878  6E32               	movwf	_dtoa$1460^0,c
  5538   00287A  EF43  F014         	goto	l4970
  5539   00287E                     l4968:
  5540   00287E  0E00               	movlw	0
  5541   002880  6E33               	movwf	(_dtoa$1460+1)^0,c
  5542   002882  0E2D               	movlw	45
  5543   002884  6E32               	movwf	_dtoa$1460^0,c
  5544   002886                     l4970:
  5545   002886  C032  F040         	movff	_dtoa$1460,dtoa@s
  5546   00288A                     l1017:
  5547                           
  5548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5549   00288A  0E00               	movlw	0
  5550   00288C  6E42               	movwf	(dtoa@i+1)^0,c
  5551   00288E  0E4F               	movlw	79
  5552   002890  6E41               	movwf	dtoa@i^0,c
  5553   002892                     
  5554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5555   002892  0E00               	movlw	0
  5556   002894  0101               	movlb	1	; () banked
  5557   002896  6F9F               	movwf	(_dbuf+79)& (0+255),b
  5558                           
  5559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5560   002898  EFCA  F014         	goto	l4984
  5561   00289C                     l4974:
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5564   00289C  0641               	decf	dtoa@i^0,f,c
  5565   00289E  A0D8               	btfss	status,0,c
  5566   0028A0  0642               	decf	(dtoa@i+1)^0,f,c
  5567   0028A2                     
  5568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5569   0028A2  0E50               	movlw	low _dbuf
  5570   0028A4  2441               	addwf	dtoa@i^0,w,c
  5571   0028A6  6ED9               	movwf	fsr2l,c
  5572   0028A8  0E01               	movlw	high _dbuf
  5573   0028AA  2042               	addwfc	(dtoa@i+1)^0,w,c
  5574   0028AC  6EDA               	movwf	fsr2h,c
  5575   0028AE  C038  F005         	movff	dtoa@n,___aomod@dividend
  5576   0028B2  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  5577   0028B6  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  5578   0028BA  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  5579   0028BE  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  5580   0028C2  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  5581   0028C6  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  5582   0028CA  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  5583   0028CE  0E0A               	movlw	10
  5584   0028D0  6E0D               	movwf	___aomod@divisor^0,c
  5585   0028D2  0E00               	movlw	0
  5586   0028D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  5587   0028D6  0E00               	movlw	0
  5588   0028D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  5589   0028DA  0E00               	movlw	0
  5590   0028DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  5591   0028DE  0E00               	movlw	0
  5592   0028E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  5593   0028E2  0E00               	movlw	0
  5594   0028E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  5595   0028E6  0E00               	movlw	0
  5596   0028E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  5597   0028EA  0E00               	movlw	0
  5598   0028EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  5599   0028EE  EC83  F018         	call	___aomod	;wreg free
  5600   0028F2  C005  F02A         	movff	?___aomod,??_dtoa
  5601   0028F6  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  5602   0028FA  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  5603   0028FE  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  5604   002902  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  5605   002906  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  5606   00290A  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  5607   00290E  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  5608   002912  C02A  F017         	movff	??_dtoa,abs@a
  5609   002916  C02B  F018         	movff	??_dtoa+1,abs@a+1
  5610   00291A  EC37  F01E         	call	_abs	;wreg free
  5611   00291E  5017               	movf	?_abs^0,w,c
  5612   002920  0F30               	addlw	48
  5613   002922  6EDF               	movwf	indf2,c
  5614   002924                     
  5615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5616   002924  0634               	decf	dtoa@p^0,f,c
  5617   002926  A0D8               	btfss	status,0,c
  5618   002928  0635               	decf	(dtoa@p+1)^0,f,c
  5619   00292A                     
  5620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5621   00292A  0636               	decf	dtoa@w^0,f,c
  5622   00292C  A0D8               	btfss	status,0,c
  5623   00292E  0637               	decf	(dtoa@w+1)^0,f,c
  5624   002930                     
  5625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5626   002930  C038  F005         	movff	dtoa@n,___aodiv@dividend
  5627   002934  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  5628   002938  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  5629   00293C  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  5630   002940  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  5631   002944  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  5632   002948  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  5633   00294C  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  5634   002950  0E0A               	movlw	10
  5635   002952  6E0D               	movwf	___aodiv@divisor^0,c
  5636   002954  0E00               	movlw	0
  5637   002956  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  5638   002958  0E00               	movlw	0
  5639   00295A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  5640   00295C  0E00               	movlw	0
  5641   00295E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  5642   002960  0E00               	movlw	0
  5643   002962  6E11               	movwf	(___aodiv@divisor+4)^0,c
  5644   002964  0E00               	movlw	0
  5645   002966  6E12               	movwf	(___aodiv@divisor+5)^0,c
  5646   002968  0E00               	movlw	0
  5647   00296A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  5648   00296C  0E00               	movlw	0
  5649   00296E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  5650   002970  ECBF  F017         	call	___aodiv	;wreg free
  5651   002974  C005  F038         	movff	?___aodiv,dtoa@n
  5652   002978  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  5653   00297C  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  5654   002980  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  5655   002984  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  5656   002988  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  5657   00298C  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  5658   002990  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  5659   002994                     l4984:
  5660                           
  5661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5662   002994  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5663   002996  EFD5  F014         	goto	u5741
  5664   00299A  5042               	movf	(dtoa@i+1)^0,w,c
  5665   00299C  E108               	bnz	u5740
  5666   00299E  0441               	decf	dtoa@i^0,w,c
  5667   0029A0  A0D8               	btfss	status,0,c
  5668   0029A2  EFD5  F014         	goto	u5741
  5669   0029A6  EFD7  F014         	goto	u5740
  5670   0029AA                     u5741:
  5671   0029AA  EFF3  F014         	goto	l4990
  5672   0029AE                     u5740:
  5673   0029AE  5038               	movf	dtoa@n^0,w,c
  5674   0029B0  1039               	iorwf	(dtoa@n+1)^0,w,c
  5675   0029B2  103A               	iorwf	(dtoa@n+2)^0,w,c
  5676   0029B4  103B               	iorwf	(dtoa@n+3)^0,w,c
  5677   0029B6  103C               	iorwf	(dtoa@n+4)^0,w,c
  5678   0029B8  103D               	iorwf	(dtoa@n+5)^0,w,c
  5679   0029BA  103E               	iorwf	(dtoa@n+6)^0,w,c
  5680   0029BC  103F               	iorwf	(dtoa@n+7)^0,w,c
  5681   0029BE  A4D8               	btfss	status,2,c
  5682   0029C0  EFE4  F014         	goto	u5751
  5683   0029C4  EFE6  F014         	goto	u5750
  5684   0029C8                     u5751:
  5685   0029C8  EF4E  F014         	goto	l4974
  5686   0029CC                     u5750:
  5687   0029CC  BE35               	btfsc	(dtoa@p+1)^0,7,c
  5688   0029CE  EFF3  F014         	goto	u5760
  5689   0029D2  5035               	movf	(dtoa@p+1)^0,w,c
  5690   0029D4  E106               	bnz	u5761
  5691   0029D6  0434               	decf	dtoa@p^0,w,c
  5692   0029D8  B0D8               	btfsc	status,0,c
  5693   0029DA  EFF1  F014         	goto	u5761
  5694   0029DE  EFF3  F014         	goto	u5760
  5695   0029E2                     u5761:
  5696   0029E2  EF4E  F014         	goto	l4974
  5697   0029E6                     u5760:
  5698   0029E6                     l4990:
  5699                           
  5700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5701   0029E6  5040               	movf	dtoa@s^0,w,c
  5702   0029E8  B4D8               	btfsc	status,2,c
  5703   0029EA  EFF9  F014         	goto	u5771
  5704   0029EE  EFFB  F014         	goto	u5770
  5705   0029F2                     u5771:
  5706   0029F2  EF06  F015         	goto	l4996
  5707   0029F6                     u5770:
  5708   0029F6                     
  5709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5710   0029F6  0641               	decf	dtoa@i^0,f,c
  5711   0029F8  A0D8               	btfss	status,0,c
  5712   0029FA  0642               	decf	(dtoa@i+1)^0,f,c
  5713   0029FC                     
  5714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5715   0029FC  0E50               	movlw	low _dbuf
  5716   0029FE  2441               	addwf	dtoa@i^0,w,c
  5717   002A00  6ED9               	movwf	fsr2l,c
  5718   002A02  0E01               	movlw	high _dbuf
  5719   002A04  2042               	addwfc	(dtoa@i+1)^0,w,c
  5720   002A06  6EDA               	movwf	fsr2h,c
  5721   002A08  C040  FFDF         	movff	dtoa@s,indf2
  5722   002A0C                     l4996:
  5723                           
  5724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5725   002A0C  C020  F015         	movff	dtoa@fp,pad@fp
  5726   002A10  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  5727   002A14  0E50               	movlw	low _dbuf
  5728   002A16  2441               	addwf	dtoa@i^0,w,c
  5729   002A18  6E17               	movwf	pad@buf^0,c
  5730   002A1A  0E01               	movlw	high _dbuf
  5731   002A1C  2042               	addwfc	(dtoa@i+1)^0,w,c
  5732   002A1E  6E18               	movwf	(pad@buf+1)^0,c
  5733   002A20  C036  F019         	movff	dtoa@w,pad@p
  5734   002A24  C037  F01A         	movff	dtoa@w+1,pad@p+1
  5735   002A28  ECD5  F01B         	call	_pad	;wreg free
  5736   002A2C  0012               	return		;funcret
  5737   002A2E                     __end_of_dtoa:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function _pad *****************
  5741 ;; Defined at:
  5742 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5745 ;;		 -> sprintf@f(11), 
  5746 ;;  buf             2   22[COMRAM] PTR unsigned char 
  5747 ;;		 -> dbuf(80), 
  5748 ;;  p               2   24[COMRAM] int 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  w               2   29[COMRAM] int 
  5751 ;;  i               2   27[COMRAM] int 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5761 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;Total ram usage:       11 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; Hardware stack levels required when called: 5
  5768 ;; This function calls:
  5769 ;;		_fputc
  5770 ;;		_fputs
  5771 ;; This function is called by:
  5772 ;;		_dtoa
  5773 ;;		_efgtoa
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text18
  5778   0037AA                     __ptext18:
  5779                           	callstack 0
  5780   0037AA                     _pad:
  5781                           	callstack 21
  5782   0037AA                     
  5783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5784   0037AA  BE1A               	btfsc	(pad@p+1)^0,7,c
  5785   0037AC  EFDA  F01B         	goto	u5431
  5786   0037B0  EFDC  F01B         	goto	u5430
  5787   0037B4                     u5431:
  5788   0037B4  EFE2  F01B         	goto	l4860
  5789   0037B8                     u5430:
  5790   0037B8  C019  F01E         	movff	pad@p,pad@w
  5791   0037BC  C01A  F01F         	movff	pad@p+1,pad@w+1
  5792   0037C0  EFE6  F01B         	goto	l1005
  5793   0037C4                     l4860:
  5794   0037C4  0E00               	movlw	0
  5795   0037C6  6E1F               	movwf	(pad@w+1)^0,c
  5796   0037C8  0E00               	movlw	0
  5797   0037CA  6E1E               	movwf	pad@w^0,c
  5798   0037CC                     l1005:
  5799                           
  5800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5801   0037CC  0E00               	movlw	0
  5802   0037CE  6E1D               	movwf	(pad@i+1)^0,c
  5803   0037D0  0E00               	movlw	0
  5804   0037D2  6E1C               	movwf	pad@i^0,c
  5805                           
  5806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5807   0037D4  EFF8  F01B         	goto	l4866
  5808   0037D8                     l4862:
  5809                           
  5810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5811   0037D8  0E00               	movlw	0
  5812   0037DA  6E06               	movwf	(fputc@c+1)^0,c
  5813   0037DC  0E20               	movlw	32
  5814   0037DE  6E05               	movwf	fputc@c^0,c
  5815   0037E0  C015  F007         	movff	pad@fp,fputc@fp
  5816   0037E4  C016  F008         	movff	pad@fp+1,fputc@fp+1
  5817   0037E8  ECB9  F01A         	call	_fputc	;wreg free
  5818   0037EC                     
  5819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5820   0037EC  4A1C               	infsnz	pad@i^0,f,c
  5821   0037EE  2A1D               	incf	(pad@i+1)^0,f,c
  5822   0037F0                     l4866:
  5823                           
  5824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5825   0037F0  501E               	movf	pad@w^0,w,c
  5826   0037F2  5C1C               	subwf	pad@i^0,w,c
  5827   0037F4  501D               	movf	(pad@i+1)^0,w,c
  5828   0037F6  0A80               	xorlw	128
  5829   0037F8  6E1B               	movwf	??_pad^0,c
  5830   0037FA  501F               	movf	(pad@w+1)^0,w,c
  5831   0037FC  0A80               	xorlw	128
  5832   0037FE  581B               	subwfb	??_pad^0,w,c
  5833   003800  A0D8               	btfss	status,0,c
  5834   003802  EF05  F01C         	goto	u5441
  5835   003806  EF07  F01C         	goto	u5440
  5836   00380A                     u5441:
  5837   00380A  EFEC  F01B         	goto	l4862
  5838   00380E                     u5440:
  5839   00380E                     
  5840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5841   00380E  C017  F00E         	movff	pad@buf,fputs@s
  5842   003812  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5843   003816  C015  F010         	movff	pad@fp,fputs@fp
  5844   00381A  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5845   00381E  ECD4  F01D         	call	_fputs	;wreg free
  5846   003822  0012               	return		;funcret
  5847   003824                     __end_of_pad:
  5848                           	callstack 0
  5849                           
  5850 ;; *************** function _fputs *****************
  5851 ;; Defined at:
  5852 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5855 ;;		 -> dbuf(80), 
  5856 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5857 ;;		 -> sprintf@f(11), 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  i               2   18[COMRAM] int 
  5860 ;;  c               1   17[COMRAM] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  2   13[COMRAM] int 
  5863 ;; Registers used:
  5864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5873 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5874 ;;Total ram usage:        7 bytes
  5875 ;; Hardware stack levels used: 1
  5876 ;; Hardware stack levels required when called: 4
  5877 ;; This function calls:
  5878 ;;		_fputc
  5879 ;; This function is called by:
  5880 ;;		_pad
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text19
  5885   003BA8                     __ptext19:
  5886                           	callstack 0
  5887   003BA8                     _fputs:
  5888                           	callstack 21
  5889   003BA8  0E00               	movlw	0
  5890   003BAA  6E14               	movwf	(fputs@i+1)^0,c
  5891   003BAC  0E00               	movlw	0
  5892   003BAE  6E13               	movwf	fputs@i^0,c
  5893   003BB0  EFE5  F01D         	goto	l4410
  5894   003BB4                     l4406:
  5895   003BB4  C012  F005         	movff	fputs@c,fputc@c
  5896   003BB8  6A06               	clrf	(fputc@c+1)^0,c
  5897   003BBA  C010  F007         	movff	fputs@fp,fputc@fp
  5898   003BBE  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  5899   003BC2  ECB9  F01A         	call	_fputc	;wreg free
  5900   003BC6  4A13               	infsnz	fputs@i^0,f,c
  5901   003BC8  2A14               	incf	(fputs@i+1)^0,f,c
  5902   003BCA                     l4410:
  5903   003BCA  5013               	movf	fputs@i^0,w,c
  5904   003BCC  240E               	addwf	fputs@s^0,w,c
  5905   003BCE  6ED9               	movwf	fsr2l,c
  5906   003BD0  5014               	movf	(fputs@i+1)^0,w,c
  5907   003BD2  200F               	addwfc	(fputs@s+1)^0,w,c
  5908   003BD4  6EDA               	movwf	fsr2h,c
  5909   003BD6  50DF               	movf	indf2,w,c
  5910   003BD8  6E12               	movwf	fputs@c^0,c
  5911   003BDA  5012               	movf	fputs@c^0,w,c
  5912   003BDC  A4D8               	btfss	status,2,c
  5913   003BDE  EFF3  F01D         	goto	u4711
  5914   003BE2  EFF5  F01D         	goto	u4710
  5915   003BE6                     u4711:
  5916   003BE6  EFDA  F01D         	goto	l4406
  5917   003BEA                     u4710:
  5918   003BEA  0012               	return		;funcret
  5919   003BEC                     __end_of_fputs:
  5920                           	callstack 0
  5921                           
  5922 ;; *************** function _fputc *****************
  5923 ;; Defined at:
  5924 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;  c               2    4[COMRAM] int 
  5927 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  5928 ;;		 -> sprintf@f(11), 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  2    4[COMRAM] int 
  5933 ;; Registers used:
  5934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5942 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5943 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5944 ;;Total ram usage:        9 bytes
  5945 ;; Hardware stack levels used: 1
  5946 ;; Hardware stack levels required when called: 3
  5947 ;; This function calls:
  5948 ;;		_putch
  5949 ;; This function is called by:
  5950 ;;		_pad
  5951 ;;		_vfpfcnvrt
  5952 ;;		_fputs
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text20
  5957   003572                     __ptext20:
  5958                           	callstack 0
  5959   003572                     _fputc:
  5960                           	callstack 24
  5961   003572  5007               	movf	fputc@fp^0,w,c
  5962   003574  1008               	iorwf	(fputc@fp+1)^0,w,c
  5963   003576  B4D8               	btfsc	status,2,c
  5964   003578  EFC0  F01A         	goto	u4281
  5965   00357C  EFC2  F01A         	goto	u4280
  5966   003580                     u4281:
  5967   003580  EFCB  F01A         	goto	l4192
  5968   003584                     u4280:
  5969   003584  5007               	movf	fputc@fp^0,w,c
  5970   003586  1008               	iorwf	(fputc@fp+1)^0,w,c
  5971   003588  A4D8               	btfss	status,2,c
  5972   00358A  EFC9  F01A         	goto	u4291
  5973   00358E  EFCB  F01A         	goto	u4290
  5974   003592                     u4291:
  5975   003592  EFD0  F01A         	goto	l4194
  5976   003596                     u4290:
  5977   003596                     l4192:
  5978   003596  5005               	movf	fputc@c^0,w,c
  5979   003598  EC6A  F01F         	call	_putch
  5980   00359C  EF1D  F01B         	goto	l1165
  5981   0035A0                     l4194:
  5982   0035A0  EE20 F009          	lfsr	2,9
  5983   0035A4  5007               	movf	fputc@fp^0,w,c
  5984   0035A6  26D9               	addwf	fsr2l,f,c
  5985   0035A8  5008               	movf	(fputc@fp+1)^0,w,c
  5986   0035AA  22DA               	addwfc	fsr2h,f,c
  5987   0035AC  50DE               	movf	postinc2,w,c
  5988   0035AE  10DE               	iorwf	postinc2,w,c
  5989   0035B0  B4D8               	btfsc	status,2,c
  5990   0035B2  EFDD  F01A         	goto	u4301
  5991   0035B6  EFDF  F01A         	goto	u4300
  5992   0035BA                     u4301:
  5993   0035BA  EFFA  F01A         	goto	l4198
  5994   0035BE                     u4300:
  5995   0035BE  EE20 F009          	lfsr	2,9
  5996   0035C2  5007               	movf	fputc@fp^0,w,c
  5997   0035C4  26D9               	addwf	fsr2l,f,c
  5998   0035C6  5008               	movf	(fputc@fp+1)^0,w,c
  5999   0035C8  22DA               	addwfc	fsr2h,f,c
  6000   0035CA  EE10 F003          	lfsr	1,3
  6001   0035CE  5007               	movf	fputc@fp^0,w,c
  6002   0035D0  26E1               	addwf	fsr1l,f,c
  6003   0035D2  5008               	movf	(fputc@fp+1)^0,w,c
  6004   0035D4  22E2               	addwfc	fsr1h,f,c
  6005   0035D6  50DE               	movf	postinc2,w,c
  6006   0035D8  5CE6               	subwf	postinc1,w,c
  6007   0035DA  50E6               	movf	postinc1,w,c
  6008   0035DC  0A80               	xorlw	128
  6009   0035DE  6E0D               	movwf	(??_fputc+4)^0,c
  6010   0035E0  50DE               	movf	postinc2,w,c
  6011   0035E2  0A80               	xorlw	128
  6012   0035E4  580D               	subwfb	(??_fputc+4)^0,w,c
  6013   0035E6  B0D8               	btfsc	status,0,c
  6014   0035E8  EFF8  F01A         	goto	u4311
  6015   0035EC  EFFA  F01A         	goto	u4310
  6016   0035F0                     u4311:
  6017   0035F0  EF1D  F01B         	goto	l1165
  6018   0035F4                     u4310:
  6019   0035F4                     l4198:
  6020   0035F4  EE20 F003          	lfsr	2,3
  6021   0035F8  5007               	movf	fputc@fp^0,w,c
  6022   0035FA  26D9               	addwf	fsr2l,f,c
  6023   0035FC  5008               	movf	(fputc@fp+1)^0,w,c
  6024   0035FE  22DA               	addwfc	fsr2h,f,c
  6025   003600  CFDE F009          	movff	postinc2,??_fputc
  6026   003604  CFDD F00A          	movff	postdec2,??_fputc+1
  6027   003608  C007  FFD9         	movff	fputc@fp,fsr2l
  6028   00360C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  6029   003610  CFDE F00B          	movff	postinc2,??_fputc+2
  6030   003614  CFDD F00C          	movff	postdec2,??_fputc+3
  6031   003618  5009               	movf	??_fputc^0,w,c
  6032   00361A  240B               	addwf	(??_fputc+2)^0,w,c
  6033   00361C  6ED9               	movwf	fsr2l,c
  6034   00361E  500A               	movf	(??_fputc+1)^0,w,c
  6035   003620  200C               	addwfc	(??_fputc+3)^0,w,c
  6036   003622  6EDA               	movwf	fsr2h,c
  6037   003624  C005  FFDF         	movff	fputc@c,indf2
  6038   003628  EE20 F003          	lfsr	2,3
  6039   00362C  5007               	movf	fputc@fp^0,w,c
  6040   00362E  26D9               	addwf	fsr2l,f,c
  6041   003630  5008               	movf	(fputc@fp+1)^0,w,c
  6042   003632  22DA               	addwfc	fsr2h,f,c
  6043   003634  2ADE               	incf	postinc2,f,c
  6044   003636  0E00               	movlw	0
  6045   003638  22DD               	addwfc	postdec2,f,c
  6046   00363A                     l1165:
  6047   00363A  0012               	return		;funcret
  6048   00363C                     __end_of_fputc:
  6049                           	callstack 0
  6050                           
  6051 ;; *************** function _putch *****************
  6052 ;; Defined at:
  6053 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  c               1    wreg     unsigned char 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  c               1    0[COMRAM] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6071 ;;Total ram usage:        0 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 2
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_fputc
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text21
  6082   003ED4                     __ptext21:
  6083                           	callstack 0
  6084   003ED4                     _putch:
  6085                           	callstack 24
  6086   003ED4  0012               	return		;funcret
  6087   003ED6                     __end_of_putch:
  6088                           	callstack 0
  6089                           
  6090 ;; *************** function _abs *****************
  6091 ;; Defined at:
  6092 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  a               2   22[COMRAM] int 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  2   22[COMRAM] int 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6110 ;;Total ram usage:        4 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 2
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_dtoa
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text22
  6121   003C6E                     __ptext22:
  6122                           	callstack 0
  6123   003C6E                     _abs:
  6124                           	callstack 24
  6125   003C6E  BE18               	btfsc	(abs@a+1)^0,7,c
  6126   003C70  EF44  F01E         	goto	u5450
  6127   003C74  5018               	movf	(abs@a+1)^0,w,c
  6128   003C76  E106               	bnz	u5451
  6129   003C78  0417               	decf	abs@a^0,w,c
  6130   003C7A  B0D8               	btfsc	status,0,c
  6131   003C7C  EF42  F01E         	goto	u5451
  6132   003C80  EF44  F01E         	goto	u5450
  6133   003C84                     u5451:
  6134   003C84  EF52  F01E         	goto	l1124
  6135   003C88                     u5450:
  6136   003C88  C017  F019         	movff	abs@a,??_abs
  6137   003C8C  C018  F01A         	movff	abs@a+1,??_abs+1
  6138   003C90  1E19               	comf	??_abs^0,f,c
  6139   003C92  1E1A               	comf	(??_abs+1)^0,f,c
  6140   003C94  4A19               	infsnz	??_abs^0,f,c
  6141   003C96  2A1A               	incf	(??_abs+1)^0,f,c
  6142   003C98  C019  F017         	movff	??_abs,?_abs
  6143   003C9C  C01A  F018         	movff	??_abs+1,?_abs+1
  6144   003CA0  EF56  F01E         	goto	l1127
  6145   003CA4                     l1124:
  6146   003CA4  C017  F017         	movff	abs@a,?_abs
  6147   003CA8  C018  F018         	movff	abs@a+1,?_abs+1
  6148   003CAC                     l1127:
  6149   003CAC  0012               	return		;funcret
  6150   003CAE                     __end_of_abs:
  6151                           	callstack 0
  6152                           
  6153 ;; *************** function ___aomod *****************
  6154 ;; Defined at:
  6155 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  dividend        8    4[COMRAM] long long 
  6158 ;;  divisor         8   12[COMRAM] long long 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  sign            1   21[COMRAM] unsigned char 
  6161 ;;  counter         1   20[COMRAM] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  8    4[COMRAM] long long 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6171 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6174 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6175 ;;Total ram usage:       18 bytes
  6176 ;; Hardware stack levels used: 1
  6177 ;; Hardware stack levels required when called: 2
  6178 ;; This function calls:
  6179 ;;		Nothing
  6180 ;; This function is called by:
  6181 ;;		_dtoa
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text23
  6186   003106                     __ptext23:
  6187                           	callstack 0
  6188   003106                     ___aomod:
  6189                           	callstack 24
  6190   003106  0E00               	movlw	0
  6191   003108  6E16               	movwf	___aomod@sign^0,c
  6192   00310A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  6193   00310C  EF8C  F018         	goto	u4790
  6194   003110  EF8A  F018         	goto	u4791
  6195   003114                     u4791:
  6196   003114  EF9E  F018         	goto	l4464
  6197   003118                     u4790:
  6198   003118  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6199   00311A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6200   00311C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6201   00311E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6202   003120  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6203   003122  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6204   003124  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6205   003126  6C05               	negf	___aomod@dividend^0,c
  6206   003128  0E00               	movlw	0
  6207   00312A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6208   00312C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6209   00312E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6210   003130  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6211   003132  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6212   003134  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6213   003136  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6214   003138  0E01               	movlw	1
  6215   00313A  6E16               	movwf	___aomod@sign^0,c
  6216   00313C                     l4464:
  6217   00313C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  6218   00313E  EFA5  F018         	goto	u4800
  6219   003142  EFA3  F018         	goto	u4801
  6220   003146                     u4801:
  6221   003146  EFB5  F018         	goto	l4468
  6222   00314A                     u4800:
  6223   00314A  1E14               	comf	(___aomod@divisor+7)^0,f,c
  6224   00314C  1E13               	comf	(___aomod@divisor+6)^0,f,c
  6225   00314E  1E12               	comf	(___aomod@divisor+5)^0,f,c
  6226   003150  1E11               	comf	(___aomod@divisor+4)^0,f,c
  6227   003152  1E10               	comf	(___aomod@divisor+3)^0,f,c
  6228   003154  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  6229   003156  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  6230   003158  6C0D               	negf	___aomod@divisor^0,c
  6231   00315A  0E00               	movlw	0
  6232   00315C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  6233   00315E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  6234   003160  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  6235   003162  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  6236   003164  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  6237   003166  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  6238   003168  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  6239   00316A                     l4468:
  6240   00316A  500D               	movf	___aomod@divisor^0,w,c
  6241   00316C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  6242   00316E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  6243   003170  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  6244   003172  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  6245   003174  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  6246   003176  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  6247   003178  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  6248   00317A  B4D8               	btfsc	status,2,c
  6249   00317C  EFC2  F018         	goto	u4811
  6250   003180  EFC4  F018         	goto	u4810
  6251   003184                     u4811:
  6252   003184  EF0C  F019         	goto	l4484
  6253   003188                     u4810:
  6254   003188  0E01               	movlw	1
  6255   00318A  6E15               	movwf	___aomod@counter^0,c
  6256   00318C  EFD2  F018         	goto	l4474
  6257   003190                     l4472:
  6258   003190  90D8               	bcf	status,0,c
  6259   003192  360D               	rlcf	___aomod@divisor^0,f,c
  6260   003194  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  6261   003196  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  6262   003198  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  6263   00319A  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  6264   00319C  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  6265   00319E  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  6266   0031A0  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  6267   0031A2  2A15               	incf	___aomod@counter^0,f,c
  6268   0031A4                     l4474:
  6269   0031A4  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  6270   0031A6  EFD7  F018         	goto	u4821
  6271   0031AA  EFD9  F018         	goto	u4820
  6272   0031AE                     u4821:
  6273   0031AE  EFC8  F018         	goto	l4472
  6274   0031B2                     u4820:
  6275   0031B2                     l4476:
  6276   0031B2  500D               	movf	___aomod@divisor^0,w,c
  6277   0031B4  5C05               	subwf	___aomod@dividend^0,w,c
  6278   0031B6  500E               	movf	(___aomod@divisor+1)^0,w,c
  6279   0031B8  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  6280   0031BA  500F               	movf	(___aomod@divisor+2)^0,w,c
  6281   0031BC  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  6282   0031BE  5010               	movf	(___aomod@divisor+3)^0,w,c
  6283   0031C0  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  6284   0031C2  5011               	movf	(___aomod@divisor+4)^0,w,c
  6285   0031C4  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  6286   0031C6  5012               	movf	(___aomod@divisor+5)^0,w,c
  6287   0031C8  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  6288   0031CA  5013               	movf	(___aomod@divisor+6)^0,w,c
  6289   0031CC  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  6290   0031CE  5014               	movf	(___aomod@divisor+7)^0,w,c
  6291   0031D0  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  6292   0031D2  A0D8               	btfss	status,0,c
  6293   0031D4  EFEE  F018         	goto	u4831
  6294   0031D8  EFF0  F018         	goto	u4830
  6295   0031DC                     u4831:
  6296   0031DC  EF00  F019         	goto	l4480
  6297   0031E0                     u4830:
  6298   0031E0  500D               	movf	___aomod@divisor^0,w,c
  6299   0031E2  5E05               	subwf	___aomod@dividend^0,f,c
  6300   0031E4  500E               	movf	(___aomod@divisor+1)^0,w,c
  6301   0031E6  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  6302   0031E8  500F               	movf	(___aomod@divisor+2)^0,w,c
  6303   0031EA  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  6304   0031EC  5010               	movf	(___aomod@divisor+3)^0,w,c
  6305   0031EE  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  6306   0031F0  5011               	movf	(___aomod@divisor+4)^0,w,c
  6307   0031F2  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  6308   0031F4  5012               	movf	(___aomod@divisor+5)^0,w,c
  6309   0031F6  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  6310   0031F8  5013               	movf	(___aomod@divisor+6)^0,w,c
  6311   0031FA  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  6312   0031FC  5014               	movf	(___aomod@divisor+7)^0,w,c
  6313   0031FE  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  6314   003200                     l4480:
  6315   003200  90D8               	bcf	status,0,c
  6316   003202  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  6317   003204  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  6318   003206  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  6319   003208  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  6320   00320A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  6321   00320C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  6322   00320E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  6323   003210  320D               	rrcf	___aomod@divisor^0,f,c
  6324   003212  2E15               	decfsz	___aomod@counter^0,f,c
  6325   003214  EFD9  F018         	goto	l4476
  6326   003218                     l4484:
  6327   003218  5016               	movf	___aomod@sign^0,w,c
  6328   00321A  B4D8               	btfsc	status,2,c
  6329   00321C  EF12  F019         	goto	u4841
  6330   003220  EF14  F019         	goto	u4840
  6331   003224                     u4841:
  6332   003224  EF24  F019         	goto	l4488
  6333   003228                     u4840:
  6334   003228  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6335   00322A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6336   00322C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6337   00322E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6338   003230  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6339   003232  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6340   003234  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6341   003236  6C05               	negf	___aomod@dividend^0,c
  6342   003238  0E00               	movlw	0
  6343   00323A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6344   00323C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6345   00323E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6346   003240  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6347   003242  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6348   003244  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6349   003246  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6350   003248                     l4488:
  6351   003248  C005  F005         	movff	___aomod@dividend,?___aomod
  6352   00324C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  6353   003250  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  6354   003254  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  6355   003258  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  6356   00325C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  6357   003260  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  6358   003264  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  6359   003268  0012               	return		;funcret
  6360   00326A                     __end_of___aomod:
  6361                           	callstack 0
  6362                           
  6363 ;; *************** function ___aodiv *****************
  6364 ;; Defined at:
  6365 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  dividend        8    4[COMRAM] long long 
  6368 ;;  divisor         8   12[COMRAM] long long 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  quotient        8   22[COMRAM] long long 
  6371 ;;  sign            1   21[COMRAM] unsigned char 
  6372 ;;  counter         1   20[COMRAM] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  8    4[COMRAM] long long 
  6375 ;; Registers used:
  6376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6382 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6383 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6385 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6386 ;;Total ram usage:       26 bytes
  6387 ;; Hardware stack levels used: 1
  6388 ;; Hardware stack levels required when called: 2
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		_dtoa
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text24
  6397   002F7E                     __ptext24:
  6398                           	callstack 0
  6399   002F7E                     ___aodiv:
  6400                           	callstack 24
  6401   002F7E  0E00               	movlw	0
  6402   002F80  6E16               	movwf	___aodiv@sign^0,c
  6403   002F82  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  6404   002F84  EFC8  F017         	goto	u4720
  6405   002F88  EFC6  F017         	goto	u4721
  6406   002F8C                     u4721:
  6407   002F8C  EFDA  F017         	goto	l4420
  6408   002F90                     u4720:
  6409   002F90  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  6410   002F92  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  6411   002F94  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  6412   002F96  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  6413   002F98  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  6414   002F9A  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  6415   002F9C  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  6416   002F9E  6C0D               	negf	___aodiv@divisor^0,c
  6417   002FA0  0E00               	movlw	0
  6418   002FA2  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  6419   002FA4  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  6420   002FA6  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  6421   002FA8  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  6422   002FAA  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  6423   002FAC  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  6424   002FAE  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  6425   002FB0  0E01               	movlw	1
  6426   002FB2  6E16               	movwf	___aodiv@sign^0,c
  6427   002FB4                     l4420:
  6428   002FB4  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  6429   002FB6  EFE1  F017         	goto	u4730
  6430   002FBA  EFDF  F017         	goto	u4731
  6431   002FBE                     u4731:
  6432   002FBE  EFF3  F017         	goto	l4426
  6433   002FC2                     u4730:
  6434   002FC2  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  6435   002FC4  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  6436   002FC6  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  6437   002FC8  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  6438   002FCA  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  6439   002FCC  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  6440   002FCE  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  6441   002FD0  6C05               	negf	___aodiv@dividend^0,c
  6442   002FD2  0E00               	movlw	0
  6443   002FD4  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  6444   002FD6  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  6445   002FD8  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  6446   002FDA  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  6447   002FDC  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  6448   002FDE  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  6449   002FE0  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  6450   002FE2  0E01               	movlw	1
  6451   002FE4  1A16               	xorwf	___aodiv@sign^0,f,c
  6452   002FE6                     l4426:
  6453   002FE6  EE20  F017         	lfsr	2,___aodiv@quotient
  6454   002FEA  0E07               	movlw	7
  6455   002FEC                     u4741:
  6456   002FEC  6ADE               	clrf	postinc2,c
  6457   002FEE  06E8               	decf	wreg,f,c
  6458   002FF0  E2FD               	bc	u4741
  6459   002FF2  500D               	movf	___aodiv@divisor^0,w,c
  6460   002FF4  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  6461   002FF6  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  6462   002FF8  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  6463   002FFA  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  6464   002FFC  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  6465   002FFE  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  6466   003000  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  6467   003002  B4D8               	btfsc	status,2,c
  6468   003004  EF06  F018         	goto	u4751
  6469   003008  EF08  F018         	goto	u4750
  6470   00300C                     u4751:
  6471   00300C  EF5A  F018         	goto	l4448
  6472   003010                     u4750:
  6473   003010  0E01               	movlw	1
  6474   003012  6E15               	movwf	___aodiv@counter^0,c
  6475   003014  EF16  F018         	goto	l4434
  6476   003018                     l4432:
  6477   003018  90D8               	bcf	status,0,c
  6478   00301A  360D               	rlcf	___aodiv@divisor^0,f,c
  6479   00301C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  6480   00301E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  6481   003020  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  6482   003022  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  6483   003024  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  6484   003026  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  6485   003028  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  6486   00302A  2A15               	incf	___aodiv@counter^0,f,c
  6487   00302C                     l4434:
  6488   00302C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  6489   00302E  EF1B  F018         	goto	u4761
  6490   003032  EF1D  F018         	goto	u4760
  6491   003036                     u4761:
  6492   003036  EF0C  F018         	goto	l4432
  6493   00303A                     u4760:
  6494   00303A                     l4436:
  6495   00303A  90D8               	bcf	status,0,c
  6496   00303C  3617               	rlcf	___aodiv@quotient^0,f,c
  6497   00303E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  6498   003040  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  6499   003042  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  6500   003044  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  6501   003046  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  6502   003048  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  6503   00304A  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  6504   00304C  500D               	movf	___aodiv@divisor^0,w,c
  6505   00304E  5C05               	subwf	___aodiv@dividend^0,w,c
  6506   003050  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6507   003052  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  6508   003054  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6509   003056  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  6510   003058  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6511   00305A  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  6512   00305C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6513   00305E  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  6514   003060  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6515   003062  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  6516   003064  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6517   003066  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  6518   003068  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6519   00306A  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  6520   00306C  A0D8               	btfss	status,0,c
  6521   00306E  EF3B  F018         	goto	u4771
  6522   003072  EF3D  F018         	goto	u4770
  6523   003076                     u4771:
  6524   003076  EF4E  F018         	goto	l4444
  6525   00307A                     u4770:
  6526   00307A  500D               	movf	___aodiv@divisor^0,w,c
  6527   00307C  5E05               	subwf	___aodiv@dividend^0,f,c
  6528   00307E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6529   003080  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  6530   003082  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6531   003084  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  6532   003086  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6533   003088  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  6534   00308A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6535   00308C  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  6536   00308E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6537   003090  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  6538   003092  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6539   003094  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  6540   003096  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6541   003098  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  6542   00309A  8017               	bsf	___aodiv@quotient^0,0,c
  6543   00309C                     l4444:
  6544   00309C  90D8               	bcf	status,0,c
  6545   00309E  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  6546   0030A0  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  6547   0030A2  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  6548   0030A4  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  6549   0030A6  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  6550   0030A8  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  6551   0030AA  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  6552   0030AC  320D               	rrcf	___aodiv@divisor^0,f,c
  6553   0030AE  2E15               	decfsz	___aodiv@counter^0,f,c
  6554   0030B0  EF1D  F018         	goto	l4436
  6555   0030B4                     l4448:
  6556   0030B4  5016               	movf	___aodiv@sign^0,w,c
  6557   0030B6  B4D8               	btfsc	status,2,c
  6558   0030B8  EF60  F018         	goto	u4781
  6559   0030BC  EF62  F018         	goto	u4780
  6560   0030C0                     u4781:
  6561   0030C0  EF72  F018         	goto	l4452
  6562   0030C4                     u4780:
  6563   0030C4  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  6564   0030C6  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  6565   0030C8  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  6566   0030CA  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  6567   0030CC  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  6568   0030CE  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  6569   0030D0  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  6570   0030D2  6C17               	negf	___aodiv@quotient^0,c
  6571   0030D4  0E00               	movlw	0
  6572   0030D6  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  6573   0030D8  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  6574   0030DA  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  6575   0030DC  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  6576   0030DE  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  6577   0030E0  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  6578   0030E2  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  6579   0030E4                     l4452:
  6580   0030E4  C017  F005         	movff	___aodiv@quotient,?___aodiv
  6581   0030E8  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  6582   0030EC  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  6583   0030F0  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  6584   0030F4  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  6585   0030F8  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  6586   0030FC  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  6587   003100  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  6588   003104  0012               	return		;funcret
  6589   003106                     __end_of___aodiv:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function _sendTxBuf *****************
  6593 ;; Defined at:
  6594 ;;		line 93 in file "serial.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2, status,0, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6612 ;;Total ram usage:        0 bytes
  6613 ;; Hardware stack levels used: 1
  6614 ;; Hardware stack levels required when called: 3
  6615 ;; This function calls:
  6616 ;;		_isDataInTxBuf
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text25
  6623   003D76                     __ptext25:
  6624                           	callstack 0
  6625   003D76                     _sendTxBuf:
  6626                           	callstack 27
  6627   003D76                     
  6628                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  6629   003D76  EC42  F01F         	call	_isDataInTxBuf	;wreg free
  6630   003D7A  0900               	iorlw	0
  6631   003D7C  B4D8               	btfsc	status,2,c
  6632   003D7E  EFC3  F01E         	goto	u6311
  6633   003D82  EFC5  F01E         	goto	u6310
  6634   003D86                     u6311:
  6635   003D86  EFCC  F01E         	goto	l5480
  6636   003D8A                     u6310:
  6637   003D8A  010E               	movlb	14	; () banked
  6638   003D8C  852D               	bsf	45,2,b	;volatile
  6639   003D8E                     
  6640                           ; BSR set to: 14
  6641                           ;serial.c: 95:     DataFlag =1;}
  6642   003D8E  0E01               	movlw	1
  6643   003D90  0100               	movlb	0	; () banked
  6644   003D92  6FCE               	movwf	_DataFlag& (0+255),b	;volatile
  6645   003D94  EFCF  F01E         	goto	l184
  6646   003D98                     l5480:
  6647                           
  6648                           ;serial.c: 97:         DataFlag=0;}
  6649   003D98  0E00               	movlw	0
  6650   003D9A  0100               	movlb	0	; () banked
  6651   003D9C  6FCE               	movwf	_DataFlag& (0+255),b	;volatile
  6652   003D9E                     l184:
  6653                           
  6654                           ; BSR set to: 0
  6655   003D9E  0012               	return		;funcret
  6656   003DA0                     __end_of_sendTxBuf:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _isDataInTxBuf *****************
  6660 ;; Defined at:
  6661 ;;		line 80 in file "serial.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1    wreg      unsigned char 
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; Hardware stack levels required when called: 2
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		_sendTxBuf
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text26
  6690   003E84                     __ptext26:
  6691                           	callstack 0
  6692   003E84                     _isDataInTxBuf:
  6693                           	callstack 27
  6694   003E84                     
  6695                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  6696   003E84  5050               	movf	_TxBufReadCnt^0,w,c	;volatile
  6697   003E86  1851               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  6698   003E88  A4D8               	btfss	status,2,c
  6699   003E8A  EF49  F01F         	goto	u6171
  6700   003E8E  EF4C  F01F         	goto	u6170
  6701   003E92                     u6171:
  6702   003E92  0E01               	movlw	1
  6703   003E94  EF4D  F01F         	goto	u6180
  6704   003E98                     u6170:
  6705   003E98  0E00               	movlw	0
  6706   003E9A                     u6180:
  6707   003E9A  0012               	return		;funcret
  6708   003E9C                     __end_of_isDataInTxBuf:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function _readColours *****************
  6712 ;; Defined at:
  6713 ;;		line 87 in file "color.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  vals            2   15[COMRAM] PTR struct RGB
  6716 ;;		 -> vals(8), 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;Total ram usage:        2 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; Hardware stack levels required when called: 5
  6735 ;; This function calls:
  6736 ;;		_color_read_Blue
  6737 ;;		_color_read_Green
  6738 ;;		_color_read_Red
  6739 ;;		_color_read_lum
  6740 ;; This function is called by:
  6741 ;;		_main
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text27
  6746   00388A                     __ptext27:
  6747                           	callstack 0
  6748   00388A                     _readColours:
  6749                           	callstack 25
  6750   00388A                     
  6751                           ;color.c: 88:     vals ->R = color_read_Red();
  6752   00388A  EC17  F01D         	call	_color_read_Red	;wreg free
  6753   00388E  C010  FFD9         	movff	readColours@vals,fsr2l
  6754   003892  C011  FFDA         	movff	readColours@vals+1,fsr2h
  6755   003896  C009  FFDE         	movff	?_color_read_Red,postinc2
  6756   00389A  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  6757                           
  6758                           ;color.c: 89:     vals ->B = color_read_Blue();
  6759   00389E  EC67  F01D         	call	_color_read_Blue	;wreg free
  6760   0038A2  EE20 F004          	lfsr	2,4
  6761   0038A6  5010               	movf	readColours@vals^0,w,c
  6762   0038A8  26D9               	addwf	fsr2l,f,c
  6763   0038AA  5011               	movf	(readColours@vals+1)^0,w,c
  6764   0038AC  22DA               	addwfc	fsr2h,f,c
  6765   0038AE  C009  FFDE         	movff	?_color_read_Blue,postinc2
  6766   0038B2  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  6767                           
  6768                           ;color.c: 90:     vals ->G = color_read_Green();
  6769   0038B6  EC3F  F01D         	call	_color_read_Green	;wreg free
  6770   0038BA  EE20 F002          	lfsr	2,2
  6771   0038BE  5010               	movf	readColours@vals^0,w,c
  6772   0038C0  26D9               	addwf	fsr2l,f,c
  6773   0038C2  5011               	movf	(readColours@vals+1)^0,w,c
  6774   0038C4  22DA               	addwfc	fsr2h,f,c
  6775   0038C6  C009  FFDE         	movff	?_color_read_Green,postinc2
  6776   0038CA  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  6777                           
  6778                           ;color.c: 91:     vals ->L = color_read_lum();
  6779   0038CE  ECEF  F01C         	call	_color_read_lum	;wreg free
  6780   0038D2  EE20 F006          	lfsr	2,6
  6781   0038D6  5010               	movf	readColours@vals^0,w,c
  6782   0038D8  26D9               	addwf	fsr2l,f,c
  6783   0038DA  5011               	movf	(readColours@vals+1)^0,w,c
  6784   0038DC  22DA               	addwfc	fsr2h,f,c
  6785   0038DE  C009  FFDE         	movff	?_color_read_lum,postinc2
  6786   0038E2  C00A  FFDD         	movff	?_color_read_lum+1,postdec2
  6787   0038E6  0012               	return		;funcret
  6788   0038E8                     __end_of_readColours:
  6789                           	callstack 0
  6790                           
  6791 ;; *************** function _color_read_lum *****************
  6792 ;; Defined at:
  6793 ;;		line 31 in file "color.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;		None
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  tmp             2   13[COMRAM] unsigned int 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  2    8[COMRAM] unsigned int 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;Total ram usage:        7 bytes
  6812 ;; Hardware stack levels used: 1
  6813 ;; Hardware stack levels required when called: 4
  6814 ;; This function calls:
  6815 ;;		_I2C_2_Master_Read
  6816 ;;		_I2C_2_Master_RepStart
  6817 ;;		_I2C_2_Master_Start
  6818 ;;		_I2C_2_Master_Stop
  6819 ;;		_I2C_2_Master_Write
  6820 ;; This function is called by:
  6821 ;;		_readColours
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text28
  6826   0039DE                     __ptext28:
  6827                           	callstack 0
  6828   0039DE                     _color_read_lum:
  6829                           	callstack 25
  6830   0039DE                     
  6831                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  6832   0039DE  EC65  F01F         	call	_I2C_2_Master_Start	;wreg free
  6833                           
  6834                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  6835   0039E2  0E52               	movlw	82
  6836   0039E4  EC55  F01F         	call	_I2C_2_Master_Write
  6837                           
  6838                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x14);
  6839   0039E8  0EB4               	movlw	180
  6840   0039EA  EC55  F01F         	call	_I2C_2_Master_Write
  6841                           
  6842                           ;color.c: 37:  I2C_2_Master_RepStart();
  6843   0039EE  EC5B  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6844                           
  6845                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  6846   0039F2  0E53               	movlw	83
  6847   0039F4  EC55  F01F         	call	_I2C_2_Master_Write
  6848                           
  6849                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  6850   0039F8  0E01               	movlw	1
  6851   0039FA  ECF6  F01D         	call	_I2C_2_Master_Read
  6852   0039FE  6E0B               	movwf	??_color_read_lum^0,c
  6853   003A00  500B               	movf	??_color_read_lum^0,w,c
  6854   003A02  6E0E               	movwf	color_read_lum@tmp^0,c
  6855   003A04  6A0F               	clrf	(color_read_lum@tmp+1)^0,c
  6856                           
  6857                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6858   003A06  0E00               	movlw	0
  6859   003A08  ECF6  F01D         	call	_I2C_2_Master_Read
  6860   003A0C  6E0B               	movwf	??_color_read_lum^0,c
  6861   003A0E  500B               	movf	??_color_read_lum^0,w,c
  6862   003A10  6E0D               	movwf	(??_color_read_lum+2)^0,c
  6863   003A12  6A0C               	clrf	(??_color_read_lum+1)^0,c
  6864   003A14  500E               	movf	color_read_lum@tmp^0,w,c
  6865   003A16  100C               	iorwf	(??_color_read_lum+1)^0,w,c
  6866   003A18  6E0E               	movwf	color_read_lum@tmp^0,c
  6867   003A1A  500F               	movf	(color_read_lum@tmp+1)^0,w,c
  6868   003A1C  100D               	iorwf	(??_color_read_lum+2)^0,w,c
  6869   003A1E  6E0F               	movwf	(color_read_lum@tmp+1)^0,c
  6870                           
  6871                           ;color.c: 41:  I2C_2_Master_Stop();
  6872   003A20  EC60  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6873   003A24                     
  6874                           ;color.c: 42:  return tmp;
  6875   003A24  C00E  F009         	movff	color_read_lum@tmp,?_color_read_lum
  6876   003A28  C00F  F00A         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6877   003A2C  0012               	return		;funcret
  6878   003A2E                     __end_of_color_read_lum:
  6879                           	callstack 0
  6880                           
  6881 ;; *************** function _color_read_Red *****************
  6882 ;; Defined at:
  6883 ;;		line 45 in file "color.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;		None
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  tmp             2   13[COMRAM] unsigned int 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  2    8[COMRAM] unsigned int 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;Total ram usage:        7 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 4
  6904 ;; This function calls:
  6905 ;;		_I2C_2_Master_Read
  6906 ;;		_I2C_2_Master_RepStart
  6907 ;;		_I2C_2_Master_Start
  6908 ;;		_I2C_2_Master_Stop
  6909 ;;		_I2C_2_Master_Write
  6910 ;; This function is called by:
  6911 ;;		_readColours
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text29
  6916   003A2E                     __ptext29:
  6917                           	callstack 0
  6918   003A2E                     _color_read_Red:
  6919                           	callstack 25
  6920   003A2E                     
  6921                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  6922   003A2E  EC65  F01F         	call	_I2C_2_Master_Start	;wreg free
  6923                           
  6924                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  6925   003A32  0E52               	movlw	82
  6926   003A34  EC55  F01F         	call	_I2C_2_Master_Write
  6927                           
  6928                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  6929   003A38  0EB6               	movlw	182
  6930   003A3A  EC55  F01F         	call	_I2C_2_Master_Write
  6931                           
  6932                           ;color.c: 51:  I2C_2_Master_RepStart();
  6933   003A3E  EC5B  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6934                           
  6935                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  6936   003A42  0E53               	movlw	83
  6937   003A44  EC55  F01F         	call	_I2C_2_Master_Write
  6938                           
  6939                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  6940   003A48  0E01               	movlw	1
  6941   003A4A  ECF6  F01D         	call	_I2C_2_Master_Read
  6942   003A4E  6E0B               	movwf	??_color_read_Red^0,c
  6943   003A50  500B               	movf	??_color_read_Red^0,w,c
  6944   003A52  6E0E               	movwf	color_read_Red@tmp^0,c
  6945   003A54  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  6946                           
  6947                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6948   003A56  0E00               	movlw	0
  6949   003A58  ECF6  F01D         	call	_I2C_2_Master_Read
  6950   003A5C  6E0B               	movwf	??_color_read_Red^0,c
  6951   003A5E  500B               	movf	??_color_read_Red^0,w,c
  6952   003A60  6E0D               	movwf	(??_color_read_Red+2)^0,c
  6953   003A62  6A0C               	clrf	(??_color_read_Red+1)^0,c
  6954   003A64  500E               	movf	color_read_Red@tmp^0,w,c
  6955   003A66  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  6956   003A68  6E0E               	movwf	color_read_Red@tmp^0,c
  6957   003A6A  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  6958   003A6C  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  6959   003A6E  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  6960                           
  6961                           ;color.c: 55:  I2C_2_Master_Stop();
  6962   003A70  EC60  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6963   003A74                     
  6964                           ;color.c: 56:  return tmp;
  6965   003A74  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  6966   003A78  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6967   003A7C  0012               	return		;funcret
  6968   003A7E                     __end_of_color_read_Red:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function _color_read_Green *****************
  6972 ;; Defined at:
  6973 ;;		line 58 in file "color.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;		None
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  tmp             2   13[COMRAM] unsigned int 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  2    8[COMRAM] unsigned int 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6989 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6990 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;Total ram usage:        7 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 4
  6994 ;; This function calls:
  6995 ;;		_I2C_2_Master_Read
  6996 ;;		_I2C_2_Master_RepStart
  6997 ;;		_I2C_2_Master_Start
  6998 ;;		_I2C_2_Master_Stop
  6999 ;;		_I2C_2_Master_Write
  7000 ;; This function is called by:
  7001 ;;		_readColours
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text30
  7006   003A7E                     __ptext30:
  7007                           	callstack 0
  7008   003A7E                     _color_read_Green:
  7009                           	callstack 25
  7010   003A7E                     
  7011                           ;color.c: 60:  unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  7012   003A7E  EC65  F01F         	call	_I2C_2_Master_Start	;wreg free
  7013                           
  7014                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  7015   003A82  0E52               	movlw	82
  7016   003A84  EC55  F01F         	call	_I2C_2_Master_Write
  7017                           
  7018                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x16);
  7019   003A88  0EB6               	movlw	182
  7020   003A8A  EC55  F01F         	call	_I2C_2_Master_Write
  7021                           
  7022                           ;color.c: 64:  I2C_2_Master_RepStart();
  7023   003A8E  EC5B  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7024                           
  7025                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7026   003A92  0E53               	movlw	83
  7027   003A94  EC55  F01F         	call	_I2C_2_Master_Write
  7028                           
  7029                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7030   003A98  0E01               	movlw	1
  7031   003A9A  ECF6  F01D         	call	_I2C_2_Master_Read
  7032   003A9E  6E0B               	movwf	??_color_read_Green^0,c
  7033   003AA0  500B               	movf	??_color_read_Green^0,w,c
  7034   003AA2  6E0E               	movwf	color_read_Green@tmp^0,c
  7035   003AA4  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  7036                           
  7037                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7038   003AA6  0E00               	movlw	0
  7039   003AA8  ECF6  F01D         	call	_I2C_2_Master_Read
  7040   003AAC  6E0B               	movwf	??_color_read_Green^0,c
  7041   003AAE  500B               	movf	??_color_read_Green^0,w,c
  7042   003AB0  6E0D               	movwf	(??_color_read_Green+2)^0,c
  7043   003AB2  6A0C               	clrf	(??_color_read_Green+1)^0,c
  7044   003AB4  500E               	movf	color_read_Green@tmp^0,w,c
  7045   003AB6  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  7046   003AB8  6E0E               	movwf	color_read_Green@tmp^0,c
  7047   003ABA  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  7048   003ABC  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  7049   003ABE  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  7050                           
  7051                           ;color.c: 68:  I2C_2_Master_Stop();
  7052   003AC0  EC60  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7053   003AC4                     
  7054                           ;color.c: 69:  return tmp;
  7055   003AC4  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  7056   003AC8  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7057   003ACC  0012               	return		;funcret
  7058   003ACE                     __end_of_color_read_Green:
  7059                           	callstack 0
  7060                           
  7061 ;; *************** function _color_read_Blue *****************
  7062 ;; Defined at:
  7063 ;;		line 72 in file "color.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  tmp             2   13[COMRAM] unsigned int 
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  2    8[COMRAM] unsigned int 
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0, cstack
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7080 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7081 ;;Total ram usage:        7 bytes
  7082 ;; Hardware stack levels used: 1
  7083 ;; Hardware stack levels required when called: 4
  7084 ;; This function calls:
  7085 ;;		_I2C_2_Master_Read
  7086 ;;		_I2C_2_Master_RepStart
  7087 ;;		_I2C_2_Master_Start
  7088 ;;		_I2C_2_Master_Stop
  7089 ;;		_I2C_2_Master_Write
  7090 ;; This function is called by:
  7091 ;;		_readColours
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text31
  7096   003ACE                     __ptext31:
  7097                           	callstack 0
  7098   003ACE                     _color_read_Blue:
  7099                           	callstack 25
  7100   003ACE                     
  7101                           ;color.c: 74:  unsigned int tmp;;color.c: 75:  I2C_2_Master_Start();
  7102   003ACE  EC65  F01F         	call	_I2C_2_Master_Start	;wreg free
  7103                           
  7104                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  7105   003AD2  0E52               	movlw	82
  7106   003AD4  EC55  F01F         	call	_I2C_2_Master_Write
  7107                           
  7108                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x1A);
  7109   003AD8  0EBA               	movlw	186
  7110   003ADA  EC55  F01F         	call	_I2C_2_Master_Write
  7111                           
  7112                           ;color.c: 78:  I2C_2_Master_RepStart();
  7113   003ADE  EC5B  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7114                           
  7115                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  7116   003AE2  0E53               	movlw	83
  7117   003AE4  EC55  F01F         	call	_I2C_2_Master_Write
  7118                           
  7119                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  7120   003AE8  0E01               	movlw	1
  7121   003AEA  ECF6  F01D         	call	_I2C_2_Master_Read
  7122   003AEE  6E0B               	movwf	??_color_read_Blue^0,c
  7123   003AF0  500B               	movf	??_color_read_Blue^0,w,c
  7124   003AF2  6E0E               	movwf	color_read_Blue@tmp^0,c
  7125   003AF4  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  7126                           
  7127                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7128   003AF6  0E00               	movlw	0
  7129   003AF8  ECF6  F01D         	call	_I2C_2_Master_Read
  7130   003AFC  6E0B               	movwf	??_color_read_Blue^0,c
  7131   003AFE  500B               	movf	??_color_read_Blue^0,w,c
  7132   003B00  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  7133   003B02  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  7134   003B04  500E               	movf	color_read_Blue@tmp^0,w,c
  7135   003B06  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  7136   003B08  6E0E               	movwf	color_read_Blue@tmp^0,c
  7137   003B0A  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  7138   003B0C  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  7139   003B0E  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  7140                           
  7141                           ;color.c: 82:  I2C_2_Master_Stop();
  7142   003B10  EC60  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7143   003B14                     
  7144                           ;color.c: 83:  return tmp;
  7145   003B14  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  7146   003B18  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7147   003B1C  0012               	return		;funcret
  7148   003B1E                     __end_of_color_read_Blue:
  7149                           	callstack 0
  7150                           
  7151 ;; *************** function _I2C_2_Master_RepStart *****************
  7152 ;; Defined at:
  7153 ;;		line 33 in file "i2c.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used: 1
  7173 ;; Hardware stack levels required when called: 3
  7174 ;; This function calls:
  7175 ;;		_I2C_2_Master_Idle
  7176 ;; This function is called by:
  7177 ;;		_color_read_lum
  7178 ;;		_color_read_Red
  7179 ;;		_color_read_Green
  7180 ;;		_color_read_Blue
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text32
  7185   003EB6                     __ptext32:
  7186                           	callstack 0
  7187   003EB6                     _I2C_2_Master_RepStart:
  7188                           	callstack 25
  7189   003EB6                     
  7190                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7191   003EB6  EC0F  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7192   003EBA                     
  7193                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7194   003EBA  010E               	movlb	14	; () banked
  7195   003EBC  83DA               	bsf	218,1,b	;volatile
  7196   003EBE                     
  7197                           ; BSR set to: 14
  7198   003EBE  0012               	return		;funcret
  7199   003EC0                     __end_of_I2C_2_Master_RepStart:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _I2C_2_Master_Read *****************
  7203 ;; Defined at:
  7204 ;;		line 51 in file "i2c.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  ack             1    wreg     unsigned char 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  ack             1    6[COMRAM] unsigned char 
  7209 ;;  tmp             1    7[COMRAM] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      unsigned char 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7223 ;;Total ram usage:        3 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 3
  7226 ;; This function calls:
  7227 ;;		_I2C_2_Master_Idle
  7228 ;; This function is called by:
  7229 ;;		_color_read_lum
  7230 ;;		_color_read_Red
  7231 ;;		_color_read_Green
  7232 ;;		_color_read_Blue
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text33
  7237   003BEC                     __ptext33:
  7238                           	callstack 0
  7239   003BEC                     _I2C_2_Master_Read:
  7240                           	callstack 25
  7241                           
  7242                           ; BSR set to: 14
  7243                           ;incstack = 0
  7244                           ;I2C_2_Master_Read@ack stored from wreg
  7245   003BEC  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  7246   003BEE                     
  7247                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7248   003BEE  EC0F  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7249   003BF2                     
  7250                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7251   003BF2  010E               	movlb	14	; () banked
  7252   003BF4  87DA               	bsf	218,3,b	;volatile
  7253                           
  7254                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7255   003BF6  EC0F  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7256   003BFA                     
  7257                           ;i2c.c: 57:   tmp = SSP2BUF;
  7258   003BFA  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7259                           
  7260                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7261   003BFE  EC0F  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7262   003C02                     
  7263                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7264   003C02  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  7265   003C04  B4D8               	btfsc	status,2,c
  7266   003C06  EF07  F01E         	goto	u6101
  7267   003C0A  EF0B  F01E         	goto	u6100
  7268   003C0E                     u6101:
  7269   003C0E  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7270   003C10  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  7271   003C12  EF0C  F01E         	goto	u6118
  7272   003C16                     u6100:
  7273   003C16  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7274   003C18                     u6118:
  7275   003C18  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  7276   003C1A  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  7277   003C1C  010E               	movlb	14	; () banked
  7278   003C1E  51DA               	movf	218,w,b	;volatile
  7279   003C20  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7280   003C22  0BDF               	andlw	-33
  7281   003C24  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7282   003C26  6FDA               	movwf	218,b	;volatile
  7283   003C28                     
  7284                           ; BSR set to: 14
  7285                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7286   003C28  89DA               	bsf	218,4,b	;volatile
  7287   003C2A                     
  7288                           ; BSR set to: 14
  7289                           ;i2c.c: 61:   return tmp;
  7290   003C2A  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  7291   003C2C                     
  7292                           ; BSR set to: 14
  7293   003C2C  0012               	return		;funcret
  7294   003C2E                     __end_of_I2C_2_Master_Read:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function _initUSART4 *****************
  7298 ;; Defined at:
  7299 ;;		line 4 in file "serial.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;Total ram usage:        0 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; Hardware stack levels required when called: 2
  7320 ;; This function calls:
  7321 ;;		Nothing
  7322 ;; This function is called by:
  7323 ;;		_main
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text34
  7328   003E66                     __ptext34:
  7329                           	callstack 0
  7330   003E66                     _initUSART4:
  7331                           	callstack 28
  7332   003E66                     
  7333                           ;serial.c: 5:     RC0PPS = 0x12;
  7334   003E66  0E12               	movlw	18
  7335   003E68  010E               	movlb	14	; () banked
  7336   003E6A  6F62               	movwf	98,b	;volatile
  7337                           
  7338                           ;serial.c: 6:     RX4PPS = 0x11;
  7339   003E6C  0E11               	movlw	17
  7340   003E6E  6F15               	movwf	21,b	;volatile
  7341   003E70                     
  7342                           ; BSR set to: 14
  7343                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7344   003E70  97E9               	bcf	233,3,b	;volatile
  7345   003E72                     
  7346                           ; BSR set to: 14
  7347                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7348   003E72  95E8               	bcf	232,2,b	;volatile
  7349                           
  7350                           ;serial.c: 9:     SP4BRGL = 51;
  7351   003E74  0E33               	movlw	51
  7352   003E76  6FE5               	movwf	229,b	;volatile
  7353                           
  7354                           ;serial.c: 10:     SP4BRGH = 0;
  7355   003E78  0E00               	movlw	0
  7356   003E7A  6FE6               	movwf	230,b	;volatile
  7357   003E7C                     
  7358                           ; BSR set to: 14
  7359                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7360   003E7C  89E7               	bsf	231,4,b	;volatile
  7361   003E7E                     
  7362                           ; BSR set to: 14
  7363                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7364   003E7E  8BE8               	bsf	232,5,b	;volatile
  7365   003E80                     
  7366                           ; BSR set to: 14
  7367                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7368   003E80  8FE7               	bsf	231,7,b	;volatile
  7369   003E82                     
  7370                           ; BSR set to: 14
  7371   003E82  0012               	return		;funcret
  7372   003E84                     __end_of_initUSART4:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _colour_rel *****************
  7376 ;; Defined at:
  7377 ;;		line 95 in file "color.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  vals            2   29[COMRAM] PTR struct RGB
  7380 ;;		 -> vals(8), 
  7381 ;;  rel             2   31[COMRAM] PTR struct RGB_rel
  7382 ;;		 -> rel(16), 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  L               4   45[COMRAM] float 
  7385 ;;  B               4   41[COMRAM] float 
  7386 ;;  G               4   37[COMRAM] float 
  7387 ;;  R               4   33[COMRAM] float 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      void 
  7390 ;; Registers used:
  7391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7400 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;Total ram usage:       20 bytes
  7402 ;; Hardware stack levels used: 1
  7403 ;; Hardware stack levels required when called: 3
  7404 ;; This function calls:
  7405 ;;		___fldiv
  7406 ;;		___xxtofl
  7407 ;; This function is called by:
  7408 ;;		_main
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text35
  7413   002DF4                     __ptext35:
  7414                           	callstack 0
  7415   002DF4                     _colour_rel:
  7416                           	callstack 27
  7417   002DF4                     
  7418                           ;color.c: 96:     float R = vals->R;
  7419   002DF4  C01E  FFD9         	movff	colour_rel@vals,fsr2l
  7420   002DF8  C01F  FFDA         	movff	colour_rel@vals+1,fsr2h
  7421   002DFC  CFDE F005          	movff	postinc2,___xxtofl@val
  7422   002E00  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7423   002E04  0E00               	movlw	0
  7424   002E06  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7425   002E08  0EFF               	movlw	-1
  7426   002E0A  6E07               	movwf	(___xxtofl@val+2)^0,c
  7427   002E0C  6E08               	movwf	(___xxtofl@val+3)^0,c
  7428   002E0E  0E01               	movlw	1
  7429   002E10  EC20  F016         	call	___xxtofl
  7430   002E14  C005  F022         	movff	?___xxtofl,colour_rel@R
  7431   002E18  C006  F023         	movff	?___xxtofl+1,colour_rel@R+1
  7432   002E1C  C007  F024         	movff	?___xxtofl+2,colour_rel@R+2
  7433   002E20  C008  F025         	movff	?___xxtofl+3,colour_rel@R+3
  7434                           
  7435                           ;color.c: 97:     float G = vals->G;
  7436   002E24  EE20 F002          	lfsr	2,2
  7437   002E28  501E               	movf	colour_rel@vals^0,w,c
  7438   002E2A  26D9               	addwf	fsr2l,f,c
  7439   002E2C  501F               	movf	(colour_rel@vals+1)^0,w,c
  7440   002E2E  22DA               	addwfc	fsr2h,f,c
  7441   002E30  CFDE F005          	movff	postinc2,___xxtofl@val
  7442   002E34  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7443   002E38  0E00               	movlw	0
  7444   002E3A  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7445   002E3C  0EFF               	movlw	-1
  7446   002E3E  6E07               	movwf	(___xxtofl@val+2)^0,c
  7447   002E40  6E08               	movwf	(___xxtofl@val+3)^0,c
  7448   002E42  0E01               	movlw	1
  7449   002E44  EC20  F016         	call	___xxtofl
  7450   002E48  C005  F026         	movff	?___xxtofl,colour_rel@G
  7451   002E4C  C006  F027         	movff	?___xxtofl+1,colour_rel@G+1
  7452   002E50  C007  F028         	movff	?___xxtofl+2,colour_rel@G+2
  7453   002E54  C008  F029         	movff	?___xxtofl+3,colour_rel@G+3
  7454                           
  7455                           ;color.c: 98:     float B = vals->B;
  7456   002E58  EE20 F004          	lfsr	2,4
  7457   002E5C  501E               	movf	colour_rel@vals^0,w,c
  7458   002E5E  26D9               	addwf	fsr2l,f,c
  7459   002E60  501F               	movf	(colour_rel@vals+1)^0,w,c
  7460   002E62  22DA               	addwfc	fsr2h,f,c
  7461   002E64  CFDE F005          	movff	postinc2,___xxtofl@val
  7462   002E68  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7463   002E6C  0E00               	movlw	0
  7464   002E6E  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7465   002E70  0EFF               	movlw	-1
  7466   002E72  6E07               	movwf	(___xxtofl@val+2)^0,c
  7467   002E74  6E08               	movwf	(___xxtofl@val+3)^0,c
  7468   002E76  0E01               	movlw	1
  7469   002E78  EC20  F016         	call	___xxtofl
  7470   002E7C  C005  F02A         	movff	?___xxtofl,colour_rel@B
  7471   002E80  C006  F02B         	movff	?___xxtofl+1,colour_rel@B+1
  7472   002E84  C007  F02C         	movff	?___xxtofl+2,colour_rel@B+2
  7473   002E88  C008  F02D         	movff	?___xxtofl+3,colour_rel@B+3
  7474                           
  7475                           ;color.c: 99:     float L = vals->L;
  7476   002E8C  EE20 F006          	lfsr	2,6
  7477   002E90  501E               	movf	colour_rel@vals^0,w,c
  7478   002E92  26D9               	addwf	fsr2l,f,c
  7479   002E94  501F               	movf	(colour_rel@vals+1)^0,w,c
  7480   002E96  22DA               	addwfc	fsr2h,f,c
  7481   002E98  CFDE F005          	movff	postinc2,___xxtofl@val
  7482   002E9C  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7483   002EA0  0E00               	movlw	0
  7484   002EA2  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7485   002EA4  0EFF               	movlw	-1
  7486   002EA6  6E07               	movwf	(___xxtofl@val+2)^0,c
  7487   002EA8  6E08               	movwf	(___xxtofl@val+3)^0,c
  7488   002EAA  0E01               	movlw	1
  7489   002EAC  EC20  F016         	call	___xxtofl
  7490   002EB0  C005  F02E         	movff	?___xxtofl,colour_rel@L
  7491   002EB4  C006  F02F         	movff	?___xxtofl+1,colour_rel@L+1
  7492   002EB8  C007  F030         	movff	?___xxtofl+2,colour_rel@L+2
  7493   002EBC  C008  F031         	movff	?___xxtofl+3,colour_rel@L+3
  7494                           
  7495                           ;color.c: 100:     rel -> R = R/L;
  7496   002EC0  C022  F005         	movff	colour_rel@R,___fldiv@b
  7497   002EC4  C023  F006         	movff	colour_rel@R+1,___fldiv@b+1
  7498   002EC8  C024  F007         	movff	colour_rel@R+2,___fldiv@b+2
  7499   002ECC  C025  F008         	movff	colour_rel@R+3,___fldiv@b+3
  7500   002ED0  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7501   002ED4  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7502   002ED8  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7503   002EDC  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7504   002EE0  EC89  F010         	call	___fldiv	;wreg free
  7505   002EE4  C020  FFD9         	movff	colour_rel@rel,fsr2l
  7506   002EE8  C021  FFDA         	movff	colour_rel@rel+1,fsr2h
  7507   002EEC  C005  FFDE         	movff	?___fldiv,postinc2
  7508   002EF0  C006  FFDE         	movff	?___fldiv+1,postinc2
  7509   002EF4  C007  FFDE         	movff	?___fldiv+2,postinc2
  7510   002EF8  C008  FFDE         	movff	?___fldiv+3,postinc2
  7511                           
  7512                           ;color.c: 101:     rel -> B = B/L;
  7513   002EFC  C02A  F005         	movff	colour_rel@B,___fldiv@b
  7514   002F00  C02B  F006         	movff	colour_rel@B+1,___fldiv@b+1
  7515   002F04  C02C  F007         	movff	colour_rel@B+2,___fldiv@b+2
  7516   002F08  C02D  F008         	movff	colour_rel@B+3,___fldiv@b+3
  7517   002F0C  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7518   002F10  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7519   002F14  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7520   002F18  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7521   002F1C  EC89  F010         	call	___fldiv	;wreg free
  7522   002F20  EE20 F008          	lfsr	2,8
  7523   002F24  5020               	movf	colour_rel@rel^0,w,c
  7524   002F26  26D9               	addwf	fsr2l,f,c
  7525   002F28  5021               	movf	(colour_rel@rel+1)^0,w,c
  7526   002F2A  22DA               	addwfc	fsr2h,f,c
  7527   002F2C  C005  FFDE         	movff	?___fldiv,postinc2
  7528   002F30  C006  FFDE         	movff	?___fldiv+1,postinc2
  7529   002F34  C007  FFDE         	movff	?___fldiv+2,postinc2
  7530   002F38  C008  FFDE         	movff	?___fldiv+3,postinc2
  7531                           
  7532                           ;color.c: 102:     rel -> G = G/L;
  7533   002F3C  C026  F005         	movff	colour_rel@G,___fldiv@b
  7534   002F40  C027  F006         	movff	colour_rel@G+1,___fldiv@b+1
  7535   002F44  C028  F007         	movff	colour_rel@G+2,___fldiv@b+2
  7536   002F48  C029  F008         	movff	colour_rel@G+3,___fldiv@b+3
  7537   002F4C  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7538   002F50  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7539   002F54  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7540   002F58  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7541   002F5C  EC89  F010         	call	___fldiv	;wreg free
  7542   002F60  EE20 F004          	lfsr	2,4
  7543   002F64  5020               	movf	colour_rel@rel^0,w,c
  7544   002F66  26D9               	addwf	fsr2l,f,c
  7545   002F68  5021               	movf	(colour_rel@rel+1)^0,w,c
  7546   002F6A  22DA               	addwfc	fsr2h,f,c
  7547   002F6C  C005  FFDE         	movff	?___fldiv,postinc2
  7548   002F70  C006  FFDE         	movff	?___fldiv+1,postinc2
  7549   002F74  C007  FFDE         	movff	?___fldiv+2,postinc2
  7550   002F78  C008  FFDE         	movff	?___fldiv+3,postinc2
  7551   002F7C  0012               	return		;funcret
  7552   002F7E                     __end_of_colour_rel:
  7553                           	callstack 0
  7554                           
  7555 ;; *************** function ___xxtofl *****************
  7556 ;; Defined at:
  7557 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  sign            1    wreg     unsigned char 
  7560 ;;  val             4    4[COMRAM] long 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  sign            1   12[COMRAM] unsigned char 
  7563 ;;  arg             4   14[COMRAM] unsigned long 
  7564 ;;  exp             1   13[COMRAM] unsigned char 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  4    4[COMRAM] unsigned char 
  7567 ;; Registers used:
  7568 ;;		wreg, status,2, status,0
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;Total ram usage:       14 bytes
  7579 ;; Hardware stack levels used: 1
  7580 ;; Hardware stack levels required when called: 2
  7581 ;; This function calls:
  7582 ;;		Nothing
  7583 ;; This function is called by:
  7584 ;;		_colour_rel
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text36
  7589   002C40                     __ptext36:
  7590                           	callstack 0
  7591   002C40                     ___xxtofl:
  7592                           	callstack 27
  7593                           
  7594                           ;incstack = 0
  7595                           ;___xxtofl@sign stored from wreg
  7596   002C40  6E0D               	movwf	___xxtofl@sign^0,c
  7597   002C42  500D               	movf	___xxtofl@sign^0,w,c
  7598   002C44  B4D8               	btfsc	status,2,c
  7599   002C46  EF27  F016         	goto	u6191
  7600   002C4A  EF29  F016         	goto	u6190
  7601   002C4E                     u6191:
  7602   002C4E  EF4B  F016         	goto	l950
  7603   002C52                     u6190:
  7604   002C52  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7605   002C54  EF30  F016         	goto	u6200
  7606   002C58  EF2E  F016         	goto	u6201
  7607   002C5C                     u6201:
  7608   002C5C  EF4B  F016         	goto	l950
  7609   002C60                     u6200:
  7610   002C60  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7611   002C64  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7612   002C68  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7613   002C6C  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7614   002C70  1E09               	comf	??___xxtofl^0,f,c
  7615   002C72  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7616   002C74  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7617   002C76  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7618   002C78  2A09               	incf	??___xxtofl^0,f,c
  7619   002C7A  0E00               	movlw	0
  7620   002C7C  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7621   002C7E  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7622   002C80  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7623   002C82  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7624   002C86  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7625   002C8A  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7626   002C8E  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7627   002C92  EF53  F016         	goto	l5390
  7628   002C96                     l950:
  7629   002C96  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7630   002C9A  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7631   002C9E  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7632   002CA2  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7633   002CA6                     l5390:
  7634   002CA6  5005               	movf	___xxtofl@val^0,w,c
  7635   002CA8  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7636   002CAA  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7637   002CAC  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7638   002CAE  A4D8               	btfss	status,2,c
  7639   002CB0  EF5C  F016         	goto	u6211
  7640   002CB4  EF5E  F016         	goto	u6210
  7641   002CB8                     u6211:
  7642   002CB8  EF68  F016         	goto	l5396
  7643   002CBC                     u6210:
  7644   002CBC  0E00               	movlw	0
  7645   002CBE  6E05               	movwf	?___xxtofl^0,c
  7646   002CC0  0E00               	movlw	0
  7647   002CC2  6E06               	movwf	(?___xxtofl+1)^0,c
  7648   002CC4  0E00               	movlw	0
  7649   002CC6  6E07               	movwf	(?___xxtofl+2)^0,c
  7650   002CC8  0E00               	movlw	0
  7651   002CCA  6E08               	movwf	(?___xxtofl+3)^0,c
  7652   002CCC  EFF9  F016         	goto	l953
  7653   002CD0                     l5396:
  7654   002CD0  0E96               	movlw	150
  7655   002CD2  6E0E               	movwf	___xxtofl@exp^0,c
  7656   002CD4  EF72  F016         	goto	l5400
  7657   002CD8                     l5398:
  7658   002CD8  2A0E               	incf	___xxtofl@exp^0,f,c
  7659   002CDA  90D8               	bcf	status,0,c
  7660   002CDC  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7661   002CDE  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7662   002CE0  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7663   002CE2  320F               	rrcf	___xxtofl@arg^0,f,c
  7664   002CE4                     l5400:
  7665   002CE4  0E00               	movlw	0
  7666   002CE6  140F               	andwf	___xxtofl@arg^0,w,c
  7667   002CE8  6E09               	movwf	??___xxtofl^0,c
  7668   002CEA  0E00               	movlw	0
  7669   002CEC  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7670   002CEE  6E0A               	movwf	(??___xxtofl+1)^0,c
  7671   002CF0  0E00               	movlw	0
  7672   002CF2  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7673   002CF4  6E0B               	movwf	(??___xxtofl+2)^0,c
  7674   002CF6  0EFE               	movlw	254
  7675   002CF8  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7676   002CFA  6E0C               	movwf	(??___xxtofl+3)^0,c
  7677   002CFC  5009               	movf	??___xxtofl^0,w,c
  7678   002CFE  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7679   002D00  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7680   002D02  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7681   002D04  A4D8               	btfss	status,2,c
  7682   002D06  EF87  F016         	goto	u6221
  7683   002D0A  EF89  F016         	goto	u6220
  7684   002D0E                     u6221:
  7685   002D0E  EF6C  F016         	goto	l5398
  7686   002D12                     u6220:
  7687   002D12  EF97  F016         	goto	l957
  7688   002D16                     l5402:
  7689   002D16  2A0E               	incf	___xxtofl@exp^0,f,c
  7690   002D18  0E01               	movlw	1
  7691   002D1A  260F               	addwf	___xxtofl@arg^0,f,c
  7692   002D1C  0E00               	movlw	0
  7693   002D1E  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7694   002D20  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7695   002D22  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7696   002D24  90D8               	bcf	status,0,c
  7697   002D26  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7698   002D28  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7699   002D2A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7700   002D2C  320F               	rrcf	___xxtofl@arg^0,f,c
  7701   002D2E                     l957:
  7702   002D2E  0E00               	movlw	0
  7703   002D30  140F               	andwf	___xxtofl@arg^0,w,c
  7704   002D32  6E09               	movwf	??___xxtofl^0,c
  7705   002D34  0E00               	movlw	0
  7706   002D36  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7707   002D38  6E0A               	movwf	(??___xxtofl+1)^0,c
  7708   002D3A  0E00               	movlw	0
  7709   002D3C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7710   002D3E  6E0B               	movwf	(??___xxtofl+2)^0,c
  7711   002D40  0EFF               	movlw	255
  7712   002D42  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7713   002D44  6E0C               	movwf	(??___xxtofl+3)^0,c
  7714   002D46  5009               	movf	??___xxtofl^0,w,c
  7715   002D48  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7716   002D4A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7717   002D4C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7718   002D4E  A4D8               	btfss	status,2,c
  7719   002D50  EFAC  F016         	goto	u6231
  7720   002D54  EFAE  F016         	goto	u6230
  7721   002D58                     u6231:
  7722   002D58  EF8B  F016         	goto	l5402
  7723   002D5C                     u6230:
  7724   002D5C  EFB6  F016         	goto	l5410
  7725   002D60                     l5408:
  7726   002D60  060E               	decf	___xxtofl@exp^0,f,c
  7727   002D62  90D8               	bcf	status,0,c
  7728   002D64  360F               	rlcf	___xxtofl@arg^0,f,c
  7729   002D66  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7730   002D68  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7731   002D6A  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7732   002D6C                     l5410:
  7733   002D6C  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7734   002D6E  EFBB  F016         	goto	u6241
  7735   002D72  EFBD  F016         	goto	u6240
  7736   002D76                     u6241:
  7737   002D76  EFC5  F016         	goto	l964
  7738   002D7A                     u6240:
  7739   002D7A  0E02               	movlw	2
  7740   002D7C  600E               	cpfslt	___xxtofl@exp^0,c
  7741   002D7E  EFC3  F016         	goto	u6251
  7742   002D82  EFC5  F016         	goto	u6250
  7743   002D86                     u6251:
  7744   002D86  EFB0  F016         	goto	l5408
  7745   002D8A                     u6250:
  7746   002D8A                     l964:
  7747   002D8A  B00E               	btfsc	___xxtofl@exp^0,0,c
  7748   002D8C  EFCA  F016         	goto	u6261
  7749   002D90  EFCC  F016         	goto	u6260
  7750   002D94                     u6261:
  7751   002D94  EFCD  F016         	goto	l5416
  7752   002D98                     u6260:
  7753   002D98  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7754   002D9A                     l5416:
  7755   002D9A  90D8               	bcf	status,0,c
  7756   002D9C  320E               	rrcf	___xxtofl@exp^0,f,c
  7757   002D9E  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7758   002DA2  6A0A               	clrf	(??___xxtofl+1)^0,c
  7759   002DA4  6A0B               	clrf	(??___xxtofl+2)^0,c
  7760   002DA6  6A0C               	clrf	(??___xxtofl+3)^0,c
  7761   002DA8  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7762   002DAC  6A0B               	clrf	(??___xxtofl+2)^0,c
  7763   002DAE  6A0A               	clrf	(??___xxtofl+1)^0,c
  7764   002DB0  6A09               	clrf	??___xxtofl^0,c
  7765   002DB2  5009               	movf	??___xxtofl^0,w,c
  7766   002DB4  120F               	iorwf	___xxtofl@arg^0,f,c
  7767   002DB6  500A               	movf	(??___xxtofl+1)^0,w,c
  7768   002DB8  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7769   002DBA  500B               	movf	(??___xxtofl+2)^0,w,c
  7770   002DBC  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7771   002DBE  500C               	movf	(??___xxtofl+3)^0,w,c
  7772   002DC0  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7773   002DC2  500D               	movf	___xxtofl@sign^0,w,c
  7774   002DC4  B4D8               	btfsc	status,2,c
  7775   002DC6  EFE7  F016         	goto	u6271
  7776   002DCA  EFE9  F016         	goto	u6270
  7777   002DCE                     u6271:
  7778   002DCE  EFF1  F016         	goto	l5426
  7779   002DD2                     u6270:
  7780   002DD2  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7781   002DD4  EFF0  F016         	goto	u6280
  7782   002DD8  EFEE  F016         	goto	u6281
  7783   002DDC                     u6281:
  7784   002DDC  EFF1  F016         	goto	l5426
  7785   002DE0                     u6280:
  7786   002DE0  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7787   002DE2                     l5426:
  7788   002DE2  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7789   002DE6  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7790   002DEA  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7791   002DEE  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7792   002DF2                     l953:
  7793   002DF2  0012               	return		;funcret
  7794   002DF4                     __end_of___xxtofl:
  7795                           	callstack 0
  7796                           
  7797 ;; *************** function ___fldiv *****************
  7798 ;; Defined at:
  7799 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  b               4    4[COMRAM] unsigned char 
  7802 ;;  a               4    8[COMRAM] unsigned char 
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;  grs             4   23[COMRAM] unsigned long 
  7805 ;;  rem             4   16[COMRAM] unsigned long 
  7806 ;;  new_exp         2   21[COMRAM] short 
  7807 ;;  aexp            1   28[COMRAM] unsigned char 
  7808 ;;  bexp            1   27[COMRAM] unsigned char 
  7809 ;;  sign            1   20[COMRAM] unsigned char 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  4    4[COMRAM] unsigned char 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2, status,0
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7819 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;Total ram usage:       25 bytes
  7824 ;; Hardware stack levels used: 1
  7825 ;; Hardware stack levels required when called: 2
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_colour_rel
  7830 ;;		_efgtoa
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text37
  7835   002112                     __ptext37:
  7836                           	callstack 0
  7837   002112                     ___fldiv:
  7838                           	callstack 24
  7839   002112  5008               	movf	(___fldiv@b+3)^0,w,c
  7840   002114  0B80               	andlw	128
  7841   002116  6E15               	movwf	___fldiv@sign^0,c
  7842   002118  5008               	movf	(___fldiv@b+3)^0,w,c
  7843   00211A  2408               	addwf	(___fldiv@b+3)^0,w,c
  7844   00211C  6E1C               	movwf	___fldiv@bexp^0,c
  7845   00211E  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7846   002120  EF94  F010         	goto	u4851
  7847   002124  EF96  F010         	goto	u4850
  7848   002128                     u4851:
  7849   002128  EF97  F010         	goto	l4498
  7850   00212C                     u4850:
  7851   00212C  801C               	bsf	___fldiv@bexp^0,0,c
  7852   00212E                     l4498:
  7853   00212E  501C               	movf	___fldiv@bexp^0,w,c
  7854   002130  B4D8               	btfsc	status,2,c
  7855   002132  EF9D  F010         	goto	u4861
  7856   002136  EF9F  F010         	goto	u4860
  7857   00213A                     u4861:
  7858   00213A  EFB4  F010         	goto	l4508
  7859   00213E                     u4860:
  7860   00213E  281C               	incf	___fldiv@bexp^0,w,c
  7861   002140  A4D8               	btfss	status,2,c
  7862   002142  EFA5  F010         	goto	u4871
  7863   002146  EFA7  F010         	goto	u4870
  7864   00214A                     u4871:
  7865   00214A  EFAF  F010         	goto	l4504
  7866   00214E                     u4870:
  7867   00214E  0E00               	movlw	0
  7868   002150  6E05               	movwf	___fldiv@b^0,c
  7869   002152  0E00               	movlw	0
  7870   002154  6E06               	movwf	(___fldiv@b+1)^0,c
  7871   002156  0E00               	movlw	0
  7872   002158  6E07               	movwf	(___fldiv@b+2)^0,c
  7873   00215A  0E00               	movlw	0
  7874   00215C  6E08               	movwf	(___fldiv@b+3)^0,c
  7875   00215E                     l4504:
  7876   00215E  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7877   002160  0E00               	movlw	0
  7878   002162  6E08               	movwf	(___fldiv@b+3)^0,c
  7879   002164  EFBC  F010         	goto	l4510
  7880   002168                     l4508:
  7881   002168  0E00               	movlw	0
  7882   00216A  6E05               	movwf	___fldiv@b^0,c
  7883   00216C  0E00               	movlw	0
  7884   00216E  6E06               	movwf	(___fldiv@b+1)^0,c
  7885   002170  0E00               	movlw	0
  7886   002172  6E07               	movwf	(___fldiv@b+2)^0,c
  7887   002174  0E00               	movlw	0
  7888   002176  6E08               	movwf	(___fldiv@b+3)^0,c
  7889   002178                     l4510:
  7890   002178  500C               	movf	(___fldiv@a+3)^0,w,c
  7891   00217A  0B80               	andlw	128
  7892   00217C  1A15               	xorwf	___fldiv@sign^0,f,c
  7893   00217E  500C               	movf	(___fldiv@a+3)^0,w,c
  7894   002180  240C               	addwf	(___fldiv@a+3)^0,w,c
  7895   002182  6E1D               	movwf	___fldiv@aexp^0,c
  7896   002184  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  7897   002186  EFC7  F010         	goto	u4881
  7898   00218A  EFC9  F010         	goto	u4880
  7899   00218E                     u4881:
  7900   00218E  EFCA  F010         	goto	l4518
  7901   002192                     u4880:
  7902   002192  801D               	bsf	___fldiv@aexp^0,0,c
  7903   002194                     l4518:
  7904   002194  501D               	movf	___fldiv@aexp^0,w,c
  7905   002196  B4D8               	btfsc	status,2,c
  7906   002198  EFD0  F010         	goto	u4891
  7907   00219C  EFD2  F010         	goto	u4890
  7908   0021A0                     u4891:
  7909   0021A0  EFE7  F010         	goto	l4528
  7910   0021A4                     u4890:
  7911   0021A4  281D               	incf	___fldiv@aexp^0,w,c
  7912   0021A6  A4D8               	btfss	status,2,c
  7913   0021A8  EFD8  F010         	goto	u4901
  7914   0021AC  EFDA  F010         	goto	u4900
  7915   0021B0                     u4901:
  7916   0021B0  EFE2  F010         	goto	l4524
  7917   0021B4                     u4900:
  7918   0021B4  0E00               	movlw	0
  7919   0021B6  6E09               	movwf	___fldiv@a^0,c
  7920   0021B8  0E00               	movlw	0
  7921   0021BA  6E0A               	movwf	(___fldiv@a+1)^0,c
  7922   0021BC  0E00               	movlw	0
  7923   0021BE  6E0B               	movwf	(___fldiv@a+2)^0,c
  7924   0021C0  0E00               	movlw	0
  7925   0021C2  6E0C               	movwf	(___fldiv@a+3)^0,c
  7926   0021C4                     l4524:
  7927   0021C4  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  7928   0021C6  0E00               	movlw	0
  7929   0021C8  6E0C               	movwf	(___fldiv@a+3)^0,c
  7930   0021CA  EFEF  F010         	goto	l4530
  7931   0021CE                     l4528:
  7932   0021CE  0E00               	movlw	0
  7933   0021D0  6E09               	movwf	___fldiv@a^0,c
  7934   0021D2  0E00               	movlw	0
  7935   0021D4  6E0A               	movwf	(___fldiv@a+1)^0,c
  7936   0021D6  0E00               	movlw	0
  7937   0021D8  6E0B               	movwf	(___fldiv@a+2)^0,c
  7938   0021DA  0E00               	movlw	0
  7939   0021DC  6E0C               	movwf	(___fldiv@a+3)^0,c
  7940   0021DE                     l4530:
  7941   0021DE  5009               	movf	___fldiv@a^0,w,c
  7942   0021E0  100A               	iorwf	(___fldiv@a+1)^0,w,c
  7943   0021E2  100B               	iorwf	(___fldiv@a+2)^0,w,c
  7944   0021E4  100C               	iorwf	(___fldiv@a+3)^0,w,c
  7945   0021E6  A4D8               	btfss	status,2,c
  7946   0021E8  EFF8  F010         	goto	u4911
  7947   0021EC  EFFA  F010         	goto	u4910
  7948   0021F0                     u4911:
  7949   0021F0  EF12  F011         	goto	l4542
  7950   0021F4                     u4910:
  7951   0021F4  0E00               	movlw	0
  7952   0021F6  6E05               	movwf	___fldiv@b^0,c
  7953   0021F8  0E00               	movlw	0
  7954   0021FA  6E06               	movwf	(___fldiv@b+1)^0,c
  7955   0021FC  0E00               	movlw	0
  7956   0021FE  6E07               	movwf	(___fldiv@b+2)^0,c
  7957   002200  0E00               	movlw	0
  7958   002202  6E08               	movwf	(___fldiv@b+3)^0,c
  7959   002204  0E80               	movlw	128
  7960   002206  1207               	iorwf	(___fldiv@b+2)^0,f,c
  7961   002208  0E7F               	movlw	127
  7962   00220A  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7963   00220C                     l4536:
  7964   00220C  5015               	movf	___fldiv@sign^0,w,c
  7965   00220E  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7966   002210  C005  F005         	movff	___fldiv@b,?___fldiv
  7967   002214  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  7968   002218  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  7969   00221C  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  7970   002220  EF55  F012         	goto	l877
  7971   002224                     l4542:
  7972   002224  501C               	movf	___fldiv@bexp^0,w,c
  7973   002226  A4D8               	btfss	status,2,c
  7974   002228  EF18  F011         	goto	u4921
  7975   00222C  EF1A  F011         	goto	u4920
  7976   002230                     u4921:
  7977   002230  EF24  F011         	goto	l4550
  7978   002234                     u4920:
  7979   002234  0E00               	movlw	0
  7980   002236  6E05               	movwf	?___fldiv^0,c
  7981   002238  0E00               	movlw	0
  7982   00223A  6E06               	movwf	(?___fldiv+1)^0,c
  7983   00223C  0E00               	movlw	0
  7984   00223E  6E07               	movwf	(?___fldiv+2)^0,c
  7985   002240  0E00               	movlw	0
  7986   002242  6E08               	movwf	(?___fldiv+3)^0,c
  7987   002244  EF55  F012         	goto	l877
  7988   002248                     l4550:
  7989   002248  501D               	movf	___fldiv@aexp^0,w,c
  7990   00224A  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  7991   00224E  6A0E               	clrf	(??___fldiv+1)^0,c
  7992   002250  5E0D               	subwf	??___fldiv^0,f,c
  7993   002252  0E00               	movlw	0
  7994   002254  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  7995   002256  0E7F               	movlw	127
  7996   002258  240D               	addwf	??___fldiv^0,w,c
  7997   00225A  6E16               	movwf	___fldiv@new_exp^0,c
  7998   00225C  0E00               	movlw	0
  7999   00225E  200E               	addwfc	(??___fldiv+1)^0,w,c
  8000   002260  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8001   002262  C005  F011         	movff	___fldiv@b,___fldiv@rem
  8002   002266  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  8003   00226A  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  8004   00226E  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  8005   002272  0E00               	movlw	0
  8006   002274  6E05               	movwf	___fldiv@b^0,c
  8007   002276  0E00               	movlw	0
  8008   002278  6E06               	movwf	(___fldiv@b+1)^0,c
  8009   00227A  0E00               	movlw	0
  8010   00227C  6E07               	movwf	(___fldiv@b+2)^0,c
  8011   00227E  0E00               	movlw	0
  8012   002280  6E08               	movwf	(___fldiv@b+3)^0,c
  8013   002282  0E00               	movlw	0
  8014   002284  6E18               	movwf	___fldiv@grs^0,c
  8015   002286  0E00               	movlw	0
  8016   002288  6E19               	movwf	(___fldiv@grs+1)^0,c
  8017   00228A  0E00               	movlw	0
  8018   00228C  6E1A               	movwf	(___fldiv@grs+2)^0,c
  8019   00228E  0E00               	movlw	0
  8020   002290  6E1B               	movwf	(___fldiv@grs+3)^0,c
  8021   002292  0E00               	movlw	0
  8022   002294  6E1D               	movwf	___fldiv@aexp^0,c
  8023   002296  EF85  F011         	goto	l879
  8024   00229A                     l4560:
  8025   00229A  501D               	movf	___fldiv@aexp^0,w,c
  8026   00229C  B4D8               	btfsc	status,2,c
  8027   00229E  EF53  F011         	goto	u4931
  8028   0022A2  EF55  F011         	goto	u4930
  8029   0022A6                     u4931:
  8030   0022A6  EF6C  F011         	goto	l4568
  8031   0022AA                     u4930:
  8032   0022AA  90D8               	bcf	status,0,c
  8033   0022AC  3611               	rlcf	___fldiv@rem^0,f,c
  8034   0022AE  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  8035   0022B0  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  8036   0022B2  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  8037   0022B4  90D8               	bcf	status,0,c
  8038   0022B6  3605               	rlcf	___fldiv@b^0,f,c
  8039   0022B8  3606               	rlcf	(___fldiv@b+1)^0,f,c
  8040   0022BA  3607               	rlcf	(___fldiv@b+2)^0,f,c
  8041   0022BC  3608               	rlcf	(___fldiv@b+3)^0,f,c
  8042   0022BE  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8043   0022C0  EF64  F011         	goto	u4941
  8044   0022C4  EF66  F011         	goto	u4940
  8045   0022C8                     u4941:
  8046   0022C8  EF67  F011         	goto	l882
  8047   0022CC                     u4940:
  8048   0022CC  8005               	bsf	___fldiv@b^0,0,c
  8049   0022CE                     l882:
  8050   0022CE  90D8               	bcf	status,0,c
  8051   0022D0  3618               	rlcf	___fldiv@grs^0,f,c
  8052   0022D2  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  8053   0022D4  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  8054   0022D6  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  8055   0022D8                     l4568:
  8056   0022D8  5009               	movf	___fldiv@a^0,w,c
  8057   0022DA  5C11               	subwf	___fldiv@rem^0,w,c
  8058   0022DC  500A               	movf	(___fldiv@a+1)^0,w,c
  8059   0022DE  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  8060   0022E0  500B               	movf	(___fldiv@a+2)^0,w,c
  8061   0022E2  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  8062   0022E4  500C               	movf	(___fldiv@a+3)^0,w,c
  8063   0022E6  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  8064   0022E8  A0D8               	btfss	status,0,c
  8065   0022EA  EF79  F011         	goto	u4951
  8066   0022EE  EF7B  F011         	goto	u4950
  8067   0022F2                     u4951:
  8068   0022F2  EF84  F011         	goto	l4574
  8069   0022F6                     u4950:
  8070   0022F6  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  8071   0022F8  5009               	movf	___fldiv@a^0,w,c
  8072   0022FA  5E11               	subwf	___fldiv@rem^0,f,c
  8073   0022FC  500A               	movf	(___fldiv@a+1)^0,w,c
  8074   0022FE  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  8075   002300  500B               	movf	(___fldiv@a+2)^0,w,c
  8076   002302  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  8077   002304  500C               	movf	(___fldiv@a+3)^0,w,c
  8078   002306  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  8079   002308                     l4574:
  8080   002308  2A1D               	incf	___fldiv@aexp^0,f,c
  8081   00230A                     l879:
  8082   00230A  0E19               	movlw	25
  8083   00230C  641D               	cpfsgt	___fldiv@aexp^0,c
  8084   00230E  EF8B  F011         	goto	u4961
  8085   002312  EF8D  F011         	goto	u4960
  8086   002316                     u4961:
  8087   002316  EF4D  F011         	goto	l4560
  8088   00231A                     u4960:
  8089   00231A  5011               	movf	___fldiv@rem^0,w,c
  8090   00231C  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  8091   00231E  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  8092   002320  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  8093   002322  B4D8               	btfsc	status,2,c
  8094   002324  EF96  F011         	goto	u4971
  8095   002328  EF98  F011         	goto	u4970
  8096   00232C                     u4971:
  8097   00232C  EFB0  F011         	goto	l4586
  8098   002330                     u4970:
  8099   002330  8018               	bsf	___fldiv@grs^0,0,c
  8100   002332  EFB0  F011         	goto	l4586
  8101   002336                     l4580:
  8102   002336  90D8               	bcf	status,0,c
  8103   002338  3605               	rlcf	___fldiv@b^0,f,c
  8104   00233A  3606               	rlcf	(___fldiv@b+1)^0,f,c
  8105   00233C  3607               	rlcf	(___fldiv@b+2)^0,f,c
  8106   00233E  3608               	rlcf	(___fldiv@b+3)^0,f,c
  8107   002340  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8108   002342  EFA5  F011         	goto	u4981
  8109   002346  EFA7  F011         	goto	u4980
  8110   00234A                     u4981:
  8111   00234A  EFA8  F011         	goto	l888
  8112   00234E                     u4980:
  8113   00234E  8005               	bsf	___fldiv@b^0,0,c
  8114   002350                     l888:
  8115   002350  90D8               	bcf	status,0,c
  8116   002352  3618               	rlcf	___fldiv@grs^0,f,c
  8117   002354  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  8118   002356  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  8119   002358  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  8120   00235A  0616               	decf	___fldiv@new_exp^0,f,c
  8121   00235C  A0D8               	btfss	status,0,c
  8122   00235E  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  8123   002360                     l4586:
  8124   002360  AE07               	btfss	(___fldiv@b+2)^0,7,c
  8125   002362  EFB5  F011         	goto	u4991
  8126   002366  EFB7  F011         	goto	u4990
  8127   00236A                     u4991:
  8128   00236A  EF9B  F011         	goto	l4580
  8129   00236E                     u4990:
  8130   00236E  0E00               	movlw	0
  8131   002370  6E1D               	movwf	___fldiv@aexp^0,c
  8132   002372  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8133   002374  EFBE  F011         	goto	u5001
  8134   002378  EFC0  F011         	goto	u5000
  8135   00237C                     u5001:
  8136   00237C  EFE4  F011         	goto	l890
  8137   002380                     u5000:
  8138   002380  0EFF               	movlw	255
  8139   002382  1418               	andwf	___fldiv@grs^0,w,c
  8140   002384  6E0D               	movwf	??___fldiv^0,c
  8141   002386  0EFF               	movlw	255
  8142   002388  1419               	andwf	(___fldiv@grs+1)^0,w,c
  8143   00238A  6E0E               	movwf	(??___fldiv+1)^0,c
  8144   00238C  0EFF               	movlw	255
  8145   00238E  141A               	andwf	(___fldiv@grs+2)^0,w,c
  8146   002390  6E0F               	movwf	(??___fldiv+2)^0,c
  8147   002392  0E7F               	movlw	127
  8148   002394  141B               	andwf	(___fldiv@grs+3)^0,w,c
  8149   002396  6E10               	movwf	(??___fldiv+3)^0,c
  8150   002398  500D               	movf	??___fldiv^0,w,c
  8151   00239A  100E               	iorwf	(??___fldiv+1)^0,w,c
  8152   00239C  100F               	iorwf	(??___fldiv+2)^0,w,c
  8153   00239E  1010               	iorwf	(??___fldiv+3)^0,w,c
  8154   0023A0  B4D8               	btfsc	status,2,c
  8155   0023A2  EFD5  F011         	goto	u5011
  8156   0023A6  EFD7  F011         	goto	u5010
  8157   0023AA                     u5011:
  8158   0023AA  EFDB  F011         	goto	l891
  8159   0023AE                     u5010:
  8160   0023AE                     l4594:
  8161   0023AE  0E01               	movlw	1
  8162   0023B0  6E1D               	movwf	___fldiv@aexp^0,c
  8163   0023B2  EFE4  F011         	goto	l890
  8164   0023B6                     l891:
  8165   0023B6  A005               	btfss	___fldiv@b^0,0,c
  8166   0023B8  EFE0  F011         	goto	u5021
  8167   0023BC  EFE2  F011         	goto	u5020
  8168   0023C0                     u5021:
  8169   0023C0  EFE4  F011         	goto	l890
  8170   0023C4                     u5020:
  8171   0023C4  EFD7  F011         	goto	l4594
  8172   0023C8                     l890:
  8173   0023C8  501D               	movf	___fldiv@aexp^0,w,c
  8174   0023CA  B4D8               	btfsc	status,2,c
  8175   0023CC  EFEA  F011         	goto	u5031
  8176   0023D0  EFEC  F011         	goto	u5030
  8177   0023D4                     u5031:
  8178   0023D4  EF10  F012         	goto	l4606
  8179   0023D8                     u5030:
  8180   0023D8  0E01               	movlw	1
  8181   0023DA  2605               	addwf	___fldiv@b^0,f,c
  8182   0023DC  0E00               	movlw	0
  8183   0023DE  2206               	addwfc	(___fldiv@b+1)^0,f,c
  8184   0023E0  2207               	addwfc	(___fldiv@b+2)^0,f,c
  8185   0023E2  2208               	addwfc	(___fldiv@b+3)^0,f,c
  8186   0023E4  A008               	btfss	(___fldiv@b+3)^0,0,c
  8187   0023E6  EFF7  F011         	goto	u5041
  8188   0023EA  EFF9  F011         	goto	u5040
  8189   0023EE                     u5041:
  8190   0023EE  EF10  F012         	goto	l4606
  8191   0023F2                     u5040:
  8192   0023F2  C005  F00D         	movff	___fldiv@b,??___fldiv
  8193   0023F6  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  8194   0023FA  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  8195   0023FE  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  8196   002402  3410               	rlcf	(??___fldiv+3)^0,w,c
  8197   002404  3210               	rrcf	(??___fldiv+3)^0,f,c
  8198   002406  320F               	rrcf	(??___fldiv+2)^0,f,c
  8199   002408  320E               	rrcf	(??___fldiv+1)^0,f,c
  8200   00240A  320D               	rrcf	??___fldiv^0,f,c
  8201   00240C  C00D  F005         	movff	??___fldiv,___fldiv@b
  8202   002410  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  8203   002414  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  8204   002418  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  8205   00241C  4A16               	infsnz	___fldiv@new_exp^0,f,c
  8206   00241E  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  8207   002420                     l4606:
  8208   002420  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8209   002422  EF1B  F012         	goto	u5051
  8210   002426  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  8211   002428  E108               	bnz	u5050
  8212   00242A  2816               	incf	___fldiv@new_exp^0,w,c
  8213   00242C  A0D8               	btfss	status,0,c
  8214   00242E  EF1B  F012         	goto	u5051
  8215   002432  EF1D  F012         	goto	u5050
  8216   002436                     u5051:
  8217   002436  EF28  F012         	goto	l4610
  8218   00243A                     u5050:
  8219   00243A  0E00               	movlw	0
  8220   00243C  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8221   00243E  6816               	setf	___fldiv@new_exp^0,c
  8222   002440  0E00               	movlw	0
  8223   002442  6E05               	movwf	___fldiv@b^0,c
  8224   002444  0E00               	movlw	0
  8225   002446  6E06               	movwf	(___fldiv@b+1)^0,c
  8226   002448  0E00               	movlw	0
  8227   00244A  6E07               	movwf	(___fldiv@b+2)^0,c
  8228   00244C  0E00               	movlw	0
  8229   00244E  6E08               	movwf	(___fldiv@b+3)^0,c
  8230   002450                     l4610:
  8231   002450  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8232   002452  EF35  F012         	goto	u5060
  8233   002456  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  8234   002458  E106               	bnz	u5061
  8235   00245A  0416               	decf	___fldiv@new_exp^0,w,c
  8236   00245C  B0D8               	btfsc	status,0,c
  8237   00245E  EF33  F012         	goto	u5061
  8238   002462  EF35  F012         	goto	u5060
  8239   002466                     u5061:
  8240   002466  EF43  F012         	goto	l4614
  8241   00246A                     u5060:
  8242   00246A  0E00               	movlw	0
  8243   00246C  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8244   00246E  0E00               	movlw	0
  8245   002470  6E16               	movwf	___fldiv@new_exp^0,c
  8246   002472  0E00               	movlw	0
  8247   002474  6E05               	movwf	___fldiv@b^0,c
  8248   002476  0E00               	movlw	0
  8249   002478  6E06               	movwf	(___fldiv@b+1)^0,c
  8250   00247A  0E00               	movlw	0
  8251   00247C  6E07               	movwf	(___fldiv@b+2)^0,c
  8252   00247E  0E00               	movlw	0
  8253   002480  6E08               	movwf	(___fldiv@b+3)^0,c
  8254   002482  0E00               	movlw	0
  8255   002484  6E15               	movwf	___fldiv@sign^0,c
  8256   002486                     l4614:
  8257   002486  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  8258   00248A  A01C               	btfss	___fldiv@bexp^0,0,c
  8259   00248C  EF4A  F012         	goto	u5071
  8260   002490  EF4C  F012         	goto	u5070
  8261   002494                     u5071:
  8262   002494  EF4F  F012         	goto	l4620
  8263   002498                     u5070:
  8264   002498  8E07               	bsf	(___fldiv@b+2)^0,7,c
  8265   00249A  EF50  F012         	goto	l4622
  8266   00249E                     l4620:
  8267   00249E  9E07               	bcf	(___fldiv@b+2)^0,7,c
  8268   0024A0                     l4622:
  8269   0024A0  90D8               	bcf	status,0,c
  8270   0024A2  301C               	rrcf	___fldiv@bexp^0,w,c
  8271   0024A4  6E08               	movwf	(___fldiv@b+3)^0,c
  8272   0024A6  EF06  F011         	goto	l4536
  8273   0024AA                     l877:
  8274   0024AA  0012               	return		;funcret
  8275   0024AC                     __end_of___fldiv:
  8276                           	callstack 0
  8277                           
  8278 ;; *************** function _color_click_init *****************
  8279 ;; Defined at:
  8280 ;;		line 5 in file "color.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;		None
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;		None
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8298 ;;Total ram usage:        1 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; Hardware stack levels required when called: 5
  8301 ;; This function calls:
  8302 ;;		_I2C_2_Master_Init
  8303 ;;		_color_writetoaddr
  8304 ;; This function is called by:
  8305 ;;		_main
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text38
  8310   003CE6                     __ptext38:
  8311                           	callstack 0
  8312   003CE6                     _color_click_init:
  8313                           	callstack 25
  8314   003CE6                     
  8315                           ;color.c: 8:     I2C_2_Master_Init();
  8316   003CE6  ECD0  F01E         	call	_I2C_2_Master_Init	;wreg free
  8317   003CEA                     
  8318                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  8319   003CEA  0E01               	movlw	1
  8320   003CEC  6E07               	movwf	color_writetoaddr@value^0,c
  8321   003CEE  0E00               	movlw	0
  8322   003CF0  EC23  F01F         	call	_color_writetoaddr
  8323   003CF4                     
  8324                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8325   003CF4  0E3F               	movlw	63
  8326   003CF6  6E09               	movwf	??_color_click_init^0,c
  8327   003CF8  0E55               	movlw	85
  8328   003CFA                     u6357:
  8329   003CFA  2EE8               	decfsz	wreg,f,c
  8330   003CFC  D7FE               	bra	u6357
  8331   003CFE  2E09               	decfsz	??_color_click_init^0,f,c
  8332   003D00  D7FC               	bra	u6357
  8333   003D02  F000               	nop	
  8334   003D04                     
  8335                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8336   003D04  0E03               	movlw	3
  8337   003D06  6E07               	movwf	color_writetoaddr@value^0,c
  8338   003D08  0E00               	movlw	0
  8339   003D0A  EC23  F01F         	call	_color_writetoaddr
  8340   003D0E                     
  8341                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  8342   003D0E  0ED5               	movlw	213
  8343   003D10  6E07               	movwf	color_writetoaddr@value^0,c
  8344   003D12  0E01               	movlw	1
  8345   003D14  EC23  F01F         	call	_color_writetoaddr
  8346   003D18  0012               	return		;funcret
  8347   003D1A                     __end_of_color_click_init:
  8348                           	callstack 0
  8349                           
  8350 ;; *************** function _color_writetoaddr *****************
  8351 ;; Defined at:
  8352 ;;		line 23 in file "color.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  address         1    wreg     unsigned char 
  8355 ;;  value           1    6[COMRAM] unsigned char 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;  address         1    7[COMRAM] unsigned char 
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  1    wreg      void 
  8360 ;; Registers used:
  8361 ;;		wreg, status,2, status,0, cstack
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;Total ram usage:        2 bytes
  8372 ;; Hardware stack levels used: 1
  8373 ;; Hardware stack levels required when called: 4
  8374 ;; This function calls:
  8375 ;;		_I2C_2_Master_Start
  8376 ;;		_I2C_2_Master_Stop
  8377 ;;		_I2C_2_Master_Write
  8378 ;; This function is called by:
  8379 ;;		_color_click_init
  8380 ;;		_main
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text39
  8385   003E46                     __ptext39:
  8386                           	callstack 0
  8387   003E46                     _color_writetoaddr:
  8388                           	callstack 26
  8389                           
  8390                           ;incstack = 0
  8391                           ;color_writetoaddr@address stored from wreg
  8392   003E46  6E08               	movwf	color_writetoaddr@address^0,c
  8393   003E48                     
  8394                           ;color.c: 24:     I2C_2_Master_Start();
  8395   003E48  EC65  F01F         	call	_I2C_2_Master_Start	;wreg free
  8396                           
  8397                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  8398   003E4C  0E52               	movlw	82
  8399   003E4E  EC55  F01F         	call	_I2C_2_Master_Write
  8400                           
  8401                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  8402   003E52  5008               	movf	color_writetoaddr@address^0,w,c
  8403   003E54  0980               	iorlw	128
  8404   003E56  EC55  F01F         	call	_I2C_2_Master_Write
  8405                           
  8406                           ;color.c: 27:     I2C_2_Master_Write(value);
  8407   003E5A  5007               	movf	color_writetoaddr@value^0,w,c
  8408   003E5C  EC55  F01F         	call	_I2C_2_Master_Write
  8409                           
  8410                           ;color.c: 28:     I2C_2_Master_Stop();
  8411   003E60  EC60  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8412   003E64  0012               	return		;funcret
  8413   003E66                     __end_of_color_writetoaddr:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _I2C_2_Master_Write *****************
  8417 ;; Defined at:
  8418 ;;		line 45 in file "i2c.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  data_byte       1    wreg     unsigned char 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  data_byte       1    5[COMRAM] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;Total ram usage:        1 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; Hardware stack levels required when called: 3
  8439 ;; This function calls:
  8440 ;;		_I2C_2_Master_Idle
  8441 ;; This function is called by:
  8442 ;;		_color_writetoaddr
  8443 ;;		_color_read_lum
  8444 ;;		_color_read_Red
  8445 ;;		_color_read_Green
  8446 ;;		_color_read_Blue
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text40
  8451   003EAA                     __ptext40:
  8452                           	callstack 0
  8453   003EAA                     _I2C_2_Master_Write:
  8454                           	callstack 25
  8455                           
  8456                           ;incstack = 0
  8457                           ;I2C_2_Master_Write@data_byte stored from wreg
  8458   003EAA  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  8459   003EAC                     
  8460                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8461   003EAC  EC0F  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8462   003EB0                     
  8463                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8464   003EB0  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8465   003EB4  0012               	return		;funcret
  8466   003EB6                     __end_of_I2C_2_Master_Write:
  8467                           	callstack 0
  8468                           
  8469 ;; *************** function _I2C_2_Master_Stop *****************
  8470 ;; Defined at:
  8471 ;;		line 39 in file "i2c.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;		None
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      void 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;Total ram usage:        0 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; Hardware stack levels required when called: 3
  8492 ;; This function calls:
  8493 ;;		_I2C_2_Master_Idle
  8494 ;; This function is called by:
  8495 ;;		_color_writetoaddr
  8496 ;;		_color_read_lum
  8497 ;;		_color_read_Red
  8498 ;;		_color_read_Green
  8499 ;;		_color_read_Blue
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text41
  8504   003EC0                     __ptext41:
  8505                           	callstack 0
  8506   003EC0                     _I2C_2_Master_Stop:
  8507                           	callstack 25
  8508   003EC0                     
  8509                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8510   003EC0  EC0F  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8511   003EC4                     
  8512                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8513   003EC4  010E               	movlb	14	; () banked
  8514   003EC6  85DA               	bsf	218,2,b	;volatile
  8515   003EC8                     
  8516                           ; BSR set to: 14
  8517   003EC8  0012               	return		;funcret
  8518   003ECA                     __end_of_I2C_2_Master_Stop:
  8519                           	callstack 0
  8520                           
  8521 ;; *************** function _I2C_2_Master_Start *****************
  8522 ;; Defined at:
  8523 ;;		line 27 in file "i2c.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;		None
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8541 ;;Total ram usage:        0 bytes
  8542 ;; Hardware stack levels used: 1
  8543 ;; Hardware stack levels required when called: 3
  8544 ;; This function calls:
  8545 ;;		_I2C_2_Master_Idle
  8546 ;; This function is called by:
  8547 ;;		_color_writetoaddr
  8548 ;;		_color_read_lum
  8549 ;;		_color_read_Red
  8550 ;;		_color_read_Green
  8551 ;;		_color_read_Blue
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text42
  8556   003ECA                     __ptext42:
  8557                           	callstack 0
  8558   003ECA                     _I2C_2_Master_Start:
  8559                           	callstack 25
  8560   003ECA                     
  8561                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8562   003ECA  EC0F  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8563   003ECE                     
  8564                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8565   003ECE  010E               	movlb	14	; () banked
  8566   003ED0  81DA               	bsf	218,0,b	;volatile
  8567   003ED2                     
  8568                           ; BSR set to: 14
  8569   003ED2  0012               	return		;funcret
  8570   003ED4                     __end_of_I2C_2_Master_Start:
  8571                           	callstack 0
  8572                           
  8573 ;; *************** function _I2C_2_Master_Idle *****************
  8574 ;; Defined at:
  8575 ;;		line 22 in file "i2c.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;		None
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2, status,0
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;Total ram usage:        1 bytes
  8594 ;; Hardware stack levels used: 1
  8595 ;; Hardware stack levels required when called: 2
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_I2C_2_Master_Start
  8600 ;;		_I2C_2_Master_RepStart
  8601 ;;		_I2C_2_Master_Stop
  8602 ;;		_I2C_2_Master_Write
  8603 ;;		_I2C_2_Master_Read
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text43
  8608   003E1E                     __ptext43:
  8609                           	callstack 0
  8610   003E1E                     _I2C_2_Master_Idle:
  8611                           	callstack 25
  8612   003E1E                     l76:
  8613   003E1E  010E               	movlb	14	; () banked
  8614   003E20  B5D8               	btfsc	216,2,b	;volatile
  8615   003E22  EF15  F01F         	goto	u5661
  8616   003E26  EF17  F01F         	goto	u5660
  8617   003E2A                     u5661:
  8618   003E2A  EF0F  F01F         	goto	l76
  8619   003E2E                     u5660:
  8620   003E2E                     
  8621                           ; BSR set to: 14
  8622   003E2E  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8623   003E32  0E1F               	movlw	31
  8624   003E34  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  8625   003E36  A4D8               	btfss	status,2,c
  8626   003E38  EF20  F01F         	goto	u5671
  8627   003E3C  EF22  F01F         	goto	u5670
  8628   003E40                     u5671:
  8629   003E40  EF0F  F01F         	goto	l76
  8630   003E44                     u5670:
  8631   003E44                     
  8632                           ; BSR set to: 14
  8633   003E44  0012               	return		;funcret
  8634   003E46                     __end_of_I2C_2_Master_Idle:
  8635                           	callstack 0
  8636                           
  8637 ;; *************** function _I2C_2_Master_Init *****************
  8638 ;; Defined at:
  8639 ;;		line 4 in file "i2c.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;		None
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;		None
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8657 ;;Total ram usage:        0 bytes
  8658 ;; Hardware stack levels used: 1
  8659 ;; Hardware stack levels required when called: 2
  8660 ;; This function calls:
  8661 ;;		Nothing
  8662 ;; This function is called by:
  8663 ;;		_color_click_init
  8664 ;;		_main
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text44
  8669   003DA0                     __ptext44:
  8670                           	callstack 0
  8671   003DA0                     _I2C_2_Master_Init:
  8672                           	callstack 27
  8673   003DA0                     
  8674                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8675   003DA0  010E               	movlb	14	; () banked
  8676   003DA2  51D9               	movf	217,w,b	;volatile
  8677   003DA4  0BF0               	andlw	-16
  8678   003DA6  0908               	iorlw	8
  8679   003DA8  6FD9               	movwf	217,b	;volatile
  8680   003DAA                     
  8681                           ; BSR set to: 14
  8682                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8683   003DAA  8BD9               	bsf	217,5,b	;volatile
  8684                           
  8685                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8686   003DAC  0E9F               	movlw	159
  8687   003DAE  6FD6               	movwf	214,b	;volatile
  8688   003DB0                     
  8689                           ; BSR set to: 14
  8690                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8691   003DB0  8A84               	bsf	132,5,c	;volatile
  8692   003DB2                     
  8693                           ; BSR set to: 14
  8694                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8695   003DB2  8C84               	bsf	132,6,c	;volatile
  8696   003DB4                     
  8697                           ; BSR set to: 14
  8698                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8699   003DB4  9BA7               	bcf	167,5,b	;volatile
  8700   003DB6                     
  8701                           ; BSR set to: 14
  8702                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8703   003DB6  9DA7               	bcf	167,6,b	;volatile
  8704                           
  8705                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8706   003DB8  0E1D               	movlw	29
  8707   003DBA  6F1D               	movwf	29,b	;volatile
  8708                           
  8709                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8710   003DBC  0E1E               	movlw	30
  8711   003DBE  6F1C               	movwf	28,b	;volatile
  8712                           
  8713                           ;i2c.c: 18:   RD5PPS=0x1C;
  8714   003DC0  0E1C               	movlw	28
  8715   003DC2  6F6F               	movwf	111,b	;volatile
  8716                           
  8717                           ;i2c.c: 19:   RD6PPS=0x1B;
  8718   003DC4  0E1B               	movlw	27
  8719   003DC6  6F70               	movwf	112,b	;volatile
  8720   003DC8                     
  8721                           ; BSR set to: 14
  8722   003DC8  0012               	return		;funcret
  8723   003DCA                     __end_of_I2C_2_Master_Init:
  8724                           	callstack 0
  8725                           
  8726 ;; *************** function _TxBufferedString *****************
  8727 ;; Defined at:
  8728 ;;		line 85 in file "serial.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  string          2    5[COMRAM] PTR unsigned char 
  8731 ;;		 -> main@buf(50), 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8747 ;;Total ram usage:        2 bytes
  8748 ;; Hardware stack levels used: 1
  8749 ;; Hardware stack levels required when called: 3
  8750 ;; This function calls:
  8751 ;;		_putCharToTxBuf
  8752 ;; This function is called by:
  8753 ;;		_main
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text45
  8758   003D1A                     __ptext45:
  8759                           	callstack 0
  8760   003D1A                     _TxBufferedString:
  8761                           	callstack 27
  8762   003D1A                     
  8763                           ;serial.c: 86:  while (*string!=0){
  8764   003D1A  EF98  F01E         	goto	l5472
  8765   003D1E                     l5468:
  8766                           
  8767                           ;serial.c: 87:         putCharToTxBuf(*string++);
  8768   003D1E  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8769   003D22  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8770   003D26  50DF               	movf	indf2,w,c
  8771   003D28  ECE5  F01E         	call	_putCharToTxBuf
  8772   003D2C  4A06               	infsnz	TxBufferedString@string^0,f,c
  8773   003D2E  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  8774   003D30                     l5472:
  8775                           
  8776                           ;serial.c: 86:  while (*string!=0){
  8777   003D30  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8778   003D34  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8779   003D38  50DF               	movf	indf2,w,c
  8780   003D3A  A4D8               	btfss	status,2,c
  8781   003D3C  EFA2  F01E         	goto	u6301
  8782   003D40  EFA4  F01E         	goto	u6300
  8783   003D44                     u6301:
  8784   003D44  EF8F  F01E         	goto	l5468
  8785   003D48                     u6300:
  8786   003D48  0012               	return		;funcret
  8787   003D4A                     __end_of_TxBufferedString:
  8788                           	callstack 0
  8789                           
  8790 ;; *************** function _putCharToTxBuf *****************
  8791 ;; Defined at:
  8792 ;;		line 72 in file "serial.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  byte            1    wreg     unsigned char 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  byte            1    4[COMRAM] unsigned char 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;Total ram usage:        1 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 2
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_TxBufferedString
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text46
  8821   003DCA                     __ptext46:
  8822                           	callstack 0
  8823   003DCA                     _putCharToTxBuf:
  8824                           	callstack 27
  8825                           
  8826                           ;incstack = 0
  8827                           ;putCharToTxBuf@byte stored from wreg
  8828   003DCA  6E05               	movwf	putCharToTxBuf@byte^0,c
  8829   003DCC                     
  8830                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8831   003DCC  0E3B               	movlw	59
  8832   003DCE  6451               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8833   003DD0  EFEC  F01E         	goto	u6161
  8834   003DD4  EFEE  F01E         	goto	u6160
  8835   003DD8                     u6161:
  8836   003DD8  EFF0  F01E         	goto	l5376
  8837   003DDC                     u6160:
  8838   003DDC  0E00               	movlw	0
  8839   003DDE  6E51               	movwf	_TxBufWriteCnt^0,c	;volatile
  8840   003DE0                     l5376:
  8841                           
  8842                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8843   003DE0  0E00               	movlw	low _EUSART4TXbuf
  8844   003DE2  2451               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8845   003DE4  6ED9               	movwf	fsr2l,c
  8846   003DE6  6ADA               	clrf	fsr2h,c
  8847   003DE8  0E01               	movlw	high _EUSART4TXbuf
  8848   003DEA  22DA               	addwfc	fsr2h,f,c
  8849   003DEC  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  8850   003DF0  2A51               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8851   003DF2  0012               	return		;funcret
  8852   003DF4                     __end_of_putCharToTxBuf:
  8853                           	callstack 0
  8854                           
  8855 ;; *************** function _Interrupts_init *****************
  8856 ;; Defined at:
  8857 ;;		line 10 in file "interrupts.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;		None
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;		None
  8862 ;; Return value:  Size  Location     Type
  8863 ;;                  1    wreg      void 
  8864 ;; Registers used:
  8865 ;;		None
  8866 ;; Tracked objects:
  8867 ;;		On entry : 0/0
  8868 ;;		On exit  : 0/0
  8869 ;;		Unchanged: 0/0
  8870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;Total ram usage:        0 bytes
  8876 ;; Hardware stack levels used: 1
  8877 ;; Hardware stack levels required when called: 2
  8878 ;; This function calls:
  8879 ;;		Nothing
  8880 ;; This function is called by:
  8881 ;;		_main
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           	psect	text47
  8886   003E9C                     __ptext47:
  8887                           	callstack 0
  8888   003E9C                     _Interrupts_init:
  8889                           	callstack 28
  8890   003E9C                     
  8891                           ;interrupts.c: 12:     INTCONbits.IPEN=0;
  8892   003E9C  9AF2               	bcf	242,5,c	;volatile
  8893                           
  8894                           ;interrupts.c: 13:     PIE2bits.C1IE=1;
  8895   003E9E  010E               	movlb	14	; () banked
  8896   003EA0  812B               	bsf	43,0,b	;volatile
  8897                           
  8898                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  8899   003EA2  8CF2               	bsf	242,6,c	;volatile
  8900                           
  8901                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  8902   003EA4  8EF2               	bsf	242,7,c	;volatile
  8903                           
  8904                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  8905   003EA6  872D               	bsf	45,3,b	;volatile
  8906   003EA8                     
  8907                           ; BSR set to: 14
  8908   003EA8  0012               	return		;funcret
  8909   003EAA                     __end_of_Interrupts_init:
  8910                           	callstack 0
  8911                           
  8912 ;; *************** function _HighISR *****************
  8913 ;; Defined at:
  8914 ;;		line 25 in file "interrupts.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;		None
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;		None
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1    wreg      void 
  8921 ;; Registers used:
  8922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8932 ;;Total ram usage:        2 bytes
  8933 ;; Hardware stack levels used: 1
  8934 ;; Hardware stack levels required when called: 1
  8935 ;; This function calls:
  8936 ;;		_getCharFromTxBuf
  8937 ;;		_putCharToRxBuf
  8938 ;; This function is called by:
  8939 ;;		Interrupt level 2
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	intcode
  8944   000008                     __pintcode:
  8945                           	callstack 0
  8946   000008                     _HighISR:
  8947                           	callstack 21
  8948                           
  8949                           ; BSR set to: 14
  8950                           ;incstack = 0
  8951   000008  8254               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8952   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  8953   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  8954   000012                     
  8955                           ;interrupts.c: 27:     if (PIR4bits.TX4IF){
  8956   000012  010E               	movlb	14	; () banked
  8957   000014  A537               	btfss	55,2,b	;volatile
  8958   000016  EF0F  F000         	goto	i2u425_41
  8959   00001A  EF11  F000         	goto	i2u425_40
  8960   00001E                     i2u425_41:
  8961   00001E  EF15  F000         	goto	i2l223
  8962   000022                     i2u425_40:
  8963   000022                     
  8964                           ; BSR set to: 14
  8965                           ;interrupts.c: 28:         TX4REG = getCharFromTxBuf();
  8966   000022  ECA5  F01E         	call	_getCharFromTxBuf	;wreg free
  8967   000026  010E               	movlb	14	; () banked
  8968   000028  6FE4               	movwf	228,b	;volatile
  8969   00002A                     i2l223:
  8970                           
  8971                           ; BSR set to: 14
  8972                           ;interrupts.c: 33:     if (PIR4bits.RC4IF){
  8973   00002A  A737               	btfss	55,3,b	;volatile
  8974   00002C  EF1A  F000         	goto	i2u426_41
  8975   000030  EF1C  F000         	goto	i2u426_40
  8976   000034                     i2u426_41:
  8977   000034  EF1F  F000         	goto	i2l225
  8978   000038                     i2u426_40:
  8979   000038                     
  8980                           ; BSR set to: 14
  8981                           ;interrupts.c: 34:         putCharToRxBuf(RC4REG);
  8982   000038  51E3               	movf	227,w,b	;volatile
  8983   00003A  ECFA  F01E         	call	_putCharToRxBuf
  8984   00003E                     i2l225:
  8985   00003E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  8986   000042  C003  FFD9         	movff	??_HighISR,fsr2l
  8987   000046  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8988   000048  0011               	retfie		f
  8989   00004A                     __end_of_HighISR:
  8990                           	callstack 0
  8991                           
  8992 ;; *************** function _putCharToRxBuf *****************
  8993 ;; Defined at:
  8994 ;;		line 52 in file "serial.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  byte            1    wreg     unsigned char 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  byte            1    0[COMRAM] unsigned char 
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  1    wreg      void 
  9001 ;; Registers used:
  9002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9012 ;;Total ram usage:        1 bytes
  9013 ;; Hardware stack levels used: 1
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_HighISR
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text49
  9022   003DF4                     __ptext49:
  9023                           	callstack 0
  9024   003DF4                     _putCharToRxBuf:
  9025                           	callstack 21
  9026                           
  9027                           ;incstack = 0
  9028                           ;putCharToRxBuf@byte stored from wreg
  9029   003DF4  6E01               	movwf	putCharToRxBuf@byte^0,c
  9030   003DF6                     
  9031                           ;serial.c: 53:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9032   003DF6  0E13               	movlw	19
  9033   003DF8  6453               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9034   003DFA  EF01  F01F         	goto	i2u418_41
  9035   003DFE  EF03  F01F         	goto	i2u418_40
  9036   003E02                     i2u418_41:
  9037   003E02  EF05  F01F         	goto	i2l3966
  9038   003E06                     i2u418_40:
  9039   003E06  0E00               	movlw	0
  9040   003E08  6E53               	movwf	_RxBufWriteCnt^0,c	;volatile
  9041   003E0A                     i2l3966:
  9042                           
  9043                           ;serial.c: 54:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9044   003E0A  0E3C               	movlw	low _EUSART4RXbuf
  9045   003E0C  2453               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9046   003E0E  6ED9               	movwf	fsr2l,c
  9047   003E10  6ADA               	clrf	fsr2h,c
  9048   003E12  0E01               	movlw	high _EUSART4RXbuf
  9049   003E14  22DA               	addwfc	fsr2h,f,c
  9050   003E16  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9051   003E1A  2A53               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9052   003E1C  0012               	return		;funcret
  9053   003E1E                     __end_of_putCharToRxBuf:
  9054                           	callstack 0
  9055                           
  9056 ;; *************** function _getCharFromTxBuf *****************
  9057 ;; Defined at:
  9058 ;;		line 66 in file "serial.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;		None
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      unsigned char 
  9065 ;; Registers used:
  9066 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9076 ;;Total ram usage:        2 bytes
  9077 ;; Hardware stack levels used: 1
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		_HighISR
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text50
  9086   003D4A                     __ptext50:
  9087                           	callstack 0
  9088   003D4A                     _getCharFromTxBuf:
  9089                           	callstack 21
  9090   003D4A                     
  9091                           ;serial.c: 67:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9092   003D4A  0E3B               	movlw	59
  9093   003D4C  6450               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9094   003D4E  EFAB  F01E         	goto	i2u419_41
  9095   003D52  EFAD  F01E         	goto	i2u419_40
  9096   003D56                     i2u419_41:
  9097   003D56  EFAF  F01E         	goto	i2l3974
  9098   003D5A                     i2u419_40:
  9099   003D5A  0E00               	movlw	0
  9100   003D5C  6E50               	movwf	_TxBufReadCnt^0,c	;volatile
  9101   003D5E                     i2l3974:
  9102                           
  9103                           ;serial.c: 68:     return EUSART4TXbuf[TxBufReadCnt++];
  9104   003D5E  2A50               	incf	_TxBufReadCnt^0,f,c	;volatile
  9105   003D60  0450               	decf	_TxBufReadCnt^0,w,c	;volatile
  9106   003D62  6E01               	movwf	??_getCharFromTxBuf^0,c
  9107   003D64  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9108   003D66  0E00               	movlw	low _EUSART4TXbuf
  9109   003D68  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9110   003D6A  6ED9               	movwf	fsr2l,c
  9111   003D6C  0E01               	movlw	high _EUSART4TXbuf
  9112   003D6E  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9113   003D70  6EDA               	movwf	fsr2h,c
  9114   003D72  50DF               	movf	indf2,w,c
  9115   003D74  0012               	return		;funcret
  9116   003D76                     __end_of_getCharFromTxBuf:
  9117                           	callstack 0
  9118                           
  9119                           	psect	rparam
  9120   000000                     
  9121                           	psect	temp
  9122   000054                     btemp:
  9123                           	callstack 0
  9124   000054                     	ds	1
  9125   000000                     int$flags	set	btemp
  9126   000000                     wtemp8	set	btemp+1
  9127   000000                     ttemp5	set	btemp+1
  9128   000000                     ttemp6	set	btemp+4
  9129   000000                     ttemp7	set	btemp+8
  9130                           
  9131                           	psect	idloc
  9132                           
  9133                           ;Config register IDLOC0 @ 0x200000
  9134                           ;	unspecified, using default values
  9135   200000                     	org	2097152
  9136   200000  0FFF               	dw	4095
  9137                           
  9138                           ;Config register IDLOC1 @ 0x200002
  9139                           ;	unspecified, using default values
  9140   200002                     	org	2097154
  9141   200002  0FFF               	dw	4095
  9142                           
  9143                           ;Config register IDLOC2 @ 0x200004
  9144                           ;	unspecified, using default values
  9145   200004                     	org	2097156
  9146   200004  0FFF               	dw	4095
  9147                           
  9148                           ;Config register IDLOC3 @ 0x200006
  9149                           ;	unspecified, using default values
  9150   200006                     	org	2097158
  9151   200006  0FFF               	dw	4095
  9152                           
  9153                           ;Config register IDLOC4 @ 0x200008
  9154                           ;	unspecified, using default values
  9155   200008                     	org	2097160
  9156   200008  0FFF               	dw	4095
  9157                           
  9158                           ;Config register IDLOC5 @ 0x20000A
  9159                           ;	unspecified, using default values
  9160   20000A                     	org	2097162
  9161   20000A  0FFF               	dw	4095
  9162                           
  9163                           ;Config register IDLOC6 @ 0x20000C
  9164                           ;	unspecified, using default values
  9165   20000C                     	org	2097164
  9166   20000C  0FFF               	dw	4095
  9167                           
  9168                           ;Config register IDLOC7 @ 0x20000E
  9169                           ;	unspecified, using default values
  9170   20000E                     	org	2097166
  9171   20000E  0FFF               	dw	4095
  9172                           
  9173                           	psect	config
  9174                           
  9175                           ;Config register CONFIG1L @ 0x300000
  9176                           ;	External Oscillator mode Selection bits
  9177                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9178                           ;	Power-up default value for COSC bits
  9179                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9180   300000                     	org	3145728
  9181   300000  AA                 	db	170
  9182                           
  9183                           ;Config register CONFIG1H @ 0x300001
  9184                           ;	unspecified, using default values
  9185                           ;	Clock Out Enable bit
  9186                           ;	CLKOUTEN = 0x1, unprogrammed default
  9187                           ;	Clock Switch Enable bit
  9188                           ;	CSWEN = 0x1, unprogrammed default
  9189                           ;	Fail-Safe Clock Monitor Enable bit
  9190                           ;	FCMEN = 0x1, unprogrammed default
  9191   300001                     	org	3145729
  9192   300001  FF                 	db	255
  9193                           
  9194                           ;Config register CONFIG2L @ 0x300002
  9195                           ;	unspecified, using default values
  9196                           ;	Master Clear Enable bit
  9197                           ;	MCLRE = 0x1, unprogrammed default
  9198                           ;	Power-up Timer Enable bit
  9199                           ;	PWRTE = 0x1, unprogrammed default
  9200                           ;	Low-power BOR enable bit
  9201                           ;	LPBOREN = 0x1, unprogrammed default
  9202                           ;	Brown-out Reset Enable bits
  9203                           ;	BOREN = 0x3, unprogrammed default
  9204   300002                     	org	3145730
  9205   300002  FF                 	db	255
  9206                           
  9207                           ;Config register CONFIG2H @ 0x300003
  9208                           ;	unspecified, using default values
  9209                           ;	Brown Out Reset Voltage selection bits
  9210                           ;	BORV = 0x3, unprogrammed default
  9211                           ;	ZCD Disable bit
  9212                           ;	ZCD = 0x1, unprogrammed default
  9213                           ;	PPSLOCK bit One-Way Set Enable bit
  9214                           ;	PPS1WAY = 0x1, unprogrammed default
  9215                           ;	Stack Full/Underflow Reset Enable bit
  9216                           ;	STVREN = 0x1, unprogrammed default
  9217                           ;	Debugger Enable bit
  9218                           ;	DEBUG = 0x1, unprogrammed default
  9219                           ;	Extended Instruction Set Enable bit
  9220                           ;	XINST = 0x1, unprogrammed default
  9221   300003                     	org	3145731
  9222   300003  FF                 	db	255
  9223                           
  9224                           ;Config register CONFIG3L @ 0x300004
  9225                           ;	WDT Period Select bits
  9226                           ;	WDTCPS = 0x1F, unprogrammed default
  9227                           ;	WDT operating mode
  9228                           ;	WDTE = OFF, WDT Disabled
  9229   300004                     	org	3145732
  9230   300004  9F                 	db	159
  9231                           
  9232                           ;Config register CONFIG3H @ 0x300005
  9233                           ;	unspecified, using default values
  9234                           ;	WDT Window Select bits
  9235                           ;	WDTCWS = 0x7, unprogrammed default
  9236                           ;	WDT input clock selector
  9237                           ;	WDTCCS = 0x7, unprogrammed default
  9238   300005                     	org	3145733
  9239   300005  FF                 	db	255
  9240                           
  9241                           ;Config register CONFIG4L @ 0x300006
  9242                           ;	unspecified, using default values
  9243                           ;	Write Protection Block 0
  9244                           ;	WRT0 = 0x1, unprogrammed default
  9245                           ;	Write Protection Block 1
  9246                           ;	WRT1 = 0x1, unprogrammed default
  9247                           ;	Write Protection Block 2
  9248                           ;	WRT2 = 0x1, unprogrammed default
  9249                           ;	Write Protection Block 3
  9250                           ;	WRT3 = 0x1, unprogrammed default
  9251                           ;	Write Protection Block 3
  9252                           ;	WRT4 = 0x1, unprogrammed default
  9253                           ;	Write Protection Block 3
  9254                           ;	WRT5 = 0x1, unprogrammed default
  9255                           ;	Write Protection Block 3
  9256                           ;	WRT6 = 0x1, unprogrammed default
  9257                           ;	Write Protection Block 3
  9258                           ;	WRT7 = 0x1, unprogrammed default
  9259   300006                     	org	3145734
  9260   300006  FF                 	db	255
  9261                           
  9262                           ;Config register CONFIG4H @ 0x300007
  9263                           ;	unspecified, using default values
  9264                           ;	Configuration Register Write Protection bit
  9265                           ;	WRTC = 0x1, unprogrammed default
  9266                           ;	Boot Block Write Protection bit
  9267                           ;	WRTB = 0x1, unprogrammed default
  9268                           ;	Data EEPROM Write Protection bit
  9269                           ;	WRTD = 0x1, unprogrammed default
  9270                           ;	Scanner Enable bit
  9271                           ;	SCANE = 0x1, unprogrammed default
  9272                           ;	Low Voltage Programming Enable bit
  9273                           ;	LVP = 0x1, unprogrammed default
  9274   300007                     	org	3145735
  9275   300007  FF                 	db	255
  9276                           
  9277                           ;Config register CONFIG5L @ 0x300008
  9278                           ;	unspecified, using default values
  9279                           ;	UserNVM Program Memory Code Protection bit
  9280                           ;	CP = 0x1, unprogrammed default
  9281                           ;	DataNVM Memory Code Protection bit
  9282                           ;	CPD = 0x1, unprogrammed default
  9283   300008                     	org	3145736
  9284   300008  FF                 	db	255
  9285                           
  9286                           ;Config register CONFIG5H @ 0x300009
  9287                           ;	unspecified, using default values
  9288   300009                     	org	3145737
  9289   300009  FF                 	db	255
  9290                           
  9291                           ;Config register CONFIG6L @ 0x30000A
  9292                           ;	unspecified, using default values
  9293                           ;	Table Read Protection Block 0
  9294                           ;	EBTR0 = 0x1, unprogrammed default
  9295                           ;	Table Read Protection Block 1
  9296                           ;	EBTR1 = 0x1, unprogrammed default
  9297                           ;	Table Read Protection Block 2
  9298                           ;	EBTR2 = 0x1, unprogrammed default
  9299                           ;	Table Read Protection Block 3
  9300                           ;	EBTR3 = 0x1, unprogrammed default
  9301                           ;	Table Read Protection Block 4
  9302                           ;	EBTR4 = 0x1, unprogrammed default
  9303                           ;	Table Read Protection Block 5
  9304                           ;	EBTR5 = 0x1, unprogrammed default
  9305                           ;	Table Read Protection Block 6
  9306                           ;	EBTR6 = 0x1, unprogrammed default
  9307                           ;	Table Read Protection Block 7
  9308                           ;	EBTR7 = 0x1, unprogrammed default
  9309   30000A                     	org	3145738
  9310   30000A  FF                 	db	255
  9311                           
  9312                           ;Config register CONFIG6H @ 0x30000B
  9313                           ;	unspecified, using default values
  9314                           ;	Boot Block Table Read Protection bit
  9315                           ;	EBTRB = 0x1, unprogrammed default
  9316   30000B                     	org	3145739
  9317   30000B  FF                 	db	255
  9318                           tosu	equ	0xFFF
  9319                           tosh	equ	0xFFE
  9320                           tosl	equ	0xFFD
  9321                           stkptr	equ	0xFFC
  9322                           pclatu	equ	0xFFB
  9323                           pclath	equ	0xFFA
  9324                           pcl	equ	0xFF9
  9325                           tblptru	equ	0xFF8
  9326                           tblptrh	equ	0xFF7
  9327                           tblptrl	equ	0xFF6
  9328                           tablat	equ	0xFF5
  9329                           prodh	equ	0xFF4
  9330                           prodl	equ	0xFF3
  9331                           indf0	equ	0xFEF
  9332                           postinc0	equ	0xFEE
  9333                           postdec0	equ	0xFED
  9334                           preinc0	equ	0xFEC
  9335                           plusw0	equ	0xFEB
  9336                           fsr0h	equ	0xFEA
  9337                           fsr0l	equ	0xFE9
  9338                           wreg	equ	0xFE8
  9339                           indf1	equ	0xFE7
  9340                           postinc1	equ	0xFE6
  9341                           postdec1	equ	0xFE5
  9342                           preinc1	equ	0xFE4
  9343                           plusw1	equ	0xFE3
  9344                           fsr1h	equ	0xFE2
  9345                           fsr1l	equ	0xFE1
  9346                           bsr	equ	0xFE0
  9347                           indf2	equ	0xFDF
  9348                           postinc2	equ	0xFDE
  9349                           postdec2	equ	0xFDD
  9350                           preinc2	equ	0xFDC
  9351                           plusw2	equ	0xFDB
  9352                           fsr2h	equ	0xFDA
  9353                           fsr2l	equ	0xFD9
  9354                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        1
    BSS         201
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      83
    BANK0           160     92     111
    BANK1           256     50     226
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1432$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1348$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1348$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK1[50]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 16
		 -> rel(BANK1[16]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   41619
                                              0 BANK1     50    50      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                  _color_writetoaddr
                         _colour_rel
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   35003
                                             61 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34505
                                             74 COMRAM     2     2      0
                                             55 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34035
                                             66 COMRAM     8     2      6
                                             44 BANK0     11    11      0
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   26432
                                             49 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     497
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1526
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5612
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3343
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     870
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          20    16      4    4574
                                             29 COMRAM    20    16      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     716
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     453
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _color_writetoaddr                                    2     1      1     453
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     186
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_writetoaddr
   _colour_rel
     ___fldiv
     ___xxtofl
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     32      E2       7       88.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      6F       5       69.4%
BITBIGSFRhlhlll     8F      0       0      39        0.0%
BITBIGSFRhhlh       6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      53       1       88.3%
BITBIGSFRlllhh      36      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      42        0.0%
BITBIGSFRlllhll     2A      0       0      45        0.0%
BITBIGSFRlllll      26      0       0      50        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllhll      D      0       0      48        0.0%
BITBIGSFRlllhlh      C      0       0      44        0.0%
BITBIGSFRlllhll      9      0       0      46        0.0%
BITBIGSFRhllll       8      0       0      40        0.0%
BITBIGSFRllllh       6      0       0      49        0.0%
BITBIGSFRhlhllh      2      0       0      37        0.0%
BITBIGSFRhlhllh      2      0       0      38        0.0%
BITBIGSFRhlhh        2      0       0      35        0.0%
BITBIGSFRhlhlh       1      0       0      36        0.0%
BITBIGSFRlllhll      1      0       0      47        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlh          1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A4      51        0.0%
DATA                 0      0     1A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 01 13:05:12 2023

               _color_read_Red 3A2E                   ___fldiv@aexp 001D                   ___fldiv@bexp 001C  
               _color_read_lum 39DE                   ___fldiv@sign 0015                _color_read_Blue 3ACE  
                           l21 3D18                             l30 3A7C                             l24 3E64  
                           l33 3ACC                             l42 2F7C                             l27 3A2C  
                           l36 3B1C                             l39 38E6                             l73 3DC8  
                           l82 3ED2                             l91 3EB4                             l76 3E1E  
                           l85 3EBE                             l94 3C2C                             l79 3E44  
                           l88 3EC8               _color_read_Green 3A7E                readColours@vals 0010  
            ??_Interrupts_init 0005                            l133 3E82                            l217 3EA8  
                          l170 3DF2                            l173 3E9A                            l422 3268  
                          l184 3D9E                            l409 3104                            l179 3D48  
                          l560 342C                            l554 37A8                            l565 3472  
                          l823 1A16                            l840 1B30                            l832 1CE6  
                          l824 1A04                            l592 336E                            l913 2110  
                          l569 3CE4                            l825 19CA                            l850 1BEE  
                          l916 1FA2                            l909 1DAC                            l950 2C96  
                          l926 20D2                            l918 201A                            l919 2008  
                          l953 2DF2                            l849 1C00                            l865 3B62  
                          l890 23C8                            l882 22CE                            l891 23B6  
                          l964 2D8A                            l877 24AA                            l957 2D2E  
                          l973 398C                            l879 230A                            l888 2350  
                          _abs 3C6E                            _pad 37AA                            _rel 01A0  
                          wreg 000FE8                   ___flmul@aexp 0012                   ___flmul@bexp 0017  
                 ___flmul@sign 0011                   ___flmul@temp 001C                   ___flmul@prod 0018  
                 ___fltol@exp1 000E                           l1005 37CC                           l1014 283C  
                         l1016 2844                           l1009 3822                           l1017 288A  
                         l1042 11BE                           ?_abs 0017                           l1124 3CA4  
                         l1028 2A2C                           l1044 1004                           l1133 2C3E  
                         l1109 393A                           l1127 3CAC                           l1119 3570  
                         l1039 1826                           l1136 2B82                           l1144 3878  
                         l1072 1608                           l1153 39DC                           l1147 3888  
                         l1165 363A                           l1173 3BEA                           l1182 3BA6  
                         l1087 27B0                           l1176 3ED4                           l5000 0E2C  
                         l4210 1854                           l4202 1828                           l5010 0E78  
                         l5002 0E32                           l4300 1A02                           l4220 188E  
                         l4212 1864                           l4204 1834                           l5100 120A  
                         l5020 0EB6                           l5012 0E82                           l5004 0E42  
                         l4310 1A58                           l4302 1A24                           l4230 18BC  
                         l4222 1894                           l4214 1874                           l4206 1842  
                         l5110 1252                           l5102 1218                           l5030 0EFE  
                         l5022 0EBE                           l5014 0E8A                           l5006 0E50  
                         l4400 1CD6                           l4320 1A92                           l4312 1A66  
                         l4304 1A34                           l4240 18F0                           l4232 18BE  
                         l4224 18A6                           l4216 1876                           l4208 1844  
                         l5200 174E                           l5120 1366                           l5112 1262  
                         l5104 1230                           l5032 0F04                           l5016 0E9A  
                         l5024 0EC2                           l5008 0E54                           l4410 3BCA  
                         l4330 1AFE                           l4322 1A94                           l4314 1A74  
                         l4250 192C                           l4234 18CE                           l4242 18F8  
                         l4226 18A8                           l4218 187E                           l5210 17C0  
                         l5202 176A                           l5130 1406                           l5114 1276  
                         l5122 136C                           l5106 1242                           l5050 0F90  
                         l5034 0F0C                           l5026 0EE8                           l5042 0F4E  
                         l5018 0EAA                           l4500 213E                           l4420 2FB4  
                         l4412 2F7E                           l4404 3BA8                           l4340 1B56  
                         l4332 1B00                           l4324 1A9E                           l4316 1A80  
                         l4308 1A48                           l4260 1940                           l4252 1930  
                         l4244 1908                           l4236 18DE                           l4228 18AE  
                         l5212 17D8                           l5204 1772                           l5140 14E2  
                         l5132 1438                           l5124 138A                           l5116 12DA  
                         l5108 124A                           l5052 0F98                           l5044 0F74  
                         l5060 0FB4                           l5036 0F24                           l5028 0EFA  
                         l5222 3ECA                           l5230 3EC0                           l4510 2178  
                         l4502 214E                           l4430 3010                           l4422 2FC2  
                         l4414 2F82                           l4190 3584                           l4406 3BB4  
                         l4350 1B84                           l4334 1B10                           l4318 1A84  
                         l4326 1AA4                           l4270 1954                           l4262 1944  
                         l4254 1934                           l4246 191A                           l4238 18EE  
                         l5214 17E8                           l5206 1782                           l5150 1544  
                         l5142 14E8                           l5134 1448                           l5126 13BE  
                         l5118 1332                           l5070 104E                           l5062 0FCE  
                         l5046 0F86                           l5038 0F2E                           l5310 2784  
                         l5224 3ECE                           l5232 3EC4                           l4600 23E4  
                         l4520 21A4                           l4512 217E                           l4504 215E  
                         l5400 2CE4                           l5240 3BF2                           l4440 307A  
                         l4432 3018                           l4424 2FE2                           l4416 2F90  
                         l4192 3596                           l4408 3BC6                           l4352 1B92  
                         l4344 1B6A                           l4360 1BB0                           l4328 1ACA  
                         l4336 1B20                           l4272 1958                           l4264 1948  
                         l4256 1938                           l4248 1928                           l4280 1968  
                         l5216 17FE                           l5208 17B2                           l5160 15DE  
                         l5152 154C                           l5144 151C                           l5136 1458  
                         l5128 13F0                           l5080 1144                           l5072 108C  
                         l5048 0F8A                           l5304 2742                           l5226 3EAC  
                         l4610 2450                           l4602 23F2                           l4530 21DE  
                         l4522 21B4                           l4514 2184                           l4506 2160  
                         l5410 2D6C                           l5402 2D16                           l5242 3BFA  
                         l5234 3EB6                           l4450 30C4                           l4442 309A  
                         l4434 302C                           l4426 2FE6                           l4418 2FB0  
                         l4194 35A0                           l4354 1B9A                           l4346 1B74  
                         l4338 1B46                           l4362 1BBE                           l4290 19D8  
                         l4282 196C                           l4274 195C                           l4266 194C  
                         l4258 193C                           l5218 1806                           l5170 163C  
                         l5162 15FE                           l5154 1552                           l5146 1530  
                         l5138 148C                           l5090 11D4                           l5082 114C  
                         l5074 10BE                           l5066 1014                           l5306 2772  
                         l5340 3DB2                           l5228 3EB0                           l4620 249E  
                         l4612 246A                           l4604 241C                           l4532 21F4  
                         l4524 21C4                           l4516 2192                           l4508 2168  
                         l5420 2DC2                           l5412 2D7A                           l5404 2D18  
                         l5244 3C02                           l5236 3EBA                           l4452 30E4  
                         l4444 309C                           l4436 303A                           l4428 2FF2  
                         l4460 3118                           l4196 35BE                           l4188 3572  
                         l4700 1ED4                           l4372 1C10                           l4380 1C66  
                         l4364 1BC2                           l4356 1B9E                           l4348 1B82  
                         l4292 19E4                           l4284 1996                           l4276 1960  
                         l4268 1950                           l5180 1664                           l5172 1642  
                         l5164 161A                           l5156 155A                           l5148 1534  
                         l5092 11E0                           l5076 10FC                           l5068 101A  
                         l5260 24F4                           l5252 24AC                           l5342 3DB4  
                         l5334 3DA0                           l4622 24A0                           l4614 2486  
                         l4606 2420                           l4550 2248                           l4534 2204  
                         l4542 2224                           l4526 21C6                           l4518 2194  
                         l5422 2DD2                           l5414 2D98                           l5406 2D24  
                         l5246 3C28                           l5238 3BEE                           l5350 3A24  
                         l4446 30AE                           l4438 304C                           l4470 3188  
                         l4462 3138                           l4198 35F4                           l4710 1F6A  
                         l4702 1EE0                           l4630 1CE8                           l4390 1CB8  
                         l4382 1C76                           l4374 1C1C                           l4366 1BD0  
                         l4358 1BAE                           l4294 19E8                           l4286 19B2  
                         l4278 1964                           l5190 1698                           l5174 164A  
                         l5166 1628                           l5182 166A                           l5158 1566  
                         l5094 11EA                           l5078 1110                           l5086 118C  
                         l5262 2504                           l5254 24D4                           l5430 38E8  
                         l5510 364C                           l5502 363C                           ?_pad 0015  
                         l5344 3DB6                           l5336 3DAA                           l5440 3CE6  
                         l4616 248A                           l4608 243A                           l4560 229A  
                         l4552 2262                           l4544 2234                           l4536 220C  
                         l4528 21CE                           l5424 2DE0                           l5416 2D9A  
                         l5408 2D60                           l5248 3C2A                           l5360 3A7E  
                         l4448 30B4                           l4480 3200                           l4472 3190  
                         l4464 313C                           l4456 3106                           l4800 3470  
                         l4720 1FC0                           l4712 1F88                           l4704 1EFC  
                         l4640 1D24                           l4632 1CF4                           l4392 1CBE  
                         l4384 1C86                           l4376 1C2A                           l4368 1BE6  
                         l4296 19F6                           l4288 19C2                           l5192 16F0  
                         l5184 167C                           l5176 165A                           l5168 1638  
                         l5096 11F2                           l5088 11C6                           l5280 2600  
                         l5272 25CA                           l5264 2524                           l5256 24E2  
                         l5432 38F4                           l5520 365E                           l5512 3656  
                         l5504 3640                           l5338 3DB0                           l5346 3E48  
                         l5442 3CEA                           l4618 2498                           l4570 22F6  
                         l4562 22AA                           l4554 2272                           l4546 2234  
                         l4538 2210                           l5426 2DE2                           l5418 2D9E  
                         l5362 3AC4                           l5354 3A2E                           l5450 388A  
                         l4482 3212                           l4474 31A4                           l4466 314A  
                         l4458 310A                           l4730 202A                           l4722 1FC4  
                         l4714 1F92                           l4706 1F26                           l4650 1D56  
                         l4642 1D34                           l4634 1D02                           l4394 1CC0  
                         l4386 1CA6                           l4378 1C64                           l4298 19F8  
                         l5194 1724                           l5186 168E                           l5178 165E  
                         l5098 11F8                           l5290 2692                           l5274 25DA  
                         l5266 2544                           l5258 24F0                           l5434 3910  
                         l5530 3684                           l5522 3660                           l5514 3658  
                         l5506 3644                           l5372 3DCC                           l5444 3CF4  
                         l4580 2336                           l4572 22F8                           l4564 22BE  
                         l4556 2282                           l4492 2112                           l5452 2DF4  
                         l5460 3E7C                           l5356 3A74                           l5348 39DE  
                         l5380 3E84                           l4476 31B2                           l4484 3218  
                         l4468 316A                           l4740 208C                           l4732 2036  
                         l4724 1FD2                           l4716 1FA0                           l4708 1F5C  
                         l4660 1D96                           l4652 1D64                           l4644 1D3A  
                         l4636 1D04                           l4804 3CAE                           l4396 1CC6  
                         l4388 1CAA                           l4820 32BE                           l4812 326A  
                         l4900 3824                           l5196 172C                           l5188 1692  
                         l5276 25F0                           l5284 2608                           l5268 259A  
                         l5436 3930                           l5532 36D2                           l5524 3662  
                         l5516 365A                           l5508 3648                           l5374 3DDC  
                         l5470 3D2C                           l5446 3D04                           l4590 2372  
                         l4582 2340                           l4574 2308                           l4566 22CC  
                         l4558 2292                           l4494 211E                           l5390 2CA6  
                         l5462 3E7E                           l5454 3E66                           l5366 3ACE  
                         l4486 3228                           l4478 31E0                           l4750 20F4  
                         l4742 20A0                           l4734 2044                           l4726 2000  
                         l4718 1FB2                           l4670 1DE0                           l4662 1D9C  
                         l4654 1D66                           l4646 1D4A                           l4638 1D14  
                         l4806 3CC4                           l4398 1CD4                           l4822 32C0  
                         l4814 3280                           l4910 2AB8                           l4902 3842  
                         l5198 1730                           l5630 26DA                           l5294 26C6  
                         l5278 25F8                           l5286 263A                           l5534 36E2  
                         l5526 3664                           l5518 365C                           l5376 3DE0  
                         l5472 3D30                           l5448 3D0E                           l4592 2380  
                         l4584 234E                           l4576 231A                           l4568 22D8  
                         l4496 212C                           l5392 2CBC                           l5384 2C42  
                         l5464 3E80                           l5456 3E70                           l5368 3B14  
                         l5480 3D98                           l4488 3248                           l4752 20F6  
                         l4744 20BA                           l4736 206E                           l4680 1E30  
                         l4672 1DEC                           l4664 1DBC                           l4656 1D76  
                         l4648 1D50                           l4808 3CD4                           l4760 3B1E  
                         l4824 32D0                           l4912 2AC6                           l4920 2BA6  
                         l4904 2A2E                           l5632 2764                           l5296 26F0  
                         l5288 265E                           l5536 36E6                           l5528 3670  
                         l5482 3E9C                           l5378 3DF0                           l5466 3D1A  
                         l4594 23AE                           l4578 2330                           l4586 2360  
                         l4498 212E                           l5386 2C52                           l5458 3E72  
                         l5474 3D76                           l4770 373E                           l4746 20D6  
                         l4754 20FC                           l4738 2072                           l4690 1E72  
                         l4682 1E3C                           l4674 1DF6                           l4666 1DCC  
                         l4658 1D86                           l4762 3B2E                           l4850 334E  
                         l4834 32FA                           l4826 32D4                           l4818 3294  
                         l4922 2BE2                           l4906 2A4E                           l5298 2710  
                         l5490 395E                           l5468 3D1E                           l4588 236E  
                         l5396 2CD0                           l5388 2C60                           l5476 3D8A  
                         l4860 37C4                           l4772 376C                           l4756 2100  
                         l4748 20E6                           l4692 1E7E                           l4684 1E48  
                         l4676 1E0C                           l4852 335E                           l4844 3322  
                         l4836 3304                           l4828 32E2                           l4924 2BF6  
                         l4916 2B36                           l4908 2AA4                           l4940 39BE  
                         l4932 398E                           l5628 261C                           l5492 397A  
                         l5484 393C                           l4598 23D8                           l5398 2CD8  
                         l5478 3D8E                           l4870 3C6E                           l4862 37D8  
                         l4950 27D2                           l4774 377C                           l4766 3700  
                         l4790 33EC                           l4782 3370                           l4694 1E8E  
                         l4686 1E56                           l4678 1E18                           l4846 332E  
                         l4838 330E                           l4926 2C1E                           l4918 2B72  
                         l4934 39A2                           l4942 39C2                           l5486 394E  
                         l4944 3E1E                           l4872 3C88                           l4864 37EC  
                         l4856 37AA                           l4960 284C                           l4952 27E6  
                         l4776 37A0                           l4768 372E                           l4792 33FA  
                         l4784 339E                           l4696 1EA8                           l4688 1E62  
                         l4848 333E                           l4880 34FA                           l4928 2C2E  
                         l4936 39AE                           l5488 3956                           l4946 3E2E  
                         l4866 37F0                           l4858 37B8                           l4970 2886  
                         l4962 285C                           l4954 27F6                           l4778 37A6  
                         l4794 340C                           l4786 33AE                           l4698 1EB8  
                         l4882 3506                           l4874 3474                           l4938 39B2  
                         l4868 380E                           l4980 292A                           l4972 2892  
                         l4964 2862                           l4956 2816                           l4948 27B2  
                         l4796 341A                           l4788 33DC                           l4892 3568  
                         l4876 3494                           l4990 29E6                           l4982 2930  
                         l4974 289C                           l4966 2872                           l4958 2830  
                         l4798 346A                           l4878 34D2                           l4886 3512  
                         l4992 29F6                           l4976 28A2                           l4984 2994  
                         l4968 287E                           l4888 3524                           l4896 3B64  
                         l4994 29FC                           l4986 29AE                           l4978 2924  
                         l4898 3B74                           l4996 2A0C                           l4988 29CC  
                         STR_1 0E01                           STR_2 0E22                           STR_5 0E26  
                 _BAUD4CONbits 000EE9                           u5000 2380                           u5001 237C  
                         u5010 23AE                           u5011 23AA                           u5020 23C4  
                         u4300 35BE                           u5100 1D24                           u5021 23C0  
                         u4301 35BA                           u5101 1D20                           u5030 23D8  
                         u4310 35F4                           u5110 1D64                           u5031 23D4  
                         u4311 35F0                           u5111 1D60                           u5040 23F2  
                         u5200 2000                           u5120 1D76                           u4400 1928  
                         u4320 1842                           u6000 1530                           u5041 23EE  
                         u5201 1FFC                           u5121 1D72                           u4401 1924  
                         u4321 183E                           u6001 152C                           u5050 243A  
                         u5210 2016                           u5130 1D86                           u4410 1996  
                         u4330 1854                           u6010 15DE                           u5051 2436  
                         u5211 2012                           u5131 1D82                           u4411 1992  
                         u4331 1850                           u6011 15DA                           u5060 246A  
                         u6100 3C16                           u5300 339E                           u5220 202A  
                         u5140 1DBC                           u4500 1A74                           u4420 19AE  
                         u4340 1864                           u6020 161A                           u5061 2466  
                         u6101 3C0E                           u5301 339A                           u5221 2026  
                         u5141 1DB8                           u4501 1A70                           u4421 19A8  
                         u4341 1860                           u6021 1616                           u5070 2498  
                         u5310 33DC                           u5230 2044                           u5150 1DCC  
                         u4510 1A92                           u4430 19B0                           u4350 18A6  
                         u6030 1628                           u5071 2494                           u5311 33D8  
                         u5231 2040                           u5151 1DC8                           u4511 1A8E  
                         u4351 18A2                           u6031 1624                           u6200 2C60  
                         u4280 3584                           u5320 33FA                           u5240 208C  
                         u5160 1F46                           u5080 1D02                           u4600 1BD0  
                         u4520 1ACA                           u4440 19D8                           u4360 18BC  
                         u5400 331E                           u6040 167C                           u6120 24D4  
                         u6201 2C5C                           u4281 3580                           u5321 33F6  
                         u5241 2088                           u5081 1CFE                           u4601 1BCC  
                         u4521 1AC6                           u4441 19D4                           u4361 18B8  
                         u5401 331A                           u6041 1678                           u6121 24D0  
                         u6210 2CBC                           u4290 3596                           u5330 341A  
                         u5250 20BA                           u5170 1FA0                           u5090 1D14  
                         u4610 1BE6                           u4530 1B10                           u4450 19F6  
                         u4370 18CE                           u5410 333E                           u6050 174E  
                         u6130 2524                           u6211 2CB8                           u4291 3592  
                         u5331 3416                           u5251 20B6                           u5171 1F9C  
                         u5091 1D10                           u4611 1BE2                           u4531 1B0C  
                         u4451 19F2                           u4371 18CA                           u5411 333A  
                         u6051 174A                           u6131 2520                           u6300 3D48  
                         u6220 2D12                           u5340 346A                           u5260 20F4  
                         u5180 1FC0                           u4700 1CD4                           u4620 1BFC  
                         u4540 1B46                           u4460 1A16                           u4380 18DE  
                         u5420 334E                           u6060 176A                           u6140 2544  
                         u6301 3D44                           u6221 2D0E                           u5341 3466  
                         u5261 20F0                           u5181 1FBC                           u5165 1F3C  
                         u4701 1CD0                           u4621 1BF8                           u4541 1B42  
                         u4461 1A12                           u4381 18DA                           u5421 334A  
                         u6061 1766                           u6141 2540                           u6230 2D5C  
                         u6118 3C18                           u6310 3D8A                           u4710 3BEA  
                         u5430 37B8                           u5270 372E                           u5190 1FD2  
                         u5350 3CC4                           u4630 1C10                           u4550 1B56  
                         u4470 1A24                           u4390 191A                           u5510 355E  
                         u6070 17D2                           u6150 265A                           u6231 2D58  
                         u6311 3D86                           u4711 3BE6                           u5431 37B4  
                         u5271 372A                           u5191 1FCE                           u5351 3CC0  
                         u4631 1C0C                           u4551 1B52                           u4471 1A20  
                         u4391 1916                           u5511 3558                           u6071 17CC  
                         u6151 2656                           u6160 3DDC                           u6240 2D7A  
                         u4720 2F90                           u4800 314A                           u5440 380E  
                         u5280 376C                           u4640 1C2A                           u4560 1B82  
                         u4480 1A34                           u5360 3280                           u5520 3560  
                         u5600 2B56                           u6080 17D4                           u6161 3DD8  
                         u6241 2D76                           u4721 2F8C                           u4801 3146  
                         u5441 380A                           u5281 3768                           u4641 1C26  
                         u4561 1B7E                           u4481 1A30                           u5361 327C  
                         u5505 3536                           u6250 2D8A                           u6170 3E98  
                         u4730 2FC2                           u4810 3188                           u5450 3C88  
                         u5290 37A0                           u4650 1C64                           u4570 1B92  
                         u4490 1A66                           u5370 32B4                           u5610 2B72  
                         u5530 3BA6                           u6090 17E8                           u6251 2D86  
                         u6171 3E92                           u4731 2FBE                           u4811 3184  
                         u5451 3C84                           u5291 379C                           u4651 1C60  
                         u4571 1B8E                           u4491 1A62                           u5611 2B6E  
                         u5531 3BA2                           u6091 17E4                           u4900 21B4  
                         u6260 2D98                           u6180 3E9A                           u4820 31B2  
                         u5700 27F6                           u4660 1C76                           u4580 1BAE  
                         u5380 32E2                           u5460 34B4                           u5620 2BC6  
                         u5540 3842                           u6340 36F8                           u4901 21B0  
                         u6261 2D94                           u4741 2FEC                           u4821 31AE  
                         u5701 27F2                           u4661 1C72                           u4581 1BAA  
                         u5381 32DE                           u5605 2B4C                           u5541 383E  
                         u6341 36F4                           u4910 21F4                           u6270 2DD2  
                         u6190 2C52                           u4750 3010                           u4830 31E0  
                         u5710 2830                           u4670 1C86                           u4590 1BBE  
                         u5390 32F6                           u5470 34D2                           u5630 2BE2  
                         u5550 2A76                           u4911 21F0                           u6271 2DCE  
                         u6191 2C4E                           u4751 300C                           u4831 31DC  
                         u5711 282C                           u4671 1C82                           u4591 1BBA  
                         u5391 32F2                           u5375 32AA                           u5471 34CE  
                         u5631 2BDE                           u4920 2234                           u6280 2DE0  
                         u4760 303A                           u4840 3228                           u5720 285C  
                         u4680 1CA6                           u5480 34FA                           u5640 2C1E  
                         u5560 2AA4                           u5800 0EAA                           u4921 2230  
                         u6281 2DDC                           u4761 3036                           u4841 3224  
                         u5721 2858                           u4681 1CA2                           u5481 34F6  
                         u5465 34AA                           u5641 2C1A                           u5625 2BBC  
                         u5561 2AA0                           u5801 0EA6                           u4930 22AA  
                         u4850 212C                           u4770 307A                           u5730 2872  
                         u4690 1CB8                           u5490 3524                           u5570 2AC6  
                         u5650 39DC                           u5810 0EE8                           u6290 3930  
                         u4931 22A6                           u4851 2128                           u4771 3076  
                         u5731 286E                           u4691 1CB4                           u5491 3520  
                         u5571 2AC2                           u5555 2A6C                           u5651 39D8  
                         u5811 0EE4                           u6291 392C                           u5660 3E2E  
                         u4940 22CC                           u4860 213E                           u4780 30C4  
                         u5740 29AE                           u5900 11BE                           u5820 0EFA  
                         u5661 3E2A                           u6357 3CFA                           u4941 22C8  
                         u4861 213A                           u4781 30C0                           u5741 29AA  
                         u5901 11BA                           u5821 0EF6                           u5670 3E44  
                         u4950 22F6                           u4870 214E                           u4790 3118  
                         u5750 29CC                           u5590 2B32                           u5910 11D4  
                         u5830 0F74                           u5671 3E40                           u4951 22F2  
                         u4871 214A                           u4791 3114                           u5751 29C8  
                         u5591 2B2E                           u5911 11D0                           u5831 0F70  
                         u4960 231A                           u4880 2192                           u5760 29E6  
                         u5680 27E2                           u5920 120A                           u5840 0F86  
                         u4961 2316                           u4881 218E                           u5761 29E2  
                         u5681 27DC                           u5585 2ADA                           u5921 1206  
                         u5841 0F82                           u4970 2330                           u4890 21A4  
                         u5770 29F6                           u5690 27E4                           u5586 2AE4  
                         u5930 1218                           u5850 1000                           u4971 232C  
                         u4891 21A0                           u5771 29F2                           u5587 2AF4  
                         u5931 1214                           u5851 0FFC                           u4980 234E  
                         u5940 1242                           u5860 108C                           u5780 0E50  
                         u4981 234A                           u5941 123E                           u5861 1088  
                         u5781 0E4C                           u4990 236E                           u5950 138A  
                         u5870 10BE                           u5790 0E9A                           u4991 236A  
                         u5951 1386                           u5871 10BA                           u5791 0E96  
                         u5960 13F0                           u5880 10FC                           u5961 13EC  
                         u5881 10F8                           u5970 1438                           u5890 1188  
                         u5971 1434                           u5891 1184                           u5980 1448  
                         u5981 1444                           u5990 14E2                           u5991 14DE  
                         abs@a 0017                           _dbuf 0150                           _labs 3824  
                         _main 363C                           _dtoa 27B2                           _prec 004D  
                         _vals 00C6                           pad@i 001C                           pad@p 0019  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001E                           fsr2l 000FD9  
                         btemp 0054                  ___fpclassifyf 3474                           prodh 000FF4  
                         prodl 000FF3                           start 004A                ___fldiv@new_exp 0016  
       __end_of_color_read_Red 3A7E                __end_of_HighISR 004A         __end_of_color_read_lum 3A2E  
                 ___param_bank 000000                          ??_abs 0019                          ??_pad 001B  
                 ?_readColours 0010                  ___fltol@sign1 000D                __end_of___aodiv 3106  
                        ?_labs 0005                __end_of___fladd 1CE8                          ?_main 0001  
                        ?_dtoa 0020                __end_of___aomod 326A                __end_of___fldiv 24AC  
              __end_of___flneg 3CE6                __end_of___flmul 2112                __end_of___flsub 3B64  
              __end_of___fltol 3370                    colour_rel@B 002A                    colour_rel@G 0026  
                  colour_rel@L 002E                    colour_rel@R 0022                          i2l223 002A  
                        i2l225 003E                          i2l166 3D74                          i2l159 3E1C  
                 vfpfcnvrt@fmt 0045     __end_of_I2C_2_Master_Start 3ED4     __end_of_I2C_2_Master_Write 3EB6  
                        _flags 004F                          _fputc 3572                          _fputs 3BA8  
                        labs@a 0005                          pad@fp 0015                          _width 00C4  
                        _putch 3ED4                          dtoa@d 0022                          dtoa@i 0041  
                        dtoa@n 0038                          dtoa@p 0034                          dtoa@s 0040  
                        dtoa@w 0036                          tablat 000FF5                          ttemp5 0055  
                        ttemp6 0058                          ttemp7 005C                          status 000FD8  
                        wtemp8 0055                __end_of_sprintf 398E                 ?___fpclassifyf 0005  
      __end_of_color_read_Blue 3B1E          _I2C_2_Master_RepStart 3EB6             putCharToRxBuf@byte 0001  
              ?_color_read_Red 0009                ?_color_read_lum 0009                __initialization 3C2E  
                 __end_of_labs 388A                   __end_of_main 3700                   __end_of_dtoa 2A2E  
           putCharToTxBuf@byte 0005                         ??_labs 0009                         ??_main 004D  
                       ??_dtoa 002A                  __activetblptr 000003                         ?_fputc 0005  
                       ?_fputs 000E                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RD5PPS 000E6F                         _RD6PPS 000E70  
                       i2l4030 0038                         i2l4024 0012                         i2l4026 0022  
                       i2l3970 3D4A                         i2l3962 3DF6                         i2l3972 3D5A  
                       i2l3964 3E06                         i2l3974 3D5E                         i2l3966 3E0A  
                       i2l3968 3E1A                      ??_HighISR 0003       __end_of_color_click_init 3D1A  
                       _RX4PPS 000E15                         _TX4REG 000EE4               __end_of___xxtofl 2DF4  
                 vfprintf@cfmt 004B                         ___flge 3370               _getCharFromTxBuf 3D4A  
                       ___fleq 3700                      ??___aodiv 0015                      ??___fladd 000D  
                    ??___aomod 0015                      ??___fldiv 000D                      ??___flneg 0009  
                    ??___flmul 000D                      ??___flsub 0026                      ??___fltol 0009  
                       _efgtoa 0E2C                         _floorf 2A2E                         _memcpy 398E  
                       clear_0 3C46                         clear_1 3C52                         clear_2 3C5E  
                       isa$std 000001                         pad@buf 0017                         dtoa@fp 0020  
                       _strcpy 3B64                         fputc@c 0005              ?_TxBufferedString 0006  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
              ___fpclassifyf@e 000D                ___fpclassifyf@u 000F                ___fpclassifyf@x 0005  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 0008                         putch@c 0001  
             __end_of_vfprintf 393C                      ??_sprintf 004D                     ___flge@ff1 001E  
                   ___flge@ff2 0022                ??___fpclassifyf 0009                   ___xxtofl@arg 000F  
                 ___xxtofl@exp 000E                   ___xxtofl@val 0005                     ___fleq@ff1 0005  
                   ___fleq@ff2 0009          __end_of_isDataInTxBuf 3E9C                     __accesstop 0060  
      __end_of__initialization 3C64                     ___flneg@f1 0005       __end_of_color_read_Green 3ACE  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0005  
             ?_color_read_Blue 0009                _Interrupts_init 3E9C                 __pcstackCOMRAM 0001  
                 __pidataBANK0 3ED6                  __end_of_fputc 363C                  __end_of_fputs 3BEC  
                __end_of_putch 3ED6                        ??_fputc 0009                        ??_fputs 0012  
                      ??_putch 0005                     __pbssBANK0 00BC                     __pbssBANK1 0100  
            _color_writetoaddr 3E46                        ?___flge 001E                        ?___fleq 0005  
           ?_color_writetoaddr 0007                        ?_efgtoa 0032                        ?_floorf 001E  
                      ?_memcpy 0005            ??_color_writetoaddr 0008                        ?_strcpy 0005  
                colour_rel@rel 0020                      ?___xxtofl 0005                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _colour_rel 2DF4        __end_of_Interrupts_init 3EAA         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008               ??_color_read_lum 000B  
    __end_of_color_writetoaddr 3E66             _I2C_2_Master_Start 3ECA                     _initUSART4 3E66  
           _I2C_2_Master_Write 3EAA                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E                        ___aodiv 2F7E                        ___fladd 1828  
                      ___aomod 3106                        ___fldiv 2112                        ___flneg 3CAE  
                      ___flmul 1CE8                        ___flsub 3B1E                        ___fltol 326A  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0097  
                 __psmallconst 0E00                        __pcinit 3C2E                        __ramtop 0E00  
                      __ptext0 363C                        __ptext1 393C                        __ptext2 38E8  
                      __ptext3 24AC                        __ptext4 0E2C                        __ptext5 3B64  
                      __ptext6 398E                        __ptext7 3824                        __ptext8 2A2E  
                      __ptext9 3474                     ??___xxtofl 0009                        efgtoa@c 0038  
                      efgtoa@d 006B                        efgtoa@e 006F                        efgtoa@f 0034  
                      efgtoa@g 0082                        efgtoa@h 0079                        efgtoa@i 0077  
                      efgtoa@l 007D                        efgtoa@m 006D                        efgtoa@n 0086  
                      efgtoa@p 0062                        efgtoa@t 0064                        efgtoa@u 0088  
                      efgtoa@w 0071                  _RxBufWriteCnt 0053       __end_of_getCharFromTxBuf 3D76  
            color_read_lum@tmp 000E                        main@buf 01B0                        _sprintf 393C  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 3C64  
            __end_of_sendTxBuf 3DA0                        floorf@e 002C                        floorf@m 0028  
                      floorf@u 002E                        floorf@x 001E                        memcpy@d 000C  
                      memcpy@n 0009                        memcpy@s 000E                        fputc@fp 0007  
                      fputs@fp 0010              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 27B2                     efgtoa@mode 0069                     efgtoa@sign 0081  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 008C                     ??_vfprintf 004B  
                      strcpy@d 000B                        strcpy@s 0009                    ___fladd@grs 0014  
                ___xxtofl@sign 000D                      _TRISAbits 000F81                      _TRISDbits 000F84  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 0018  
                  ___fldiv@rem 0011       color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006  
                  ?_colour_rel 001E               ?_Interrupts_init 0001                    ___flmul@grs 0013  
                 _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100              ?_color_read_Green 0009  
                  ?_initUSART4 0001             ??_color_read_Green 000B                 __end_of___flge 3474  
               __end_of___fleq 37AA                    vfpfcnvrt@ap 0047                    vfpfcnvrt@cp 0095  
                  vfpfcnvrt@fp 0043                 __end_of_efgtoa 1828                 __end_of_floorf 2C40  
               __end_of_memcpy 39DE                     floorf@F526 00BC                 __end_of_strcpy 3BA8  
          start_initialization 3C2E                    __end_of_abs 3CAE                    __end_of_pad 3824  
                _TxBufWriteCnt 0051          __end_of___fpclassifyf 3572            color_read_Green@tmp 000E  
                  vfprintf@fmt 0099                       ??___flge 0026                       ??___fleq 000D  
                ??_readColours 0012                       ??_efgtoa 0039                 _putCharToRxBuf 3DF4  
               _putCharToTxBuf 3DCA                    __pdataBANK0 00CE                       ??_floorf 0022  
                     ??_memcpy 000B                       ??_strcpy 0009                      ___fladd@a 0009  
                    ___fladd@b 0005                      ___fldiv@a 0009                      ___fldiv@b 0005  
                    ___flmul@a 0009                      ___flmul@b 0005                    __pbssCOMRAM 004D  
                    ___flsub@a 0022                      ___flsub@b 001E                  __pcstackBANK0 0060  
                __pcstackBANK1 01B0               ___aodiv@dividend 0005                       ?_HighISR 0001  
                  _efgtoa$1491 0066                      _dtoa$1460 0032         __end_of_putCharToRxBuf 3E1E  
       __end_of_putCharToTxBuf 3DF4                      __pintcode 0008                       ?___aodiv 0005  
                     ?___fladd 0005                       ?___aomod 0005                       ?___fldiv 0005  
             ___aodiv@quotient 0017                       ?___flneg 0005                       ?___flmul 0005  
                     ?___flsub 001E                       ?___fltol 0005         TxBufferedString@string 0006  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
          __end_of_readColours 38E8              _I2C_2_Master_Idle 3E1E              _I2C_2_Master_Init 3DA0  
            _I2C_2_Master_Read 3BEC              _I2C_2_Master_Stop 3EC0                   _RxBufReadCnt 0052  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                       ?_sprintf 009D              ?_getCharFromTxBuf 0001  
               colour_rel@vals 001E             ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0006                  _isDataInTxBuf 3E84                       _LATDbits 000F7C  
             _TxBufferedString 3D1A                       _LATGbits 000F7F                      _sendTxBuf 3D76  
                     _PIE2bits 000E2B                       _PIE4bits 000E2D                       i2u425_40 0022  
                     i2u425_41 001E                       i2u418_40 3E06                       i2u426_40 0038  
                     i2u418_41 3E02                       i2u426_41 0034                       i2u419_40 3D5A  
                     i2u419_41 3D56                       _PIR4bits 000E37                ?_putCharToRxBuf 0001  
              ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 24AC      __end_of_I2C_2_Master_Idle 3E46      __end_of_I2C_2_Master_Init 3DCA  
    __end_of_I2C_2_Master_Read 3C2E      __end_of_I2C_2_Master_Stop 3ECA                       _DataFlag 00CE  
  I2C_2_Master_Write@data_byte 0006              ??_color_read_Blue 000B                   _TxBufReadCnt 0050  
                   vfpfcnvrt@c 0094                   ??_colour_rel 0022                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 3EC0             color_read_Blue@tmp 000E                     ?_sendTxBuf 0001  
                 ??_initUSART4 0005                       __Hrparam 0000                      memcpy@tmp 000B  
                   vfprintf@ap 009B                       __Lrparam 0000                     vfprintf@fp 0097  
                  _readColours 388A                     ?_vfpfcnvrt 0043                ___aodiv@divisor 000D  
              ___aodiv@counter 0015             __end_of_colour_rel 2F7E                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00C0                     sprintf@fmt 009F                       ___xxtofl 2C40  
           __end_of_initUSART4 3E84                       __ptext10 326A                       __ptext11 3B1E  
                     __ptext20 3572                       __ptext12 1828                       __ptext21 3ED4  
                     __ptext13 3CAE                       __ptext30 3A7E                       __ptext22 3C6E  
                     __ptext14 1CE8                       __ptext31 3ACE                       __ptext23 3106  
                     __ptext15 3370                       __ptext40 3EAA                       __ptext32 3EB6  
                     __ptext24 2F7E                       __ptext16 3700                       __ptext41 3EC0  
                     __ptext33 3BEC                       __ptext25 3D76                       __ptext17 27B2  
                     __ptext50 3D4A                       __ptext42 3ECA                       __ptext34 3E66  
                     __ptext26 3E84                       __ptext18 37AA                       __ptext43 3E1E  
                     __ptext35 2DF4                       __ptext27 388A                       __ptext19 3BA8  
                     __ptext44 3DA0                       __ptext36 2C40                       __ptext28 39DE  
                     __ptext45 3D1A                       __ptext37 2112                       __ptext29 3A2E  
                     __ptext46 3DCA                       __ptext38 3CE6                       __ptext47 3E9C  
                     __ptext39 3E46                       __ptext49 3DF4                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0005                       efgtoa@fp 0032  
                     efgtoa@ne 0060                       efgtoa@pp 0068                       efgtoa@ou 0073  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 0054  
                     _vfprintf 38E8               ___aomod@dividend 0005                     _INTCONbits 000FF2  
                     memcpy@d1 0005                       memcpy@s1 0007                ??_isDataInTxBuf 0005  
                     intlevel2 0000                      sprintf@ap 00AF                    ??_sendTxBuf 0005  
                    strcpy@src 0007                    efgtoa@nmode 006A                ___aomod@divisor 000D  
                  ??_vfpfcnvrt 0049                ___aomod@counter 0015               _color_click_init 3CE6  
     __end_of_TxBufferedString 3D4A                       sprintf@f 00B1                       sprintf@s 009D  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                  ___fladd@signs 0011  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0016                   ___fladd@aexp 0012  
                 ___fladd@bexp 0013               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
                 ___aomod@sign 0016  
