

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 18:05:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95   000000                     
    96                           ; Generated 06/04/2022 GMT
    97                           ; 
    98                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130   000000                     
   131                           	psect	idataBANK0
   132   005C58                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _high_threshold
   136   005C58  03E8               	dw	1000
   137                           
   138                           ;initializer for _RunOneBlockTime
   139   005C5A  07D0               	dw	2000
   140                           
   141                           ;initializer for _Turn45Delay
   142   005C5C  00DC               	dw	220
   143                           
   144                           ;initializer for _power
   145   005C5E  001E               	dw	30
   146                           
   147                           ;initializer for _DataFlag
   148   005C60  01                 	db	1
   149   000000                     _TRISEbits	set	3973
   150   000000                     _TX4REG	set	3812
   151   000000                     _RC4STAbits	set	3815
   152   000000                     _SP4BRGH	set	3814
   153   000000                     _SSP2CON2bits	set	3802
   154   000000                     _RX4PPS	set	3605
   155   000000                     _SSP2CLKPPS	set	3612
   156   000000                     _SSP2DATPPS	set	3613
   157   000000                     _ANSELDbits	set	3751
   158   000000                     _SSP2ADD	set	3798
   159   000000                     _SSP2CON1bits	set	3801
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATFbits	set	3966
   162   000000                     _LATGbits	set	3967
   163   000000                     _TRISAbits	set	3969
   164   000000                     _TRISGbits	set	3975
   165   000000                     _PORTFbits	set	3982
   166   000000                     _CCPR2H	set	4006
   167   000000                     _CCPR1H	set	4010
   168   000000                     _TRISCbits	set	3971
   169   000000                     _TRISDbits	set	3972
   170   000000                     _TRISFbits	set	3974
   171   000000                     _LATDbits	set	3964
   172   000000                     _RC4REG	set	3811
   173   000000                     _SP4BRGL	set	3813
   174   000000                     _TX4STAbits	set	3816
   175   000000                     _BAUD4CONbits	set	3817
   176   000000                     _SSP2CON2	set	3802
   177   000000                     _SSP2STAT	set	3800
   178   000000                     _ANSELFbits	set	3764
   179   000000                     _SSP2BUF	set	3797
   180   000000                     _PIE4bits	set	3629
   181   000000                     _PIR4bits	set	3639
   182   000000                     _RC0PPS	set	3682
   183   000000                     _RD5PPS	set	3695
   184   000000                     _RE2PPS	set	3700
   185   000000                     _RD6PPS	set	3696
   186   000000                     _RC7PPS	set	3689
   187   000000                     _CCPR4H	set	3873
   188   000000                     _CCPR3H	set	3877
   189   000000                     _CCP1CONbits	set	4011
   190   000000                     _CCPTMRS0bits	set	4013
   191   000000                     _T2PR	set	4028
   192   000000                     _T2CONbits	set	4029
   193   000000                     _CCP2CONbits	set	4007
   194   000000                     _CCP3CONbits	set	3878
   195   000000                     _CCP4CONbits	set	3874
   196   000000                     _RE4PPS	set	3702
   197   000000                     _RG6PPS	set	3720
   198   000000                     _T2CLKCONbits	set	4031
   199   000000                     _T2HLTbits	set	4030
   200                           
   201                           	psect	smallconst
   202   000E00                     __psmallconst:
   203                           	callstack 0
   204   000E00  00                 	db	0
   205   000E01                     STR_1:
   206   000E01  72                 	db	114	;'r'
   207   000E02  65                 	db	101	;'e'
   208   000E03  64                 	db	100	;'d'
   209   000E04  3D                 	db	61	;'='
   210   000E05  25                 	db	37
   211   000E06  66                 	db	102	;'f'
   212   000E07  20                 	db	32
   213   000E08  67                 	db	103	;'g'
   214   000E09  72                 	db	114	;'r'
   215   000E0A  65                 	db	101	;'e'
   216   000E0B  65                 	db	101	;'e'
   217   000E0C  6E                 	db	110	;'n'
   218   000E0D  3D                 	db	61	;'='
   219   000E0E  25                 	db	37
   220   000E0F  66                 	db	102	;'f'
   221   000E10  20                 	db	32
   222   000E11  62                 	db	98	;'b'
   223   000E12  6C                 	db	108	;'l'
   224   000E13  75                 	db	117	;'u'
   225   000E14  65                 	db	101	;'e'
   226   000E15  3D                 	db	61	;'='
   227   000E16  25                 	db	37
   228   000E17  66                 	db	102	;'f'
   229   000E18  20                 	db	32
   230   000E19  6C                 	db	108	;'l'
   231   000E1A  75                 	db	117	;'u'
   232   000E1B  6D                 	db	109	;'m'
   233   000E1C  3D                 	db	61	;'='
   234   000E1D  25                 	db	37
   235   000E1E  64                 	db	100	;'d'
   236   000E1F  20                 	db	32
   237   000E20  63                 	db	99	;'c'
   238   000E21  6F                 	db	111	;'o'
   239   000E22  6C                 	db	108	;'l'
   240   000E23  6F                 	db	111	;'o'
   241   000E24  75                 	db	117	;'u'
   242   000E25  72                 	db	114	;'r'
   243   000E26  31                 	db	49	;'1'
   244   000E27  3D                 	db	61	;'='
   245   000E28  25                 	db	37
   246   000E29  64                 	db	100	;'d'
   247   000E2A  20                 	db	32
   248   000E2B  0D                 	db	13
   249   000E2C  0A                 	db	10
   250   000E2D  00                 	db	0
   251   000E2E                     STR_2:
   252   000E2E  72                 	db	114	;'r'
   253   000E2F  65                 	db	101	;'e'
   254   000E30  64                 	db	100	;'d'
   255   000E31  3D                 	db	61	;'='
   256   000E32  25                 	db	37
   257   000E33  64                 	db	100	;'d'
   258   000E34  20                 	db	32
   259   000E35  67                 	db	103	;'g'
   260   000E36  72                 	db	114	;'r'
   261   000E37  65                 	db	101	;'e'
   262   000E38  65                 	db	101	;'e'
   263   000E39  6E                 	db	110	;'n'
   264   000E3A  3D                 	db	61	;'='
   265   000E3B  25                 	db	37
   266   000E3C  64                 	db	100	;'d'
   267   000E3D  20                 	db	32
   268   000E3E  62                 	db	98	;'b'
   269   000E3F  6C                 	db	108	;'l'
   270   000E40  75                 	db	117	;'u'
   271   000E41  65                 	db	101	;'e'
   272   000E42  3D                 	db	61	;'='
   273   000E43  25                 	db	37
   274   000E44  64                 	db	100	;'d'
   275   000E45  20                 	db	32
   276   000E46  6C                 	db	108	;'l'
   277   000E47  75                 	db	117	;'u'
   278   000E48  6D                 	db	109	;'m'
   279   000E49  3D                 	db	61	;'='
   280   000E4A  25                 	db	37
   281   000E4B  64                 	db	100	;'d'
   282   000E4C  20                 	db	32
   283   000E4D  0D                 	db	13
   284   000E4E  0A                 	db	10
   285   000E4F  00                 	db	0
   286   000E50                     STR_3:
   287   000E50  69                 	db	105	;'i'
   288   000E51  6E                 	db	110	;'n'
   289   000E52  66                 	db	102	;'f'
   290   000E53  00                 	db	0
   291   000E54                     STR_6:
   292   000E54  6E                 	db	110	;'n'
   293   000E55  61                 	db	97	;'a'
   294   000E56  6E                 	db	110	;'n'
   295   000E57  00                 	db	0
   296   000E58  00                 	db	0	; dummy byte at the end
   297   000000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301   00526C                     __pcinit:
   302                           	callstack 0
   303   00526C                     start_initialization:
   304                           	callstack 0
   305   00526C                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK0 (9 bytes)
   309                           ; load TBLPTR registers with __pidataBANK0
   310   00526C  0E58               	movlw	low __pidataBANK0
   311   00526E  6EF6               	movwf	tblptrl,c
   312   005270  0E5C               	movlw	high __pidataBANK0
   313   005272  6EF7               	movwf	tblptrh,c
   314   005274  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   315   005276  6EF8               	movwf	tblptru,c
   316   005278  EE00  F0F2         	lfsr	0,__pdataBANK0
   317   00527C  EE10 F009          	lfsr	1,9
   318   005280                     copy_data0:
   319   005280  0009               	tblrd		*+
   320   005282  CFF5 FFEE          	movff	tablat,postinc0
   321   005286  50E5               	movf	postdec1,w,c
   322   005288  50E1               	movf	fsr1l,w,c
   323   00528A  E1FA               	bnz	copy_data0
   324                           
   325                           ; Clear objects allocated to BANK3 (250 bytes)
   326   00528C  EE03  F000         	lfsr	0,__pbssBANK3
   327   005290  0EFA               	movlw	250
   328   005292                     clear_0:
   329   005292  6AEE               	clrf	postinc0,c
   330   005294  06E8               	decf	wreg,f,c
   331   005296  E1FD               	bnz	clear_0
   332                           
   333                           ; Clear objects allocated to BANK2 (60 bytes)
   334   005298  EE02  F000         	lfsr	0,__pbssBANK2
   335   00529C  0E3C               	movlw	60
   336   00529E                     clear_1:
   337   00529E  6AEE               	clrf	postinc0,c
   338   0052A0  06E8               	decf	wreg,f,c
   339   0052A2  E1FD               	bnz	clear_1
   340                           
   341                           ; Clear objects allocated to BANK1 (140 bytes)
   342   0052A4  EE01  F000         	lfsr	0,__pbssBANK1
   343   0052A8  0E8C               	movlw	140
   344   0052AA                     clear_2:
   345   0052AA  6AEE               	clrf	postinc0,c
   346   0052AC  06E8               	decf	wreg,f,c
   347   0052AE  E1FD               	bnz	clear_2
   348                           
   349                           ; Clear objects allocated to BANK0 (31 bytes)
   350   0052B0  EE00  F0D3         	lfsr	0,__pbssBANK0
   351   0052B4  0E1F               	movlw	31
   352   0052B6                     clear_3:
   353   0052B6  6AEE               	clrf	postinc0,c
   354   0052B8  06E8               	decf	wreg,f,c
   355   0052BA  E1FD               	bnz	clear_3
   356   0052BC                     end_of_initialization:
   357                           	callstack 0
   358   0052BC                     __end_of__initialization:
   359                           	callstack 0
   360   0052BC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   361   0052BE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   362   0052C0  0100               	movlb	0
   363   0052C2  EF98  F011         	goto	_main	;jump to C main() function
   364                           
   365                           	psect	bssBANK0
   366   0000D3                     __pbssBANK0:
   367                           	callstack 0
   368   0000D3                     	ds	12
   369   0000DF                     floorf@F526:
   370                           	callstack 0
   371   0000DF                     	ds	4
   372   0000E3                     ___fpclassifyf@F465:
   373                           	callstack 0
   374   0000E3                     	ds	4
   375   0000E7                     _width:
   376                           	callstack 0
   377   0000E7                     	ds	2
   378   0000E9                     _prec:
   379                           	callstack 0
   380   0000E9                     	ds	2
   381   0000EB                     _low_threshold:
   382                           	callstack 0
   383   0000EB                     	ds	2
   384   0000ED                     _flags:
   385                           	callstack 0
   386   0000ED                     	ds	1
   387   0000EE                     _TxBufReadCnt:
   388                           	callstack 0
   389   0000EE                     	ds	1
   390   0000EF                     _TxBufWriteCnt:
   391                           	callstack 0
   392   0000EF                     	ds	1
   393   0000F0                     _RxBufReadCnt:
   394                           	callstack 0
   395   0000F0                     	ds	1
   396   0000F1                     _RxBufWriteCnt:
   397                           	callstack 0
   398   0000F1                     	ds	1
   399                           
   400                           	psect	dataBANK0
   401   0000F2                     __pdataBANK0:
   402                           	callstack 0
   403   0000F2                     _high_threshold:
   404                           	callstack 0
   405   0000F2                     	ds	2
   406   0000F4                     _RunOneBlockTime:
   407                           	callstack 0
   408   0000F4                     	ds	2
   409   0000F6                     _Turn45Delay:
   410                           	callstack 0
   411   0000F6                     	ds	2
   412   0000F8                     _power:
   413                           	callstack 0
   414   0000F8                     	ds	2
   415   0000FA                     _DataFlag:
   416                           	callstack 0
   417   0000FA                     	ds	1
   418                           
   419                           	psect	bssBANK1
   420   000100                     __pbssBANK1:
   421                           	callstack 0
   422   000100                     _EUSART4RXbuf:
   423                           	callstack 0
   424   000100                     	ds	20
   425   000114                     _move_count:
   426                           	callstack 0
   427   000114                     	ds	2
   428   000116                     _dbuf:
   429                           	callstack 0
   430   000116                     	ds	80
   431   000166                     _rel:
   432                           	callstack 0
   433   000166                     	ds	12
   434   000172                     _motorR:
   435                           	callstack 0
   436   000172                     	ds	9
   437   00017B                     _motorL:
   438                           	callstack 0
   439   00017B                     	ds	9
   440   000184                     _vals:
   441                           	callstack 0
   442   000184                     	ds	8
   443                           
   444                           	psect	bssBANK2
   445   000200                     __pbssBANK2:
   446                           	callstack 0
   447   000200                     _EUSART4TXbuf:
   448                           	callstack 0
   449   000200                     	ds	60
   450                           
   451                           	psect	bssBANK3
   452   000300                     __pbssBANK3:
   453                           	callstack 0
   454   000300                     _WayBack:
   455                           	callstack 0
   456   000300                     	ds	250
   457                           
   458                           	psect	cstackBANK1
   459   00018C                     __pcstackBANK1:
   460                           	callstack 0
   461   00018C                     main@buf:
   462                           	callstack 0
   463                           
   464                           ; 100 bytes @ 0x0
   465   00018C                     	ds	100
   466   0001F0                     main@run_flag:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x64
   470   0001F0                     	ds	2
   471   0001F2                     main@consecuitive:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x66
   475   0001F2                     	ds	2
   476   0001F4                     main@colour:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x68
   480   0001F4                     	ds	2
   481   0001F6                     main@prev_colour:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x6A
   485   0001F6                     	ds	2
   486                           
   487                           	psect	cstackBANK0
   488   000060                     __pcstackBANK0:
   489                           	callstack 0
   490   000060                     efgtoa@fp:
   491                           	callstack 0
   492   000060                     colour_rel@L:
   493                           	callstack 0
   494   000060                     _Colour_decider$2798:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x0
   498   000060                     	ds	2
   499   000062                     efgtoa@f:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x2
   503   000062                     	ds	2
   504   000064                     Colour_decider@Cmax_i:
   505                           	callstack 0
   506   000064                     _colour_rel$2796:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x4
   510   000064                     	ds	2
   511   000066                     efgtoa@c:
   512                           	callstack 0
   513   000066                     Colour_decider@RGB_col:
   514                           	callstack 0
   515                           
   516                           ; 12 bytes @ 0x6
   517   000066                     	ds	1
   518   000067                     ??_efgtoa:
   519                           
   520                           ; 1 bytes @ 0x7
   521   000067                     	ds	1
   522   000068                     _colour_rel$2797:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x8
   526   000068                     	ds	1
   527   000069                     efgtoa@ne:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x9
   531   000069                     	ds	2
   532   00006B                     efgtoa@p:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xB
   536   00006B                     	ds	1
   537   00006C                     colour_rel@R:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0xC
   541   00006C                     	ds	1
   542   00006D                     efgtoa@t:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0xD
   546   00006D                     	ds	2
   547   00006F                     _efgtoa$2427:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0xF
   551   00006F                     	ds	1
   552   000070                     colour_rel@G:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x10
   556   000070                     	ds	1
   557   000071                     efgtoa@pp:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x11
   561   000071                     	ds	1
   562   000072                     efgtoa@mode:
   563                           	callstack 0
   564   000072                     Colour_decider@Cmax:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x12
   568   000072                     	ds	1
   569   000073                     efgtoa@nmode:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x13
   573   000073                     	ds	1
   574   000074                     efgtoa@d:
   575                           	callstack 0
   576   000074                     colour_rel@B:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x14
   580   000074                     	ds	2
   581   000076                     efgtoa@m:
   582                           	callstack 0
   583   000076                     Colour_decider@Cmin:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x16
   587   000076                     	ds	2
   588   000078                     efgtoa@e:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x18
   592   000078                     	ds	2
   593   00007A                     Colour_decider@i:
   594                           	callstack 0
   595   00007A                     efgtoa@w:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x1A
   599   00007A                     	ds	2
   600   00007C                     Colour_decider@Hue:
   601                           	callstack 0
   602   00007C                     efgtoa@ou:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x1C
   606   00007C                     	ds	4
   607   000080                     efgtoa@i:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x20
   611   000080                     	ds	2
   612   000082                     efgtoa@h:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x22
   616   000082                     	ds	4
   617   000086                     efgtoa@l:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x26
   621   000086                     	ds	4
   622   00008A                     efgtoa@sign:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x2A
   626   00008A                     	ds	1
   627   00008B                     efgtoa@n:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2B
   631   00008B                     	ds	2
   632   00008D                     efgtoa@g:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x2D
   636   00008D                     	ds	4
   637   000091                     efgtoa@u:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x31
   641   000091                     	ds	4
   642   000095                     vfpfcnvrt@fp:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x35
   646   000095                     	ds	2
   647   000097                     vfpfcnvrt@fmt:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x37
   651   000097                     	ds	2
   652   000099                     vfpfcnvrt@ap:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x39
   656   000099                     	ds	2
   657   00009B                     ??_vfpfcnvrt:
   658                           
   659                           ; 1 bytes @ 0x3B
   660   00009B                     	ds	2
   661   00009D                     vfpfcnvrt@convarg:
   662                           	callstack 0
   663                           
   664                           ; 8 bytes @ 0x3D
   665   00009D                     	ds	8
   666   0000A5                     vfpfcnvrt@c:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x45
   670   0000A5                     	ds	1
   671   0000A6                     vfpfcnvrt@cp:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x46
   675   0000A6                     	ds	2
   676   0000A8                     ?_vfprintf:
   677                           	callstack 0
   678   0000A8                     vfprintf@fp:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x48
   682   0000A8                     	ds	2
   683   0000AA                     vfprintf@fmt:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x4A
   687   0000AA                     	ds	2
   688   0000AC                     vfprintf@ap:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x4C
   692   0000AC                     	ds	2
   693   0000AE                     vfprintf@cfmt:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x4E
   697   0000AE                     	ds	2
   698   0000B0                     ?_sprintf:
   699                           	callstack 0
   700   0000B0                     sprintf@s:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x50
   704   0000B0                     	ds	2
   705   0000B2                     sprintf@fmt:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x52
   709   0000B2                     	ds	18
   710   0000C4                     sprintf@ap:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x64
   714   0000C4                     	ds	2
   715   0000C6                     sprintf@f:
   716                           	callstack 0
   717                           
   718                           ; 11 bytes @ 0x66
   719   0000C6                     	ds	11
   720   0000D1                     ??_main:
   721                           
   722                           ; 1 bytes @ 0x71
   723   0000D1                     	ds	2
   724                           
   725                           	psect	cstackCOMRAM
   726   000001                     __pcstackCOMRAM:
   727                           	callstack 0
   728   000001                     ??_I2C_2_Master_Idle:
   729   000001                     ?___fpclassifyf:
   730                           	callstack 0
   731   000001                     ?___wmul:
   732                           	callstack 0
   733   000001                     ?___fladd:
   734                           	callstack 0
   735   000001                     ?_labs:
   736                           	callstack 0
   737   000001                     ?___flneg:
   738                           	callstack 0
   739   000001                     ?___fltol:
   740                           	callstack 0
   741   000001                     ?___xxtofl:
   742                           	callstack 0
   743   000001                     ?___aodiv:
   744                           	callstack 0
   745   000001                     ?___aomod:
   746                           	callstack 0
   747   000001                     sendCharSerial4@charToSend:
   748                           	callstack 0
   749   000001                     initDCmotorsPWM@PWMperiod:
   750                           	callstack 0
   751   000001                     ___wmul@multiplier:
   752                           	callstack 0
   753   000001                     memcpy@d1:
   754                           	callstack 0
   755   000001                     fputc@c:
   756                           	callstack 0
   757   000001                     strcpy@dest:
   758                           	callstack 0
   759   000001                     ___flneg@f1:
   760                           	callstack 0
   761   000001                     ___fltol@f1:
   762                           	callstack 0
   763   000001                     ___fladd@b:
   764                           	callstack 0
   765   000001                     ___xxtofl@val:
   766                           	callstack 0
   767   000001                     ___fpclassifyf@x:
   768                           	callstack 0
   769   000001                     labs@a:
   770                           	callstack 0
   771   000001                     ___aodiv@dividend:
   772                           	callstack 0
   773   000001                     ___aomod@dividend:
   774                           	callstack 0
   775                           
   776                           ; 8 bytes @ 0x0
   777   000001                     	ds	1
   778   000002                     ??_I2C_2_Master_Read:
   779   000002                     I2C_2_Master_Write@data_byte:
   780                           	callstack 0
   781   000002                     sendStringSerial4@string:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x1
   785   000002                     	ds	1
   786   000003                     color_writetoaddr@value:
   787                           	callstack 0
   788   000003                     I2C_2_Master_Read@ack:
   789                           	callstack 0
   790   000003                     ___wmul@multiplicand:
   791                           	callstack 0
   792   000003                     memcpy@s1:
   793                           	callstack 0
   794   000003                     fputc@fp:
   795                           	callstack 0
   796   000003                     strcpy@src:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x2
   800   000003                     	ds	1
   801   000004                     color_writetoaddr@address:
   802                           	callstack 0
   803   000004                     I2C_2_Master_Read@tmp:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x3
   807   000004                     	ds	1
   808   000005                     ??_fputc:
   809   000005                     ??___fpclassifyf:
   810   000005                     ??_labs:
   811   000005                     ??_color_click_init:
   812   000005                     ??___fltol:
   813   000005                     ??___xxtofl:
   814   000005                     ?_color_read_lum:
   815                           	callstack 0
   816   000005                     ?_color_read_Red:
   817                           	callstack 0
   818   000005                     ?_color_read_Green:
   819                           	callstack 0
   820   000005                     ?_color_read_Blue:
   821                           	callstack 0
   822   000005                     ___wmul@product:
   823                           	callstack 0
   824   000005                     memcpy@n:
   825                           	callstack 0
   826   000005                     strcpy@s:
   827                           	callstack 0
   828   000005                     ___fladd@a:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x4
   832   000005                     	ds	2
   833   000007                     ??_color_read_lum:
   834   000007                     ??_color_read_Red:
   835   000007                     ??_color_read_Green:
   836   000007                     ??_color_read_Blue:
   837   000007                     ?___lwdiv:
   838                           	callstack 0
   839   000007                     ___lwdiv@dividend:
   840                           	callstack 0
   841   000007                     memcpy@d:
   842                           	callstack 0
   843   000007                     strcpy@d:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x6
   847   000007                     	ds	2
   848   000009                     ??___fladd:
   849   000009                     ___fltol@sign1:
   850                           	callstack 0
   851   000009                     ___xxtofl@sign:
   852                           	callstack 0
   853   000009                     ___lwdiv@divisor:
   854                           	callstack 0
   855   000009                     ___fpclassifyf@e:
   856                           	callstack 0
   857   000009                     memcpy@s:
   858                           	callstack 0
   859   000009                     ___aodiv@divisor:
   860                           	callstack 0
   861   000009                     ___aomod@divisor:
   862                           	callstack 0
   863                           
   864                           ; 8 bytes @ 0x8
   865   000009                     	ds	1
   866   00000A                     ___fltol@exp1:
   867                           	callstack 0
   868   00000A                     ___xxtofl@exp:
   869                           	callstack 0
   870   00000A                     color_read_lum@tmp:
   871                           	callstack 0
   872   00000A                     color_read_Red@tmp:
   873                           	callstack 0
   874   00000A                     color_read_Green@tmp:
   875                           	callstack 0
   876   00000A                     color_read_Blue@tmp:
   877                           	callstack 0
   878   00000A                     fputs@s:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x9
   882   00000A                     	ds	1
   883   00000B                     memcpy@tmp:
   884                           	callstack 0
   885   00000B                     ___lwdiv@quotient:
   886                           	callstack 0
   887   00000B                     ___xxtofl@arg:
   888                           	callstack 0
   889   00000B                     ___fpclassifyf@u:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0xA
   893   00000B                     	ds	1
   894   00000C                     readColours@vals:
   895                           	callstack 0
   896   00000C                     fputs@fp:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0xB
   900   00000C                     	ds	1
   901   00000D                     ___lwdiv@counter:
   902                           	callstack 0
   903   00000D                     ___fladd@signs:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0xC
   907   00000D                     	ds	1
   908   00000E                     ___fladd@aexp:
   909                           	callstack 0
   910   00000E                     fputs@c:
   911                           	callstack 0
   912   00000E                     setMotorPWM@m:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0xD
   916   00000E                     	ds	1
   917   00000F                     ___fladd@bexp:
   918                           	callstack 0
   919   00000F                     fputs@i:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0xE
   923   00000F                     	ds	1
   924   000010                     ??_setMotorPWM:
   925   000010                     ___fladd@grs:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0xF
   929   000010                     	ds	1
   930   000011                     ?___flmul:
   931                           	callstack 0
   932   000011                     ___aodiv@counter:
   933                           	callstack 0
   934   000011                     ___aomod@counter:
   935                           	callstack 0
   936   000011                     pad@fp:
   937                           	callstack 0
   938   000011                     ___flmul@b:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x10
   942   000011                     	ds	1
   943   000012                     setMotorPWM@posDuty:
   944                           	callstack 0
   945   000012                     ___aodiv@sign:
   946                           	callstack 0
   947   000012                     ___aomod@sign:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x11
   951   000012                     	ds	1
   952   000013                     ?_abs:
   953                           	callstack 0
   954   000013                     setMotorPWM@negDuty:
   955                           	callstack 0
   956   000013                     pad@buf:
   957                           	callstack 0
   958   000013                     abs@a:
   959                           	callstack 0
   960   000013                     ___aodiv@quotient:
   961                           	callstack 0
   962                           
   963                           ; 8 bytes @ 0x12
   964   000013                     	ds	1
   965   000014                     stop@mL:
   966                           	callstack 0
   967   000014                     turnLeft@mL:
   968                           	callstack 0
   969   000014                     turnRight@mL:
   970                           	callstack 0
   971   000014                     fullSpeedAhead@mL:
   972                           	callstack 0
   973   000014                     fullSpeedBack@mL:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x13
   977   000014                     	ds	1
   978   000015                     ??_abs:
   979   000015                     pad@p:
   980                           	callstack 0
   981   000015                     ___flmul@a:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x14
   985   000015                     	ds	1
   986   000016                     stop@mR:
   987                           	callstack 0
   988   000016                     turnLeft@mR:
   989                           	callstack 0
   990   000016                     turnRight@mR:
   991                           	callstack 0
   992   000016                     fullSpeedAhead@mR:
   993                           	callstack 0
   994   000016                     fullSpeedBack@mR:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x15
   998   000016                     	ds	1
   999   000017                     ??_pad:
  1000                           
  1001                           ; 1 bytes @ 0x16
  1002   000017                     	ds	1
  1003   000018                     ??_stop:
  1004   000018                     ??_turnLeft:
  1005   000018                     ??_turnRight:
  1006   000018                     ??_fullSpeedAhead:
  1007   000018                     ??_fullSpeedBack:
  1008   000018                     pad@i:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x17
  1012   000018                     	ds	1
  1013   000019                     ??___flmul:
  1014                           
  1015                           ; 1 bytes @ 0x18
  1016   000019                     	ds	1
  1017   00001A                     turnRight45@mL:
  1018                           	callstack 0
  1019   00001A                     turnLeft45@mL:
  1020                           	callstack 0
  1021   00001A                     reverseDetect@mL:
  1022                           	callstack 0
  1023   00001A                     reverseOneBlock@mL:
  1024                           	callstack 0
  1025   00001A                     ForwardOneBlock@mL:
  1026                           	callstack 0
  1027   00001A                     Forwardhalfblock@mL:
  1028                           	callstack 0
  1029   00001A                     RetryMove@mL:
  1030                           	callstack 0
  1031   00001A                     pad@w:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x19
  1035   00001A                     	ds	2
  1036   00001C                     turnRight45@mR:
  1037                           	callstack 0
  1038   00001C                     turnLeft45@mR:
  1039                           	callstack 0
  1040   00001C                     reverseDetect@mR:
  1041                           	callstack 0
  1042   00001C                     reverseOneBlock@mR:
  1043                           	callstack 0
  1044   00001C                     ForwardOneBlock@mR:
  1045                           	callstack 0
  1046   00001C                     Forwardhalfblock@mR:
  1047                           	callstack 0
  1048   00001C                     RetryMove@mR:
  1049                           	callstack 0
  1050   00001C                     dtoa@fp:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x1B
  1054   00001C                     	ds	1
  1055   00001D                     ___flmul@sign:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x1C
  1059   00001D                     	ds	1
  1060   00001E                     ??_turnRight45:
  1061   00001E                     ??_Forwardhalfblock:
  1062   00001E                     ??_RetryMove:
  1063   00001E                     ??_turnLeft45:
  1064   00001E                     ??_reverseDetect:
  1065   00001E                     ??_reverseOneBlock:
  1066   00001E                     ??_ForwardOneBlock:
  1067   00001E                     ___flmul@grs:
  1068                           	callstack 0
  1069   00001E                     dtoa@d:
  1070                           	callstack 0
  1071                           
  1072                           ; 8 bytes @ 0x1D
  1073   00001E                     	ds	2
  1074   000020                     RedMove@mL:
  1075                           	callstack 0
  1076   000020                     GreenMove@mL:
  1077                           	callstack 0
  1078   000020                     BlueMove@mL:
  1079                           	callstack 0
  1080   000020                     YellowMove@mL:
  1081                           	callstack 0
  1082   000020                     PinkMove@mL:
  1083                           	callstack 0
  1084   000020                     OrangeMove@mL:
  1085                           	callstack 0
  1086   000020                     LightBlueMove@mL:
  1087                           	callstack 0
  1088   000020                     ReverseYellow@mL:
  1089                           	callstack 0
  1090   000020                     ReversePink@mL:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x1F
  1094   000020                     	ds	2
  1095   000022                     ___flmul@aexp:
  1096                           	callstack 0
  1097   000022                     RedMove@mR:
  1098                           	callstack 0
  1099   000022                     GreenMove@mR:
  1100                           	callstack 0
  1101   000022                     BlueMove@mR:
  1102                           	callstack 0
  1103   000022                     YellowMove@mR:
  1104                           	callstack 0
  1105   000022                     PinkMove@mR:
  1106                           	callstack 0
  1107   000022                     OrangeMove@mR:
  1108                           	callstack 0
  1109   000022                     LightBlueMove@mR:
  1110                           	callstack 0
  1111   000022                     ReverseYellow@mR:
  1112                           	callstack 0
  1113   000022                     ReversePink@mR:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x21
  1117   000022                     	ds	1
  1118   000023                     ___flmul@bexp:
  1119                           	callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x22
  1122   000023                     	ds	1
  1123   000024                     go_Home@WayBack:
  1124                           	callstack 0
  1125   000024                     ___flmul@prod:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x23
  1129   000024                     	ds	2
  1130   000026                     ??_dtoa:
  1131                           
  1132                           ; 1 bytes @ 0x25
  1133   000026                     	ds	1
  1134   000027                     go_Home@i:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x26
  1138   000027                     	ds	1
  1139   000028                     ___flmul@temp:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x27
  1143   000028                     	ds	2
  1144   00002A                     ?___flsub:
  1145                           	callstack 0
  1146   00002A                     ___flge@ff1:
  1147                           	callstack 0
  1148   00002A                     ___flsub@b:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x29
  1152   00002A                     	ds	4
  1153   00002E                     _dtoa$2396:
  1154                           	callstack 0
  1155   00002E                     ___flge@ff2:
  1156                           	callstack 0
  1157   00002E                     ___flsub@a:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x2D
  1161   00002E                     	ds	2
  1162   000030                     dtoa@p:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x2F
  1166   000030                     	ds	2
  1167   000032                     ??___flge:
  1168   000032                     ?___fldiv:
  1169                           	callstack 0
  1170   000032                     dtoa@w:
  1171                           	callstack 0
  1172   000032                     ___fleq@ff1:
  1173                           	callstack 0
  1174   000032                     ___fldiv@b:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x31
  1178   000032                     	ds	2
  1179   000034                     dtoa@n:
  1180                           	callstack 0
  1181                           
  1182                           ; 8 bytes @ 0x33
  1183   000034                     	ds	2
  1184   000036                     ___fleq@ff2:
  1185                           	callstack 0
  1186   000036                     ___fldiv@a:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x35
  1190   000036                     	ds	4
  1191   00003A                     ??___fldiv:
  1192   00003A                     ??___fleq:
  1193                           
  1194                           ; 1 bytes @ 0x39
  1195   00003A                     	ds	2
  1196   00003C                     dtoa@i:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x3B
  1200   00003C                     	ds	2
  1201   00003E                     dtoa@s:
  1202                           	callstack 0
  1203   00003E                     ___fldiv@rem:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x3D
  1207   00003E                     	ds	4
  1208   000042                     ___fldiv@sign:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x41
  1212   000042                     	ds	1
  1213   000043                     ___fldiv@new_exp:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x42
  1217   000043                     	ds	2
  1218   000045                     ___fldiv@grs:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x44
  1222   000045                     	ds	4
  1223   000049                     ___fldiv@bexp:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x48
  1227   000049                     	ds	1
  1228   00004A                     ___fldiv@aexp:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x49
  1232   00004A                     	ds	1
  1233   00004B                     ?_Colour_decider:
  1234                           	callstack 0
  1235   00004B                     ?_floorf:
  1236                           	callstack 0
  1237   00004B                     colour_rel@vals:
  1238                           	callstack 0
  1239   00004B                     Colour_decider@vals:
  1240                           	callstack 0
  1241   00004B                     floorf@x:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x4A
  1245   00004B                     	ds	2
  1246   00004D                     colour_rel@rel:
  1247                           	callstack 0
  1248   00004D                     Colour_decider@rel:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x4C
  1252   00004D                     	ds	2
  1253   00004F                     ??_floorf:
  1254   00004F                     ??_Colour_decider:
  1255                           
  1256                           ; 1 bytes @ 0x4E
  1257   00004F                     	ds	6
  1258   000055                     floorf@m:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x54
  1262   000055                     	ds	4
  1263   000059                     floorf@e:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x58
  1267   000059                     	ds	2
  1268   00005B                     floorf@u:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x5A
  1272   00005B                     	ds	4
  1273   00005F                     
  1274                           ; 1 bytes @ 0x5E
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 29 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  colour          2  104[BANK1 ] int 
  1285 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1286 ;;  prev_colour     2  106[BANK1 ] int 
  1287 ;;  consecuitive    2  102[BANK1 ] int 
  1288 ;;  run_flag        2  100[BANK1 ] int 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;Total ram usage:      110 bytes
  1303 ;; Hardware stack levels required when called: 9
  1304 ;; This function calls:
  1305 ;;		_BlueMove
  1306 ;;		_Colour_decider
  1307 ;;		_Forwardhalfblock
  1308 ;;		_GreenMove
  1309 ;;		_I2C_2_Master_Init
  1310 ;;		_Interrupts_init
  1311 ;;		_LightBlueMove
  1312 ;;		_OrangeMove
  1313 ;;		_PinkMove
  1314 ;;		_RedMove
  1315 ;;		_RetryMove
  1316 ;;		_YellowMove
  1317 ;;		_color_click_init
  1318 ;;		_colour_rel
  1319 ;;		_go_Home
  1320 ;;		_initDCmotorsPWM
  1321 ;;		_initUSART4
  1322 ;;		_readColours
  1323 ;;		_sendStringSerial4
  1324 ;;		_sprintf
  1325 ;;		_stop
  1326 ;;		_turnRight45
  1327 ;; This function is called by:
  1328 ;;		Startup code after reset
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text0
  1333   002330                     __ptext0:
  1334                           	callstack 0
  1335   002330                     _main:
  1336                           	callstack 22
  1337   002330                     
  1338                           ;main.c: 30:     initUSART4();
  1339   002330  ECFC  F02D         	call	_initUSART4	;wreg free
  1340   002334                     
  1341                           ;main.c: 31:     Interrupts_init();
  1342   002334  EC32  F02E         	call	_Interrupts_init	;wreg free
  1343   002338                     
  1344                           ;main.c: 32:     color_click_init();
  1345   002338  EC15  F02B         	call	_color_click_init	;wreg free
  1346   00233C                     
  1347                           ;main.c: 33:     I2C_2_Master_Init();
  1348   00233C  ECB0  F02D         	call	_I2C_2_Master_Init	;wreg free
  1349   002340                     
  1350                           ;main.c: 34:     initDCmotorsPWM(200);
  1351   002340  0E00               	movlw	0
  1352   002342  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1353   002344  0EC8               	movlw	200
  1354   002346  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1355   002348  EC66  F027         	call	_initDCmotorsPWM	;wreg free
  1356   00234C                     
  1357                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1358   00234C  9287               	bcf	135,1,c	;volatile
  1359   00234E                     
  1360                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1361   00234E  9881               	bcf	129,4,c	;volatile
  1362   002350                     
  1363                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1364   002350  9E86               	bcf	134,7,c	;volatile
  1365   002352                     
  1366                           ;main.c: 39:     TRISFbits.TRISF2 = 1;
  1367   002352  8486               	bsf	134,2,c	;volatile
  1368   002354                     
  1369                           ;main.c: 40:     ANSELFbits.ANSELF2=0;
  1370   002354  010E               	movlb	14	; () banked
  1371   002356  95B4               	bcf	180,2,b	;volatile
  1372   002358                     
  1373                           ; BSR set to: 14
  1374                           ;main.c: 41:     LATGbits.LATG1=1;
  1375   002358  827F               	bsf	127,1,c	;volatile
  1376   00235A                     
  1377                           ; BSR set to: 14
  1378                           ;main.c: 42:     LATAbits.LATA4=1;
  1379   00235A  8879               	bsf	121,4,c	;volatile
  1380   00235C                     
  1381                           ; BSR set to: 14
  1382                           ;main.c: 43:     LATFbits.LATF7=1;
  1383   00235C  8E7E               	bsf	126,7,c	;volatile
  1384   00235E                     
  1385                           ; BSR set to: 14
  1386                           ;main.c: 47:     motorL.power=0;
  1387   00235E  0E00               	movlw	0
  1388   002360  0101               	movlb	1	; () banked
  1389   002362  6F7B               	movwf	_motorL& (0+255),b
  1390   002364                     
  1391                           ; BSR set to: 1
  1392                           ;main.c: 48:     motorL.direction=1;
  1393   002364  0E01               	movlw	1
  1394   002366  6F7C               	movwf	(_motorL+1)& (0+255),b
  1395   002368                     
  1396                           ; BSR set to: 1
  1397                           ;main.c: 49:     motorL.brakemode=1;
  1398   002368  0E01               	movlw	1
  1399   00236A  6F7D               	movwf	(_motorL+2)& (0+255),b
  1400   00236C                     
  1401                           ; BSR set to: 1
  1402                           ;main.c: 50:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1403   00236C  0EAA               	movlw	170
  1404   00236E  6F80               	movwf	(_motorL+5)& (0+255),b
  1405   002370  0E0F               	movlw	15
  1406   002372  6F81               	movwf	(_motorL+6)& (0+255),b
  1407   002374                     
  1408                           ; BSR set to: 1
  1409                           ;main.c: 51:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1410   002374  0EA6               	movlw	166
  1411   002376  6F82               	movwf	(_motorL+7)& (0+255),b
  1412   002378  0E0F               	movlw	15
  1413   00237A  6F83               	movwf	(_motorL+8)& (0+255),b
  1414   00237C                     
  1415                           ; BSR set to: 1
  1416                           ;main.c: 52:     motorL.PWMperiod=200;
  1417   00237C  0E00               	movlw	0
  1418   00237E  6F7F               	movwf	(_motorL+4)& (0+255),b
  1419   002380  0EC8               	movlw	200
  1420   002382  6F7E               	movwf	(_motorL+3)& (0+255),b
  1421   002384                     
  1422                           ; BSR set to: 1
  1423                           ;main.c: 53:     motorR.power=0;
  1424   002384  0E00               	movlw	0
  1425   002386  6F72               	movwf	_motorR& (0+255),b
  1426   002388                     
  1427                           ; BSR set to: 1
  1428                           ;main.c: 54:     motorR.direction=1;
  1429   002388  0E01               	movlw	1
  1430   00238A  6F73               	movwf	(_motorR+1)& (0+255),b
  1431   00238C                     
  1432                           ; BSR set to: 1
  1433                           ;main.c: 55:     motorR.brakemode=1;
  1434   00238C  0E01               	movlw	1
  1435   00238E  6F74               	movwf	(_motorR+2)& (0+255),b
  1436   002390                     
  1437                           ; BSR set to: 1
  1438                           ;main.c: 56:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1439   002390  0E25               	movlw	37
  1440   002392  6F77               	movwf	(_motorR+5)& (0+255),b
  1441   002394  0E0F               	movlw	15
  1442   002396  6F78               	movwf	(_motorR+6)& (0+255),b
  1443   002398                     
  1444                           ; BSR set to: 1
  1445                           ;main.c: 57:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1446   002398  0E21               	movlw	33
  1447   00239A  6F79               	movwf	(_motorR+7)& (0+255),b
  1448   00239C  0E0F               	movlw	15
  1449   00239E  6F7A               	movwf	(_motorR+8)& (0+255),b
  1450   0023A0                     
  1451                           ; BSR set to: 1
  1452                           ;main.c: 58:     motorR.PWMperiod=200;
  1453   0023A0  0E00               	movlw	0
  1454   0023A2  6F76               	movwf	(_motorR+4)& (0+255),b
  1455   0023A4  0EC8               	movlw	200
  1456   0023A6  6F75               	movwf	(_motorR+3)& (0+255),b
  1457   0023A8                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 59:     int consecuitive=0;
  1460   0023A8  0E00               	movlw	0
  1461   0023AA  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1462   0023AC  0E00               	movlw	0
  1463   0023AE  6FF2               	movwf	main@consecuitive& (0+255),b
  1464   0023B0                     
  1465                           ; BSR set to: 1
  1466                           ;main.c: 60:     int prev_colour =0;
  1467   0023B0  0E00               	movlw	0
  1468   0023B2  6FF7               	movwf	(main@prev_colour+1)& (0+255),b
  1469   0023B4  0E00               	movlw	0
  1470   0023B6  6FF6               	movwf	main@prev_colour& (0+255),b
  1471   0023B8                     
  1472                           ; BSR set to: 1
  1473                           ;main.c: 61:     int run_flag=1;
  1474   0023B8  0E00               	movlw	0
  1475   0023BA  6FF1               	movwf	(main@run_flag+1)& (0+255),b
  1476   0023BC  0E01               	movlw	1
  1477   0023BE  6FF0               	movwf	main@run_flag& (0+255),b
  1478   0023C0                     
  1479                           ; BSR set to: 1
  1480                           ;main.c: 62:     move_count=-1;
  1481   0023C0  6914               	setf	_move_count& (0+255),b	;volatile
  1482   0023C2  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1483                           
  1484                           ;main.c: 64:     while (PORTFbits.RF3){
  1485   0023C4  EF19  F012         	goto	l5540
  1486   0023C8                     l5530:
  1487                           
  1488                           ;main.c: 65:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1489   0023C8  0E52               	movlw	82
  1490   0023CA  0100               	movlb	0	; () banked
  1491   0023CC  6FD2               	movwf	(??_main+1)& (0+255),b
  1492   0023CE  0E2B               	movlw	43
  1493   0023D0  6FD1               	movwf	??_main& (0+255),b
  1494   0023D2  0E00               	movlw	0
  1495   0023D4                     u5767:
  1496   0023D4  2EE8               	decfsz	wreg,f,c
  1497   0023D6  D7FE               	bra	u5767
  1498   0023D8  2FD1               	decfsz	??_main& (0+255),f,b
  1499   0023DA  D7FC               	bra	u5767
  1500   0023DC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1501   0023DE  D7FA               	bra	u5767
  1502   0023E0  F000               	nop	
  1503   0023E2                     
  1504                           ;main.c: 66:         turnRight45(&motorL, &motorR);
  1505   0023E2  0E7B               	movlw	low _motorL
  1506   0023E4  6E1A               	movwf	turnRight45@mL^0,c
  1507   0023E6  0E01               	movlw	high _motorL
  1508   0023E8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  1509   0023EA  0E72               	movlw	low _motorR
  1510   0023EC  6E1C               	movwf	turnRight45@mR^0,c
  1511   0023EE  0E01               	movlw	high _motorR
  1512   0023F0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  1513   0023F2  EC17  F02A         	call	_turnRight45	;wreg free
  1514   0023F6                     
  1515                           ;main.c: 67:         turnRight45(&motorL, &motorR);
  1516   0023F6  0E7B               	movlw	low _motorL
  1517   0023F8  6E1A               	movwf	turnRight45@mL^0,c
  1518   0023FA  0E01               	movlw	high _motorL
  1519   0023FC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  1520   0023FE  0E72               	movlw	low _motorR
  1521   002400  6E1C               	movwf	turnRight45@mR^0,c
  1522   002402  0E01               	movlw	high _motorR
  1523   002404  6E1D               	movwf	(turnRight45@mR+1)^0,c
  1524   002406  EC17  F02A         	call	_turnRight45	;wreg free
  1525   00240A                     
  1526                           ;main.c: 68:         turnRight45(&motorL, &motorR);
  1527   00240A  0E7B               	movlw	low _motorL
  1528   00240C  6E1A               	movwf	turnRight45@mL^0,c
  1529   00240E  0E01               	movlw	high _motorL
  1530   002410  6E1B               	movwf	(turnRight45@mL+1)^0,c
  1531   002412  0E72               	movlw	low _motorR
  1532   002414  6E1C               	movwf	turnRight45@mR^0,c
  1533   002416  0E01               	movlw	high _motorR
  1534   002418  6E1D               	movwf	(turnRight45@mR+1)^0,c
  1535   00241A  EC17  F02A         	call	_turnRight45	;wreg free
  1536   00241E                     
  1537                           ;main.c: 69:         turnRight45(&motorL, &motorR);
  1538   00241E  0E7B               	movlw	low _motorL
  1539   002420  6E1A               	movwf	turnRight45@mL^0,c
  1540   002422  0E01               	movlw	high _motorL
  1541   002424  6E1B               	movwf	(turnRight45@mL+1)^0,c
  1542   002426  0E72               	movlw	low _motorR
  1543   002428  6E1C               	movwf	turnRight45@mR^0,c
  1544   00242A  0E01               	movlw	high _motorR
  1545   00242C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  1546   00242E  EC17  F02A         	call	_turnRight45	;wreg free
  1547   002432                     l5540:
  1548                           
  1549                           ;main.c: 64:     while (PORTFbits.RF3){
  1550   002432  B68E               	btfsc	142,3,c	;volatile
  1551   002434  EF1E  F012         	goto	u5551
  1552   002438  EF20  F012         	goto	u5550
  1553   00243C                     u5551:
  1554   00243C  EFE4  F011         	goto	l5530
  1555   002440                     u5550:
  1556   002440                     l393:
  1557   002440  B48E               	btfsc	142,2,c	;volatile
  1558   002442  EF25  F012         	goto	u5561
  1559   002446  EF27  F012         	goto	u5560
  1560   00244A                     u5561:
  1561   00244A  EF20  F012         	goto	l393
  1562   00244E                     u5560:
  1563   00244E                     
  1564                           ;main.c: 73:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1565   00244E  0E52               	movlw	82
  1566   002450  0100               	movlb	0	; () banked
  1567   002452  6FD2               	movwf	(??_main+1)& (0+255),b
  1568   002454  0E2B               	movlw	43
  1569   002456  6FD1               	movwf	??_main& (0+255),b
  1570   002458  0E00               	movlw	0
  1571   00245A                     u5777:
  1572   00245A  2EE8               	decfsz	wreg,f,c
  1573   00245C  D7FE               	bra	u5777
  1574   00245E  2FD1               	decfsz	??_main& (0+255),f,b
  1575   002460  D7FC               	bra	u5777
  1576   002462  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1577   002464  D7FA               	bra	u5777
  1578   002466  F000               	nop	
  1579                           
  1580                           ;main.c: 74:     while (run_flag)
  1581   002468  EF4D  F014         	goto	l5650
  1582   00246C                     l5544:
  1583                           
  1584                           ; BSR set to: 1
  1585                           ;main.c: 75:     {;main.c: 76:         Forwardhalfblock(&motorL,&motorR);
  1586   00246C  0E7B               	movlw	low _motorL
  1587   00246E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1588   002470  0E01               	movlw	high _motorL
  1589   002472  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1590   002474  0E72               	movlw	low _motorR
  1591   002476  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1592   002478  0E01               	movlw	high _motorR
  1593   00247A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1594   00247C  EC90  F029         	call	_Forwardhalfblock	;wreg free
  1595   002480                     
  1596                           ;main.c: 77:         move_count++;
  1597   002480  0101               	movlb	1	; () banked
  1598   002482  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1599   002484  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1600   002486                     
  1601                           ; BSR set to: 1
  1602                           ;main.c: 78:         WayBack[move_count]=0;
  1603   002486  0E00               	movlw	low _WayBack
  1604   002488  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1605   00248A  6ED9               	movwf	fsr2l,c
  1606   00248C  0E03               	movlw	high _WayBack
  1607   00248E  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1608   002490  6EDA               	movwf	fsr2h,c
  1609   002492  0E00               	movlw	0
  1610   002494  6EDF               	movwf	indf2,c
  1611   002496                     
  1612                           ; BSR set to: 1
  1613                           ;main.c: 82:         readColours(&vals);
  1614   002496  0E84               	movlw	low _vals
  1615   002498  6E0C               	movwf	readColours@vals^0,c
  1616   00249A  0E01               	movlw	high _vals
  1617   00249C  6E0D               	movwf	(readColours@vals+1)^0,c
  1618   00249E  EC07  F029         	call	_readColours	;wreg free
  1619   0024A2                     
  1620                           ;main.c: 85:         colour_rel(&vals, &rel);
  1621   0024A2  0E84               	movlw	low _vals
  1622   0024A4  6E4B               	movwf	colour_rel@vals^0,c
  1623   0024A6  0E01               	movlw	high _vals
  1624   0024A8  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1625   0024AA  0E66               	movlw	low _rel
  1626   0024AC  6E4D               	movwf	colour_rel@rel^0,c
  1627   0024AE  0E01               	movlw	high _rel
  1628   0024B0  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1629   0024B2  EC9B  F01A         	call	_colour_rel	;wreg free
  1630   0024B6                     
  1631                           ;main.c: 88:         if (vals.L>=2200){
  1632   0024B6  0101               	movlb	1	; () banked
  1633   0024B8  BF8B               	btfsc	(_vals+7)& (0+255),7,b
  1634   0024BA  EF68  F012         	goto	u5571
  1635   0024BE  0E98               	movlw	152
  1636   0024C0  5D8A               	subwf	(_vals+6)& (0+255),w,b
  1637   0024C2  0E08               	movlw	8
  1638   0024C4  598B               	subwfb	(_vals+7)& (0+255),w,b
  1639   0024C6  A0D8               	btfss	status,0,c
  1640   0024C8  EF68  F012         	goto	u5571
  1641   0024CC  EF6A  F012         	goto	u5570
  1642   0024D0                     u5571:
  1643   0024D0  EF2C  F014         	goto	l5646
  1644   0024D4                     u5570:
  1645   0024D4                     
  1646                           ; BSR set to: 1
  1647                           ;main.c: 89:             Forwardhalfblock(&motorL,&motorR);
  1648   0024D4  0E7B               	movlw	low _motorL
  1649   0024D6  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1650   0024D8  0E01               	movlw	high _motorL
  1651   0024DA  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1652   0024DC  0E72               	movlw	low _motorR
  1653   0024DE  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1654   0024E0  0E01               	movlw	high _motorR
  1655   0024E2  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1656   0024E4  EC90  F029         	call	_Forwardhalfblock	;wreg free
  1657                           
  1658                           ;main.c: 91:             stop(&motorL, &motorR);
  1659   0024E8  0E7B               	movlw	low _motorL
  1660   0024EA  6E14               	movwf	stop@mL^0,c
  1661   0024EC  0E01               	movlw	high _motorL
  1662   0024EE  6E15               	movwf	(stop@mL+1)^0,c
  1663   0024F0  0E72               	movlw	low _motorR
  1664   0024F2  6E16               	movwf	stop@mR^0,c
  1665   0024F4  0E01               	movlw	high _motorR
  1666   0024F6  6E17               	movwf	(stop@mR+1)^0,c
  1667   0024F8  ECEB  F027         	call	_stop	;wreg free
  1668   0024FC                     
  1669                           ;main.c: 92:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1670   0024FC  0E11               	movlw	17
  1671   0024FE  0100               	movlb	0	; () banked
  1672   002500  6FD2               	movwf	(??_main+1)& (0+255),b
  1673   002502  0E3C               	movlw	60
  1674   002504  6FD1               	movwf	??_main& (0+255),b
  1675   002506  0ECB               	movlw	203
  1676   002508                     u5787:
  1677   002508  2EE8               	decfsz	wreg,f,c
  1678   00250A  D7FE               	bra	u5787
  1679   00250C  2FD1               	decfsz	??_main& (0+255),f,b
  1680   00250E  D7FC               	bra	u5787
  1681   002510  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1682   002512  D7FA               	bra	u5787
  1683                           
  1684                           ;main.c: 97:             while (consecuitive<20){
  1685   002514  EFBF  F012         	goto	l5572
  1686   002518                     l5560:
  1687                           
  1688                           ; BSR set to: 1
  1689                           ;main.c: 98:                 int colour = Colour_decider(&vals, &rel);
  1690   002518  0E84               	movlw	low _vals
  1691   00251A  6E4B               	movwf	Colour_decider@vals^0,c
  1692   00251C  0E01               	movlw	high _vals
  1693   00251E  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1694   002520  0E66               	movlw	low _rel
  1695   002522  6E4D               	movwf	Colour_decider@rel^0,c
  1696   002524  0E01               	movlw	high _rel
  1697   002526  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1698   002528  EC2D  F007         	call	_Colour_decider	;wreg free
  1699   00252C  C04B  F1F4         	movff	?_Colour_decider,main@colour
  1700   002530  C04C  F1F5         	movff	?_Colour_decider+1,main@colour+1
  1701   002534                     
  1702                           ;main.c: 99:                 if (colour==prev_colour){
  1703   002534  0101               	movlb	1	; () banked
  1704   002536  51F6               	movf	main@prev_colour& (0+255),w,b
  1705   002538  19F4               	xorwf	main@colour& (0+255),w,b
  1706   00253A  E107               	bnz	u5581
  1707   00253C  51F7               	movf	(main@prev_colour+1)& (0+255),w,b
  1708   00253E  19F5               	xorwf	(main@colour+1)& (0+255),w,b
  1709   002540  A4D8               	btfss	status,2,c
  1710   002542  EFA5  F012         	goto	u5581
  1711   002546  EFA7  F012         	goto	u5580
  1712   00254A                     u5581:
  1713   00254A  EFAB  F012         	goto	l5566
  1714   00254E                     u5580:
  1715   00254E                     
  1716                           ; BSR set to: 1
  1717                           ;main.c: 100:                     consecuitive++;
  1718   00254E  4BF2               	infsnz	main@consecuitive& (0+255),f,b
  1719   002550  2BF3               	incf	(main@consecuitive+1)& (0+255),f,b
  1720                           
  1721                           ;main.c: 101:                 }
  1722   002552  EFAF  F012         	goto	l5568
  1723   002556                     l5566:
  1724                           
  1725                           ; BSR set to: 1
  1726                           ;main.c: 103:                     consecuitive=0;
  1727   002556  0E00               	movlw	0
  1728   002558  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1729   00255A  0E00               	movlw	0
  1730   00255C  6FF2               	movwf	main@consecuitive& (0+255),b
  1731   00255E                     l5568:
  1732                           
  1733                           ; BSR set to: 1
  1734                           ;main.c: 105:                 prev_colour=colour;
  1735   00255E  C1F4  F1F6         	movff	main@colour,main@prev_colour
  1736   002562  C1F5  F1F7         	movff	main@colour+1,main@prev_colour+1
  1737   002566                     
  1738                           ; BSR set to: 1
  1739                           ;main.c: 106:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1740   002566  0E05               	movlw	5
  1741   002568  0100               	movlb	0	; () banked
  1742   00256A  6FD2               	movwf	(??_main+1)& (0+255),b
  1743   00256C  0E0F               	movlw	15
  1744   00256E  6FD1               	movwf	??_main& (0+255),b
  1745   002570  0EF1               	movlw	241
  1746   002572                     u5797:
  1747   002572  2EE8               	decfsz	wreg,f,c
  1748   002574  D7FE               	bra	u5797
  1749   002576  2FD1               	decfsz	??_main& (0+255),f,b
  1750   002578  D7FC               	bra	u5797
  1751   00257A  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1752   00257C  D7FA               	bra	u5797
  1753   00257E                     l5572:
  1754                           
  1755                           ;main.c: 97:             while (consecuitive<20){
  1756   00257E  0101               	movlb	1	; () banked
  1757   002580  BFF3               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1758   002582  EFCC  F012         	goto	u5591
  1759   002586  51F3               	movf	(main@consecuitive+1)& (0+255),w,b
  1760   002588  E109               	bnz	u5590
  1761   00258A  0E14               	movlw	20
  1762   00258C  5DF2               	subwf	main@consecuitive& (0+255),w,b
  1763   00258E  A0D8               	btfss	status,0,c
  1764   002590  EFCC  F012         	goto	u5591
  1765   002594  EFCE  F012         	goto	u5590
  1766   002598                     u5591:
  1767   002598  EF8C  F012         	goto	l5560
  1768   00259C                     u5590:
  1769   00259C                     
  1770                           ; BSR set to: 1
  1771                           ;main.c: 108:             consecuitive=0;
  1772   00259C  0E00               	movlw	0
  1773   00259E  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1774   0025A0  0E00               	movlw	0
  1775   0025A2  6FF2               	movwf	main@consecuitive& (0+255),b
  1776   0025A4                     
  1777                           ; BSR set to: 1
  1778                           ;main.c: 110:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",r
      +                          el.R, rel.G,rel.B,vals.L, prev_colour);
  1779   0025A4  0E8C               	movlw	low main@buf
  1780   0025A6  0100               	movlb	0	; () banked
  1781   0025A8  6FB0               	movwf	sprintf@s& (0+255),b
  1782   0025AA  0E01               	movlw	high main@buf
  1783   0025AC  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1784   0025AE  0E01               	movlw	low STR_1
  1785   0025B0  6FB2               	movwf	sprintf@fmt& (0+255),b
  1786   0025B2  0E0E               	movlw	high STR_1
  1787   0025B4  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1788   0025B6  C166  F0B4         	movff	_rel,?_sprintf+4
  1789   0025BA  C167  F0B5         	movff	_rel+1,?_sprintf+5
  1790   0025BE  C168  F0B6         	movff	_rel+2,?_sprintf+6
  1791   0025C2  C169  F0B7         	movff	_rel+3,?_sprintf+7
  1792   0025C6  C16A  F0B8         	movff	_rel+4,?_sprintf+8
  1793   0025CA  C16B  F0B9         	movff	_rel+5,?_sprintf+9
  1794   0025CE  C16C  F0BA         	movff	_rel+6,?_sprintf+10
  1795   0025D2  C16D  F0BB         	movff	_rel+7,?_sprintf+11
  1796   0025D6  C16E  F0BC         	movff	_rel+8,?_sprintf+12
  1797   0025DA  C16F  F0BD         	movff	_rel+9,?_sprintf+13
  1798   0025DE  C170  F0BE         	movff	_rel+10,?_sprintf+14
  1799   0025E2  C171  F0BF         	movff	_rel+11,?_sprintf+15
  1800   0025E6  C18A  F0C0         	movff	_vals+6,?_sprintf+16
  1801   0025EA  C18B  F0C1         	movff	_vals+7,?_sprintf+17
  1802   0025EE  C1F6  F0C2         	movff	main@prev_colour,?_sprintf+18
  1803   0025F2  C1F7  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1804   0025F6  EC9A  F02A         	call	_sprintf	;wreg free
  1805   0025FA                     
  1806                           ;main.c: 111:             sendStringSerial4(buf);
  1807   0025FA  0E8C               	movlw	low main@buf
  1808   0025FC  6E02               	movwf	sendStringSerial4@string^0,c
  1809   0025FE  0E01               	movlw	high main@buf
  1810   002600  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1811   002602  EC98  F02D         	call	_sendStringSerial4	;wreg free
  1812   002606                     
  1813                           ;main.c: 113:             if (prev_colour==1){
  1814   002606  0101               	movlb	1	; () banked
  1815   002608  05F6               	decf	main@prev_colour& (0+255),w,b
  1816   00260A  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1817   00260C  A4D8               	btfss	status,2,c
  1818   00260E  EF0B  F013         	goto	u5601
  1819   002612  EF0D  F013         	goto	u5600
  1820   002616                     u5601:
  1821   002616  EF24  F013         	goto	l5588
  1822   00261A                     u5600:
  1823   00261A                     
  1824                           ; BSR set to: 1
  1825                           ;main.c: 114:                 RedMove(&motorL, &motorR);
  1826   00261A  0E7B               	movlw	low _motorL
  1827   00261C  6E20               	movwf	RedMove@mL^0,c
  1828   00261E  0E01               	movlw	high _motorL
  1829   002620  6E21               	movwf	(RedMove@mL+1)^0,c
  1830   002622  0E72               	movlw	low _motorR
  1831   002624  6E22               	movwf	RedMove@mR^0,c
  1832   002626  0E01               	movlw	high _motorR
  1833   002628  6E23               	movwf	(RedMove@mR+1)^0,c
  1834   00262A  EC3E  F02D         	call	_RedMove	;wreg free
  1835   00262E                     
  1836                           ;main.c: 115:                 move_count++;
  1837   00262E  0101               	movlb	1	; () banked
  1838   002630  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1839   002632  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1840   002634                     
  1841                           ; BSR set to: 1
  1842                           ;main.c: 116:                 WayBack[move_count]=1;
  1843   002634  0E00               	movlw	low _WayBack
  1844   002636  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1845   002638  6ED9               	movwf	fsr2l,c
  1846   00263A  0E03               	movlw	high _WayBack
  1847   00263C  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1848   00263E  6EDA               	movwf	fsr2h,c
  1849   002640  0E01               	movlw	1
  1850   002642  6EDF               	movwf	indf2,c
  1851                           
  1852                           ;main.c: 117:             }
  1853   002644  EF4D  F014         	goto	l5650
  1854   002648                     l5588:
  1855                           
  1856                           ; BSR set to: 1
  1857   002648  0E02               	movlw	2
  1858   00264A  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1859   00264C  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1860   00264E  A4D8               	btfss	status,2,c
  1861   002650  EF2C  F013         	goto	u5611
  1862   002654  EF2E  F013         	goto	u5610
  1863   002658                     u5611:
  1864   002658  EF45  F013         	goto	l5596
  1865   00265C                     u5610:
  1866   00265C                     
  1867                           ; BSR set to: 1
  1868                           ;main.c: 119:                 OrangeMove(&motorL, &motorR);
  1869   00265C  0E7B               	movlw	low _motorL
  1870   00265E  6E20               	movwf	OrangeMove@mL^0,c
  1871   002660  0E01               	movlw	high _motorL
  1872   002662  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1873   002664  0E72               	movlw	low _motorR
  1874   002666  6E22               	movwf	OrangeMove@mR^0,c
  1875   002668  0E01               	movlw	high _motorR
  1876   00266A  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1877   00266C  ECC3  F02A         	call	_OrangeMove	;wreg free
  1878   002670                     
  1879                           ;main.c: 120:                 move_count++;
  1880   002670  0101               	movlb	1	; () banked
  1881   002672  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1882   002674  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1883   002676                     
  1884                           ; BSR set to: 1
  1885                           ;main.c: 121:                 WayBack[move_count]=2;
  1886   002676  0E00               	movlw	low _WayBack
  1887   002678  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1888   00267A  6ED9               	movwf	fsr2l,c
  1889   00267C  0E03               	movlw	high _WayBack
  1890   00267E  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1891   002680  6EDA               	movwf	fsr2h,c
  1892   002682  0E02               	movlw	2
  1893   002684  6EDF               	movwf	indf2,c
  1894                           
  1895                           ;main.c: 122:             }
  1896   002686  EF4D  F014         	goto	l5650
  1897   00268A                     l5596:
  1898                           
  1899                           ; BSR set to: 1
  1900   00268A  0E03               	movlw	3
  1901   00268C  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1902   00268E  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1903   002690  A4D8               	btfss	status,2,c
  1904   002692  EF4D  F013         	goto	u5621
  1905   002696  EF4F  F013         	goto	u5620
  1906   00269A                     u5621:
  1907   00269A  EF66  F013         	goto	l5604
  1908   00269E                     u5620:
  1909   00269E                     
  1910                           ; BSR set to: 1
  1911                           ;main.c: 124:                 YellowMove(&motorL, &motorR);
  1912   00269E  0E7B               	movlw	low _motorL
  1913   0026A0  6E20               	movwf	YellowMove@mL^0,c
  1914   0026A2  0E01               	movlw	high _motorL
  1915   0026A4  6E21               	movwf	(YellowMove@mL+1)^0,c
  1916   0026A6  0E72               	movlw	low _motorR
  1917   0026A8  6E22               	movwf	YellowMove@mR^0,c
  1918   0026AA  0E01               	movlw	high _motorR
  1919   0026AC  6E23               	movwf	(YellowMove@mR+1)^0,c
  1920   0026AE  EC3E  F02B         	call	_YellowMove	;wreg free
  1921   0026B2                     
  1922                           ;main.c: 125:                 move_count++;
  1923   0026B2  0101               	movlb	1	; () banked
  1924   0026B4  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1925   0026B6  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1926   0026B8                     
  1927                           ; BSR set to: 1
  1928                           ;main.c: 126:                 WayBack[move_count]=3;
  1929   0026B8  0E00               	movlw	low _WayBack
  1930   0026BA  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1931   0026BC  6ED9               	movwf	fsr2l,c
  1932   0026BE  0E03               	movlw	high _WayBack
  1933   0026C0  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1934   0026C2  6EDA               	movwf	fsr2h,c
  1935   0026C4  0E03               	movlw	3
  1936   0026C6  6EDF               	movwf	indf2,c
  1937                           
  1938                           ;main.c: 127:             }
  1939   0026C8  EF4D  F014         	goto	l5650
  1940   0026CC                     l5604:
  1941                           
  1942                           ; BSR set to: 1
  1943   0026CC  0E04               	movlw	4
  1944   0026CE  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1945   0026D0  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1946   0026D2  A4D8               	btfss	status,2,c
  1947   0026D4  EF6E  F013         	goto	u5631
  1948   0026D8  EF70  F013         	goto	u5630
  1949   0026DC                     u5631:
  1950   0026DC  EF87  F013         	goto	l5612
  1951   0026E0                     u5630:
  1952   0026E0                     
  1953                           ; BSR set to: 1
  1954                           ;main.c: 129:                 BlueMove(&motorL, &motorR);
  1955   0026E0  0E7B               	movlw	low _motorL
  1956   0026E2  6E20               	movwf	BlueMove@mL^0,c
  1957   0026E4  0E01               	movlw	high _motorL
  1958   0026E6  6E21               	movwf	(BlueMove@mL+1)^0,c
  1959   0026E8  0E72               	movlw	low _motorR
  1960   0026EA  6E22               	movwf	BlueMove@mR^0,c
  1961   0026EC  0E01               	movlw	high _motorR
  1962   0026EE  6E23               	movwf	(BlueMove@mR+1)^0,c
  1963   0026F0  ECD4  F028         	call	_BlueMove	;wreg free
  1964   0026F4                     
  1965                           ;main.c: 130:                 move_count++;
  1966   0026F4  0101               	movlb	1	; () banked
  1967   0026F6  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1968   0026F8  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1969   0026FA                     
  1970                           ; BSR set to: 1
  1971                           ;main.c: 131:                 WayBack[move_count]=4;
  1972   0026FA  0E00               	movlw	low _WayBack
  1973   0026FC  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1974   0026FE  6ED9               	movwf	fsr2l,c
  1975   002700  0E03               	movlw	high _WayBack
  1976   002702  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1977   002704  6EDA               	movwf	fsr2h,c
  1978   002706  0E04               	movlw	4
  1979   002708  6EDF               	movwf	indf2,c
  1980                           
  1981                           ;main.c: 132:             }
  1982   00270A  EF4D  F014         	goto	l5650
  1983   00270E                     l5612:
  1984                           
  1985                           ; BSR set to: 1
  1986   00270E  0E05               	movlw	5
  1987   002710  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1988   002712  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1989   002714  A4D8               	btfss	status,2,c
  1990   002716  EF8F  F013         	goto	u5641
  1991   00271A  EF91  F013         	goto	u5640
  1992   00271E                     u5641:
  1993   00271E  EFA8  F013         	goto	l5620
  1994   002722                     u5640:
  1995   002722                     
  1996                           ; BSR set to: 1
  1997                           ;main.c: 134:                 GreenMove(&motorL, &motorR);
  1998   002722  0E7B               	movlw	low _motorL
  1999   002724  6E20               	movwf	GreenMove@mL^0,c
  2000   002726  0E01               	movlw	high _motorL
  2001   002728  6E21               	movwf	(GreenMove@mL+1)^0,c
  2002   00272A  0E72               	movlw	low _motorR
  2003   00272C  6E22               	movwf	GreenMove@mR^0,c
  2004   00272E  0E01               	movlw	high _motorR
  2005   002730  6E23               	movwf	(GreenMove@mR+1)^0,c
  2006   002732  EC5D  F02D         	call	_GreenMove	;wreg free
  2007   002736                     
  2008                           ;main.c: 135:                 move_count++;
  2009   002736  0101               	movlb	1	; () banked
  2010   002738  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2011   00273A  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2012   00273C                     
  2013                           ; BSR set to: 1
  2014                           ;main.c: 136:                 WayBack[move_count]=5;
  2015   00273C  0E00               	movlw	low _WayBack
  2016   00273E  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2017   002740  6ED9               	movwf	fsr2l,c
  2018   002742  0E03               	movlw	high _WayBack
  2019   002744  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2020   002746  6EDA               	movwf	fsr2h,c
  2021   002748  0E05               	movlw	5
  2022   00274A  6EDF               	movwf	indf2,c
  2023                           
  2024                           ;main.c: 137:             }
  2025   00274C  EF4D  F014         	goto	l5650
  2026   002750                     l5620:
  2027                           
  2028                           ; BSR set to: 1
  2029   002750  0E06               	movlw	6
  2030   002752  19F6               	xorwf	main@prev_colour& (0+255),w,b
  2031   002754  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2032   002756  A4D8               	btfss	status,2,c
  2033   002758  EFB0  F013         	goto	u5651
  2034   00275C  EFB2  F013         	goto	u5650
  2035   002760                     u5651:
  2036   002760  EFC9  F013         	goto	l5628
  2037   002764                     u5650:
  2038   002764                     
  2039                           ; BSR set to: 1
  2040                           ;main.c: 139:                 LightBlueMove(&motorL, &motorR);
  2041   002764  0E7B               	movlw	low _motorL
  2042   002766  6E20               	movwf	LightBlueMove@mL^0,c
  2043   002768  0E01               	movlw	high _motorL
  2044   00276A  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2045   00276C  0E72               	movlw	low _motorR
  2046   00276E  6E22               	movwf	LightBlueMove@mR^0,c
  2047   002770  0E01               	movlw	high _motorR
  2048   002772  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2049   002774  ECEC  F02A         	call	_LightBlueMove	;wreg free
  2050   002778                     
  2051                           ;main.c: 140:                 move_count++;
  2052   002778  0101               	movlb	1	; () banked
  2053   00277A  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2054   00277C  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2055   00277E                     
  2056                           ; BSR set to: 1
  2057                           ;main.c: 141:                 WayBack[move_count]=6;
  2058   00277E  0E00               	movlw	low _WayBack
  2059   002780  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2060   002782  6ED9               	movwf	fsr2l,c
  2061   002784  0E03               	movlw	high _WayBack
  2062   002786  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2063   002788  6EDA               	movwf	fsr2h,c
  2064   00278A  0E06               	movlw	6
  2065   00278C  6EDF               	movwf	indf2,c
  2066                           
  2067                           ;main.c: 142:             }
  2068   00278E  EF4D  F014         	goto	l5650
  2069   002792                     l5628:
  2070                           
  2071                           ; BSR set to: 1
  2072   002792  0E07               	movlw	7
  2073   002794  19F6               	xorwf	main@prev_colour& (0+255),w,b
  2074   002796  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2075   002798  A4D8               	btfss	status,2,c
  2076   00279A  EFD1  F013         	goto	u5661
  2077   00279E  EFD3  F013         	goto	u5660
  2078   0027A2                     u5661:
  2079   0027A2  EFEA  F013         	goto	l5636
  2080   0027A6                     u5660:
  2081   0027A6                     
  2082                           ; BSR set to: 1
  2083                           ;main.c: 144:                 PinkMove(&motorL, &motorR);
  2084   0027A6  0E7B               	movlw	low _motorL
  2085   0027A8  6E20               	movwf	PinkMove@mL^0,c
  2086   0027AA  0E01               	movlw	high _motorL
  2087   0027AC  6E21               	movwf	(PinkMove@mL+1)^0,c
  2088   0027AE  0E72               	movlw	low _motorR
  2089   0027B0  6E22               	movwf	PinkMove@mR^0,c
  2090   0027B2  0E01               	movlw	high _motorR
  2091   0027B4  6E23               	movwf	(PinkMove@mR+1)^0,c
  2092   0027B6  EC67  F02B         	call	_PinkMove	;wreg free
  2093   0027BA                     
  2094                           ;main.c: 145:                 move_count++;
  2095   0027BA  0101               	movlb	1	; () banked
  2096   0027BC  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2097   0027BE  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2098   0027C0                     
  2099                           ; BSR set to: 1
  2100                           ;main.c: 146:                 WayBack[move_count]=7;
  2101   0027C0  0E00               	movlw	low _WayBack
  2102   0027C2  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2103   0027C4  6ED9               	movwf	fsr2l,c
  2104   0027C6  0E03               	movlw	high _WayBack
  2105   0027C8  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2106   0027CA  6EDA               	movwf	fsr2h,c
  2107   0027CC  0E07               	movlw	7
  2108   0027CE  6EDF               	movwf	indf2,c
  2109                           
  2110                           ;main.c: 147:             }
  2111   0027D0  EF4D  F014         	goto	l5650
  2112   0027D4                     l5636:
  2113                           
  2114                           ; BSR set to: 1
  2115   0027D4  0E0A               	movlw	10
  2116   0027D6  19F6               	xorwf	main@prev_colour& (0+255),w,b
  2117   0027D8  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2118   0027DA  A4D8               	btfss	status,2,c
  2119   0027DC  EFF2  F013         	goto	u5671
  2120   0027E0  EFF4  F013         	goto	u5670
  2121   0027E4                     u5671:
  2122   0027E4  EF00  F014         	goto	l5640
  2123   0027E8                     u5670:
  2124   0027E8                     
  2125                           ; BSR set to: 1
  2126                           ;main.c: 149:                 RetryMove(&motorL, &motorR);
  2127   0027E8  0E7B               	movlw	low _motorL
  2128   0027EA  6E1A               	movwf	RetryMove@mL^0,c
  2129   0027EC  0E01               	movlw	high _motorL
  2130   0027EE  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2131   0027F0  0E72               	movlw	low _motorR
  2132   0027F2  6E1C               	movwf	RetryMove@mR^0,c
  2133   0027F4  0E01               	movlw	high _motorR
  2134   0027F6  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2135   0027F8  ECAA  F027         	call	_RetryMove	;wreg free
  2136                           
  2137                           ;main.c: 150:             }
  2138   0027FC  EF4D  F014         	goto	l5650
  2139   002800                     l5640:
  2140                           
  2141                           ; BSR set to: 1
  2142   002800  51F6               	movf	main@prev_colour& (0+255),w,b
  2143   002802  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2144   002804  A4D8               	btfss	status,2,c
  2145   002806  EF07  F014         	goto	u5681
  2146   00280A  EF09  F014         	goto	u5680
  2147   00280E                     u5681:
  2148   00280E  EF2A  F014         	goto	l415
  2149   002812                     u5680:
  2150   002812                     
  2151                           ; BSR set to: 1
  2152                           ;main.c: 152:                 BlueMove(&motorL, &motorR);
  2153   002812  0E7B               	movlw	low _motorL
  2154   002814  6E20               	movwf	BlueMove@mL^0,c
  2155   002816  0E01               	movlw	high _motorL
  2156   002818  6E21               	movwf	(BlueMove@mL+1)^0,c
  2157   00281A  0E72               	movlw	low _motorR
  2158   00281C  6E22               	movwf	BlueMove@mR^0,c
  2159   00281E  0E01               	movlw	high _motorR
  2160   002820  6E23               	movwf	(BlueMove@mR+1)^0,c
  2161   002822  ECD4  F028         	call	_BlueMove	;wreg free
  2162                           
  2163                           ;main.c: 153:                 go_Home(WayBack);
  2164   002826  0E00               	movlw	low _WayBack
  2165   002828  6E24               	movwf	go_Home@WayBack^0,c
  2166   00282A  0E03               	movlw	high _WayBack
  2167   00282C  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2168   00282E  ECFD  F01F         	call	_go_Home	;wreg free
  2169                           
  2170                           ;main.c: 154:                 stop(&motorL, &motorR);
  2171   002832  0E7B               	movlw	low _motorL
  2172   002834  6E14               	movwf	stop@mL^0,c
  2173   002836  0E01               	movlw	high _motorL
  2174   002838  6E15               	movwf	(stop@mL+1)^0,c
  2175   00283A  0E72               	movlw	low _motorR
  2176   00283C  6E16               	movwf	stop@mR^0,c
  2177   00283E  0E01               	movlw	high _motorR
  2178   002840  6E17               	movwf	(stop@mR+1)^0,c
  2179   002842  ECEB  F027         	call	_stop	;wreg free
  2180   002846                     
  2181                           ;main.c: 155:                 run_flag=0;
  2182   002846  0E00               	movlw	0
  2183   002848  0101               	movlb	1	; () banked
  2184   00284A  6FF1               	movwf	(main@run_flag+1)& (0+255),b
  2185   00284C  0E00               	movlw	0
  2186   00284E  6FF0               	movwf	main@run_flag& (0+255),b
  2187   002850  EF4D  F014         	goto	l5650
  2188   002854                     l415:
  2189                           
  2190                           ; BSR set to: 1
  2191   002854  EF4D  F014         	goto	l5650
  2192   002858                     l5646:
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;main.c: 161:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals
      +                          .G,vals.B,vals.L);
  2196   002858  0E8C               	movlw	low main@buf
  2197   00285A  0100               	movlb	0	; () banked
  2198   00285C  6FB0               	movwf	sprintf@s& (0+255),b
  2199   00285E  0E01               	movlw	high main@buf
  2200   002860  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2201   002862  0E2E               	movlw	low STR_2
  2202   002864  6FB2               	movwf	sprintf@fmt& (0+255),b
  2203   002866  0E0E               	movlw	high STR_2
  2204   002868  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2205   00286A  C184  F0B4         	movff	_vals,?_sprintf+4
  2206   00286E  C185  F0B5         	movff	_vals+1,?_sprintf+5
  2207   002872  C186  F0B6         	movff	_vals+2,?_sprintf+6
  2208   002876  C187  F0B7         	movff	_vals+3,?_sprintf+7
  2209   00287A  C188  F0B8         	movff	_vals+4,?_sprintf+8
  2210   00287E  C189  F0B9         	movff	_vals+5,?_sprintf+9
  2211   002882  C18A  F0BA         	movff	_vals+6,?_sprintf+10
  2212   002886  C18B  F0BB         	movff	_vals+7,?_sprintf+11
  2213   00288A  EC9A  F02A         	call	_sprintf	;wreg free
  2214   00288E                     
  2215                           ;main.c: 162:             sendStringSerial4(buf);
  2216   00288E  0E8C               	movlw	low main@buf
  2217   002890  6E02               	movwf	sendStringSerial4@string^0,c
  2218   002892  0E01               	movlw	high main@buf
  2219   002894  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2220   002896  EC98  F02D         	call	_sendStringSerial4	;wreg free
  2221   00289A                     l5650:
  2222                           
  2223                           ;main.c: 74:     while (run_flag)
  2224   00289A  0101               	movlb	1	; () banked
  2225   00289C  51F0               	movf	main@run_flag& (0+255),w,b
  2226   00289E  11F1               	iorwf	(main@run_flag+1)& (0+255),w,b
  2227   0028A0  A4D8               	btfss	status,2,c
  2228   0028A2  EF55  F014         	goto	u5691
  2229   0028A6  EF57  F014         	goto	u5690
  2230   0028AA                     u5691:
  2231   0028AA  EF36  F012         	goto	l5544
  2232   0028AE                     u5690:
  2233   0028AE                     
  2234                           ; BSR set to: 1
  2235   0028AE  EF07  F000         	goto	start
  2236   0028B2                     __end_of_main:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _sprintf *****************
  2240 ;; Defined at:
  2241 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2244 ;;		 -> main@buf(100), 
  2245 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2246 ;;		 -> STR_2(34), STR_1(45), 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2249 ;;  ap              2  100[BANK0 ] PTR void [1]
  2250 ;;		 -> ?_sprintf(2), 
  2251 ;;  ret             2    0        int 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  2   80[BANK0 ] int 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2261 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;Total ram usage:       33 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 8
  2268 ;; This function calls:
  2269 ;;		_vfprintf
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text1
  2276   005534                     __ptext1:
  2277                           	callstack 0
  2278   005534                     _sprintf:
  2279                           	callstack 22
  2280   005534  0EB4               	movlw	low (?_sprintf+4)
  2281   005536  0100               	movlb	0	; () banked
  2282   005538  6FC4               	movwf	sprintf@ap& (0+255),b
  2283   00553A  0E00               	movlw	high (?_sprintf+4)
  2284   00553C  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2285   00553E  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2286   005542  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2287   005546                     
  2288                           ; BSR set to: 0
  2289   005546  0E00               	movlw	0
  2290   005548  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2291   00554A  0E00               	movlw	0
  2292   00554C  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2293   00554E                     
  2294                           ; BSR set to: 0
  2295   00554E  0E00               	movlw	0
  2296   005550  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2297   005552  0E00               	movlw	0
  2298   005554  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2299   005556                     
  2300                           ; BSR set to: 0
  2301   005556  0EC6               	movlw	low sprintf@f
  2302   005558  6FA8               	movwf	vfprintf@fp& (0+255),b
  2303   00555A  0E00               	movlw	high sprintf@f
  2304   00555C  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2305   00555E  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2306   005562  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2307   005566  0EC4               	movlw	low sprintf@ap
  2308   005568  6FAC               	movwf	vfprintf@ap& (0+255),b
  2309   00556A  0E00               	movlw	high sprintf@ap
  2310   00556C  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2311   00556E  EC6F  F02A         	call	_vfprintf	;wreg free
  2312   005572  0100               	movlb	0	; () banked
  2313   005574  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2314   005576  25B0               	addwf	sprintf@s& (0+255),w,b
  2315   005578  6ED9               	movwf	fsr2l,c
  2316   00557A  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2317   00557C  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2318   00557E  6EDA               	movwf	fsr2h,c
  2319   005580  0E00               	movlw	0
  2320   005582  6EDF               	movwf	indf2,c
  2321   005584                     
  2322                           ; BSR set to: 0
  2323   005584  0012               	return		;funcret
  2324   005586                     __end_of_sprintf:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _vfprintf *****************
  2328 ;; Defined at:
  2329 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2332 ;;		 -> sprintf@f(11), 
  2333 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2334 ;;		 -> STR_2(34), STR_1(45), 
  2335 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2336 ;;		 -> sprintf@ap(2), 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2339 ;;		 -> STR_2(34), STR_1(45), 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2   72[BANK0 ] int 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2352 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2353 ;;Total ram usage:        8 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 7
  2356 ;; This function calls:
  2357 ;;		_vfpfcnvrt
  2358 ;; This function is called by:
  2359 ;;		_sprintf
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text2
  2364   0054DE                     __ptext2:
  2365                           	callstack 0
  2366   0054DE                     _vfprintf:
  2367                           	callstack 22
  2368   0054DE                     
  2369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2370   0054DE  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2371   0054E2  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2374   0054E6  EF84  F02A         	goto	l5060
  2375   0054EA                     l5058:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2378   0054EA  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2379   0054EE  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2380   0054F2  0EAE               	movlw	low vfprintf@cfmt
  2381   0054F4  0100               	movlb	0	; () banked
  2382   0054F6  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2383   0054F8  0E00               	movlw	high vfprintf@cfmt
  2384   0054FA  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2385   0054FC  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2386   005500  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2387   005504  EC32  F01C         	call	_vfpfcnvrt	;wreg free
  2388   005508                     l5060:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2391   005508  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2392   00550C  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2393   005510                     	if	0	;tblptru may be non-zero
  2394   005510                     	endif
  2395   005510                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2396   005510  0E00               	movlw	low (__mediumconst shr (0+16))
  2397   005512  6EF8               	movwf	tblptru,c
  2398   005514                     	endif
  2399   005514  0008               	tblrd		*
  2400   005516  50F5               	movf	tablat,w,c
  2401   005518  0900               	iorlw	0
  2402   00551A  A4D8               	btfss	status,2,c
  2403   00551C  EF92  F02A         	goto	u5031
  2404   005520  EF94  F02A         	goto	u5030
  2405   005524                     u5031:
  2406   005524  EF75  F02A         	goto	l5058
  2407   005528                     u5030:
  2408   005528                     
  2409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2410   005528  0E00               	movlw	0
  2411   00552A  0100               	movlb	0	; () banked
  2412   00552C  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2413   00552E  0E00               	movlw	0
  2414   005530  6FA8               	movwf	?_vfprintf& (0+255),b
  2415   005532                     
  2416                           ; BSR set to: 0
  2417   005532  0012               	return		;funcret
  2418   005534                     __end_of_vfprintf:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _vfpfcnvrt *****************
  2422 ;; Defined at:
  2423 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2426 ;;		 -> sprintf@f(11), 
  2427 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2428 ;;		 -> vfprintf@cfmt(2), 
  2429 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2430 ;;		 -> sprintf@ap(2), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  convarg         8   61[BANK0 ] struct .
  2433 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2434 ;;		 -> STR_2(34), STR_1(45), 
  2435 ;;  i               2    0        int 
  2436 ;;  done            2    0        int 
  2437 ;;  c               1   69[BANK0 ] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2447 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;Total ram usage:       19 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 6
  2454 ;; This function calls:
  2455 ;;		_dtoa
  2456 ;;		_efgtoa
  2457 ;;		_fputc
  2458 ;; This function is called by:
  2459 ;;		_vfprintf
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text3
  2464   003864                     __ptext3:
  2465                           	callstack 0
  2466   003864                     _vfpfcnvrt:
  2467                           	callstack 22
  2468   003864                     
  2469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2470   003864  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2471   003868  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2472   00386C  CFDE FFF6          	movff	postinc2,tblptrl
  2473   003870  CFDD FFF7          	movff	postdec2,tblptrh
  2474   003874                     	if	0	;tblptru may be non-zero
  2475   003874                     	endif
  2476   003874                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2477   003874  0E00               	movlw	low (__mediumconst shr (0+16))
  2478   003876  6EF8               	movwf	tblptru,c
  2479   003878                     	endif
  2480   003878  0008               	tblrd		*
  2481   00387A  50F5               	movf	tablat,w,c
  2482   00387C  0A25               	xorlw	37
  2483   00387E  A4D8               	btfss	status,2,c
  2484   003880  EF44  F01C         	goto	u4881
  2485   003884  EF46  F01C         	goto	u4880
  2486   003888                     u4881:
  2487   003888  EF9E  F01D         	goto	l4918
  2488   00388C                     u4880:
  2489   00388C                     
  2490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2491   00388C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2492   003890  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2493   003894  2ADE               	incf	postinc2,f,c
  2494   003896  0E00               	movlw	0
  2495   003898  22DD               	addwfc	postdec2,f,c
  2496   00389A                     
  2497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2498   00389A  0E00               	movlw	0
  2499   00389C  0100               	movlb	0	; () banked
  2500   00389E  6FE8               	movwf	(_width+1)& (0+255),b
  2501   0038A0  0E00               	movlw	0
  2502   0038A2  6FE7               	movwf	_width& (0+255),b
  2503   0038A4  C0E7  F0ED         	movff	_width,_flags
  2504   0038A8                     
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2507   0038A8  69E9               	setf	_prec& (0+255),b
  2508   0038AA  69EA               	setf	(_prec+1)& (0+255),b
  2509   0038AC                     
  2510                           ; BSR set to: 0
  2511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2512   0038AC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2513   0038B0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2514   0038B4  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2515   0038B8  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2516   0038BC                     
  2517                           ; BSR set to: 0
  2518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2519   0038BC  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2520   0038C0  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2521   0038C4                     	if	0	;tblptru may be non-zero
  2522   0038C4                     	endif
  2523   0038C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2524   0038C4  0E00               	movlw	low (__mediumconst shr (0+16))
  2525   0038C6  6EF8               	movwf	tblptru,c
  2526   0038C8                     	endif
  2527   0038C8  0008               	tblrd		*
  2528   0038CA  50F5               	movf	tablat,w,c
  2529   0038CC  0A64               	xorlw	100
  2530   0038CE  B4D8               	btfsc	status,2,c
  2531   0038D0  EF6C  F01C         	goto	u4891
  2532   0038D4  EF6E  F01C         	goto	u4890
  2533   0038D8                     u4891:
  2534   0038D8  EF7E  F01C         	goto	l4874
  2535   0038DC                     u4890:
  2536   0038DC                     
  2537                           ; BSR set to: 0
  2538   0038DC  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2539   0038E0  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2540   0038E4                     	if	0	;tblptru may be non-zero
  2541   0038E4                     	endif
  2542   0038E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2543   0038E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2544   0038E6  6EF8               	movwf	tblptru,c
  2545   0038E8                     	endif
  2546   0038E8  0008               	tblrd		*
  2547   0038EA  50F5               	movf	tablat,w,c
  2548   0038EC  0A69               	xorlw	105
  2549   0038EE  A4D8               	btfss	status,2,c
  2550   0038F0  EF7C  F01C         	goto	u4901
  2551   0038F4  EF7E  F01C         	goto	u4900
  2552   0038F8                     u4901:
  2553   0038F8  EFC1  F01C         	goto	l4880
  2554   0038FC                     u4900:
  2555   0038FC                     l4874:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2559   0038FC  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2560   003900  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2561   003904  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2562   003908  0E02               	movlw	2
  2563   00390A  26DE               	addwf	postinc2,f,c
  2564   00390C  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2565   003910  0E00               	movlw	0
  2566   003912  22DD               	addwfc	postdec2,f,c
  2567   003914  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2568   003918  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2569   00391C  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2570   003920  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2571   003924  0E00               	movlw	0
  2572   003926  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2573   003928  0EFF               	movlw	-1
  2574   00392A  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2575   00392C  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2576   00392E  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2577   003930  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2578   003932  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2579   003934  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2582   003936  0E01               	movlw	1
  2583   003938  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2584   00393A  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2585   00393C  0E00               	movlw	0
  2586   00393E  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2587   003940  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2588   003942  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2589   003946  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2590   00394A  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2591   00394E  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2592   003952                     
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2595   003952  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2596   003956  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2597   00395A  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2598   00395E  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2599   003962  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2600   003966  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2601   00396A  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2602   00396E  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2603   003972  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2604   003976  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2605   00397A  ECB5  F01D         	call	_dtoa	;wreg free
  2606   00397E  EFB4  F01D         	goto	l1419
  2607   003982                     l4880:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2611   003982  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2612   003986  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2613   00398A  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2614   00398E  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2615   003992                     
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2618   003992  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2619   003996  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2620   00399A                     	if	0	;tblptru may be non-zero
  2621   00399A                     	endif
  2622   00399A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2623   00399A  0E00               	movlw	low (__mediumconst shr (0+16))
  2624   00399C  6EF8               	movwf	tblptru,c
  2625   00399E                     	endif
  2626   00399E  0008               	tblrd		*
  2627   0039A0  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2630   0039A4  EFE0  F01C         	goto	l4892
  2631   0039A8                     l4884:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2635   0039A8  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2636   0039AA  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2639   0039AC  EFF9  F01C         	goto	l4894
  2640   0039B0                     l4886:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2644   0039B0  0E6C               	movlw	108
  2645   0039B2  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2648   0039B4  EFF9  F01C         	goto	l4894
  2649   0039B8                     l4888:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2653   0039B8  0E00               	movlw	0
  2654   0039BA  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2657   0039BC  EFF9  F01C         	goto	l4894
  2658   0039C0                     l4892:
  2659                           
  2660                           ; BSR set to: 0
  2661   0039C0  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2662   0039C2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2663   0039C4  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2664                           
  2665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2666                           ; Switch size 1, requested type "simple"
  2667                           ; Number of cases is 1, Range of values is 0 to 0
  2668                           ; switch strategies available:
  2669                           ; Name         Instructions Cycles
  2670                           ; simple_byte            4     3 (average)
  2671                           ;	Chosen strategy is simple_byte
  2672   0039C6  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2673   0039C8  0A00               	xorlw	0	; case 0
  2674   0039CA  B4D8               	btfsc	status,2,c
  2675   0039CC  EFEA  F01C         	goto	l5792
  2676   0039D0  EFDC  F01C         	goto	l4888
  2677   0039D4                     l5792:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ; Switch size 1, requested type "simple"
  2681                           ; Number of cases is 3, Range of values is 76 to 108
  2682                           ; switch strategies available:
  2683                           ; Name         Instructions Cycles
  2684                           ; simple_byte           10     6 (average)
  2685                           ;	Chosen strategy is simple_byte
  2686   0039D4  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2687   0039D6  0A4C               	xorlw	76	; case 76
  2688   0039D8  B4D8               	btfsc	status,2,c
  2689   0039DA  EFD4  F01C         	goto	l4884
  2690   0039DE  0A2A               	xorlw	42	; case 102
  2691   0039E0  B4D8               	btfsc	status,2,c
  2692   0039E2  EFD8  F01C         	goto	l4886
  2693   0039E6  0A0A               	xorlw	10	; case 108
  2694   0039E8  B4D8               	btfsc	status,2,c
  2695   0039EA  EFD4  F01C         	goto	l4884
  2696   0039EE  EFDC  F01C         	goto	l4888
  2697   0039F2                     l4894:
  2698                           
  2699                           ; BSR set to: 0
  2700   0039F2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2701   0039F6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2702   0039FA                     	if	0	;tblptru may be non-zero
  2703   0039FA                     	endif
  2704   0039FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2705   0039FA  0E00               	movlw	low (__mediumconst shr (0+16))
  2706   0039FC  6EF8               	movwf	tblptru,c
  2707   0039FE                     	endif
  2708   0039FE  0008               	tblrd		*
  2709   003A00  50F5               	movf	tablat,w,c
  2710   003A02  0A66               	xorlw	102
  2711   003A04  A4D8               	btfss	status,2,c
  2712   003A06  EF07  F01D         	goto	u4911
  2713   003A0A  EF09  F01D         	goto	u4910
  2714   003A0E                     u4911:
  2715   003A0E  EF95  F01D         	goto	l4914
  2716   003A12                     u4910:
  2717   003A12  EF3F  F01D         	goto	l4902
  2718   003A16                     l4896:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2722   003A16  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2723   003A1A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2724   003A1E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2725   003A22  0E04               	movlw	4
  2726   003A24  26DE               	addwf	postinc2,f,c
  2727   003A26  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2728   003A2A  0E00               	movlw	0
  2729   003A2C  22DD               	addwfc	postdec2,f,c
  2730   003A2E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2731   003A32  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2732   003A36  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2733   003A3A  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2734   003A3E  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2735   003A42  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2738   003A46  EF54  F01D         	goto	l4904
  2739   003A4A                     l4898:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2743   003A4A  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2744   003A4E  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2745   003A52  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2746   003A56  0E04               	movlw	4
  2747   003A58  26DE               	addwf	postinc2,f,c
  2748   003A5A  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2749   003A5E  0E00               	movlw	0
  2750   003A60  22DD               	addwfc	postdec2,f,c
  2751   003A62  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2752   003A66  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2753   003A6A  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2754   003A6E  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2755   003A72  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2756   003A76  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2759   003A7A  EF54  F01D         	goto	l4904
  2760   003A7E                     l4902:
  2761                           
  2762                           ; BSR set to: 0
  2763   003A7E  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2764   003A80  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2765   003A82  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2766                           
  2767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2768                           ; Switch size 1, requested type "simple"
  2769                           ; Number of cases is 1, Range of values is 0 to 0
  2770                           ; switch strategies available:
  2771                           ; Name         Instructions Cycles
  2772                           ; simple_byte            4     3 (average)
  2773                           ;	Chosen strategy is simple_byte
  2774   003A84  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2775   003A86  0A00               	xorlw	0	; case 0
  2776   003A88  B4D8               	btfsc	status,2,c
  2777   003A8A  EF49  F01D         	goto	l5794
  2778   003A8E  EF54  F01D         	goto	l4904
  2779   003A92                     l5794:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ; Switch size 1, requested type "simple"
  2783                           ; Number of cases is 2, Range of values is 76 to 108
  2784                           ; switch strategies available:
  2785                           ; Name         Instructions Cycles
  2786                           ; simple_byte            7     4 (average)
  2787                           ;	Chosen strategy is simple_byte
  2788   003A92  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2789   003A94  0A4C               	xorlw	76	; case 76
  2790   003A96  B4D8               	btfsc	status,2,c
  2791   003A98  EF25  F01D         	goto	l4898
  2792   003A9C  0A20               	xorlw	32	; case 108
  2793   003A9E  B4D8               	btfsc	status,2,c
  2794   003AA0  EF0B  F01D         	goto	l4896
  2795   003AA4  EF54  F01D         	goto	l4904
  2796   003AA8                     l4904:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2800   003AA8  0E01               	movlw	1
  2801   003AAA  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2802   003AAC  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2803   003AAE  0E00               	movlw	0
  2804   003AB0  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2805   003AB2  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2806   003AB4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2807   003AB8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2808   003ABC  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2809   003AC0  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2812   003AC4  EF7D  F01D         	goto	l4912
  2813   003AC8                     l4906:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2817   003AC8  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2818   003ACC  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2819   003AD0  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2820   003AD4  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2821   003AD8  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2822   003ADC  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2823   003AE0  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2824   003AE4  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2825   003AE8                     	if	0	;tblptru may be non-zero
  2826   003AE8                     	endif
  2827   003AE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2828   003AE8  0E00               	movlw	low (__mediumconst shr (0+16))
  2829   003AEA  6EF8               	movwf	tblptru,c
  2830   003AEC                     	endif
  2831   003AEC  0008               	tblrd		*
  2832   003AEE  CFF5 F066          	movff	tablat,efgtoa@c
  2833   003AF2  EC9B  F00C         	call	_efgtoa	;wreg free
  2834   003AF6  EFB4  F01D         	goto	l1419
  2835   003AFA                     l4912:
  2836                           
  2837                           ; BSR set to: 0
  2838   003AFA  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2839   003AFE  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2840   003B02                     	if	0	;tblptru may be non-zero
  2841   003B02                     	endif
  2842   003B02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2843   003B02  0E00               	movlw	low (__mediumconst shr (0+16))
  2844   003B04  6EF8               	movwf	tblptru,c
  2845   003B06                     	endif
  2846   003B06  0008               	tblrd		*
  2847   003B08  50F5               	movf	tablat,w,c
  2848   003B0A  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2849   003B0C  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2850                           
  2851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2852                           ; Switch size 1, requested type "simple"
  2853                           ; Number of cases is 1, Range of values is 0 to 0
  2854                           ; switch strategies available:
  2855                           ; Name         Instructions Cycles
  2856                           ; simple_byte            4     3 (average)
  2857                           ;	Chosen strategy is simple_byte
  2858   003B0E  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2859   003B10  0A00               	xorlw	0	; case 0
  2860   003B12  B4D8               	btfsc	status,2,c
  2861   003B14  EF8E  F01D         	goto	l5796
  2862   003B18  EF95  F01D         	goto	l4914
  2863   003B1C                     l5796:
  2864                           
  2865                           ; BSR set to: 0
  2866                           ; Switch size 1, requested type "simple"
  2867                           ; Number of cases is 1, Range of values is 102 to 102
  2868                           ; switch strategies available:
  2869                           ; Name         Instructions Cycles
  2870                           ; simple_byte            4     3 (average)
  2871                           ;	Chosen strategy is simple_byte
  2872   003B1C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2873   003B1E  0A66               	xorlw	102	; case 102
  2874   003B20  B4D8               	btfsc	status,2,c
  2875   003B22  EF64  F01D         	goto	l4906
  2876   003B26  EF95  F01D         	goto	l4914
  2877   003B2A                     l4914:
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2880   003B2A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2881   003B2E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2882   003B32  2ADE               	incf	postinc2,f,c
  2883   003B34  0E00               	movlw	0
  2884   003B36  22DD               	addwfc	postdec2,f,c
  2885   003B38  EFB4  F01D         	goto	l1419
  2886   003B3C                     l4918:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2889   003B3C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2890   003B40  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2891   003B44  CFDE FFF6          	movff	postinc2,tblptrl
  2892   003B48  CFDD FFF7          	movff	postdec2,tblptrh
  2893   003B4C                     	if	0	;tblptru may be non-zero
  2894   003B4C                     	endif
  2895   003B4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2896   003B4C  0E00               	movlw	low (__mediumconst shr (0+16))
  2897   003B4E  6EF8               	movwf	tblptru,c
  2898   003B50                     	endif
  2899   003B50  0008               	tblrd		*
  2900   003B52  50F5               	movf	tablat,w,c
  2901   003B54  6E01               	movwf	fputc@c^0,c
  2902   003B56  6A02               	clrf	(fputc@c+1)^0,c
  2903   003B58  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2904   003B5C  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2905   003B60  EC70  F025         	call	_fputc	;wreg free
  2906   003B64  EF95  F01D         	goto	l4914
  2907   003B68                     l1419:
  2908   003B68  0012               	return		;funcret
  2909   003B6A                     __end_of_vfpfcnvrt:
  2910                           	callstack 0
  2911                           
  2912 ;; *************** function _efgtoa *****************
  2913 ;; Defined at:
  2914 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2917 ;;		 -> sprintf@f(11), 
  2918 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2919 ;;  c               1    6[BANK0 ] unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  u               4   49[BANK0 ] struct flui
  2922 ;;  g               4   45[BANK0 ] struct flui
  2923 ;;  l               4   38[BANK0 ] struct flui
  2924 ;;  h               4   34[BANK0 ] struct flui
  2925 ;;  ou              4   28[BANK0 ] struct flui
  2926 ;;  n               2   43[BANK0 ] int 
  2927 ;;  i               2   32[BANK0 ] int 
  2928 ;;  w               2   26[BANK0 ] int 
  2929 ;;  e               2   24[BANK0 ] int 
  2930 ;;  m               2   22[BANK0 ] int 
  2931 ;;  d               2   20[BANK0 ] int 
  2932 ;;  t               2   13[BANK0 ] int 
  2933 ;;  p               2   11[BANK0 ] int 
  2934 ;;  ne              2    9[BANK0 ] int 
  2935 ;;  sign            1   42[BANK0 ] unsigned char 
  2936 ;;  nmode           1   19[BANK0 ] unsigned char 
  2937 ;;  mode            1   18[BANK0 ] unsigned char 
  2938 ;;  pp              1   17[BANK0 ] unsigned char 
  2939 ;;  esign           1    0        unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2949 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2950 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;Total ram usage:       53 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 5
  2956 ;; This function calls:
  2957 ;;		___fladd
  2958 ;;		___fldiv
  2959 ;;		___fleq
  2960 ;;		___flge
  2961 ;;		___flmul
  2962 ;;		___flneg
  2963 ;;		___flsub
  2964 ;;		___fltol
  2965 ;;		___fpclassifyf
  2966 ;;		_floorf
  2967 ;;		_labs
  2968 ;;		_memcpy
  2969 ;;		_pad
  2970 ;;		_strcpy
  2971 ;; This function is called by:
  2972 ;;		_vfpfcnvrt
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text4
  2977   001936                     __ptext4:
  2978                           	callstack 0
  2979   001936                     _efgtoa:
  2980                           	callstack 22
  2981   001936                     
  2982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2983   001936  0E00               	movlw	0
  2984   001938  0100               	movlb	0	; () banked
  2985   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  2986   00193C                     
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2989   00193C  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2990   001940  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2991   001944  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2992   001948  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2993   00194C                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2996   00194C  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2997   00194E  EFAD  F00C         	goto	u4540
  2998   001952  EFAB  F00C         	goto	u4541
  2999   001956                     u4541:
  3000   001956  EFC1  F00C         	goto	l4594
  3001   00195A                     u4540:
  3002   00195A                     
  3003                           ; BSR set to: 0
  3004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3005   00195A  0E01               	movlw	1
  3006   00195C  6F8A               	movwf	efgtoa@sign& (0+255),b
  3007   00195E                     
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3010   00195E  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3011   001962  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3012   001966  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3013   00196A  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3014   00196E  EC7C  F02D         	call	___flneg	;wreg free
  3015   001972  C001  F08D         	movff	?___flneg,efgtoa@g
  3016   001976  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3017   00197A  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3018   00197E  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3019   001982                     l4594:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3022   001982  0E00               	movlw	0
  3023   001984  0100               	movlb	0	; () banked
  3024   001986  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3025   001988  0E00               	movlw	0
  3026   00198A  6F8B               	movwf	efgtoa@n& (0+255),b
  3027   00198C                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3030   00198C  C0E7  F07A         	movff	_width,efgtoa@w
  3031   001990  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  3032   001994                     
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3035   001994  518A               	movf	efgtoa@sign& (0+255),w,b
  3036   001996  B4D8               	btfsc	status,2,c
  3037   001998  EFD0  F00C         	goto	u4551
  3038   00199C  EFD2  F00C         	goto	u4550
  3039   0019A0                     u4551:
  3040   0019A0  EFE6  F00C         	goto	l4608
  3041   0019A4                     u4550:
  3042   0019A4                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3045   0019A4  518A               	movf	efgtoa@sign& (0+255),w,b
  3046   0019A6  A4D8               	btfss	status,2,c
  3047   0019A8  EFD8  F00C         	goto	u4561
  3048   0019AC  EFDA  F00C         	goto	u4560
  3049   0019B0                     u4561:
  3050   0019B0  EFE0  F00C         	goto	l4604
  3051   0019B4                     u4560:
  3052   0019B4                     
  3053                           ; BSR set to: 0
  3054   0019B4  0E00               	movlw	0
  3055   0019B6  6F70               	movwf	(_efgtoa$2427+1)& (0+255),b
  3056   0019B8  0E2B               	movlw	43
  3057   0019BA  6F6F               	movwf	_efgtoa$2427& (0+255),b
  3058   0019BC  EFE4  F00C         	goto	l4606
  3059   0019C0                     l4604:
  3060                           
  3061                           ; BSR set to: 0
  3062   0019C0  0E00               	movlw	0
  3063   0019C2  6F70               	movwf	(_efgtoa$2427+1)& (0+255),b
  3064   0019C4  0E2D               	movlw	45
  3065   0019C6  6F6F               	movwf	_efgtoa$2427& (0+255),b
  3066   0019C8                     l4606:
  3067                           
  3068                           ; BSR set to: 0
  3069   0019C8  C06F  F08A         	movff	_efgtoa$2427,efgtoa@sign
  3070   0019CC                     l4608:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3074   0019CC  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3075   0019D0  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3076   0019D4  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3077   0019D8  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3078   0019DC  ECF1  F024         	call	___fpclassifyf	;wreg free
  3079   0019E0  0401               	decf	?___fpclassifyf^0,w,c
  3080   0019E2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3081   0019E4  A4D8               	btfss	status,2,c
  3082   0019E6  EFF7  F00C         	goto	u4571
  3083   0019EA  EFF9  F00C         	goto	u4570
  3084   0019EE                     u4571:
  3085   0019EE  EF2C  F00D         	goto	l4626
  3086   0019F2                     u4570:
  3087   0019F2                     
  3088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3089   0019F2  0100               	movlb	0	; () banked
  3090   0019F4  518A               	movf	efgtoa@sign& (0+255),w,b
  3091   0019F6  B4D8               	btfsc	status,2,c
  3092   0019F8  EF00  F00D         	goto	u4581
  3093   0019FC  EF02  F00D         	goto	u4580
  3094   001A00                     u4581:
  3095   001A00  EF0B  F00D         	goto	l4618
  3096   001A04                     u4580:
  3097   001A04                     
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3100   001A04  C08A  F116         	movff	efgtoa@sign,_dbuf
  3101   001A08                     
  3102                           ; BSR set to: 0
  3103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3104   001A08  077A               	decf	efgtoa@w& (0+255),f,b
  3105   001A0A  A0D8               	btfss	status,0,c
  3106   001A0C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3107   001A0E                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3110   001A0E  0E00               	movlw	0
  3111   001A10  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3112   001A12  0E01               	movlw	1
  3113   001A14  6F8B               	movwf	efgtoa@n& (0+255),b
  3114   001A16                     l4618:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3118   001A16  0E16               	movlw	low _dbuf
  3119   001A18  258B               	addwf	efgtoa@n& (0+255),w,b
  3120   001A1A  6E01               	movwf	strcpy@dest^0,c
  3121   001A1C  0E01               	movlw	high _dbuf
  3122   001A1E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3123   001A20  6E02               	movwf	(strcpy@dest+1)^0,c
  3124   001A22  0E50               	movlw	low STR_3
  3125   001A24  6E03               	movwf	strcpy@src^0,c
  3126   001A26  0E0E               	movlw	high STR_3
  3127   001A28  6E04               	movwf	(strcpy@src+1)^0,c
  3128   001A2A  EC7B  F02C         	call	_strcpy	;wreg free
  3129   001A2E                     l4620:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3132   001A2E  0100               	movlb	0	; () banked
  3133   001A30  0EFD               	movlw	253
  3134   001A32  277A               	addwf	efgtoa@w& (0+255),f,b
  3135   001A34  0EFF               	movlw	255
  3136   001A36  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3137   001A38                     
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3140   001A38  C060  F011         	movff	efgtoa@fp,pad@fp
  3141   001A3C  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3142   001A40  0E16               	movlw	low _dbuf
  3143   001A42  6E13               	movwf	pad@buf^0,c
  3144   001A44  0E01               	movlw	high _dbuf
  3145   001A46  6E14               	movwf	(pad@buf+1)^0,c
  3146   001A48  C07A  F015         	movff	efgtoa@w,pad@p
  3147   001A4C  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3148   001A50  EC2A  F028         	call	_pad	;wreg free
  3149   001A54  EF97  F011         	goto	l1371
  3150   001A58                     l4626:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3153   001A58  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3154   001A5C  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3155   001A60  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3156   001A64  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3157   001A68  ECF1  F024         	call	___fpclassifyf	;wreg free
  3158   001A6C  5001               	movf	?___fpclassifyf^0,w,c
  3159   001A6E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3160   001A70  A4D8               	btfss	status,2,c
  3161   001A72  EF3D  F00D         	goto	u4591
  3162   001A76  EF3F  F00D         	goto	u4590
  3163   001A7A                     u4591:
  3164   001A7A  EF5F  F00D         	goto	l4644
  3165   001A7E                     u4590:
  3166   001A7E                     
  3167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3168   001A7E  0100               	movlb	0	; () banked
  3169   001A80  518A               	movf	efgtoa@sign& (0+255),w,b
  3170   001A82  B4D8               	btfsc	status,2,c
  3171   001A84  EF46  F00D         	goto	u4601
  3172   001A88  EF48  F00D         	goto	u4600
  3173   001A8C                     u4601:
  3174   001A8C  EF51  F00D         	goto	l4636
  3175   001A90                     u4600:
  3176   001A90                     
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3179   001A90  C08A  F116         	movff	efgtoa@sign,_dbuf
  3180   001A94                     
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3183   001A94  077A               	decf	efgtoa@w& (0+255),f,b
  3184   001A96  A0D8               	btfss	status,0,c
  3185   001A98  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3186   001A9A                     
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3189   001A9A  0E00               	movlw	0
  3190   001A9C  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3191   001A9E  0E01               	movlw	1
  3192   001AA0  6F8B               	movwf	efgtoa@n& (0+255),b
  3193   001AA2                     l4636:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3197   001AA2  0E16               	movlw	low _dbuf
  3198   001AA4  258B               	addwf	efgtoa@n& (0+255),w,b
  3199   001AA6  6E01               	movwf	strcpy@dest^0,c
  3200   001AA8  0E01               	movlw	high _dbuf
  3201   001AAA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3202   001AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  3203   001AAE  0E54               	movlw	low STR_6
  3204   001AB0  6E03               	movwf	strcpy@src^0,c
  3205   001AB2  0E0E               	movlw	high STR_6
  3206   001AB4  6E04               	movwf	(strcpy@src+1)^0,c
  3207   001AB6  EC7B  F02C         	call	_strcpy	;wreg free
  3208   001ABA  EF17  F00D         	goto	l4620
  3209   001ABE                     l4644:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3212   001ABE  0E00               	movlw	0
  3213   001AC0  0100               	movlb	0	; () banked
  3214   001AC2  6F91               	movwf	efgtoa@u& (0+255),b
  3215   001AC4  0E00               	movlw	0
  3216   001AC6  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3217   001AC8  0E80               	movlw	128
  3218   001ACA  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3219   001ACC  0E3F               	movlw	63
  3220   001ACE  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3223   001AD0  0E00               	movlw	0
  3224   001AD2  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3225   001AD4  0E00               	movlw	0
  3226   001AD6  6F78               	movwf	efgtoa@e& (0+255),b
  3227   001AD8                     
  3228                           ; BSR set to: 0
  3229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3230   001AD8  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3231   001ADC  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3232   001AE0  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3233   001AE4  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3234   001AE8  0E00               	movlw	0
  3235   001AEA  6E36               	movwf	___fleq@ff2^0,c
  3236   001AEC  0E00               	movlw	0
  3237   001AEE  6E37               	movwf	(___fleq@ff2+1)^0,c
  3238   001AF0  0E00               	movlw	0
  3239   001AF2  6E38               	movwf	(___fleq@ff2+2)^0,c
  3240   001AF4  0E00               	movlw	0
  3241   001AF6  6E39               	movwf	(___fleq@ff2+3)^0,c
  3242   001AF8  ECD5  F025         	call	___fleq	;wreg free
  3243   001AFC  B0D8               	btfsc	status,0,c
  3244   001AFE  EF83  F00D         	goto	u4611
  3245   001B02  EF85  F00D         	goto	u4610
  3246   001B06                     u4611:
  3247   001B06  EF64  F00E         	goto	l1374
  3248   001B0A                     u4610:
  3249   001B0A  EF92  F00D         	goto	l4652
  3250   001B0E                     l1376:
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3253   001B0E  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3254   001B12  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3255   001B16  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3256   001B1A  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3257   001B1E                     
  3258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3259   001B1E  0100               	movlb	0	; () banked
  3260   001B20  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3261   001B22  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3262   001B24                     l4652:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3265   001B24  C091  F011         	movff	efgtoa@u,___flmul@b
  3266   001B28  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3267   001B2C  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3268   001B30  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3269   001B34  0E00               	movlw	0
  3270   001B36  6E15               	movwf	___flmul@a^0,c
  3271   001B38  0E00               	movlw	0
  3272   001B3A  6E16               	movwf	(___flmul@a+1)^0,c
  3273   001B3C  0E20               	movlw	32
  3274   001B3E  6E17               	movwf	(___flmul@a+2)^0,c
  3275   001B40  0E41               	movlw	65
  3276   001B42  6E18               	movwf	(___flmul@a+3)^0,c
  3277   001B44  ECB9  F016         	call	___flmul	;wreg free
  3278   001B48  C011  F07C         	movff	?___flmul,efgtoa@ou
  3279   001B4C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3280   001B50  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3281   001B54  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3282   001B58  0100               	movlb	0	; () banked
  3283   001B5A  517C               	movf	efgtoa@ou& (0+255),w,b
  3284   001B5C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3285   001B5E  6E01               	movwf	labs@a^0,c
  3286   001B60  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3287   001B62  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3288   001B64  6E02               	movwf	(labs@a+1)^0,c
  3289   001B66  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3290   001B68  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3291   001B6A  6E03               	movwf	(labs@a+2)^0,c
  3292   001B6C  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3293   001B6E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3294   001B70  6E04               	movwf	(labs@a+3)^0,c
  3295   001B72  ECA1  F028         	call	_labs	;wreg free
  3296   001B76  BE04               	btfsc	(?_labs+3)^0,7,c
  3297   001B78  EFC9  F00D         	goto	u4621
  3298   001B7C  5004               	movf	(?_labs+3)^0,w,c
  3299   001B7E  1003               	iorwf	(?_labs+2)^0,w,c
  3300   001B80  1002               	iorwf	(?_labs+1)^0,w,c
  3301   001B82  E109               	bnz	u4620
  3302   001B84  0E02               	movlw	2
  3303   001B86  5C01               	subwf	?_labs^0,w,c
  3304   001B88  A0D8               	btfss	status,0,c
  3305   001B8A  EFC9  F00D         	goto	u4621
  3306   001B8E  EFCB  F00D         	goto	u4620
  3307   001B92                     u4621:
  3308   001B92  EF87  F00D         	goto	l1376
  3309   001B96                     u4620:
  3310   001B96  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3311   001B9A  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3312   001B9E  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3313   001BA2  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3314   001BA6  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3315   001BAA  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3316   001BAE  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3317   001BB2  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3318   001BB6  EC6F  F024         	call	___flge	;wreg free
  3319   001BBA  A0D8               	btfss	status,0,c
  3320   001BBC  EFE2  F00D         	goto	u4631
  3321   001BC0  EFE4  F00D         	goto	u4630
  3322   001BC4                     u4631:
  3323   001BC4  EF87  F00D         	goto	l1376
  3324   001BC8                     u4630:
  3325   001BC8                     
  3326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3327   001BC8  0100               	movlb	0	; () banked
  3328   001BCA  5191               	movf	efgtoa@u& (0+255),w,b
  3329   001BCC  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3330   001BCE  6E01               	movwf	labs@a^0,c
  3331   001BD0  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3332   001BD2  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3333   001BD4  6E02               	movwf	(labs@a+1)^0,c
  3334   001BD6  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3335   001BD8  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3336   001BDA  6E03               	movwf	(labs@a+2)^0,c
  3337   001BDC  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3338   001BDE  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3339   001BE0  6E04               	movwf	(labs@a+3)^0,c
  3340   001BE2  ECA1  F028         	call	_labs	;wreg free
  3341   001BE6  BE04               	btfsc	(?_labs+3)^0,7,c
  3342   001BE8  EF03  F00E         	goto	u4640
  3343   001BEC  5004               	movf	(?_labs+3)^0,w,c
  3344   001BEE  1003               	iorwf	(?_labs+2)^0,w,c
  3345   001BF0  1002               	iorwf	(?_labs+1)^0,w,c
  3346   001BF2  E107               	bnz	u4641
  3347   001BF4  0E02               	movlw	2
  3348   001BF6  5C01               	subwf	?_labs^0,w,c
  3349   001BF8  B0D8               	btfsc	status,0,c
  3350   001BFA  EF01  F00E         	goto	u4641
  3351   001BFE  EF03  F00E         	goto	u4640
  3352   001C02                     u4641:
  3353   001C02  EF4B  F00E         	goto	l4670
  3354   001C06                     u4640:
  3355   001C06                     l4660:
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3358   001C06  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3359   001C0A  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3360   001C0E  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3361   001C12  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3364   001C16  EF64  F00E         	goto	l1374
  3365   001C1A                     l4662:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3368   001C1A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3369   001C1E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3370   001C22  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3371   001C26  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3372   001C2A  0E00               	movlw	0
  3373   001C2C  6E36               	movwf	___fldiv@a^0,c
  3374   001C2E  0E00               	movlw	0
  3375   001C30  6E37               	movwf	(___fldiv@a+1)^0,c
  3376   001C32  0E20               	movlw	32
  3377   001C34  6E38               	movwf	(___fldiv@a+2)^0,c
  3378   001C36  0E41               	movlw	65
  3379   001C38  6E39               	movwf	(___fldiv@a+3)^0,c
  3380   001C3A  ECCE  F018         	call	___fldiv	;wreg free
  3381   001C3E  C032  F091         	movff	?___fldiv,efgtoa@u
  3382   001C42  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3383   001C46  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3384   001C4A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3385   001C4E                     
  3386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3387   001C4E  0100               	movlb	0	; () banked
  3388   001C50  0778               	decf	efgtoa@e& (0+255),f,b
  3389   001C52  A0D8               	btfss	status,0,c
  3390   001C54  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3391   001C56                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3394   001C56  5191               	movf	efgtoa@u& (0+255),w,b
  3395   001C58  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3396   001C5A  6E01               	movwf	labs@a^0,c
  3397   001C5C  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3398   001C5E  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3399   001C60  6E02               	movwf	(labs@a+1)^0,c
  3400   001C62  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3401   001C64  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3402   001C66  6E03               	movwf	(labs@a+2)^0,c
  3403   001C68  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3404   001C6A  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3405   001C6C  6E04               	movwf	(labs@a+3)^0,c
  3406   001C6E  ECA1  F028         	call	_labs	;wreg free
  3407   001C72  BE04               	btfsc	(?_labs+3)^0,7,c
  3408   001C74  EF49  F00E         	goto	u4650
  3409   001C78  5004               	movf	(?_labs+3)^0,w,c
  3410   001C7A  1003               	iorwf	(?_labs+2)^0,w,c
  3411   001C7C  1002               	iorwf	(?_labs+1)^0,w,c
  3412   001C7E  E107               	bnz	u4651
  3413   001C80  0E02               	movlw	2
  3414   001C82  5C01               	subwf	?_labs^0,w,c
  3415   001C84  B0D8               	btfsc	status,0,c
  3416   001C86  EF47  F00E         	goto	u4651
  3417   001C8A  EF49  F00E         	goto	u4650
  3418   001C8E                     u4651:
  3419   001C8E  EF4B  F00E         	goto	l4670
  3420   001C92                     u4650:
  3421   001C92  EF03  F00E         	goto	l4660
  3422   001C96                     l4670:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3425   001C96  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3426   001C9A  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3427   001C9E  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3428   001CA2  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3429   001CA6  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3430   001CAA  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3431   001CAE  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3432   001CB2  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3433   001CB6  EC6F  F024         	call	___flge	;wreg free
  3434   001CBA  A0D8               	btfss	status,0,c
  3435   001CBC  EF62  F00E         	goto	u4661
  3436   001CC0  EF64  F00E         	goto	u4660
  3437   001CC4                     u4661:
  3438   001CC4  EF0D  F00E         	goto	l4662
  3439   001CC8                     u4660:
  3440   001CC8                     l1374:
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3443   001CC8  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3446   001CCC  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3447   001CD0                     
  3448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3449   001CD0  0100               	movlb	0	; () banked
  3450   001CD2  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3451   001CD4  EF6E  F00E         	goto	u4671
  3452   001CD8  EF70  F00E         	goto	u4670
  3453   001CDC                     u4671:
  3454   001CDC  EF76  F00E         	goto	l4676
  3455   001CE0                     u4670:
  3456   001CE0                     
  3457                           ; BSR set to: 0
  3458   001CE0  C0E9  F06B         	movff	_prec,efgtoa@p
  3459   001CE4  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3460   001CE8  EF7A  F00E         	goto	l4678
  3461   001CEC                     l4676:
  3462                           
  3463                           ; BSR set to: 0
  3464   001CEC  0E00               	movlw	0
  3465   001CEE  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3466   001CF0  0E06               	movlw	6
  3467   001CF2  6F6B               	movwf	efgtoa@p& (0+255),b
  3468   001CF4                     l4678:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3472   001CF4  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3473   001CF8  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3474   001CFC                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3477   001CFC  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3478   001CFE  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3479   001D00                     
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3482   001D00  0E66               	movlw	102
  3483   001D02  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3484   001D04  A4D8               	btfss	status,2,c
  3485   001D06  EF87  F00E         	goto	u4681
  3486   001D0A  EF89  F00E         	goto	u4680
  3487   001D0E                     u4681:
  3488   001D0E  EFA9  F00E         	goto	l4692
  3489   001D12                     u4680:
  3490   001D12                     
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3493   001D12  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3494   001D14  EF90  F00E         	goto	u4690
  3495   001D18  EF8E  F00E         	goto	u4691
  3496   001D1C                     u4691:
  3497   001D1C  EF9C  F00E         	goto	l4688
  3498   001D20                     u4690:
  3499   001D20                     
  3500                           ; BSR set to: 0
  3501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3502   001D20  0E00               	movlw	0
  3503   001D22  6F91               	movwf	efgtoa@u& (0+255),b
  3504   001D24  0E00               	movlw	0
  3505   001D26  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3506   001D28  0E80               	movlw	128
  3507   001D2A  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3508   001D2C  0E3F               	movlw	63
  3509   001D2E  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3512   001D30  0E00               	movlw	0
  3513   001D32  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3514   001D34  0E00               	movlw	0
  3515   001D36  6F78               	movwf	efgtoa@e& (0+255),b
  3516   001D38                     l4688:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3520   001D38  0E67               	movlw	103
  3521   001D3A  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3522   001D3C  B4D8               	btfsc	status,2,c
  3523   001D3E  EFA3  F00E         	goto	u4701
  3524   001D42  EFA5  F00E         	goto	u4700
  3525   001D46                     u4701:
  3526   001D46  EFA9  F00E         	goto	l4692
  3527   001D4A                     u4700:
  3528   001D4A                     
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3531   001D4A  5178               	movf	efgtoa@e& (0+255),w,b
  3532   001D4C  2776               	addwf	efgtoa@m& (0+255),f,b
  3533   001D4E  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3534   001D50  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3535   001D52                     l4692:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3539   001D52  0E00               	movlw	0
  3540   001D54  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3541   001D56  0E00               	movlw	0
  3542   001D58  6F80               	movwf	efgtoa@i& (0+255),b
  3543   001D5A                     
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3546   001D5A  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3547   001D5E  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3548   001D62  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3549   001D66  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3550   001D6A                     
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3553   001D6A  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3554   001D6E  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3555   001D72  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3556   001D76  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3559   001D7A  EF3A  F00F         	goto	l4706
  3560   001D7E                     l4698:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3564   001D7E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3565   001D82  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3566   001D86  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3567   001D8A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3568   001D8E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3569   001D92  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3570   001D96  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3571   001D9A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3572   001D9E  ECCE  F018         	call	___fldiv	;wreg free
  3573   001DA2  C032  F04B         	movff	?___fldiv,floorf@x
  3574   001DA6  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3575   001DAA  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3576   001DAE  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3577   001DB2  ECF4  F01E         	call	_floorf	;wreg free
  3578   001DB6  C04B  F086         	movff	?_floorf,efgtoa@l
  3579   001DBA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3580   001DBE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3581   001DC2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3584   001DC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3585   001DCA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3586   001DCE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3587   001DD2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3588   001DD6  ECEC  F023         	call	___fltol	;wreg free
  3589   001DDA  C001  F074         	movff	?___fltol,efgtoa@d
  3590   001DDE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3591   001DE2                     
  3592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3593   001DE2  C082  F02A         	movff	efgtoa@h,___flsub@b
  3594   001DE6  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3595   001DEA  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3596   001DEE  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3597   001DF2  C086  F015         	movff	efgtoa@l,___flmul@a
  3598   001DF6  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3599   001DFA  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3600   001DFE  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3601   001E02  C091  F011         	movff	efgtoa@u,___flmul@b
  3602   001E06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3603   001E0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3604   001E0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3605   001E12  ECB9  F016         	call	___flmul	;wreg free
  3606   001E16  C011  F02E         	movff	?___flmul,___flsub@a
  3607   001E1A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3608   001E1E  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3609   001E22  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3610   001E26  EC58  F02C         	call	___flsub	;wreg free
  3611   001E2A  C02A  F082         	movff	?___flsub,efgtoa@h
  3612   001E2E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3613   001E32  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3614   001E36  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3615   001E3A                     
  3616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3617   001E3A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3618   001E3E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3619   001E42  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3620   001E46  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3621   001E4A  0E00               	movlw	0
  3622   001E4C  6E36               	movwf	___fldiv@a^0,c
  3623   001E4E  0E00               	movlw	0
  3624   001E50  6E37               	movwf	(___fldiv@a+1)^0,c
  3625   001E52  0E20               	movlw	32
  3626   001E54  6E38               	movwf	(___fldiv@a+2)^0,c
  3627   001E56  0E41               	movlw	65
  3628   001E58  6E39               	movwf	(___fldiv@a+3)^0,c
  3629   001E5A  ECCE  F018         	call	___fldiv	;wreg free
  3630   001E5E  C032  F091         	movff	?___fldiv,efgtoa@u
  3631   001E62  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3632   001E66  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3633   001E6A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3634   001E6E                     
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3636   001E6E  0100               	movlb	0	; () banked
  3637   001E70  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3638   001E72  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3639   001E74                     l4706:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3643   001E74  5176               	movf	efgtoa@m& (0+255),w,b
  3644   001E76  5D80               	subwf	efgtoa@i& (0+255),w,b
  3645   001E78  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3646   001E7A  0A80               	xorlw	128
  3647   001E7C  6F67               	movwf	??_efgtoa& (0+255),b
  3648   001E7E  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3649   001E80  0A80               	xorlw	128
  3650   001E82  5967               	subwfb	??_efgtoa& (0+255),w,b
  3651   001E84  A0D8               	btfss	status,0,c
  3652   001E86  EF47  F00F         	goto	u4711
  3653   001E8A  EF49  F00F         	goto	u4710
  3654   001E8E                     u4711:
  3655   001E8E  EFBF  F00E         	goto	l4698
  3656   001E92                     u4710:
  3657   001E92                     
  3658                           ; BSR set to: 0
  3659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3660   001E92  C091  F011         	movff	efgtoa@u,___flmul@b
  3661   001E96  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3662   001E9A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3663   001E9E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3664   001EA2  0E00               	movlw	0
  3665   001EA4  6E15               	movwf	___flmul@a^0,c
  3666   001EA6  0E00               	movlw	0
  3667   001EA8  6E16               	movwf	(___flmul@a+1)^0,c
  3668   001EAA  0EA0               	movlw	160
  3669   001EAC  6E17               	movwf	(___flmul@a+2)^0,c
  3670   001EAE  0E40               	movlw	64
  3671   001EB0  6E18               	movwf	(___flmul@a+3)^0,c
  3672   001EB2  ECB9  F016         	call	___flmul	;wreg free
  3673   001EB6  C011  F086         	movff	?___flmul,efgtoa@l
  3674   001EBA  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3675   001EBE  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3676   001EC2  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3677   001EC6                     
  3678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3679   001EC6  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3680   001ECA  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3681   001ECE  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3682   001ED2  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3683   001ED6  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3684   001EDA  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3685   001EDE  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3686   001EE2  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3687   001EE6  EC6F  F024         	call	___flge	;wreg free
  3688   001EEA  B0D8               	btfsc	status,0,c
  3689   001EEC  EF7A  F00F         	goto	u4721
  3690   001EF0  EF7C  F00F         	goto	u4720
  3691   001EF4                     u4721:
  3692   001EF4  EF87  F00F         	goto	l4714
  3693   001EF8                     u4720:
  3694   001EF8                     
  3695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3696   001EF8  0E00               	movlw	0
  3697   001EFA  0100               	movlb	0	; () banked
  3698   001EFC  6F86               	movwf	efgtoa@l& (0+255),b
  3699   001EFE  0E00               	movlw	0
  3700   001F00  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3701   001F02  0E00               	movlw	0
  3702   001F04  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3703   001F06  0E00               	movlw	0
  3704   001F08  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3705                           
  3706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3707   001F0A  EFB0  F00F         	goto	l4720
  3708   001F0E                     l4714:
  3709                           
  3710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3711   001F0E  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3712   001F12  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3713   001F16  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3714   001F1A  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3715   001F1E  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3716   001F22  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3717   001F26  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3718   001F2A  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3719   001F2E  ECD5  F025         	call	___fleq	;wreg free
  3720   001F32  A0D8               	btfss	status,0,c
  3721   001F34  EF9E  F00F         	goto	u4731
  3722   001F38  EFA0  F00F         	goto	u4730
  3723   001F3C                     u4731:
  3724   001F3C  EFB0  F00F         	goto	l4720
  3725   001F40                     u4730:
  3726   001F40  0100               	movlb	0	; () banked
  3727   001F42  B174               	btfsc	efgtoa@d& (0+255),0,b
  3728   001F44  EFA6  F00F         	goto	u4741
  3729   001F48  EFA8  F00F         	goto	u4740
  3730   001F4C                     u4741:
  3731   001F4C  EFB0  F00F         	goto	l4720
  3732   001F50                     u4740:
  3733   001F50                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3736   001F50  0E00               	movlw	0
  3737   001F52  6F86               	movwf	efgtoa@l& (0+255),b
  3738   001F54  0E00               	movlw	0
  3739   001F56  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3740   001F58  0E00               	movlw	0
  3741   001F5A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3742   001F5C  0E00               	movlw	0
  3743   001F5E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3744   001F60                     l4720:
  3745                           
  3746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3747   001F60  C08D  F001         	movff	efgtoa@g,___fladd@b
  3748   001F64  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3749   001F68  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3750   001F6C  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3751   001F70  C086  F005         	movff	efgtoa@l,___fladd@a
  3752   001F74  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3753   001F78  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3754   001F7C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3755   001F80  EC59  F014         	call	___fladd	;wreg free
  3756   001F84  C001  F082         	movff	?___fladd,efgtoa@h
  3757   001F88  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3758   001F8C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3759   001F90  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3760   001F94                     
  3761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3762   001F94  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3763   001F98  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3764   001F9C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3765   001FA0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3766   001FA4  0E00               	movlw	0
  3767   001FA6  6E15               	movwf	___flmul@a^0,c
  3768   001FA8  0E00               	movlw	0
  3769   001FAA  6E16               	movwf	(___flmul@a+1)^0,c
  3770   001FAC  0E20               	movlw	32
  3771   001FAE  6E17               	movwf	(___flmul@a+2)^0,c
  3772   001FB0  0E41               	movlw	65
  3773   001FB2  6E18               	movwf	(___flmul@a+3)^0,c
  3774   001FB4  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3775   001FB8  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3776   001FBC  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3777   001FC0  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3778   001FC4  ECB9  F016         	call	___flmul	;wreg free
  3779   001FC8  C011  F02E         	movff	?___flmul,___flge@ff2
  3780   001FCC  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3781   001FD0  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3782   001FD4  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3783   001FD8  EC6F  F024         	call	___flge	;wreg free
  3784   001FDC  A0D8               	btfss	status,0,c
  3785   001FDE  EFF3  F00F         	goto	u4751
  3786   001FE2  EFF5  F00F         	goto	u4750
  3787   001FE6                     u4751:
  3788   001FE6  EF1E  F010         	goto	l4732
  3789   001FEA                     u4750:
  3790   001FEA                     
  3791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3792   001FEA  0100               	movlb	0	; () banked
  3793   001FEC  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3794   001FEE  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3795   001FF0                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3798   001FF0  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3799   001FF4  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3800   001FF8  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3801   001FFC  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3802   002000  0E00               	movlw	0
  3803   002002  6E15               	movwf	___flmul@a^0,c
  3804   002004  0E00               	movlw	0
  3805   002006  6E16               	movwf	(___flmul@a+1)^0,c
  3806   002008  0E20               	movlw	32
  3807   00200A  6E17               	movwf	(___flmul@a+2)^0,c
  3808   00200C  0E41               	movlw	65
  3809   00200E  6E18               	movwf	(___flmul@a+3)^0,c
  3810   002010  ECB9  F016         	call	___flmul	;wreg free
  3811   002014  C011  F07C         	movff	?___flmul,efgtoa@ou
  3812   002018  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3813   00201C  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3814   002020  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3815   002024                     
  3816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3817   002024  0E66               	movlw	102
  3818   002026  0100               	movlb	0	; () banked
  3819   002028  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3820   00202A  A4D8               	btfss	status,2,c
  3821   00202C  EF1A  F010         	goto	u4761
  3822   002030  EF1C  F010         	goto	u4760
  3823   002034                     u4761:
  3824   002034  EF1E  F010         	goto	l4732
  3825   002038                     u4760:
  3826   002038                     
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3829   002038  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3830   00203A  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3831   00203C                     l4732:
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3834   00203C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3835   002040  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3836   002044  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3837   002048  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3838   00204C                     
  3839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3840   00204C  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3841   002050  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3842   002054                     
  3843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3844   002054  0E00               	movlw	0
  3845   002056  0100               	movlb	0	; () banked
  3846   002058  6F71               	movwf	efgtoa@pp& (0+255),b
  3847   00205A                     
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3850   00205A  0E00               	movlw	0
  3851   00205C  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3852   00205E  0E00               	movlw	0
  3853   002060  6F6D               	movwf	efgtoa@t& (0+255),b
  3854   002062                     
  3855                           ; BSR set to: 0
  3856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3857   002062  0E00               	movlw	0
  3858   002064  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3859   002066  0E00               	movlw	0
  3860   002068  6F80               	movwf	efgtoa@i& (0+255),b
  3861                           
  3862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3863   00206A  EF1C  F011         	goto	l4782
  3864   00206E                     l4742:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3868   00206E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3869   002072  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3870   002076  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3871   00207A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3872   00207E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3873   002082  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3874   002086  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3875   00208A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3876   00208E  ECCE  F018         	call	___fldiv	;wreg free
  3877   002092  C032  F04B         	movff	?___fldiv,floorf@x
  3878   002096  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3879   00209A  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3880   00209E  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3881   0020A2  ECF4  F01E         	call	_floorf	;wreg free
  3882   0020A6  C04B  F086         	movff	?_floorf,efgtoa@l
  3883   0020AA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3884   0020AE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3885   0020B2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3888   0020B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3889   0020BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3890   0020BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3891   0020C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3892   0020C6  ECEC  F023         	call	___fltol	;wreg free
  3893   0020CA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3894   0020CC  EF73  F010         	goto	u4770
  3895   0020D0  5002               	movf	(?___fltol+1)^0,w,c
  3896   0020D2  E107               	bnz	u4771
  3897   0020D4  0E0A               	movlw	10
  3898   0020D6  5C01               	subwf	?___fltol^0,w,c
  3899   0020D8  B0D8               	btfsc	status,0,c
  3900   0020DA  EF71  F010         	goto	u4771
  3901   0020DE  EF73  F010         	goto	u4770
  3902   0020E2                     u4771:
  3903   0020E2  EF83  F010         	goto	l4746
  3904   0020E6                     u4770:
  3905   0020E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3906   0020EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3907   0020EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3908   0020F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3909   0020F6  ECEC  F023         	call	___fltol	;wreg free
  3910   0020FA  C001  F074         	movff	?___fltol,efgtoa@d
  3911   0020FE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3912   002102  EF88  F010         	goto	l1404
  3913   002106                     l4746:
  3914   002106  0E00               	movlw	0
  3915   002108  0100               	movlb	0	; () banked
  3916   00210A  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3917   00210C  0E09               	movlw	9
  3918   00210E  6F74               	movwf	efgtoa@d& (0+255),b
  3919   002110                     l1404:
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3922   002110  0100               	movlb	0	; () banked
  3923   002112  5171               	movf	efgtoa@pp& (0+255),w,b
  3924   002114  A4D8               	btfss	status,2,c
  3925   002116  EF8F  F010         	goto	u4781
  3926   00211A  EF91  F010         	goto	u4780
  3927   00211E                     u4781:
  3928   00211E  EFB9  F010         	goto	l4766
  3929   002122                     u4780:
  3930   002122                     
  3931                           ; BSR set to: 0
  3932   002122  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3933   002124  EF98  F010         	goto	u4790
  3934   002128  EF96  F010         	goto	u4791
  3935   00212C                     u4791:
  3936   00212C  EFB9  F010         	goto	l4766
  3937   002130                     u4790:
  3938   002130                     
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3941   002130  0E16               	movlw	low _dbuf
  3942   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  3943   002134  6ED9               	movwf	fsr2l,c
  3944   002136  0E01               	movlw	high _dbuf
  3945   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3946   00213A  6EDA               	movwf	fsr2h,c
  3947   00213C  0E2E               	movlw	46
  3948   00213E  6EDF               	movwf	indf2,c
  3949   002140                     
  3950                           ; BSR set to: 0
  3951   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3952   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3953   002144                     
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3956   002144  077A               	decf	efgtoa@w& (0+255),f,b
  3957   002146  A0D8               	btfss	status,0,c
  3958   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3959   00214A                     
  3960                           ; BSR set to: 0
  3961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3962   00214A  0E01               	movlw	1
  3963   00214C  6F71               	movwf	efgtoa@pp& (0+255),b
  3964   00214E  EFB9  F010         	goto	l4766
  3965   002152                     l4758:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3969   002152  0E16               	movlw	low _dbuf
  3970   002154  258B               	addwf	efgtoa@n& (0+255),w,b
  3971   002156  6ED9               	movwf	fsr2l,c
  3972   002158  0E01               	movlw	high _dbuf
  3973   00215A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3974   00215C  6EDA               	movwf	fsr2h,c
  3975   00215E  0E30               	movlw	48
  3976   002160  6EDF               	movwf	indf2,c
  3977   002162                     
  3978                           ; BSR set to: 0
  3979   002162  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3980   002164  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3981   002166                     
  3982                           ; BSR set to: 0
  3983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3984   002166  077A               	decf	efgtoa@w& (0+255),f,b
  3985   002168  A0D8               	btfss	status,0,c
  3986   00216A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3987   00216C                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3990   00216C  076D               	decf	efgtoa@t& (0+255),f,b
  3991   00216E  A0D8               	btfss	status,0,c
  3992   002170  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3993   002172                     l4766:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3997   002172  516D               	movf	efgtoa@t& (0+255),w,b
  3998   002174  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3999   002176  A4D8               	btfss	status,2,c
  4000   002178  EFC0  F010         	goto	u4801
  4001   00217C  EFC2  F010         	goto	u4800
  4002   002180                     u4801:
  4003   002180  EFA9  F010         	goto	l4758
  4004   002184                     u4800:
  4005   002184                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4008   002184  0E16               	movlw	low _dbuf
  4009   002186  258B               	addwf	efgtoa@n& (0+255),w,b
  4010   002188  6ED9               	movwf	fsr2l,c
  4011   00218A  0E01               	movlw	high _dbuf
  4012   00218C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4013   00218E  6EDA               	movwf	fsr2h,c
  4014   002190  5174               	movf	efgtoa@d& (0+255),w,b
  4015   002192  0F30               	addlw	48
  4016   002194  6EDF               	movwf	indf2,c
  4017   002196                     
  4018                           ; BSR set to: 0
  4019   002196  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4020   002198  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4021   00219A                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4024   00219A  077A               	decf	efgtoa@w& (0+255),f,b
  4025   00219C  A0D8               	btfss	status,0,c
  4026   00219E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4027   0021A0                     
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4030   0021A0  C082  F02A         	movff	efgtoa@h,___flsub@b
  4031   0021A4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4032   0021A8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4033   0021AC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4034   0021B0  C086  F015         	movff	efgtoa@l,___flmul@a
  4035   0021B4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4036   0021B8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4037   0021BC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4038   0021C0  C091  F011         	movff	efgtoa@u,___flmul@b
  4039   0021C4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4040   0021C8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4041   0021CC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4042   0021D0  ECB9  F016         	call	___flmul	;wreg free
  4043   0021D4  C011  F02E         	movff	?___flmul,___flsub@a
  4044   0021D8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4045   0021DC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4046   0021E0  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4047   0021E4  EC58  F02C         	call	___flsub	;wreg free
  4048   0021E8  C02A  F082         	movff	?___flsub,efgtoa@h
  4049   0021EC  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4050   0021F0  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4051   0021F4  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4052   0021F8                     
  4053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4054   0021F8  C091  F032         	movff	efgtoa@u,___fldiv@b
  4055   0021FC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4056   002200  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4057   002204  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4058   002208  0E00               	movlw	0
  4059   00220A  6E36               	movwf	___fldiv@a^0,c
  4060   00220C  0E00               	movlw	0
  4061   00220E  6E37               	movwf	(___fldiv@a+1)^0,c
  4062   002210  0E20               	movlw	32
  4063   002212  6E38               	movwf	(___fldiv@a+2)^0,c
  4064   002214  0E41               	movlw	65
  4065   002216  6E39               	movwf	(___fldiv@a+3)^0,c
  4066   002218  ECCE  F018         	call	___fldiv	;wreg free
  4067   00221C  C032  F091         	movff	?___fldiv,efgtoa@u
  4068   002220  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4069   002224  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4070   002228  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4071   00222C                     
  4072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4073   00222C  0100               	movlb	0	; () banked
  4074   00222E  0769               	decf	efgtoa@ne& (0+255),f,b
  4075   002230  A0D8               	btfss	status,0,c
  4076   002232  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4077   002234                     
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4080   002234  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4081   002236  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4082   002238                     l4782:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4086   002238  5176               	movf	efgtoa@m& (0+255),w,b
  4087   00223A  5D80               	subwf	efgtoa@i& (0+255),w,b
  4088   00223C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4089   00223E  0A80               	xorlw	128
  4090   002240  6F67               	movwf	??_efgtoa& (0+255),b
  4091   002242  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4092   002244  0A80               	xorlw	128
  4093   002246  5967               	subwfb	??_efgtoa& (0+255),w,b
  4094   002248  B0D8               	btfsc	status,0,c
  4095   00224A  EF29  F011         	goto	u4811
  4096   00224E  EF2B  F011         	goto	u4810
  4097   002252                     u4811:
  4098   002252  EF39  F011         	goto	l4786
  4099   002256                     u4810:
  4100   002256                     
  4101                           ; BSR set to: 0
  4102   002256  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4103   002258  EF37  F011         	goto	u4821
  4104   00225C  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4105   00225E  E109               	bnz	u4820
  4106   002260  0E4B               	movlw	75
  4107   002262  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4108   002264  A0D8               	btfss	status,0,c
  4109   002266  EF37  F011         	goto	u4821
  4110   00226A  EF39  F011         	goto	u4820
  4111   00226E                     u4821:
  4112   00226E  EF37  F010         	goto	l4742
  4113   002272                     u4820:
  4114   002272                     l4786:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4118   002272  0E00               	movlw	0
  4119   002274  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4120   002276  0E4F               	movlw	79
  4121   002278  6F80               	movwf	efgtoa@i& (0+255),b
  4122   00227A                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4125   00227A  0E16               	movlw	low _dbuf
  4126   00227C  2580               	addwf	efgtoa@i& (0+255),w,b
  4127   00227E  6ED9               	movwf	fsr2l,c
  4128   002280  0E01               	movlw	high _dbuf
  4129   002282  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4130   002284  6EDA               	movwf	fsr2h,c
  4131   002286  0E00               	movlw	0
  4132   002288  6EDF               	movwf	indf2,c
  4133   00228A                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4136   00228A  0E16               	movlw	low _dbuf
  4137   00228C  6F67               	movwf	??_efgtoa& (0+255),b
  4138   00228E  0E01               	movlw	high _dbuf
  4139   002290  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4140   002292  518B               	movf	efgtoa@n& (0+255),w,b
  4141   002294  5F67               	subwf	??_efgtoa& (0+255),f,b
  4142   002296  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4143   002298  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4144   00229A  5180               	movf	efgtoa@i& (0+255),w,b
  4145   00229C  2567               	addwf	??_efgtoa& (0+255),w,b
  4146   00229E  6E01               	movwf	memcpy@d1^0,c
  4147   0022A0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4148   0022A2  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4149   0022A4  6E02               	movwf	(memcpy@d1+1)^0,c
  4150   0022A6  0E16               	movlw	low _dbuf
  4151   0022A8  6E03               	movwf	memcpy@s1^0,c
  4152   0022AA  0E01               	movlw	high _dbuf
  4153   0022AC  6E04               	movwf	(memcpy@s1+1)^0,c
  4154   0022AE  C08B  F005         	movff	efgtoa@n,memcpy@n
  4155   0022B2  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4156   0022B6  EC90  F02B         	call	_memcpy	;wreg free
  4157   0022BA                     
  4158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4159   0022BA  0100               	movlb	0	; () banked
  4160   0022BC  518B               	movf	efgtoa@n& (0+255),w,b
  4161   0022BE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4162   0022C0  6F8B               	movwf	efgtoa@n& (0+255),b
  4163   0022C2  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4164   0022C4  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4165   0022C6  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4166   0022C8                     
  4167                           ; BSR set to: 0
  4168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4169   0022C8  518A               	movf	efgtoa@sign& (0+255),w,b
  4170   0022CA  A4D8               	btfss	status,2,c
  4171   0022CC  EF6A  F011         	goto	u4831
  4172   0022D0  EF6D  F011         	goto	u4830
  4173   0022D4                     u4831:
  4174   0022D4  0E01               	movlw	1
  4175   0022D6  EF6E  F011         	goto	u4840
  4176   0022DA                     u4830:
  4177   0022DA  0E00               	movlw	0
  4178   0022DC                     u4840:
  4179   0022DC  6F80               	movwf	efgtoa@i& (0+255),b
  4180   0022DE  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4181   0022E0                     
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4184   0022E0  518A               	movf	efgtoa@sign& (0+255),w,b
  4185   0022E2  B4D8               	btfsc	status,2,c
  4186   0022E4  EF76  F011         	goto	u4851
  4187   0022E8  EF78  F011         	goto	u4850
  4188   0022EC                     u4851:
  4189   0022EC  EF83  F011         	goto	l4800
  4190   0022F0                     u4850:
  4191   0022F0                     
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4194   0022F0  078B               	decf	efgtoa@n& (0+255),f,b
  4195   0022F2  A0D8               	btfss	status,0,c
  4196   0022F4  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4197   0022F6  0E16               	movlw	low _dbuf
  4198   0022F8  258B               	addwf	efgtoa@n& (0+255),w,b
  4199   0022FA  6ED9               	movwf	fsr2l,c
  4200   0022FC  0E01               	movlw	high _dbuf
  4201   0022FE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4202   002300  6EDA               	movwf	fsr2h,c
  4203   002302  C08A  FFDF         	movff	efgtoa@sign,indf2
  4204   002306                     l4800:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4208   002306  5180               	movf	efgtoa@i& (0+255),w,b
  4209   002308  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4210   00230A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4211   00230C  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4212   00230E                     
  4213                           ; BSR set to: 0
  4214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4215   00230E  C060  F011         	movff	efgtoa@fp,pad@fp
  4216   002312  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4217   002316  0E16               	movlw	low _dbuf
  4218   002318  258B               	addwf	efgtoa@n& (0+255),w,b
  4219   00231A  6E13               	movwf	pad@buf^0,c
  4220   00231C  0E01               	movlw	high _dbuf
  4221   00231E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4222   002320  6E14               	movwf	(pad@buf+1)^0,c
  4223   002322  C07A  F015         	movff	efgtoa@w,pad@p
  4224   002326  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4225   00232A  EC2A  F028         	call	_pad	;wreg free
  4226   00232E                     l1371:
  4227   00232E  0012               	return		;funcret
  4228   002330                     __end_of_efgtoa:
  4229                           	callstack 0
  4230                           
  4231 ;; *************** function _strcpy *****************
  4232 ;; Defined at:
  4233 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4236 ;;		 -> dbuf(80), 
  4237 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4238 ;;		 -> STR_6(4), STR_3(4), 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  d               2    6[COMRAM] PTR unsigned char 
  4241 ;;		 -> dbuf(80), 
  4242 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4243 ;;		 -> STR_6(4), STR_3(4), 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2    0[COMRAM] PTR unsigned char 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;Total ram usage:        8 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; Hardware stack levels required when called: 1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_efgtoa
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text5
  4268   0058F6                     __ptext5:
  4269                           	callstack 0
  4270   0058F6                     _strcpy:
  4271                           	callstack 25
  4272   0058F6  C003  F005         	movff	strcpy@src,strcpy@s
  4273   0058FA  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4274   0058FE  C001  F007         	movff	strcpy@dest,strcpy@d
  4275   005902  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4276   005906                     l4412:
  4277   005906  C005  FFF6         	movff	strcpy@s,tblptrl
  4278   00590A  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4279   00590E  4A05               	infsnz	strcpy@s^0,f,c
  4280   005910  2A06               	incf	(strcpy@s+1)^0,f,c
  4281   005912                     	if	0	;tblptru may be non-zero
  4282   005912                     	endif
  4283   005912                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4284   005912  0E00               	movlw	low (__mediumconst shr (0+16))
  4285   005914  6EF8               	movwf	tblptru,c
  4286   005916                     	endif
  4287   005916  C007  FFD9         	movff	strcpy@d,fsr2l
  4288   00591A  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4289   00591E  4A07               	infsnz	strcpy@d^0,f,c
  4290   005920  2A08               	incf	(strcpy@d+1)^0,f,c
  4291   005922  0008               	tblrd		*
  4292   005924  CFF5 FFDF          	movff	tablat,indf2
  4293   005928  50DF               	movf	indf2,w,c
  4294   00592A  A4D8               	btfss	status,2,c
  4295   00592C  EF9A  F02C         	goto	u4191
  4296   005930  EF9C  F02C         	goto	u4190
  4297   005934                     u4191:
  4298   005934  EF83  F02C         	goto	l4412
  4299   005938                     u4190:
  4300   005938  0012               	return		;funcret
  4301   00593A                     __end_of_strcpy:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _memcpy *****************
  4305 ;; Defined at:
  4306 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  d1              2    0[COMRAM] PTR void 
  4309 ;;		 -> dbuf(80), 
  4310 ;;  s1              2    2[COMRAM] PTR const void 
  4311 ;;		 -> dbuf(80), 
  4312 ;;  n               2    4[COMRAM] unsigned int 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4315 ;;		 -> dbuf(80), 
  4316 ;;  d               2    6[COMRAM] PTR unsigned char 
  4317 ;;		 -> dbuf(80), 
  4318 ;;  tmp             1   10[COMRAM] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  2    0[COMRAM] PTR void 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4328 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;Total ram usage:       11 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_efgtoa
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text6
  4343   005720                     __ptext6:
  4344                           	callstack 0
  4345   005720                     _memcpy:
  4346                           	callstack 25
  4347   005720  C003  F009         	movff	memcpy@s1,memcpy@s
  4348   005724  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4349   005728  C001  F007         	movff	memcpy@d1,memcpy@d
  4350   00572C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4351   005730  EFAA  F02B         	goto	l4456
  4352   005734                     l4448:
  4353   005734  C009  FFD9         	movff	memcpy@s,fsr2l
  4354   005738  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4355   00573C  50DF               	movf	indf2,w,c
  4356   00573E  6E0B               	movwf	memcpy@tmp^0,c
  4357   005740  4A09               	infsnz	memcpy@s^0,f,c
  4358   005742  2A0A               	incf	(memcpy@s+1)^0,f,c
  4359   005744  C007  FFD9         	movff	memcpy@d,fsr2l
  4360   005748  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4361   00574C  C00B  FFDF         	movff	memcpy@tmp,indf2
  4362   005750  4A07               	infsnz	memcpy@d^0,f,c
  4363   005752  2A08               	incf	(memcpy@d+1)^0,f,c
  4364   005754                     l4456:
  4365   005754  0605               	decf	memcpy@n^0,f,c
  4366   005756  A0D8               	btfss	status,0,c
  4367   005758  0606               	decf	(memcpy@n+1)^0,f,c
  4368   00575A  2805               	incf	memcpy@n^0,w,c
  4369   00575C  E106               	bnz	u4311
  4370   00575E  2806               	incf	(memcpy@n+1)^0,w,c
  4371   005760  A4D8               	btfss	status,2,c
  4372   005762  EFB5  F02B         	goto	u4311
  4373   005766  EFB7  F02B         	goto	u4310
  4374   00576A                     u4311:
  4375   00576A  EF9A  F02B         	goto	l4448
  4376   00576E                     u4310:
  4377   00576E  0012               	return		;funcret
  4378   005770                     __end_of_memcpy:
  4379                           	callstack 0
  4380                           
  4381 ;; *************** function _labs *****************
  4382 ;; Defined at:
  4383 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  a               4    0[COMRAM] long 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  4    0[COMRAM] long 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4401 ;;Total ram usage:        8 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 1
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_efgtoa
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text7
  4412   005142                     __ptext7:
  4413                           	callstack 0
  4414   005142                     _labs:
  4415                           	callstack 25
  4416   005142  BE04               	btfsc	(labs@a+3)^0,7,c
  4417   005144  EFB0  F028         	goto	u4200
  4418   005148  5004               	movf	(labs@a+3)^0,w,c
  4419   00514A  1003               	iorwf	(labs@a+2)^0,w,c
  4420   00514C  1002               	iorwf	(labs@a+1)^0,w,c
  4421   00514E  E106               	bnz	u4201
  4422   005150  0401               	decf	labs@a^0,w,c
  4423   005152  B0D8               	btfsc	status,0,c
  4424   005154  EFAE  F028         	goto	u4201
  4425   005158  EFB0  F028         	goto	u4200
  4426   00515C                     u4201:
  4427   00515C  EFCB  F028         	goto	l1476
  4428   005160                     u4200:
  4429   005160  C001  F005         	movff	labs@a,??_labs
  4430   005164  C002  F006         	movff	labs@a+1,??_labs+1
  4431   005168  C003  F007         	movff	labs@a+2,??_labs+2
  4432   00516C  C004  F008         	movff	labs@a+3,??_labs+3
  4433   005170  1E05               	comf	??_labs^0,f,c
  4434   005172  1E06               	comf	(??_labs+1)^0,f,c
  4435   005174  1E07               	comf	(??_labs+2)^0,f,c
  4436   005176  1E08               	comf	(??_labs+3)^0,f,c
  4437   005178  2A05               	incf	??_labs^0,f,c
  4438   00517A  0E00               	movlw	0
  4439   00517C  2206               	addwfc	(??_labs+1)^0,f,c
  4440   00517E  2207               	addwfc	(??_labs+2)^0,f,c
  4441   005180  2208               	addwfc	(??_labs+3)^0,f,c
  4442   005182  C005  F001         	movff	??_labs,?_labs
  4443   005186  C006  F002         	movff	??_labs+1,?_labs+1
  4444   00518A  C007  F003         	movff	??_labs+2,?_labs+2
  4445   00518E  C008  F004         	movff	??_labs+3,?_labs+3
  4446   005192  EFD3  F028         	goto	l1479
  4447   005196                     l1476:
  4448   005196  C001  F001         	movff	labs@a,?_labs
  4449   00519A  C002  F002         	movff	labs@a+1,?_labs+1
  4450   00519E  C003  F003         	movff	labs@a+2,?_labs+2
  4451   0051A2  C004  F004         	movff	labs@a+3,?_labs+3
  4452   0051A6                     l1479:
  4453   0051A6  0012               	return		;funcret
  4454   0051A8                     __end_of_labs:
  4455                           	callstack 0
  4456                           
  4457 ;; *************** function _floorf *****************
  4458 ;; Defined at:
  4459 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  x               4   74[COMRAM] float 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  u               4   90[COMRAM] struct .
  4464 ;;  m               4   84[COMRAM] unsigned long 
  4465 ;;  e               2   88[COMRAM] int 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  4   74[COMRAM] float 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;Total ram usage:       20 bytes
  4480 ;; Hardware stack levels used: 1
  4481 ;; Hardware stack levels required when called: 1
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_efgtoa
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text8
  4490   003DE8                     __ptext8:
  4491                           	callstack 0
  4492   003DE8                     _floorf:
  4493                           	callstack 25
  4494   003DE8  C0DF  F05B         	movff	floorf@F526,floorf@u
  4495   003DEC  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4496   003DF0  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4497   003DF4  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4498   003DF8  C04B  F05B         	movff	floorf@x,floorf@u
  4499   003DFC  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4500   003E00  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4501   003E04  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4502   003E08  0E81               	movlw	129
  4503   003E0A  6E4F               	movwf	??_floorf^0,c
  4504   003E0C  0EFF               	movlw	255
  4505   003E0E  6E50               	movwf	(??_floorf+1)^0,c
  4506   003E10  C05B  F051         	movff	floorf@u,??_floorf+2
  4507   003E14  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4508   003E18  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4509   003E1C  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4510   003E20  0E18               	movlw	24
  4511   003E22  EF18  F01F         	goto	u4210
  4512   003E26                     u4215:
  4513   003E26  90D8               	bcf	status,0,c
  4514   003E28  3254               	rrcf	(??_floorf+5)^0,f,c
  4515   003E2A  3253               	rrcf	(??_floorf+4)^0,f,c
  4516   003E2C  3252               	rrcf	(??_floorf+3)^0,f,c
  4517   003E2E  3251               	rrcf	(??_floorf+2)^0,f,c
  4518   003E30                     u4210:
  4519   003E30  2EE8               	decfsz	wreg,f,c
  4520   003E32  EF13  F01F         	goto	u4215
  4521   003E36  5051               	movf	(??_floorf+2)^0,w,c
  4522   003E38  244F               	addwf	??_floorf^0,w,c
  4523   003E3A  6E59               	movwf	floorf@e^0,c
  4524   003E3C  0E00               	movlw	0
  4525   003E3E  2050               	addwfc	(??_floorf+1)^0,w,c
  4526   003E40  6E5A               	movwf	(floorf@e+1)^0,c
  4527   003E42  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4528   003E44  EF2D  F01F         	goto	u4221
  4529   003E48  505A               	movf	(floorf@e+1)^0,w,c
  4530   003E4A  E109               	bnz	u4220
  4531   003E4C  0E17               	movlw	23
  4532   003E4E  5C59               	subwf	floorf@e^0,w,c
  4533   003E50  A0D8               	btfss	status,0,c
  4534   003E52  EF2D  F01F         	goto	u4221
  4535   003E56  EF2F  F01F         	goto	u4220
  4536   003E5A                     u4221:
  4537   003E5A  EF39  F01F         	goto	l4424
  4538   003E5E                     u4220:
  4539   003E5E                     l4422:
  4540   003E5E  C04B  F04B         	movff	floorf@x,?_floorf
  4541   003E62  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4542   003E66  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4543   003E6A  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4544   003E6E  EFFC  F01F         	goto	l1465
  4545   003E72                     l4424:
  4546   003E72  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4547   003E74  EF3E  F01F         	goto	u4231
  4548   003E78  EF40  F01F         	goto	u4230
  4549   003E7C                     u4231:
  4550   003E7C  EFB0  F01F         	goto	l4434
  4551   003E80                     u4230:
  4552   003E80  C059  F04F         	movff	floorf@e,??_floorf
  4553   003E84  0EFF               	movlw	255
  4554   003E86  6E50               	movwf	(??_floorf+1)^0,c
  4555   003E88  0EFF               	movlw	255
  4556   003E8A  6E51               	movwf	(??_floorf+2)^0,c
  4557   003E8C  0E7F               	movlw	127
  4558   003E8E  6E52               	movwf	(??_floorf+3)^0,c
  4559   003E90  0E00               	movlw	0
  4560   003E92  6E53               	movwf	(??_floorf+4)^0,c
  4561   003E94                     u4245:
  4562   003E94  664F               	tstfsz	??_floorf^0,c
  4563   003E96  EF4F  F01F         	goto	u4246
  4564   003E9A  EF57  F01F         	goto	u4247
  4565   003E9E                     u4246:
  4566   003E9E  3453               	rlcf	(??_floorf+4)^0,w,c
  4567   003EA0  3253               	rrcf	(??_floorf+4)^0,f,c
  4568   003EA2  3252               	rrcf	(??_floorf+3)^0,f,c
  4569   003EA4  3251               	rrcf	(??_floorf+2)^0,f,c
  4570   003EA6  3250               	rrcf	(??_floorf+1)^0,f,c
  4571   003EA8  2E4F               	decfsz	??_floorf^0,f,c
  4572   003EAA  EF4A  F01F         	goto	u4245
  4573   003EAE                     u4247:
  4574   003EAE  C050  F055         	movff	??_floorf+1,floorf@m
  4575   003EB2  C051  F056         	movff	??_floorf+2,floorf@m+1
  4576   003EB6  C052  F057         	movff	??_floorf+3,floorf@m+2
  4577   003EBA  C053  F058         	movff	??_floorf+4,floorf@m+3
  4578   003EBE  5055               	movf	floorf@m^0,w,c
  4579   003EC0  145B               	andwf	floorf@u^0,w,c
  4580   003EC2  6E4F               	movwf	??_floorf^0,c
  4581   003EC4  5056               	movf	(floorf@m+1)^0,w,c
  4582   003EC6  145C               	andwf	(floorf@u+1)^0,w,c
  4583   003EC8  6E50               	movwf	(??_floorf+1)^0,c
  4584   003ECA  5057               	movf	(floorf@m+2)^0,w,c
  4585   003ECC  145D               	andwf	(floorf@u+2)^0,w,c
  4586   003ECE  6E51               	movwf	(??_floorf+2)^0,c
  4587   003ED0  5058               	movf	(floorf@m+3)^0,w,c
  4588   003ED2  145E               	andwf	(floorf@u+3)^0,w,c
  4589   003ED4  6E52               	movwf	(??_floorf+3)^0,c
  4590   003ED6  504F               	movf	??_floorf^0,w,c
  4591   003ED8  1050               	iorwf	(??_floorf+1)^0,w,c
  4592   003EDA  1051               	iorwf	(??_floorf+2)^0,w,c
  4593   003EDC  1052               	iorwf	(??_floorf+3)^0,w,c
  4594   003EDE  A4D8               	btfss	status,2,c
  4595   003EE0  EF74  F01F         	goto	u4251
  4596   003EE4  EF76  F01F         	goto	u4250
  4597   003EE8                     u4251:
  4598   003EE8  EF78  F01F         	goto	l4430
  4599   003EEC                     u4250:
  4600   003EEC  EF2F  F01F         	goto	l4422
  4601   003EF0                     l4430:
  4602   003EF0  C05B  F04F         	movff	floorf@u,??_floorf
  4603   003EF4  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4604   003EF8  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4605   003EFC  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4606   003F00  0E20               	movlw	32
  4607   003F02  EF88  F01F         	goto	u4260
  4608   003F06                     u4265:
  4609   003F06  90D8               	bcf	status,0,c
  4610   003F08  3252               	rrcf	(??_floorf+3)^0,f,c
  4611   003F0A  3251               	rrcf	(??_floorf+2)^0,f,c
  4612   003F0C  3250               	rrcf	(??_floorf+1)^0,f,c
  4613   003F0E  324F               	rrcf	??_floorf^0,f,c
  4614   003F10                     u4260:
  4615   003F10  2EE8               	decfsz	wreg,f,c
  4616   003F12  EF83  F01F         	goto	u4265
  4617   003F16  504F               	movf	??_floorf^0,w,c
  4618   003F18  1050               	iorwf	(??_floorf+1)^0,w,c
  4619   003F1A  1051               	iorwf	(??_floorf+2)^0,w,c
  4620   003F1C  1052               	iorwf	(??_floorf+3)^0,w,c
  4621   003F1E  B4D8               	btfsc	status,2,c
  4622   003F20  EF94  F01F         	goto	u4271
  4623   003F24  EF96  F01F         	goto	u4270
  4624   003F28                     u4271:
  4625   003F28  EF9E  F01F         	goto	l1468
  4626   003F2C                     u4270:
  4627   003F2C  5055               	movf	floorf@m^0,w,c
  4628   003F2E  265B               	addwf	floorf@u^0,f,c
  4629   003F30  5056               	movf	(floorf@m+1)^0,w,c
  4630   003F32  225C               	addwfc	(floorf@u+1)^0,f,c
  4631   003F34  5057               	movf	(floorf@m+2)^0,w,c
  4632   003F36  225D               	addwfc	(floorf@u+2)^0,f,c
  4633   003F38  5058               	movf	(floorf@m+3)^0,w,c
  4634   003F3A  225E               	addwfc	(floorf@u+3)^0,f,c
  4635   003F3C                     l1468:
  4636   003F3C  1C55               	comf	floorf@m^0,w,c
  4637   003F3E  6E4F               	movwf	??_floorf^0,c
  4638   003F40  1C56               	comf	(floorf@m+1)^0,w,c
  4639   003F42  6E50               	movwf	(??_floorf+1)^0,c
  4640   003F44  1C57               	comf	(floorf@m+2)^0,w,c
  4641   003F46  6E51               	movwf	(??_floorf+2)^0,c
  4642   003F48  1C58               	comf	(floorf@m+3)^0,w,c
  4643   003F4A  6E52               	movwf	(??_floorf+3)^0,c
  4644   003F4C  504F               	movf	??_floorf^0,w,c
  4645   003F4E  165B               	andwf	floorf@u^0,f,c
  4646   003F50  5050               	movf	(??_floorf+1)^0,w,c
  4647   003F52  165C               	andwf	(floorf@u+1)^0,f,c
  4648   003F54  5051               	movf	(??_floorf+2)^0,w,c
  4649   003F56  165D               	andwf	(floorf@u+2)^0,f,c
  4650   003F58  5052               	movf	(??_floorf+3)^0,w,c
  4651   003F5A  165E               	andwf	(floorf@u+3)^0,f,c
  4652   003F5C  EFF4  F01F         	goto	l4442
  4653   003F60                     l4434:
  4654   003F60  C05B  F04F         	movff	floorf@u,??_floorf
  4655   003F64  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4656   003F68  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4657   003F6C  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4658   003F70  0E20               	movlw	32
  4659   003F72  EFC0  F01F         	goto	u4280
  4660   003F76                     u4285:
  4661   003F76  90D8               	bcf	status,0,c
  4662   003F78  3252               	rrcf	(??_floorf+3)^0,f,c
  4663   003F7A  3251               	rrcf	(??_floorf+2)^0,f,c
  4664   003F7C  3250               	rrcf	(??_floorf+1)^0,f,c
  4665   003F7E  324F               	rrcf	??_floorf^0,f,c
  4666   003F80                     u4280:
  4667   003F80  2EE8               	decfsz	wreg,f,c
  4668   003F82  EFBB  F01F         	goto	u4285
  4669   003F86  504F               	movf	??_floorf^0,w,c
  4670   003F88  1050               	iorwf	(??_floorf+1)^0,w,c
  4671   003F8A  1051               	iorwf	(??_floorf+2)^0,w,c
  4672   003F8C  1052               	iorwf	(??_floorf+3)^0,w,c
  4673   003F8E  A4D8               	btfss	status,2,c
  4674   003F90  EFCC  F01F         	goto	u4291
  4675   003F94  EFCE  F01F         	goto	u4290
  4676   003F98                     u4291:
  4677   003F98  EFD8  F01F         	goto	l4438
  4678   003F9C                     u4290:
  4679   003F9C  0E00               	movlw	0
  4680   003F9E  6E5B               	movwf	floorf@u^0,c
  4681   003FA0  0E00               	movlw	0
  4682   003FA2  6E5C               	movwf	(floorf@u+1)^0,c
  4683   003FA4  0E00               	movlw	0
  4684   003FA6  6E5D               	movwf	(floorf@u+2)^0,c
  4685   003FA8  0E00               	movlw	0
  4686   003FAA  6E5E               	movwf	(floorf@u+3)^0,c
  4687   003FAC  EFF4  F01F         	goto	l4442
  4688   003FB0                     l4438:
  4689   003FB0  90D8               	bcf	status,0,c
  4690   003FB2  345B               	rlcf	floorf@u^0,w,c
  4691   003FB4  6E4F               	movwf	??_floorf^0,c
  4692   003FB6  345C               	rlcf	(floorf@u+1)^0,w,c
  4693   003FB8  6E50               	movwf	(??_floorf+1)^0,c
  4694   003FBA  345D               	rlcf	(floorf@u+2)^0,w,c
  4695   003FBC  6E51               	movwf	(??_floorf+2)^0,c
  4696   003FBE  345E               	rlcf	(floorf@u+3)^0,w,c
  4697   003FC0  6E52               	movwf	(??_floorf+3)^0,c
  4698   003FC2  504F               	movf	??_floorf^0,w,c
  4699   003FC4  1050               	iorwf	(??_floorf+1)^0,w,c
  4700   003FC6  1051               	iorwf	(??_floorf+2)^0,w,c
  4701   003FC8  1052               	iorwf	(??_floorf+3)^0,w,c
  4702   003FCA  B4D8               	btfsc	status,2,c
  4703   003FCC  EFEA  F01F         	goto	u4301
  4704   003FD0  EFEC  F01F         	goto	u4300
  4705   003FD4                     u4301:
  4706   003FD4  EFF4  F01F         	goto	l4442
  4707   003FD8                     u4300:
  4708   003FD8  0E00               	movlw	0
  4709   003FDA  6E5B               	movwf	floorf@u^0,c
  4710   003FDC  0E00               	movlw	0
  4711   003FDE  6E5C               	movwf	(floorf@u+1)^0,c
  4712   003FE0  0E80               	movlw	128
  4713   003FE2  6E5D               	movwf	(floorf@u+2)^0,c
  4714   003FE4  0EBF               	movlw	191
  4715   003FE6  6E5E               	movwf	(floorf@u+3)^0,c
  4716   003FE8                     l4442:
  4717   003FE8  C05B  F04B         	movff	floorf@u,?_floorf
  4718   003FEC  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4719   003FF0  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4720   003FF4  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4721   003FF8                     l1465:
  4722   003FF8  0012               	return		;funcret
  4723   003FFA                     __end_of_floorf:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function ___fpclassifyf *****************
  4727 ;; Defined at:
  4728 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  x               4    0[COMRAM] float 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  u               4   10[COMRAM] struct .
  4733 ;;  e               2    8[COMRAM] int 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  2    0[COMRAM] int 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4744 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4745 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;Total ram usage:       14 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_efgtoa
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text9
  4758   0049E2                     __ptext9:
  4759                           	callstack 0
  4760   0049E2                     ___fpclassifyf:
  4761                           	callstack 25
  4762   0049E2  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4763   0049E6  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4764   0049EA  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4765   0049EE  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4766   0049F2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4767   0049F6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4768   0049FA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4769   0049FE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4770   004A02  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4771   004A06  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4772   004A0A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4773   004A0E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4774   004A12  0E18               	movlw	24
  4775   004A14  EF11  F025         	goto	u4120
  4776   004A18                     u4125:
  4777   004A18  90D8               	bcf	status,0,c
  4778   004A1A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4779   004A1C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4780   004A1E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4781   004A20  3205               	rrcf	??___fpclassifyf^0,f,c
  4782   004A22                     u4120:
  4783   004A22  2EE8               	decfsz	wreg,f,c
  4784   004A24  EF0C  F025         	goto	u4125
  4785   004A28  5005               	movf	??___fpclassifyf^0,w,c
  4786   004A2A  6E09               	movwf	___fpclassifyf@e^0,c
  4787   004A2C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4788   004A2E  5009               	movf	___fpclassifyf@e^0,w,c
  4789   004A30  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4790   004A32  A4D8               	btfss	status,2,c
  4791   004A34  EF1E  F025         	goto	u4131
  4792   004A38  EF20  F025         	goto	u4130
  4793   004A3C                     u4131:
  4794   004A3C  EF40  F025         	goto	l4400
  4795   004A40                     u4130:
  4796   004A40  90D8               	bcf	status,0,c
  4797   004A42  340B               	rlcf	___fpclassifyf@u^0,w,c
  4798   004A44  6E05               	movwf	??___fpclassifyf^0,c
  4799   004A46  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4800   004A48  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4801   004A4A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4802   004A4C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4803   004A4E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4804   004A50  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4805   004A52  5005               	movf	??___fpclassifyf^0,w,c
  4806   004A54  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4807   004A56  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4808   004A58  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4809   004A5A  A4D8               	btfss	status,2,c
  4810   004A5C  EF32  F025         	goto	u4141
  4811   004A60  EF34  F025         	goto	u4140
  4812   004A64                     u4141:
  4813   004A64  EF3A  F025         	goto	l4396
  4814   004A68                     u4140:
  4815   004A68  0E00               	movlw	0
  4816   004A6A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4817   004A6C  0E02               	movlw	2
  4818   004A6E  6E01               	movwf	?___fpclassifyf^0,c
  4819   004A70  EF6F  F025         	goto	l1451
  4820   004A74                     l4396:
  4821   004A74  0E00               	movlw	0
  4822   004A76  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4823   004A78  0E03               	movlw	3
  4824   004A7A  6E01               	movwf	?___fpclassifyf^0,c
  4825   004A7C  EF6F  F025         	goto	l1451
  4826   004A80                     l4400:
  4827   004A80  2809               	incf	___fpclassifyf@e^0,w,c
  4828   004A82  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4829   004A84  A4D8               	btfss	status,2,c
  4830   004A86  EF47  F025         	goto	u4151
  4831   004A8A  EF49  F025         	goto	u4150
  4832   004A8E                     u4151:
  4833   004A8E  EF6B  F025         	goto	l4406
  4834   004A92                     u4150:
  4835   004A92  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4836   004A96  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4837   004A9A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4838   004A9E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4839   004AA2  0E09               	movlw	9
  4840   004AA4                     u4165:
  4841   004AA4  90D8               	bcf	status,0,c
  4842   004AA6  3605               	rlcf	??___fpclassifyf^0,f,c
  4843   004AA8  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4844   004AAA  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4845   004AAC  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4846   004AAE  2EE8               	decfsz	wreg,f,c
  4847   004AB0  EF52  F025         	goto	u4165
  4848   004AB4  5005               	movf	??___fpclassifyf^0,w,c
  4849   004AB6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4850   004AB8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4851   004ABA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4852   004ABC  B4D8               	btfsc	status,2,c
  4853   004ABE  EF63  F025         	goto	u4171
  4854   004AC2  EF66  F025         	goto	u4170
  4855   004AC6                     u4171:
  4856   004AC6  0E01               	movlw	1
  4857   004AC8  EF67  F025         	goto	u4180
  4858   004ACC                     u4170:
  4859   004ACC  0E00               	movlw	0
  4860   004ACE                     u4180:
  4861   004ACE  6E01               	movwf	?___fpclassifyf^0,c
  4862   004AD0  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4863   004AD2  EF6F  F025         	goto	l1451
  4864   004AD6                     l4406:
  4865   004AD6  0E00               	movlw	0
  4866   004AD8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4867   004ADA  0E04               	movlw	4
  4868   004ADC  6E01               	movwf	?___fpclassifyf^0,c
  4869   004ADE                     l1451:
  4870   004ADE  0012               	return		;funcret
  4871   004AE0                     __end_of___fpclassifyf:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function ___fltol *****************
  4875 ;; Defined at:
  4876 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  f1              4    0[COMRAM] int 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  exp1            1    9[COMRAM] unsigned char 
  4881 ;;  sign1           1    8[COMRAM] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  4    0[COMRAM] long 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, status,0
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;Total ram usage:       10 bytes
  4896 ;; Hardware stack levels used: 1
  4897 ;; Hardware stack levels required when called: 1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_turnRight45
  4902 ;;		_turnLeft45
  4903 ;;		_reverseOneBlock
  4904 ;;		_ForwardOneBlock
  4905 ;;		_Forwardhalfblock
  4906 ;;		_efgtoa
  4907 ;;		_Backhalfblock
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text10
  4912   0047D8                     __ptext10:
  4913                           	callstack 0
  4914   0047D8                     ___fltol:
  4915                           	callstack 25
  4916   0047D8  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4917   0047DA  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4918   0047DC  6E0A               	movwf	___fltol@exp1^0,c
  4919   0047DE  500A               	movf	___fltol@exp1^0,w,c
  4920   0047E0  A4D8               	btfss	status,2,c
  4921   0047E2  EFF5  F023         	goto	u4021
  4922   0047E6  EFF7  F023         	goto	u4020
  4923   0047EA                     u4021:
  4924   0047EA  EF01  F024         	goto	l4332
  4925   0047EE                     u4020:
  4926   0047EE                     l4328:
  4927   0047EE  0E00               	movlw	0
  4928   0047F0  6E01               	movwf	?___fltol^0,c
  4929   0047F2  0E00               	movlw	0
  4930   0047F4  6E02               	movwf	(?___fltol+1)^0,c
  4931   0047F6  0E00               	movlw	0
  4932   0047F8  6E03               	movwf	(?___fltol+2)^0,c
  4933   0047FA  0E00               	movlw	0
  4934   0047FC  6E04               	movwf	(?___fltol+3)^0,c
  4935   0047FE  EF6E  F024         	goto	l924
  4936   004802                     l4332:
  4937   004802  C001  F005         	movff	___fltol@f1,??___fltol
  4938   004806  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4939   00480A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4940   00480E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4941   004812  0E20               	movlw	32
  4942   004814  EF11  F024         	goto	u4030
  4943   004818                     u4035:
  4944   004818  90D8               	bcf	status,0,c
  4945   00481A  3208               	rrcf	(??___fltol+3)^0,f,c
  4946   00481C  3207               	rrcf	(??___fltol+2)^0,f,c
  4947   00481E  3206               	rrcf	(??___fltol+1)^0,f,c
  4948   004820  3205               	rrcf	??___fltol^0,f,c
  4949   004822                     u4030:
  4950   004822  2EE8               	decfsz	wreg,f,c
  4951   004824  EF0C  F024         	goto	u4035
  4952   004828  5005               	movf	??___fltol^0,w,c
  4953   00482A  6E09               	movwf	___fltol@sign1^0,c
  4954   00482C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4955   00482E  0EFF               	movlw	255
  4956   004830  1601               	andwf	___fltol@f1^0,f,c
  4957   004832  0EFF               	movlw	255
  4958   004834  1602               	andwf	(___fltol@f1+1)^0,f,c
  4959   004836  0EFF               	movlw	255
  4960   004838  1603               	andwf	(___fltol@f1+2)^0,f,c
  4961   00483A  0E00               	movlw	0
  4962   00483C  1604               	andwf	(___fltol@f1+3)^0,f,c
  4963   00483E  0E96               	movlw	150
  4964   004840  5E0A               	subwf	___fltol@exp1^0,f,c
  4965   004842  BE0A               	btfsc	___fltol@exp1^0,7,c
  4966   004844  EF28  F024         	goto	u4040
  4967   004848  EF26  F024         	goto	u4041
  4968   00484C                     u4041:
  4969   00484C  EF3E  F024         	goto	l4352
  4970   004850                     u4040:
  4971   004850  500A               	movf	___fltol@exp1^0,w,c
  4972   004852  0A80               	xorlw	128
  4973   004854  0F97               	addlw	151
  4974   004856  B0D8               	btfsc	status,0,c
  4975   004858  EF30  F024         	goto	u4051
  4976   00485C  EF32  F024         	goto	u4050
  4977   004860                     u4051:
  4978   004860  EF34  F024         	goto	l4348
  4979   004864                     u4050:
  4980   004864  EFF7  F023         	goto	l4328
  4981   004868                     l4348:
  4982   004868  90D8               	bcf	status,0,c
  4983   00486A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4984   00486C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4985   00486E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4986   004870  3201               	rrcf	___fltol@f1^0,f,c
  4987   004872  3E0A               	incfsz	___fltol@exp1^0,f,c
  4988   004874  EF34  F024         	goto	l4348
  4989   004878  EF56  F024         	goto	l4362
  4990   00487C                     l4352:
  4991   00487C  0E1F               	movlw	31
  4992   00487E  640A               	cpfsgt	___fltol@exp1^0,c
  4993   004880  EF44  F024         	goto	u4061
  4994   004884  EF46  F024         	goto	u4060
  4995   004888                     u4061:
  4996   004888  EF4E  F024         	goto	l4360
  4997   00488C                     u4060:
  4998   00488C  EFF7  F023         	goto	l4328
  4999   004890                     l4358:
  5000   004890  90D8               	bcf	status,0,c
  5001   004892  3601               	rlcf	___fltol@f1^0,f,c
  5002   004894  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5003   004896  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5004   004898  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5005   00489A  060A               	decf	___fltol@exp1^0,f,c
  5006   00489C                     l4360:
  5007   00489C  500A               	movf	___fltol@exp1^0,w,c
  5008   00489E  A4D8               	btfss	status,2,c
  5009   0048A0  EF54  F024         	goto	u4071
  5010   0048A4  EF56  F024         	goto	u4070
  5011   0048A8                     u4071:
  5012   0048A8  EF48  F024         	goto	l4358
  5013   0048AC                     u4070:
  5014   0048AC                     l4362:
  5015   0048AC  5009               	movf	___fltol@sign1^0,w,c
  5016   0048AE  B4D8               	btfsc	status,2,c
  5017   0048B0  EF5C  F024         	goto	u4081
  5018   0048B4  EF5E  F024         	goto	u4080
  5019   0048B8                     u4081:
  5020   0048B8  EF66  F024         	goto	l4366
  5021   0048BC                     u4080:
  5022   0048BC  1E04               	comf	(___fltol@f1+3)^0,f,c
  5023   0048BE  1E03               	comf	(___fltol@f1+2)^0,f,c
  5024   0048C0  1E02               	comf	(___fltol@f1+1)^0,f,c
  5025   0048C2  6C01               	negf	___fltol@f1^0,c
  5026   0048C4  0E00               	movlw	0
  5027   0048C6  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5028   0048C8  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5029   0048CA  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5030   0048CC                     l4366:
  5031   0048CC  C001  F001         	movff	___fltol@f1,?___fltol
  5032   0048D0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5033   0048D4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5034   0048D8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5035   0048DC                     l924:
  5036   0048DC  0012               	return		;funcret
  5037   0048DE                     __end_of___fltol:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function ___flneg *****************
  5041 ;; Defined at:
  5042 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  f1              4    0[COMRAM] long 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  4    0[COMRAM] long 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5060 ;;Total ram usage:        4 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 1
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_efgtoa
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text11
  5071   005AF8                     __ptext11:
  5072                           	callstack 0
  5073   005AF8                     ___flneg:
  5074                           	callstack 25
  5075   005AF8  5001               	movf	___flneg@f1^0,w,c
  5076   005AFA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5077   005AFC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5078   005AFE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5079   005B00  B4D8               	btfsc	status,2,c
  5080   005B02  EF85  F02D         	goto	u4011
  5081   005B06  EF87  F02D         	goto	u4010
  5082   005B0A                     u4011:
  5083   005B0A  EF8F  F02D         	goto	l4322
  5084   005B0E                     u4010:
  5085   005B0E  0E00               	movlw	0
  5086   005B10  1A01               	xorwf	___flneg@f1^0,f,c
  5087   005B12  0E00               	movlw	0
  5088   005B14  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5089   005B16  0E00               	movlw	0
  5090   005B18  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5091   005B1A  0E80               	movlw	128
  5092   005B1C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5093   005B1E                     l4322:
  5094   005B1E  C001  F001         	movff	___flneg@f1,?___flneg
  5095   005B22  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5096   005B26  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5097   005B2A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5098   005B2E  0012               	return		;funcret
  5099   005B30                     __end_of___flneg:
  5100                           	callstack 0
  5101                           
  5102 ;; *************** function _dtoa *****************
  5103 ;; Defined at:
  5104 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5107 ;;		 -> sprintf@f(11), 
  5108 ;;  d               8   29[COMRAM] long long 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  n               8   51[COMRAM] long long 
  5111 ;;  i               2   59[COMRAM] int 
  5112 ;;  w               2   49[COMRAM] int 
  5113 ;;  p               2   47[COMRAM] int 
  5114 ;;  s               1   61[COMRAM] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5124 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;Total ram usage:       35 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 5
  5131 ;; This function calls:
  5132 ;;		___aodiv
  5133 ;;		___aomod
  5134 ;;		_abs
  5135 ;;		_pad
  5136 ;; This function is called by:
  5137 ;;		_vfpfcnvrt
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text12
  5142   003B6A                     __ptext12:
  5143                           	callstack 0
  5144   003B6A                     _dtoa:
  5145                           	callstack 22
  5146   003B6A                     
  5147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5148   003B6A  C01E  F034         	movff	dtoa@d,dtoa@n
  5149   003B6E  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5150   003B72  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5151   003B76  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5152   003B7A  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5153   003B7E  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5154   003B82  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5155   003B86  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5156   003B8A                     
  5157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5158   003B8A  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5159   003B8C  EFCA  F01D         	goto	u4441
  5160   003B90  EFCD  F01D         	goto	u4440
  5161   003B94                     u4441:
  5162   003B94  0E01               	movlw	1
  5163   003B96  EFCE  F01D         	goto	u4450
  5164   003B9A                     u4440:
  5165   003B9A  0E00               	movlw	0
  5166   003B9C                     u4450:
  5167   003B9C  6E3E               	movwf	dtoa@s^0,c
  5168   003B9E                     
  5169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5170   003B9E  503E               	movf	dtoa@s^0,w,c
  5171   003BA0  B4D8               	btfsc	status,2,c
  5172   003BA2  EFD5  F01D         	goto	u4461
  5173   003BA6  EFD7  F01D         	goto	u4460
  5174   003BAA                     u4461:
  5175   003BAA  EFE7  F01D         	goto	l4540
  5176   003BAE                     u4460:
  5177   003BAE                     
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5179   003BAE  1E3B               	comf	(dtoa@n+7)^0,f,c
  5180   003BB0  1E3A               	comf	(dtoa@n+6)^0,f,c
  5181   003BB2  1E39               	comf	(dtoa@n+5)^0,f,c
  5182   003BB4  1E38               	comf	(dtoa@n+4)^0,f,c
  5183   003BB6  1E37               	comf	(dtoa@n+3)^0,f,c
  5184   003BB8  1E36               	comf	(dtoa@n+2)^0,f,c
  5185   003BBA  1E35               	comf	(dtoa@n+1)^0,f,c
  5186   003BBC  6C34               	negf	dtoa@n^0,c
  5187   003BBE  0E00               	movlw	0
  5188   003BC0  2235               	addwfc	(dtoa@n+1)^0,f,c
  5189   003BC2  2236               	addwfc	(dtoa@n+2)^0,f,c
  5190   003BC4  2237               	addwfc	(dtoa@n+3)^0,f,c
  5191   003BC6  2238               	addwfc	(dtoa@n+4)^0,f,c
  5192   003BC8  2239               	addwfc	(dtoa@n+5)^0,f,c
  5193   003BCA  223A               	addwfc	(dtoa@n+6)^0,f,c
  5194   003BCC  223B               	addwfc	(dtoa@n+7)^0,f,c
  5195   003BCE                     l4540:
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5198   003BCE  0100               	movlb	0	; () banked
  5199   003BD0  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5200   003BD2  EFF5  F01D         	goto	u4470
  5201   003BD6  51EA               	movf	(_prec+1)& (0+255),w,b
  5202   003BD8  E106               	bnz	u4471
  5203   003BDA  05E9               	decf	_prec& (0+255),w,b
  5204   003BDC  B0D8               	btfsc	status,0,c
  5205   003BDE  EFF3  F01D         	goto	u4471
  5206   003BE2  EFF5  F01D         	goto	u4470
  5207   003BE6                     u4471:
  5208   003BE6  EFFB  F01D         	goto	l1346
  5209   003BEA                     u4470:
  5210   003BEA                     
  5211                           ; BSR set to: 0
  5212   003BEA  0E00               	movlw	0
  5213   003BEC  6E31               	movwf	(dtoa@p+1)^0,c
  5214   003BEE  0E01               	movlw	1
  5215   003BF0  6E30               	movwf	dtoa@p^0,c
  5216   003BF2  EFFF  F01D         	goto	l1348
  5217   003BF6                     l1346:
  5218                           
  5219                           ; BSR set to: 0
  5220   003BF6  C0E9  F030         	movff	_prec,dtoa@p
  5221   003BFA  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5222   003BFE                     l1348:
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5226   003BFE  C0E7  F032         	movff	_width,dtoa@w
  5227   003C02  C0E8  F033         	movff	_width+1,dtoa@w+1
  5228   003C06                     
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5231   003C06  503E               	movf	dtoa@s^0,w,c
  5232   003C08  B4D8               	btfsc	status,2,c
  5233   003C0A  EF09  F01E         	goto	u4481
  5234   003C0E  EF0B  F01E         	goto	u4480
  5235   003C12                     u4481:
  5236   003C12  EF22  F01E         	goto	l1349
  5237   003C16                     u4480:
  5238   003C16                     
  5239                           ; BSR set to: 0
  5240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5241   003C16  0632               	decf	dtoa@w^0,f,c
  5242   003C18  A0D8               	btfss	status,0,c
  5243   003C1A  0633               	decf	(dtoa@w+1)^0,f,c
  5244   003C1C                     
  5245                           ; BSR set to: 0
  5246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5247   003C1C  503E               	movf	dtoa@s^0,w,c
  5248   003C1E  A4D8               	btfss	status,2,c
  5249   003C20  EF14  F01E         	goto	u4491
  5250   003C24  EF16  F01E         	goto	u4490
  5251   003C28                     u4491:
  5252   003C28  EF1C  F01E         	goto	l4552
  5253   003C2C                     u4490:
  5254   003C2C                     
  5255                           ; BSR set to: 0
  5256   003C2C  0E00               	movlw	0
  5257   003C2E  6E2F               	movwf	(_dtoa$2396+1)^0,c
  5258   003C30  0E2B               	movlw	43
  5259   003C32  6E2E               	movwf	_dtoa$2396^0,c
  5260   003C34  EF20  F01E         	goto	l4554
  5261   003C38                     l4552:
  5262                           
  5263                           ; BSR set to: 0
  5264   003C38  0E00               	movlw	0
  5265   003C3A  6E2F               	movwf	(_dtoa$2396+1)^0,c
  5266   003C3C  0E2D               	movlw	45
  5267   003C3E  6E2E               	movwf	_dtoa$2396^0,c
  5268   003C40                     l4554:
  5269                           
  5270                           ; BSR set to: 0
  5271   003C40  C02E  F03E         	movff	_dtoa$2396,dtoa@s
  5272   003C44                     l1349:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5276   003C44  0E00               	movlw	0
  5277   003C46  6E3D               	movwf	(dtoa@i+1)^0,c
  5278   003C48  0E4F               	movlw	79
  5279   003C4A  6E3C               	movwf	dtoa@i^0,c
  5280   003C4C                     
  5281                           ; BSR set to: 0
  5282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5283   003C4C  0E00               	movlw	0
  5284   003C4E  0101               	movlb	1	; () banked
  5285   003C50  6F65               	movwf	(_dbuf+79)& (0+255),b
  5286                           
  5287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5288   003C52  EFA7  F01E         	goto	l4568
  5289   003C56                     l4558:
  5290                           
  5291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5292   003C56  063C               	decf	dtoa@i^0,f,c
  5293   003C58  A0D8               	btfss	status,0,c
  5294   003C5A  063D               	decf	(dtoa@i+1)^0,f,c
  5295   003C5C                     
  5296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5297   003C5C  0E16               	movlw	low _dbuf
  5298   003C5E  243C               	addwf	dtoa@i^0,w,c
  5299   003C60  6ED9               	movwf	fsr2l,c
  5300   003C62  0E01               	movlw	high _dbuf
  5301   003C64  203D               	addwfc	(dtoa@i+1)^0,w,c
  5302   003C66  6EDA               	movwf	fsr2h,c
  5303   003C68  C034  F001         	movff	dtoa@n,___aomod@dividend
  5304   003C6C  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5305   003C70  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5306   003C74  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5307   003C78  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5308   003C7C  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5309   003C80  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5310   003C84  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5311   003C88  0E0A               	movlw	10
  5312   003C8A  6E09               	movwf	___aomod@divisor^0,c
  5313   003C8C  0E00               	movlw	0
  5314   003C8E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5315   003C90  0E00               	movlw	0
  5316   003C92  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5317   003C94  0E00               	movlw	0
  5318   003C96  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5319   003C98  0E00               	movlw	0
  5320   003C9A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5321   003C9C  0E00               	movlw	0
  5322   003C9E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5323   003CA0  0E00               	movlw	0
  5324   003CA2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5325   003CA4  0E00               	movlw	0
  5326   003CA6  6E10               	movwf	(___aomod@divisor+7)^0,c
  5327   003CA8  EC3A  F023         	call	___aomod	;wreg free
  5328   003CAC  C001  F026         	movff	?___aomod,??_dtoa
  5329   003CB0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5330   003CB4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5331   003CB8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5332   003CBC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5333   003CC0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5334   003CC4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5335   003CC8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5336   003CCC  C026  F013         	movff	??_dtoa,abs@a
  5337   003CD0  C027  F014         	movff	??_dtoa+1,abs@a+1
  5338   003CD4  ECE0  F02C         	call	_abs	;wreg free
  5339   003CD8  5013               	movf	?_abs^0,w,c
  5340   003CDA  0F30               	addlw	48
  5341   003CDC  6EDF               	movwf	indf2,c
  5342   003CDE                     
  5343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5344   003CDE  0630               	decf	dtoa@p^0,f,c
  5345   003CE0  A0D8               	btfss	status,0,c
  5346   003CE2  0631               	decf	(dtoa@p+1)^0,f,c
  5347   003CE4                     
  5348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5349   003CE4  0632               	decf	dtoa@w^0,f,c
  5350   003CE6  A0D8               	btfss	status,0,c
  5351   003CE8  0633               	decf	(dtoa@w+1)^0,f,c
  5352   003CEA                     
  5353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5354   003CEA  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5355   003CEE  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5356   003CF2  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5357   003CF6  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5358   003CFA  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5359   003CFE  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5360   003D02  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5361   003D06  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5362   003D0A  0E0A               	movlw	10
  5363   003D0C  6E09               	movwf	___aodiv@divisor^0,c
  5364   003D0E  0E00               	movlw	0
  5365   003D10  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5366   003D12  0E00               	movlw	0
  5367   003D14  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5368   003D16  0E00               	movlw	0
  5369   003D18  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5370   003D1A  0E00               	movlw	0
  5371   003D1C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5372   003D1E  0E00               	movlw	0
  5373   003D20  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5374   003D22  0E00               	movlw	0
  5375   003D24  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5376   003D26  0E00               	movlw	0
  5377   003D28  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5378   003D2A  ECC0  F021         	call	___aodiv	;wreg free
  5379   003D2E  C001  F034         	movff	?___aodiv,dtoa@n
  5380   003D32  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5381   003D36  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5382   003D3A  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5383   003D3E  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5384   003D42  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5385   003D46  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5386   003D4A  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5387   003D4E                     l4568:
  5388                           
  5389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5390   003D4E  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5391   003D50  EFB2  F01E         	goto	u4501
  5392   003D54  503D               	movf	(dtoa@i+1)^0,w,c
  5393   003D56  E108               	bnz	u4500
  5394   003D58  043C               	decf	dtoa@i^0,w,c
  5395   003D5A  A0D8               	btfss	status,0,c
  5396   003D5C  EFB2  F01E         	goto	u4501
  5397   003D60  EFB4  F01E         	goto	u4500
  5398   003D64                     u4501:
  5399   003D64  EFD0  F01E         	goto	l4574
  5400   003D68                     u4500:
  5401   003D68  5034               	movf	dtoa@n^0,w,c
  5402   003D6A  1035               	iorwf	(dtoa@n+1)^0,w,c
  5403   003D6C  1036               	iorwf	(dtoa@n+2)^0,w,c
  5404   003D6E  1037               	iorwf	(dtoa@n+3)^0,w,c
  5405   003D70  1038               	iorwf	(dtoa@n+4)^0,w,c
  5406   003D72  1039               	iorwf	(dtoa@n+5)^0,w,c
  5407   003D74  103A               	iorwf	(dtoa@n+6)^0,w,c
  5408   003D76  103B               	iorwf	(dtoa@n+7)^0,w,c
  5409   003D78  A4D8               	btfss	status,2,c
  5410   003D7A  EFC1  F01E         	goto	u4511
  5411   003D7E  EFC3  F01E         	goto	u4510
  5412   003D82                     u4511:
  5413   003D82  EF2B  F01E         	goto	l4558
  5414   003D86                     u4510:
  5415   003D86  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5416   003D88  EFD0  F01E         	goto	u4520
  5417   003D8C  5031               	movf	(dtoa@p+1)^0,w,c
  5418   003D8E  E106               	bnz	u4521
  5419   003D90  0430               	decf	dtoa@p^0,w,c
  5420   003D92  B0D8               	btfsc	status,0,c
  5421   003D94  EFCE  F01E         	goto	u4521
  5422   003D98  EFD0  F01E         	goto	u4520
  5423   003D9C                     u4521:
  5424   003D9C  EF2B  F01E         	goto	l4558
  5425   003DA0                     u4520:
  5426   003DA0                     l4574:
  5427                           
  5428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5429   003DA0  503E               	movf	dtoa@s^0,w,c
  5430   003DA2  B4D8               	btfsc	status,2,c
  5431   003DA4  EFD6  F01E         	goto	u4531
  5432   003DA8  EFD8  F01E         	goto	u4530
  5433   003DAC                     u4531:
  5434   003DAC  EFE3  F01E         	goto	l4580
  5435   003DB0                     u4530:
  5436   003DB0                     
  5437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5438   003DB0  063C               	decf	dtoa@i^0,f,c
  5439   003DB2  A0D8               	btfss	status,0,c
  5440   003DB4  063D               	decf	(dtoa@i+1)^0,f,c
  5441   003DB6                     
  5442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5443   003DB6  0E16               	movlw	low _dbuf
  5444   003DB8  243C               	addwf	dtoa@i^0,w,c
  5445   003DBA  6ED9               	movwf	fsr2l,c
  5446   003DBC  0E01               	movlw	high _dbuf
  5447   003DBE  203D               	addwfc	(dtoa@i+1)^0,w,c
  5448   003DC0  6EDA               	movwf	fsr2h,c
  5449   003DC2  C03E  FFDF         	movff	dtoa@s,indf2
  5450   003DC6                     l4580:
  5451                           
  5452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5453   003DC6  C01C  F011         	movff	dtoa@fp,pad@fp
  5454   003DCA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5455   003DCE  0E16               	movlw	low _dbuf
  5456   003DD0  243C               	addwf	dtoa@i^0,w,c
  5457   003DD2  6E13               	movwf	pad@buf^0,c
  5458   003DD4  0E01               	movlw	high _dbuf
  5459   003DD6  203D               	addwfc	(dtoa@i+1)^0,w,c
  5460   003DD8  6E14               	movwf	(pad@buf+1)^0,c
  5461   003DDA  C032  F015         	movff	dtoa@w,pad@p
  5462   003DDE  C033  F016         	movff	dtoa@w+1,pad@p+1
  5463   003DE2  EC2A  F028         	call	_pad	;wreg free
  5464   003DE6  0012               	return		;funcret
  5465   003DE8                     __end_of_dtoa:
  5466                           	callstack 0
  5467                           
  5468 ;; *************** function _pad *****************
  5469 ;; Defined at:
  5470 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5473 ;;		 -> sprintf@f(11), 
  5474 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5475 ;;		 -> dbuf(80), 
  5476 ;;  p               2   20[COMRAM] int 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  w               2   25[COMRAM] int 
  5479 ;;  i               2   23[COMRAM] int 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5489 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;Total ram usage:       11 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 4
  5496 ;; This function calls:
  5497 ;;		_fputc
  5498 ;;		_fputs
  5499 ;; This function is called by:
  5500 ;;		_dtoa
  5501 ;;		_efgtoa
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text13
  5506   005054                     __ptext13:
  5507                           	callstack 0
  5508   005054                     _pad:
  5509                           	callstack 22
  5510   005054                     
  5511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5512   005054  BE16               	btfsc	(pad@p+1)^0,7,c
  5513   005056  EF2F  F028         	goto	u4091
  5514   00505A  EF31  F028         	goto	u4090
  5515   00505E                     u4091:
  5516   00505E  EF37  F028         	goto	l4374
  5517   005062                     u4090:
  5518   005062  C015  F01A         	movff	pad@p,pad@w
  5519   005066  C016  F01B         	movff	pad@p+1,pad@w+1
  5520   00506A  EF3B  F028         	goto	l1337
  5521   00506E                     l4374:
  5522   00506E  0E00               	movlw	0
  5523   005070  6E1B               	movwf	(pad@w+1)^0,c
  5524   005072  0E00               	movlw	0
  5525   005074  6E1A               	movwf	pad@w^0,c
  5526   005076                     l1337:
  5527                           
  5528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5529   005076  0E00               	movlw	0
  5530   005078  6E19               	movwf	(pad@i+1)^0,c
  5531   00507A  0E00               	movlw	0
  5532   00507C  6E18               	movwf	pad@i^0,c
  5533                           
  5534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5535   00507E  EF4D  F028         	goto	l4380
  5536   005082                     l4376:
  5537                           
  5538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5539   005082  0E00               	movlw	0
  5540   005084  6E02               	movwf	(fputc@c+1)^0,c
  5541   005086  0E20               	movlw	32
  5542   005088  6E01               	movwf	fputc@c^0,c
  5543   00508A  C011  F003         	movff	pad@fp,fputc@fp
  5544   00508E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5545   005092  EC70  F025         	call	_fputc	;wreg free
  5546   005096                     
  5547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5548   005096  4A18               	infsnz	pad@i^0,f,c
  5549   005098  2A19               	incf	(pad@i+1)^0,f,c
  5550   00509A                     l4380:
  5551                           
  5552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5553   00509A  501A               	movf	pad@w^0,w,c
  5554   00509C  5C18               	subwf	pad@i^0,w,c
  5555   00509E  5019               	movf	(pad@i+1)^0,w,c
  5556   0050A0  0A80               	xorlw	128
  5557   0050A2  6E17               	movwf	??_pad^0,c
  5558   0050A4  501B               	movf	(pad@w+1)^0,w,c
  5559   0050A6  0A80               	xorlw	128
  5560   0050A8  5817               	subwfb	??_pad^0,w,c
  5561   0050AA  A0D8               	btfss	status,0,c
  5562   0050AC  EF5A  F028         	goto	u4101
  5563   0050B0  EF5C  F028         	goto	u4100
  5564   0050B4                     u4101:
  5565   0050B4  EF41  F028         	goto	l4376
  5566   0050B8                     u4100:
  5567   0050B8                     
  5568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5569   0050B8  C013  F00A         	movff	pad@buf,fputs@s
  5570   0050BC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5571   0050C0  C011  F00C         	movff	pad@fp,fputs@fp
  5572   0050C4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5573   0050C8  EC9D  F02C         	call	_fputs	;wreg free
  5574   0050CC  0012               	return		;funcret
  5575   0050CE                     __end_of_pad:
  5576                           	callstack 0
  5577                           
  5578 ;; *************** function _fputs *****************
  5579 ;; Defined at:
  5580 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5583 ;;		 -> dbuf(80), 
  5584 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5585 ;;		 -> sprintf@f(11), 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  i               2   14[COMRAM] int 
  5588 ;;  c               1   13[COMRAM] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2    9[COMRAM] int 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;Total ram usage:        7 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; Hardware stack levels required when called: 3
  5605 ;; This function calls:
  5606 ;;		_fputc
  5607 ;; This function is called by:
  5608 ;;		_pad
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text14
  5613   00593A                     __ptext14:
  5614                           	callstack 0
  5615   00593A                     _fputs:
  5616                           	callstack 22
  5617   00593A  0E00               	movlw	0
  5618   00593C  6E10               	movwf	(fputs@i+1)^0,c
  5619   00593E  0E00               	movlw	0
  5620   005940  6E0F               	movwf	fputs@i^0,c
  5621   005942  EFAE  F02C         	goto	l3908
  5622   005946                     l3904:
  5623   005946  C00E  F001         	movff	fputs@c,fputc@c
  5624   00594A  6A02               	clrf	(fputc@c+1)^0,c
  5625   00594C  C00C  F003         	movff	fputs@fp,fputc@fp
  5626   005950  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5627   005954  EC70  F025         	call	_fputc	;wreg free
  5628   005958  4A0F               	infsnz	fputs@i^0,f,c
  5629   00595A  2A10               	incf	(fputs@i+1)^0,f,c
  5630   00595C                     l3908:
  5631   00595C  500F               	movf	fputs@i^0,w,c
  5632   00595E  240A               	addwf	fputs@s^0,w,c
  5633   005960  6ED9               	movwf	fsr2l,c
  5634   005962  5010               	movf	(fputs@i+1)^0,w,c
  5635   005964  200B               	addwfc	(fputs@s+1)^0,w,c
  5636   005966  6EDA               	movwf	fsr2h,c
  5637   005968  50DF               	movf	indf2,w,c
  5638   00596A  6E0E               	movwf	fputs@c^0,c
  5639   00596C  500E               	movf	fputs@c^0,w,c
  5640   00596E  A4D8               	btfss	status,2,c
  5641   005970  EFBC  F02C         	goto	u3351
  5642   005974  EFBE  F02C         	goto	u3350
  5643   005978                     u3351:
  5644   005978  EFA3  F02C         	goto	l3904
  5645   00597C                     u3350:
  5646   00597C  0012               	return		;funcret
  5647   00597E                     __end_of_fputs:
  5648                           	callstack 0
  5649                           
  5650 ;; *************** function _fputc *****************
  5651 ;; Defined at:
  5652 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  c               2    0[COMRAM] int 
  5655 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5656 ;;		 -> sprintf@f(11), 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  2    0[COMRAM] int 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5670 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5671 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5672 ;;Total ram usage:        9 bytes
  5673 ;; Hardware stack levels used: 1
  5674 ;; Hardware stack levels required when called: 2
  5675 ;; This function calls:
  5676 ;;		_putch
  5677 ;; This function is called by:
  5678 ;;		_pad
  5679 ;;		_vfpfcnvrt
  5680 ;;		_fputs
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text15
  5685   004AE0                     __ptext15:
  5686                           	callstack 0
  5687   004AE0                     _fputc:
  5688                           	callstack 25
  5689   004AE0  5003               	movf	fputc@fp^0,w,c
  5690   004AE2  1004               	iorwf	(fputc@fp+1)^0,w,c
  5691   004AE4  B4D8               	btfsc	status,2,c
  5692   004AE6  EF77  F025         	goto	u2891
  5693   004AEA  EF79  F025         	goto	u2890
  5694   004AEE                     u2891:
  5695   004AEE  EF82  F025         	goto	l3662
  5696   004AF2                     u2890:
  5697   004AF2  5003               	movf	fputc@fp^0,w,c
  5698   004AF4  1004               	iorwf	(fputc@fp+1)^0,w,c
  5699   004AF6  A4D8               	btfss	status,2,c
  5700   004AF8  EF80  F025         	goto	u2901
  5701   004AFC  EF82  F025         	goto	u2900
  5702   004B00                     u2901:
  5703   004B00  EF87  F025         	goto	l3664
  5704   004B04                     u2900:
  5705   004B04                     l3662:
  5706   004B04  5001               	movf	fputc@c^0,w,c
  5707   004B06  EC31  F02E         	call	_putch
  5708   004B0A  EFD4  F025         	goto	l1497
  5709   004B0E                     l3664:
  5710   004B0E  EE20 F009          	lfsr	2,9
  5711   004B12  5003               	movf	fputc@fp^0,w,c
  5712   004B14  26D9               	addwf	fsr2l,f,c
  5713   004B16  5004               	movf	(fputc@fp+1)^0,w,c
  5714   004B18  22DA               	addwfc	fsr2h,f,c
  5715   004B1A  50DE               	movf	postinc2,w,c
  5716   004B1C  10DE               	iorwf	postinc2,w,c
  5717   004B1E  B4D8               	btfsc	status,2,c
  5718   004B20  EF94  F025         	goto	u2911
  5719   004B24  EF96  F025         	goto	u2910
  5720   004B28                     u2911:
  5721   004B28  EFB1  F025         	goto	l3668
  5722   004B2C                     u2910:
  5723   004B2C  EE20 F009          	lfsr	2,9
  5724   004B30  5003               	movf	fputc@fp^0,w,c
  5725   004B32  26D9               	addwf	fsr2l,f,c
  5726   004B34  5004               	movf	(fputc@fp+1)^0,w,c
  5727   004B36  22DA               	addwfc	fsr2h,f,c
  5728   004B38  EE10 F003          	lfsr	1,3
  5729   004B3C  5003               	movf	fputc@fp^0,w,c
  5730   004B3E  26E1               	addwf	fsr1l,f,c
  5731   004B40  5004               	movf	(fputc@fp+1)^0,w,c
  5732   004B42  22E2               	addwfc	fsr1h,f,c
  5733   004B44  50DE               	movf	postinc2,w,c
  5734   004B46  5CE6               	subwf	postinc1,w,c
  5735   004B48  50E6               	movf	postinc1,w,c
  5736   004B4A  0A80               	xorlw	128
  5737   004B4C  6E09               	movwf	(??_fputc+4)^0,c
  5738   004B4E  50DE               	movf	postinc2,w,c
  5739   004B50  0A80               	xorlw	128
  5740   004B52  5809               	subwfb	(??_fputc+4)^0,w,c
  5741   004B54  B0D8               	btfsc	status,0,c
  5742   004B56  EFAF  F025         	goto	u2921
  5743   004B5A  EFB1  F025         	goto	u2920
  5744   004B5E                     u2921:
  5745   004B5E  EFD4  F025         	goto	l1497
  5746   004B62                     u2920:
  5747   004B62                     l3668:
  5748   004B62  EE20 F003          	lfsr	2,3
  5749   004B66  5003               	movf	fputc@fp^0,w,c
  5750   004B68  26D9               	addwf	fsr2l,f,c
  5751   004B6A  5004               	movf	(fputc@fp+1)^0,w,c
  5752   004B6C  22DA               	addwfc	fsr2h,f,c
  5753   004B6E  CFDE F005          	movff	postinc2,??_fputc
  5754   004B72  CFDD F006          	movff	postdec2,??_fputc+1
  5755   004B76  C003  FFD9         	movff	fputc@fp,fsr2l
  5756   004B7A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5757   004B7E  CFDE F007          	movff	postinc2,??_fputc+2
  5758   004B82  CFDD F008          	movff	postdec2,??_fputc+3
  5759   004B86  5005               	movf	??_fputc^0,w,c
  5760   004B88  2407               	addwf	(??_fputc+2)^0,w,c
  5761   004B8A  6ED9               	movwf	fsr2l,c
  5762   004B8C  5006               	movf	(??_fputc+1)^0,w,c
  5763   004B8E  2008               	addwfc	(??_fputc+3)^0,w,c
  5764   004B90  6EDA               	movwf	fsr2h,c
  5765   004B92  C001  FFDF         	movff	fputc@c,indf2
  5766   004B96  EE20 F003          	lfsr	2,3
  5767   004B9A  5003               	movf	fputc@fp^0,w,c
  5768   004B9C  26D9               	addwf	fsr2l,f,c
  5769   004B9E  5004               	movf	(fputc@fp+1)^0,w,c
  5770   004BA0  22DA               	addwfc	fsr2h,f,c
  5771   004BA2  2ADE               	incf	postinc2,f,c
  5772   004BA4  0E00               	movlw	0
  5773   004BA6  22DD               	addwfc	postdec2,f,c
  5774   004BA8                     l1497:
  5775   004BA8  0012               	return		;funcret
  5776   004BAA                     __end_of_fputc:
  5777                           	callstack 0
  5778                           
  5779 ;; *************** function _putch *****************
  5780 ;; Defined at:
  5781 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  c               1    wreg     unsigned char 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  c               1    0[COMRAM] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      void 
  5788 ;; Registers used:
  5789 ;;		wreg
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5799 ;;Total ram usage:        0 bytes
  5800 ;; Hardware stack levels used: 1
  5801 ;; Hardware stack levels required when called: 1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_fputc
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text16
  5810   005C62                     __ptext16:
  5811                           	callstack 0
  5812   005C62                     _putch:
  5813                           	callstack 25
  5814   005C62  0012               	return		;funcret
  5815   005C64                     __end_of_putch:
  5816                           	callstack 0
  5817                           
  5818 ;; *************** function _abs *****************
  5819 ;; Defined at:
  5820 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  a               2   18[COMRAM] int 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  2   18[COMRAM] int 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;Total ram usage:        4 bytes
  5839 ;; Hardware stack levels used: 1
  5840 ;; Hardware stack levels required when called: 1
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_dtoa
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text17
  5849   0059C0                     __ptext17:
  5850                           	callstack 0
  5851   0059C0                     _abs:
  5852                           	callstack 25
  5853   0059C0  BE14               	btfsc	(abs@a+1)^0,7,c
  5854   0059C2  EFED  F02C         	goto	u4110
  5855   0059C6  5014               	movf	(abs@a+1)^0,w,c
  5856   0059C8  E106               	bnz	u4111
  5857   0059CA  0413               	decf	abs@a^0,w,c
  5858   0059CC  B0D8               	btfsc	status,0,c
  5859   0059CE  EFEB  F02C         	goto	u4111
  5860   0059D2  EFED  F02C         	goto	u4110
  5861   0059D6                     u4111:
  5862   0059D6  EFFB  F02C         	goto	l1456
  5863   0059DA                     u4110:
  5864   0059DA  C013  F015         	movff	abs@a,??_abs
  5865   0059DE  C014  F016         	movff	abs@a+1,??_abs+1
  5866   0059E2  1E15               	comf	??_abs^0,f,c
  5867   0059E4  1E16               	comf	(??_abs+1)^0,f,c
  5868   0059E6  4A15               	infsnz	??_abs^0,f,c
  5869   0059E8  2A16               	incf	(??_abs+1)^0,f,c
  5870   0059EA  C015  F013         	movff	??_abs,?_abs
  5871   0059EE  C016  F014         	movff	??_abs+1,?_abs+1
  5872   0059F2  EFFF  F02C         	goto	l1459
  5873   0059F6                     l1456:
  5874   0059F6  C013  F013         	movff	abs@a,?_abs
  5875   0059FA  C014  F014         	movff	abs@a+1,?_abs+1
  5876   0059FE                     l1459:
  5877   0059FE  0012               	return		;funcret
  5878   005A00                     __end_of_abs:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function ___aomod *****************
  5882 ;; Defined at:
  5883 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  dividend        8    0[COMRAM] long long 
  5886 ;;  divisor         8    8[COMRAM] long long 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  sign            1   17[COMRAM] unsigned char 
  5889 ;;  counter         1   16[COMRAM] unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  8    0[COMRAM] long long 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5899 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;Total ram usage:       18 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 1
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_dtoa
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text18
  5914   004674                     __ptext18:
  5915                           	callstack 0
  5916   004674                     ___aomod:
  5917                           	callstack 25
  5918   004674  0E00               	movlw	0
  5919   004676  6E12               	movwf	___aomod@sign^0,c
  5920   004678  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5921   00467A  EF43  F023         	goto	u3450
  5922   00467E  EF41  F023         	goto	u3451
  5923   004682                     u3451:
  5924   004682  EF55  F023         	goto	l3978
  5925   004686                     u3450:
  5926   004686  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5927   004688  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5928   00468A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5929   00468C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5930   00468E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5931   004690  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5932   004692  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5933   004694  6C01               	negf	___aomod@dividend^0,c
  5934   004696  0E00               	movlw	0
  5935   004698  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5936   00469A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5937   00469C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5938   00469E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5939   0046A0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5940   0046A2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5941   0046A4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5942   0046A6  0E01               	movlw	1
  5943   0046A8  6E12               	movwf	___aomod@sign^0,c
  5944   0046AA                     l3978:
  5945   0046AA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5946   0046AC  EF5C  F023         	goto	u3460
  5947   0046B0  EF5A  F023         	goto	u3461
  5948   0046B4                     u3461:
  5949   0046B4  EF6C  F023         	goto	l3982
  5950   0046B8                     u3460:
  5951   0046B8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5952   0046BA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5953   0046BC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5954   0046BE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5955   0046C0  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5956   0046C2  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5957   0046C4  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5958   0046C6  6C09               	negf	___aomod@divisor^0,c
  5959   0046C8  0E00               	movlw	0
  5960   0046CA  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5961   0046CC  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5962   0046CE  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5963   0046D0  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5964   0046D2  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5965   0046D4  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5966   0046D6  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5967   0046D8                     l3982:
  5968   0046D8  5009               	movf	___aomod@divisor^0,w,c
  5969   0046DA  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5970   0046DC  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5971   0046DE  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5972   0046E0  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5973   0046E2  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5974   0046E4  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5975   0046E6  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5976   0046E8  B4D8               	btfsc	status,2,c
  5977   0046EA  EF79  F023         	goto	u3471
  5978   0046EE  EF7B  F023         	goto	u3470
  5979   0046F2                     u3471:
  5980   0046F2  EFC3  F023         	goto	l3998
  5981   0046F6                     u3470:
  5982   0046F6  0E01               	movlw	1
  5983   0046F8  6E11               	movwf	___aomod@counter^0,c
  5984   0046FA  EF89  F023         	goto	l3988
  5985   0046FE                     l3986:
  5986   0046FE  90D8               	bcf	status,0,c
  5987   004700  3609               	rlcf	___aomod@divisor^0,f,c
  5988   004702  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5989   004704  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5990   004706  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5991   004708  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5992   00470A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5993   00470C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5994   00470E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5995   004710  2A11               	incf	___aomod@counter^0,f,c
  5996   004712                     l3988:
  5997   004712  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5998   004714  EF8E  F023         	goto	u3481
  5999   004718  EF90  F023         	goto	u3480
  6000   00471C                     u3481:
  6001   00471C  EF7F  F023         	goto	l3986
  6002   004720                     u3480:
  6003   004720                     l3990:
  6004   004720  5009               	movf	___aomod@divisor^0,w,c
  6005   004722  5C01               	subwf	___aomod@dividend^0,w,c
  6006   004724  500A               	movf	(___aomod@divisor+1)^0,w,c
  6007   004726  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6008   004728  500B               	movf	(___aomod@divisor+2)^0,w,c
  6009   00472A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6010   00472C  500C               	movf	(___aomod@divisor+3)^0,w,c
  6011   00472E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6012   004730  500D               	movf	(___aomod@divisor+4)^0,w,c
  6013   004732  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6014   004734  500E               	movf	(___aomod@divisor+5)^0,w,c
  6015   004736  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6016   004738  500F               	movf	(___aomod@divisor+6)^0,w,c
  6017   00473A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6018   00473C  5010               	movf	(___aomod@divisor+7)^0,w,c
  6019   00473E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6020   004740  A0D8               	btfss	status,0,c
  6021   004742  EFA5  F023         	goto	u3491
  6022   004746  EFA7  F023         	goto	u3490
  6023   00474A                     u3491:
  6024   00474A  EFB7  F023         	goto	l3994
  6025   00474E                     u3490:
  6026   00474E  5009               	movf	___aomod@divisor^0,w,c
  6027   004750  5E01               	subwf	___aomod@dividend^0,f,c
  6028   004752  500A               	movf	(___aomod@divisor+1)^0,w,c
  6029   004754  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6030   004756  500B               	movf	(___aomod@divisor+2)^0,w,c
  6031   004758  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6032   00475A  500C               	movf	(___aomod@divisor+3)^0,w,c
  6033   00475C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6034   00475E  500D               	movf	(___aomod@divisor+4)^0,w,c
  6035   004760  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6036   004762  500E               	movf	(___aomod@divisor+5)^0,w,c
  6037   004764  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6038   004766  500F               	movf	(___aomod@divisor+6)^0,w,c
  6039   004768  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6040   00476A  5010               	movf	(___aomod@divisor+7)^0,w,c
  6041   00476C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6042   00476E                     l3994:
  6043   00476E  90D8               	bcf	status,0,c
  6044   004770  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6045   004772  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6046   004774  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6047   004776  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6048   004778  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6049   00477A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6050   00477C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6051   00477E  3209               	rrcf	___aomod@divisor^0,f,c
  6052   004780  2E11               	decfsz	___aomod@counter^0,f,c
  6053   004782  EF90  F023         	goto	l3990
  6054   004786                     l3998:
  6055   004786  5012               	movf	___aomod@sign^0,w,c
  6056   004788  B4D8               	btfsc	status,2,c
  6057   00478A  EFC9  F023         	goto	u3501
  6058   00478E  EFCB  F023         	goto	u3500
  6059   004792                     u3501:
  6060   004792  EFDB  F023         	goto	l4002
  6061   004796                     u3500:
  6062   004796  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6063   004798  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6064   00479A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6065   00479C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6066   00479E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6067   0047A0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6068   0047A2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6069   0047A4  6C01               	negf	___aomod@dividend^0,c
  6070   0047A6  0E00               	movlw	0
  6071   0047A8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6072   0047AA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6073   0047AC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6074   0047AE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6075   0047B0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6076   0047B2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6077   0047B4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6078   0047B6                     l4002:
  6079   0047B6  C001  F001         	movff	___aomod@dividend,?___aomod
  6080   0047BA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6081   0047BE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6082   0047C2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6083   0047C6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6084   0047CA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6085   0047CE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6086   0047D2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6087   0047D6  0012               	return		;funcret
  6088   0047D8                     __end_of___aomod:
  6089                           	callstack 0
  6090                           
  6091 ;; *************** function ___aodiv *****************
  6092 ;; Defined at:
  6093 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  dividend        8    0[COMRAM] long long 
  6096 ;;  divisor         8    8[COMRAM] long long 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  quotient        8   18[COMRAM] long long 
  6099 ;;  sign            1   17[COMRAM] unsigned char 
  6100 ;;  counter         1   16[COMRAM] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  8    0[COMRAM] long long 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6110 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6111 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6113 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6114 ;;Total ram usage:       26 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; Hardware stack levels required when called: 1
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_dtoa
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text19
  6125   004380                     __ptext19:
  6126                           	callstack 0
  6127   004380                     ___aodiv:
  6128                           	callstack 25
  6129   004380  0E00               	movlw	0
  6130   004382  6E12               	movwf	___aodiv@sign^0,c
  6131   004384  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6132   004386  EFC9  F021         	goto	u3380
  6133   00438A  EFC7  F021         	goto	u3381
  6134   00438E                     u3381:
  6135   00438E  EFDB  F021         	goto	l3934
  6136   004392                     u3380:
  6137   004392  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6138   004394  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6139   004396  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6140   004398  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6141   00439A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6142   00439C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6143   00439E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6144   0043A0  6C09               	negf	___aodiv@divisor^0,c
  6145   0043A2  0E00               	movlw	0
  6146   0043A4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6147   0043A6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6148   0043A8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6149   0043AA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6150   0043AC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6151   0043AE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6152   0043B0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6153   0043B2  0E01               	movlw	1
  6154   0043B4  6E12               	movwf	___aodiv@sign^0,c
  6155   0043B6                     l3934:
  6156   0043B6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6157   0043B8  EFE2  F021         	goto	u3390
  6158   0043BC  EFE0  F021         	goto	u3391
  6159   0043C0                     u3391:
  6160   0043C0  EFF4  F021         	goto	l3940
  6161   0043C4                     u3390:
  6162   0043C4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6163   0043C6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6164   0043C8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6165   0043CA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6166   0043CC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6167   0043CE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6168   0043D0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6169   0043D2  6C01               	negf	___aodiv@dividend^0,c
  6170   0043D4  0E00               	movlw	0
  6171   0043D6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6172   0043D8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6173   0043DA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6174   0043DC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6175   0043DE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6176   0043E0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6177   0043E2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6178   0043E4  0E01               	movlw	1
  6179   0043E6  1A12               	xorwf	___aodiv@sign^0,f,c
  6180   0043E8                     l3940:
  6181   0043E8  EE20  F013         	lfsr	2,___aodiv@quotient
  6182   0043EC  0E07               	movlw	7
  6183   0043EE                     u3401:
  6184   0043EE  6ADE               	clrf	postinc2,c
  6185   0043F0  06E8               	decf	wreg,f,c
  6186   0043F2  E2FD               	bc	u3401
  6187   0043F4  5009               	movf	___aodiv@divisor^0,w,c
  6188   0043F6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6189   0043F8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6190   0043FA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6191   0043FC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6192   0043FE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6193   004400  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6194   004402  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6195   004404  B4D8               	btfsc	status,2,c
  6196   004406  EF07  F022         	goto	u3411
  6197   00440A  EF09  F022         	goto	u3410
  6198   00440E                     u3411:
  6199   00440E  EF5B  F022         	goto	l3962
  6200   004412                     u3410:
  6201   004412  0E01               	movlw	1
  6202   004414  6E11               	movwf	___aodiv@counter^0,c
  6203   004416  EF17  F022         	goto	l3948
  6204   00441A                     l3946:
  6205   00441A  90D8               	bcf	status,0,c
  6206   00441C  3609               	rlcf	___aodiv@divisor^0,f,c
  6207   00441E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6208   004420  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6209   004422  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6210   004424  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6211   004426  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6212   004428  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6213   00442A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6214   00442C  2A11               	incf	___aodiv@counter^0,f,c
  6215   00442E                     l3948:
  6216   00442E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6217   004430  EF1C  F022         	goto	u3421
  6218   004434  EF1E  F022         	goto	u3420
  6219   004438                     u3421:
  6220   004438  EF0D  F022         	goto	l3946
  6221   00443C                     u3420:
  6222   00443C                     l3950:
  6223   00443C  90D8               	bcf	status,0,c
  6224   00443E  3613               	rlcf	___aodiv@quotient^0,f,c
  6225   004440  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6226   004442  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6227   004444  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6228   004446  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6229   004448  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6230   00444A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6231   00444C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6232   00444E  5009               	movf	___aodiv@divisor^0,w,c
  6233   004450  5C01               	subwf	___aodiv@dividend^0,w,c
  6234   004452  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6235   004454  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6236   004456  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6237   004458  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6238   00445A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6239   00445C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6240   00445E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6241   004460  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6242   004462  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6243   004464  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6244   004466  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6245   004468  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6246   00446A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6247   00446C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6248   00446E  A0D8               	btfss	status,0,c
  6249   004470  EF3C  F022         	goto	u3431
  6250   004474  EF3E  F022         	goto	u3430
  6251   004478                     u3431:
  6252   004478  EF4F  F022         	goto	l3958
  6253   00447C                     u3430:
  6254   00447C  5009               	movf	___aodiv@divisor^0,w,c
  6255   00447E  5E01               	subwf	___aodiv@dividend^0,f,c
  6256   004480  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6257   004482  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6258   004484  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6259   004486  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6260   004488  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6261   00448A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6262   00448C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6263   00448E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6264   004490  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6265   004492  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6266   004494  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6267   004496  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6268   004498  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6269   00449A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6270   00449C  8013               	bsf	___aodiv@quotient^0,0,c
  6271   00449E                     l3958:
  6272   00449E  90D8               	bcf	status,0,c
  6273   0044A0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6274   0044A2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6275   0044A4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6276   0044A6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6277   0044A8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6278   0044AA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6279   0044AC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6280   0044AE  3209               	rrcf	___aodiv@divisor^0,f,c
  6281   0044B0  2E11               	decfsz	___aodiv@counter^0,f,c
  6282   0044B2  EF1E  F022         	goto	l3950
  6283   0044B6                     l3962:
  6284   0044B6  5012               	movf	___aodiv@sign^0,w,c
  6285   0044B8  B4D8               	btfsc	status,2,c
  6286   0044BA  EF61  F022         	goto	u3441
  6287   0044BE  EF63  F022         	goto	u3440
  6288   0044C2                     u3441:
  6289   0044C2  EF73  F022         	goto	l3966
  6290   0044C6                     u3440:
  6291   0044C6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6292   0044C8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6293   0044CA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6294   0044CC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6295   0044CE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6296   0044D0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6297   0044D2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6298   0044D4  6C13               	negf	___aodiv@quotient^0,c
  6299   0044D6  0E00               	movlw	0
  6300   0044D8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6301   0044DA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6302   0044DC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6303   0044DE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6304   0044E0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6305   0044E2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6306   0044E4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6307   0044E6                     l3966:
  6308   0044E6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6309   0044EA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6310   0044EE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6311   0044F2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6312   0044F6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6313   0044FA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6314   0044FE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6315   004502  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6316   004506  0012               	return		;funcret
  6317   004508                     __end_of___aodiv:
  6318                           	callstack 0
  6319                           
  6320 ;; *************** function _sendStringSerial4 *****************
  6321 ;; Defined at:
  6322 ;;		line 33 in file "serial.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;  string          2    1[COMRAM] PTR unsigned char 
  6325 ;;		 -> main@buf(100), 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;		None
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      void 
  6330 ;; Registers used:
  6331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6341 ;;Total ram usage:        2 bytes
  6342 ;; Hardware stack levels used: 1
  6343 ;; Hardware stack levels required when called: 2
  6344 ;; This function calls:
  6345 ;;		_sendCharSerial4
  6346 ;; This function is called by:
  6347 ;;		_main
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text20
  6352   005B30                     __ptext20:
  6353                           	callstack 0
  6354   005B30                     _sendStringSerial4:
  6355                           	callstack 28
  6356   005B30                     
  6357                           ;serial.c: 34:     while (*string!=0){
  6358   005B30  EFA3  F02D         	goto	l5316
  6359   005B34                     l5312:
  6360                           
  6361                           ;serial.c: 35:         sendCharSerial4(*string++);
  6362   005B34  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6363   005B38  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6364   005B3C  50DF               	movf	indf2,w,c
  6365   005B3E  EC0B  F02E         	call	_sendCharSerial4
  6366   005B42  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6367   005B44  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6368   005B46                     l5316:
  6369                           
  6370                           ;serial.c: 34:     while (*string!=0){
  6371   005B46  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6372   005B4A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6373   005B4E  50DF               	movf	indf2,w,c
  6374   005B50  A4D8               	btfss	status,2,c
  6375   005B52  EFAD  F02D         	goto	u5371
  6376   005B56  EFAF  F02D         	goto	u5370
  6377   005B5A                     u5371:
  6378   005B5A  EF9A  F02D         	goto	l5312
  6379   005B5E                     u5370:
  6380   005B5E  0012               	return		;funcret
  6381   005B60                     __end_of_sendStringSerial4:
  6382                           	callstack 0
  6383                           
  6384 ;; *************** function _sendCharSerial4 *****************
  6385 ;; Defined at:
  6386 ;;		line 26 in file "serial.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  charToSend      1    wreg     unsigned char 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  charToSend      1    0[COMRAM] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  1    wreg      void 
  6393 ;; Registers used:
  6394 ;;		wreg
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;Total ram usage:        1 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_sendStringSerial4
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text21
  6415   005C16                     __ptext21:
  6416                           	callstack 0
  6417   005C16                     _sendCharSerial4:
  6418                           	callstack 28
  6419                           
  6420                           ;incstack = 0
  6421                           ;sendCharSerial4@charToSend stored from wreg
  6422   005C16  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6423   005C18                     l209:
  6424   005C18  010E               	movlb	14	; () banked
  6425   005C1A  A537               	btfss	55,2,b	;volatile
  6426   005C1C  EF12  F02E         	goto	u4921
  6427   005C20  EF14  F02E         	goto	u4920
  6428   005C24                     u4921:
  6429   005C24  EF0C  F02E         	goto	l209
  6430   005C28                     u4920:
  6431   005C28                     
  6432                           ; BSR set to: 14
  6433                           ;serial.c: 28:     TX4REG = charToSend;
  6434   005C28  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6435   005C2C                     
  6436                           ; BSR set to: 14
  6437   005C2C  0012               	return		;funcret
  6438   005C2E                     __end_of_sendCharSerial4:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _readColours *****************
  6442 ;; Defined at:
  6443 ;;		line 105 in file "color.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  vals            2   11[COMRAM] PTR struct RGB
  6446 ;;		 -> vals(8), 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;Total ram usage:        2 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; Hardware stack levels required when called: 4
  6465 ;; This function calls:
  6466 ;;		_color_read_Blue
  6467 ;;		_color_read_Green
  6468 ;;		_color_read_Red
  6469 ;;		_color_read_lum
  6470 ;; This function is called by:
  6471 ;;		_main
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text22
  6476   00520E                     __ptext22:
  6477                           	callstack 0
  6478   00520E                     _readColours:
  6479                           	callstack 26
  6480   00520E                     
  6481                           ;color.c: 107:     vals ->R = color_read_Red();
  6482   00520E  ECE0  F02B         	call	_color_read_Red	;wreg free
  6483   005212  C00C  FFD9         	movff	readColours@vals,fsr2l
  6484   005216  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6485   00521A  C005  FFDE         	movff	?_color_read_Red,postinc2
  6486   00521E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6487                           
  6488                           ;color.c: 108:     vals ->B = color_read_Blue();
  6489   005222  EC30  F02C         	call	_color_read_Blue	;wreg free
  6490   005226  EE20 F004          	lfsr	2,4
  6491   00522A  500C               	movf	readColours@vals^0,w,c
  6492   00522C  26D9               	addwf	fsr2l,f,c
  6493   00522E  500D               	movf	(readColours@vals+1)^0,w,c
  6494   005230  22DA               	addwfc	fsr2h,f,c
  6495   005232  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6496   005236  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6497                           
  6498                           ;color.c: 109:     vals ->G = color_read_Green();
  6499   00523A  EC08  F02C         	call	_color_read_Green	;wreg free
  6500   00523E  EE20 F002          	lfsr	2,2
  6501   005242  500C               	movf	readColours@vals^0,w,c
  6502   005244  26D9               	addwf	fsr2l,f,c
  6503   005246  500D               	movf	(readColours@vals+1)^0,w,c
  6504   005248  22DA               	addwfc	fsr2h,f,c
  6505   00524A  C005  FFDE         	movff	?_color_read_Green,postinc2
  6506   00524E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6507                           
  6508                           ;color.c: 110:     vals ->L = color_read_lum();
  6509   005252  ECB8  F02B         	call	_color_read_lum	;wreg free
  6510   005256  EE20 F006          	lfsr	2,6
  6511   00525A  500C               	movf	readColours@vals^0,w,c
  6512   00525C  26D9               	addwf	fsr2l,f,c
  6513   00525E  500D               	movf	(readColours@vals+1)^0,w,c
  6514   005260  22DA               	addwfc	fsr2h,f,c
  6515   005262  C005  FFDE         	movff	?_color_read_lum,postinc2
  6516   005266  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6517   00526A  0012               	return		;funcret
  6518   00526C                     __end_of_readColours:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function _color_read_lum *****************
  6522 ;; Defined at:
  6523 ;;		line 49 in file "color.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;		None
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  tmp             2    9[COMRAM] unsigned int 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  2    4[COMRAM] unsigned int 
  6530 ;; Registers used:
  6531 ;;		wreg, status,2, status,0, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6539 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6540 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6541 ;;Total ram usage:        7 bytes
  6542 ;; Hardware stack levels used: 1
  6543 ;; Hardware stack levels required when called: 3
  6544 ;; This function calls:
  6545 ;;		_I2C_2_Master_Read
  6546 ;;		_I2C_2_Master_RepStart
  6547 ;;		_I2C_2_Master_Start
  6548 ;;		_I2C_2_Master_Stop
  6549 ;;		_I2C_2_Master_Write
  6550 ;; This function is called by:
  6551 ;;		_readColours
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text23
  6556   005770                     __ptext23:
  6557                           	callstack 0
  6558   005770                     _color_read_lum:
  6559                           	callstack 26
  6560   005770                     
  6561                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6562   005770  EC27  F02E         	call	_I2C_2_Master_Start	;wreg free
  6563                           
  6564                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6565   005774  0E52               	movlw	82
  6566   005776  EC17  F02E         	call	_I2C_2_Master_Write
  6567                           
  6568                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6569   00577A  0EB4               	movlw	180
  6570   00577C  EC17  F02E         	call	_I2C_2_Master_Write
  6571                           
  6572                           ;color.c: 55:  I2C_2_Master_RepStart();
  6573   005780  EC1D  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6574                           
  6575                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6576   005784  0E53               	movlw	83
  6577   005786  EC17  F02E         	call	_I2C_2_Master_Write
  6578                           
  6579                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6580   00578A  0E01               	movlw	1
  6581   00578C  ECBF  F02C         	call	_I2C_2_Master_Read
  6582   005790  6E07               	movwf	??_color_read_lum^0,c
  6583   005792  5007               	movf	??_color_read_lum^0,w,c
  6584   005794  6E0A               	movwf	color_read_lum@tmp^0,c
  6585   005796  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6586                           
  6587                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6588   005798  0E00               	movlw	0
  6589   00579A  ECBF  F02C         	call	_I2C_2_Master_Read
  6590   00579E  6E07               	movwf	??_color_read_lum^0,c
  6591   0057A0  5007               	movf	??_color_read_lum^0,w,c
  6592   0057A2  6E09               	movwf	(??_color_read_lum+2)^0,c
  6593   0057A4  6A08               	clrf	(??_color_read_lum+1)^0,c
  6594   0057A6  500A               	movf	color_read_lum@tmp^0,w,c
  6595   0057A8  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6596   0057AA  6E0A               	movwf	color_read_lum@tmp^0,c
  6597   0057AC  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6598   0057AE  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6599   0057B0  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6600                           
  6601                           ;color.c: 59:  I2C_2_Master_Stop();
  6602   0057B2  EC22  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6603   0057B6                     
  6604                           ;color.c: 60:  return tmp;
  6605   0057B6  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6606   0057BA  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6607   0057BE  0012               	return		;funcret
  6608   0057C0                     __end_of_color_read_lum:
  6609                           	callstack 0
  6610                           
  6611 ;; *************** function _color_read_Red *****************
  6612 ;; Defined at:
  6613 ;;		line 63 in file "color.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;  tmp             2    9[COMRAM] unsigned int 
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  2    4[COMRAM] unsigned int 
  6620 ;; Registers used:
  6621 ;;		wreg, status,2, status,0, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6631 ;;Total ram usage:        7 bytes
  6632 ;; Hardware stack levels used: 1
  6633 ;; Hardware stack levels required when called: 3
  6634 ;; This function calls:
  6635 ;;		_I2C_2_Master_Read
  6636 ;;		_I2C_2_Master_RepStart
  6637 ;;		_I2C_2_Master_Start
  6638 ;;		_I2C_2_Master_Stop
  6639 ;;		_I2C_2_Master_Write
  6640 ;; This function is called by:
  6641 ;;		_readColours
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text24
  6646   0057C0                     __ptext24:
  6647                           	callstack 0
  6648   0057C0                     _color_read_Red:
  6649                           	callstack 26
  6650   0057C0                     
  6651                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6652   0057C0  EC27  F02E         	call	_I2C_2_Master_Start	;wreg free
  6653                           
  6654                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6655   0057C4  0E52               	movlw	82
  6656   0057C6  EC17  F02E         	call	_I2C_2_Master_Write
  6657                           
  6658                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6659   0057CA  0EB6               	movlw	182
  6660   0057CC  EC17  F02E         	call	_I2C_2_Master_Write
  6661                           
  6662                           ;color.c: 69:  I2C_2_Master_RepStart();
  6663   0057D0  EC1D  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6664                           
  6665                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6666   0057D4  0E53               	movlw	83
  6667   0057D6  EC17  F02E         	call	_I2C_2_Master_Write
  6668                           
  6669                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  6670   0057DA  0E01               	movlw	1
  6671   0057DC  ECBF  F02C         	call	_I2C_2_Master_Read
  6672   0057E0  6E07               	movwf	??_color_read_Red^0,c
  6673   0057E2  5007               	movf	??_color_read_Red^0,w,c
  6674   0057E4  6E0A               	movwf	color_read_Red@tmp^0,c
  6675   0057E6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6676                           
  6677                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6678   0057E8  0E00               	movlw	0
  6679   0057EA  ECBF  F02C         	call	_I2C_2_Master_Read
  6680   0057EE  6E07               	movwf	??_color_read_Red^0,c
  6681   0057F0  5007               	movf	??_color_read_Red^0,w,c
  6682   0057F2  6E09               	movwf	(??_color_read_Red+2)^0,c
  6683   0057F4  6A08               	clrf	(??_color_read_Red+1)^0,c
  6684   0057F6  500A               	movf	color_read_Red@tmp^0,w,c
  6685   0057F8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6686   0057FA  6E0A               	movwf	color_read_Red@tmp^0,c
  6687   0057FC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6688   0057FE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6689   005800  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6690                           
  6691                           ;color.c: 73:  I2C_2_Master_Stop();
  6692   005802  EC22  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6693   005806                     
  6694                           ;color.c: 74:  return tmp;
  6695   005806  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6696   00580A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6697   00580E  0012               	return		;funcret
  6698   005810                     __end_of_color_read_Red:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function _color_read_Green *****************
  6702 ;; Defined at:
  6703 ;;		line 76 in file "color.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;		None
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  tmp             2    9[COMRAM] unsigned int 
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  2    4[COMRAM] unsigned int 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0, cstack
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;Total ram usage:        7 bytes
  6722 ;; Hardware stack levels used: 1
  6723 ;; Hardware stack levels required when called: 3
  6724 ;; This function calls:
  6725 ;;		_I2C_2_Master_Read
  6726 ;;		_I2C_2_Master_RepStart
  6727 ;;		_I2C_2_Master_Start
  6728 ;;		_I2C_2_Master_Stop
  6729 ;;		_I2C_2_Master_Write
  6730 ;; This function is called by:
  6731 ;;		_readColours
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text25
  6736   005810                     __ptext25:
  6737                           	callstack 0
  6738   005810                     _color_read_Green:
  6739                           	callstack 26
  6740   005810                     
  6741                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6742   005810  EC27  F02E         	call	_I2C_2_Master_Start	;wreg free
  6743                           
  6744                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6745   005814  0E52               	movlw	82
  6746   005816  EC17  F02E         	call	_I2C_2_Master_Write
  6747                           
  6748                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  6749   00581A  0EB8               	movlw	184
  6750   00581C  EC17  F02E         	call	_I2C_2_Master_Write
  6751                           
  6752                           ;color.c: 82:  I2C_2_Master_RepStart();
  6753   005820  EC1D  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6754                           
  6755                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6756   005824  0E53               	movlw	83
  6757   005826  EC17  F02E         	call	_I2C_2_Master_Write
  6758                           
  6759                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6760   00582A  0E01               	movlw	1
  6761   00582C  ECBF  F02C         	call	_I2C_2_Master_Read
  6762   005830  6E07               	movwf	??_color_read_Green^0,c
  6763   005832  5007               	movf	??_color_read_Green^0,w,c
  6764   005834  6E0A               	movwf	color_read_Green@tmp^0,c
  6765   005836  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6766                           
  6767                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6768   005838  0E00               	movlw	0
  6769   00583A  ECBF  F02C         	call	_I2C_2_Master_Read
  6770   00583E  6E07               	movwf	??_color_read_Green^0,c
  6771   005840  5007               	movf	??_color_read_Green^0,w,c
  6772   005842  6E09               	movwf	(??_color_read_Green+2)^0,c
  6773   005844  6A08               	clrf	(??_color_read_Green+1)^0,c
  6774   005846  500A               	movf	color_read_Green@tmp^0,w,c
  6775   005848  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6776   00584A  6E0A               	movwf	color_read_Green@tmp^0,c
  6777   00584C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6778   00584E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6779   005850  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6780                           
  6781                           ;color.c: 86:  I2C_2_Master_Stop();
  6782   005852  EC22  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6783   005856                     
  6784                           ;color.c: 87:  return tmp;
  6785   005856  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6786   00585A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6787   00585E  0012               	return		;funcret
  6788   005860                     __end_of_color_read_Green:
  6789                           	callstack 0
  6790                           
  6791 ;; *************** function _color_read_Blue *****************
  6792 ;; Defined at:
  6793 ;;		line 90 in file "color.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;		None
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  tmp             2    9[COMRAM] unsigned int 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  2    4[COMRAM] unsigned int 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;Total ram usage:        7 bytes
  6812 ;; Hardware stack levels used: 1
  6813 ;; Hardware stack levels required when called: 3
  6814 ;; This function calls:
  6815 ;;		_I2C_2_Master_Read
  6816 ;;		_I2C_2_Master_RepStart
  6817 ;;		_I2C_2_Master_Start
  6818 ;;		_I2C_2_Master_Stop
  6819 ;;		_I2C_2_Master_Write
  6820 ;; This function is called by:
  6821 ;;		_readColours
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text26
  6826   005860                     __ptext26:
  6827                           	callstack 0
  6828   005860                     _color_read_Blue:
  6829                           	callstack 26
  6830   005860                     
  6831                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  6832   005860  EC27  F02E         	call	_I2C_2_Master_Start	;wreg free
  6833                           
  6834                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  6835   005864  0E52               	movlw	82
  6836   005866  EC17  F02E         	call	_I2C_2_Master_Write
  6837                           
  6838                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  6839   00586A  0EBA               	movlw	186
  6840   00586C  EC17  F02E         	call	_I2C_2_Master_Write
  6841                           
  6842                           ;color.c: 96:  I2C_2_Master_RepStart();
  6843   005870  EC1D  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6844                           
  6845                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  6846   005874  0E53               	movlw	83
  6847   005876  EC17  F02E         	call	_I2C_2_Master_Write
  6848                           
  6849                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  6850   00587A  0E01               	movlw	1
  6851   00587C  ECBF  F02C         	call	_I2C_2_Master_Read
  6852   005880  6E07               	movwf	??_color_read_Blue^0,c
  6853   005882  5007               	movf	??_color_read_Blue^0,w,c
  6854   005884  6E0A               	movwf	color_read_Blue@tmp^0,c
  6855   005886  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6856                           
  6857                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6858   005888  0E00               	movlw	0
  6859   00588A  ECBF  F02C         	call	_I2C_2_Master_Read
  6860   00588E  6E07               	movwf	??_color_read_Blue^0,c
  6861   005890  5007               	movf	??_color_read_Blue^0,w,c
  6862   005892  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6863   005894  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6864   005896  500A               	movf	color_read_Blue@tmp^0,w,c
  6865   005898  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6866   00589A  6E0A               	movwf	color_read_Blue@tmp^0,c
  6867   00589C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6868   00589E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6869   0058A0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6870                           
  6871                           ;color.c: 100:  I2C_2_Master_Stop();
  6872   0058A2  EC22  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6873   0058A6                     
  6874                           ;color.c: 101:  return tmp;
  6875   0058A6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6876   0058AA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6877   0058AE  0012               	return		;funcret
  6878   0058B0                     __end_of_color_read_Blue:
  6879                           	callstack 0
  6880                           
  6881 ;; *************** function _I2C_2_Master_RepStart *****************
  6882 ;; Defined at:
  6883 ;;		line 33 in file "i2c.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;		None
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      void 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;Total ram usage:        0 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 2
  6904 ;; This function calls:
  6905 ;;		_I2C_2_Master_Idle
  6906 ;; This function is called by:
  6907 ;;		_color_read_lum
  6908 ;;		_color_read_Red
  6909 ;;		_color_read_Green
  6910 ;;		_color_read_Blue
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           	psect	text27
  6915   005C3A                     __ptext27:
  6916                           	callstack 0
  6917   005C3A                     _I2C_2_Master_RepStart:
  6918                           	callstack 26
  6919   005C3A                     
  6920                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6921   005C3A  ECC5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6922   005C3E                     
  6923                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6924   005C3E  010E               	movlb	14	; () banked
  6925   005C40  83DA               	bsf	218,1,b	;volatile
  6926   005C42                     
  6927                           ; BSR set to: 14
  6928   005C42  0012               	return		;funcret
  6929   005C44                     __end_of_I2C_2_Master_RepStart:
  6930                           	callstack 0
  6931                           
  6932 ;; *************** function _I2C_2_Master_Read *****************
  6933 ;; Defined at:
  6934 ;;		line 51 in file "i2c.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  ack             1    wreg     unsigned char 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  ack             1    2[COMRAM] unsigned char 
  6939 ;;  tmp             1    3[COMRAM] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      unsigned char 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6953 ;;Total ram usage:        3 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 2
  6956 ;; This function calls:
  6957 ;;		_I2C_2_Master_Idle
  6958 ;; This function is called by:
  6959 ;;		_color_read_lum
  6960 ;;		_color_read_Red
  6961 ;;		_color_read_Green
  6962 ;;		_color_read_Blue
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text28
  6967   00597E                     __ptext28:
  6968                           	callstack 0
  6969   00597E                     _I2C_2_Master_Read:
  6970                           	callstack 26
  6971                           
  6972                           ; BSR set to: 14
  6973                           ;incstack = 0
  6974                           ;I2C_2_Master_Read@ack stored from wreg
  6975   00597E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6976   005980                     
  6977                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6978   005980  ECC5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6979   005984                     
  6980                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6981   005984  010E               	movlb	14	; () banked
  6982   005986  87DA               	bsf	218,3,b	;volatile
  6983                           
  6984                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6985   005988  ECC5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6986   00598C                     
  6987                           ;i2c.c: 57:   tmp = SSP2BUF;
  6988   00598C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6989                           
  6990                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6991   005990  ECC5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6992   005994                     
  6993                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6994   005994  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6995   005996  B4D8               	btfsc	status,2,c
  6996   005998  EFD0  F02C         	goto	u4861
  6997   00599C  EFD4  F02C         	goto	u4860
  6998   0059A0                     u4861:
  6999   0059A0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7000   0059A2  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7001   0059A4  EFD5  F02C         	goto	u4878
  7002   0059A8                     u4860:
  7003   0059A8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7004   0059AA                     u4878:
  7005   0059AA  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7006   0059AC  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7007   0059AE  010E               	movlb	14	; () banked
  7008   0059B0  51DA               	movf	218,w,b	;volatile
  7009   0059B2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7010   0059B4  0BDF               	andlw	-33
  7011   0059B6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7012   0059B8  6FDA               	movwf	218,b	;volatile
  7013   0059BA                     
  7014                           ; BSR set to: 14
  7015                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7016   0059BA  89DA               	bsf	218,4,b	;volatile
  7017   0059BC                     
  7018                           ; BSR set to: 14
  7019                           ;i2c.c: 61:   return tmp;
  7020   0059BC  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7021   0059BE                     
  7022                           ; BSR set to: 14
  7023   0059BE  0012               	return		;funcret
  7024   0059C0                     __end_of_I2C_2_Master_Read:
  7025                           	callstack 0
  7026                           
  7027 ;; *************** function _initUSART4 *****************
  7028 ;; Defined at:
  7029 ;;		line 4 in file "serial.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;		None
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 1
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_main
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text29
  7058   005BF8                     __ptext29:
  7059                           	callstack 0
  7060   005BF8                     _initUSART4:
  7061                           	callstack 29
  7062   005BF8                     
  7063                           ;serial.c: 5:     RC0PPS = 0x12;
  7064   005BF8  0E12               	movlw	18
  7065   005BFA  010E               	movlb	14	; () banked
  7066   005BFC  6F62               	movwf	98,b	;volatile
  7067                           
  7068                           ;serial.c: 6:     RX4PPS = 0x11;
  7069   005BFE  0E11               	movlw	17
  7070   005C00  6F15               	movwf	21,b	;volatile
  7071   005C02                     
  7072                           ; BSR set to: 14
  7073                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7074   005C02  97E9               	bcf	233,3,b	;volatile
  7075   005C04                     
  7076                           ; BSR set to: 14
  7077                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7078   005C04  95E8               	bcf	232,2,b	;volatile
  7079                           
  7080                           ;serial.c: 9:     SP4BRGL = 51;
  7081   005C06  0E33               	movlw	51
  7082   005C08  6FE5               	movwf	229,b	;volatile
  7083                           
  7084                           ;serial.c: 10:     SP4BRGH = 0;
  7085   005C0A  0E00               	movlw	0
  7086   005C0C  6FE6               	movwf	230,b	;volatile
  7087   005C0E                     
  7088                           ; BSR set to: 14
  7089                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7090   005C0E  89E7               	bsf	231,4,b	;volatile
  7091   005C10                     
  7092                           ; BSR set to: 14
  7093                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7094   005C10  8BE8               	bsf	232,5,b	;volatile
  7095   005C12                     
  7096                           ; BSR set to: 14
  7097                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7098   005C12  8FE7               	bsf	231,7,b	;volatile
  7099   005C14                     
  7100                           ; BSR set to: 14
  7101   005C14  0012               	return		;funcret
  7102   005C16                     __end_of_initUSART4:
  7103                           	callstack 0
  7104                           
  7105 ;; *************** function _initDCmotorsPWM *****************
  7106 ;; Defined at:
  7107 ;;		line 5 in file "dc_motor.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;Total ram usage:        2 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_main
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text30
  7136   004ECC                     __ptext30:
  7137                           	callstack 0
  7138   004ECC                     _initDCmotorsPWM:
  7139                           	callstack 29
  7140   004ECC                     
  7141                           ;dc_motor.c: 9:     RE2PPS=0x05;
  7142   004ECC  0E05               	movlw	5
  7143   004ECE  010E               	movlb	14	; () banked
  7144   004ED0  6F74               	movwf	116,b	;volatile
  7145                           
  7146                           ;dc_motor.c: 10:     RE4PPS=0x06;
  7147   004ED2  0E06               	movlw	6
  7148   004ED4  6F76               	movwf	118,b	;volatile
  7149                           
  7150                           ;dc_motor.c: 11:     RC7PPS=0x07;
  7151   004ED6  0E07               	movlw	7
  7152   004ED8  6F69               	movwf	105,b	;volatile
  7153                           
  7154                           ;dc_motor.c: 12:     RG6PPS=0x08;
  7155   004EDA  0E08               	movlw	8
  7156   004EDC  6F88               	movwf	136,b	;volatile
  7157   004EDE                     
  7158                           ; BSR set to: 14
  7159                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  7160   004EDE  9485               	bcf	133,2,c	;volatile
  7161   004EE0                     
  7162                           ; BSR set to: 14
  7163                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  7164   004EE0  9885               	bcf	133,4,c	;volatile
  7165   004EE2                     
  7166                           ; BSR set to: 14
  7167                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  7168   004EE2  9E83               	bcf	131,7,c	;volatile
  7169   004EE4                     
  7170                           ; BSR set to: 14
  7171                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  7172   004EE4  9C87               	bcf	135,6,c	;volatile
  7173                           
  7174                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  7175   004EE6  50BD               	movf	189,w,c	;volatile
  7176   004EE8  0B8F               	andlw	-113
  7177   004EEA  0930               	iorlw	48
  7178   004EEC  6EBD               	movwf	189,c	;volatile
  7179                           
  7180                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  7181   004EEE  0EE0               	movlw	-32
  7182   004EF0  16BE               	andwf	190,f,c	;volatile
  7183                           
  7184                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  7185   004EF2  50BF               	movf	191,w,c	;volatile
  7186   004EF4  0BF0               	andlw	-16
  7187   004EF6  0901               	iorlw	1
  7188   004EF8  6EBF               	movwf	191,c	;volatile
  7189   004EFA                     
  7190                           ; BSR set to: 14
  7191                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  7192   004EFA  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7193   004EFE                     
  7194                           ; BSR set to: 14
  7195                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  7196   004EFE  8EBD               	bsf	189,7,c	;volatile
  7197                           
  7198                           ;dc_motor.c: 33:     CCPR1H=0;
  7199   004F00  0E00               	movlw	0
  7200   004F02  6EAA               	movwf	170,c	;volatile
  7201                           
  7202                           ;dc_motor.c: 34:     CCPR2H=0;
  7203   004F04  0E00               	movlw	0
  7204   004F06  6EA6               	movwf	166,c	;volatile
  7205                           
  7206                           ;dc_motor.c: 35:     CCPR3H=0;
  7207   004F08  0E00               	movlw	0
  7208   004F0A  010F               	movlb	15	; () banked
  7209   004F0C  6F25               	movwf	37,b	;volatile
  7210                           
  7211                           ;dc_motor.c: 36:     CCPR4H=0;
  7212   004F0E  0E00               	movlw	0
  7213   004F10  6F21               	movwf	33,b	;volatile
  7214                           
  7215                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  7216   004F12  0EFC               	movlw	-4
  7217   004F14  16AD               	andwf	173,f,c	;volatile
  7218                           
  7219                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  7220   004F16  0EF3               	movlw	-13
  7221   004F18  16AD               	andwf	173,f,c	;volatile
  7222                           
  7223                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  7224   004F1A  0ECF               	movlw	-49
  7225   004F1C  16AD               	andwf	173,f,c	;volatile
  7226                           
  7227                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  7228   004F1E  0E3F               	movlw	-193
  7229   004F20  16AD               	andwf	173,f,c	;volatile
  7230   004F22                     
  7231                           ; BSR set to: 15
  7232                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  7233   004F22  88AB               	bsf	171,4,c	;volatile
  7234                           
  7235                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  7236   004F24  50AB               	movf	171,w,c	;volatile
  7237   004F26  0BF0               	andlw	-16
  7238   004F28  090C               	iorlw	12
  7239   004F2A  6EAB               	movwf	171,c	;volatile
  7240   004F2C                     
  7241                           ; BSR set to: 15
  7242                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  7243   004F2C  8EAB               	bsf	171,7,c	;volatile
  7244   004F2E                     
  7245                           ; BSR set to: 15
  7246                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  7247   004F2E  88A7               	bsf	167,4,c	;volatile
  7248                           
  7249                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  7250   004F30  50A7               	movf	167,w,c	;volatile
  7251   004F32  0BF0               	andlw	-16
  7252   004F34  090C               	iorlw	12
  7253   004F36  6EA7               	movwf	167,c	;volatile
  7254   004F38                     
  7255                           ; BSR set to: 15
  7256                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  7257   004F38  8EA7               	bsf	167,7,c	;volatile
  7258   004F3A                     
  7259                           ; BSR set to: 15
  7260                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  7261   004F3A  8926               	bsf	38,4,b	;volatile
  7262                           
  7263                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  7264   004F3C  5126               	movf	38,w,b	;volatile
  7265   004F3E  0BF0               	andlw	-16
  7266   004F40  090C               	iorlw	12
  7267   004F42  6F26               	movwf	38,b	;volatile
  7268   004F44                     
  7269                           ; BSR set to: 15
  7270                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  7271   004F44  8F26               	bsf	38,7,b	;volatile
  7272   004F46                     
  7273                           ; BSR set to: 15
  7274                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  7275   004F46  8922               	bsf	34,4,b	;volatile
  7276                           
  7277                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  7278   004F48  5122               	movf	34,w,b	;volatile
  7279   004F4A  0BF0               	andlw	-16
  7280   004F4C  090C               	iorlw	12
  7281   004F4E  6F22               	movwf	34,b	;volatile
  7282   004F50                     
  7283                           ; BSR set to: 15
  7284                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  7285   004F50  8F22               	bsf	34,7,b	;volatile
  7286   004F52                     
  7287                           ; BSR set to: 15
  7288   004F52  0012               	return		;funcret
  7289   004F54                     __end_of_initDCmotorsPWM:
  7290                           	callstack 0
  7291                           
  7292 ;; *************** function _go_Home *****************
  7293 ;; Defined at:
  7294 ;;		line 3 in file "Memory.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7297 ;;		 -> WayBack(250), 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  i               2   38[COMRAM] int 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;Total ram usage:        5 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 6
  7316 ;; This function calls:
  7317 ;;		_BlueMove
  7318 ;;		_Forwardhalfblock
  7319 ;;		_GreenMove
  7320 ;;		_LightBlueMove
  7321 ;;		_OrangeMove
  7322 ;;		_RedMove
  7323 ;;		_ReversePink
  7324 ;;		_ReverseYellow
  7325 ;; This function is called by:
  7326 ;;		_main
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text31
  7331   003FFA                     __ptext31:
  7332                           	callstack 0
  7333   003FFA                     _go_Home:
  7334                           	callstack 24
  7335   003FFA                     
  7336                           ;Memory.c: 4:     int i;;Memory.c: 5:     for (i = move_count; i >= 0; i--){
  7337   003FFA  C114  F027         	movff	_move_count,go_Home@i	;volatile
  7338   003FFE  C115  F028         	movff	_move_count+1,go_Home@i+1	;volatile
  7339   004002                     l5388:
  7340   004002  BE28               	btfsc	(go_Home@i+1)^0,7,c
  7341   004004  EF08  F020         	goto	u5410
  7342   004008  EF06  F020         	goto	u5411
  7343   00400C                     u5411:
  7344   00400C  EF0A  F020         	goto	l5392
  7345   004010                     u5410:
  7346   004010  EFE5  F020         	goto	l624
  7347   004014                     l5392:
  7348                           
  7349                           ;Memory.c: 6:         if (WayBack[i]==0){
  7350   004014  5027               	movf	go_Home@i^0,w,c
  7351   004016  2424               	addwf	go_Home@WayBack^0,w,c
  7352   004018  6ED9               	movwf	fsr2l,c
  7353   00401A  5028               	movf	(go_Home@i+1)^0,w,c
  7354   00401C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7355   00401E  6EDA               	movwf	fsr2h,c
  7356   004020  50DF               	movf	indf2,w,c
  7357   004022  A4D8               	btfss	status,2,c
  7358   004024  EF16  F020         	goto	u5421
  7359   004028  EF18  F020         	goto	u5420
  7360   00402C                     u5421:
  7361   00402C  EF24  F020         	goto	l5396
  7362   004030                     u5420:
  7363   004030                     
  7364                           ;Memory.c: 7:             Forwardhalfblock(&motorL,&motorR);
  7365   004030  0E7B               	movlw	low _motorL
  7366   004032  6E1A               	movwf	Forwardhalfblock@mL^0,c
  7367   004034  0E01               	movlw	high _motorL
  7368   004036  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  7369   004038  0E72               	movlw	low _motorR
  7370   00403A  6E1C               	movwf	Forwardhalfblock@mR^0,c
  7371   00403C  0E01               	movlw	high _motorR
  7372   00403E  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  7373   004040  EC90  F029         	call	_Forwardhalfblock	;wreg free
  7374                           
  7375                           ;Memory.c: 8:         }
  7376   004044  EFE0  F020         	goto	l5424
  7377   004048                     l5396:
  7378   004048  5027               	movf	go_Home@i^0,w,c
  7379   00404A  2424               	addwf	go_Home@WayBack^0,w,c
  7380   00404C  6ED9               	movwf	fsr2l,c
  7381   00404E  5028               	movf	(go_Home@i+1)^0,w,c
  7382   004050  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7383   004052  6EDA               	movwf	fsr2h,c
  7384   004054  04DE               	decf	postinc2,w,c
  7385   004056  A4D8               	btfss	status,2,c
  7386   004058  EF30  F020         	goto	u5431
  7387   00405C  EF32  F020         	goto	u5430
  7388   004060                     u5431:
  7389   004060  EF3E  F020         	goto	l5400
  7390   004064                     u5430:
  7391   004064                     
  7392                           ;Memory.c: 10:             GreenMove(&motorL, &motorR);
  7393   004064  0E7B               	movlw	low _motorL
  7394   004066  6E20               	movwf	GreenMove@mL^0,c
  7395   004068  0E01               	movlw	high _motorL
  7396   00406A  6E21               	movwf	(GreenMove@mL+1)^0,c
  7397   00406C  0E72               	movlw	low _motorR
  7398   00406E  6E22               	movwf	GreenMove@mR^0,c
  7399   004070  0E01               	movlw	high _motorR
  7400   004072  6E23               	movwf	(GreenMove@mR+1)^0,c
  7401   004074  EC5D  F02D         	call	_GreenMove	;wreg free
  7402                           
  7403                           ;Memory.c: 11:         }
  7404   004078  EFE0  F020         	goto	l5424
  7405   00407C                     l5400:
  7406   00407C  5027               	movf	go_Home@i^0,w,c
  7407   00407E  2424               	addwf	go_Home@WayBack^0,w,c
  7408   004080  6ED9               	movwf	fsr2l,c
  7409   004082  5028               	movf	(go_Home@i+1)^0,w,c
  7410   004084  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7411   004086  6EDA               	movwf	fsr2h,c
  7412   004088  0E02               	movlw	2
  7413   00408A  18DE               	xorwf	postinc2,w,c
  7414   00408C  A4D8               	btfss	status,2,c
  7415   00408E  EF4B  F020         	goto	u5441
  7416   004092  EF4D  F020         	goto	u5440
  7417   004096                     u5441:
  7418   004096  EF59  F020         	goto	l5404
  7419   00409A                     u5440:
  7420   00409A                     
  7421                           ;Memory.c: 13:             LightBlueMove(&motorL, &motorR);
  7422   00409A  0E7B               	movlw	low _motorL
  7423   00409C  6E20               	movwf	LightBlueMove@mL^0,c
  7424   00409E  0E01               	movlw	high _motorL
  7425   0040A0  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7426   0040A2  0E72               	movlw	low _motorR
  7427   0040A4  6E22               	movwf	LightBlueMove@mR^0,c
  7428   0040A6  0E01               	movlw	high _motorR
  7429   0040A8  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7430   0040AA  ECEC  F02A         	call	_LightBlueMove	;wreg free
  7431                           
  7432                           ;Memory.c: 14:         }
  7433   0040AE  EFE0  F020         	goto	l5424
  7434   0040B2                     l5404:
  7435   0040B2  5027               	movf	go_Home@i^0,w,c
  7436   0040B4  2424               	addwf	go_Home@WayBack^0,w,c
  7437   0040B6  6ED9               	movwf	fsr2l,c
  7438   0040B8  5028               	movf	(go_Home@i+1)^0,w,c
  7439   0040BA  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7440   0040BC  6EDA               	movwf	fsr2h,c
  7441   0040BE  0E03               	movlw	3
  7442   0040C0  18DE               	xorwf	postinc2,w,c
  7443   0040C2  A4D8               	btfss	status,2,c
  7444   0040C4  EF66  F020         	goto	u5451
  7445   0040C8  EF68  F020         	goto	u5450
  7446   0040CC                     u5451:
  7447   0040CC  EF74  F020         	goto	l5408
  7448   0040D0                     u5450:
  7449   0040D0                     
  7450                           ;Memory.c: 16:             ReverseYellow(&motorL, &motorR);
  7451   0040D0  0E7B               	movlw	low _motorL
  7452   0040D2  6E20               	movwf	ReverseYellow@mL^0,c
  7453   0040D4  0E01               	movlw	high _motorL
  7454   0040D6  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7455   0040D8  0E72               	movlw	low _motorR
  7456   0040DA  6E22               	movwf	ReverseYellow@mR^0,c
  7457   0040DC  0E01               	movlw	high _motorR
  7458   0040DE  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7459   0040E0  EC00  F02D         	call	_ReverseYellow	;wreg free
  7460                           
  7461                           ;Memory.c: 17:         }
  7462   0040E4  EFE0  F020         	goto	l5424
  7463   0040E8                     l5408:
  7464   0040E8  5027               	movf	go_Home@i^0,w,c
  7465   0040EA  2424               	addwf	go_Home@WayBack^0,w,c
  7466   0040EC  6ED9               	movwf	fsr2l,c
  7467   0040EE  5028               	movf	(go_Home@i+1)^0,w,c
  7468   0040F0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7469   0040F2  6EDA               	movwf	fsr2h,c
  7470   0040F4  0E04               	movlw	4
  7471   0040F6  18DE               	xorwf	postinc2,w,c
  7472   0040F8  A4D8               	btfss	status,2,c
  7473   0040FA  EF81  F020         	goto	u5461
  7474   0040FE  EF83  F020         	goto	u5460
  7475   004102                     u5461:
  7476   004102  EF8F  F020         	goto	l5412
  7477   004106                     u5460:
  7478   004106                     
  7479                           ;Memory.c: 19:             BlueMove(&motorL, &motorR);
  7480   004106  0E7B               	movlw	low _motorL
  7481   004108  6E20               	movwf	BlueMove@mL^0,c
  7482   00410A  0E01               	movlw	high _motorL
  7483   00410C  6E21               	movwf	(BlueMove@mL+1)^0,c
  7484   00410E  0E72               	movlw	low _motorR
  7485   004110  6E22               	movwf	BlueMove@mR^0,c
  7486   004112  0E01               	movlw	high _motorR
  7487   004114  6E23               	movwf	(BlueMove@mR+1)^0,c
  7488   004116  ECD4  F028         	call	_BlueMove	;wreg free
  7489                           
  7490                           ;Memory.c: 20:         }
  7491   00411A  EFE0  F020         	goto	l5424
  7492   00411E                     l5412:
  7493   00411E  5027               	movf	go_Home@i^0,w,c
  7494   004120  2424               	addwf	go_Home@WayBack^0,w,c
  7495   004122  6ED9               	movwf	fsr2l,c
  7496   004124  5028               	movf	(go_Home@i+1)^0,w,c
  7497   004126  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7498   004128  6EDA               	movwf	fsr2h,c
  7499   00412A  0E05               	movlw	5
  7500   00412C  18DE               	xorwf	postinc2,w,c
  7501   00412E  A4D8               	btfss	status,2,c
  7502   004130  EF9C  F020         	goto	u5471
  7503   004134  EF9E  F020         	goto	u5470
  7504   004138                     u5471:
  7505   004138  EFAA  F020         	goto	l5416
  7506   00413C                     u5470:
  7507   00413C                     
  7508                           ;Memory.c: 22:             RedMove(&motorL, &motorR);
  7509   00413C  0E7B               	movlw	low _motorL
  7510   00413E  6E20               	movwf	RedMove@mL^0,c
  7511   004140  0E01               	movlw	high _motorL
  7512   004142  6E21               	movwf	(RedMove@mL+1)^0,c
  7513   004144  0E72               	movlw	low _motorR
  7514   004146  6E22               	movwf	RedMove@mR^0,c
  7515   004148  0E01               	movlw	high _motorR
  7516   00414A  6E23               	movwf	(RedMove@mR+1)^0,c
  7517   00414C  EC3E  F02D         	call	_RedMove	;wreg free
  7518                           
  7519                           ;Memory.c: 23:         }
  7520   004150  EFE0  F020         	goto	l5424
  7521   004154                     l5416:
  7522   004154  5027               	movf	go_Home@i^0,w,c
  7523   004156  2424               	addwf	go_Home@WayBack^0,w,c
  7524   004158  6ED9               	movwf	fsr2l,c
  7525   00415A  5028               	movf	(go_Home@i+1)^0,w,c
  7526   00415C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7527   00415E  6EDA               	movwf	fsr2h,c
  7528   004160  0E06               	movlw	6
  7529   004162  18DE               	xorwf	postinc2,w,c
  7530   004164  A4D8               	btfss	status,2,c
  7531   004166  EFB7  F020         	goto	u5481
  7532   00416A  EFB9  F020         	goto	u5480
  7533   00416E                     u5481:
  7534   00416E  EFC5  F020         	goto	l5420
  7535   004172                     u5480:
  7536   004172                     
  7537                           ;Memory.c: 25:             OrangeMove(&motorL, &motorR);
  7538   004172  0E7B               	movlw	low _motorL
  7539   004174  6E20               	movwf	OrangeMove@mL^0,c
  7540   004176  0E01               	movlw	high _motorL
  7541   004178  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7542   00417A  0E72               	movlw	low _motorR
  7543   00417C  6E22               	movwf	OrangeMove@mR^0,c
  7544   00417E  0E01               	movlw	high _motorR
  7545   004180  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7546   004182  ECC3  F02A         	call	_OrangeMove	;wreg free
  7547                           
  7548                           ;Memory.c: 26:         }
  7549   004186  EFE0  F020         	goto	l5424
  7550   00418A                     l5420:
  7551   00418A  5027               	movf	go_Home@i^0,w,c
  7552   00418C  2424               	addwf	go_Home@WayBack^0,w,c
  7553   00418E  6ED9               	movwf	fsr2l,c
  7554   004190  5028               	movf	(go_Home@i+1)^0,w,c
  7555   004192  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7556   004194  6EDA               	movwf	fsr2h,c
  7557   004196  0E07               	movlw	7
  7558   004198  18DE               	xorwf	postinc2,w,c
  7559   00419A  A4D8               	btfss	status,2,c
  7560   00419C  EFD2  F020         	goto	u5491
  7561   0041A0  EFD4  F020         	goto	u5490
  7562   0041A4                     u5491:
  7563   0041A4  EFE0  F020         	goto	l618
  7564   0041A8                     u5490:
  7565   0041A8                     
  7566                           ;Memory.c: 28:             ReversePink(&motorL, &motorR);
  7567   0041A8  0E7B               	movlw	low _motorL
  7568   0041AA  6E20               	movwf	ReversePink@mL^0,c
  7569   0041AC  0E01               	movlw	high _motorL
  7570   0041AE  6E21               	movwf	(ReversePink@mL+1)^0,c
  7571   0041B0  0E72               	movlw	low _motorR
  7572   0041B2  6E22               	movwf	ReversePink@mR^0,c
  7573   0041B4  0E01               	movlw	high _motorR
  7574   0041B6  6E23               	movwf	(ReversePink@mR+1)^0,c
  7575   0041B8  EC1F  F02D         	call	_ReversePink	;wreg free
  7576   0041BC  EFE0  F020         	goto	l5424
  7577   0041C0                     l618:
  7578   0041C0                     l5424:
  7579                           
  7580                           ;Memory.c: 32:   }
  7581   0041C0  0627               	decf	go_Home@i^0,f,c
  7582   0041C2  A0D8               	btfss	status,0,c
  7583   0041C4  0628               	decf	(go_Home@i+1)^0,f,c
  7584   0041C6  EF01  F020         	goto	l5388
  7585   0041CA                     l624:
  7586   0041CA  0012               	return		;funcret
  7587   0041CC                     __end_of_go_Home:
  7588                           	callstack 0
  7589                           
  7590 ;; *************** function _ReverseYellow *****************
  7591 ;; Defined at:
  7592 ;;		line 304 in file "dc_motor.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7595 ;;		 -> motorL(9), 
  7596 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7597 ;;		 -> motorR(9), 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      void 
  7602 ;; Registers used:
  7603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7612 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7613 ;;Total ram usage:        4 bytes
  7614 ;; Hardware stack levels used: 1
  7615 ;; Hardware stack levels required when called: 5
  7616 ;; This function calls:
  7617 ;;		_ForwardOneBlock
  7618 ;;		_turnLeft45
  7619 ;; This function is called by:
  7620 ;;		_go_Home
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text32
  7625   005A00                     __ptext32:
  7626                           	callstack 0
  7627   005A00                     _ReverseYellow:
  7628                           	callstack 24
  7629   005A00                     
  7630                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  7631   005A00  0E7B               	movlw	low _motorL
  7632   005A02  6E1A               	movwf	turnLeft45@mL^0,c
  7633   005A04  0E01               	movlw	high _motorL
  7634   005A06  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7635   005A08  0E72               	movlw	low _motorR
  7636   005A0A  6E1C               	movwf	turnLeft45@mR^0,c
  7637   005A0C  0E01               	movlw	high _motorR
  7638   005A0E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7639   005A10  EC43  F02A         	call	_turnLeft45	;wreg free
  7640                           
  7641                           ;dc_motor.c: 306:     turnLeft45(&motorL, &motorR);
  7642   005A14  0E7B               	movlw	low _motorL
  7643   005A16  6E1A               	movwf	turnLeft45@mL^0,c
  7644   005A18  0E01               	movlw	high _motorL
  7645   005A1A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7646   005A1C  0E72               	movlw	low _motorR
  7647   005A1E  6E1C               	movwf	turnLeft45@mR^0,c
  7648   005A20  0E01               	movlw	high _motorR
  7649   005A22  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7650   005A24  EC43  F02A         	call	_turnLeft45	;wreg free
  7651                           
  7652                           ;dc_motor.c: 307:     ForwardOneBlock(&motorL, &motorR);
  7653   005A28  0E7B               	movlw	low _motorL
  7654   005A2A  6E1A               	movwf	ForwardOneBlock@mL^0,c
  7655   005A2C  0E01               	movlw	high _motorL
  7656   005A2E  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  7657   005A30  0E72               	movlw	low _motorR
  7658   005A32  6E1C               	movwf	ForwardOneBlock@mR^0,c
  7659   005A34  0E01               	movlw	high _motorR
  7660   005A36  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  7661   005A38  EC63  F029         	call	_ForwardOneBlock	;wreg free
  7662   005A3C  0012               	return		;funcret
  7663   005A3E                     __end_of_ReverseYellow:
  7664                           	callstack 0
  7665                           
  7666 ;; *************** function _ReversePink *****************
  7667 ;; Defined at:
  7668 ;;		line 309 in file "dc_motor.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7671 ;;		 -> motorL(9), 
  7672 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7673 ;;		 -> motorR(9), 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      void 
  7678 ;; Registers used:
  7679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7689 ;;Total ram usage:        4 bytes
  7690 ;; Hardware stack levels used: 1
  7691 ;; Hardware stack levels required when called: 5
  7692 ;; This function calls:
  7693 ;;		_ForwardOneBlock
  7694 ;;		_turnRight45
  7695 ;; This function is called by:
  7696 ;;		_go_Home
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text33
  7701   005A3E                     __ptext33:
  7702                           	callstack 0
  7703   005A3E                     _ReversePink:
  7704                           	callstack 24
  7705   005A3E                     
  7706                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  7707   005A3E  0E7B               	movlw	low _motorL
  7708   005A40  6E1A               	movwf	turnRight45@mL^0,c
  7709   005A42  0E01               	movlw	high _motorL
  7710   005A44  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7711   005A46  0E72               	movlw	low _motorR
  7712   005A48  6E1C               	movwf	turnRight45@mR^0,c
  7713   005A4A  0E01               	movlw	high _motorR
  7714   005A4C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7715   005A4E  EC17  F02A         	call	_turnRight45	;wreg free
  7716                           
  7717                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  7718   005A52  0E7B               	movlw	low _motorL
  7719   005A54  6E1A               	movwf	turnRight45@mL^0,c
  7720   005A56  0E01               	movlw	high _motorL
  7721   005A58  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7722   005A5A  0E72               	movlw	low _motorR
  7723   005A5C  6E1C               	movwf	turnRight45@mR^0,c
  7724   005A5E  0E01               	movlw	high _motorR
  7725   005A60  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7726   005A62  EC17  F02A         	call	_turnRight45	;wreg free
  7727                           
  7728                           ;dc_motor.c: 312:     ForwardOneBlock(&motorL, &motorR);
  7729   005A66  0E7B               	movlw	low _motorL
  7730   005A68  6E1A               	movwf	ForwardOneBlock@mL^0,c
  7731   005A6A  0E01               	movlw	high _motorL
  7732   005A6C  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  7733   005A6E  0E72               	movlw	low _motorR
  7734   005A70  6E1C               	movwf	ForwardOneBlock@mR^0,c
  7735   005A72  0E01               	movlw	high _motorR
  7736   005A74  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  7737   005A76  EC63  F029         	call	_ForwardOneBlock	;wreg free
  7738   005A7A  0012               	return		;funcret
  7739   005A7C                     __end_of_ReversePink:
  7740                           	callstack 0
  7741                           
  7742 ;; *************** function _ForwardOneBlock *****************
  7743 ;; Defined at:
  7744 ;;		line 208 in file "dc_motor.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7747 ;;		 -> motorL(9), 
  7748 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7749 ;;		 -> motorR(9), 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      void 
  7754 ;; Registers used:
  7755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;Total ram usage:        6 bytes
  7766 ;; Hardware stack levels used: 1
  7767 ;; Hardware stack levels required when called: 4
  7768 ;; This function calls:
  7769 ;;		_fullSpeedAhead
  7770 ;;		_stop
  7771 ;; This function is called by:
  7772 ;;		_ReverseYellow
  7773 ;;		_ReversePink
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text34
  7778   0052C6                     __ptext34:
  7779                           	callstack 0
  7780   0052C6                     _ForwardOneBlock:
  7781                           	callstack 24
  7782   0052C6                     
  7783                           ;dc_motor.c: 209:     fullSpeedAhead(mL,mR);
  7784   0052C6  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  7785   0052CA  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  7786   0052CE  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  7787   0052D2  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  7788   0052D6  EC79  F026         	call	_fullSpeedAhead	;wreg free
  7789   0052DA                     
  7790                           ;dc_motor.c: 210:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  7791   0052DA  0EA3               	movlw	163
  7792   0052DC  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  7793   0052DE  0E57               	movlw	87
  7794   0052E0  6E1E               	movwf	??_ForwardOneBlock^0,c
  7795   0052E2  0E02               	movlw	2
  7796   0052E4                     u5807:
  7797   0052E4  2EE8               	decfsz	wreg,f,c
  7798   0052E6  D7FE               	bra	u5807
  7799   0052E8  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  7800   0052EA  D7FC               	bra	u5807
  7801   0052EC  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7802   0052EE  D7FA               	bra	u5807
  7803   0052F0  D000               	nop2	
  7804   0052F2                     
  7805                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7806   0052F2  0E7B               	movlw	low _motorL
  7807   0052F4  6E14               	movwf	stop@mL^0,c
  7808   0052F6  0E01               	movlw	high _motorL
  7809   0052F8  6E15               	movwf	(stop@mL+1)^0,c
  7810   0052FA  0E72               	movlw	low _motorR
  7811   0052FC  6E16               	movwf	stop@mR^0,c
  7812   0052FE  0E01               	movlw	high _motorR
  7813   005300  6E17               	movwf	(stop@mR+1)^0,c
  7814   005302  ECEB  F027         	call	_stop	;wreg free
  7815                           
  7816                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7817   005306  0E52               	movlw	82
  7818   005308  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  7819   00530A  0E2B               	movlw	43
  7820   00530C  6E1E               	movwf	??_ForwardOneBlock^0,c
  7821   00530E  0E00               	movlw	0
  7822   005310                     u5817:
  7823   005310  2EE8               	decfsz	wreg,f,c
  7824   005312  D7FE               	bra	u5817
  7825   005314  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  7826   005316  D7FC               	bra	u5817
  7827   005318  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7828   00531A  D7FA               	bra	u5817
  7829   00531C  D000               	nop2	
  7830   00531E  0012               	return		;funcret
  7831   005320                     __end_of_ForwardOneBlock:
  7832                           	callstack 0
  7833                           
  7834 ;; *************** function _RedMove *****************
  7835 ;; Defined at:
  7836 ;;		line 232 in file "dc_motor.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7839 ;;		 -> motorL(9), 
  7840 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7841 ;;		 -> motorR(9), 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;Total ram usage:        4 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; Hardware stack levels required when called: 5
  7860 ;; This function calls:
  7861 ;;		_reverseDetect
  7862 ;;		_turnRight45
  7863 ;; This function is called by:
  7864 ;;		_main
  7865 ;;		_go_Home
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text35
  7870   005A7C                     __ptext35:
  7871                           	callstack 0
  7872   005A7C                     _RedMove:
  7873                           	callstack 24
  7874   005A7C                     
  7875                           ;dc_motor.c: 233:     reverseDetect(&motorL, &motorR);
  7876   005A7C  0E7B               	movlw	low _motorL
  7877   005A7E  6E1A               	movwf	reverseDetect@mL^0,c
  7878   005A80  0E01               	movlw	high _motorL
  7879   005A82  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7880   005A84  0E72               	movlw	low _motorR
  7881   005A86  6E1C               	movwf	reverseDetect@mR^0,c
  7882   005A88  0E01               	movlw	high _motorR
  7883   005A8A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7884   005A8C  ECEA  F029         	call	_reverseDetect	;wreg free
  7885                           
  7886                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  7887   005A90  0E7B               	movlw	low _motorL
  7888   005A92  6E1A               	movwf	turnRight45@mL^0,c
  7889   005A94  0E01               	movlw	high _motorL
  7890   005A96  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7891   005A98  0E72               	movlw	low _motorR
  7892   005A9A  6E1C               	movwf	turnRight45@mR^0,c
  7893   005A9C  0E01               	movlw	high _motorR
  7894   005A9E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7895   005AA0  EC17  F02A         	call	_turnRight45	;wreg free
  7896                           
  7897                           ;dc_motor.c: 236:     turnRight45(&motorL, &motorR);
  7898   005AA4  0E7B               	movlw	low _motorL
  7899   005AA6  6E1A               	movwf	turnRight45@mL^0,c
  7900   005AA8  0E01               	movlw	high _motorL
  7901   005AAA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7902   005AAC  0E72               	movlw	low _motorR
  7903   005AAE  6E1C               	movwf	turnRight45@mR^0,c
  7904   005AB0  0E01               	movlw	high _motorR
  7905   005AB2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7906   005AB4  EC17  F02A         	call	_turnRight45	;wreg free
  7907   005AB8  0012               	return		;funcret
  7908   005ABA                     __end_of_RedMove:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function _OrangeMove *****************
  7912 ;; Defined at:
  7913 ;;		line 278 in file "dc_motor.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7916 ;;		 -> motorL(9), 
  7917 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7918 ;;		 -> motorR(9), 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7934 ;;Total ram usage:        4 bytes
  7935 ;; Hardware stack levels used: 1
  7936 ;; Hardware stack levels required when called: 5
  7937 ;; This function calls:
  7938 ;;		_reverseDetect
  7939 ;;		_turnRight45
  7940 ;; This function is called by:
  7941 ;;		_main
  7942 ;;		_go_Home
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text36
  7947   005586                     __ptext36:
  7948                           	callstack 0
  7949   005586                     _OrangeMove:
  7950                           	callstack 24
  7951   005586                     
  7952                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  7953   005586  0E7B               	movlw	low _motorL
  7954   005588  6E1A               	movwf	reverseDetect@mL^0,c
  7955   00558A  0E01               	movlw	high _motorL
  7956   00558C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7957   00558E  0E72               	movlw	low _motorR
  7958   005590  6E1C               	movwf	reverseDetect@mR^0,c
  7959   005592  0E01               	movlw	high _motorR
  7960   005594  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7961   005596  ECEA  F029         	call	_reverseDetect	;wreg free
  7962                           
  7963                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  7964   00559A  0E7B               	movlw	low _motorL
  7965   00559C  6E1A               	movwf	turnRight45@mL^0,c
  7966   00559E  0E01               	movlw	high _motorL
  7967   0055A0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7968   0055A2  0E72               	movlw	low _motorR
  7969   0055A4  6E1C               	movwf	turnRight45@mR^0,c
  7970   0055A6  0E01               	movlw	high _motorR
  7971   0055A8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7972   0055AA  EC17  F02A         	call	_turnRight45	;wreg free
  7973                           
  7974                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  7975   0055AE  0E7B               	movlw	low _motorL
  7976   0055B0  6E1A               	movwf	turnRight45@mL^0,c
  7977   0055B2  0E01               	movlw	high _motorL
  7978   0055B4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7979   0055B6  0E72               	movlw	low _motorR
  7980   0055B8  6E1C               	movwf	turnRight45@mR^0,c
  7981   0055BA  0E01               	movlw	high _motorR
  7982   0055BC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7983   0055BE  EC17  F02A         	call	_turnRight45	;wreg free
  7984                           
  7985                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  7986   0055C2  0E7B               	movlw	low _motorL
  7987   0055C4  6E1A               	movwf	turnRight45@mL^0,c
  7988   0055C6  0E01               	movlw	high _motorL
  7989   0055C8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7990   0055CA  0E72               	movlw	low _motorR
  7991   0055CC  6E1C               	movwf	turnRight45@mR^0,c
  7992   0055CE  0E01               	movlw	high _motorR
  7993   0055D0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7994   0055D2  EC17  F02A         	call	_turnRight45	;wreg free
  7995   0055D6  0012               	return		;funcret
  7996   0055D8                     __end_of_OrangeMove:
  7997                           	callstack 0
  7998                           
  7999 ;; *************** function _LightBlueMove *****************
  8000 ;; Defined at:
  8001 ;;		line 287 in file "dc_motor.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8004 ;;		 -> motorL(9), 
  8005 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8006 ;;		 -> motorR(9), 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;		None
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      void 
  8011 ;; Registers used:
  8012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8022 ;;Total ram usage:        4 bytes
  8023 ;; Hardware stack levels used: 1
  8024 ;; Hardware stack levels required when called: 5
  8025 ;; This function calls:
  8026 ;;		_reverseDetect
  8027 ;;		_turnLeft45
  8028 ;; This function is called by:
  8029 ;;		_main
  8030 ;;		_go_Home
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text37
  8035   0055D8                     __ptext37:
  8036                           	callstack 0
  8037   0055D8                     _LightBlueMove:
  8038                           	callstack 24
  8039   0055D8                     
  8040                           ;dc_motor.c: 288:     reverseDetect(&motorL, &motorR);
  8041   0055D8  0E7B               	movlw	low _motorL
  8042   0055DA  6E1A               	movwf	reverseDetect@mL^0,c
  8043   0055DC  0E01               	movlw	high _motorL
  8044   0055DE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8045   0055E0  0E72               	movlw	low _motorR
  8046   0055E2  6E1C               	movwf	reverseDetect@mR^0,c
  8047   0055E4  0E01               	movlw	high _motorR
  8048   0055E6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8049   0055E8  ECEA  F029         	call	_reverseDetect	;wreg free
  8050                           
  8051                           ;dc_motor.c: 290:     turnLeft45(&motorL, &motorR);
  8052   0055EC  0E7B               	movlw	low _motorL
  8053   0055EE  6E1A               	movwf	turnLeft45@mL^0,c
  8054   0055F0  0E01               	movlw	high _motorL
  8055   0055F2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8056   0055F4  0E72               	movlw	low _motorR
  8057   0055F6  6E1C               	movwf	turnLeft45@mR^0,c
  8058   0055F8  0E01               	movlw	high _motorR
  8059   0055FA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8060   0055FC  EC43  F02A         	call	_turnLeft45	;wreg free
  8061                           
  8062                           ;dc_motor.c: 291:     turnLeft45(&motorL, &motorR);
  8063   005600  0E7B               	movlw	low _motorL
  8064   005602  6E1A               	movwf	turnLeft45@mL^0,c
  8065   005604  0E01               	movlw	high _motorL
  8066   005606  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8067   005608  0E72               	movlw	low _motorR
  8068   00560A  6E1C               	movwf	turnLeft45@mR^0,c
  8069   00560C  0E01               	movlw	high _motorR
  8070   00560E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8071   005610  EC43  F02A         	call	_turnLeft45	;wreg free
  8072                           
  8073                           ;dc_motor.c: 292:     turnLeft45(&motorL, &motorR);
  8074   005614  0E7B               	movlw	low _motorL
  8075   005616  6E1A               	movwf	turnLeft45@mL^0,c
  8076   005618  0E01               	movlw	high _motorL
  8077   00561A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8078   00561C  0E72               	movlw	low _motorR
  8079   00561E  6E1C               	movwf	turnLeft45@mR^0,c
  8080   005620  0E01               	movlw	high _motorR
  8081   005622  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8082   005624  EC43  F02A         	call	_turnLeft45	;wreg free
  8083   005628  0012               	return		;funcret
  8084   00562A                     __end_of_LightBlueMove:
  8085                           	callstack 0
  8086                           
  8087 ;; *************** function _GreenMove *****************
  8088 ;; Defined at:
  8089 ;;		line 240 in file "dc_motor.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8092 ;;		 -> motorL(9), 
  8093 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8094 ;;		 -> motorR(9), 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8110 ;;Total ram usage:        4 bytes
  8111 ;; Hardware stack levels used: 1
  8112 ;; Hardware stack levels required when called: 5
  8113 ;; This function calls:
  8114 ;;		_reverseDetect
  8115 ;;		_turnLeft45
  8116 ;; This function is called by:
  8117 ;;		_main
  8118 ;;		_go_Home
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text38
  8123   005ABA                     __ptext38:
  8124                           	callstack 0
  8125   005ABA                     _GreenMove:
  8126                           	callstack 24
  8127   005ABA                     
  8128                           ;dc_motor.c: 241:     reverseDetect(&motorL, &motorR);
  8129   005ABA  0E7B               	movlw	low _motorL
  8130   005ABC  6E1A               	movwf	reverseDetect@mL^0,c
  8131   005ABE  0E01               	movlw	high _motorL
  8132   005AC0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8133   005AC2  0E72               	movlw	low _motorR
  8134   005AC4  6E1C               	movwf	reverseDetect@mR^0,c
  8135   005AC6  0E01               	movlw	high _motorR
  8136   005AC8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8137   005ACA  ECEA  F029         	call	_reverseDetect	;wreg free
  8138                           
  8139                           ;dc_motor.c: 243:     turnLeft45(&motorL, &motorR);
  8140   005ACE  0E7B               	movlw	low _motorL
  8141   005AD0  6E1A               	movwf	turnLeft45@mL^0,c
  8142   005AD2  0E01               	movlw	high _motorL
  8143   005AD4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8144   005AD6  0E72               	movlw	low _motorR
  8145   005AD8  6E1C               	movwf	turnLeft45@mR^0,c
  8146   005ADA  0E01               	movlw	high _motorR
  8147   005ADC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8148   005ADE  EC43  F02A         	call	_turnLeft45	;wreg free
  8149                           
  8150                           ;dc_motor.c: 244:     turnLeft45(&motorL, &motorR);
  8151   005AE2  0E7B               	movlw	low _motorL
  8152   005AE4  6E1A               	movwf	turnLeft45@mL^0,c
  8153   005AE6  0E01               	movlw	high _motorL
  8154   005AE8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8155   005AEA  0E72               	movlw	low _motorR
  8156   005AEC  6E1C               	movwf	turnLeft45@mR^0,c
  8157   005AEE  0E01               	movlw	high _motorR
  8158   005AF0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8159   005AF2  EC43  F02A         	call	_turnLeft45	;wreg free
  8160   005AF6  0012               	return		;funcret
  8161   005AF8                     __end_of_GreenMove:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function _Forwardhalfblock *****************
  8165 ;; Defined at:
  8166 ;;		line 215 in file "dc_motor.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8169 ;;		 -> motorL(9), 
  8170 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8171 ;;		 -> motorR(9), 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8187 ;;Total ram usage:        6 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 4
  8190 ;; This function calls:
  8191 ;;		_fullSpeedAhead
  8192 ;;		_stop
  8193 ;; This function is called by:
  8194 ;;		_main
  8195 ;;		_go_Home
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           
  8199                           	psect	text39
  8200   005320                     __ptext39:
  8201                           	callstack 0
  8202   005320                     _Forwardhalfblock:
  8203                           	callstack 25
  8204   005320                     
  8205                           ;dc_motor.c: 216:     fullSpeedAhead(mL,mR);
  8206   005320  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8207   005324  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8208   005328  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8209   00532C  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8210   005330  EC79  F026         	call	_fullSpeedAhead	;wreg free
  8211   005334                     
  8212                           ;dc_motor.c: 217:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  8213   005334  0E52               	movlw	82
  8214   005336  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8215   005338  0E2B               	movlw	43
  8216   00533A  6E1E               	movwf	??_Forwardhalfblock^0,c
  8217   00533C  0E00               	movlw	0
  8218   00533E                     u5827:
  8219   00533E  2EE8               	decfsz	wreg,f,c
  8220   005340  D7FE               	bra	u5827
  8221   005342  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8222   005344  D7FC               	bra	u5827
  8223   005346  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8224   005348  D7FA               	bra	u5827
  8225   00534A  D000               	nop2	
  8226   00534C                     
  8227                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  8228   00534C  0E7B               	movlw	low _motorL
  8229   00534E  6E14               	movwf	stop@mL^0,c
  8230   005350  0E01               	movlw	high _motorL
  8231   005352  6E15               	movwf	(stop@mL+1)^0,c
  8232   005354  0E72               	movlw	low _motorR
  8233   005356  6E16               	movwf	stop@mR^0,c
  8234   005358  0E01               	movlw	high _motorR
  8235   00535A  6E17               	movwf	(stop@mR+1)^0,c
  8236   00535C  ECEB  F027         	call	_stop	;wreg free
  8237                           
  8238                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8239   005360  0E52               	movlw	82
  8240   005362  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8241   005364  0E2B               	movlw	43
  8242   005366  6E1E               	movwf	??_Forwardhalfblock^0,c
  8243   005368  0E00               	movlw	0
  8244   00536A                     u5837:
  8245   00536A  2EE8               	decfsz	wreg,f,c
  8246   00536C  D7FE               	bra	u5837
  8247   00536E  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8248   005370  D7FC               	bra	u5837
  8249   005372  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8250   005374  D7FA               	bra	u5837
  8251   005376  D000               	nop2	
  8252   005378  0012               	return		;funcret
  8253   00537A                     __end_of_Forwardhalfblock:
  8254                           	callstack 0
  8255                           
  8256 ;; *************** function _BlueMove *****************
  8257 ;; Defined at:
  8258 ;;		line 248 in file "dc_motor.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8261 ;;		 -> motorL(9), 
  8262 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8263 ;;		 -> motorR(9), 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;Total ram usage:        4 bytes
  8280 ;; Hardware stack levels used: 1
  8281 ;; Hardware stack levels required when called: 5
  8282 ;; This function calls:
  8283 ;;		_reverseDetect
  8284 ;;		_turnRight45
  8285 ;; This function is called by:
  8286 ;;		_main
  8287 ;;		_go_Home
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text40
  8292   0051A8                     __ptext40:
  8293                           	callstack 0
  8294   0051A8                     _BlueMove:
  8295                           	callstack 24
  8296   0051A8                     
  8297                           ;dc_motor.c: 249:     reverseDetect(&motorL, &motorR);
  8298   0051A8  0E7B               	movlw	low _motorL
  8299   0051AA  6E1A               	movwf	reverseDetect@mL^0,c
  8300   0051AC  0E01               	movlw	high _motorL
  8301   0051AE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8302   0051B0  0E72               	movlw	low _motorR
  8303   0051B2  6E1C               	movwf	reverseDetect@mR^0,c
  8304   0051B4  0E01               	movlw	high _motorR
  8305   0051B6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8306   0051B8  ECEA  F029         	call	_reverseDetect	;wreg free
  8307                           
  8308                           ;dc_motor.c: 251:     turnRight45(&motorL, &motorR);
  8309   0051BC  0E7B               	movlw	low _motorL
  8310   0051BE  6E1A               	movwf	turnRight45@mL^0,c
  8311   0051C0  0E01               	movlw	high _motorL
  8312   0051C2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8313   0051C4  0E72               	movlw	low _motorR
  8314   0051C6  6E1C               	movwf	turnRight45@mR^0,c
  8315   0051C8  0E01               	movlw	high _motorR
  8316   0051CA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8317   0051CC  EC17  F02A         	call	_turnRight45	;wreg free
  8318                           
  8319                           ;dc_motor.c: 252:     turnRight45(&motorL, &motorR);
  8320   0051D0  0E7B               	movlw	low _motorL
  8321   0051D2  6E1A               	movwf	turnRight45@mL^0,c
  8322   0051D4  0E01               	movlw	high _motorL
  8323   0051D6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8324   0051D8  0E72               	movlw	low _motorR
  8325   0051DA  6E1C               	movwf	turnRight45@mR^0,c
  8326   0051DC  0E01               	movlw	high _motorR
  8327   0051DE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8328   0051E0  EC17  F02A         	call	_turnRight45	;wreg free
  8329                           
  8330                           ;dc_motor.c: 253:     turnRight45(&motorL, &motorR);
  8331   0051E4  0E7B               	movlw	low _motorL
  8332   0051E6  6E1A               	movwf	turnRight45@mL^0,c
  8333   0051E8  0E01               	movlw	high _motorL
  8334   0051EA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8335   0051EC  0E72               	movlw	low _motorR
  8336   0051EE  6E1C               	movwf	turnRight45@mR^0,c
  8337   0051F0  0E01               	movlw	high _motorR
  8338   0051F2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8339   0051F4  EC17  F02A         	call	_turnRight45	;wreg free
  8340                           
  8341                           ;dc_motor.c: 254:     turnRight45(&motorL, &motorR);
  8342   0051F8  0E7B               	movlw	low _motorL
  8343   0051FA  6E1A               	movwf	turnRight45@mL^0,c
  8344   0051FC  0E01               	movlw	high _motorL
  8345   0051FE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8346   005200  0E72               	movlw	low _motorR
  8347   005202  6E1C               	movwf	turnRight45@mR^0,c
  8348   005204  0E01               	movlw	high _motorR
  8349   005206  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8350   005208  EC17  F02A         	call	_turnRight45	;wreg free
  8351   00520C  0012               	return		;funcret
  8352   00520E                     __end_of_BlueMove:
  8353                           	callstack 0
  8354                           
  8355 ;; *************** function _colour_rel *****************
  8356 ;; Defined at:
  8357 ;;		line 114 in file "color.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;  vals            2   74[COMRAM] PTR struct RGB
  8360 ;;		 -> vals(8), 
  8361 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8362 ;;		 -> rel(12), 
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  B               4   20[BANK0 ] float 
  8365 ;;  G               4   16[BANK0 ] float 
  8366 ;;  R               4   12[BANK0 ] float 
  8367 ;;  L               4    0[BANK0 ] float 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8378 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;Total ram usage:       28 bytes
  8382 ;; Hardware stack levels used: 1
  8383 ;; Hardware stack levels required when called: 2
  8384 ;; This function calls:
  8385 ;;		___fladd
  8386 ;;		___fldiv
  8387 ;;		___xxtofl
  8388 ;; This function is called by:
  8389 ;;		_main
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text41
  8394   003536                     __ptext41:
  8395                           	callstack 0
  8396   003536                     _colour_rel:
  8397                           	callstack 28
  8398   003536                     
  8399                           ;color.c: 115:     float R = vals->R;
  8400   003536  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  8401   00353A  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  8402   00353E  CFDE F001          	movff	postinc2,___xxtofl@val
  8403   003542  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8404   003546  0E00               	movlw	0
  8405   003548  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8406   00354A  0EFF               	movlw	-1
  8407   00354C  6E03               	movwf	(___xxtofl@val+2)^0,c
  8408   00354E  6E04               	movwf	(___xxtofl@val+3)^0,c
  8409   003550  0E01               	movlw	1
  8410   003552  ECE6  F020         	call	___xxtofl
  8411   003556  C001  F06C         	movff	?___xxtofl,colour_rel@R
  8412   00355A  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  8413   00355E  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  8414   003562  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  8415                           
  8416                           ;color.c: 116:     float G = vals->G;
  8417   003566  EE20 F002          	lfsr	2,2
  8418   00356A  504B               	movf	colour_rel@vals^0,w,c
  8419   00356C  26D9               	addwf	fsr2l,f,c
  8420   00356E  504C               	movf	(colour_rel@vals+1)^0,w,c
  8421   003570  22DA               	addwfc	fsr2h,f,c
  8422   003572  CFDE F001          	movff	postinc2,___xxtofl@val
  8423   003576  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8424   00357A  0E00               	movlw	0
  8425   00357C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8426   00357E  0EFF               	movlw	-1
  8427   003580  6E03               	movwf	(___xxtofl@val+2)^0,c
  8428   003582  6E04               	movwf	(___xxtofl@val+3)^0,c
  8429   003584  0E01               	movlw	1
  8430   003586  ECE6  F020         	call	___xxtofl
  8431   00358A  C001  F070         	movff	?___xxtofl,colour_rel@G
  8432   00358E  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  8433   003592  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  8434   003596  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  8435                           
  8436                           ;color.c: 117:     float B = vals->B;
  8437   00359A  EE20 F004          	lfsr	2,4
  8438   00359E  504B               	movf	colour_rel@vals^0,w,c
  8439   0035A0  26D9               	addwf	fsr2l,f,c
  8440   0035A2  504C               	movf	(colour_rel@vals+1)^0,w,c
  8441   0035A4  22DA               	addwfc	fsr2h,f,c
  8442   0035A6  CFDE F001          	movff	postinc2,___xxtofl@val
  8443   0035AA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8444   0035AE  0E00               	movlw	0
  8445   0035B0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8446   0035B2  0EFF               	movlw	-1
  8447   0035B4  6E03               	movwf	(___xxtofl@val+2)^0,c
  8448   0035B6  6E04               	movwf	(___xxtofl@val+3)^0,c
  8449   0035B8  0E01               	movlw	1
  8450   0035BA  ECE6  F020         	call	___xxtofl
  8451   0035BE  C001  F074         	movff	?___xxtofl,colour_rel@B
  8452   0035C2  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  8453   0035C6  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  8454   0035CA  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  8455                           
  8456                           ;color.c: 118:     float L = vals->L;
  8457   0035CE  EE20 F006          	lfsr	2,6
  8458   0035D2  504B               	movf	colour_rel@vals^0,w,c
  8459   0035D4  26D9               	addwf	fsr2l,f,c
  8460   0035D6  504C               	movf	(colour_rel@vals+1)^0,w,c
  8461   0035D8  22DA               	addwfc	fsr2h,f,c
  8462   0035DA  CFDE F001          	movff	postinc2,___xxtofl@val
  8463   0035DE  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8464   0035E2  0E00               	movlw	0
  8465   0035E4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8466   0035E6  0EFF               	movlw	-1
  8467   0035E8  6E03               	movwf	(___xxtofl@val+2)^0,c
  8468   0035EA  6E04               	movwf	(___xxtofl@val+3)^0,c
  8469   0035EC  0E01               	movlw	1
  8470   0035EE  ECE6  F020         	call	___xxtofl
  8471   0035F2  C001  F060         	movff	?___xxtofl,colour_rel@L
  8472   0035F6  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  8473   0035FA  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  8474   0035FE  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  8475   003602                     
  8476                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8477   003602  C070  F005         	movff	colour_rel@G,___fladd@a
  8478   003606  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8479   00360A  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8480   00360E  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8481   003612  C06C  F001         	movff	colour_rel@R,___fladd@b
  8482   003616  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8483   00361A  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8484   00361E  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8485   003622  EC59  F014         	call	___fladd	;wreg free
  8486   003626  C001  F064         	movff	?___fladd,_colour_rel$2796
  8487   00362A  C002  F065         	movff	?___fladd+1,_colour_rel$2796+1
  8488   00362E  C003  F066         	movff	?___fladd+2,_colour_rel$2796+2
  8489   003632  C004  F067         	movff	?___fladd+3,_colour_rel$2796+3
  8490   003636                     
  8491                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8492   003636  C074  F005         	movff	colour_rel@B,___fladd@a
  8493   00363A  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8494   00363E  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8495   003642  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8496   003646  C064  F001         	movff	_colour_rel$2796,___fladd@b
  8497   00364A  C065  F002         	movff	_colour_rel$2796+1,___fladd@b+1
  8498   00364E  C066  F003         	movff	_colour_rel$2796+2,___fladd@b+2
  8499   003652  C067  F004         	movff	_colour_rel$2796+3,___fladd@b+3
  8500   003656  EC59  F014         	call	___fladd	;wreg free
  8501   00365A  C001  F068         	movff	?___fladd,_colour_rel$2797
  8502   00365E  C002  F069         	movff	?___fladd+1,_colour_rel$2797+1
  8503   003662  C003  F06A         	movff	?___fladd+2,_colour_rel$2797+2
  8504   003666  C004  F06B         	movff	?___fladd+3,_colour_rel$2797+3
  8505                           
  8506                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8507   00366A  C06C  F032         	movff	colour_rel@R,___fldiv@b
  8508   00366E  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  8509   003672  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  8510   003676  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  8511   00367A  C060  F005         	movff	colour_rel@L,___fladd@a
  8512   00367E  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8513   003682  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8514   003686  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8515   00368A  C068  F001         	movff	_colour_rel$2797,___fladd@b
  8516   00368E  C069  F002         	movff	_colour_rel$2797+1,___fladd@b+1
  8517   003692  C06A  F003         	movff	_colour_rel$2797+2,___fladd@b+2
  8518   003696  C06B  F004         	movff	_colour_rel$2797+3,___fladd@b+3
  8519   00369A  EC59  F014         	call	___fladd	;wreg free
  8520   00369E  C001  F036         	movff	?___fladd,___fldiv@a
  8521   0036A2  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8522   0036A6  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8523   0036AA  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8524   0036AE  ECCE  F018         	call	___fldiv	;wreg free
  8525   0036B2  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  8526   0036B6  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  8527   0036BA  C032  FFDE         	movff	?___fldiv,postinc2
  8528   0036BE  C033  FFDE         	movff	?___fldiv+1,postinc2
  8529   0036C2  C034  FFDE         	movff	?___fldiv+2,postinc2
  8530   0036C6  C035  FFDE         	movff	?___fldiv+3,postinc2
  8531   0036CA                     
  8532                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8533   0036CA  C070  F005         	movff	colour_rel@G,___fladd@a
  8534   0036CE  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8535   0036D2  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8536   0036D6  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8537   0036DA  C06C  F001         	movff	colour_rel@R,___fladd@b
  8538   0036DE  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8539   0036E2  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8540   0036E6  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8541   0036EA  EC59  F014         	call	___fladd	;wreg free
  8542   0036EE  C001  F064         	movff	?___fladd,_colour_rel$2796
  8543   0036F2  C002  F065         	movff	?___fladd+1,_colour_rel$2796+1
  8544   0036F6  C003  F066         	movff	?___fladd+2,_colour_rel$2796+2
  8545   0036FA  C004  F067         	movff	?___fladd+3,_colour_rel$2796+3
  8546   0036FE                     
  8547                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8548   0036FE  C074  F005         	movff	colour_rel@B,___fladd@a
  8549   003702  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8550   003706  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8551   00370A  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8552   00370E  C064  F001         	movff	_colour_rel$2796,___fladd@b
  8553   003712  C065  F002         	movff	_colour_rel$2796+1,___fladd@b+1
  8554   003716  C066  F003         	movff	_colour_rel$2796+2,___fladd@b+2
  8555   00371A  C067  F004         	movff	_colour_rel$2796+3,___fladd@b+3
  8556   00371E  EC59  F014         	call	___fladd	;wreg free
  8557   003722  C001  F068         	movff	?___fladd,_colour_rel$2797
  8558   003726  C002  F069         	movff	?___fladd+1,_colour_rel$2797+1
  8559   00372A  C003  F06A         	movff	?___fladd+2,_colour_rel$2797+2
  8560   00372E  C004  F06B         	movff	?___fladd+3,_colour_rel$2797+3
  8561                           
  8562                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8563   003732  C074  F032         	movff	colour_rel@B,___fldiv@b
  8564   003736  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  8565   00373A  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  8566   00373E  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  8567   003742  C060  F005         	movff	colour_rel@L,___fladd@a
  8568   003746  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8569   00374A  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8570   00374E  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8571   003752  C068  F001         	movff	_colour_rel$2797,___fladd@b
  8572   003756  C069  F002         	movff	_colour_rel$2797+1,___fladd@b+1
  8573   00375A  C06A  F003         	movff	_colour_rel$2797+2,___fladd@b+2
  8574   00375E  C06B  F004         	movff	_colour_rel$2797+3,___fladd@b+3
  8575   003762  EC59  F014         	call	___fladd	;wreg free
  8576   003766  C001  F036         	movff	?___fladd,___fldiv@a
  8577   00376A  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8578   00376E  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8579   003772  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8580   003776  ECCE  F018         	call	___fldiv	;wreg free
  8581   00377A  EE20 F008          	lfsr	2,8
  8582   00377E  504D               	movf	colour_rel@rel^0,w,c
  8583   003780  26D9               	addwf	fsr2l,f,c
  8584   003782  504E               	movf	(colour_rel@rel+1)^0,w,c
  8585   003784  22DA               	addwfc	fsr2h,f,c
  8586   003786  C032  FFDE         	movff	?___fldiv,postinc2
  8587   00378A  C033  FFDE         	movff	?___fldiv+1,postinc2
  8588   00378E  C034  FFDE         	movff	?___fldiv+2,postinc2
  8589   003792  C035  FFDE         	movff	?___fldiv+3,postinc2
  8590   003796                     
  8591                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8592   003796  C070  F005         	movff	colour_rel@G,___fladd@a
  8593   00379A  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8594   00379E  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8595   0037A2  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8596   0037A6  C06C  F001         	movff	colour_rel@R,___fladd@b
  8597   0037AA  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8598   0037AE  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8599   0037B2  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8600   0037B6  EC59  F014         	call	___fladd	;wreg free
  8601   0037BA  C001  F064         	movff	?___fladd,_colour_rel$2796
  8602   0037BE  C002  F065         	movff	?___fladd+1,_colour_rel$2796+1
  8603   0037C2  C003  F066         	movff	?___fladd+2,_colour_rel$2796+2
  8604   0037C6  C004  F067         	movff	?___fladd+3,_colour_rel$2796+3
  8605   0037CA                     
  8606                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8607   0037CA  C074  F005         	movff	colour_rel@B,___fladd@a
  8608   0037CE  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8609   0037D2  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8610   0037D6  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8611   0037DA  C064  F001         	movff	_colour_rel$2796,___fladd@b
  8612   0037DE  C065  F002         	movff	_colour_rel$2796+1,___fladd@b+1
  8613   0037E2  C066  F003         	movff	_colour_rel$2796+2,___fladd@b+2
  8614   0037E6  C067  F004         	movff	_colour_rel$2796+3,___fladd@b+3
  8615   0037EA  EC59  F014         	call	___fladd	;wreg free
  8616   0037EE  C001  F068         	movff	?___fladd,_colour_rel$2797
  8617   0037F2  C002  F069         	movff	?___fladd+1,_colour_rel$2797+1
  8618   0037F6  C003  F06A         	movff	?___fladd+2,_colour_rel$2797+2
  8619   0037FA  C004  F06B         	movff	?___fladd+3,_colour_rel$2797+3
  8620                           
  8621                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8622   0037FE  C070  F032         	movff	colour_rel@G,___fldiv@b
  8623   003802  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  8624   003806  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  8625   00380A  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  8626   00380E  C060  F005         	movff	colour_rel@L,___fladd@a
  8627   003812  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8628   003816  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8629   00381A  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8630   00381E  C068  F001         	movff	_colour_rel$2797,___fladd@b
  8631   003822  C069  F002         	movff	_colour_rel$2797+1,___fladd@b+1
  8632   003826  C06A  F003         	movff	_colour_rel$2797+2,___fladd@b+2
  8633   00382A  C06B  F004         	movff	_colour_rel$2797+3,___fladd@b+3
  8634   00382E  EC59  F014         	call	___fladd	;wreg free
  8635   003832  C001  F036         	movff	?___fladd,___fldiv@a
  8636   003836  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8637   00383A  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8638   00383E  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8639   003842  ECCE  F018         	call	___fldiv	;wreg free
  8640   003846  EE20 F004          	lfsr	2,4
  8641   00384A  504D               	movf	colour_rel@rel^0,w,c
  8642   00384C  26D9               	addwf	fsr2l,f,c
  8643   00384E  504E               	movf	(colour_rel@rel+1)^0,w,c
  8644   003850  22DA               	addwfc	fsr2h,f,c
  8645   003852  C032  FFDE         	movff	?___fldiv,postinc2
  8646   003856  C033  FFDE         	movff	?___fldiv+1,postinc2
  8647   00385A  C034  FFDE         	movff	?___fldiv+2,postinc2
  8648   00385E  C035  FFDE         	movff	?___fldiv+3,postinc2
  8649   003862  0012               	return		;funcret
  8650   003864                     __end_of_colour_rel:
  8651                           	callstack 0
  8652                           
  8653 ;; *************** function _color_click_init *****************
  8654 ;; Defined at:
  8655 ;;		line 7 in file "color.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;		None
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;		None
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  1    wreg      void 
  8662 ;; Registers used:
  8663 ;;		wreg, status,2, status,0, cstack
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8672 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8673 ;;Total ram usage:        1 bytes
  8674 ;; Hardware stack levels used: 1
  8675 ;; Hardware stack levels required when called: 4
  8676 ;; This function calls:
  8677 ;;		_I2C_2_Master_Init
  8678 ;;		_color_writetoaddr
  8679 ;; This function is called by:
  8680 ;;		_main
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text42
  8685   00562A                     __ptext42:
  8686                           	callstack 0
  8687   00562A                     _color_click_init:
  8688                           	callstack 26
  8689   00562A                     
  8690                           ;color.c: 10:     I2C_2_Master_Init();
  8691   00562A  ECB0  F02D         	call	_I2C_2_Master_Init	;wreg free
  8692   00562E                     
  8693                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  8694   00562E  0E01               	movlw	1
  8695   005630  6E03               	movwf	color_writetoaddr@value^0,c
  8696   005632  0E00               	movlw	0
  8697   005634  ECEC  F02D         	call	_color_writetoaddr
  8698   005638                     
  8699                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8700   005638  0E3F               	movlw	63
  8701   00563A  6E05               	movwf	??_color_click_init^0,c
  8702   00563C  0E55               	movlw	85
  8703   00563E                     u5847:
  8704   00563E  2EE8               	decfsz	wreg,f,c
  8705   005640  D7FE               	bra	u5847
  8706   005642  2E05               	decfsz	??_color_click_init^0,f,c
  8707   005644  D7FC               	bra	u5847
  8708   005646  F000               	nop	
  8709   005648                     
  8710                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8711   005648  0E03               	movlw	3
  8712   00564A  6E03               	movwf	color_writetoaddr@value^0,c
  8713   00564C  0E00               	movlw	0
  8714   00564E  ECEC  F02D         	call	_color_writetoaddr
  8715   005652                     
  8716                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  8717   005652  0ED5               	movlw	213
  8718   005654  6E03               	movwf	color_writetoaddr@value^0,c
  8719   005656  0E01               	movlw	1
  8720   005658  ECEC  F02D         	call	_color_writetoaddr
  8721   00565C                     
  8722                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  8723   00565C  0E00               	movlw	0
  8724   00565E  6E03               	movwf	color_writetoaddr@value^0,c
  8725   005660  0E0F               	movlw	15
  8726   005662  ECEC  F02D         	call	_color_writetoaddr
  8727   005666                     
  8728                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  8729   005666  9287               	bcf	135,1,c	;volatile
  8730   005668                     
  8731                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  8732   005668  9881               	bcf	129,4,c	;volatile
  8733   00566A                     
  8734                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  8735   00566A  9E86               	bcf	134,7,c	;volatile
  8736   00566C                     
  8737                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  8738   00566C  9684               	bcf	132,3,c	;volatile
  8739   00566E                     
  8740                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  8741   00566E  9884               	bcf	132,4,c	;volatile
  8742   005670                     
  8743                           ;color.c: 28:     LATGbits.LATG1=0;
  8744   005670  927F               	bcf	127,1,c	;volatile
  8745   005672                     
  8746                           ;color.c: 29:     LATFbits.LATF7=0;
  8747   005672  9E7E               	bcf	126,7,c	;volatile
  8748   005674                     
  8749                           ;color.c: 30:     LATAbits.LATA4=0;
  8750   005674  9879               	bcf	121,4,c	;volatile
  8751   005676                     
  8752                           ;color.c: 32:     LATDbits.LATD3=0;
  8753   005676  967C               	bcf	124,3,c	;volatile
  8754   005678                     
  8755                           ;color.c: 33:     LATDbits.LATD4=0;
  8756   005678  987C               	bcf	124,4,c	;volatile
  8757   00567A  0012               	return		;funcret
  8758   00567C                     __end_of_color_click_init:
  8759                           	callstack 0
  8760                           
  8761 ;; *************** function _color_writetoaddr *****************
  8762 ;; Defined at:
  8763 ;;		line 41 in file "color.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  address         1    wreg     unsigned char 
  8766 ;;  value           1    2[COMRAM] unsigned char 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  address         1    3[COMRAM] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0, cstack
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8778 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8782 ;;Total ram usage:        2 bytes
  8783 ;; Hardware stack levels used: 1
  8784 ;; Hardware stack levels required when called: 3
  8785 ;; This function calls:
  8786 ;;		_I2C_2_Master_Start
  8787 ;;		_I2C_2_Master_Stop
  8788 ;;		_I2C_2_Master_Write
  8789 ;; This function is called by:
  8790 ;;		_color_click_init
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text43
  8795   005BD8                     __ptext43:
  8796                           	callstack 0
  8797   005BD8                     _color_writetoaddr:
  8798                           	callstack 26
  8799                           
  8800                           ;incstack = 0
  8801                           ;color_writetoaddr@address stored from wreg
  8802   005BD8  6E04               	movwf	color_writetoaddr@address^0,c
  8803   005BDA                     
  8804                           ;color.c: 42:     I2C_2_Master_Start();
  8805   005BDA  EC27  F02E         	call	_I2C_2_Master_Start	;wreg free
  8806                           
  8807                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  8808   005BDE  0E52               	movlw	82
  8809   005BE0  EC17  F02E         	call	_I2C_2_Master_Write
  8810                           
  8811                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  8812   005BE4  5004               	movf	color_writetoaddr@address^0,w,c
  8813   005BE6  0980               	iorlw	128
  8814   005BE8  EC17  F02E         	call	_I2C_2_Master_Write
  8815                           
  8816                           ;color.c: 45:     I2C_2_Master_Write(value);
  8817   005BEC  5003               	movf	color_writetoaddr@value^0,w,c
  8818   005BEE  EC17  F02E         	call	_I2C_2_Master_Write
  8819                           
  8820                           ;color.c: 46:     I2C_2_Master_Stop();
  8821   005BF2  EC22  F02E         	call	_I2C_2_Master_Stop	;wreg free
  8822   005BF6  0012               	return		;funcret
  8823   005BF8                     __end_of_color_writetoaddr:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function _I2C_2_Master_Write *****************
  8827 ;; Defined at:
  8828 ;;		line 45 in file "i2c.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  data_byte       1    wreg     unsigned char 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  data_byte       1    1[COMRAM] unsigned char 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;Total ram usage:        1 bytes
  8847 ;; Hardware stack levels used: 1
  8848 ;; Hardware stack levels required when called: 2
  8849 ;; This function calls:
  8850 ;;		_I2C_2_Master_Idle
  8851 ;; This function is called by:
  8852 ;;		_color_writetoaddr
  8853 ;;		_color_read_lum
  8854 ;;		_color_read_Red
  8855 ;;		_color_read_Green
  8856 ;;		_color_read_Blue
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text44
  8861   005C2E                     __ptext44:
  8862                           	callstack 0
  8863   005C2E                     _I2C_2_Master_Write:
  8864                           	callstack 26
  8865                           
  8866                           ;incstack = 0
  8867                           ;I2C_2_Master_Write@data_byte stored from wreg
  8868   005C2E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8869   005C30                     
  8870                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8871   005C30  ECC5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8872   005C34                     
  8873                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8874   005C34  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8875   005C38  0012               	return		;funcret
  8876   005C3A                     __end_of_I2C_2_Master_Write:
  8877                           	callstack 0
  8878                           
  8879 ;; *************** function _I2C_2_Master_Stop *****************
  8880 ;; Defined at:
  8881 ;;		line 39 in file "i2c.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      void 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used: 1
  8901 ;; Hardware stack levels required when called: 2
  8902 ;; This function calls:
  8903 ;;		_I2C_2_Master_Idle
  8904 ;; This function is called by:
  8905 ;;		_color_writetoaddr
  8906 ;;		_color_read_lum
  8907 ;;		_color_read_Red
  8908 ;;		_color_read_Green
  8909 ;;		_color_read_Blue
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text45
  8914   005C44                     __ptext45:
  8915                           	callstack 0
  8916   005C44                     _I2C_2_Master_Stop:
  8917                           	callstack 26
  8918   005C44                     
  8919                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8920   005C44  ECC5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8921   005C48                     
  8922                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8923   005C48  010E               	movlb	14	; () banked
  8924   005C4A  85DA               	bsf	218,2,b	;volatile
  8925   005C4C                     
  8926                           ; BSR set to: 14
  8927   005C4C  0012               	return		;funcret
  8928   005C4E                     __end_of_I2C_2_Master_Stop:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function _I2C_2_Master_Start *****************
  8932 ;; Defined at:
  8933 ;;		line 27 in file "i2c.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;		None
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;		None
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8951 ;;Total ram usage:        0 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 2
  8954 ;; This function calls:
  8955 ;;		_I2C_2_Master_Idle
  8956 ;; This function is called by:
  8957 ;;		_color_writetoaddr
  8958 ;;		_color_read_lum
  8959 ;;		_color_read_Red
  8960 ;;		_color_read_Green
  8961 ;;		_color_read_Blue
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           	psect	text46
  8966   005C4E                     __ptext46:
  8967                           	callstack 0
  8968   005C4E                     _I2C_2_Master_Start:
  8969                           	callstack 26
  8970   005C4E                     
  8971                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8972   005C4E  ECC5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8973   005C52                     
  8974                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8975   005C52  010E               	movlb	14	; () banked
  8976   005C54  81DA               	bsf	218,0,b	;volatile
  8977   005C56                     
  8978                           ; BSR set to: 14
  8979   005C56  0012               	return		;funcret
  8980   005C58                     __end_of_I2C_2_Master_Start:
  8981                           	callstack 0
  8982                           
  8983 ;; *************** function _I2C_2_Master_Idle *****************
  8984 ;; Defined at:
  8985 ;;		line 22 in file "i2c.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;		None
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, status,2, status,0
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9003 ;;Total ram usage:        1 bytes
  9004 ;; Hardware stack levels used: 1
  9005 ;; Hardware stack levels required when called: 1
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		_I2C_2_Master_Start
  9010 ;;		_I2C_2_Master_RepStart
  9011 ;;		_I2C_2_Master_Stop
  9012 ;;		_I2C_2_Master_Write
  9013 ;;		_I2C_2_Master_Read
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text47
  9018   005B8A                     __ptext47:
  9019                           	callstack 0
  9020   005B8A                     _I2C_2_Master_Idle:
  9021                           	callstack 26
  9022   005B8A                     l143:
  9023   005B8A  010E               	movlb	14	; () banked
  9024   005B8C  B5D8               	btfsc	216,2,b	;volatile
  9025   005B8E  EFCB  F02D         	goto	u4321
  9026   005B92  EFCD  F02D         	goto	u4320
  9027   005B96                     u4321:
  9028   005B96  EFC5  F02D         	goto	l143
  9029   005B9A                     u4320:
  9030   005B9A                     
  9031                           ; BSR set to: 14
  9032   005B9A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9033   005B9E  0E1F               	movlw	31
  9034   005BA0  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9035   005BA2  A4D8               	btfss	status,2,c
  9036   005BA4  EFD6  F02D         	goto	u4331
  9037   005BA8  EFD8  F02D         	goto	u4330
  9038   005BAC                     u4331:
  9039   005BAC  EFC5  F02D         	goto	l143
  9040   005BB0                     u4330:
  9041   005BB0                     
  9042                           ; BSR set to: 14
  9043   005BB0  0012               	return		;funcret
  9044   005BB2                     __end_of_I2C_2_Master_Idle:
  9045                           	callstack 0
  9046                           
  9047 ;; *************** function _I2C_2_Master_Init *****************
  9048 ;; Defined at:
  9049 ;;		line 4 in file "i2c.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, status,2
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used: 1
  9069 ;; Hardware stack levels required when called: 1
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_color_click_init
  9074 ;;		_main
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text48
  9079   005B60                     __ptext48:
  9080                           	callstack 0
  9081   005B60                     _I2C_2_Master_Init:
  9082                           	callstack 28
  9083   005B60                     
  9084                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9085   005B60  010E               	movlb	14	; () banked
  9086   005B62  51D9               	movf	217,w,b	;volatile
  9087   005B64  0BF0               	andlw	-16
  9088   005B66  0908               	iorlw	8
  9089   005B68  6FD9               	movwf	217,b	;volatile
  9090   005B6A                     
  9091                           ; BSR set to: 14
  9092                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9093   005B6A  8BD9               	bsf	217,5,b	;volatile
  9094                           
  9095                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9096   005B6C  0E9F               	movlw	159
  9097   005B6E  6FD6               	movwf	214,b	;volatile
  9098   005B70                     
  9099                           ; BSR set to: 14
  9100                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9101   005B70  8A84               	bsf	132,5,c	;volatile
  9102   005B72                     
  9103                           ; BSR set to: 14
  9104                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9105   005B72  8C84               	bsf	132,6,c	;volatile
  9106   005B74                     
  9107                           ; BSR set to: 14
  9108                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9109   005B74  9BA7               	bcf	167,5,b	;volatile
  9110   005B76                     
  9111                           ; BSR set to: 14
  9112                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9113   005B76  9DA7               	bcf	167,6,b	;volatile
  9114                           
  9115                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9116   005B78  0E1D               	movlw	29
  9117   005B7A  6F1D               	movwf	29,b	;volatile
  9118                           
  9119                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9120   005B7C  0E1E               	movlw	30
  9121   005B7E  6F1C               	movwf	28,b	;volatile
  9122                           
  9123                           ;i2c.c: 18:   RD5PPS=0x1C;
  9124   005B80  0E1C               	movlw	28
  9125   005B82  6F6F               	movwf	111,b	;volatile
  9126                           
  9127                           ;i2c.c: 19:   RD6PPS=0x1B;
  9128   005B84  0E1B               	movlw	27
  9129   005B86  6F70               	movwf	112,b	;volatile
  9130   005B88                     
  9131                           ; BSR set to: 14
  9132   005B88  0012               	return		;funcret
  9133   005B8A                     __end_of_I2C_2_Master_Init:
  9134                           	callstack 0
  9135                           
  9136 ;; *************** function _YellowMove *****************
  9137 ;; Defined at:
  9138 ;;		line 258 in file "dc_motor.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9141 ;;		 -> motorL(9), 
  9142 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9143 ;;		 -> motorR(9), 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;		None
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  1    wreg      void 
  9148 ;; Registers used:
  9149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9158 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9159 ;;Total ram usage:        4 bytes
  9160 ;; Hardware stack levels used: 1
  9161 ;; Hardware stack levels required when called: 5
  9162 ;; This function calls:
  9163 ;;		_reverseDetect
  9164 ;;		_reverseOneBlock
  9165 ;;		_turnRight45
  9166 ;; This function is called by:
  9167 ;;		_main
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text49
  9172   00567C                     __ptext49:
  9173                           	callstack 0
  9174   00567C                     _YellowMove:
  9175                           	callstack 25
  9176   00567C                     
  9177                           ;dc_motor.c: 259:     reverseDetect(&motorL, &motorR);
  9178   00567C  0E7B               	movlw	low _motorL
  9179   00567E  6E1A               	movwf	reverseDetect@mL^0,c
  9180   005680  0E01               	movlw	high _motorL
  9181   005682  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9182   005684  0E72               	movlw	low _motorR
  9183   005686  6E1C               	movwf	reverseDetect@mR^0,c
  9184   005688  0E01               	movlw	high _motorR
  9185   00568A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9186   00568C  ECEA  F029         	call	_reverseDetect	;wreg free
  9187                           
  9188                           ;dc_motor.c: 261:     reverseOneBlock(&motorL, &motorR);
  9189   005690  0E7B               	movlw	low _motorL
  9190   005692  6E1A               	movwf	reverseOneBlock@mL^0,c
  9191   005694  0E01               	movlw	high _motorL
  9192   005696  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9193   005698  0E72               	movlw	low _motorR
  9194   00569A  6E1C               	movwf	reverseOneBlock@mR^0,c
  9195   00569C  0E01               	movlw	high _motorR
  9196   00569E  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9197   0056A0  ECBD  F029         	call	_reverseOneBlock	;wreg free
  9198                           
  9199                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  9200   0056A4  0E7B               	movlw	low _motorL
  9201   0056A6  6E1A               	movwf	turnRight45@mL^0,c
  9202   0056A8  0E01               	movlw	high _motorL
  9203   0056AA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9204   0056AC  0E72               	movlw	low _motorR
  9205   0056AE  6E1C               	movwf	turnRight45@mR^0,c
  9206   0056B0  0E01               	movlw	high _motorR
  9207   0056B2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9208   0056B4  EC17  F02A         	call	_turnRight45	;wreg free
  9209                           
  9210                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  9211   0056B8  0E7B               	movlw	low _motorL
  9212   0056BA  6E1A               	movwf	turnRight45@mL^0,c
  9213   0056BC  0E01               	movlw	high _motorL
  9214   0056BE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9215   0056C0  0E72               	movlw	low _motorR
  9216   0056C2  6E1C               	movwf	turnRight45@mR^0,c
  9217   0056C4  0E01               	movlw	high _motorR
  9218   0056C6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9219   0056C8  EC17  F02A         	call	_turnRight45	;wreg free
  9220   0056CC  0012               	return		;funcret
  9221   0056CE                     __end_of_YellowMove:
  9222                           	callstack 0
  9223                           
  9224 ;; *************** function _turnRight45 *****************
  9225 ;; Defined at:
  9226 ;;		line 181 in file "dc_motor.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9229 ;;		 -> motorL(9), 
  9230 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9231 ;;		 -> motorR(9), 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      void 
  9236 ;; Registers used:
  9237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9247 ;;Total ram usage:        6 bytes
  9248 ;; Hardware stack levels used: 1
  9249 ;; Hardware stack levels required when called: 4
  9250 ;; This function calls:
  9251 ;;		_stop
  9252 ;;		_turnRight
  9253 ;; This function is called by:
  9254 ;;		_main
  9255 ;;		_RedMove
  9256 ;;		_BlueMove
  9257 ;;		_YellowMove
  9258 ;;		_OrangeMove
  9259 ;;		_ReversePink
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text50
  9264   00542E                     __ptext50:
  9265                           	callstack 0
  9266   00542E                     _turnRight45:
  9267                           	callstack 26
  9268   00542E                     
  9269                           ;dc_motor.c: 182:     turnRight(mL,mR);
  9270   00542E  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  9271   005432  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9272   005436  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  9273   00543A  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9274   00543E  EC2A  F026         	call	_turnRight	;wreg free
  9275   005442                     
  9276                           ;dc_motor.c: 183:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  9277   005442  0E12               	movlw	18
  9278   005444  6E1F               	movwf	(??_turnRight45+1)^0,c
  9279   005446  0EDC               	movlw	220
  9280   005448  6E1E               	movwf	??_turnRight45^0,c
  9281   00544A  0E60               	movlw	96
  9282   00544C                     u5857:
  9283   00544C  2EE8               	decfsz	wreg,f,c
  9284   00544E  D7FE               	bra	u5857
  9285   005450  2E1E               	decfsz	??_turnRight45^0,f,c
  9286   005452  D7FC               	bra	u5857
  9287   005454  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9288   005456  D7FA               	bra	u5857
  9289   005458                     
  9290                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  9291   005458  0E7B               	movlw	low _motorL
  9292   00545A  6E14               	movwf	stop@mL^0,c
  9293   00545C  0E01               	movlw	high _motorL
  9294   00545E  6E15               	movwf	(stop@mL+1)^0,c
  9295   005460  0E72               	movlw	low _motorR
  9296   005462  6E16               	movwf	stop@mR^0,c
  9297   005464  0E01               	movlw	high _motorR
  9298   005466  6E17               	movwf	(stop@mR+1)^0,c
  9299   005468  ECEB  F027         	call	_stop	;wreg free
  9300                           
  9301                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9302   00546C  0E52               	movlw	82
  9303   00546E  6E1F               	movwf	(??_turnRight45+1)^0,c
  9304   005470  0E2B               	movlw	43
  9305   005472  6E1E               	movwf	??_turnRight45^0,c
  9306   005474  0E00               	movlw	0
  9307   005476                     u5867:
  9308   005476  2EE8               	decfsz	wreg,f,c
  9309   005478  D7FE               	bra	u5867
  9310   00547A  2E1E               	decfsz	??_turnRight45^0,f,c
  9311   00547C  D7FC               	bra	u5867
  9312   00547E  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9313   005480  D7FA               	bra	u5867
  9314   005482  D000               	nop2	
  9315   005484  0012               	return		;funcret
  9316   005486                     __end_of_turnRight45:
  9317                           	callstack 0
  9318                           
  9319 ;; *************** function _turnRight *****************
  9320 ;; Defined at:
  9321 ;;		line 128 in file "dc_motor.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9324 ;;		 -> motorL(9), 
  9325 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9326 ;;		 -> motorR(9), 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      void 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9342 ;;Total ram usage:        6 bytes
  9343 ;; Hardware stack levels used: 1
  9344 ;; Hardware stack levels required when called: 3
  9345 ;; This function calls:
  9346 ;;		_setMotorPWM
  9347 ;; This function is called by:
  9348 ;;		_turnRight45
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text51
  9353   004C54                     __ptext51:
  9354                           	callstack 0
  9355   004C54                     _turnRight:
  9356                           	callstack 26
  9357   004C54                     
  9358                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  9359   004C54  EE20 F001          	lfsr	2,1
  9360   004C58  5014               	movf	turnRight@mL^0,w,c
  9361   004C5A  26D9               	addwf	fsr2l,f,c
  9362   004C5C  5015               	movf	(turnRight@mL+1)^0,w,c
  9363   004C5E  22DA               	addwfc	fsr2h,f,c
  9364   004C60  0E01               	movlw	1
  9365   004C62  6EDF               	movwf	indf2,c
  9366                           
  9367                           ;dc_motor.c: 131:     mR->direction =0;
  9368   004C64  EE20 F001          	lfsr	2,1
  9369   004C68  5016               	movf	turnRight@mR^0,w,c
  9370   004C6A  26D9               	addwf	fsr2l,f,c
  9371   004C6C  5017               	movf	(turnRight@mR+1)^0,w,c
  9372   004C6E  22DA               	addwfc	fsr2h,f,c
  9373   004C70  0E00               	movlw	0
  9374   004C72  6EDF               	movwf	indf2,c
  9375                           
  9376                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  9377   004C74  EF60  F026         	goto	l4500
  9378   004C78                     l4492:
  9379                           
  9380                           ;dc_motor.c: 135:         mL->power+=10;
  9381   004C78  C014  FFD9         	movff	turnRight@mL,fsr2l
  9382   004C7C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9383   004C80  0E0A               	movlw	10
  9384   004C82  26DF               	addwf	indf2,f,c
  9385                           
  9386                           ;dc_motor.c: 136:         mR->power+=10;
  9387   004C84  C016  FFD9         	movff	turnRight@mR,fsr2l
  9388   004C88  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9389   004C8C  0E0A               	movlw	10
  9390   004C8E  26DF               	addwf	indf2,f,c
  9391   004C90                     
  9392                           ;dc_motor.c: 138:         setMotorPWM(mL);
  9393   004C90  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9394   004C94  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9395   004C98  EC84  F022         	call	_setMotorPWM	;wreg free
  9396   004C9C                     
  9397                           ;dc_motor.c: 139:         setMotorPWM(mR);
  9398   004C9C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9399   004CA0  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9400   004CA4  EC84  F022         	call	_setMotorPWM	;wreg free
  9401   004CA8                     
  9402                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9403   004CA8  0E02               	movlw	2
  9404   004CAA  6E19               	movwf	(??_turnRight+1)^0,c
  9405   004CAC  0EA0               	movlw	160
  9406   004CAE  6E18               	movwf	??_turnRight^0,c
  9407   004CB0  0E92               	movlw	146
  9408   004CB2                     u5877:
  9409   004CB2  2EE8               	decfsz	wreg,f,c
  9410   004CB4  D7FE               	bra	u5877
  9411   004CB6  2E18               	decfsz	??_turnRight^0,f,c
  9412   004CB8  D7FC               	bra	u5877
  9413   004CBA  2E19               	decfsz	(??_turnRight+1)^0,f,c
  9414   004CBC  D7FA               	bra	u5877
  9415   004CBE  D000               	nop2	
  9416   004CC0                     l4500:
  9417   004CC0  C014  FFD9         	movff	turnRight@mL,fsr2l
  9418   004CC4  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9419   004CC8  0E1E               	movlw	30
  9420   004CCA  60DF               	cpfslt	indf2,c
  9421   004CCC  EF6A  F026         	goto	u4381
  9422   004CD0  EF6C  F026         	goto	u4380
  9423   004CD4                     u4381:
  9424   004CD4  EF78  F026         	goto	l507
  9425   004CD8                     u4380:
  9426   004CD8  C016  FFD9         	movff	turnRight@mR,fsr2l
  9427   004CDC  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9428   004CE0  0E1D               	movlw	29
  9429   004CE2  64DF               	cpfsgt	indf2,c
  9430   004CE4  EF76  F026         	goto	u4391
  9431   004CE8  EF78  F026         	goto	u4390
  9432   004CEC                     u4391:
  9433   004CEC  EF3C  F026         	goto	l4492
  9434   004CF0                     u4390:
  9435   004CF0                     l507:
  9436   004CF0  0012               	return		;funcret
  9437   004CF2                     __end_of_turnRight:
  9438                           	callstack 0
  9439                           
  9440 ;; *************** function _RetryMove *****************
  9441 ;; Defined at:
  9442 ;;		line 295 in file "dc_motor.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9445 ;;		 -> motorL(9), 
  9446 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9447 ;;		 -> motorR(9), 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9462 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9463 ;;Total ram usage:        6 bytes
  9464 ;; Hardware stack levels used: 1
  9465 ;; Hardware stack levels required when called: 4
  9466 ;; This function calls:
  9467 ;;		_fullSpeedAhead
  9468 ;;		_fullSpeedBack
  9469 ;;		_stop
  9470 ;; This function is called by:
  9471 ;;		_main
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           	psect	text52
  9476   004F54                     __ptext52:
  9477                           	callstack 0
  9478   004F54                     _RetryMove:
  9479                           	callstack 26
  9480   004F54                     
  9481                           ;dc_motor.c: 296:     fullSpeedBack(mL,mR);
  9482   004F54  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  9483   004F58  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  9484   004F5C  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  9485   004F60  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  9486   004F64  EC17  F027         	call	_fullSpeedBack	;wreg free
  9487   004F68                     
  9488                           ;dc_motor.c: 297:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9489   004F68  0E29               	movlw	41
  9490   004F6A  6E1F               	movwf	(??_RetryMove+1)^0,c
  9491   004F6C  0E96               	movlw	150
  9492   004F6E  6E1E               	movwf	??_RetryMove^0,c
  9493   004F70  0E7F               	movlw	127
  9494   004F72                     u5887:
  9495   004F72  2EE8               	decfsz	wreg,f,c
  9496   004F74  D7FE               	bra	u5887
  9497   004F76  2E1E               	decfsz	??_RetryMove^0,f,c
  9498   004F78  D7FC               	bra	u5887
  9499   004F7A  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  9500   004F7C  D7FA               	bra	u5887
  9501   004F7E  F000               	nop	
  9502   004F80                     
  9503                           ;dc_motor.c: 298:     stop(&motorL, &motorR);
  9504   004F80  0E7B               	movlw	low _motorL
  9505   004F82  6E14               	movwf	stop@mL^0,c
  9506   004F84  0E01               	movlw	high _motorL
  9507   004F86  6E15               	movwf	(stop@mL+1)^0,c
  9508   004F88  0E72               	movlw	low _motorR
  9509   004F8A  6E16               	movwf	stop@mR^0,c
  9510   004F8C  0E01               	movlw	high _motorR
  9511   004F8E  6E17               	movwf	(stop@mR+1)^0,c
  9512   004F90  ECEB  F027         	call	_stop	;wreg free
  9513   004F94                     
  9514                           ;dc_motor.c: 299:     fullSpeedAhead(mL,mR);
  9515   004F94  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9516   004F98  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9517   004F9C  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9518   004FA0  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9519   004FA4  EC79  F026         	call	_fullSpeedAhead	;wreg free
  9520   004FA8                     
  9521                           ;dc_motor.c: 300:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9522   004FA8  0E29               	movlw	41
  9523   004FAA  6E1F               	movwf	(??_RetryMove+1)^0,c
  9524   004FAC  0E96               	movlw	150
  9525   004FAE  6E1E               	movwf	??_RetryMove^0,c
  9526   004FB0  0E7F               	movlw	127
  9527   004FB2                     u5897:
  9528   004FB2  2EE8               	decfsz	wreg,f,c
  9529   004FB4  D7FE               	bra	u5897
  9530   004FB6  2E1E               	decfsz	??_RetryMove^0,f,c
  9531   004FB8  D7FC               	bra	u5897
  9532   004FBA  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  9533   004FBC  D7FA               	bra	u5897
  9534   004FBE  F000               	nop	
  9535                           
  9536                           ;dc_motor.c: 301:     stop(&motorL, &motorR);
  9537   004FC0  0E7B               	movlw	low _motorL
  9538   004FC2  6E14               	movwf	stop@mL^0,c
  9539   004FC4  0E01               	movlw	high _motorL
  9540   004FC6  6E15               	movwf	(stop@mL+1)^0,c
  9541   004FC8  0E72               	movlw	low _motorR
  9542   004FCA  6E16               	movwf	stop@mR^0,c
  9543   004FCC  0E01               	movlw	high _motorR
  9544   004FCE  6E17               	movwf	(stop@mR+1)^0,c
  9545   004FD0  ECEB  F027         	call	_stop	;wreg free
  9546   004FD4  0012               	return		;funcret
  9547   004FD6                     __end_of_RetryMove:
  9548                           	callstack 0
  9549                           
  9550 ;; *************** function _fullSpeedAhead *****************
  9551 ;; Defined at:
  9552 ;;		line 146 in file "dc_motor.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9555 ;;		 -> motorL(9), 
  9556 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9557 ;;		 -> motorR(9), 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;		None
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  1    wreg      void 
  9562 ;; Registers used:
  9563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9573 ;;Total ram usage:        6 bytes
  9574 ;; Hardware stack levels used: 1
  9575 ;; Hardware stack levels required when called: 3
  9576 ;; This function calls:
  9577 ;;		_setMotorPWM
  9578 ;; This function is called by:
  9579 ;;		_ForwardOneBlock
  9580 ;;		_Forwardhalfblock
  9581 ;;		_RetryMove
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           	psect	text53
  9586   004CF2                     __ptext53:
  9587                           	callstack 0
  9588   004CF2                     _fullSpeedAhead:
  9589                           	callstack 24
  9590   004CF2                     
  9591                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  9592   004CF2  EE20 F001          	lfsr	2,1
  9593   004CF6  5014               	movf	fullSpeedAhead@mL^0,w,c
  9594   004CF8  26D9               	addwf	fsr2l,f,c
  9595   004CFA  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  9596   004CFC  22DA               	addwfc	fsr2h,f,c
  9597   004CFE  0E01               	movlw	1
  9598   004D00  6EDF               	movwf	indf2,c
  9599                           
  9600                           ;dc_motor.c: 150:     mR->direction =1;
  9601   004D02  EE20 F001          	lfsr	2,1
  9602   004D06  5016               	movf	fullSpeedAhead@mR^0,w,c
  9603   004D08  26D9               	addwf	fsr2l,f,c
  9604   004D0A  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  9605   004D0C  22DA               	addwfc	fsr2h,f,c
  9606   004D0E  0E01               	movlw	1
  9607   004D10  6EDF               	movwf	indf2,c
  9608                           
  9609                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  9610   004D12  EFAF  F026         	goto	l4514
  9611   004D16                     l4506:
  9612                           
  9613                           ;dc_motor.c: 153:         mL->power+=10;
  9614   004D16  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9615   004D1A  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9616   004D1E  0E0A               	movlw	10
  9617   004D20  26DF               	addwf	indf2,f,c
  9618                           
  9619                           ;dc_motor.c: 154:         mR->power+=10;
  9620   004D22  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9621   004D26  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9622   004D2A  0E0A               	movlw	10
  9623   004D2C  26DF               	addwf	indf2,f,c
  9624   004D2E                     
  9625                           ;dc_motor.c: 156:         setMotorPWM(mL);
  9626   004D2E  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  9627   004D32  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  9628   004D36  EC84  F022         	call	_setMotorPWM	;wreg free
  9629   004D3A                     
  9630                           ;dc_motor.c: 157:         setMotorPWM(mR);
  9631   004D3A  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  9632   004D3E  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  9633   004D42  EC84  F022         	call	_setMotorPWM	;wreg free
  9634   004D46                     
  9635                           ;dc_motor.c: 159:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9636   004D46  0E02               	movlw	2
  9637   004D48  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  9638   004D4A  0EA0               	movlw	160
  9639   004D4C  6E18               	movwf	??_fullSpeedAhead^0,c
  9640   004D4E  0E92               	movlw	146
  9641   004D50                     u5907:
  9642   004D50  2EE8               	decfsz	wreg,f,c
  9643   004D52  D7FE               	bra	u5907
  9644   004D54  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  9645   004D56  D7FC               	bra	u5907
  9646   004D58  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  9647   004D5A  D7FA               	bra	u5907
  9648   004D5C  D000               	nop2	
  9649   004D5E                     l4514:
  9650   004D5E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9651   004D62  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9652   004D66  0E1E               	movlw	30
  9653   004D68  60DF               	cpfslt	indf2,c
  9654   004D6A  EFB9  F026         	goto	u4401
  9655   004D6E  EFBB  F026         	goto	u4400
  9656   004D72                     u4401:
  9657   004D72  EFC7  F026         	goto	l515
  9658   004D76                     u4400:
  9659   004D76  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9660   004D7A  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9661   004D7E  0E1D               	movlw	29
  9662   004D80  64DF               	cpfsgt	indf2,c
  9663   004D82  EFC5  F026         	goto	u4411
  9664   004D86  EFC7  F026         	goto	u4410
  9665   004D8A                     u4411:
  9666   004D8A  EF8B  F026         	goto	l4506
  9667   004D8E                     u4410:
  9668   004D8E                     l515:
  9669   004D8E  0012               	return		;funcret
  9670   004D90                     __end_of_fullSpeedAhead:
  9671                           	callstack 0
  9672                           
  9673 ;; *************** function _PinkMove *****************
  9674 ;; Defined at:
  9675 ;;		line 268 in file "dc_motor.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9678 ;;		 -> motorL(9), 
  9679 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9680 ;;		 -> motorR(9), 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  1    wreg      void 
  9685 ;; Registers used:
  9686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9696 ;;Total ram usage:        4 bytes
  9697 ;; Hardware stack levels used: 1
  9698 ;; Hardware stack levels required when called: 5
  9699 ;; This function calls:
  9700 ;;		_reverseDetect
  9701 ;;		_reverseOneBlock
  9702 ;;		_turnLeft45
  9703 ;; This function is called by:
  9704 ;;		_main
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text54
  9709   0056CE                     __ptext54:
  9710                           	callstack 0
  9711   0056CE                     _PinkMove:
  9712                           	callstack 25
  9713   0056CE                     
  9714                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  9715   0056CE  0E7B               	movlw	low _motorL
  9716   0056D0  6E1A               	movwf	reverseDetect@mL^0,c
  9717   0056D2  0E01               	movlw	high _motorL
  9718   0056D4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9719   0056D6  0E72               	movlw	low _motorR
  9720   0056D8  6E1C               	movwf	reverseDetect@mR^0,c
  9721   0056DA  0E01               	movlw	high _motorR
  9722   0056DC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9723   0056DE  ECEA  F029         	call	_reverseDetect	;wreg free
  9724                           
  9725                           ;dc_motor.c: 271:     reverseOneBlock(&motorL, &motorR);
  9726   0056E2  0E7B               	movlw	low _motorL
  9727   0056E4  6E1A               	movwf	reverseOneBlock@mL^0,c
  9728   0056E6  0E01               	movlw	high _motorL
  9729   0056E8  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9730   0056EA  0E72               	movlw	low _motorR
  9731   0056EC  6E1C               	movwf	reverseOneBlock@mR^0,c
  9732   0056EE  0E01               	movlw	high _motorR
  9733   0056F0  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9734   0056F2  ECBD  F029         	call	_reverseOneBlock	;wreg free
  9735                           
  9736                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9737   0056F6  0E7B               	movlw	low _motorL
  9738   0056F8  6E1A               	movwf	turnLeft45@mL^0,c
  9739   0056FA  0E01               	movlw	high _motorL
  9740   0056FC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9741   0056FE  0E72               	movlw	low _motorR
  9742   005700  6E1C               	movwf	turnLeft45@mR^0,c
  9743   005702  0E01               	movlw	high _motorR
  9744   005704  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9745   005706  EC43  F02A         	call	_turnLeft45	;wreg free
  9746                           
  9747                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9748   00570A  0E7B               	movlw	low _motorL
  9749   00570C  6E1A               	movwf	turnLeft45@mL^0,c
  9750   00570E  0E01               	movlw	high _motorL
  9751   005710  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9752   005712  0E72               	movlw	low _motorR
  9753   005714  6E1C               	movwf	turnLeft45@mR^0,c
  9754   005716  0E01               	movlw	high _motorR
  9755   005718  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9756   00571A  EC43  F02A         	call	_turnLeft45	;wreg free
  9757   00571E  0012               	return		;funcret
  9758   005720                     __end_of_PinkMove:
  9759                           	callstack 0
  9760                           
  9761 ;; *************** function _turnLeft45 *****************
  9762 ;; Defined at:
  9763 ;;		line 188 in file "dc_motor.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9766 ;;		 -> motorL(9), 
  9767 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9768 ;;		 -> motorR(9), 
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;		None
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  1    wreg      void 
  9773 ;; Registers used:
  9774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9784 ;;Total ram usage:        6 bytes
  9785 ;; Hardware stack levels used: 1
  9786 ;; Hardware stack levels required when called: 4
  9787 ;; This function calls:
  9788 ;;		_stop
  9789 ;;		_turnLeft
  9790 ;; This function is called by:
  9791 ;;		_GreenMove
  9792 ;;		_PinkMove
  9793 ;;		_LightBlueMove
  9794 ;;		_ReverseYellow
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text55
  9799   005486                     __ptext55:
  9800                           	callstack 0
  9801   005486                     _turnLeft45:
  9802                           	callstack 24
  9803   005486                     
  9804                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  9805   005486  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  9806   00548A  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  9807   00548E  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  9808   005492  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  9809   005496  ECC8  F026         	call	_turnLeft	;wreg free
  9810   00549A                     
  9811                           ;dc_motor.c: 190:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  9812   00549A  0E12               	movlw	18
  9813   00549C  6E1F               	movwf	(??_turnLeft45+1)^0,c
  9814   00549E  0EDC               	movlw	220
  9815   0054A0  6E1E               	movwf	??_turnLeft45^0,c
  9816   0054A2  0E60               	movlw	96
  9817   0054A4                     u5917:
  9818   0054A4  2EE8               	decfsz	wreg,f,c
  9819   0054A6  D7FE               	bra	u5917
  9820   0054A8  2E1E               	decfsz	??_turnLeft45^0,f,c
  9821   0054AA  D7FC               	bra	u5917
  9822   0054AC  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  9823   0054AE  D7FA               	bra	u5917
  9824   0054B0                     
  9825                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  9826   0054B0  0E7B               	movlw	low _motorL
  9827   0054B2  6E14               	movwf	stop@mL^0,c
  9828   0054B4  0E01               	movlw	high _motorL
  9829   0054B6  6E15               	movwf	(stop@mL+1)^0,c
  9830   0054B8  0E72               	movlw	low _motorR
  9831   0054BA  6E16               	movwf	stop@mR^0,c
  9832   0054BC  0E01               	movlw	high _motorR
  9833   0054BE  6E17               	movwf	(stop@mR+1)^0,c
  9834   0054C0  ECEB  F027         	call	_stop	;wreg free
  9835                           
  9836                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9837   0054C4  0E52               	movlw	82
  9838   0054C6  6E1F               	movwf	(??_turnLeft45+1)^0,c
  9839   0054C8  0E2B               	movlw	43
  9840   0054CA  6E1E               	movwf	??_turnLeft45^0,c
  9841   0054CC  0E00               	movlw	0
  9842   0054CE                     u5927:
  9843   0054CE  2EE8               	decfsz	wreg,f,c
  9844   0054D0  D7FE               	bra	u5927
  9845   0054D2  2E1E               	decfsz	??_turnLeft45^0,f,c
  9846   0054D4  D7FC               	bra	u5927
  9847   0054D6  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  9848   0054D8  D7FA               	bra	u5927
  9849   0054DA  D000               	nop2	
  9850   0054DC  0012               	return		;funcret
  9851   0054DE                     __end_of_turnLeft45:
  9852                           	callstack 0
  9853                           
  9854 ;; *************** function _turnLeft *****************
  9855 ;; Defined at:
  9856 ;;		line 110 in file "dc_motor.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9859 ;;		 -> motorL(9), 
  9860 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9861 ;;		 -> motorR(9), 
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9876 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9877 ;;Total ram usage:        6 bytes
  9878 ;; Hardware stack levels used: 1
  9879 ;; Hardware stack levels required when called: 3
  9880 ;; This function calls:
  9881 ;;		_setMotorPWM
  9882 ;; This function is called by:
  9883 ;;		_turnLeft45
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text56
  9888   004D90                     __ptext56:
  9889                           	callstack 0
  9890   004D90                     _turnLeft:
  9891                           	callstack 24
  9892   004D90                     
  9893                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  9894   004D90  EE20 F001          	lfsr	2,1
  9895   004D94  5014               	movf	turnLeft@mL^0,w,c
  9896   004D96  26D9               	addwf	fsr2l,f,c
  9897   004D98  5015               	movf	(turnLeft@mL+1)^0,w,c
  9898   004D9A  22DA               	addwfc	fsr2h,f,c
  9899   004D9C  0E00               	movlw	0
  9900   004D9E  6EDF               	movwf	indf2,c
  9901                           
  9902                           ;dc_motor.c: 113:     mR->direction =1;
  9903   004DA0  EE20 F001          	lfsr	2,1
  9904   004DA4  5016               	movf	turnLeft@mR^0,w,c
  9905   004DA6  26D9               	addwf	fsr2l,f,c
  9906   004DA8  5017               	movf	(turnLeft@mR+1)^0,w,c
  9907   004DAA  22DA               	addwfc	fsr2h,f,c
  9908   004DAC  0E01               	movlw	1
  9909   004DAE  6EDF               	movwf	indf2,c
  9910                           
  9911                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  9912   004DB0  EFFE  F026         	goto	l4486
  9913   004DB4                     l4478:
  9914                           
  9915                           ;dc_motor.c: 117:         mL->power+=10;
  9916   004DB4  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9917   004DB8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9918   004DBC  0E0A               	movlw	10
  9919   004DBE  26DF               	addwf	indf2,f,c
  9920                           
  9921                           ;dc_motor.c: 118:         mR->power+=10;
  9922   004DC0  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9923   004DC4  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9924   004DC8  0E0A               	movlw	10
  9925   004DCA  26DF               	addwf	indf2,f,c
  9926   004DCC                     
  9927                           ;dc_motor.c: 120:         setMotorPWM(mL);
  9928   004DCC  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9929   004DD0  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9930   004DD4  EC84  F022         	call	_setMotorPWM	;wreg free
  9931   004DD8                     
  9932                           ;dc_motor.c: 121:         setMotorPWM(mR);
  9933   004DD8  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9934   004DDC  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9935   004DE0  EC84  F022         	call	_setMotorPWM	;wreg free
  9936   004DE4                     
  9937                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9938   004DE4  0E02               	movlw	2
  9939   004DE6  6E19               	movwf	(??_turnLeft+1)^0,c
  9940   004DE8  0EA0               	movlw	160
  9941   004DEA  6E18               	movwf	??_turnLeft^0,c
  9942   004DEC  0E92               	movlw	146
  9943   004DEE                     u5937:
  9944   004DEE  2EE8               	decfsz	wreg,f,c
  9945   004DF0  D7FE               	bra	u5937
  9946   004DF2  2E18               	decfsz	??_turnLeft^0,f,c
  9947   004DF4  D7FC               	bra	u5937
  9948   004DF6  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  9949   004DF8  D7FA               	bra	u5937
  9950   004DFA  D000               	nop2	
  9951   004DFC                     l4486:
  9952   004DFC  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9953   004E00  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9954   004E04  0E1E               	movlw	30
  9955   004E06  60DF               	cpfslt	indf2,c
  9956   004E08  EF08  F027         	goto	u4361
  9957   004E0C  EF0A  F027         	goto	u4360
  9958   004E10                     u4361:
  9959   004E10  EF16  F027         	goto	l499
  9960   004E14                     u4360:
  9961   004E14  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9962   004E18  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9963   004E1C  0E1D               	movlw	29
  9964   004E1E  64DF               	cpfsgt	indf2,c
  9965   004E20  EF14  F027         	goto	u4371
  9966   004E24  EF16  F027         	goto	u4370
  9967   004E28                     u4371:
  9968   004E28  EFDA  F026         	goto	l4478
  9969   004E2C                     u4370:
  9970   004E2C                     l499:
  9971   004E2C  0012               	return		;funcret
  9972   004E2E                     __end_of_turnLeft:
  9973                           	callstack 0
  9974                           
  9975 ;; *************** function _reverseOneBlock *****************
  9976 ;; Defined at:
  9977 ;;		line 202 in file "dc_motor.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9980 ;;		 -> motorL(9), 
  9981 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9982 ;;		 -> motorR(9), 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  1    wreg      void 
  9987 ;; Registers used:
  9988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9997 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9998 ;;Total ram usage:        6 bytes
  9999 ;; Hardware stack levels used: 1
 10000 ;; Hardware stack levels required when called: 4
 10001 ;; This function calls:
 10002 ;;		_fullSpeedBack
 10003 ;;		_stop
 10004 ;; This function is called by:
 10005 ;;		_YellowMove
 10006 ;;		_PinkMove
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           	psect	text57
 10011   00537A                     __ptext57:
 10012                           	callstack 0
 10013   00537A                     _reverseOneBlock:
 10014                           	callstack 25
 10015   00537A                     
 10016                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
 10017   00537A  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10018   00537E  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10019   005382  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10020   005386  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10021   00538A  EC17  F027         	call	_fullSpeedBack	;wreg free
 10022   00538E                     
 10023                           ;dc_motor.c: 204:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10024   00538E  0EA3               	movlw	163
 10025   005390  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10026   005392  0E57               	movlw	87
 10027   005394  6E1E               	movwf	??_reverseOneBlock^0,c
 10028   005396  0E02               	movlw	2
 10029   005398                     u5947:
 10030   005398  2EE8               	decfsz	wreg,f,c
 10031   00539A  D7FE               	bra	u5947
 10032   00539C  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10033   00539E  D7FC               	bra	u5947
 10034   0053A0  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10035   0053A2  D7FA               	bra	u5947
 10036   0053A4  D000               	nop2	
 10037   0053A6                     
 10038                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
 10039   0053A6  0E7B               	movlw	low _motorL
 10040   0053A8  6E14               	movwf	stop@mL^0,c
 10041   0053AA  0E01               	movlw	high _motorL
 10042   0053AC  6E15               	movwf	(stop@mL+1)^0,c
 10043   0053AE  0E72               	movlw	low _motorR
 10044   0053B0  6E16               	movwf	stop@mR^0,c
 10045   0053B2  0E01               	movlw	high _motorR
 10046   0053B4  6E17               	movwf	(stop@mR+1)^0,c
 10047   0053B6  ECEB  F027         	call	_stop	;wreg free
 10048                           
 10049                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10050   0053BA  0E52               	movlw	82
 10051   0053BC  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10052   0053BE  0E2B               	movlw	43
 10053   0053C0  6E1E               	movwf	??_reverseOneBlock^0,c
 10054   0053C2  0E00               	movlw	0
 10055   0053C4                     u5957:
 10056   0053C4  2EE8               	decfsz	wreg,f,c
 10057   0053C6  D7FE               	bra	u5957
 10058   0053C8  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10059   0053CA  D7FC               	bra	u5957
 10060   0053CC  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10061   0053CE  D7FA               	bra	u5957
 10062   0053D0  D000               	nop2	
 10063   0053D2  0012               	return		;funcret
 10064   0053D4                     __end_of_reverseOneBlock:
 10065                           	callstack 0
 10066                           
 10067 ;; *************** function _reverseDetect *****************
 10068 ;; Defined at:
 10069 ;;		line 195 in file "dc_motor.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10072 ;;		 -> motorL(9), 
 10073 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10074 ;;		 -> motorR(9), 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;		None
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;Total ram usage:        6 bytes
 10091 ;; Hardware stack levels used: 1
 10092 ;; Hardware stack levels required when called: 4
 10093 ;; This function calls:
 10094 ;;		_fullSpeedBack
 10095 ;;		_stop
 10096 ;; This function is called by:
 10097 ;;		_RedMove
 10098 ;;		_GreenMove
 10099 ;;		_BlueMove
 10100 ;;		_YellowMove
 10101 ;;		_PinkMove
 10102 ;;		_OrangeMove
 10103 ;;		_LightBlueMove
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text58
 10108   0053D4                     __ptext58:
 10109                           	callstack 0
 10110   0053D4                     _reverseDetect:
 10111                           	callstack 24
 10112   0053D4                     
 10113                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
 10114   0053D4  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10115   0053D8  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10116   0053DC  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10117   0053E0  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10118   0053E4  EC17  F027         	call	_fullSpeedBack	;wreg free
 10119   0053E8                     
 10120                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10121   0053E8  0E11               	movlw	17
 10122   0053EA  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10123   0053EC  0E3C               	movlw	60
 10124   0053EE  6E1E               	movwf	??_reverseDetect^0,c
 10125   0053F0  0ECB               	movlw	203
 10126   0053F2                     u5967:
 10127   0053F2  2EE8               	decfsz	wreg,f,c
 10128   0053F4  D7FE               	bra	u5967
 10129   0053F6  2E1E               	decfsz	??_reverseDetect^0,f,c
 10130   0053F8  D7FC               	bra	u5967
 10131   0053FA  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10132   0053FC  D7FA               	bra	u5967
 10133   0053FE  F000               	nop	
 10134   005400                     
 10135                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
 10136   005400  0E7B               	movlw	low _motorL
 10137   005402  6E14               	movwf	stop@mL^0,c
 10138   005404  0E01               	movlw	high _motorL
 10139   005406  6E15               	movwf	(stop@mL+1)^0,c
 10140   005408  0E72               	movlw	low _motorR
 10141   00540A  6E16               	movwf	stop@mR^0,c
 10142   00540C  0E01               	movlw	high _motorR
 10143   00540E  6E17               	movwf	(stop@mR+1)^0,c
 10144   005410  ECEB  F027         	call	_stop	;wreg free
 10145                           
 10146                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10147   005414  0E52               	movlw	82
 10148   005416  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10149   005418  0E2B               	movlw	43
 10150   00541A  6E1E               	movwf	??_reverseDetect^0,c
 10151   00541C  0E00               	movlw	0
 10152   00541E                     u5977:
 10153   00541E  2EE8               	decfsz	wreg,f,c
 10154   005420  D7FE               	bra	u5977
 10155   005422  2E1E               	decfsz	??_reverseDetect^0,f,c
 10156   005424  D7FC               	bra	u5977
 10157   005426  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10158   005428  D7FA               	bra	u5977
 10159   00542A  D000               	nop2	
 10160   00542C  0012               	return		;funcret
 10161   00542E                     __end_of_reverseDetect:
 10162                           	callstack 0
 10163                           
 10164 ;; *************** function _stop *****************
 10165 ;; Defined at:
 10166 ;;		line 92 in file "dc_motor.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10169 ;;		 -> motorL(9), 
 10170 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10171 ;;		 -> motorR(9), 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;		None
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      void 
 10176 ;; Registers used:
 10177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10187 ;;Total ram usage:        6 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; Hardware stack levels required when called: 3
 10190 ;; This function calls:
 10191 ;;		_setMotorPWM
 10192 ;; This function is called by:
 10193 ;;		_main
 10194 ;;		_turnRight45
 10195 ;;		_turnLeft45
 10196 ;;		_reverseDetect
 10197 ;;		_reverseOneBlock
 10198 ;;		_ForwardOneBlock
 10199 ;;		_Forwardhalfblock
 10200 ;;		_RetryMove
 10201 ;;		_Backhalfblock
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text59
 10206   004FD6                     __ptext59:
 10207                           	callstack 0
 10208   004FD6                     _stop:
 10209                           	callstack 26
 10210   004FD6                     
 10211                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
 10212   004FD6  EF11  F028         	goto	l4472
 10213   004FDA                     l4464:
 10214                           
 10215                           ;dc_motor.c: 96:         mL->power-=10;
 10216   004FDA  C014  FFD9         	movff	stop@mL,fsr2l
 10217   004FDE  C015  FFDA         	movff	stop@mL+1,fsr2h
 10218   004FE2  0E0A               	movlw	10
 10219   004FE4  5EDF               	subwf	indf2,f,c
 10220                           
 10221                           ;dc_motor.c: 97:         mR->power-=10;
 10222   004FE6  C016  FFD9         	movff	stop@mR,fsr2l
 10223   004FEA  C017  FFDA         	movff	stop@mR+1,fsr2h
 10224   004FEE  0E0A               	movlw	10
 10225   004FF0  5EDF               	subwf	indf2,f,c
 10226   004FF2                     
 10227                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10228   004FF2  C014  F00E         	movff	stop@mL,setMotorPWM@m
 10229   004FF6  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 10230   004FFA  EC84  F022         	call	_setMotorPWM	;wreg free
 10231   004FFE                     
 10232                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10233   004FFE  C016  F00E         	movff	stop@mR,setMotorPWM@m
 10234   005002  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 10235   005006  EC84  F022         	call	_setMotorPWM	;wreg free
 10236   00500A                     
 10237                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10238   00500A  0E02               	movlw	2
 10239   00500C  6E19               	movwf	(??_stop+1)^0,c
 10240   00500E  0EA0               	movlw	160
 10241   005010  6E18               	movwf	??_stop^0,c
 10242   005012  0E92               	movlw	146
 10243   005014                     u5987:
 10244   005014  2EE8               	decfsz	wreg,f,c
 10245   005016  D7FE               	bra	u5987
 10246   005018  2E18               	decfsz	??_stop^0,f,c
 10247   00501A  D7FC               	bra	u5987
 10248   00501C  2E19               	decfsz	(??_stop+1)^0,f,c
 10249   00501E  D7FA               	bra	u5987
 10250   005020  D000               	nop2	
 10251   005022                     l4472:
 10252                           
 10253                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
 10254   005022  C014  FFD9         	movff	stop@mL,fsr2l
 10255   005026  C015  FFDA         	movff	stop@mL+1,fsr2h
 10256   00502A  50DF               	movf	indf2,w,c
 10257   00502C  A4D8               	btfss	status,2,c
 10258   00502E  EF1B  F028         	goto	u4341
 10259   005032  EF1D  F028         	goto	u4340
 10260   005036                     u4341:
 10261   005036  EFED  F027         	goto	l4464
 10262   00503A                     u4340:
 10263   00503A  C016  FFD9         	movff	stop@mR,fsr2l
 10264   00503E  C017  FFDA         	movff	stop@mR+1,fsr2h
 10265   005042  50DF               	movf	indf2,w,c
 10266   005044  A4D8               	btfss	status,2,c
 10267   005046  EF27  F028         	goto	u4351
 10268   00504A  EF29  F028         	goto	u4350
 10269   00504E                     u4351:
 10270   00504E  EFED  F027         	goto	l4464
 10271   005052                     u4350:
 10272   005052  0012               	return		;funcret
 10273   005054                     __end_of_stop:
 10274                           	callstack 0
 10275                           
 10276 ;; *************** function _fullSpeedBack *****************
 10277 ;; Defined at:
 10278 ;;		line 164 in file "dc_motor.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10281 ;;		 -> motorL(9), 
 10282 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10283 ;;		 -> motorR(9), 
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;		None
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  1    wreg      void 
 10288 ;; Registers used:
 10289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10298 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10299 ;;Total ram usage:        6 bytes
 10300 ;; Hardware stack levels used: 1
 10301 ;; Hardware stack levels required when called: 3
 10302 ;; This function calls:
 10303 ;;		_setMotorPWM
 10304 ;; This function is called by:
 10305 ;;		_reverseDetect
 10306 ;;		_reverseOneBlock
 10307 ;;		_RetryMove
 10308 ;;		_Backhalfblock
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312                           	psect	text60
 10313   004E2E                     __ptext60:
 10314                           	callstack 0
 10315   004E2E                     _fullSpeedBack:
 10316                           	callstack 24
 10317   004E2E                     
 10318                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
 10319   004E2E  EE20 F001          	lfsr	2,1
 10320   004E32  5014               	movf	fullSpeedBack@mL^0,w,c
 10321   004E34  26D9               	addwf	fsr2l,f,c
 10322   004E36  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10323   004E38  22DA               	addwfc	fsr2h,f,c
 10324   004E3A  0E00               	movlw	0
 10325   004E3C  6EDF               	movwf	indf2,c
 10326                           
 10327                           ;dc_motor.c: 168:     mR->direction =0;
 10328   004E3E  EE20 F001          	lfsr	2,1
 10329   004E42  5016               	movf	fullSpeedBack@mR^0,w,c
 10330   004E44  26D9               	addwf	fsr2l,f,c
 10331   004E46  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10332   004E48  22DA               	addwfc	fsr2h,f,c
 10333   004E4A  0E00               	movlw	0
 10334   004E4C  6EDF               	movwf	indf2,c
 10335                           
 10336                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
 10337   004E4E  EF4D  F027         	goto	l4528
 10338   004E52                     l4520:
 10339                           
 10340                           ;dc_motor.c: 171:         mL->power+=10;
 10341   004E52  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10342   004E56  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10343   004E5A  0E0A               	movlw	10
 10344   004E5C  26DF               	addwf	indf2,f,c
 10345                           
 10346                           ;dc_motor.c: 172:         mR->power+=10;
 10347   004E5E  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10348   004E62  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10349   004E66  0E0A               	movlw	10
 10350   004E68  26DF               	addwf	indf2,f,c
 10351   004E6A                     
 10352                           ;dc_motor.c: 174:         setMotorPWM(mL);
 10353   004E6A  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10354   004E6E  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10355   004E72  EC84  F022         	call	_setMotorPWM	;wreg free
 10356   004E76                     
 10357                           ;dc_motor.c: 175:         setMotorPWM(mR);
 10358   004E76  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10359   004E7A  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10360   004E7E  EC84  F022         	call	_setMotorPWM	;wreg free
 10361   004E82                     
 10362                           ;dc_motor.c: 177:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10363   004E82  0E02               	movlw	2
 10364   004E84  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10365   004E86  0EA0               	movlw	160
 10366   004E88  6E18               	movwf	??_fullSpeedBack^0,c
 10367   004E8A  0E92               	movlw	146
 10368   004E8C                     u5997:
 10369   004E8C  2EE8               	decfsz	wreg,f,c
 10370   004E8E  D7FE               	bra	u5997
 10371   004E90  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10372   004E92  D7FC               	bra	u5997
 10373   004E94  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10374   004E96  D7FA               	bra	u5997
 10375   004E98  D000               	nop2	
 10376   004E9A                     l4528:
 10377   004E9A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10378   004E9E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10379   004EA2  0E1E               	movlw	30
 10380   004EA4  60DF               	cpfslt	indf2,c
 10381   004EA6  EF57  F027         	goto	u4421
 10382   004EAA  EF59  F027         	goto	u4420
 10383   004EAE                     u4421:
 10384   004EAE  EF65  F027         	goto	l523
 10385   004EB2                     u4420:
 10386   004EB2  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10387   004EB6  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10388   004EBA  0E1D               	movlw	29
 10389   004EBC  64DF               	cpfsgt	indf2,c
 10390   004EBE  EF63  F027         	goto	u4431
 10391   004EC2  EF65  F027         	goto	u4430
 10392   004EC6                     u4431:
 10393   004EC6  EF29  F027         	goto	l4520
 10394   004ECA                     u4430:
 10395   004ECA                     l523:
 10396   004ECA  0012               	return		;funcret
 10397   004ECC                     __end_of_fullSpeedBack:
 10398                           	callstack 0
 10399                           
 10400 ;; *************** function _setMotorPWM *****************
 10401 ;; Defined at:
 10402 ;;		line 67 in file "dc_motor.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  m               2   13[COMRAM] PTR struct DC_motor
 10405 ;;		 -> motorR(9), motorL(9), 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;  negDuty         1   18[COMRAM] unsigned char 
 10408 ;;  posDuty         1   17[COMRAM] unsigned char 
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10422 ;;Total ram usage:        6 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; Hardware stack levels required when called: 2
 10425 ;; This function calls:
 10426 ;;		___lwdiv
 10427 ;;		___wmul
 10428 ;; This function is called by:
 10429 ;;		_stop
 10430 ;;		_turnLeft
 10431 ;;		_turnRight
 10432 ;;		_fullSpeedAhead
 10433 ;;		_fullSpeedBack
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           	psect	text61
 10438   004508                     __ptext61:
 10439                           	callstack 0
 10440   004508                     _setMotorPWM:
 10441                           	callstack 26
 10442   004508                     
 10443                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
 10444   004508  EE20 F002          	lfsr	2,2
 10445   00450C  500E               	movf	setMotorPWM@m^0,w,c
 10446   00450E  26D9               	addwf	fsr2l,f,c
 10447   004510  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10448   004512  22DA               	addwfc	fsr2h,f,c
 10449   004514  50DF               	movf	indf2,w,c
 10450   004516  B4D8               	btfsc	status,2,c
 10451   004518  EF90  F022         	goto	u3361
 10452   00451C  EF92  F022         	goto	u3360
 10453   004520                     u3361:
 10454   004520  EFC6  F022         	goto	l3916
 10455   004524                     u3360:
 10456   004524                     
 10457                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 10458   004524  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10459   004528  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10460   00452C  50DF               	movf	indf2,w,c
 10461   00452E  6E10               	movwf	??_setMotorPWM^0,c
 10462   004530  5010               	movf	??_setMotorPWM^0,w,c
 10463   004532  6E01               	movwf	___wmul@multiplier^0,c
 10464   004534  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10465   004536  EE20 F003          	lfsr	2,3
 10466   00453A  500E               	movf	setMotorPWM@m^0,w,c
 10467   00453C  26D9               	addwf	fsr2l,f,c
 10468   00453E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10469   004540  22DA               	addwfc	fsr2h,f,c
 10470   004542  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10471   004546  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10472   00454A  ECD9  F02D         	call	___wmul	;wreg free
 10473   00454E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10474   004552  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10475   004556  0E00               	movlw	0
 10476   004558  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10477   00455A  0E64               	movlw	100
 10478   00455C  6E09               	movwf	___lwdiv@divisor^0,c
 10479   00455E  EC67  F028         	call	___lwdiv	;wreg free
 10480   004562  EE20 F003          	lfsr	2,3
 10481   004566  500E               	movf	setMotorPWM@m^0,w,c
 10482   004568  26D9               	addwf	fsr2l,f,c
 10483   00456A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10484   00456C  22DA               	addwfc	fsr2h,f,c
 10485   00456E  50DF               	movf	indf2,w,c
 10486   004570  6E11               	movwf	(??_setMotorPWM+1)^0,c
 10487   004572  5007               	movf	?___lwdiv^0,w,c
 10488   004574  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 10489   004576  6E12               	movwf	setMotorPWM@posDuty^0,c
 10490   004578                     
 10491                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
 10492   004578  EE20 F003          	lfsr	2,3
 10493   00457C  500E               	movf	setMotorPWM@m^0,w,c
 10494   00457E  26D9               	addwf	fsr2l,f,c
 10495   004580  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10496   004582  22DA               	addwfc	fsr2h,f,c
 10497   004584  50DF               	movf	indf2,w,c
 10498   004586  6E13               	movwf	setMotorPWM@negDuty^0,c
 10499                           
 10500                           ;dc_motor.c: 74:     }
 10501   004588  EFE9  F022         	goto	l3920
 10502   00458C                     l3916:
 10503                           
 10504                           ;dc_motor.c: 76:         posDuty=0;
 10505   00458C  0E00               	movlw	0
 10506   00458E  6E12               	movwf	setMotorPWM@posDuty^0,c
 10507   004590                     
 10508                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10509   004590  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10510   004594  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10511   004598  50DF               	movf	indf2,w,c
 10512   00459A  6E10               	movwf	??_setMotorPWM^0,c
 10513   00459C  5010               	movf	??_setMotorPWM^0,w,c
 10514   00459E  6E01               	movwf	___wmul@multiplier^0,c
 10515   0045A0  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10516   0045A2  EE20 F003          	lfsr	2,3
 10517   0045A6  500E               	movf	setMotorPWM@m^0,w,c
 10518   0045A8  26D9               	addwf	fsr2l,f,c
 10519   0045AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10520   0045AC  22DA               	addwfc	fsr2h,f,c
 10521   0045AE  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10522   0045B2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10523   0045B6  ECD9  F02D         	call	___wmul	;wreg free
 10524   0045BA  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10525   0045BE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10526   0045C2  0E00               	movlw	0
 10527   0045C4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10528   0045C6  0E64               	movlw	100
 10529   0045C8  6E09               	movwf	___lwdiv@divisor^0,c
 10530   0045CA  EC67  F028         	call	___lwdiv	;wreg free
 10531   0045CE  5007               	movf	?___lwdiv^0,w,c
 10532   0045D0  6E13               	movwf	setMotorPWM@negDuty^0,c
 10533   0045D2                     l3920:
 10534                           
 10535                           ;dc_motor.c: 80:     if (m->direction) {
 10536   0045D2  EE20 F001          	lfsr	2,1
 10537   0045D6  500E               	movf	setMotorPWM@m^0,w,c
 10538   0045D8  26D9               	addwf	fsr2l,f,c
 10539   0045DA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10540   0045DC  22DA               	addwfc	fsr2h,f,c
 10541   0045DE  50DF               	movf	indf2,w,c
 10542   0045E0  B4D8               	btfsc	status,2,c
 10543   0045E2  EFF5  F022         	goto	u3371
 10544   0045E6  EFF7  F022         	goto	u3370
 10545   0045EA                     u3371:
 10546   0045EA  EF19  F023         	goto	l3924
 10547   0045EE                     u3370:
 10548   0045EE                     
 10549                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 10550   0045EE  EE20 F005          	lfsr	2,5
 10551   0045F2  500E               	movf	setMotorPWM@m^0,w,c
 10552   0045F4  26D9               	addwf	fsr2l,f,c
 10553   0045F6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10554   0045F8  22DA               	addwfc	fsr2h,f,c
 10555   0045FA  CFDE F010          	movff	postinc2,??_setMotorPWM
 10556   0045FE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10557   004602  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10558   004606  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10559   00460A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10560                           
 10561                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 10562   00460E  EE20 F007          	lfsr	2,7
 10563   004612  500E               	movf	setMotorPWM@m^0,w,c
 10564   004614  26D9               	addwf	fsr2l,f,c
 10565   004616  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10566   004618  22DA               	addwfc	fsr2h,f,c
 10567   00461A  CFDE F010          	movff	postinc2,??_setMotorPWM
 10568   00461E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10569   004622  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10570   004626  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10571   00462A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10572                           
 10573                           ;dc_motor.c: 85:     } else {
 10574   00462E  EF39  F023         	goto	l485
 10575   004632                     l3924:
 10576                           
 10577                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 10578   004632  EE20 F005          	lfsr	2,5
 10579   004636  500E               	movf	setMotorPWM@m^0,w,c
 10580   004638  26D9               	addwf	fsr2l,f,c
 10581   00463A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10582   00463C  22DA               	addwfc	fsr2h,f,c
 10583   00463E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10584   004642  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10585   004646  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10586   00464A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10587   00464E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10588                           
 10589                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 10590   004652  EE20 F007          	lfsr	2,7
 10591   004656  500E               	movf	setMotorPWM@m^0,w,c
 10592   004658  26D9               	addwf	fsr2l,f,c
 10593   00465A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10594   00465C  22DA               	addwfc	fsr2h,f,c
 10595   00465E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10596   004662  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10597   004666  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10598   00466A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10599   00466E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10600   004672                     l485:
 10601   004672  0012               	return		;funcret
 10602   004674                     __end_of_setMotorPWM:
 10603                           	callstack 0
 10604                           
 10605 ;; *************** function ___wmul *****************
 10606 ;; Defined at:
 10607 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;  multiplier      2    0[COMRAM] unsigned int 
 10610 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;  product         2    4[COMRAM] unsigned int 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  2    0[COMRAM] unsigned int 
 10615 ;; Registers used:
 10616 ;;		wreg, status,2, status,0, prodl, prodh
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10625 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10626 ;;Total ram usage:        6 bytes
 10627 ;; Hardware stack levels used: 1
 10628 ;; Hardware stack levels required when called: 1
 10629 ;; This function calls:
 10630 ;;		Nothing
 10631 ;; This function is called by:
 10632 ;;		_setMotorPWM
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text62
 10637   005BB2                     __ptext62:
 10638                           	callstack 0
 10639   005BB2                     ___wmul:
 10640                           	callstack 26
 10641   005BB2  5001               	movf	___wmul@multiplier^0,w,c
 10642   005BB4  0203               	mulwf	___wmul@multiplicand^0,c
 10643   005BB6  CFF3 F005          	movff	prodl,___wmul@product
 10644   005BBA  CFF4 F006          	movff	prodh,___wmul@product+1
 10645   005BBE  5001               	movf	___wmul@multiplier^0,w,c
 10646   005BC0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10647   005BC2  50F3               	movf	243,w,c
 10648   005BC4  2606               	addwf	(___wmul@product+1)^0,f,c
 10649   005BC6  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10650   005BC8  0203               	mulwf	___wmul@multiplicand^0,c
 10651   005BCA  50F3               	movf	243,w,c
 10652   005BCC  2606               	addwf	(___wmul@product+1)^0,f,c
 10653   005BCE  C005  F001         	movff	___wmul@product,?___wmul
 10654   005BD2  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10655   005BD6  0012               	return		;funcret
 10656   005BD8                     __end_of___wmul:
 10657                           	callstack 0
 10658                           
 10659 ;; *************** function ___lwdiv *****************
 10660 ;; Defined at:
 10661 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;  dividend        2    6[COMRAM] unsigned int 
 10664 ;;  divisor         2    8[COMRAM] unsigned int 
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;  quotient        2   10[COMRAM] unsigned int 
 10667 ;;  counter         1   12[COMRAM] unsigned char 
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  2    6[COMRAM] unsigned int 
 10670 ;; Registers used:
 10671 ;;		wreg, status,2, status,0
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10678 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10680 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10681 ;;Total ram usage:        7 bytes
 10682 ;; Hardware stack levels used: 1
 10683 ;; Hardware stack levels required when called: 1
 10684 ;; This function calls:
 10685 ;;		Nothing
 10686 ;; This function is called by:
 10687 ;;		_setMotorPWM
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text63
 10692   0050CE                     __ptext63:
 10693                           	callstack 0
 10694   0050CE                     ___lwdiv:
 10695                           	callstack 26
 10696   0050CE  0E00               	movlw	0
 10697   0050D0  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10698   0050D2  0E00               	movlw	0
 10699   0050D4  6E0B               	movwf	___lwdiv@quotient^0,c
 10700   0050D6  5009               	movf	___lwdiv@divisor^0,w,c
 10701   0050D8  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10702   0050DA  B4D8               	btfsc	status,2,c
 10703   0050DC  EF72  F028         	goto	u3321
 10704   0050E0  EF74  F028         	goto	u3320
 10705   0050E4                     u3321:
 10706   0050E4  EF9C  F028         	goto	l1118
 10707   0050E8                     u3320:
 10708   0050E8  0E01               	movlw	1
 10709   0050EA  6E0D               	movwf	___lwdiv@counter^0,c
 10710   0050EC  EF7C  F028         	goto	l3888
 10711   0050F0                     l3886:
 10712   0050F0  90D8               	bcf	status,0,c
 10713   0050F2  3609               	rlcf	___lwdiv@divisor^0,f,c
 10714   0050F4  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10715   0050F6  2A0D               	incf	___lwdiv@counter^0,f,c
 10716   0050F8                     l3888:
 10717   0050F8  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10718   0050FA  EF81  F028         	goto	u3331
 10719   0050FE  EF83  F028         	goto	u3330
 10720   005102                     u3331:
 10721   005102  EF78  F028         	goto	l3886
 10722   005106                     u3330:
 10723   005106                     l3890:
 10724   005106  90D8               	bcf	status,0,c
 10725   005108  360B               	rlcf	___lwdiv@quotient^0,f,c
 10726   00510A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10727   00510C  5009               	movf	___lwdiv@divisor^0,w,c
 10728   00510E  5C07               	subwf	___lwdiv@dividend^0,w,c
 10729   005110  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10730   005112  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10731   005114  A0D8               	btfss	status,0,c
 10732   005116  EF8F  F028         	goto	u3341
 10733   00511A  EF91  F028         	goto	u3340
 10734   00511E                     u3341:
 10735   00511E  EF96  F028         	goto	l3898
 10736   005122                     u3340:
 10737   005122  5009               	movf	___lwdiv@divisor^0,w,c
 10738   005124  5E07               	subwf	___lwdiv@dividend^0,f,c
 10739   005126  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10740   005128  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10741   00512A  800B               	bsf	___lwdiv@quotient^0,0,c
 10742   00512C                     l3898:
 10743   00512C  90D8               	bcf	status,0,c
 10744   00512E  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10745   005130  3209               	rrcf	___lwdiv@divisor^0,f,c
 10746   005132  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10747   005134  EF83  F028         	goto	l3890
 10748   005138                     l1118:
 10749   005138  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10750   00513C  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10751   005140  0012               	return		;funcret
 10752   005142                     __end_of___lwdiv:
 10753                           	callstack 0
 10754                           
 10755 ;; *************** function _Interrupts_init *****************
 10756 ;; Defined at:
 10757 ;;		line 12 in file "interrupts.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;		None
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;		None
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  1    wreg      void 
 10764 ;; Registers used:
 10765 ;;		None
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10775 ;;Total ram usage:        0 bytes
 10776 ;; Hardware stack levels used: 1
 10777 ;; Hardware stack levels required when called: 1
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		_main
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text64
 10786   005C64                     __ptext64:
 10787                           	callstack 0
 10788   005C64                     _Interrupts_init:
 10789                           	callstack 29
 10790   005C64  0012               	return		;funcret
 10791   005C66                     __end_of_Interrupts_init:
 10792                           	callstack 0
 10793                           
 10794 ;; *************** function _Colour_decider *****************
 10795 ;; Defined at:
 10796 ;;		line 125 in file "color.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  vals            2   74[COMRAM] PTR struct RGB
 10799 ;;		 -> vals(8), 
 10800 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 10801 ;;		 -> rel(12), 
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;  RGB_col        12    6[BANK0 ] float [3]
 10804 ;;  Hue             4   28[BANK0 ] float 
 10805 ;;  Cmin            4   22[BANK0 ] float 
 10806 ;;  Cmax            4   18[BANK0 ] float 
 10807 ;;  i               2   26[BANK0 ] int 
 10808 ;;  Cmax_i          2    4[BANK0 ] int 
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  2   74[COMRAM] int 
 10811 ;; Registers used:
 10812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10819 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10821 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10822 ;;Total ram usage:       38 bytes
 10823 ;; Hardware stack levels used: 1
 10824 ;; Hardware stack levels required when called: 3
 10825 ;; This function calls:
 10826 ;;		___fladd
 10827 ;;		___fldiv
 10828 ;;		___fleq
 10829 ;;		___flge
 10830 ;;		___flmul
 10831 ;;		___flsub
 10832 ;;		___xxtofl
 10833 ;; This function is called by:
 10834 ;;		_main
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           	psect	text65
 10839   000E5A                     __ptext65:
 10840                           	callstack 0
 10841   000E5A                     _Colour_decider:
 10842                           	callstack 27
 10843   000E5A                     
 10844                           ;color.c: 126:     float Cmax = 0;
 10845   000E5A  0E00               	movlw	0
 10846   000E5C  0100               	movlb	0	; () banked
 10847   000E5E  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 10848   000E60  0E00               	movlw	0
 10849   000E62  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 10850   000E64  0E00               	movlw	0
 10851   000E66  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 10852   000E68  0E00               	movlw	0
 10853   000E6A  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 10854                           
 10855                           ;color.c: 127:     float Cmin= 100000;
 10856   000E6C  0E00               	movlw	0
 10857   000E6E  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 10858   000E70  0E50               	movlw	80
 10859   000E72  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 10860   000E74  0EC3               	movlw	195
 10861   000E76  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 10862   000E78  0E47               	movlw	71
 10863   000E7A  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 10864                           
 10865                           ;color.c: 128:     int Cmax_i =4;
 10866   000E7C  0E00               	movlw	0
 10867   000E7E  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 10868   000E80  0E04               	movlw	4
 10869   000E82  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 10870   000E84                     
 10871                           ; BSR set to: 0
 10872                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 10873   000E84  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 10874   000E88  0E0B               	movlw	11
 10875   000E8A                     u5041:
 10876   000E8A  6ADE               	clrf	postinc2,c
 10877   000E8C  06E8               	decf	wreg,f,c
 10878   000E8E  E2FD               	bc	u5041
 10879   000E90                     
 10880                           ; BSR set to: 0
 10881   000E90  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 10882   000E94  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 10883   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
 10884   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10885   000EA0  0E00               	movlw	0
 10886   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10887   000EA4  0EFF               	movlw	-1
 10888   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
 10889   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
 10890   000EAA  0E01               	movlw	1
 10891   000EAC  ECE6  F020         	call	___xxtofl
 10892   000EB0  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 10893   000EB4  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 10894   000EB8  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 10895   000EBC  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 10896   000EC0  EE20 F002          	lfsr	2,2
 10897   000EC4  504B               	movf	Colour_decider@vals^0,w,c
 10898   000EC6  26D9               	addwf	fsr2l,f,c
 10899   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
 10900   000ECA  22DA               	addwfc	fsr2h,f,c
 10901   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
 10902   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10903   000ED4  0E00               	movlw	0
 10904   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10905   000ED8  0EFF               	movlw	-1
 10906   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
 10907   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
 10908   000EDE  0E01               	movlw	1
 10909   000EE0  ECE6  F020         	call	___xxtofl
 10910   000EE4  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 10911   000EE8  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 10912   000EEC  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 10913   000EF0  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 10914   000EF4  EE20 F004          	lfsr	2,4
 10915   000EF8  504B               	movf	Colour_decider@vals^0,w,c
 10916   000EFA  26D9               	addwf	fsr2l,f,c
 10917   000EFC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 10918   000EFE  22DA               	addwfc	fsr2h,f,c
 10919   000F00  CFDE F001          	movff	postinc2,___xxtofl@val
 10920   000F04  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10921   000F08  0E00               	movlw	0
 10922   000F0A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10923   000F0C  0EFF               	movlw	-1
 10924   000F0E  6E03               	movwf	(___xxtofl@val+2)^0,c
 10925   000F10  6E04               	movwf	(___xxtofl@val+3)^0,c
 10926   000F12  0E01               	movlw	1
 10927   000F14  ECE6  F020         	call	___xxtofl
 10928   000F18  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 10929   000F1C  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 10930   000F20  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 10931   000F24  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 10932   000F28                     
 10933                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 10934   000F28  0E00               	movlw	0
 10935   000F2A  0100               	movlb	0	; () banked
 10936   000F2C  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 10937   000F2E  0E00               	movlw	0
 10938   000F30  6F7A               	movwf	Colour_decider@i& (0+255),b
 10939   000F32                     l5130:
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 10943   000F32  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 10944   000F36  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 10945   000F3A  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 10946   000F3E  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 10947   000F42  0E66               	movlw	low Colour_decider@RGB_col
 10948   000F44  6E4F               	movwf	??_Colour_decider^0,c
 10949   000F46  0E00               	movlw	high Colour_decider@RGB_col
 10950   000F48  6E50               	movwf	(??_Colour_decider+1)^0,c
 10951   000F4A  90D8               	bcf	status,0,c
 10952   000F4C  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10953   000F4E  6ED9               	movwf	fsr2l,c
 10954   000F50  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10955   000F52  6EDA               	movwf	fsr2h,c
 10956   000F54  90D8               	bcf	status,0,c
 10957   000F56  36D9               	rlcf	fsr2l,f,c
 10958   000F58  36DA               	rlcf	fsr2h,f,c
 10959   000F5A  504F               	movf	??_Colour_decider^0,w,c
 10960   000F5C  26D9               	addwf	fsr2l,f,c
 10961   000F5E  5050               	movf	(??_Colour_decider+1)^0,w,c
 10962   000F60  22DA               	addwfc	fsr2h,f,c
 10963   000F62  CFDE F02E          	movff	postinc2,___flge@ff2
 10964   000F66  CFDE F02F          	movff	postinc2,___flge@ff2+1
 10965   000F6A  CFDE F030          	movff	postinc2,___flge@ff2+2
 10966   000F6E  CFDE F031          	movff	postinc2,___flge@ff2+3
 10967   000F72  EC6F  F024         	call	___flge	;wreg free
 10968   000F76  B0D8               	btfsc	status,0,c
 10969   000F78  EFC0  F007         	goto	u5051
 10970   000F7C  EFC2  F007         	goto	u5050
 10971   000F80                     u5051:
 10972   000F80  EFDF  F007         	goto	l5136
 10973   000F84                     u5050:
 10974   000F84                     
 10975                           ;color.c: 137:             Cmax=RGB_col[i];
 10976   000F84  0E66               	movlw	low Colour_decider@RGB_col
 10977   000F86  6E4F               	movwf	??_Colour_decider^0,c
 10978   000F88  0E00               	movlw	high Colour_decider@RGB_col
 10979   000F8A  6E50               	movwf	(??_Colour_decider+1)^0,c
 10980   000F8C  90D8               	bcf	status,0,c
 10981   000F8E  0100               	movlb	0	; () banked
 10982   000F90  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10983   000F92  6ED9               	movwf	fsr2l,c
 10984   000F94  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10985   000F96  6EDA               	movwf	fsr2h,c
 10986   000F98  90D8               	bcf	status,0,c
 10987   000F9A  36D9               	rlcf	fsr2l,f,c
 10988   000F9C  36DA               	rlcf	fsr2h,f,c
 10989   000F9E  504F               	movf	??_Colour_decider^0,w,c
 10990   000FA0  26D9               	addwf	fsr2l,f,c
 10991   000FA2  5050               	movf	(??_Colour_decider+1)^0,w,c
 10992   000FA4  22DA               	addwfc	fsr2h,f,c
 10993   000FA6  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 10994   000FAA  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 10995   000FAE  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 10996   000FB2  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 10997   000FB6                     
 10998                           ; BSR set to: 0
 10999                           ;color.c: 138:             Cmax_i=i;
 11000   000FB6  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 11001   000FBA  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 11002   000FBE                     l5136:
 11003                           
 11004                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 11005   000FBE  0E66               	movlw	low Colour_decider@RGB_col
 11006   000FC0  6E4F               	movwf	??_Colour_decider^0,c
 11007   000FC2  0E00               	movlw	high Colour_decider@RGB_col
 11008   000FC4  6E50               	movwf	(??_Colour_decider+1)^0,c
 11009   000FC6  90D8               	bcf	status,0,c
 11010   000FC8  0100               	movlb	0	; () banked
 11011   000FCA  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11012   000FCC  6ED9               	movwf	fsr2l,c
 11013   000FCE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11014   000FD0  6EDA               	movwf	fsr2h,c
 11015   000FD2  90D8               	bcf	status,0,c
 11016   000FD4  36D9               	rlcf	fsr2l,f,c
 11017   000FD6  36DA               	rlcf	fsr2h,f,c
 11018   000FD8  504F               	movf	??_Colour_decider^0,w,c
 11019   000FDA  26D9               	addwf	fsr2l,f,c
 11020   000FDC  5050               	movf	(??_Colour_decider+1)^0,w,c
 11021   000FDE  22DA               	addwfc	fsr2h,f,c
 11022   000FE0  CFDE F02A          	movff	postinc2,___flge@ff1
 11023   000FE4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11024   000FE8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11025   000FEC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11026   000FF0  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 11027   000FF4  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 11028   000FF8  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 11029   000FFC  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 11030   001000  EC6F  F024         	call	___flge	;wreg free
 11031   001004  B0D8               	btfsc	status,0,c
 11032   001006  EF07  F008         	goto	u5061
 11033   00100A  EF09  F008         	goto	u5060
 11034   00100E                     u5061:
 11035   00100E  EF22  F008         	goto	l5140
 11036   001012                     u5060:
 11037   001012  0E66               	movlw	low Colour_decider@RGB_col
 11038   001014  6E4F               	movwf	??_Colour_decider^0,c
 11039   001016  0E00               	movlw	high Colour_decider@RGB_col
 11040   001018  6E50               	movwf	(??_Colour_decider+1)^0,c
 11041   00101A  90D8               	bcf	status,0,c
 11042   00101C  0100               	movlb	0	; () banked
 11043   00101E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11044   001020  6ED9               	movwf	fsr2l,c
 11045   001022  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11046   001024  6EDA               	movwf	fsr2h,c
 11047   001026  90D8               	bcf	status,0,c
 11048   001028  36D9               	rlcf	fsr2l,f,c
 11049   00102A  36DA               	rlcf	fsr2h,f,c
 11050   00102C  504F               	movf	??_Colour_decider^0,w,c
 11051   00102E  26D9               	addwf	fsr2l,f,c
 11052   001030  5050               	movf	(??_Colour_decider+1)^0,w,c
 11053   001032  22DA               	addwfc	fsr2h,f,c
 11054   001034  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 11055   001038  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 11056   00103C  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 11057   001040  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 11058   001044                     l5140:
 11059                           
 11060                           ;color.c: 141:     }
 11061   001044  0100               	movlb	0	; () banked
 11062   001046  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 11063   001048  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 11064   00104A                     
 11065                           ; BSR set to: 0
 11066   00104A  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 11067   00104C  EF31  F008         	goto	u5071
 11068   001050  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 11069   001052  E109               	bnz	u5070
 11070   001054  0E03               	movlw	3
 11071   001056  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 11072   001058  A0D8               	btfss	status,0,c
 11073   00105A  EF31  F008         	goto	u5071
 11074   00105E  EF33  F008         	goto	u5070
 11075   001062                     u5071:
 11076   001062  EF99  F007         	goto	l5130
 11077   001066                     u5070:
 11078   001066                     
 11079                           ; BSR set to: 0
 11080                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 11081   001066  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11082   00106A  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11083   00106E  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11084   001072  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11085   001076  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11086   00107A  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11087   00107E  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11088   001082  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11089   001086  EC58  F02C         	call	___flsub	;wreg free
 11090   00108A  C02A  F032         	movff	?___flsub,___fleq@ff1
 11091   00108E  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 11092   001092  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 11093   001096  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 11094   00109A  0E00               	movlw	0
 11095   00109C  6E36               	movwf	___fleq@ff2^0,c
 11096   00109E  0E00               	movlw	0
 11097   0010A0  6E37               	movwf	(___fleq@ff2+1)^0,c
 11098   0010A2  0E00               	movlw	0
 11099   0010A4  6E38               	movwf	(___fleq@ff2+2)^0,c
 11100   0010A6  0E00               	movlw	0
 11101   0010A8  6E39               	movwf	(___fleq@ff2+3)^0,c
 11102   0010AA  ECD5  F025         	call	___fleq	;wreg free
 11103   0010AE  A0D8               	btfss	status,0,c
 11104   0010B0  EF5C  F008         	goto	u5081
 11105   0010B4  EF5E  F008         	goto	u5080
 11106   0010B8                     u5081:
 11107   0010B8  EF64  F008         	goto	l5150
 11108   0010BC                     u5080:
 11109   0010BC                     l5146:
 11110   0010BC  0E00               	movlw	0
 11111   0010BE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11112   0010C0  0E00               	movlw	0
 11113   0010C2  6E4B               	movwf	?_Colour_decider^0,c
 11114   0010C4  EF9A  F00C         	goto	l76
 11115   0010C8                     l5150:
 11116                           
 11117                           ;color.c: 146:     if (Cmax_i==0){
 11118   0010C8  0100               	movlb	0	; () banked
 11119   0010CA  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 11120   0010CC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11121   0010CE  A4D8               	btfss	status,2,c
 11122   0010D0  EF6C  F008         	goto	u5091
 11123   0010D4  EF6E  F008         	goto	u5090
 11124   0010D8                     u5091:
 11125   0010D8  EFE2  F008         	goto	l5158
 11126   0010DC                     u5090:
 11127   0010DC                     
 11128                           ; BSR set to: 0
 11129                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 11130   0010DC  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11131   0010E0  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11132   0010E4  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11133   0010E8  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11134   0010EC  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11135   0010F0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11136   0010F4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11137   0010F8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11138   0010FC  EC58  F02C         	call	___flsub	;wreg free
 11139   001100  C02A  F036         	movff	?___flsub,___fldiv@a
 11140   001104  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11141   001108  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11142   00110C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11143   001110  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 11144   001114  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 11145   001118  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 11146   00111C  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 11147   001120  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 11148   001124  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 11149   001128  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 11150   00112C  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 11151   001130  EC58  F02C         	call	___flsub	;wreg free
 11152   001134  C02A  F032         	movff	?___flsub,___fldiv@b
 11153   001138  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11154   00113C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11155   001140  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11156   001144  ECCE  F018         	call	___fldiv	;wreg free
 11157   001148  C032  F011         	movff	?___fldiv,___flmul@b
 11158   00114C  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 11159   001150  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 11160   001154  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 11161   001158  0E00               	movlw	0
 11162   00115A  6E15               	movwf	___flmul@a^0,c
 11163   00115C  0E00               	movlw	0
 11164   00115E  6E16               	movwf	(___flmul@a+1)^0,c
 11165   001160  0E70               	movlw	112
 11166   001162  6E17               	movwf	(___flmul@a+2)^0,c
 11167   001164  0E42               	movlw	66
 11168   001166  6E18               	movwf	(___flmul@a+3)^0,c
 11169   001168  ECB9  F016         	call	___flmul	;wreg free
 11170   00116C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11171   001170  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11172   001174  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11173   001178  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11174   00117C                     
 11175                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 11176   00117C  0100               	movlb	0	; () banked
 11177   00117E  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 11178   001180  EFC6  F008         	goto	u5100
 11179   001184  EFC4  F008         	goto	u5101
 11180   001188                     u5101:
 11181   001188  EFC1  F009         	goto	l5168
 11182   00118C                     u5100:
 11183   00118C                     
 11184                           ; BSR set to: 0
 11185   00118C  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 11186   001190  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 11187   001194  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 11188   001198  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 11189   00119C  0E00               	movlw	0
 11190   00119E  6E05               	movwf	___fladd@a^0,c
 11191   0011A0  0E00               	movlw	0
 11192   0011A2  6E06               	movwf	(___fladd@a+1)^0,c
 11193   0011A4  0EB4               	movlw	180
 11194   0011A6  6E07               	movwf	(___fladd@a+2)^0,c
 11195   0011A8  0E43               	movlw	67
 11196   0011AA  6E08               	movwf	(___fladd@a+3)^0,c
 11197   0011AC  EC59  F014         	call	___fladd	;wreg free
 11198   0011B0  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 11199   0011B4  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 11200   0011B8  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 11201   0011BC  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 11202   0011C0  EFC1  F009         	goto	l5168
 11203   0011C4                     l5158:
 11204                           
 11205                           ; BSR set to: 0
 11206   0011C4  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 11207   0011C6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11208   0011C8  A4D8               	btfss	status,2,c
 11209   0011CA  EFE9  F008         	goto	u5111
 11210   0011CE  EFEB  F008         	goto	u5110
 11211   0011D2                     u5111:
 11212   0011D2  EF57  F009         	goto	l5164
 11213   0011D6                     u5110:
 11214   0011D6                     
 11215                           ; BSR set to: 0
 11216                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11217   0011D6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11218   0011DA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11219   0011DE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11220   0011E2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11221   0011E6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11222   0011EA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11223   0011EE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11224   0011F2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11225   0011F6  EC58  F02C         	call	___flsub	;wreg free
 11226   0011FA  C02A  F036         	movff	?___flsub,___fldiv@a
 11227   0011FE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11228   001202  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11229   001206  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11230   00120A  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 11231   00120E  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 11232   001212  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 11233   001216  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 11234   00121A  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 11235   00121E  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 11236   001222  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 11237   001226  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 11238   00122A  EC58  F02C         	call	___flsub	;wreg free
 11239   00122E  C02A  F032         	movff	?___flsub,___fldiv@b
 11240   001232  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11241   001236  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11242   00123A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11243   00123E  ECCE  F018         	call	___fldiv	;wreg free
 11244   001242  C032  F060         	movff	?___fldiv,_Colour_decider$2798
 11245   001246  C033  F061         	movff	?___fldiv+1,_Colour_decider$2798+1
 11246   00124A  C034  F062         	movff	?___fldiv+2,_Colour_decider$2798+2
 11247   00124E  C035  F063         	movff	?___fldiv+3,_Colour_decider$2798+3
 11248   001252                     
 11249                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11250   001252  0E00               	movlw	0
 11251   001254  6E05               	movwf	___fladd@a^0,c
 11252   001256  0E00               	movlw	0
 11253   001258  6E06               	movwf	(___fladd@a+1)^0,c
 11254   00125A  0E00               	movlw	0
 11255   00125C  6E07               	movwf	(___fladd@a+2)^0,c
 11256   00125E  0E40               	movlw	64
 11257   001260  6E08               	movwf	(___fladd@a+3)^0,c
 11258   001262  C060  F001         	movff	_Colour_decider$2798,___fladd@b
 11259   001266  C061  F002         	movff	_Colour_decider$2798+1,___fladd@b+1
 11260   00126A  C062  F003         	movff	_Colour_decider$2798+2,___fladd@b+2
 11261   00126E  C063  F004         	movff	_Colour_decider$2798+3,___fladd@b+3
 11262   001272  EC59  F014         	call	___fladd	;wreg free
 11263   001276  C001  F011         	movff	?___fladd,___flmul@b
 11264   00127A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11265   00127E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11266   001282  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11267   001286  0E00               	movlw	0
 11268   001288  6E15               	movwf	___flmul@a^0,c
 11269   00128A  0E00               	movlw	0
 11270   00128C  6E16               	movwf	(___flmul@a+1)^0,c
 11271   00128E  0E70               	movlw	112
 11272   001290  6E17               	movwf	(___flmul@a+2)^0,c
 11273   001292  0E42               	movlw	66
 11274   001294  6E18               	movwf	(___flmul@a+3)^0,c
 11275   001296  ECB9  F016         	call	___flmul	;wreg free
 11276   00129A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11277   00129E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11278   0012A2  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11279   0012A6  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11280                           
 11281                           ;color.c: 155:     }
 11282   0012AA  EFC1  F009         	goto	l5168
 11283   0012AE                     l5164:
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11287   0012AE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11288   0012B2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11289   0012B6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11290   0012BA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11291   0012BE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11292   0012C2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11293   0012C6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11294   0012CA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11295   0012CE  EC58  F02C         	call	___flsub	;wreg free
 11296   0012D2  C02A  F036         	movff	?___flsub,___fldiv@a
 11297   0012D6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11298   0012DA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11299   0012DE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11300   0012E2  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 11301   0012E6  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 11302   0012EA  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 11303   0012EE  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 11304   0012F2  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 11305   0012F6  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 11306   0012FA  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 11307   0012FE  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 11308   001302  EC58  F02C         	call	___flsub	;wreg free
 11309   001306  C02A  F032         	movff	?___flsub,___fldiv@b
 11310   00130A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11311   00130E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11312   001312  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11313   001316  ECCE  F018         	call	___fldiv	;wreg free
 11314   00131A  C032  F060         	movff	?___fldiv,_Colour_decider$2798
 11315   00131E  C033  F061         	movff	?___fldiv+1,_Colour_decider$2798+1
 11316   001322  C034  F062         	movff	?___fldiv+2,_Colour_decider$2798+2
 11317   001326  C035  F063         	movff	?___fldiv+3,_Colour_decider$2798+3
 11318   00132A                     
 11319                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11320   00132A  0E00               	movlw	0
 11321   00132C  6E05               	movwf	___fladd@a^0,c
 11322   00132E  0E00               	movlw	0
 11323   001330  6E06               	movwf	(___fladd@a+1)^0,c
 11324   001332  0E80               	movlw	128
 11325   001334  6E07               	movwf	(___fladd@a+2)^0,c
 11326   001336  0E40               	movlw	64
 11327   001338  6E08               	movwf	(___fladd@a+3)^0,c
 11328   00133A  C060  F001         	movff	_Colour_decider$2798,___fladd@b
 11329   00133E  C061  F002         	movff	_Colour_decider$2798+1,___fladd@b+1
 11330   001342  C062  F003         	movff	_Colour_decider$2798+2,___fladd@b+2
 11331   001346  C063  F004         	movff	_Colour_decider$2798+3,___fladd@b+3
 11332   00134A  EC59  F014         	call	___fladd	;wreg free
 11333   00134E  C001  F011         	movff	?___fladd,___flmul@b
 11334   001352  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11335   001356  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11336   00135A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11337   00135E  0E00               	movlw	0
 11338   001360  6E15               	movwf	___flmul@a^0,c
 11339   001362  0E00               	movlw	0
 11340   001364  6E16               	movwf	(___flmul@a+1)^0,c
 11341   001366  0E70               	movlw	112
 11342   001368  6E17               	movwf	(___flmul@a+2)^0,c
 11343   00136A  0E42               	movlw	66
 11344   00136C  6E18               	movwf	(___flmul@a+3)^0,c
 11345   00136E  ECB9  F016         	call	___flmul	;wreg free
 11346   001372  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11347   001376  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11348   00137A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11349   00137E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11350   001382                     l5168:
 11351                           
 11352                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 11353   001382  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11354   001386  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11355   00138A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11356   00138E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11357   001392  0E00               	movlw	0
 11358   001394  6E2E               	movwf	___flge@ff2^0,c
 11359   001396  0E00               	movlw	0
 11360   001398  6E2F               	movwf	(___flge@ff2+1)^0,c
 11361   00139A  0EA5               	movlw	165
 11362   00139C  6E30               	movwf	(___flge@ff2+2)^0,c
 11363   00139E  0E43               	movlw	67
 11364   0013A0  6E31               	movwf	(___flge@ff2+3)^0,c
 11365   0013A2  EC6F  F024         	call	___flge	;wreg free
 11366   0013A6  A0D8               	btfss	status,0,c
 11367   0013A8  EFD8  F009         	goto	u5121
 11368   0013AC  EFDA  F009         	goto	u5120
 11369   0013B0                     u5121:
 11370   0013B0  EFF9  F009         	goto	l5178
 11371   0013B4                     u5120:
 11372   0013B4  0E00               	movlw	0
 11373   0013B6  6E2A               	movwf	___flge@ff1^0,c
 11374   0013B8  0E00               	movlw	0
 11375   0013BA  6E2B               	movwf	(___flge@ff1+1)^0,c
 11376   0013BC  0EB4               	movlw	180
 11377   0013BE  6E2C               	movwf	(___flge@ff1+2)^0,c
 11378   0013C0  0E43               	movlw	67
 11379   0013C2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11380   0013C4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11381   0013C8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11382   0013CC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11383   0013D0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11384   0013D4  EC6F  F024         	call	___flge	;wreg free
 11385   0013D8  A0D8               	btfss	status,0,c
 11386   0013DA  EFF1  F009         	goto	u5131
 11387   0013DE  EFF3  F009         	goto	u5130
 11388   0013E2                     u5131:
 11389   0013E2  EFF9  F009         	goto	l5178
 11390   0013E6                     u5130:
 11391   0013E6                     
 11392                           ;color.c: 164:         return 1;
 11393   0013E6  0E00               	movlw	0
 11394   0013E8  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11395   0013EA  0E01               	movlw	1
 11396   0013EC  6E4B               	movwf	?_Colour_decider^0,c
 11397   0013EE  EF9A  F00C         	goto	l76
 11398   0013F2                     l5178:
 11399   0013F2  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11400   0013F6  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11401   0013FA  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11402   0013FE  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11403   001402  0E00               	movlw	0
 11404   001404  6E2E               	movwf	___flge@ff2^0,c
 11405   001406  0E00               	movlw	0
 11406   001408  6E2F               	movwf	(___flge@ff2+1)^0,c
 11407   00140A  0EA0               	movlw	160
 11408   00140C  6E30               	movwf	(___flge@ff2+2)^0,c
 11409   00140E  0E40               	movlw	64
 11410   001410  6E31               	movwf	(___flge@ff2+3)^0,c
 11411   001412  EC6F  F024         	call	___flge	;wreg free
 11412   001416  A0D8               	btfss	status,0,c
 11413   001418  EF10  F00A         	goto	u5141
 11414   00141C  EF12  F00A         	goto	u5140
 11415   001420                     u5141:
 11416   001420  EF31  F00A         	goto	l5188
 11417   001424                     u5140:
 11418   001424  0E00               	movlw	0
 11419   001426  6E2A               	movwf	___flge@ff1^0,c
 11420   001428  0E00               	movlw	0
 11421   00142A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11422   00142C  0E40               	movlw	64
 11423   00142E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11424   001430  0E41               	movlw	65
 11425   001432  6E2D               	movwf	(___flge@ff1+3)^0,c
 11426   001434  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11427   001438  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11428   00143C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11429   001440  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11430   001444  EC6F  F024         	call	___flge	;wreg free
 11431   001448  A0D8               	btfss	status,0,c
 11432   00144A  EF29  F00A         	goto	u5151
 11433   00144E  EF2B  F00A         	goto	u5150
 11434   001452                     u5151:
 11435   001452  EF31  F00A         	goto	l5188
 11436   001456                     u5150:
 11437   001456                     
 11438                           ;color.c: 168:         return 2;
 11439   001456  0E00               	movlw	0
 11440   001458  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11441   00145A  0E02               	movlw	2
 11442   00145C  6E4B               	movwf	?_Colour_decider^0,c
 11443   00145E  EF9A  F00C         	goto	l76
 11444   001462                     l5188:
 11445   001462  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11446   001466  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11447   00146A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11448   00146E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11449   001472  0E00               	movlw	0
 11450   001474  6E2E               	movwf	___flge@ff2^0,c
 11451   001476  0E00               	movlw	0
 11452   001478  6E2F               	movwf	(___flge@ff2+1)^0,c
 11453   00147A  0EA0               	movlw	160
 11454   00147C  6E30               	movwf	(___flge@ff2+2)^0,c
 11455   00147E  0E41               	movlw	65
 11456   001480  6E31               	movwf	(___flge@ff2+3)^0,c
 11457   001482  EC6F  F024         	call	___flge	;wreg free
 11458   001486  A0D8               	btfss	status,0,c
 11459   001488  EF48  F00A         	goto	u5161
 11460   00148C  EF4A  F00A         	goto	u5160
 11461   001490                     u5161:
 11462   001490  EFCA  F00A         	goto	l5214
 11463   001494                     u5160:
 11464   001494  0E00               	movlw	0
 11465   001496  6E2A               	movwf	___flge@ff1^0,c
 11466   001498  0E00               	movlw	0
 11467   00149A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11468   00149C  0EE8               	movlw	232
 11469   00149E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11470   0014A0  0E41               	movlw	65
 11471   0014A2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11472   0014A4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11473   0014A8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11474   0014AC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11475   0014B0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11476   0014B4  EC6F  F024         	call	___flge	;wreg free
 11477   0014B8  A0D8               	btfss	status,0,c
 11478   0014BA  EF61  F00A         	goto	u5171
 11479   0014BE  EF63  F00A         	goto	u5170
 11480   0014C2                     u5171:
 11481   0014C2  EFCA  F00A         	goto	l5214
 11482   0014C6                     u5170:
 11483   0014C6                     
 11484                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11485   0014C6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11486   0014CA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11487   0014CE  CFDE F02A          	movff	postinc2,___flge@ff1
 11488   0014D2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11489   0014D6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11490   0014DA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11491   0014DE  0ECD               	movlw	205
 11492   0014E0  6E2E               	movwf	___flge@ff2^0,c
 11493   0014E2  0ECC               	movlw	204
 11494   0014E4  6E2F               	movwf	(___flge@ff2+1)^0,c
 11495   0014E6  0E4C               	movlw	76
 11496   0014E8  6E30               	movwf	(___flge@ff2+2)^0,c
 11497   0014EA  0E3E               	movlw	62
 11498   0014EC  6E31               	movwf	(___flge@ff2+3)^0,c
 11499   0014EE  EC6F  F024         	call	___flge	;wreg free
 11500   0014F2  A0D8               	btfss	status,0,c
 11501   0014F4  EF7E  F00A         	goto	u5181
 11502   0014F8  EF80  F00A         	goto	u5180
 11503   0014FC                     u5181:
 11504   0014FC  EF9F  F00A         	goto	l5202
 11505   001500                     u5180:
 11506   001500  0E1F               	movlw	31
 11507   001502  6E2A               	movwf	___flge@ff1^0,c
 11508   001504  0E85               	movlw	133
 11509   001506  6E2B               	movwf	(___flge@ff1+1)^0,c
 11510   001508  0E6B               	movlw	107
 11511   00150A  6E2C               	movwf	(___flge@ff1+2)^0,c
 11512   00150C  0E3E               	movlw	62
 11513   00150E  6E2D               	movwf	(___flge@ff1+3)^0,c
 11514   001510  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11515   001514  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11516   001518  CFDE F02E          	movff	postinc2,___flge@ff2
 11517   00151C  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11518   001520  CFDE F030          	movff	postinc2,___flge@ff2+2
 11519   001524  CFDE F031          	movff	postinc2,___flge@ff2+3
 11520   001528  EC6F  F024         	call	___flge	;wreg free
 11521   00152C  A0D8               	btfss	status,0,c
 11522   00152E  EF9B  F00A         	goto	u5191
 11523   001532  EF9D  F00A         	goto	u5190
 11524   001536                     u5191:
 11525   001536  EF9F  F00A         	goto	l5202
 11526   00153A                     u5190:
 11527   00153A  EF5E  F008         	goto	l5146
 11528   00153E                     l5202:
 11529   00153E  EE20 F008          	lfsr	2,8
 11530   001542  504D               	movf	Colour_decider@rel^0,w,c
 11531   001544  26D9               	addwf	fsr2l,f,c
 11532   001546  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11533   001548  22DA               	addwfc	fsr2h,f,c
 11534   00154A  CFDE F02A          	movff	postinc2,___flge@ff1
 11535   00154E  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11536   001552  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11537   001556  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11538   00155A  0E29               	movlw	41
 11539   00155C  6E2E               	movwf	___flge@ff2^0,c
 11540   00155E  0E5C               	movlw	92
 11541   001560  6E2F               	movwf	(___flge@ff2+1)^0,c
 11542   001562  0E0F               	movlw	15
 11543   001564  6E30               	movwf	(___flge@ff2+2)^0,c
 11544   001566  0E3E               	movlw	62
 11545   001568  6E31               	movwf	(___flge@ff2+3)^0,c
 11546   00156A  EC6F  F024         	call	___flge	;wreg free
 11547   00156E  A0D8               	btfss	status,0,c
 11548   001570  EFBC  F00A         	goto	u5201
 11549   001574  EFBE  F00A         	goto	u5200
 11550   001578                     u5201:
 11551   001578  EFC4  F00A         	goto	l5210
 11552   00157C                     u5200:
 11553   00157C                     l5204:
 11554                           
 11555                           ;color.c: 179:             return 4;
 11556   00157C  0E00               	movlw	0
 11557   00157E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11558   001580  0E04               	movlw	4
 11559   001582  6E4B               	movwf	?_Colour_decider^0,c
 11560   001584  EF9A  F00C         	goto	l76
 11561   001588                     l5210:
 11562                           
 11563                           ;color.c: 182:             return 3;
 11564   001588  0E00               	movlw	0
 11565   00158A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11566   00158C  0E03               	movlw	3
 11567   00158E  6E4B               	movwf	?_Colour_decider^0,c
 11568   001590  EF9A  F00C         	goto	l76
 11569   001594                     l5214:
 11570   001594  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11571   001598  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11572   00159C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11573   0015A0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11574   0015A4  0E00               	movlw	0
 11575   0015A6  6E2E               	movwf	___flge@ff2^0,c
 11576   0015A8  0E00               	movlw	0
 11577   0015AA  6E2F               	movwf	(___flge@ff2+1)^0,c
 11578   0015AC  0E34               	movlw	52
 11579   0015AE  6E30               	movwf	(___flge@ff2+2)^0,c
 11580   0015B0  0E42               	movlw	66
 11581   0015B2  6E31               	movwf	(___flge@ff2+3)^0,c
 11582   0015B4  EC6F  F024         	call	___flge	;wreg free
 11583   0015B8  A0D8               	btfss	status,0,c
 11584   0015BA  EFE1  F00A         	goto	u5211
 11585   0015BE  EFE3  F00A         	goto	u5210
 11586   0015C2                     u5211:
 11587   0015C2  EF48  F00B         	goto	l5238
 11588   0015C6                     u5210:
 11589   0015C6  0E00               	movlw	0
 11590   0015C8  6E2A               	movwf	___flge@ff1^0,c
 11591   0015CA  0E00               	movlw	0
 11592   0015CC  6E2B               	movwf	(___flge@ff1+1)^0,c
 11593   0015CE  0EA0               	movlw	160
 11594   0015D0  6E2C               	movwf	(___flge@ff1+2)^0,c
 11595   0015D2  0E42               	movlw	66
 11596   0015D4  6E2D               	movwf	(___flge@ff1+3)^0,c
 11597   0015D6  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11598   0015DA  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11599   0015DE  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11600   0015E2  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11601   0015E6  EC6F  F024         	call	___flge	;wreg free
 11602   0015EA  A0D8               	btfss	status,0,c
 11603   0015EC  EFFA  F00A         	goto	u5221
 11604   0015F0  EFFC  F00A         	goto	u5220
 11605   0015F4                     u5221:
 11606   0015F4  EF48  F00B         	goto	l5238
 11607   0015F8                     u5220:
 11608   0015F8                     
 11609                           ;color.c: 188:         if(0.15<=rel->B){
 11610   0015F8  EE20 F008          	lfsr	2,8
 11611   0015FC  504D               	movf	Colour_decider@rel^0,w,c
 11612   0015FE  26D9               	addwf	fsr2l,f,c
 11613   001600  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11614   001602  22DA               	addwfc	fsr2h,f,c
 11615   001604  CFDE F02A          	movff	postinc2,___flge@ff1
 11616   001608  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11617   00160C  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11618   001610  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11619   001614  0E9A               	movlw	154
 11620   001616  6E2E               	movwf	___flge@ff2^0,c
 11621   001618  0E99               	movlw	153
 11622   00161A  6E2F               	movwf	(___flge@ff2+1)^0,c
 11623   00161C  0E19               	movlw	25
 11624   00161E  6E30               	movwf	(___flge@ff2+2)^0,c
 11625   001620  0E3E               	movlw	62
 11626   001622  6E31               	movwf	(___flge@ff2+3)^0,c
 11627   001624  EC6F  F024         	call	___flge	;wreg free
 11628   001628  A0D8               	btfss	status,0,c
 11629   00162A  EF19  F00B         	goto	u5231
 11630   00162E  EF1B  F00B         	goto	u5230
 11631   001632                     u5231:
 11632   001632  EF1D  F00B         	goto	l5226
 11633   001636                     u5230:
 11634   001636  EFBE  F00A         	goto	l5204
 11635   00163A                     l5226:
 11636   00163A  EE20 F008          	lfsr	2,8
 11637   00163E  504D               	movf	Colour_decider@rel^0,w,c
 11638   001640  26D9               	addwf	fsr2l,f,c
 11639   001642  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11640   001644  22DA               	addwfc	fsr2h,f,c
 11641   001646  CFDE F02A          	movff	postinc2,___flge@ff1
 11642   00164A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11643   00164E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11644   001652  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11645   001656  0E8F               	movlw	143
 11646   001658  6E2E               	movwf	___flge@ff2^0,c
 11647   00165A  0EC2               	movlw	194
 11648   00165C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11649   00165E  0EF5               	movlw	245
 11650   001660  6E30               	movwf	(___flge@ff2+2)^0,c
 11651   001662  0E3D               	movlw	61
 11652   001664  6E31               	movwf	(___flge@ff2+3)^0,c
 11653   001666  EC6F  F024         	call	___flge	;wreg free
 11654   00166A  A0D8               	btfss	status,0,c
 11655   00166C  EF3A  F00B         	goto	u5241
 11656   001670  EF3C  F00B         	goto	u5240
 11657   001674                     u5241:
 11658   001674  EF42  F00B         	goto	l5234
 11659   001678                     u5240:
 11660   001678                     l5228:
 11661                           
 11662                           ;color.c: 192:             return 6;
 11663   001678  0E00               	movlw	0
 11664   00167A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11665   00167C  0E06               	movlw	6
 11666   00167E  6E4B               	movwf	?_Colour_decider^0,c
 11667   001680  EF9A  F00C         	goto	l76
 11668   001684                     l5234:
 11669                           
 11670                           ;color.c: 195:             return 5;
 11671   001684  0E00               	movlw	0
 11672   001686  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11673   001688  0E05               	movlw	5
 11674   00168A  6E4B               	movwf	?_Colour_decider^0,c
 11675   00168C  EF9A  F00C         	goto	l76
 11676   001690                     l5238:
 11677   001690  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11678   001694  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11679   001698  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11680   00169C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11681   0016A0  0E00               	movlw	0
 11682   0016A2  6E2E               	movwf	___flge@ff2^0,c
 11683   0016A4  0E00               	movlw	0
 11684   0016A6  6E2F               	movwf	(___flge@ff2+1)^0,c
 11685   0016A8  0EA2               	movlw	162
 11686   0016AA  6E30               	movwf	(___flge@ff2+2)^0,c
 11687   0016AC  0E42               	movlw	66
 11688   0016AE  6E31               	movwf	(___flge@ff2+3)^0,c
 11689   0016B0  EC6F  F024         	call	___flge	;wreg free
 11690   0016B4  A0D8               	btfss	status,0,c
 11691   0016B6  EF5F  F00B         	goto	u5251
 11692   0016BA  EF61  F00B         	goto	u5250
 11693   0016BE                     u5251:
 11694   0016BE  EF9B  F00B         	goto	l5254
 11695   0016C2                     u5250:
 11696   0016C2  0E00               	movlw	0
 11697   0016C4  6E2A               	movwf	___flge@ff1^0,c
 11698   0016C6  0E00               	movlw	0
 11699   0016C8  6E2B               	movwf	(___flge@ff1+1)^0,c
 11700   0016CA  0EE6               	movlw	230
 11701   0016CC  6E2C               	movwf	(___flge@ff1+2)^0,c
 11702   0016CE  0E42               	movlw	66
 11703   0016D0  6E2D               	movwf	(___flge@ff1+3)^0,c
 11704   0016D2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11705   0016D6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11706   0016DA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11707   0016DE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11708   0016E2  EC6F  F024         	call	___flge	;wreg free
 11709   0016E6  A0D8               	btfss	status,0,c
 11710   0016E8  EF78  F00B         	goto	u5261
 11711   0016EC  EF7A  F00B         	goto	u5260
 11712   0016F0                     u5261:
 11713   0016F0  EF9B  F00B         	goto	l5254
 11714   0016F4                     u5260:
 11715   0016F4                     
 11716                           ;color.c: 201:         if(0.15<=rel->B){
 11717   0016F4  EE20 F008          	lfsr	2,8
 11718   0016F8  504D               	movf	Colour_decider@rel^0,w,c
 11719   0016FA  26D9               	addwf	fsr2l,f,c
 11720   0016FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11721   0016FE  22DA               	addwfc	fsr2h,f,c
 11722   001700  CFDE F02A          	movff	postinc2,___flge@ff1
 11723   001704  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11724   001708  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11725   00170C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11726   001710  0E9A               	movlw	154
 11727   001712  6E2E               	movwf	___flge@ff2^0,c
 11728   001714  0E99               	movlw	153
 11729   001716  6E2F               	movwf	(___flge@ff2+1)^0,c
 11730   001718  0E19               	movlw	25
 11731   00171A  6E30               	movwf	(___flge@ff2+2)^0,c
 11732   00171C  0E3E               	movlw	62
 11733   00171E  6E31               	movwf	(___flge@ff2+3)^0,c
 11734   001720  EC6F  F024         	call	___flge	;wreg free
 11735   001724  A0D8               	btfss	status,0,c
 11736   001726  EF97  F00B         	goto	u5271
 11737   00172A  EF99  F00B         	goto	u5270
 11738   00172E                     u5271:
 11739   00172E  EF3C  F00B         	goto	l5228
 11740   001732                     u5270:
 11741   001732  EFBE  F00A         	goto	l5204
 11742   001736                     l5254:
 11743   001736  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11744   00173A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11745   00173E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11746   001742  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11747   001746  0E00               	movlw	0
 11748   001748  6E2E               	movwf	___flge@ff2^0,c
 11749   00174A  0E00               	movlw	0
 11750   00174C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11751   00174E  0EF0               	movlw	240
 11752   001750  6E30               	movwf	(___flge@ff2+2)^0,c
 11753   001752  0E41               	movlw	65
 11754   001754  6E31               	movwf	(___flge@ff2+3)^0,c
 11755   001756  EC6F  F024         	call	___flge	;wreg free
 11756   00175A  A0D8               	btfss	status,0,c
 11757   00175C  EFB2  F00B         	goto	u5281
 11758   001760  EFB4  F00B         	goto	u5280
 11759   001764                     u5281:
 11760   001764  EFCD  F00B         	goto	l5258
 11761   001768                     u5280:
 11762   001768  0E00               	movlw	0
 11763   00176A  6E2A               	movwf	___flge@ff1^0,c
 11764   00176C  0E00               	movlw	0
 11765   00176E  6E2B               	movwf	(___flge@ff1+1)^0,c
 11766   001770  0E68               	movlw	104
 11767   001772  6E2C               	movwf	(___flge@ff1+2)^0,c
 11768   001774  0E42               	movlw	66
 11769   001776  6E2D               	movwf	(___flge@ff1+3)^0,c
 11770   001778  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11771   00177C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11772   001780  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11773   001784  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11774   001788  EC6F  F024         	call	___flge	;wreg free
 11775   00178C  B0D8               	btfsc	status,0,c
 11776   00178E  EFCB  F00B         	goto	u5291
 11777   001792  EFCD  F00B         	goto	u5290
 11778   001796                     u5291:
 11779   001796  EFBE  F00A         	goto	l5204
 11780   00179A                     u5290:
 11781   00179A                     l5258:
 11782   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11783   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11784   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11785   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11786   0017AA  0E00               	movlw	0
 11787   0017AC  6E2E               	movwf	___flge@ff2^0,c
 11788   0017AE  0E00               	movlw	0
 11789   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
 11790   0017B2  0EF0               	movlw	240
 11791   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
 11792   0017B6  0E42               	movlw	66
 11793   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
 11794   0017BA  EC6F  F024         	call	___flge	;wreg free
 11795   0017BE  A0D8               	btfss	status,0,c
 11796   0017C0  EFE4  F00B         	goto	u5301
 11797   0017C4  EFE6  F00B         	goto	u5300
 11798   0017C8                     u5301:
 11799   0017C8  EF01  F00C         	goto	l5268
 11800   0017CC                     u5300:
 11801   0017CC  0E00               	movlw	0
 11802   0017CE  6E2A               	movwf	___flge@ff1^0,c
 11803   0017D0  0E00               	movlw	0
 11804   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
 11805   0017D4  0E5C               	movlw	92
 11806   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
 11807   0017D8  0E43               	movlw	67
 11808   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
 11809   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11810   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11811   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11812   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11813   0017EC  EC6F  F024         	call	___flge	;wreg free
 11814   0017F0  A0D8               	btfss	status,0,c
 11815   0017F2  EFFD  F00B         	goto	u5311
 11816   0017F6  EFFF  F00B         	goto	u5310
 11817   0017FA                     u5311:
 11818   0017FA  EF01  F00C         	goto	l5268
 11819   0017FE                     u5310:
 11820   0017FE  EFBE  F00A         	goto	l5204
 11821   001802                     l5268:
 11822   001802  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11823   001806  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11824   00180A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11825   00180E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11826   001812  0E00               	movlw	0
 11827   001814  6E2E               	movwf	___flge@ff2^0,c
 11828   001816  0E00               	movlw	0
 11829   001818  6E2F               	movwf	(___flge@ff2+1)^0,c
 11830   00181A  0E60               	movlw	96
 11831   00181C  6E30               	movwf	(___flge@ff2+2)^0,c
 11832   00181E  0E41               	movlw	65
 11833   001820  6E31               	movwf	(___flge@ff2+3)^0,c
 11834   001822  EC6F  F024         	call	___flge	;wreg free
 11835   001826  A0D8               	btfss	status,0,c
 11836   001828  EF18  F00C         	goto	u5321
 11837   00182C  EF1A  F00C         	goto	u5320
 11838   001830                     u5321:
 11839   001830  EF96  F00C         	goto	l5294
 11840   001834                     u5320:
 11841   001834  0E00               	movlw	0
 11842   001836  6E2A               	movwf	___flge@ff1^0,c
 11843   001838  0E00               	movlw	0
 11844   00183A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11845   00183C  0E98               	movlw	152
 11846   00183E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11847   001840  0E41               	movlw	65
 11848   001842  6E2D               	movwf	(___flge@ff1+3)^0,c
 11849   001844  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11850   001848  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11851   00184C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11852   001850  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11853   001854  EC6F  F024         	call	___flge	;wreg free
 11854   001858  A0D8               	btfss	status,0,c
 11855   00185A  EF31  F00C         	goto	u5331
 11856   00185E  EF33  F00C         	goto	u5330
 11857   001862                     u5331:
 11858   001862  EF96  F00C         	goto	l5294
 11859   001866                     u5330:
 11860   001866                     
 11861                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11862   001866  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11863   00186A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11864   00186E  CFDE F02A          	movff	postinc2,___flge@ff1
 11865   001872  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11866   001876  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11867   00187A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11868   00187E  0ECD               	movlw	205
 11869   001880  6E2E               	movwf	___flge@ff2^0,c
 11870   001882  0ECC               	movlw	204
 11871   001884  6E2F               	movwf	(___flge@ff2+1)^0,c
 11872   001886  0E4C               	movlw	76
 11873   001888  6E30               	movwf	(___flge@ff2+2)^0,c
 11874   00188A  0E3E               	movlw	62
 11875   00188C  6E31               	movwf	(___flge@ff2+3)^0,c
 11876   00188E  EC6F  F024         	call	___flge	;wreg free
 11877   001892  A0D8               	btfss	status,0,c
 11878   001894  EF4E  F00C         	goto	u5341
 11879   001898  EF50  F00C         	goto	u5340
 11880   00189C                     u5341:
 11881   00189C  EF6F  F00C         	goto	l5282
 11882   0018A0                     u5340:
 11883   0018A0  0E1F               	movlw	31
 11884   0018A2  6E2A               	movwf	___flge@ff1^0,c
 11885   0018A4  0E85               	movlw	133
 11886   0018A6  6E2B               	movwf	(___flge@ff1+1)^0,c
 11887   0018A8  0E6B               	movlw	107
 11888   0018AA  6E2C               	movwf	(___flge@ff1+2)^0,c
 11889   0018AC  0E3E               	movlw	62
 11890   0018AE  6E2D               	movwf	(___flge@ff1+3)^0,c
 11891   0018B0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11892   0018B4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11893   0018B8  CFDE F02E          	movff	postinc2,___flge@ff2
 11894   0018BC  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11895   0018C0  CFDE F030          	movff	postinc2,___flge@ff2+2
 11896   0018C4  CFDE F031          	movff	postinc2,___flge@ff2+3
 11897   0018C8  EC6F  F024         	call	___flge	;wreg free
 11898   0018CC  A0D8               	btfss	status,0,c
 11899   0018CE  EF6B  F00C         	goto	u5351
 11900   0018D2  EF6D  F00C         	goto	u5350
 11901   0018D6                     u5351:
 11902   0018D6  EF6F  F00C         	goto	l5282
 11903   0018DA                     u5350:
 11904   0018DA  EF5E  F008         	goto	l5146
 11905   0018DE                     l5282:
 11906   0018DE  EE20 F008          	lfsr	2,8
 11907   0018E2  504D               	movf	Colour_decider@rel^0,w,c
 11908   0018E4  26D9               	addwf	fsr2l,f,c
 11909   0018E6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11910   0018E8  22DA               	addwfc	fsr2h,f,c
 11911   0018EA  CFDE F02A          	movff	postinc2,___flge@ff1
 11912   0018EE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11913   0018F2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11914   0018F6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11915   0018FA  0E9A               	movlw	154
 11916   0018FC  6E2E               	movwf	___flge@ff2^0,c
 11917   0018FE  0E99               	movlw	153
 11918   001900  6E2F               	movwf	(___flge@ff2+1)^0,c
 11919   001902  0E19               	movlw	25
 11920   001904  6E30               	movwf	(___flge@ff2+2)^0,c
 11921   001906  0E3E               	movlw	62
 11922   001908  6E31               	movwf	(___flge@ff2+3)^0,c
 11923   00190A  EC6F  F024         	call	___flge	;wreg free
 11924   00190E  A0D8               	btfss	status,0,c
 11925   001910  EF8C  F00C         	goto	u5361
 11926   001914  EF8E  F00C         	goto	u5360
 11927   001918                     u5361:
 11928   001918  EF90  F00C         	goto	l5290
 11929   00191C                     u5360:
 11930   00191C  EFBE  F00A         	goto	l5204
 11931   001920                     l5290:
 11932                           
 11933                           ;color.c: 223:             return 7;
 11934   001920  0E00               	movlw	0
 11935   001922  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11936   001924  0E07               	movlw	7
 11937   001926  6E4B               	movwf	?_Colour_decider^0,c
 11938   001928  EF9A  F00C         	goto	l76
 11939   00192C                     l5294:
 11940                           
 11941                           ;color.c: 227:         return 10;
 11942   00192C  0E00               	movlw	0
 11943   00192E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11944   001930  0E0A               	movlw	10
 11945   001932  6E4B               	movwf	?_Colour_decider^0,c
 11946   001934                     l76:
 11947   001934  0012               	return		;funcret
 11948   001936                     __end_of_Colour_decider:
 11949                           	callstack 0
 11950                           
 11951 ;; *************** function ___xxtofl *****************
 11952 ;; Defined at:
 11953 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  sign            1    wreg     unsigned char 
 11956 ;;  val             4    0[COMRAM] long 
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;  sign            1    8[COMRAM] unsigned char 
 11959 ;;  arg             4   10[COMRAM] unsigned long 
 11960 ;;  exp             1    9[COMRAM] unsigned char 
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  4    0[COMRAM] unsigned char 
 11963 ;; Registers used:
 11964 ;;		wreg, status,2, status,0
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11971 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11973 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11974 ;;Total ram usage:       14 bytes
 11975 ;; Hardware stack levels used: 1
 11976 ;; Hardware stack levels required when called: 1
 11977 ;; This function calls:
 11978 ;;		Nothing
 11979 ;; This function is called by:
 11980 ;;		_colour_rel
 11981 ;;		_Colour_decider
 11982 ;;		_turnRight45
 11983 ;;		_turnLeft45
 11984 ;;		_reverseOneBlock
 11985 ;;		_ForwardOneBlock
 11986 ;;		_Forwardhalfblock
 11987 ;;		_Backhalfblock
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text66
 11992   0041CC                     __ptext66:
 11993                           	callstack 0
 11994   0041CC                     ___xxtofl:
 11995                           	callstack 28
 11996                           
 11997                           ;incstack = 0
 11998                           ;___xxtofl@sign stored from wreg
 11999   0041CC  6E09               	movwf	___xxtofl@sign^0,c
 12000   0041CE  5009               	movf	___xxtofl@sign^0,w,c
 12001   0041D0  B4D8               	btfsc	status,2,c
 12002   0041D2  EFED  F020         	goto	u4931
 12003   0041D6  EFEF  F020         	goto	u4930
 12004   0041DA                     u4931:
 12005   0041DA  EF11  F021         	goto	l1282
 12006   0041DE                     u4930:
 12007   0041DE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12008   0041E0  EFF6  F020         	goto	u4940
 12009   0041E4  EFF4  F020         	goto	u4941
 12010   0041E8                     u4941:
 12011   0041E8  EF11  F021         	goto	l1282
 12012   0041EC                     u4940:
 12013   0041EC  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12014   0041F0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12015   0041F4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12016   0041F8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12017   0041FC  1E05               	comf	??___xxtofl^0,f,c
 12018   0041FE  1E06               	comf	(??___xxtofl+1)^0,f,c
 12019   004200  1E07               	comf	(??___xxtofl+2)^0,f,c
 12020   004202  1E08               	comf	(??___xxtofl+3)^0,f,c
 12021   004204  2A05               	incf	??___xxtofl^0,f,c
 12022   004206  0E00               	movlw	0
 12023   004208  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12024   00420A  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12025   00420C  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12026   00420E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12027   004212  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12028   004216  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12029   00421A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12030   00421E  EF19  F021         	goto	l5016
 12031   004222                     l1282:
 12032   004222  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12033   004226  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12034   00422A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12035   00422E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12036   004232                     l5016:
 12037   004232  5001               	movf	___xxtofl@val^0,w,c
 12038   004234  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12039   004236  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12040   004238  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12041   00423A  A4D8               	btfss	status,2,c
 12042   00423C  EF22  F021         	goto	u4951
 12043   004240  EF24  F021         	goto	u4950
 12044   004244                     u4951:
 12045   004244  EF2E  F021         	goto	l5022
 12046   004248                     u4950:
 12047   004248  0E00               	movlw	0
 12048   00424A  6E01               	movwf	?___xxtofl^0,c
 12049   00424C  0E00               	movlw	0
 12050   00424E  6E02               	movwf	(?___xxtofl+1)^0,c
 12051   004250  0E00               	movlw	0
 12052   004252  6E03               	movwf	(?___xxtofl+2)^0,c
 12053   004254  0E00               	movlw	0
 12054   004256  6E04               	movwf	(?___xxtofl+3)^0,c
 12055   004258  EFBF  F021         	goto	l1285
 12056   00425C                     l5022:
 12057   00425C  0E96               	movlw	150
 12058   00425E  6E0A               	movwf	___xxtofl@exp^0,c
 12059   004260  EF38  F021         	goto	l5026
 12060   004264                     l5024:
 12061   004264  2A0A               	incf	___xxtofl@exp^0,f,c
 12062   004266  90D8               	bcf	status,0,c
 12063   004268  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12064   00426A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12065   00426C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12066   00426E  320B               	rrcf	___xxtofl@arg^0,f,c
 12067   004270                     l5026:
 12068   004270  0E00               	movlw	0
 12069   004272  140B               	andwf	___xxtofl@arg^0,w,c
 12070   004274  6E05               	movwf	??___xxtofl^0,c
 12071   004276  0E00               	movlw	0
 12072   004278  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12073   00427A  6E06               	movwf	(??___xxtofl+1)^0,c
 12074   00427C  0E00               	movlw	0
 12075   00427E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12076   004280  6E07               	movwf	(??___xxtofl+2)^0,c
 12077   004282  0EFE               	movlw	254
 12078   004284  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12079   004286  6E08               	movwf	(??___xxtofl+3)^0,c
 12080   004288  5005               	movf	??___xxtofl^0,w,c
 12081   00428A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12082   00428C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12083   00428E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12084   004290  A4D8               	btfss	status,2,c
 12085   004292  EF4D  F021         	goto	u4961
 12086   004296  EF4F  F021         	goto	u4960
 12087   00429A                     u4961:
 12088   00429A  EF32  F021         	goto	l5024
 12089   00429E                     u4960:
 12090   00429E  EF5D  F021         	goto	l1289
 12091   0042A2                     l5028:
 12092   0042A2  2A0A               	incf	___xxtofl@exp^0,f,c
 12093   0042A4  0E01               	movlw	1
 12094   0042A6  260B               	addwf	___xxtofl@arg^0,f,c
 12095   0042A8  0E00               	movlw	0
 12096   0042AA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12097   0042AC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12098   0042AE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12099   0042B0  90D8               	bcf	status,0,c
 12100   0042B2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12101   0042B4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12102   0042B6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12103   0042B8  320B               	rrcf	___xxtofl@arg^0,f,c
 12104   0042BA                     l1289:
 12105   0042BA  0E00               	movlw	0
 12106   0042BC  140B               	andwf	___xxtofl@arg^0,w,c
 12107   0042BE  6E05               	movwf	??___xxtofl^0,c
 12108   0042C0  0E00               	movlw	0
 12109   0042C2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12110   0042C4  6E06               	movwf	(??___xxtofl+1)^0,c
 12111   0042C6  0E00               	movlw	0
 12112   0042C8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12113   0042CA  6E07               	movwf	(??___xxtofl+2)^0,c
 12114   0042CC  0EFF               	movlw	255
 12115   0042CE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12116   0042D0  6E08               	movwf	(??___xxtofl+3)^0,c
 12117   0042D2  5005               	movf	??___xxtofl^0,w,c
 12118   0042D4  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12119   0042D6  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12120   0042D8  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12121   0042DA  A4D8               	btfss	status,2,c
 12122   0042DC  EF72  F021         	goto	u4971
 12123   0042E0  EF74  F021         	goto	u4970
 12124   0042E4                     u4971:
 12125   0042E4  EF51  F021         	goto	l5028
 12126   0042E8                     u4970:
 12127   0042E8  EF7C  F021         	goto	l5036
 12128   0042EC                     l5034:
 12129   0042EC  060A               	decf	___xxtofl@exp^0,f,c
 12130   0042EE  90D8               	bcf	status,0,c
 12131   0042F0  360B               	rlcf	___xxtofl@arg^0,f,c
 12132   0042F2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12133   0042F4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12134   0042F6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12135   0042F8                     l5036:
 12136   0042F8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12137   0042FA  EF81  F021         	goto	u4981
 12138   0042FE  EF83  F021         	goto	u4980
 12139   004302                     u4981:
 12140   004302  EF8B  F021         	goto	l1296
 12141   004306                     u4980:
 12142   004306  0E02               	movlw	2
 12143   004308  600A               	cpfslt	___xxtofl@exp^0,c
 12144   00430A  EF89  F021         	goto	u4991
 12145   00430E  EF8B  F021         	goto	u4990
 12146   004312                     u4991:
 12147   004312  EF76  F021         	goto	l5034
 12148   004316                     u4990:
 12149   004316                     l1296:
 12150   004316  B00A               	btfsc	___xxtofl@exp^0,0,c
 12151   004318  EF90  F021         	goto	u5001
 12152   00431C  EF92  F021         	goto	u5000
 12153   004320                     u5001:
 12154   004320  EF93  F021         	goto	l5042
 12155   004324                     u5000:
 12156   004324  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12157   004326                     l5042:
 12158   004326  90D8               	bcf	status,0,c
 12159   004328  320A               	rrcf	___xxtofl@exp^0,f,c
 12160   00432A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12161   00432E  6A06               	clrf	(??___xxtofl+1)^0,c
 12162   004330  6A07               	clrf	(??___xxtofl+2)^0,c
 12163   004332  6A08               	clrf	(??___xxtofl+3)^0,c
 12164   004334  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12165   004338  6A07               	clrf	(??___xxtofl+2)^0,c
 12166   00433A  6A06               	clrf	(??___xxtofl+1)^0,c
 12167   00433C  6A05               	clrf	??___xxtofl^0,c
 12168   00433E  5005               	movf	??___xxtofl^0,w,c
 12169   004340  120B               	iorwf	___xxtofl@arg^0,f,c
 12170   004342  5006               	movf	(??___xxtofl+1)^0,w,c
 12171   004344  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12172   004346  5007               	movf	(??___xxtofl+2)^0,w,c
 12173   004348  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12174   00434A  5008               	movf	(??___xxtofl+3)^0,w,c
 12175   00434C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12176   00434E  5009               	movf	___xxtofl@sign^0,w,c
 12177   004350  B4D8               	btfsc	status,2,c
 12178   004352  EFAD  F021         	goto	u5011
 12179   004356  EFAF  F021         	goto	u5010
 12180   00435A                     u5011:
 12181   00435A  EFB7  F021         	goto	l5052
 12182   00435E                     u5010:
 12183   00435E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12184   004360  EFB6  F021         	goto	u5020
 12185   004364  EFB4  F021         	goto	u5021
 12186   004368                     u5021:
 12187   004368  EFB7  F021         	goto	l5052
 12188   00436C                     u5020:
 12189   00436C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12190   00436E                     l5052:
 12191   00436E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12192   004372  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12193   004376  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12194   00437A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12195   00437E                     l1285:
 12196   00437E  0012               	return		;funcret
 12197   004380                     __end_of___xxtofl:
 12198                           	callstack 0
 12199                           
 12200 ;; *************** function ___flsub *****************
 12201 ;; Defined at:
 12202 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;  b               4   41[COMRAM] unsigned char 
 12205 ;;  a               4   45[COMRAM] unsigned char 
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;		None
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  4   41[COMRAM] unsigned char 
 12210 ;; Registers used:
 12211 ;;		wreg, status,2, status,0, cstack
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12217 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12220 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12221 ;;Total ram usage:        8 bytes
 12222 ;; Hardware stack levels used: 1
 12223 ;; Hardware stack levels required when called: 2
 12224 ;; This function calls:
 12225 ;;		___fladd
 12226 ;; This function is called by:
 12227 ;;		_Colour_decider
 12228 ;;		_efgtoa
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           	psect	text67
 12233   0058B0                     __ptext67:
 12234                           	callstack 0
 12235   0058B0                     ___flsub:
 12236                           	callstack 24
 12237   0058B0  0E00               	movlw	0
 12238   0058B2  1A2E               	xorwf	___flsub@a^0,f,c
 12239   0058B4  0E00               	movlw	0
 12240   0058B6  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 12241   0058B8  0E00               	movlw	0
 12242   0058BA  1A30               	xorwf	(___flsub@a+2)^0,f,c
 12243   0058BC  0E80               	movlw	128
 12244   0058BE  1A31               	xorwf	(___flsub@a+3)^0,f,c
 12245   0058C0  C02A  F001         	movff	___flsub@b,___fladd@b
 12246   0058C4  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 12247   0058C8  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 12248   0058CC  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 12249   0058D0  C02E  F005         	movff	___flsub@a,___fladd@a
 12250   0058D4  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 12251   0058D8  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 12252   0058DC  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 12253   0058E0  EC59  F014         	call	___fladd	;wreg free
 12254   0058E4  C001  F02A         	movff	?___fladd,?___flsub
 12255   0058E8  C002  F02B         	movff	?___fladd+1,?___flsub+1
 12256   0058EC  C003  F02C         	movff	?___fladd+2,?___flsub+2
 12257   0058F0  C004  F02D         	movff	?___fladd+3,?___flsub+3
 12258   0058F4  0012               	return		;funcret
 12259   0058F6                     __end_of___flsub:
 12260                           	callstack 0
 12261                           
 12262 ;; *************** function ___fladd *****************
 12263 ;; Defined at:
 12264 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;  b               4    0[COMRAM] unsigned char 
 12267 ;;  a               4    4[COMRAM] unsigned char 
 12268 ;; Auto vars:     Size  Location     Type
 12269 ;;  grs             1   15[COMRAM] unsigned char 
 12270 ;;  bexp            1   14[COMRAM] unsigned char 
 12271 ;;  aexp            1   13[COMRAM] unsigned char 
 12272 ;;  signs           1   12[COMRAM] unsigned char 
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  4    0[COMRAM] unsigned char 
 12275 ;; Registers used:
 12276 ;;		wreg, status,2, status,0
 12277 ;; Tracked objects:
 12278 ;;		On entry : 0/0
 12279 ;;		On exit  : 0/0
 12280 ;;		Unchanged: 0/0
 12281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12282 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12283 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12284 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12286 ;;Total ram usage:       16 bytes
 12287 ;; Hardware stack levels used: 1
 12288 ;; Hardware stack levels required when called: 1
 12289 ;; This function calls:
 12290 ;;		Nothing
 12291 ;; This function is called by:
 12292 ;;		_colour_rel
 12293 ;;		_Colour_decider
 12294 ;;		___flsub
 12295 ;;		_efgtoa
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text68
 12300   0028B2                     __ptext68:
 12301                           	callstack 0
 12302   0028B2                     ___fladd:
 12303                           	callstack 24
 12304   0028B2  5004               	movf	(___fladd@b+3)^0,w,c
 12305   0028B4  0B80               	andlw	128
 12306   0028B6  6E0D               	movwf	___fladd@signs^0,c
 12307   0028B8  5004               	movf	(___fladd@b+3)^0,w,c
 12308   0028BA  2404               	addwf	(___fladd@b+3)^0,w,c
 12309   0028BC  6E0F               	movwf	___fladd@bexp^0,c
 12310   0028BE  AE03               	btfss	(___fladd@b+2)^0,7,c
 12311   0028C0  EF64  F014         	goto	u2931
 12312   0028C4  EF66  F014         	goto	u2930
 12313   0028C8                     u2931:
 12314   0028C8  EF67  F014         	goto	l3684
 12315   0028CC                     u2930:
 12316   0028CC  800F               	bsf	___fladd@bexp^0,0,c
 12317   0028CE                     l3684:
 12318   0028CE  500F               	movf	___fladd@bexp^0,w,c
 12319   0028D0  B4D8               	btfsc	status,2,c
 12320   0028D2  EF6D  F014         	goto	u2941
 12321   0028D6  EF6F  F014         	goto	u2940
 12322   0028DA                     u2941:
 12323   0028DA  EF84  F014         	goto	l3694
 12324   0028DE                     u2940:
 12325   0028DE  280F               	incf	___fladd@bexp^0,w,c
 12326   0028E0  A4D8               	btfss	status,2,c
 12327   0028E2  EF75  F014         	goto	u2951
 12328   0028E6  EF77  F014         	goto	u2950
 12329   0028EA                     u2951:
 12330   0028EA  EF7F  F014         	goto	l3690
 12331   0028EE                     u2950:
 12332   0028EE  0E00               	movlw	0
 12333   0028F0  6E01               	movwf	___fladd@b^0,c
 12334   0028F2  0E00               	movlw	0
 12335   0028F4  6E02               	movwf	(___fladd@b+1)^0,c
 12336   0028F6  0E00               	movlw	0
 12337   0028F8  6E03               	movwf	(___fladd@b+2)^0,c
 12338   0028FA  0E00               	movlw	0
 12339   0028FC  6E04               	movwf	(___fladd@b+3)^0,c
 12340   0028FE                     l3690:
 12341   0028FE  8E03               	bsf	(___fladd@b+2)^0,7,c
 12342   002900  0E00               	movlw	0
 12343   002902  6E04               	movwf	(___fladd@b+3)^0,c
 12344   002904  EF8C  F014         	goto	l3696
 12345   002908                     l3694:
 12346   002908  0E00               	movlw	0
 12347   00290A  6E01               	movwf	___fladd@b^0,c
 12348   00290C  0E00               	movlw	0
 12349   00290E  6E02               	movwf	(___fladd@b+1)^0,c
 12350   002910  0E00               	movlw	0
 12351   002912  6E03               	movwf	(___fladd@b+2)^0,c
 12352   002914  0E00               	movlw	0
 12353   002916  6E04               	movwf	(___fladd@b+3)^0,c
 12354   002918                     l3696:
 12355   002918  5008               	movf	(___fladd@a+3)^0,w,c
 12356   00291A  0B80               	andlw	128
 12357   00291C  6E0E               	movwf	___fladd@aexp^0,c
 12358   00291E  500D               	movf	___fladd@signs^0,w,c
 12359   002920  180E               	xorwf	___fladd@aexp^0,w,c
 12360   002922  B4D8               	btfsc	status,2,c
 12361   002924  EF96  F014         	goto	u2961
 12362   002928  EF98  F014         	goto	u2960
 12363   00292C                     u2961:
 12364   00292C  EF99  F014         	goto	l3702
 12365   002930                     u2960:
 12366   002930  8C0D               	bsf	___fladd@signs^0,6,c
 12367   002932                     l3702:
 12368   002932  5008               	movf	(___fladd@a+3)^0,w,c
 12369   002934  2408               	addwf	(___fladd@a+3)^0,w,c
 12370   002936  6E0E               	movwf	___fladd@aexp^0,c
 12371   002938  AE07               	btfss	(___fladd@a+2)^0,7,c
 12372   00293A  EFA1  F014         	goto	u2971
 12373   00293E  EFA3  F014         	goto	u2970
 12374   002942                     u2971:
 12375   002942  EFA4  F014         	goto	l3708
 12376   002946                     u2970:
 12377   002946  800E               	bsf	___fladd@aexp^0,0,c
 12378   002948                     l3708:
 12379   002948  500E               	movf	___fladd@aexp^0,w,c
 12380   00294A  B4D8               	btfsc	status,2,c
 12381   00294C  EFAA  F014         	goto	u2981
 12382   002950  EFAC  F014         	goto	u2980
 12383   002954                     u2981:
 12384   002954  EFC1  F014         	goto	l3718
 12385   002958                     u2980:
 12386   002958  280E               	incf	___fladd@aexp^0,w,c
 12387   00295A  A4D8               	btfss	status,2,c
 12388   00295C  EFB2  F014         	goto	u2991
 12389   002960  EFB4  F014         	goto	u2990
 12390   002964                     u2991:
 12391   002964  EFBC  F014         	goto	l3714
 12392   002968                     u2990:
 12393   002968  0E00               	movlw	0
 12394   00296A  6E05               	movwf	___fladd@a^0,c
 12395   00296C  0E00               	movlw	0
 12396   00296E  6E06               	movwf	(___fladd@a+1)^0,c
 12397   002970  0E00               	movlw	0
 12398   002972  6E07               	movwf	(___fladd@a+2)^0,c
 12399   002974  0E00               	movlw	0
 12400   002976  6E08               	movwf	(___fladd@a+3)^0,c
 12401   002978                     l3714:
 12402   002978  8E07               	bsf	(___fladd@a+2)^0,7,c
 12403   00297A  0E00               	movlw	0
 12404   00297C  6E08               	movwf	(___fladd@a+3)^0,c
 12405   00297E  EFC9  F014         	goto	l3720
 12406   002982                     l3718:
 12407   002982  0E00               	movlw	0
 12408   002984  6E05               	movwf	___fladd@a^0,c
 12409   002986  0E00               	movlw	0
 12410   002988  6E06               	movwf	(___fladd@a+1)^0,c
 12411   00298A  0E00               	movlw	0
 12412   00298C  6E07               	movwf	(___fladd@a+2)^0,c
 12413   00298E  0E00               	movlw	0
 12414   002990  6E08               	movwf	(___fladd@a+3)^0,c
 12415   002992                     l3720:
 12416   002992  500F               	movf	___fladd@bexp^0,w,c
 12417   002994  5C0E               	subwf	___fladd@aexp^0,w,c
 12418   002996  B0D8               	btfsc	status,0,c
 12419   002998  EFD0  F014         	goto	u3001
 12420   00299C  EFD2  F014         	goto	u3000
 12421   0029A0                     u3001:
 12422   0029A0  EFF9  F014         	goto	l3756
 12423   0029A4                     u3000:
 12424   0029A4  AC0D               	btfss	___fladd@signs^0,6,c
 12425   0029A6  EFD7  F014         	goto	u3011
 12426   0029AA  EFD9  F014         	goto	u3010
 12427   0029AE                     u3011:
 12428   0029AE  EFDB  F014         	goto	l3726
 12429   0029B2                     u3010:
 12430   0029B2  0E80               	movlw	128
 12431   0029B4  1A0D               	xorwf	___fladd@signs^0,f,c
 12432   0029B6                     l3726:
 12433   0029B6  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 12434   0029BA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12435   0029BE  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 12436   0029C2  C001  F010         	movff	___fladd@b,___fladd@grs
 12437   0029C6  C005  F001         	movff	___fladd@a,___fladd@b
 12438   0029CA  C010  F005         	movff	___fladd@grs,___fladd@a
 12439   0029CE  C002  F010         	movff	___fladd@b+1,___fladd@grs
 12440   0029D2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 12441   0029D6  C010  F006         	movff	___fladd@grs,___fladd@a+1
 12442   0029DA  C003  F010         	movff	___fladd@b+2,___fladd@grs
 12443   0029DE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 12444   0029E2  C010  F007         	movff	___fladd@grs,___fladd@a+2
 12445   0029E6  C004  F010         	movff	___fladd@b+3,___fladd@grs
 12446   0029EA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 12447   0029EE  C010  F008         	movff	___fladd@grs,___fladd@a+3
 12448   0029F2                     l3756:
 12449   0029F2  0E00               	movlw	0
 12450   0029F4  6E10               	movwf	___fladd@grs^0,c
 12451   0029F6  500F               	movf	___fladd@bexp^0,w,c
 12452   0029F8  C00E  F009         	movff	___fladd@aexp,??___fladd
 12453   0029FC  6A0A               	clrf	(??___fladd+1)^0,c
 12454   0029FE  5E09               	subwf	??___fladd^0,f,c
 12455   002A00  0E00               	movlw	0
 12456   002A02  5A0A               	subwfb	(??___fladd+1)^0,f,c
 12457   002A04  BE0A               	btfsc	(??___fladd+1)^0,7,c
 12458   002A06  EF0E  F015         	goto	u3021
 12459   002A0A  500A               	movf	(??___fladd+1)^0,w,c
 12460   002A0C  E109               	bnz	u3020
 12461   002A0E  0E1A               	movlw	26
 12462   002A10  5C09               	subwf	??___fladd^0,w,c
 12463   002A12  A0D8               	btfss	status,0,c
 12464   002A14  EF0E  F015         	goto	u3021
 12465   002A18  EF10  F015         	goto	u3020
 12466   002A1C                     u3021:
 12467   002A1C  EF47  F015         	goto	l1156
 12468   002A20                     u3020:
 12469   002A20  5001               	movf	___fladd@b^0,w,c
 12470   002A22  1002               	iorwf	(___fladd@b+1)^0,w,c
 12471   002A24  1003               	iorwf	(___fladd@b+2)^0,w,c
 12472   002A26  1004               	iorwf	(___fladd@b+3)^0,w,c
 12473   002A28  A4D8               	btfss	status,2,c
 12474   002A2A  EF19  F015         	goto	u3031
 12475   002A2E  EF1C  F015         	goto	u3030
 12476   002A32                     u3031:
 12477   002A32  0E01               	movlw	1
 12478   002A34  EF1D  F015         	goto	u3040
 12479   002A38                     u3030:
 12480   002A38  0E00               	movlw	0
 12481   002A3A                     u3040:
 12482   002A3A  6E10               	movwf	___fladd@grs^0,c
 12483   002A3C  0E00               	movlw	0
 12484   002A3E  6E01               	movwf	___fladd@b^0,c
 12485   002A40  0E00               	movlw	0
 12486   002A42  6E02               	movwf	(___fladd@b+1)^0,c
 12487   002A44  0E00               	movlw	0
 12488   002A46  6E03               	movwf	(___fladd@b+2)^0,c
 12489   002A48  0E00               	movlw	0
 12490   002A4A  6E04               	movwf	(___fladd@b+3)^0,c
 12491   002A4C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12492   002A50  EF50  F015         	goto	l1155
 12493   002A54                     l1157:
 12494   002A54  A010               	btfss	___fladd@grs^0,0,c
 12495   002A56  EF2F  F015         	goto	u3051
 12496   002A5A  EF31  F015         	goto	u3050
 12497   002A5E                     u3051:
 12498   002A5E  EF37  F015         	goto	l3768
 12499   002A62                     u3050:
 12500   002A62  90D8               	bcf	status,0,c
 12501   002A64  3010               	rrcf	___fladd@grs^0,w,c
 12502   002A66  0901               	iorlw	1
 12503   002A68  6E10               	movwf	___fladd@grs^0,c
 12504   002A6A  EF39  F015         	goto	l3770
 12505   002A6E                     l3768:
 12506   002A6E  90D8               	bcf	status,0,c
 12507   002A70  3210               	rrcf	___fladd@grs^0,f,c
 12508   002A72                     l3770:
 12509   002A72  A001               	btfss	___fladd@b^0,0,c
 12510   002A74  EF3E  F015         	goto	u3061
 12511   002A78  EF40  F015         	goto	u3060
 12512   002A7C                     u3061:
 12513   002A7C  EF41  F015         	goto	l3774
 12514   002A80                     u3060:
 12515   002A80  8E10               	bsf	___fladd@grs^0,7,c
 12516   002A82                     l3774:
 12517   002A82  3404               	rlcf	(___fladd@b+3)^0,w,c
 12518   002A84  3204               	rrcf	(___fladd@b+3)^0,f,c
 12519   002A86  3203               	rrcf	(___fladd@b+2)^0,f,c
 12520   002A88  3202               	rrcf	(___fladd@b+1)^0,f,c
 12521   002A8A  3201               	rrcf	___fladd@b^0,f,c
 12522   002A8C  2A0F               	incf	___fladd@bexp^0,f,c
 12523   002A8E                     l1156:
 12524   002A8E  500E               	movf	___fladd@aexp^0,w,c
 12525   002A90  5C0F               	subwf	___fladd@bexp^0,w,c
 12526   002A92  A0D8               	btfss	status,0,c
 12527   002A94  EF4E  F015         	goto	u3071
 12528   002A98  EF50  F015         	goto	u3070
 12529   002A9C                     u3071:
 12530   002A9C  EF2A  F015         	goto	l1157
 12531   002AA0                     u3070:
 12532   002AA0                     l1155:
 12533   002AA0  BC0D               	btfsc	___fladd@signs^0,6,c
 12534   002AA2  EF55  F015         	goto	u3081
 12535   002AA6  EF57  F015         	goto	u3080
 12536   002AAA                     u3081:
 12537   002AAA  EF97  F015         	goto	l3802
 12538   002AAE                     u3080:
 12539   002AAE  500F               	movf	___fladd@bexp^0,w,c
 12540   002AB0  A4D8               	btfss	status,2,c
 12541   002AB2  EF5D  F015         	goto	u3091
 12542   002AB6  EF5F  F015         	goto	u3090
 12543   002ABA                     u3091:
 12544   002ABA  EF69  F015         	goto	l3784
 12545   002ABE                     u3090:
 12546   002ABE  0E00               	movlw	0
 12547   002AC0  6E01               	movwf	?___fladd^0,c
 12548   002AC2  0E00               	movlw	0
 12549   002AC4  6E02               	movwf	(?___fladd+1)^0,c
 12550   002AC6  0E00               	movlw	0
 12551   002AC8  6E03               	movwf	(?___fladd+2)^0,c
 12552   002ACA  0E00               	movlw	0
 12553   002ACC  6E04               	movwf	(?___fladd+3)^0,c
 12554   002ACE  EFB8  F016         	goto	l1164
 12555   002AD2                     l3784:
 12556   002AD2  5005               	movf	___fladd@a^0,w,c
 12557   002AD4  2601               	addwf	___fladd@b^0,f,c
 12558   002AD6  5006               	movf	(___fladd@a+1)^0,w,c
 12559   002AD8  2202               	addwfc	(___fladd@b+1)^0,f,c
 12560   002ADA  5007               	movf	(___fladd@a+2)^0,w,c
 12561   002ADC  2203               	addwfc	(___fladd@b+2)^0,f,c
 12562   002ADE  5008               	movf	(___fladd@a+3)^0,w,c
 12563   002AE0  2204               	addwfc	(___fladd@b+3)^0,f,c
 12564   002AE2  A004               	btfss	(___fladd@b+3)^0,0,c
 12565   002AE4  EF76  F015         	goto	u3101
 12566   002AE8  EF78  F015         	goto	u3100
 12567   002AEC                     u3101:
 12568   002AEC  EF24  F016         	goto	l3838
 12569   002AF0                     u3100:
 12570   002AF0  A010               	btfss	___fladd@grs^0,0,c
 12571   002AF2  EF7D  F015         	goto	u3111
 12572   002AF6  EF7F  F015         	goto	u3110
 12573   002AFA                     u3111:
 12574   002AFA  EF85  F015         	goto	l3792
 12575   002AFE                     u3110:
 12576   002AFE  90D8               	bcf	status,0,c
 12577   002B00  3010               	rrcf	___fladd@grs^0,w,c
 12578   002B02  0901               	iorlw	1
 12579   002B04  6E10               	movwf	___fladd@grs^0,c
 12580   002B06  EF87  F015         	goto	l3794
 12581   002B0A                     l3792:
 12582   002B0A  90D8               	bcf	status,0,c
 12583   002B0C  3210               	rrcf	___fladd@grs^0,f,c
 12584   002B0E                     l3794:
 12585   002B0E  A001               	btfss	___fladd@b^0,0,c
 12586   002B10  EF8C  F015         	goto	u3121
 12587   002B14  EF8E  F015         	goto	u3120
 12588   002B18                     u3121:
 12589   002B18  EF8F  F015         	goto	l3798
 12590   002B1C                     u3120:
 12591   002B1C  8E10               	bsf	___fladd@grs^0,7,c
 12592   002B1E                     l3798:
 12593   002B1E  3404               	rlcf	(___fladd@b+3)^0,w,c
 12594   002B20  3204               	rrcf	(___fladd@b+3)^0,f,c
 12595   002B22  3203               	rrcf	(___fladd@b+2)^0,f,c
 12596   002B24  3202               	rrcf	(___fladd@b+1)^0,f,c
 12597   002B26  3201               	rrcf	___fladd@b^0,f,c
 12598   002B28  2A0F               	incf	___fladd@bexp^0,f,c
 12599   002B2A  EF24  F016         	goto	l3838
 12600   002B2E                     l3802:
 12601   002B2E  5005               	movf	___fladd@a^0,w,c
 12602   002B30  5C01               	subwf	___fladd@b^0,w,c
 12603   002B32  5006               	movf	(___fladd@a+1)^0,w,c
 12604   002B34  5802               	subwfb	(___fladd@b+1)^0,w,c
 12605   002B36  5007               	movf	(___fladd@a+2)^0,w,c
 12606   002B38  5803               	subwfb	(___fladd@b+2)^0,w,c
 12607   002B3A  5004               	movf	(___fladd@b+3)^0,w,c
 12608   002B3C  0A80               	xorlw	128
 12609   002B3E  6E09               	movwf	??___fladd^0,c
 12610   002B40  5008               	movf	(___fladd@a+3)^0,w,c
 12611   002B42  0A80               	xorlw	128
 12612   002B44  5809               	subwfb	??___fladd^0,w,c
 12613   002B46  B0D8               	btfsc	status,0,c
 12614   002B48  EFA8  F015         	goto	u3131
 12615   002B4C  EFAA  F015         	goto	u3130
 12616   002B50                     u3131:
 12617   002B50  EFD5  F015         	goto	l3812
 12618   002B54                     u3130:
 12619   002B54  5001               	movf	___fladd@b^0,w,c
 12620   002B56  5C05               	subwf	___fladd@a^0,w,c
 12621   002B58  6E09               	movwf	??___fladd^0,c
 12622   002B5A  5002               	movf	(___fladd@b+1)^0,w,c
 12623   002B5C  5806               	subwfb	(___fladd@a+1)^0,w,c
 12624   002B5E  6E0A               	movwf	(??___fladd+1)^0,c
 12625   002B60  5003               	movf	(___fladd@b+2)^0,w,c
 12626   002B62  5807               	subwfb	(___fladd@a+2)^0,w,c
 12627   002B64  6E0B               	movwf	(??___fladd+2)^0,c
 12628   002B66  5004               	movf	(___fladd@b+3)^0,w,c
 12629   002B68  5808               	subwfb	(___fladd@a+3)^0,w,c
 12630   002B6A  6E0C               	movwf	(??___fladd+3)^0,c
 12631   002B6C  0EFF               	movlw	255
 12632   002B6E  2409               	addwf	??___fladd^0,w,c
 12633   002B70  6E01               	movwf	___fladd@b^0,c
 12634   002B72  0EFF               	movlw	255
 12635   002B74  200A               	addwfc	(??___fladd+1)^0,w,c
 12636   002B76  6E02               	movwf	(___fladd@b+1)^0,c
 12637   002B78  0EFF               	movlw	255
 12638   002B7A  200B               	addwfc	(??___fladd+2)^0,w,c
 12639   002B7C  6E03               	movwf	(___fladd@b+2)^0,c
 12640   002B7E  0EFF               	movlw	255
 12641   002B80  200C               	addwfc	(??___fladd+3)^0,w,c
 12642   002B82  6E04               	movwf	(___fladd@b+3)^0,c
 12643   002B84  0E80               	movlw	128
 12644   002B86  1A0D               	xorwf	___fladd@signs^0,f,c
 12645   002B88  6C10               	negf	___fladd@grs^0,c
 12646   002B8A  5010               	movf	___fladd@grs^0,w,c
 12647   002B8C  A4D8               	btfss	status,2,c
 12648   002B8E  EFCB  F015         	goto	u3141
 12649   002B92  EFCD  F015         	goto	u3140
 12650   002B96                     u3141:
 12651   002B96  EFDD  F015         	goto	l1172
 12652   002B9A                     u3140:
 12653   002B9A  0E01               	movlw	1
 12654   002B9C  2601               	addwf	___fladd@b^0,f,c
 12655   002B9E  0E00               	movlw	0
 12656   002BA0  2202               	addwfc	(___fladd@b+1)^0,f,c
 12657   002BA2  2203               	addwfc	(___fladd@b+2)^0,f,c
 12658   002BA4  2204               	addwfc	(___fladd@b+3)^0,f,c
 12659   002BA6  EFDD  F015         	goto	l1172
 12660   002BAA                     l3812:
 12661   002BAA  5005               	movf	___fladd@a^0,w,c
 12662   002BAC  5E01               	subwf	___fladd@b^0,f,c
 12663   002BAE  5006               	movf	(___fladd@a+1)^0,w,c
 12664   002BB0  5A02               	subwfb	(___fladd@b+1)^0,f,c
 12665   002BB2  5007               	movf	(___fladd@a+2)^0,w,c
 12666   002BB4  5A03               	subwfb	(___fladd@b+2)^0,f,c
 12667   002BB6  5008               	movf	(___fladd@a+3)^0,w,c
 12668   002BB8  5A04               	subwfb	(___fladd@b+3)^0,f,c
 12669   002BBA                     l1172:
 12670   002BBA  5001               	movf	___fladd@b^0,w,c
 12671   002BBC  1002               	iorwf	(___fladd@b+1)^0,w,c
 12672   002BBE  1003               	iorwf	(___fladd@b+2)^0,w,c
 12673   002BC0  1004               	iorwf	(___fladd@b+3)^0,w,c
 12674   002BC2  A4D8               	btfss	status,2,c
 12675   002BC4  EFE6  F015         	goto	u3151
 12676   002BC8  EFE8  F015         	goto	u3150
 12677   002BCC                     u3151:
 12678   002BCC  EF1D  F016         	goto	l3836
 12679   002BD0                     u3150:
 12680   002BD0  5010               	movf	___fladd@grs^0,w,c
 12681   002BD2  A4D8               	btfss	status,2,c
 12682   002BD4  EFEE  F015         	goto	u3161
 12683   002BD8  EFF0  F015         	goto	u3160
 12684   002BDC                     u3161:
 12685   002BDC  EF1D  F016         	goto	l3836
 12686   002BE0                     u3160:
 12687   002BE0  0E00               	movlw	0
 12688   002BE2  6E01               	movwf	?___fladd^0,c
 12689   002BE4  0E00               	movlw	0
 12690   002BE6  6E02               	movwf	(?___fladd+1)^0,c
 12691   002BE8  0E00               	movlw	0
 12692   002BEA  6E03               	movwf	(?___fladd+2)^0,c
 12693   002BEC  0E00               	movlw	0
 12694   002BEE  6E04               	movwf	(?___fladd+3)^0,c
 12695   002BF0  EFB8  F016         	goto	l1164
 12696   002BF4                     l3820:
 12697   002BF4  90D8               	bcf	status,0,c
 12698   002BF6  3601               	rlcf	___fladd@b^0,f,c
 12699   002BF8  3602               	rlcf	(___fladd@b+1)^0,f,c
 12700   002BFA  3603               	rlcf	(___fladd@b+2)^0,f,c
 12701   002BFC  3604               	rlcf	(___fladd@b+3)^0,f,c
 12702   002BFE  AE10               	btfss	___fladd@grs^0,7,c
 12703   002C00  EF04  F016         	goto	u3171
 12704   002C04  EF06  F016         	goto	u3170
 12705   002C08                     u3171:
 12706   002C08  EF07  F016         	goto	l3826
 12707   002C0C                     u3170:
 12708   002C0C  8001               	bsf	___fladd@b^0,0,c
 12709   002C0E                     l3826:
 12710   002C0E  A010               	btfss	___fladd@grs^0,0,c
 12711   002C10  EF0C  F016         	goto	u3181
 12712   002C14  EF0E  F016         	goto	u3180
 12713   002C18                     u3181:
 12714   002C18  EF12  F016         	goto	l3830
 12715   002C1C                     u3180:
 12716   002C1C  80D8               	bsf	status,0,c
 12717   002C1E  3610               	rlcf	___fladd@grs^0,f,c
 12718   002C20  EF14  F016         	goto	l3832
 12719   002C24                     l3830:
 12720   002C24  90D8               	bcf	status,0,c
 12721   002C26  3610               	rlcf	___fladd@grs^0,f,c
 12722   002C28                     l3832:
 12723   002C28  500F               	movf	___fladd@bexp^0,w,c
 12724   002C2A  B4D8               	btfsc	status,2,c
 12725   002C2C  EF1A  F016         	goto	u3191
 12726   002C30  EF1C  F016         	goto	u3190
 12727   002C34                     u3191:
 12728   002C34  EF1D  F016         	goto	l3836
 12729   002C38                     u3190:
 12730   002C38  060F               	decf	___fladd@bexp^0,f,c
 12731   002C3A                     l3836:
 12732   002C3A  AE03               	btfss	(___fladd@b+2)^0,7,c
 12733   002C3C  EF22  F016         	goto	u3201
 12734   002C40  EF24  F016         	goto	u3200
 12735   002C44                     u3201:
 12736   002C44  EFFA  F015         	goto	l3820
 12737   002C48                     u3200:
 12738   002C48                     l3838:
 12739   002C48  0E00               	movlw	0
 12740   002C4A  6E0E               	movwf	___fladd@aexp^0,c
 12741   002C4C  AE10               	btfss	___fladd@grs^0,7,c
 12742   002C4E  EF2B  F016         	goto	u3211
 12743   002C52  EF2D  F016         	goto	u3210
 12744   002C56                     u3211:
 12745   002C56  EF45  F016         	goto	l1181
 12746   002C5A                     u3210:
 12747   002C5A  C010  F009         	movff	___fladd@grs,??___fladd
 12748   002C5E  0E7F               	movlw	127
 12749   002C60  1609               	andwf	??___fladd^0,f,c
 12750   002C62  B4D8               	btfsc	status,2,c
 12751   002C64  EF36  F016         	goto	u3221
 12752   002C68  EF38  F016         	goto	u3220
 12753   002C6C                     u3221:
 12754   002C6C  EF3C  F016         	goto	l1182
 12755   002C70                     u3220:
 12756   002C70                     l3844:
 12757   002C70  0E01               	movlw	1
 12758   002C72  6E0E               	movwf	___fladd@aexp^0,c
 12759   002C74  EF45  F016         	goto	l1181
 12760   002C78                     l1182:
 12761   002C78  A001               	btfss	___fladd@b^0,0,c
 12762   002C7A  EF41  F016         	goto	u3231
 12763   002C7E  EF43  F016         	goto	u3230
 12764   002C82                     u3231:
 12765   002C82  EF45  F016         	goto	l1181
 12766   002C86                     u3230:
 12767   002C86  EF38  F016         	goto	l3844
 12768   002C8A                     l1181:
 12769   002C8A  500E               	movf	___fladd@aexp^0,w,c
 12770   002C8C  B4D8               	btfsc	status,2,c
 12771   002C8E  EF4B  F016         	goto	u3241
 12772   002C92  EF4D  F016         	goto	u3240
 12773   002C96                     u3241:
 12774   002C96  EF78  F016         	goto	l3856
 12775   002C9A                     u3240:
 12776   002C9A  0E01               	movlw	1
 12777   002C9C  2601               	addwf	___fladd@b^0,f,c
 12778   002C9E  0E00               	movlw	0
 12779   002CA0  2202               	addwfc	(___fladd@b+1)^0,f,c
 12780   002CA2  2203               	addwfc	(___fladd@b+2)^0,f,c
 12781   002CA4  2204               	addwfc	(___fladd@b+3)^0,f,c
 12782   002CA6  A004               	btfss	(___fladd@b+3)^0,0,c
 12783   002CA8  EF58  F016         	goto	u3251
 12784   002CAC  EF5A  F016         	goto	u3250
 12785   002CB0                     u3251:
 12786   002CB0  EF78  F016         	goto	l3856
 12787   002CB4                     u3250:
 12788   002CB4  C001  F009         	movff	___fladd@b,??___fladd
 12789   002CB8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 12790   002CBC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 12791   002CC0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 12792   002CC4  340C               	rlcf	(??___fladd+3)^0,w,c
 12793   002CC6  320C               	rrcf	(??___fladd+3)^0,f,c
 12794   002CC8  320B               	rrcf	(??___fladd+2)^0,f,c
 12795   002CCA  320A               	rrcf	(??___fladd+1)^0,f,c
 12796   002CCC  3209               	rrcf	??___fladd^0,f,c
 12797   002CCE  C009  F001         	movff	??___fladd,___fladd@b
 12798   002CD2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 12799   002CD6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 12800   002CDA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 12801   002CDE  280F               	incf	___fladd@bexp^0,w,c
 12802   002CE0  B4D8               	btfsc	status,2,c
 12803   002CE2  EF75  F016         	goto	u3261
 12804   002CE6  EF77  F016         	goto	u3260
 12805   002CEA                     u3261:
 12806   002CEA  EF78  F016         	goto	l3856
 12807   002CEE                     u3260:
 12808   002CEE  2A0F               	incf	___fladd@bexp^0,f,c
 12809   002CF0                     l3856:
 12810   002CF0  280F               	incf	___fladd@bexp^0,w,c
 12811   002CF2  B4D8               	btfsc	status,2,c
 12812   002CF4  EF7E  F016         	goto	u3271
 12813   002CF8  EF80  F016         	goto	u3270
 12814   002CFC                     u3271:
 12815   002CFC  EF88  F016         	goto	l3860
 12816   002D00                     u3270:
 12817   002D00  500F               	movf	___fladd@bexp^0,w,c
 12818   002D02  A4D8               	btfss	status,2,c
 12819   002D04  EF86  F016         	goto	u3281
 12820   002D08  EF88  F016         	goto	u3280
 12821   002D0C                     u3281:
 12822   002D0C  EF9A  F016         	goto	l3864
 12823   002D10                     u3280:
 12824   002D10                     l3860:
 12825   002D10  0E00               	movlw	0
 12826   002D12  6E01               	movwf	___fladd@b^0,c
 12827   002D14  0E00               	movlw	0
 12828   002D16  6E02               	movwf	(___fladd@b+1)^0,c
 12829   002D18  0E00               	movlw	0
 12830   002D1A  6E03               	movwf	(___fladd@b+2)^0,c
 12831   002D1C  0E00               	movlw	0
 12832   002D1E  6E04               	movwf	(___fladd@b+3)^0,c
 12833   002D20  500F               	movf	___fladd@bexp^0,w,c
 12834   002D22  A4D8               	btfss	status,2,c
 12835   002D24  EF96  F016         	goto	u3291
 12836   002D28  EF98  F016         	goto	u3290
 12837   002D2C                     u3291:
 12838   002D2C  EF9A  F016         	goto	l3864
 12839   002D30                     u3290:
 12840   002D30  0E00               	movlw	0
 12841   002D32  6E0D               	movwf	___fladd@signs^0,c
 12842   002D34                     l3864:
 12843   002D34  A00F               	btfss	___fladd@bexp^0,0,c
 12844   002D36  EF9F  F016         	goto	u3301
 12845   002D3A  EFA1  F016         	goto	u3300
 12846   002D3E                     u3301:
 12847   002D3E  EFA4  F016         	goto	l3868
 12848   002D42                     u3300:
 12849   002D42  8E03               	bsf	(___fladd@b+2)^0,7,c
 12850   002D44  EFA5  F016         	goto	l3870
 12851   002D48                     l3868:
 12852   002D48  9E03               	bcf	(___fladd@b+2)^0,7,c
 12853   002D4A                     l3870:
 12854   002D4A  90D8               	bcf	status,0,c
 12855   002D4C  300F               	rrcf	___fladd@bexp^0,w,c
 12856   002D4E  6E04               	movwf	(___fladd@b+3)^0,c
 12857   002D50  AE0D               	btfss	___fladd@signs^0,7,c
 12858   002D52  EFAD  F016         	goto	u3311
 12859   002D56  EFAF  F016         	goto	u3310
 12860   002D5A                     u3311:
 12861   002D5A  EFB0  F016         	goto	l3876
 12862   002D5E                     u3310:
 12863   002D5E  8E04               	bsf	(___fladd@b+3)^0,7,c
 12864   002D60                     l3876:
 12865   002D60  C001  F001         	movff	___fladd@b,?___fladd
 12866   002D64  C002  F002         	movff	___fladd@b+1,?___fladd+1
 12867   002D68  C003  F003         	movff	___fladd@b+2,?___fladd+2
 12868   002D6C  C004  F004         	movff	___fladd@b+3,?___fladd+3
 12869   002D70                     l1164:
 12870   002D70  0012               	return		;funcret
 12871   002D72                     __end_of___fladd:
 12872                           	callstack 0
 12873                           
 12874 ;; *************** function ___flmul *****************
 12875 ;; Defined at:
 12876 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 12877 ;; Parameters:    Size  Location     Type
 12878 ;;  b               4   16[COMRAM] unsigned char 
 12879 ;;  a               4   20[COMRAM] unsigned char 
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;  prod            4   35[COMRAM] struct .
 12882 ;;  grs             4   29[COMRAM] unsigned long 
 12883 ;;  temp            2   39[COMRAM] struct .
 12884 ;;  bexp            1   34[COMRAM] unsigned char 
 12885 ;;  aexp            1   33[COMRAM] unsigned char 
 12886 ;;  sign            1   28[COMRAM] unsigned char 
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  4   16[COMRAM] unsigned char 
 12889 ;; Registers used:
 12890 ;;		wreg, status,2, status,0, prodl, prodh
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12896 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12897 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12898 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12899 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12900 ;;Total ram usage:       25 bytes
 12901 ;; Hardware stack levels used: 1
 12902 ;; Hardware stack levels required when called: 1
 12903 ;; This function calls:
 12904 ;;		Nothing
 12905 ;; This function is called by:
 12906 ;;		_Colour_decider
 12907 ;;		_turnRight45
 12908 ;;		_turnLeft45
 12909 ;;		_reverseOneBlock
 12910 ;;		_ForwardOneBlock
 12911 ;;		_Forwardhalfblock
 12912 ;;		_efgtoa
 12913 ;;		_Backhalfblock
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917                           	psect	text69
 12918   002D72                     __ptext69:
 12919                           	callstack 0
 12920   002D72                     ___flmul:
 12921                           	callstack 25
 12922   002D72  5014               	movf	(___flmul@b+3)^0,w,c
 12923   002D74  0B80               	andlw	128
 12924   002D76  6E1D               	movwf	___flmul@sign^0,c
 12925   002D78  5014               	movf	(___flmul@b+3)^0,w,c
 12926   002D7A  2414               	addwf	(___flmul@b+3)^0,w,c
 12927   002D7C  6E23               	movwf	___flmul@bexp^0,c
 12928   002D7E  AE13               	btfss	(___flmul@b+2)^0,7,c
 12929   002D80  EFC4  F016         	goto	u3741
 12930   002D84  EFC6  F016         	goto	u3740
 12931   002D88                     u3741:
 12932   002D88  EFC7  F016         	goto	l4150
 12933   002D8C                     u3740:
 12934   002D8C  8023               	bsf	___flmul@bexp^0,0,c
 12935   002D8E                     l4150:
 12936   002D8E  5023               	movf	___flmul@bexp^0,w,c
 12937   002D90  B4D8               	btfsc	status,2,c
 12938   002D92  EFCD  F016         	goto	u3751
 12939   002D96  EFCF  F016         	goto	u3750
 12940   002D9A                     u3751:
 12941   002D9A  EFE2  F016         	goto	l4158
 12942   002D9E                     u3750:
 12943   002D9E  2823               	incf	___flmul@bexp^0,w,c
 12944   002DA0  A4D8               	btfss	status,2,c
 12945   002DA2  EFD5  F016         	goto	u3761
 12946   002DA6  EFD7  F016         	goto	u3760
 12947   002DAA                     u3761:
 12948   002DAA  EFDF  F016         	goto	l4156
 12949   002DAE                     u3760:
 12950   002DAE  0E00               	movlw	0
 12951   002DB0  6E11               	movwf	___flmul@b^0,c
 12952   002DB2  0E00               	movlw	0
 12953   002DB4  6E12               	movwf	(___flmul@b+1)^0,c
 12954   002DB6  0E00               	movlw	0
 12955   002DB8  6E13               	movwf	(___flmul@b+2)^0,c
 12956   002DBA  0E00               	movlw	0
 12957   002DBC  6E14               	movwf	(___flmul@b+3)^0,c
 12958   002DBE                     l4156:
 12959   002DBE  8E13               	bsf	(___flmul@b+2)^0,7,c
 12960   002DC0  EFEA  F016         	goto	l4160
 12961   002DC4                     l4158:
 12962   002DC4  0E00               	movlw	0
 12963   002DC6  6E11               	movwf	___flmul@b^0,c
 12964   002DC8  0E00               	movlw	0
 12965   002DCA  6E12               	movwf	(___flmul@b+1)^0,c
 12966   002DCC  0E00               	movlw	0
 12967   002DCE  6E13               	movwf	(___flmul@b+2)^0,c
 12968   002DD0  0E00               	movlw	0
 12969   002DD2  6E14               	movwf	(___flmul@b+3)^0,c
 12970   002DD4                     l4160:
 12971   002DD4  5018               	movf	(___flmul@a+3)^0,w,c
 12972   002DD6  0B80               	andlw	128
 12973   002DD8  1A1D               	xorwf	___flmul@sign^0,f,c
 12974   002DDA  5018               	movf	(___flmul@a+3)^0,w,c
 12975   002DDC  2418               	addwf	(___flmul@a+3)^0,w,c
 12976   002DDE  6E22               	movwf	___flmul@aexp^0,c
 12977   002DE0  AE17               	btfss	(___flmul@a+2)^0,7,c
 12978   002DE2  EFF5  F016         	goto	u3771
 12979   002DE6  EFF7  F016         	goto	u3770
 12980   002DEA                     u3771:
 12981   002DEA  EFF8  F016         	goto	l4168
 12982   002DEE                     u3770:
 12983   002DEE  8022               	bsf	___flmul@aexp^0,0,c
 12984   002DF0                     l4168:
 12985   002DF0  5022               	movf	___flmul@aexp^0,w,c
 12986   002DF2  B4D8               	btfsc	status,2,c
 12987   002DF4  EFFE  F016         	goto	u3781
 12988   002DF8  EF00  F017         	goto	u3780
 12989   002DFC                     u3781:
 12990   002DFC  EF13  F017         	goto	l4176
 12991   002E00                     u3780:
 12992   002E00  2822               	incf	___flmul@aexp^0,w,c
 12993   002E02  A4D8               	btfss	status,2,c
 12994   002E04  EF06  F017         	goto	u3791
 12995   002E08  EF08  F017         	goto	u3790
 12996   002E0C                     u3791:
 12997   002E0C  EF10  F017         	goto	l4174
 12998   002E10                     u3790:
 12999   002E10  0E00               	movlw	0
 13000   002E12  6E15               	movwf	___flmul@a^0,c
 13001   002E14  0E00               	movlw	0
 13002   002E16  6E16               	movwf	(___flmul@a+1)^0,c
 13003   002E18  0E00               	movlw	0
 13004   002E1A  6E17               	movwf	(___flmul@a+2)^0,c
 13005   002E1C  0E00               	movlw	0
 13006   002E1E  6E18               	movwf	(___flmul@a+3)^0,c
 13007   002E20                     l4174:
 13008   002E20  8E17               	bsf	(___flmul@a+2)^0,7,c
 13009   002E22  EF1B  F017         	goto	l1241
 13010   002E26                     l4176:
 13011   002E26  0E00               	movlw	0
 13012   002E28  6E15               	movwf	___flmul@a^0,c
 13013   002E2A  0E00               	movlw	0
 13014   002E2C  6E16               	movwf	(___flmul@a+1)^0,c
 13015   002E2E  0E00               	movlw	0
 13016   002E30  6E17               	movwf	(___flmul@a+2)^0,c
 13017   002E32  0E00               	movlw	0
 13018   002E34  6E18               	movwf	(___flmul@a+3)^0,c
 13019   002E36                     l1241:
 13020   002E36  5022               	movf	___flmul@aexp^0,w,c
 13021   002E38  B4D8               	btfsc	status,2,c
 13022   002E3A  EF21  F017         	goto	u3801
 13023   002E3E  EF23  F017         	goto	u3800
 13024   002E42                     u3801:
 13025   002E42  EF2B  F017         	goto	l4180
 13026   002E46                     u3800:
 13027   002E46  5023               	movf	___flmul@bexp^0,w,c
 13028   002E48  A4D8               	btfss	status,2,c
 13029   002E4A  EF29  F017         	goto	u3811
 13030   002E4E  EF2B  F017         	goto	u3810
 13031   002E52                     u3811:
 13032   002E52  EF35  F017         	goto	l4184
 13033   002E56                     u3810:
 13034   002E56                     l4180:
 13035   002E56  0E00               	movlw	0
 13036   002E58  6E11               	movwf	?___flmul^0,c
 13037   002E5A  0E00               	movlw	0
 13038   002E5C  6E12               	movwf	(?___flmul+1)^0,c
 13039   002E5E  0E00               	movlw	0
 13040   002E60  6E13               	movwf	(?___flmul+2)^0,c
 13041   002E62  0E00               	movlw	0
 13042   002E64  6E14               	movwf	(?___flmul+3)^0,c
 13043   002E66  EFCD  F018         	goto	l1245
 13044   002E6A                     l4184:
 13045   002E6A  5017               	movf	(___flmul@a+2)^0,w,c
 13046   002E6C  0211               	mulwf	___flmul@b^0,c
 13047   002E6E  CFF3 F028          	movff	prodl,___flmul@temp
 13048   002E72  CFF4 F029          	movff	prodh,___flmul@temp+1
 13049   002E76  5028               	movf	___flmul@temp^0,w,c
 13050   002E78  6E1E               	movwf	___flmul@grs^0,c
 13051   002E7A  6A1F               	clrf	(___flmul@grs+1)^0,c
 13052   002E7C  6A20               	clrf	(___flmul@grs+2)^0,c
 13053   002E7E  6A21               	clrf	(___flmul@grs+3)^0,c
 13054   002E80  5029               	movf	(___flmul@temp+1)^0,w,c
 13055   002E82  6E24               	movwf	___flmul@prod^0,c
 13056   002E84  6A25               	clrf	(___flmul@prod+1)^0,c
 13057   002E86  6A26               	clrf	(___flmul@prod+2)^0,c
 13058   002E88  6A27               	clrf	(___flmul@prod+3)^0,c
 13059   002E8A  5016               	movf	(___flmul@a+1)^0,w,c
 13060   002E8C  0212               	mulwf	(___flmul@b+1)^0,c
 13061   002E8E  CFF3 F028          	movff	prodl,___flmul@temp
 13062   002E92  CFF4 F029          	movff	prodh,___flmul@temp+1
 13063   002E96  5028               	movf	___flmul@temp^0,w,c
 13064   002E98  261E               	addwf	___flmul@grs^0,f,c
 13065   002E9A  0E00               	movlw	0
 13066   002E9C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13067   002E9E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13068   002EA0  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13069   002EA2  5029               	movf	(___flmul@temp+1)^0,w,c
 13070   002EA4  2624               	addwf	___flmul@prod^0,f,c
 13071   002EA6  0E00               	movlw	0
 13072   002EA8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13073   002EAA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13074   002EAC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13075   002EAE  5015               	movf	___flmul@a^0,w,c
 13076   002EB0  0213               	mulwf	(___flmul@b+2)^0,c
 13077   002EB2  CFF3 F028          	movff	prodl,___flmul@temp
 13078   002EB6  CFF4 F029          	movff	prodh,___flmul@temp+1
 13079   002EBA  5028               	movf	___flmul@temp^0,w,c
 13080   002EBC  261E               	addwf	___flmul@grs^0,f,c
 13081   002EBE  0E00               	movlw	0
 13082   002EC0  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13083   002EC2  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13084   002EC4  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13085   002EC6  5029               	movf	(___flmul@temp+1)^0,w,c
 13086   002EC8  2624               	addwf	___flmul@prod^0,f,c
 13087   002ECA  0E00               	movlw	0
 13088   002ECC  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13089   002ECE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13090   002ED0  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13091   002ED2  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13092   002ED6  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13093   002EDA  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13094   002EDE  6A1E               	clrf	___flmul@grs^0,c
 13095   002EE0  5015               	movf	___flmul@a^0,w,c
 13096   002EE2  0212               	mulwf	(___flmul@b+1)^0,c
 13097   002EE4  CFF3 F028          	movff	prodl,___flmul@temp
 13098   002EE8  CFF4 F029          	movff	prodh,___flmul@temp+1
 13099   002EEC  5028               	movf	___flmul@temp^0,w,c
 13100   002EEE  261E               	addwf	___flmul@grs^0,f,c
 13101   002EF0  5029               	movf	(___flmul@temp+1)^0,w,c
 13102   002EF2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13103   002EF4  0E00               	movlw	0
 13104   002EF6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13105   002EF8  0E00               	movlw	0
 13106   002EFA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13107   002EFC  5016               	movf	(___flmul@a+1)^0,w,c
 13108   002EFE  0211               	mulwf	___flmul@b^0,c
 13109   002F00  CFF3 F028          	movff	prodl,___flmul@temp
 13110   002F04  CFF4 F029          	movff	prodh,___flmul@temp+1
 13111   002F08  5028               	movf	___flmul@temp^0,w,c
 13112   002F0A  261E               	addwf	___flmul@grs^0,f,c
 13113   002F0C  5029               	movf	(___flmul@temp+1)^0,w,c
 13114   002F0E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13115   002F10  0E00               	movlw	0
 13116   002F12  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13117   002F14  0E00               	movlw	0
 13118   002F16  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13119   002F18  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13120   002F1C  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13121   002F20  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13122   002F24  6A1E               	clrf	___flmul@grs^0,c
 13123   002F26  5015               	movf	___flmul@a^0,w,c
 13124   002F28  0211               	mulwf	___flmul@b^0,c
 13125   002F2A  CFF3 F028          	movff	prodl,___flmul@temp
 13126   002F2E  CFF4 F029          	movff	prodh,___flmul@temp+1
 13127   002F32  5028               	movf	___flmul@temp^0,w,c
 13128   002F34  261E               	addwf	___flmul@grs^0,f,c
 13129   002F36  5029               	movf	(___flmul@temp+1)^0,w,c
 13130   002F38  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13131   002F3A  0E00               	movlw	0
 13132   002F3C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13133   002F3E  0E00               	movlw	0
 13134   002F40  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13135   002F42  5017               	movf	(___flmul@a+2)^0,w,c
 13136   002F44  0212               	mulwf	(___flmul@b+1)^0,c
 13137   002F46  CFF3 F028          	movff	prodl,___flmul@temp
 13138   002F4A  CFF4 F029          	movff	prodh,___flmul@temp+1
 13139   002F4E  5028               	movf	___flmul@temp^0,w,c
 13140   002F50  2624               	addwf	___flmul@prod^0,f,c
 13141   002F52  5029               	movf	(___flmul@temp+1)^0,w,c
 13142   002F54  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13143   002F56  0E00               	movlw	0
 13144   002F58  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13145   002F5A  0E00               	movlw	0
 13146   002F5C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13147   002F5E  5016               	movf	(___flmul@a+1)^0,w,c
 13148   002F60  0213               	mulwf	(___flmul@b+2)^0,c
 13149   002F62  CFF3 F028          	movff	prodl,___flmul@temp
 13150   002F66  CFF4 F029          	movff	prodh,___flmul@temp+1
 13151   002F6A  5028               	movf	___flmul@temp^0,w,c
 13152   002F6C  2624               	addwf	___flmul@prod^0,f,c
 13153   002F6E  5029               	movf	(___flmul@temp+1)^0,w,c
 13154   002F70  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13155   002F72  0E00               	movlw	0
 13156   002F74  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13157   002F76  0E00               	movlw	0
 13158   002F78  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13159   002F7A  5017               	movf	(___flmul@a+2)^0,w,c
 13160   002F7C  0213               	mulwf	(___flmul@b+2)^0,c
 13161   002F7E  CFF3 F028          	movff	prodl,___flmul@temp
 13162   002F82  CFF4 F029          	movff	prodh,___flmul@temp+1
 13163   002F86  5028               	movf	___flmul@temp^0,w,c
 13164   002F88  6E19               	movwf	??___flmul^0,c
 13165   002F8A  5029               	movf	(___flmul@temp+1)^0,w,c
 13166   002F8C  6E1A               	movwf	(??___flmul+1)^0,c
 13167   002F8E  6A1B               	clrf	(??___flmul+2)^0,c
 13168   002F90  6A1C               	clrf	(??___flmul+3)^0,c
 13169   002F92  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 13170   002F96  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 13171   002F9A  C019  F01A         	movff	??___flmul,??___flmul+1
 13172   002F9E  6A19               	clrf	??___flmul^0,c
 13173   002FA0  5019               	movf	??___flmul^0,w,c
 13174   002FA2  2624               	addwf	___flmul@prod^0,f,c
 13175   002FA4  501A               	movf	(??___flmul+1)^0,w,c
 13176   002FA6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13177   002FA8  501B               	movf	(??___flmul+2)^0,w,c
 13178   002FAA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13179   002FAC  501C               	movf	(??___flmul+3)^0,w,c
 13180   002FAE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13181   002FB0  C01E  F019         	movff	___flmul@grs,??___flmul
 13182   002FB4  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 13183   002FB8  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 13184   002FBC  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 13185   002FC0  0E19               	movlw	25
 13186   002FC2  EFE8  F017         	goto	u3820
 13187   002FC6                     u3825:
 13188   002FC6  90D8               	bcf	status,0,c
 13189   002FC8  321C               	rrcf	(??___flmul+3)^0,f,c
 13190   002FCA  321B               	rrcf	(??___flmul+2)^0,f,c
 13191   002FCC  321A               	rrcf	(??___flmul+1)^0,f,c
 13192   002FCE  3219               	rrcf	??___flmul^0,f,c
 13193   002FD0                     u3820:
 13194   002FD0  2EE8               	decfsz	wreg,f,c
 13195   002FD2  EFE3  F017         	goto	u3825
 13196   002FD6  5019               	movf	??___flmul^0,w,c
 13197   002FD8  2624               	addwf	___flmul@prod^0,f,c
 13198   002FDA  501A               	movf	(??___flmul+1)^0,w,c
 13199   002FDC  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13200   002FDE  501B               	movf	(??___flmul+2)^0,w,c
 13201   002FE0  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13202   002FE2  501C               	movf	(??___flmul+3)^0,w,c
 13203   002FE4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13204   002FE6  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13205   002FEA  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13206   002FEE  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13207   002FF2  6A1E               	clrf	___flmul@grs^0,c
 13208   002FF4  5022               	movf	___flmul@aexp^0,w,c
 13209   002FF6  C023  F019         	movff	___flmul@bexp,??___flmul
 13210   002FFA  6A1A               	clrf	(??___flmul+1)^0,c
 13211   002FFC  2619               	addwf	??___flmul^0,f,c
 13212   002FFE  0E00               	movlw	0
 13213   003000  221A               	addwfc	(??___flmul+1)^0,f,c
 13214   003002  0E82               	movlw	130
 13215   003004  2419               	addwf	??___flmul^0,w,c
 13216   003006  6E28               	movwf	___flmul@temp^0,c
 13217   003008  0EFF               	movlw	255
 13218   00300A  201A               	addwfc	(??___flmul+1)^0,w,c
 13219   00300C  6E29               	movwf	(___flmul@temp+1)^0,c
 13220   00300E  EF1E  F018         	goto	l4232
 13221   003012                     l4226:
 13222   003012  90D8               	bcf	status,0,c
 13223   003014  3624               	rlcf	___flmul@prod^0,f,c
 13224   003016  3625               	rlcf	(___flmul@prod+1)^0,f,c
 13225   003018  3626               	rlcf	(___flmul@prod+2)^0,f,c
 13226   00301A  3627               	rlcf	(___flmul@prod+3)^0,f,c
 13227   00301C  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13228   00301E  EF13  F018         	goto	u3831
 13229   003022  EF15  F018         	goto	u3830
 13230   003026                     u3831:
 13231   003026  EF16  F018         	goto	l1248
 13232   00302A                     u3830:
 13233   00302A  8024               	bsf	___flmul@prod^0,0,c
 13234   00302C                     l1248:
 13235   00302C  90D8               	bcf	status,0,c
 13236   00302E  361E               	rlcf	___flmul@grs^0,f,c
 13237   003030  361F               	rlcf	(___flmul@grs+1)^0,f,c
 13238   003032  3620               	rlcf	(___flmul@grs+2)^0,f,c
 13239   003034  3621               	rlcf	(___flmul@grs+3)^0,f,c
 13240   003036  0628               	decf	___flmul@temp^0,f,c
 13241   003038  A0D8               	btfss	status,0,c
 13242   00303A  0629               	decf	(___flmul@temp+1)^0,f,c
 13243   00303C                     l4232:
 13244   00303C  AE26               	btfss	(___flmul@prod+2)^0,7,c
 13245   00303E  EF23  F018         	goto	u3841
 13246   003042  EF25  F018         	goto	u3840
 13247   003046                     u3841:
 13248   003046  EF09  F018         	goto	l4226
 13249   00304A                     u3840:
 13250   00304A  0E00               	movlw	0
 13251   00304C  6E22               	movwf	___flmul@aexp^0,c
 13252   00304E  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13253   003050  EF2C  F018         	goto	u3851
 13254   003054  EF2E  F018         	goto	u3850
 13255   003058                     u3851:
 13256   003058  EF52  F018         	goto	l1250
 13257   00305C                     u3850:
 13258   00305C  0EFF               	movlw	255
 13259   00305E  141E               	andwf	___flmul@grs^0,w,c
 13260   003060  6E19               	movwf	??___flmul^0,c
 13261   003062  0EFF               	movlw	255
 13262   003064  141F               	andwf	(___flmul@grs+1)^0,w,c
 13263   003066  6E1A               	movwf	(??___flmul+1)^0,c
 13264   003068  0EFF               	movlw	255
 13265   00306A  1420               	andwf	(___flmul@grs+2)^0,w,c
 13266   00306C  6E1B               	movwf	(??___flmul+2)^0,c
 13267   00306E  0E7F               	movlw	127
 13268   003070  1421               	andwf	(___flmul@grs+3)^0,w,c
 13269   003072  6E1C               	movwf	(??___flmul+3)^0,c
 13270   003074  5019               	movf	??___flmul^0,w,c
 13271   003076  101A               	iorwf	(??___flmul+1)^0,w,c
 13272   003078  101B               	iorwf	(??___flmul+2)^0,w,c
 13273   00307A  101C               	iorwf	(??___flmul+3)^0,w,c
 13274   00307C  B4D8               	btfsc	status,2,c
 13275   00307E  EF43  F018         	goto	u3861
 13276   003082  EF45  F018         	goto	u3860
 13277   003086                     u3861:
 13278   003086  EF49  F018         	goto	l1251
 13279   00308A                     u3860:
 13280   00308A                     l4240:
 13281   00308A  0E01               	movlw	1
 13282   00308C  6E22               	movwf	___flmul@aexp^0,c
 13283   00308E  EF52  F018         	goto	l1250
 13284   003092                     l1251:
 13285   003092  A024               	btfss	___flmul@prod^0,0,c
 13286   003094  EF4E  F018         	goto	u3871
 13287   003098  EF50  F018         	goto	u3870
 13288   00309C                     u3871:
 13289   00309C  EF52  F018         	goto	l1250
 13290   0030A0                     u3870:
 13291   0030A0  EF45  F018         	goto	l4240
 13292   0030A4                     l1250:
 13293   0030A4  5022               	movf	___flmul@aexp^0,w,c
 13294   0030A6  B4D8               	btfsc	status,2,c
 13295   0030A8  EF58  F018         	goto	u3881
 13296   0030AC  EF5A  F018         	goto	u3880
 13297   0030B0                     u3881:
 13298   0030B0  EF7E  F018         	goto	l4252
 13299   0030B4                     u3880:
 13300   0030B4  0E01               	movlw	1
 13301   0030B6  2624               	addwf	___flmul@prod^0,f,c
 13302   0030B8  0E00               	movlw	0
 13303   0030BA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13304   0030BC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13305   0030BE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13306   0030C0  A027               	btfss	(___flmul@prod+3)^0,0,c
 13307   0030C2  EF65  F018         	goto	u3891
 13308   0030C6  EF67  F018         	goto	u3890
 13309   0030CA                     u3891:
 13310   0030CA  EF7E  F018         	goto	l4252
 13311   0030CE                     u3890:
 13312   0030CE  C024  F019         	movff	___flmul@prod,??___flmul
 13313   0030D2  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 13314   0030D6  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 13315   0030DA  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 13316   0030DE  341C               	rlcf	(??___flmul+3)^0,w,c
 13317   0030E0  321C               	rrcf	(??___flmul+3)^0,f,c
 13318   0030E2  321B               	rrcf	(??___flmul+2)^0,f,c
 13319   0030E4  321A               	rrcf	(??___flmul+1)^0,f,c
 13320   0030E6  3219               	rrcf	??___flmul^0,f,c
 13321   0030E8  C019  F024         	movff	??___flmul,___flmul@prod
 13322   0030EC  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 13323   0030F0  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 13324   0030F4  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 13325   0030F8  4A28               	infsnz	___flmul@temp^0,f,c
 13326   0030FA  2A29               	incf	(___flmul@temp+1)^0,f,c
 13327   0030FC                     l4252:
 13328   0030FC  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13329   0030FE  EF89  F018         	goto	u3901
 13330   003102  5029               	movf	(___flmul@temp+1)^0,w,c
 13331   003104  E108               	bnz	u3900
 13332   003106  2828               	incf	___flmul@temp^0,w,c
 13333   003108  A0D8               	btfss	status,0,c
 13334   00310A  EF89  F018         	goto	u3901
 13335   00310E  EF8B  F018         	goto	u3900
 13336   003112                     u3901:
 13337   003112  EF95  F018         	goto	l4256
 13338   003116                     u3900:
 13339   003116  0E00               	movlw	0
 13340   003118  6E24               	movwf	___flmul@prod^0,c
 13341   00311A  0E00               	movlw	0
 13342   00311C  6E25               	movwf	(___flmul@prod+1)^0,c
 13343   00311E  0E80               	movlw	128
 13344   003120  6E26               	movwf	(___flmul@prod+2)^0,c
 13345   003122  0E7F               	movlw	127
 13346   003124  6E27               	movwf	(___flmul@prod+3)^0,c
 13347   003126  EFC3  F018         	goto	l4268
 13348   00312A                     l4256:
 13349   00312A  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13350   00312C  EFA2  F018         	goto	u3910
 13351   003130  5029               	movf	(___flmul@temp+1)^0,w,c
 13352   003132  E106               	bnz	u3911
 13353   003134  0428               	decf	___flmul@temp^0,w,c
 13354   003136  B0D8               	btfsc	status,0,c
 13355   003138  EFA0  F018         	goto	u3911
 13356   00313C  EFA2  F018         	goto	u3910
 13357   003140                     u3911:
 13358   003140  EFAE  F018         	goto	l1258
 13359   003144                     u3910:
 13360   003144  0E00               	movlw	0
 13361   003146  6E24               	movwf	___flmul@prod^0,c
 13362   003148  0E00               	movlw	0
 13363   00314A  6E25               	movwf	(___flmul@prod+1)^0,c
 13364   00314C  0E00               	movlw	0
 13365   00314E  6E26               	movwf	(___flmul@prod+2)^0,c
 13366   003150  0E00               	movlw	0
 13367   003152  6E27               	movwf	(___flmul@prod+3)^0,c
 13368   003154  0E00               	movlw	0
 13369   003156  6E1D               	movwf	___flmul@sign^0,c
 13370   003158  EFC3  F018         	goto	l4268
 13371   00315C                     l1258:
 13372   00315C  C028  F023         	movff	___flmul@temp,___flmul@bexp
 13373   003160  0EFF               	movlw	255
 13374   003162  1624               	andwf	___flmul@prod^0,f,c
 13375   003164  0EFF               	movlw	255
 13376   003166  1625               	andwf	(___flmul@prod+1)^0,f,c
 13377   003168  0E7F               	movlw	127
 13378   00316A  1626               	andwf	(___flmul@prod+2)^0,f,c
 13379   00316C  0E00               	movlw	0
 13380   00316E  1627               	andwf	(___flmul@prod+3)^0,f,c
 13381   003170  A023               	btfss	___flmul@bexp^0,0,c
 13382   003172  EFBD  F018         	goto	u3921
 13383   003176  EFBF  F018         	goto	u3920
 13384   00317A                     u3921:
 13385   00317A  EFC0  F018         	goto	l4266
 13386   00317E                     u3920:
 13387   00317E  8E26               	bsf	(___flmul@prod+2)^0,7,c
 13388   003180                     l4266:
 13389   003180  90D8               	bcf	status,0,c
 13390   003182  3023               	rrcf	___flmul@bexp^0,w,c
 13391   003184  6E27               	movwf	(___flmul@prod+3)^0,c
 13392   003186                     l4268:
 13393   003186  501D               	movf	___flmul@sign^0,w,c
 13394   003188  1227               	iorwf	(___flmul@prod+3)^0,f,c
 13395   00318A  C024  F011         	movff	___flmul@prod,?___flmul
 13396   00318E  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 13397   003192  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 13398   003196  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 13399   00319A                     l1245:
 13400   00319A  0012               	return		;funcret
 13401   00319C                     __end_of___flmul:
 13402                           	callstack 0
 13403                           
 13404 ;; *************** function ___flge *****************
 13405 ;; Defined at:
 13406 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;  ff1             4   41[COMRAM] unsigned char 
 13409 ;;  ff2             4   45[COMRAM] unsigned char 
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;		None               void
 13414 ;; Registers used:
 13415 ;;		wreg, status,2, status,0
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13424 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13425 ;;Total ram usage:       12 bytes
 13426 ;; Hardware stack levels used: 1
 13427 ;; Hardware stack levels required when called: 1
 13428 ;; This function calls:
 13429 ;;		Nothing
 13430 ;; This function is called by:
 13431 ;;		_Colour_decider
 13432 ;;		_efgtoa
 13433 ;; This function uses a non-reentrant model
 13434 ;;
 13435                           
 13436                           	psect	text70
 13437   0048DE                     __ptext70:
 13438                           	callstack 0
 13439   0048DE                     ___flge:
 13440                           	callstack 25
 13441   0048DE  0E00               	movlw	0
 13442   0048E0  142A               	andwf	___flge@ff1^0,w,c
 13443   0048E2  6E32               	movwf	??___flge^0,c
 13444   0048E4  0E00               	movlw	0
 13445   0048E6  142B               	andwf	(___flge@ff1+1)^0,w,c
 13446   0048E8  6E33               	movwf	(??___flge+1)^0,c
 13447   0048EA  0E80               	movlw	128
 13448   0048EC  142C               	andwf	(___flge@ff1+2)^0,w,c
 13449   0048EE  6E34               	movwf	(??___flge+2)^0,c
 13450   0048F0  0E7F               	movlw	127
 13451   0048F2  142D               	andwf	(___flge@ff1+3)^0,w,c
 13452   0048F4  6E35               	movwf	(??___flge+3)^0,c
 13453   0048F6  5032               	movf	??___flge^0,w,c
 13454   0048F8  1033               	iorwf	(??___flge+1)^0,w,c
 13455   0048FA  1034               	iorwf	(??___flge+2)^0,w,c
 13456   0048FC  1035               	iorwf	(??___flge+3)^0,w,c
 13457   0048FE  A4D8               	btfss	status,2,c
 13458   004900  EF84  F024         	goto	u3961
 13459   004904  EF86  F024         	goto	u3960
 13460   004908                     u3961:
 13461   004908  EF8E  F024         	goto	l4300
 13462   00490C                     u3960:
 13463   00490C  0E00               	movlw	0
 13464   00490E  6E2A               	movwf	___flge@ff1^0,c
 13465   004910  0E00               	movlw	0
 13466   004912  6E2B               	movwf	(___flge@ff1+1)^0,c
 13467   004914  0E00               	movlw	0
 13468   004916  6E2C               	movwf	(___flge@ff1+2)^0,c
 13469   004918  0E00               	movlw	0
 13470   00491A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13471   00491C                     l4300:
 13472   00491C  0E00               	movlw	0
 13473   00491E  142E               	andwf	___flge@ff2^0,w,c
 13474   004920  6E32               	movwf	??___flge^0,c
 13475   004922  0E00               	movlw	0
 13476   004924  142F               	andwf	(___flge@ff2+1)^0,w,c
 13477   004926  6E33               	movwf	(??___flge+1)^0,c
 13478   004928  0E80               	movlw	128
 13479   00492A  1430               	andwf	(___flge@ff2+2)^0,w,c
 13480   00492C  6E34               	movwf	(??___flge+2)^0,c
 13481   00492E  0E7F               	movlw	127
 13482   004930  1431               	andwf	(___flge@ff2+3)^0,w,c
 13483   004932  6E35               	movwf	(??___flge+3)^0,c
 13484   004934  5032               	movf	??___flge^0,w,c
 13485   004936  1033               	iorwf	(??___flge+1)^0,w,c
 13486   004938  1034               	iorwf	(??___flge+2)^0,w,c
 13487   00493A  1035               	iorwf	(??___flge+3)^0,w,c
 13488   00493C  A4D8               	btfss	status,2,c
 13489   00493E  EFA3  F024         	goto	u3971
 13490   004942  EFA5  F024         	goto	u3970
 13491   004946                     u3971:
 13492   004946  EFAD  F024         	goto	l4304
 13493   00494A                     u3970:
 13494   00494A  0E00               	movlw	0
 13495   00494C  6E2E               	movwf	___flge@ff2^0,c
 13496   00494E  0E00               	movlw	0
 13497   004950  6E2F               	movwf	(___flge@ff2+1)^0,c
 13498   004952  0E00               	movlw	0
 13499   004954  6E30               	movwf	(___flge@ff2+2)^0,c
 13500   004956  0E00               	movlw	0
 13501   004958  6E31               	movwf	(___flge@ff2+3)^0,c
 13502   00495A                     l4304:
 13503   00495A  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 13504   00495C  EFB2  F024         	goto	u3981
 13505   004960  EFB4  F024         	goto	u3980
 13506   004964                     u3981:
 13507   004964  EFBD  F024         	goto	l4308
 13508   004968                     u3980:
 13509   004968  6C2A               	negf	___flge@ff1^0,c
 13510   00496A  1E2B               	comf	(___flge@ff1+1)^0,f,c
 13511   00496C  B0D8               	btfsc	status,0,c
 13512   00496E  2A2B               	incf	(___flge@ff1+1)^0,f,c
 13513   004970  1E2C               	comf	(___flge@ff1+2)^0,f,c
 13514   004972  B0D8               	btfsc	status,0,c
 13515   004974  2A2C               	incf	(___flge@ff1+2)^0,f,c
 13516   004976  0E80               	movlw	128
 13517   004978  562D               	subfwb	(___flge@ff1+3)^0,f,c
 13518   00497A                     l4308:
 13519   00497A  AE31               	btfss	(___flge@ff2+3)^0,7,c
 13520   00497C  EFC2  F024         	goto	u3991
 13521   004980  EFC4  F024         	goto	u3990
 13522   004984                     u3991:
 13523   004984  EFCD  F024         	goto	l892
 13524   004988                     u3990:
 13525   004988  6C2E               	negf	___flge@ff2^0,c
 13526   00498A  1E2F               	comf	(___flge@ff2+1)^0,f,c
 13527   00498C  B0D8               	btfsc	status,0,c
 13528   00498E  2A2F               	incf	(___flge@ff2+1)^0,f,c
 13529   004990  1E30               	comf	(___flge@ff2+2)^0,f,c
 13530   004992  B0D8               	btfsc	status,0,c
 13531   004994  2A30               	incf	(___flge@ff2+2)^0,f,c
 13532   004996  0E80               	movlw	128
 13533   004998  5631               	subfwb	(___flge@ff2+3)^0,f,c
 13534   00499A                     l892:
 13535   00499A  0E00               	movlw	0
 13536   00499C  1A2A               	xorwf	___flge@ff1^0,f,c
 13537   00499E  0E00               	movlw	0
 13538   0049A0  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 13539   0049A2  0E00               	movlw	0
 13540   0049A4  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 13541   0049A6  0E80               	movlw	128
 13542   0049A8  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 13543   0049AA  0E00               	movlw	0
 13544   0049AC  1A2E               	xorwf	___flge@ff2^0,f,c
 13545   0049AE  0E00               	movlw	0
 13546   0049B0  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 13547   0049B2  0E00               	movlw	0
 13548   0049B4  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 13549   0049B6  0E80               	movlw	128
 13550   0049B8  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 13551   0049BA  502E               	movf	___flge@ff2^0,w,c
 13552   0049BC  5C2A               	subwf	___flge@ff1^0,w,c
 13553   0049BE  502F               	movf	(___flge@ff2+1)^0,w,c
 13554   0049C0  582B               	subwfb	(___flge@ff1+1)^0,w,c
 13555   0049C2  5030               	movf	(___flge@ff2+2)^0,w,c
 13556   0049C4  582C               	subwfb	(___flge@ff1+2)^0,w,c
 13557   0049C6  5031               	movf	(___flge@ff2+3)^0,w,c
 13558   0049C8  582D               	subwfb	(___flge@ff1+3)^0,w,c
 13559   0049CA  B0D8               	btfsc	status,0,c
 13560   0049CC  EFEA  F024         	goto	u4001
 13561   0049D0  EFEC  F024         	goto	u4000
 13562   0049D4                     u4001:
 13563   0049D4  EFEF  F024         	goto	l4314
 13564   0049D8                     u4000:
 13565   0049D8  90D8               	bcf	status,0,c
 13566   0049DA  EFF0  F024         	goto	l897
 13567   0049DE                     l4314:
 13568   0049DE  80D8               	bsf	status,0,c
 13569   0049E0                     l897:
 13570   0049E0  0012               	return		;funcret
 13571   0049E2                     __end_of___flge:
 13572                           	callstack 0
 13573                           
 13574 ;; *************** function ___fleq *****************
 13575 ;; Defined at:
 13576 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;  ff1             4   49[COMRAM] unsigned char 
 13579 ;;  ff2             4   53[COMRAM] unsigned char 
 13580 ;; Auto vars:     Size  Location     Type
 13581 ;;		None
 13582 ;; Return value:  Size  Location     Type
 13583 ;;		None               void
 13584 ;; Registers used:
 13585 ;;		wreg, status,2, status,0
 13586 ;; Tracked objects:
 13587 ;;		On entry : 0/0
 13588 ;;		On exit  : 0/0
 13589 ;;		Unchanged: 0/0
 13590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13591 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13594 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13595 ;;Total ram usage:       12 bytes
 13596 ;; Hardware stack levels used: 1
 13597 ;; Hardware stack levels required when called: 1
 13598 ;; This function calls:
 13599 ;;		Nothing
 13600 ;; This function is called by:
 13601 ;;		_Colour_decider
 13602 ;;		_efgtoa
 13603 ;; This function uses a non-reentrant model
 13604 ;;
 13605                           
 13606                           	psect	text71
 13607   004BAA                     __ptext71:
 13608                           	callstack 0
 13609   004BAA                     ___fleq:
 13610                           	callstack 25
 13611   004BAA  0E00               	movlw	0
 13612   004BAC  1432               	andwf	___fleq@ff1^0,w,c
 13613   004BAE  6E3A               	movwf	??___fleq^0,c
 13614   004BB0  0E00               	movlw	0
 13615   004BB2  1433               	andwf	(___fleq@ff1+1)^0,w,c
 13616   004BB4  6E3B               	movwf	(??___fleq+1)^0,c
 13617   004BB6  0E80               	movlw	128
 13618   004BB8  1434               	andwf	(___fleq@ff1+2)^0,w,c
 13619   004BBA  6E3C               	movwf	(??___fleq+2)^0,c
 13620   004BBC  0E7F               	movlw	127
 13621   004BBE  1435               	andwf	(___fleq@ff1+3)^0,w,c
 13622   004BC0  6E3D               	movwf	(??___fleq+3)^0,c
 13623   004BC2  503A               	movf	??___fleq^0,w,c
 13624   004BC4  103B               	iorwf	(??___fleq+1)^0,w,c
 13625   004BC6  103C               	iorwf	(??___fleq+2)^0,w,c
 13626   004BC8  103D               	iorwf	(??___fleq+3)^0,w,c
 13627   004BCA  A4D8               	btfss	status,2,c
 13628   004BCC  EFEA  F025         	goto	u3931
 13629   004BD0  EFEC  F025         	goto	u3930
 13630   004BD4                     u3931:
 13631   004BD4  EFF4  F025         	goto	l4284
 13632   004BD8                     u3930:
 13633   004BD8  0E00               	movlw	0
 13634   004BDA  6E32               	movwf	___fleq@ff1^0,c
 13635   004BDC  0E00               	movlw	0
 13636   004BDE  6E33               	movwf	(___fleq@ff1+1)^0,c
 13637   004BE0  0E00               	movlw	0
 13638   004BE2  6E34               	movwf	(___fleq@ff1+2)^0,c
 13639   004BE4  0E00               	movlw	0
 13640   004BE6  6E35               	movwf	(___fleq@ff1+3)^0,c
 13641   004BE8                     l4284:
 13642   004BE8  0E00               	movlw	0
 13643   004BEA  1436               	andwf	___fleq@ff2^0,w,c
 13644   004BEC  6E3A               	movwf	??___fleq^0,c
 13645   004BEE  0E00               	movlw	0
 13646   004BF0  1437               	andwf	(___fleq@ff2+1)^0,w,c
 13647   004BF2  6E3B               	movwf	(??___fleq+1)^0,c
 13648   004BF4  0E80               	movlw	128
 13649   004BF6  1438               	andwf	(___fleq@ff2+2)^0,w,c
 13650   004BF8  6E3C               	movwf	(??___fleq+2)^0,c
 13651   004BFA  0E7F               	movlw	127
 13652   004BFC  1439               	andwf	(___fleq@ff2+3)^0,w,c
 13653   004BFE  6E3D               	movwf	(??___fleq+3)^0,c
 13654   004C00  503A               	movf	??___fleq^0,w,c
 13655   004C02  103B               	iorwf	(??___fleq+1)^0,w,c
 13656   004C04  103C               	iorwf	(??___fleq+2)^0,w,c
 13657   004C06  103D               	iorwf	(??___fleq+3)^0,w,c
 13658   004C08  A4D8               	btfss	status,2,c
 13659   004C0A  EF09  F026         	goto	u3941
 13660   004C0E  EF0B  F026         	goto	u3940
 13661   004C12                     u3941:
 13662   004C12  EF13  F026         	goto	l4288
 13663   004C16                     u3940:
 13664   004C16  0E00               	movlw	0
 13665   004C18  6E36               	movwf	___fleq@ff2^0,c
 13666   004C1A  0E00               	movlw	0
 13667   004C1C  6E37               	movwf	(___fleq@ff2+1)^0,c
 13668   004C1E  0E00               	movlw	0
 13669   004C20  6E38               	movwf	(___fleq@ff2+2)^0,c
 13670   004C22  0E00               	movlw	0
 13671   004C24  6E39               	movwf	(___fleq@ff2+3)^0,c
 13672   004C26                     l4288:
 13673   004C26  5036               	movf	___fleq@ff2^0,w,c
 13674   004C28  1832               	xorwf	___fleq@ff1^0,w,c
 13675   004C2A  E10F               	bnz	u3950
 13676   004C2C  5037               	movf	(___fleq@ff2+1)^0,w,c
 13677   004C2E  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 13678   004C30  E10C               	bnz	u3950
 13679   004C32  5038               	movf	(___fleq@ff2+2)^0,w,c
 13680   004C34  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 13681   004C36  E109               	bnz	u3950
 13682   004C38  5039               	movf	(___fleq@ff2+3)^0,w,c
 13683   004C3A  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 13684   004C3C  B4D8               	btfsc	status,2,c
 13685   004C3E  EF23  F026         	goto	u3951
 13686   004C42  EF25  F026         	goto	u3950
 13687   004C46                     u3951:
 13688   004C46  EF28  F026         	goto	l4292
 13689   004C4A                     u3950:
 13690   004C4A  90D8               	bcf	status,0,c
 13691   004C4C  EF29  F026         	goto	l886
 13692   004C50                     l4292:
 13693   004C50  80D8               	bsf	status,0,c
 13694   004C52                     l886:
 13695   004C52  0012               	return		;funcret
 13696   004C54                     __end_of___fleq:
 13697                           	callstack 0
 13698                           
 13699 ;; *************** function ___fldiv *****************
 13700 ;; Defined at:
 13701 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  b               4   49[COMRAM] unsigned char 
 13704 ;;  a               4   53[COMRAM] unsigned char 
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;  grs             4   68[COMRAM] unsigned long 
 13707 ;;  rem             4   61[COMRAM] unsigned long 
 13708 ;;  new_exp         2   66[COMRAM] short 
 13709 ;;  aexp            1   73[COMRAM] unsigned char 
 13710 ;;  bexp            1   72[COMRAM] unsigned char 
 13711 ;;  sign            1   65[COMRAM] unsigned char 
 13712 ;; Return value:  Size  Location     Type
 13713 ;;                  4   49[COMRAM] unsigned char 
 13714 ;; Registers used:
 13715 ;;		wreg, status,2, status,0
 13716 ;; Tracked objects:
 13717 ;;		On entry : 0/0
 13718 ;;		On exit  : 0/0
 13719 ;;		Unchanged: 0/0
 13720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13721 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13722 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13724 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13725 ;;Total ram usage:       25 bytes
 13726 ;; Hardware stack levels used: 1
 13727 ;; Hardware stack levels required when called: 1
 13728 ;; This function calls:
 13729 ;;		Nothing
 13730 ;; This function is called by:
 13731 ;;		_colour_rel
 13732 ;;		_Colour_decider
 13733 ;;		_efgtoa
 13734 ;; This function uses a non-reentrant model
 13735 ;;
 13736                           
 13737                           	psect	text72
 13738   00319C                     __ptext72:
 13739                           	callstack 0
 13740   00319C                     ___fldiv:
 13741                           	callstack 25
 13742   00319C  5035               	movf	(___fldiv@b+3)^0,w,c
 13743   00319E  0B80               	andlw	128
 13744   0031A0  6E42               	movwf	___fldiv@sign^0,c
 13745   0031A2  5035               	movf	(___fldiv@b+3)^0,w,c
 13746   0031A4  2435               	addwf	(___fldiv@b+3)^0,w,c
 13747   0031A6  6E49               	movwf	___fldiv@bexp^0,c
 13748   0031A8  AE34               	btfss	(___fldiv@b+2)^0,7,c
 13749   0031AA  EFD9  F018         	goto	u3511
 13750   0031AE  EFDB  F018         	goto	u3510
 13751   0031B2                     u3511:
 13752   0031B2  EFDC  F018         	goto	l4012
 13753   0031B6                     u3510:
 13754   0031B6  8049               	bsf	___fldiv@bexp^0,0,c
 13755   0031B8                     l4012:
 13756   0031B8  5049               	movf	___fldiv@bexp^0,w,c
 13757   0031BA  B4D8               	btfsc	status,2,c
 13758   0031BC  EFE2  F018         	goto	u3521
 13759   0031C0  EFE4  F018         	goto	u3520
 13760   0031C4                     u3521:
 13761   0031C4  EFF9  F018         	goto	l4022
 13762   0031C8                     u3520:
 13763   0031C8  2849               	incf	___fldiv@bexp^0,w,c
 13764   0031CA  A4D8               	btfss	status,2,c
 13765   0031CC  EFEA  F018         	goto	u3531
 13766   0031D0  EFEC  F018         	goto	u3530
 13767   0031D4                     u3531:
 13768   0031D4  EFF4  F018         	goto	l4018
 13769   0031D8                     u3530:
 13770   0031D8  0E00               	movlw	0
 13771   0031DA  6E32               	movwf	___fldiv@b^0,c
 13772   0031DC  0E00               	movlw	0
 13773   0031DE  6E33               	movwf	(___fldiv@b+1)^0,c
 13774   0031E0  0E00               	movlw	0
 13775   0031E2  6E34               	movwf	(___fldiv@b+2)^0,c
 13776   0031E4  0E00               	movlw	0
 13777   0031E6  6E35               	movwf	(___fldiv@b+3)^0,c
 13778   0031E8                     l4018:
 13779   0031E8  8E34               	bsf	(___fldiv@b+2)^0,7,c
 13780   0031EA  0E00               	movlw	0
 13781   0031EC  6E35               	movwf	(___fldiv@b+3)^0,c
 13782   0031EE  EF01  F019         	goto	l4024
 13783   0031F2                     l4022:
 13784   0031F2  0E00               	movlw	0
 13785   0031F4  6E32               	movwf	___fldiv@b^0,c
 13786   0031F6  0E00               	movlw	0
 13787   0031F8  6E33               	movwf	(___fldiv@b+1)^0,c
 13788   0031FA  0E00               	movlw	0
 13789   0031FC  6E34               	movwf	(___fldiv@b+2)^0,c
 13790   0031FE  0E00               	movlw	0
 13791   003200  6E35               	movwf	(___fldiv@b+3)^0,c
 13792   003202                     l4024:
 13793   003202  5039               	movf	(___fldiv@a+3)^0,w,c
 13794   003204  0B80               	andlw	128
 13795   003206  1A42               	xorwf	___fldiv@sign^0,f,c
 13796   003208  5039               	movf	(___fldiv@a+3)^0,w,c
 13797   00320A  2439               	addwf	(___fldiv@a+3)^0,w,c
 13798   00320C  6E4A               	movwf	___fldiv@aexp^0,c
 13799   00320E  AE38               	btfss	(___fldiv@a+2)^0,7,c
 13800   003210  EF0C  F019         	goto	u3541
 13801   003214  EF0E  F019         	goto	u3540
 13802   003218                     u3541:
 13803   003218  EF0F  F019         	goto	l4032
 13804   00321C                     u3540:
 13805   00321C  804A               	bsf	___fldiv@aexp^0,0,c
 13806   00321E                     l4032:
 13807   00321E  504A               	movf	___fldiv@aexp^0,w,c
 13808   003220  B4D8               	btfsc	status,2,c
 13809   003222  EF15  F019         	goto	u3551
 13810   003226  EF17  F019         	goto	u3550
 13811   00322A                     u3551:
 13812   00322A  EF2C  F019         	goto	l4042
 13813   00322E                     u3550:
 13814   00322E  284A               	incf	___fldiv@aexp^0,w,c
 13815   003230  A4D8               	btfss	status,2,c
 13816   003232  EF1D  F019         	goto	u3561
 13817   003236  EF1F  F019         	goto	u3560
 13818   00323A                     u3561:
 13819   00323A  EF27  F019         	goto	l4038
 13820   00323E                     u3560:
 13821   00323E  0E00               	movlw	0
 13822   003240  6E36               	movwf	___fldiv@a^0,c
 13823   003242  0E00               	movlw	0
 13824   003244  6E37               	movwf	(___fldiv@a+1)^0,c
 13825   003246  0E00               	movlw	0
 13826   003248  6E38               	movwf	(___fldiv@a+2)^0,c
 13827   00324A  0E00               	movlw	0
 13828   00324C  6E39               	movwf	(___fldiv@a+3)^0,c
 13829   00324E                     l4038:
 13830   00324E  8E38               	bsf	(___fldiv@a+2)^0,7,c
 13831   003250  0E00               	movlw	0
 13832   003252  6E39               	movwf	(___fldiv@a+3)^0,c
 13833   003254  EF34  F019         	goto	l4044
 13834   003258                     l4042:
 13835   003258  0E00               	movlw	0
 13836   00325A  6E36               	movwf	___fldiv@a^0,c
 13837   00325C  0E00               	movlw	0
 13838   00325E  6E37               	movwf	(___fldiv@a+1)^0,c
 13839   003260  0E00               	movlw	0
 13840   003262  6E38               	movwf	(___fldiv@a+2)^0,c
 13841   003264  0E00               	movlw	0
 13842   003266  6E39               	movwf	(___fldiv@a+3)^0,c
 13843   003268                     l4044:
 13844   003268  5036               	movf	___fldiv@a^0,w,c
 13845   00326A  1037               	iorwf	(___fldiv@a+1)^0,w,c
 13846   00326C  1038               	iorwf	(___fldiv@a+2)^0,w,c
 13847   00326E  1039               	iorwf	(___fldiv@a+3)^0,w,c
 13848   003270  A4D8               	btfss	status,2,c
 13849   003272  EF3D  F019         	goto	u3571
 13850   003276  EF3F  F019         	goto	u3570
 13851   00327A                     u3571:
 13852   00327A  EF57  F019         	goto	l4056
 13853   00327E                     u3570:
 13854   00327E  0E00               	movlw	0
 13855   003280  6E32               	movwf	___fldiv@b^0,c
 13856   003282  0E00               	movlw	0
 13857   003284  6E33               	movwf	(___fldiv@b+1)^0,c
 13858   003286  0E00               	movlw	0
 13859   003288  6E34               	movwf	(___fldiv@b+2)^0,c
 13860   00328A  0E00               	movlw	0
 13861   00328C  6E35               	movwf	(___fldiv@b+3)^0,c
 13862   00328E  0E80               	movlw	128
 13863   003290  1234               	iorwf	(___fldiv@b+2)^0,f,c
 13864   003292  0E7F               	movlw	127
 13865   003294  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13866   003296                     l4050:
 13867   003296  5042               	movf	___fldiv@sign^0,w,c
 13868   003298  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13869   00329A  C032  F032         	movff	___fldiv@b,?___fldiv
 13870   00329E  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 13871   0032A2  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 13872   0032A6  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 13873   0032AA  EF9A  F01A         	goto	l1209
 13874   0032AE                     l4056:
 13875   0032AE  5049               	movf	___fldiv@bexp^0,w,c
 13876   0032B0  A4D8               	btfss	status,2,c
 13877   0032B2  EF5D  F019         	goto	u3581
 13878   0032B6  EF5F  F019         	goto	u3580
 13879   0032BA                     u3581:
 13880   0032BA  EF69  F019         	goto	l4064
 13881   0032BE                     u3580:
 13882   0032BE  0E00               	movlw	0
 13883   0032C0  6E32               	movwf	?___fldiv^0,c
 13884   0032C2  0E00               	movlw	0
 13885   0032C4  6E33               	movwf	(?___fldiv+1)^0,c
 13886   0032C6  0E00               	movlw	0
 13887   0032C8  6E34               	movwf	(?___fldiv+2)^0,c
 13888   0032CA  0E00               	movlw	0
 13889   0032CC  6E35               	movwf	(?___fldiv+3)^0,c
 13890   0032CE  EF9A  F01A         	goto	l1209
 13891   0032D2                     l4064:
 13892   0032D2  504A               	movf	___fldiv@aexp^0,w,c
 13893   0032D4  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 13894   0032D8  6A3B               	clrf	(??___fldiv+1)^0,c
 13895   0032DA  5E3A               	subwf	??___fldiv^0,f,c
 13896   0032DC  0E00               	movlw	0
 13897   0032DE  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 13898   0032E0  0E7F               	movlw	127
 13899   0032E2  243A               	addwf	??___fldiv^0,w,c
 13900   0032E4  6E43               	movwf	___fldiv@new_exp^0,c
 13901   0032E6  0E00               	movlw	0
 13902   0032E8  203B               	addwfc	(??___fldiv+1)^0,w,c
 13903   0032EA  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 13904   0032EC  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 13905   0032F0  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 13906   0032F4  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 13907   0032F8  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 13908   0032FC  0E00               	movlw	0
 13909   0032FE  6E32               	movwf	___fldiv@b^0,c
 13910   003300  0E00               	movlw	0
 13911   003302  6E33               	movwf	(___fldiv@b+1)^0,c
 13912   003304  0E00               	movlw	0
 13913   003306  6E34               	movwf	(___fldiv@b+2)^0,c
 13914   003308  0E00               	movlw	0
 13915   00330A  6E35               	movwf	(___fldiv@b+3)^0,c
 13916   00330C  0E00               	movlw	0
 13917   00330E  6E45               	movwf	___fldiv@grs^0,c
 13918   003310  0E00               	movlw	0
 13919   003312  6E46               	movwf	(___fldiv@grs+1)^0,c
 13920   003314  0E00               	movlw	0
 13921   003316  6E47               	movwf	(___fldiv@grs+2)^0,c
 13922   003318  0E00               	movlw	0
 13923   00331A  6E48               	movwf	(___fldiv@grs+3)^0,c
 13924   00331C  0E00               	movlw	0
 13925   00331E  6E4A               	movwf	___fldiv@aexp^0,c
 13926   003320  EFCA  F019         	goto	l1211
 13927   003324                     l4074:
 13928   003324  504A               	movf	___fldiv@aexp^0,w,c
 13929   003326  B4D8               	btfsc	status,2,c
 13930   003328  EF98  F019         	goto	u3591
 13931   00332C  EF9A  F019         	goto	u3590
 13932   003330                     u3591:
 13933   003330  EFB1  F019         	goto	l4082
 13934   003334                     u3590:
 13935   003334  90D8               	bcf	status,0,c
 13936   003336  363E               	rlcf	___fldiv@rem^0,f,c
 13937   003338  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 13938   00333A  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 13939   00333C  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 13940   00333E  90D8               	bcf	status,0,c
 13941   003340  3632               	rlcf	___fldiv@b^0,f,c
 13942   003342  3633               	rlcf	(___fldiv@b+1)^0,f,c
 13943   003344  3634               	rlcf	(___fldiv@b+2)^0,f,c
 13944   003346  3635               	rlcf	(___fldiv@b+3)^0,f,c
 13945   003348  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13946   00334A  EFA9  F019         	goto	u3601
 13947   00334E  EFAB  F019         	goto	u3600
 13948   003352                     u3601:
 13949   003352  EFAC  F019         	goto	l1214
 13950   003356                     u3600:
 13951   003356  8032               	bsf	___fldiv@b^0,0,c
 13952   003358                     l1214:
 13953   003358  90D8               	bcf	status,0,c
 13954   00335A  3645               	rlcf	___fldiv@grs^0,f,c
 13955   00335C  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 13956   00335E  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 13957   003360  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 13958   003362                     l4082:
 13959   003362  5036               	movf	___fldiv@a^0,w,c
 13960   003364  5C3E               	subwf	___fldiv@rem^0,w,c
 13961   003366  5037               	movf	(___fldiv@a+1)^0,w,c
 13962   003368  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 13963   00336A  5038               	movf	(___fldiv@a+2)^0,w,c
 13964   00336C  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 13965   00336E  5039               	movf	(___fldiv@a+3)^0,w,c
 13966   003370  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 13967   003372  A0D8               	btfss	status,0,c
 13968   003374  EFBE  F019         	goto	u3611
 13969   003378  EFC0  F019         	goto	u3610
 13970   00337C                     u3611:
 13971   00337C  EFC9  F019         	goto	l4088
 13972   003380                     u3610:
 13973   003380  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 13974   003382  5036               	movf	___fldiv@a^0,w,c
 13975   003384  5E3E               	subwf	___fldiv@rem^0,f,c
 13976   003386  5037               	movf	(___fldiv@a+1)^0,w,c
 13977   003388  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 13978   00338A  5038               	movf	(___fldiv@a+2)^0,w,c
 13979   00338C  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 13980   00338E  5039               	movf	(___fldiv@a+3)^0,w,c
 13981   003390  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 13982   003392                     l4088:
 13983   003392  2A4A               	incf	___fldiv@aexp^0,f,c
 13984   003394                     l1211:
 13985   003394  0E19               	movlw	25
 13986   003396  644A               	cpfsgt	___fldiv@aexp^0,c
 13987   003398  EFD0  F019         	goto	u3621
 13988   00339C  EFD2  F019         	goto	u3620
 13989   0033A0                     u3621:
 13990   0033A0  EF92  F019         	goto	l4074
 13991   0033A4                     u3620:
 13992   0033A4  503E               	movf	___fldiv@rem^0,w,c
 13993   0033A6  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 13994   0033A8  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 13995   0033AA  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 13996   0033AC  B4D8               	btfsc	status,2,c
 13997   0033AE  EFDB  F019         	goto	u3631
 13998   0033B2  EFDD  F019         	goto	u3630
 13999   0033B6                     u3631:
 14000   0033B6  EFF5  F019         	goto	l4100
 14001   0033BA                     u3630:
 14002   0033BA  8045               	bsf	___fldiv@grs^0,0,c
 14003   0033BC  EFF5  F019         	goto	l4100
 14004   0033C0                     l4094:
 14005   0033C0  90D8               	bcf	status,0,c
 14006   0033C2  3632               	rlcf	___fldiv@b^0,f,c
 14007   0033C4  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14008   0033C6  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14009   0033C8  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14010   0033CA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14011   0033CC  EFEA  F019         	goto	u3641
 14012   0033D0  EFEC  F019         	goto	u3640
 14013   0033D4                     u3641:
 14014   0033D4  EFED  F019         	goto	l1220
 14015   0033D8                     u3640:
 14016   0033D8  8032               	bsf	___fldiv@b^0,0,c
 14017   0033DA                     l1220:
 14018   0033DA  90D8               	bcf	status,0,c
 14019   0033DC  3645               	rlcf	___fldiv@grs^0,f,c
 14020   0033DE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14021   0033E0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14022   0033E2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14023   0033E4  0643               	decf	___fldiv@new_exp^0,f,c
 14024   0033E6  A0D8               	btfss	status,0,c
 14025   0033E8  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 14026   0033EA                     l4100:
 14027   0033EA  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14028   0033EC  EFFA  F019         	goto	u3651
 14029   0033F0  EFFC  F019         	goto	u3650
 14030   0033F4                     u3651:
 14031   0033F4  EFE0  F019         	goto	l4094
 14032   0033F8                     u3650:
 14033   0033F8  0E00               	movlw	0
 14034   0033FA  6E4A               	movwf	___fldiv@aexp^0,c
 14035   0033FC  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14036   0033FE  EF03  F01A         	goto	u3661
 14037   003402  EF05  F01A         	goto	u3660
 14038   003406                     u3661:
 14039   003406  EF29  F01A         	goto	l1222
 14040   00340A                     u3660:
 14041   00340A  0EFF               	movlw	255
 14042   00340C  1445               	andwf	___fldiv@grs^0,w,c
 14043   00340E  6E3A               	movwf	??___fldiv^0,c
 14044   003410  0EFF               	movlw	255
 14045   003412  1446               	andwf	(___fldiv@grs+1)^0,w,c
 14046   003414  6E3B               	movwf	(??___fldiv+1)^0,c
 14047   003416  0EFF               	movlw	255
 14048   003418  1447               	andwf	(___fldiv@grs+2)^0,w,c
 14049   00341A  6E3C               	movwf	(??___fldiv+2)^0,c
 14050   00341C  0E7F               	movlw	127
 14051   00341E  1448               	andwf	(___fldiv@grs+3)^0,w,c
 14052   003420  6E3D               	movwf	(??___fldiv+3)^0,c
 14053   003422  503A               	movf	??___fldiv^0,w,c
 14054   003424  103B               	iorwf	(??___fldiv+1)^0,w,c
 14055   003426  103C               	iorwf	(??___fldiv+2)^0,w,c
 14056   003428  103D               	iorwf	(??___fldiv+3)^0,w,c
 14057   00342A  B4D8               	btfsc	status,2,c
 14058   00342C  EF1A  F01A         	goto	u3671
 14059   003430  EF1C  F01A         	goto	u3670
 14060   003434                     u3671:
 14061   003434  EF20  F01A         	goto	l1223
 14062   003438                     u3670:
 14063   003438                     l4108:
 14064   003438  0E01               	movlw	1
 14065   00343A  6E4A               	movwf	___fldiv@aexp^0,c
 14066   00343C  EF29  F01A         	goto	l1222
 14067   003440                     l1223:
 14068   003440  A032               	btfss	___fldiv@b^0,0,c
 14069   003442  EF25  F01A         	goto	u3681
 14070   003446  EF27  F01A         	goto	u3680
 14071   00344A                     u3681:
 14072   00344A  EF29  F01A         	goto	l1222
 14073   00344E                     u3680:
 14074   00344E  EF1C  F01A         	goto	l4108
 14075   003452                     l1222:
 14076   003452  504A               	movf	___fldiv@aexp^0,w,c
 14077   003454  B4D8               	btfsc	status,2,c
 14078   003456  EF2F  F01A         	goto	u3691
 14079   00345A  EF31  F01A         	goto	u3690
 14080   00345E                     u3691:
 14081   00345E  EF55  F01A         	goto	l4120
 14082   003462                     u3690:
 14083   003462  0E01               	movlw	1
 14084   003464  2632               	addwf	___fldiv@b^0,f,c
 14085   003466  0E00               	movlw	0
 14086   003468  2233               	addwfc	(___fldiv@b+1)^0,f,c
 14087   00346A  2234               	addwfc	(___fldiv@b+2)^0,f,c
 14088   00346C  2235               	addwfc	(___fldiv@b+3)^0,f,c
 14089   00346E  A035               	btfss	(___fldiv@b+3)^0,0,c
 14090   003470  EF3C  F01A         	goto	u3701
 14091   003474  EF3E  F01A         	goto	u3700
 14092   003478                     u3701:
 14093   003478  EF55  F01A         	goto	l4120
 14094   00347C                     u3700:
 14095   00347C  C032  F03A         	movff	___fldiv@b,??___fldiv
 14096   003480  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 14097   003484  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 14098   003488  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 14099   00348C  343D               	rlcf	(??___fldiv+3)^0,w,c
 14100   00348E  323D               	rrcf	(??___fldiv+3)^0,f,c
 14101   003490  323C               	rrcf	(??___fldiv+2)^0,f,c
 14102   003492  323B               	rrcf	(??___fldiv+1)^0,f,c
 14103   003494  323A               	rrcf	??___fldiv^0,f,c
 14104   003496  C03A  F032         	movff	??___fldiv,___fldiv@b
 14105   00349A  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 14106   00349E  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 14107   0034A2  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 14108   0034A6  4A43               	infsnz	___fldiv@new_exp^0,f,c
 14109   0034A8  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 14110   0034AA                     l4120:
 14111   0034AA  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14112   0034AC  EF60  F01A         	goto	u3711
 14113   0034B0  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14114   0034B2  E108               	bnz	u3710
 14115   0034B4  2843               	incf	___fldiv@new_exp^0,w,c
 14116   0034B6  A0D8               	btfss	status,0,c
 14117   0034B8  EF60  F01A         	goto	u3711
 14118   0034BC  EF62  F01A         	goto	u3710
 14119   0034C0                     u3711:
 14120   0034C0  EF6D  F01A         	goto	l4124
 14121   0034C4                     u3710:
 14122   0034C4  0E00               	movlw	0
 14123   0034C6  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14124   0034C8  6843               	setf	___fldiv@new_exp^0,c
 14125   0034CA  0E00               	movlw	0
 14126   0034CC  6E32               	movwf	___fldiv@b^0,c
 14127   0034CE  0E00               	movlw	0
 14128   0034D0  6E33               	movwf	(___fldiv@b+1)^0,c
 14129   0034D2  0E00               	movlw	0
 14130   0034D4  6E34               	movwf	(___fldiv@b+2)^0,c
 14131   0034D6  0E00               	movlw	0
 14132   0034D8  6E35               	movwf	(___fldiv@b+3)^0,c
 14133   0034DA                     l4124:
 14134   0034DA  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14135   0034DC  EF7A  F01A         	goto	u3720
 14136   0034E0  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14137   0034E2  E106               	bnz	u3721
 14138   0034E4  0443               	decf	___fldiv@new_exp^0,w,c
 14139   0034E6  B0D8               	btfsc	status,0,c
 14140   0034E8  EF78  F01A         	goto	u3721
 14141   0034EC  EF7A  F01A         	goto	u3720
 14142   0034F0                     u3721:
 14143   0034F0  EF88  F01A         	goto	l4128
 14144   0034F4                     u3720:
 14145   0034F4  0E00               	movlw	0
 14146   0034F6  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14147   0034F8  0E00               	movlw	0
 14148   0034FA  6E43               	movwf	___fldiv@new_exp^0,c
 14149   0034FC  0E00               	movlw	0
 14150   0034FE  6E32               	movwf	___fldiv@b^0,c
 14151   003500  0E00               	movlw	0
 14152   003502  6E33               	movwf	(___fldiv@b+1)^0,c
 14153   003504  0E00               	movlw	0
 14154   003506  6E34               	movwf	(___fldiv@b+2)^0,c
 14155   003508  0E00               	movlw	0
 14156   00350A  6E35               	movwf	(___fldiv@b+3)^0,c
 14157   00350C  0E00               	movlw	0
 14158   00350E  6E42               	movwf	___fldiv@sign^0,c
 14159   003510                     l4128:
 14160   003510  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 14161   003514  A049               	btfss	___fldiv@bexp^0,0,c
 14162   003516  EF8F  F01A         	goto	u3731
 14163   00351A  EF91  F01A         	goto	u3730
 14164   00351E                     u3731:
 14165   00351E  EF94  F01A         	goto	l4134
 14166   003522                     u3730:
 14167   003522  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14168   003524  EF95  F01A         	goto	l4136
 14169   003528                     l4134:
 14170   003528  9E34               	bcf	(___fldiv@b+2)^0,7,c
 14171   00352A                     l4136:
 14172   00352A  90D8               	bcf	status,0,c
 14173   00352C  3049               	rrcf	___fldiv@bexp^0,w,c
 14174   00352E  6E35               	movwf	(___fldiv@b+3)^0,c
 14175   003530  EF4B  F019         	goto	l4050
 14176   003534                     l1209:
 14177   003534  0012               	return		;funcret
 14178   003536                     __end_of___fldiv:
 14179                           	callstack 0
 14180                           
 14181 ;; *************** function _HighISR *****************
 14182 ;; Defined at:
 14183 ;;		line 59 in file "interrupts.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;		None
 14186 ;; Auto vars:     Size  Location     Type
 14187 ;;		None
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  1    wreg      void 
 14190 ;; Registers used:
 14191 ;;		None
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14201 ;;Total ram usage:        0 bytes
 14202 ;; Hardware stack levels used: 1
 14203 ;; This function calls:
 14204 ;;		Nothing
 14205 ;; This function is called by:
 14206 ;;		Interrupt level 2
 14207 ;; This function uses a non-reentrant model
 14208 ;;
 14209                           
 14210                           	psect	intcode
 14211   000008                     __pintcode:
 14212                           	callstack 0
 14213   000008                     _HighISR:
 14214                           	callstack 22
 14215                           
 14216                           ;incstack = 0
 14217   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14218   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14219   00000C  0011               	retfie		f
 14220   00000E                     __end_of_HighISR:
 14221                           	callstack 0
 14222                           
 14223                           	psect	rparam
 14224   000000                     
 14225                           	psect	temp
 14226   00005F                     btemp:
 14227                           	callstack 0
 14228   00005F                     	ds	1
 14229   000000                     int$flags	set	btemp
 14230   000000                     wtemp8	set	btemp+1
 14231   000000                     ttemp5	set	btemp+1
 14232   000000                     ttemp6	set	btemp+4
 14233   000000                     ttemp7	set	btemp+8
 14234                           
 14235                           	psect	idloc
 14236                           
 14237                           ;Config register IDLOC0 @ 0x200000
 14238                           ;	unspecified, using default values
 14239   200000                     	org	2097152
 14240   200000  0FFF               	dw	4095
 14241                           
 14242                           ;Config register IDLOC1 @ 0x200002
 14243                           ;	unspecified, using default values
 14244   200002                     	org	2097154
 14245   200002  0FFF               	dw	4095
 14246                           
 14247                           ;Config register IDLOC2 @ 0x200004
 14248                           ;	unspecified, using default values
 14249   200004                     	org	2097156
 14250   200004  0FFF               	dw	4095
 14251                           
 14252                           ;Config register IDLOC3 @ 0x200006
 14253                           ;	unspecified, using default values
 14254   200006                     	org	2097158
 14255   200006  0FFF               	dw	4095
 14256                           
 14257                           ;Config register IDLOC4 @ 0x200008
 14258                           ;	unspecified, using default values
 14259   200008                     	org	2097160
 14260   200008  0FFF               	dw	4095
 14261                           
 14262                           ;Config register IDLOC5 @ 0x20000A
 14263                           ;	unspecified, using default values
 14264   20000A                     	org	2097162
 14265   20000A  0FFF               	dw	4095
 14266                           
 14267                           ;Config register IDLOC6 @ 0x20000C
 14268                           ;	unspecified, using default values
 14269   20000C                     	org	2097164
 14270   20000C  0FFF               	dw	4095
 14271                           
 14272                           ;Config register IDLOC7 @ 0x20000E
 14273                           ;	unspecified, using default values
 14274   20000E                     	org	2097166
 14275   20000E  0FFF               	dw	4095
 14276                           
 14277                           	psect	config
 14278                           
 14279                           ;Config register CONFIG1L @ 0x300000
 14280                           ;	External Oscillator mode Selection bits
 14281                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14282                           ;	Power-up default value for COSC bits
 14283                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14284   300000                     	org	3145728
 14285   300000  AA                 	db	170
 14286                           
 14287                           ;Config register CONFIG1H @ 0x300001
 14288                           ;	unspecified, using default values
 14289                           ;	Clock Out Enable bit
 14290                           ;	CLKOUTEN = 0x1, unprogrammed default
 14291                           ;	Clock Switch Enable bit
 14292                           ;	CSWEN = 0x1, unprogrammed default
 14293                           ;	Fail-Safe Clock Monitor Enable bit
 14294                           ;	FCMEN = 0x1, unprogrammed default
 14295   300001                     	org	3145729
 14296   300001  FF                 	db	255
 14297                           
 14298                           ;Config register CONFIG2L @ 0x300002
 14299                           ;	unspecified, using default values
 14300                           ;	Master Clear Enable bit
 14301                           ;	MCLRE = 0x1, unprogrammed default
 14302                           ;	Power-up Timer Enable bit
 14303                           ;	PWRTE = 0x1, unprogrammed default
 14304                           ;	Low-power BOR enable bit
 14305                           ;	LPBOREN = 0x1, unprogrammed default
 14306                           ;	Brown-out Reset Enable bits
 14307                           ;	BOREN = 0x3, unprogrammed default
 14308   300002                     	org	3145730
 14309   300002  FF                 	db	255
 14310                           
 14311                           ;Config register CONFIG2H @ 0x300003
 14312                           ;	unspecified, using default values
 14313                           ;	Brown Out Reset Voltage selection bits
 14314                           ;	BORV = 0x3, unprogrammed default
 14315                           ;	ZCD Disable bit
 14316                           ;	ZCD = 0x1, unprogrammed default
 14317                           ;	PPSLOCK bit One-Way Set Enable bit
 14318                           ;	PPS1WAY = 0x1, unprogrammed default
 14319                           ;	Stack Full/Underflow Reset Enable bit
 14320                           ;	STVREN = 0x1, unprogrammed default
 14321                           ;	Debugger Enable bit
 14322                           ;	DEBUG = 0x1, unprogrammed default
 14323                           ;	Extended Instruction Set Enable bit
 14324                           ;	XINST = 0x1, unprogrammed default
 14325   300003                     	org	3145731
 14326   300003  FF                 	db	255
 14327                           
 14328                           ;Config register CONFIG3L @ 0x300004
 14329                           ;	WDT Period Select bits
 14330                           ;	WDTCPS = 0x1F, unprogrammed default
 14331                           ;	WDT operating mode
 14332                           ;	WDTE = OFF, WDT Disabled
 14333   300004                     	org	3145732
 14334   300004  9F                 	db	159
 14335                           
 14336                           ;Config register CONFIG3H @ 0x300005
 14337                           ;	unspecified, using default values
 14338                           ;	WDT Window Select bits
 14339                           ;	WDTCWS = 0x7, unprogrammed default
 14340                           ;	WDT input clock selector
 14341                           ;	WDTCCS = 0x7, unprogrammed default
 14342   300005                     	org	3145733
 14343   300005  FF                 	db	255
 14344                           
 14345                           ;Config register CONFIG4L @ 0x300006
 14346                           ;	unspecified, using default values
 14347                           ;	Write Protection Block 0
 14348                           ;	WRT0 = 0x1, unprogrammed default
 14349                           ;	Write Protection Block 1
 14350                           ;	WRT1 = 0x1, unprogrammed default
 14351                           ;	Write Protection Block 2
 14352                           ;	WRT2 = 0x1, unprogrammed default
 14353                           ;	Write Protection Block 3
 14354                           ;	WRT3 = 0x1, unprogrammed default
 14355                           ;	Write Protection Block 3
 14356                           ;	WRT4 = 0x1, unprogrammed default
 14357                           ;	Write Protection Block 3
 14358                           ;	WRT5 = 0x1, unprogrammed default
 14359                           ;	Write Protection Block 3
 14360                           ;	WRT6 = 0x1, unprogrammed default
 14361                           ;	Write Protection Block 3
 14362                           ;	WRT7 = 0x1, unprogrammed default
 14363   300006                     	org	3145734
 14364   300006  FF                 	db	255
 14365                           
 14366                           ;Config register CONFIG4H @ 0x300007
 14367                           ;	unspecified, using default values
 14368                           ;	Configuration Register Write Protection bit
 14369                           ;	WRTC = 0x1, unprogrammed default
 14370                           ;	Boot Block Write Protection bit
 14371                           ;	WRTB = 0x1, unprogrammed default
 14372                           ;	Data EEPROM Write Protection bit
 14373                           ;	WRTD = 0x1, unprogrammed default
 14374                           ;	Scanner Enable bit
 14375                           ;	SCANE = 0x1, unprogrammed default
 14376                           ;	Low Voltage Programming Enable bit
 14377                           ;	LVP = 0x1, unprogrammed default
 14378   300007                     	org	3145735
 14379   300007  FF                 	db	255
 14380                           
 14381                           ;Config register CONFIG5L @ 0x300008
 14382                           ;	unspecified, using default values
 14383                           ;	UserNVM Program Memory Code Protection bit
 14384                           ;	CP = 0x1, unprogrammed default
 14385                           ;	DataNVM Memory Code Protection bit
 14386                           ;	CPD = 0x1, unprogrammed default
 14387   300008                     	org	3145736
 14388   300008  FF                 	db	255
 14389                           
 14390                           ;Config register CONFIG5H @ 0x300009
 14391                           ;	unspecified, using default values
 14392   300009                     	org	3145737
 14393   300009  FF                 	db	255
 14394                           
 14395                           ;Config register CONFIG6L @ 0x30000A
 14396                           ;	unspecified, using default values
 14397                           ;	Table Read Protection Block 0
 14398                           ;	EBTR0 = 0x1, unprogrammed default
 14399                           ;	Table Read Protection Block 1
 14400                           ;	EBTR1 = 0x1, unprogrammed default
 14401                           ;	Table Read Protection Block 2
 14402                           ;	EBTR2 = 0x1, unprogrammed default
 14403                           ;	Table Read Protection Block 3
 14404                           ;	EBTR3 = 0x1, unprogrammed default
 14405                           ;	Table Read Protection Block 4
 14406                           ;	EBTR4 = 0x1, unprogrammed default
 14407                           ;	Table Read Protection Block 5
 14408                           ;	EBTR5 = 0x1, unprogrammed default
 14409                           ;	Table Read Protection Block 6
 14410                           ;	EBTR6 = 0x1, unprogrammed default
 14411                           ;	Table Read Protection Block 7
 14412                           ;	EBTR7 = 0x1, unprogrammed default
 14413   30000A                     	org	3145738
 14414   30000A  FF                 	db	255
 14415                           
 14416                           ;Config register CONFIG6H @ 0x30000B
 14417                           ;	unspecified, using default values
 14418                           ;	Boot Block Table Read Protection bit
 14419                           ;	EBTRB = 0x1, unprogrammed default
 14420   30000B                     	org	3145739
 14421   30000B  FF                 	db	255
 14422                           tosu	equ	0xFFF
 14423                           tosh	equ	0xFFE
 14424                           tosl	equ	0xFFD
 14425                           stkptr	equ	0xFFC
 14426                           pclatu	equ	0xFFB
 14427                           pclath	equ	0xFFA
 14428                           pcl	equ	0xFF9
 14429                           tblptru	equ	0xFF8
 14430                           tblptrh	equ	0xFF7
 14431                           tblptrl	equ	0xFF6
 14432                           tablat	equ	0xFF5
 14433                           prodh	equ	0xFF4
 14434                           prodl	equ	0xFF3
 14435                           indf0	equ	0xFEF
 14436                           postinc0	equ	0xFEE
 14437                           postdec0	equ	0xFED
 14438                           preinc0	equ	0xFEC
 14439                           plusw0	equ	0xFEB
 14440                           fsr0h	equ	0xFEA
 14441                           fsr0l	equ	0xFE9
 14442                           wreg	equ	0xFE8
 14443                           indf1	equ	0xFE7
 14444                           postinc1	equ	0xFE6
 14445                           postdec1	equ	0xFE5
 14446                           preinc1	equ	0xFE4
 14447                           plusw1	equ	0xFE3
 14448                           fsr1h	equ	0xFE2
 14449                           fsr1l	equ	0xFE1
 14450                           bsr	equ	0xFE0
 14451                           indf2	equ	0xFDF
 14452                           postinc2	equ	0xFDE
 14453                           postdec2	equ	0xFDD
 14454                           preinc2	equ	0xFDC
 14455                           plusw2	equ	0xFDB
 14456                           fsr2h	equ	0xFDA
 14457                           fsr2l	equ	0xFD9
 14458                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    0
    Data        9
    BSS         481
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     155
    BANK1           256    108     248
    BANK2           256      0      60
    BANK3           256      0     250
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2368$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2284$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2284$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 250
		 -> WayBack(BANK3[250]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _fullSpeedAhead->_setMotorPWM
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  335376
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                   _color_click_init
                         _colour_rel
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   36589
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36082
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35729
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29883
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     865
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              5     3      2  113976
                                             35 COMRAM     5     3      2
                           _BlueMove
                   _Forwardhalfblock
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   13796
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   15012
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6442
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   16076
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   16076
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6594
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   16228
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9008
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   22518
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _turnRight45                                          6     2      4    8418
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    8947
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2461
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   21302
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7202
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6594
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7354
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    3633
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   24555
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1073
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3776
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _go_Home
     _BlueMove
     _Forwardhalfblock
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnRight45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FA      11       97.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      F8       7       96.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRhlll        6      0       0      37        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     327      60        0.0%
DATA                 0      0     327       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 18:05:31 2023

               _color_read_Red 57C0                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5770                   ___fldiv@sign 0042                _color_read_Blue 5860  
                           l51 57BE                             l60 58AE                             l45 567A  
                           l54 580E                             l63 526A                             l48 5BF6  
                           l57 585E                             l66 3862                             l76 1934  
          ___wmul@multiplicand 0003               _color_read_Green 5810                readColours@vals 000C  
            ??_Interrupts_init 0001                            l200 5C14                            l140 5B88  
                          l212 5C2C                            l143 5B8A                            l152 5C42  
                          l161 59BE                            l209 5C18                            l146 5BB0  
                          l218 5B5E                            l155 5C4C                            l149 5C56  
                          l158 5C38                            l423 28AE                            l415 2854  
                          l272 5C64                            l523 4ECA                            l515 4D8E  
                          l507 4CF0                            l532 542C                            l541 5378  
                          l526 5484                            l550 5AF6                            l535 53D2  
                          l624 41CA                            l529 54DC                            l553 520C  
                          l393 2440                            l562 55D6                            l538 531E  
                          l618 41C0                            l627 5BD6                            l491 5052  
                          l547 5AB8                            l571 5A3C                            l556 56CC  
                          l485 4672                            l565 5628                            l741 4506  
                          l901 5B2E                            l574 5A7A                            l478 4F52  
                          l559 571E                            l568 4FD4                            l754 47D6  
                          l499 4E2C                            l924 48DC                            l892 499A  
                          l886 4C52                            l897 49E0                            _abs 59C0  
                          _pad 5054                            _rel 0166                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           l1211 3394                           ?_abs 0013  
                         l1220 33DA                           l1125 5140                           l1222 3452  
                         l1214 3358                           l1118 5138                           l1223 3440  
                         l1209 3534                           l1241 2E36                           l1305 5584  
                         l1250 30A4                           l1251 3092                           l1155 2AA0  
                         l1172 2BBA                           l1164 2D70                           l1156 2A8E  
                         l1404 2110                           l1245 319A                           l1181 2C8A  
                         l1157 2A54                           l1341 50CC                           l1182 2C78  
                         l1248 302C                           l4000 4796                           l1360 3DE6  
                         l1505 597C                           l1337 5076                           l1441 5532  
                         l4010 31B6                           l1258 315C                           l1282 4222  
                         l4002 47B6                           l1346 3BF6                           l1514 5938  
                         l1451 4ADE                           l1371 232E                           l1419 3B68  
                         l4100 33EA                           l4020 31EA                           l4012 31B8  
                         l1508 5C62                           l1348 3BFE                           l1197 58F4  
                         l1285 437E                           l1349 3C44                           l4102 33F8  
                         l4030 321C                           l4014 31C8                           l4022 31F2  
                         l4006 319C                           l1374 1CC8                           l4112 3462  
                         l4120 34AA                           l4104 33FC                           l4040 3250  
                         l4032 321E                           l4024 3202                           l4016 31D8  
                         l4008 31A8                           l4200 2EE0                           l1296 4316  
                         l5000 537A                           l1456 59F6                           l1376 1B0E  
                         l1289 42BA                           l1465 3FF8                           l4130 3514  
                         l4122 34C4                           l4114 346E                           l4106 340A  
                         l4050 3296                           l4034 322E                           l4042 3258  
                         l4026 3208                           l4018 31E8                           l4210 2F32  
                         l4202 2EEC                           l5010 41CE                           l5002 538E  
                         l1459 59FE                           l4132 3522                           l4124 34DA  
                         l4116 347C                           l4108 3438                           l4060 32BE  
                         l4052 329A                           l4044 3268                           l4036 323E  
                         l4028 320E                           l4300 491C                           l4220 2FB0  
                         l4212 2F42                           l4204 2EFC                           l5012 41DE  
                         l5004 53A6                           l5100 3536                           l1468 3F3C  
                         l1476 5196                           l1485 576E                           l4134 3528  
                         l4126 34F4                           l4118 34A6                           l4070 330C  
                         l4046 327E                           l4038 324E                           l4310 4988  
                         l4302 494A                           l4230 302A                           l4222 2FE6  
                         l4214 2F5E                           l4206 2F08                           l4150 2D8E  
                         l5030 42A4                           l5022 425C                           l5014 41EC  
                         l5110 3796                           l5102 3602                           l5006 5A00  
                         l1479 51A6                           l4136 352A                           l4128 3510  
                         l4080 3356                           l4072 331C                           l4064 32D2  
                         l4048 328E                           l4056 32AE                           l4312 49D8  
                         l4304 495A                           l4240 308A                           l4232 303C  
                         l4224 2FF4                           l4216 2F6A                           l4208 2F18  
                         l4160 2DD4                           l4152 2D9E                           l4144 2D72  
                         l5040 4324                           l5032 42B0                           l5024 4264  
                         l5016 4232                           l5120 0EC0                           l5112 37CA  
                         l5104 3636                           l5008 5A3E                           l4320 5B0E  
                         l4400 4A80                           l1497 4BA8                           l4090 33A4  
                         l4082 3362                           l4074 3324                           l4066 32EC  
                         l4058 32BE                           l4314 49DE                           l4306 4968  
                         l4250 30F8                           l4234 304A                           l4226 3012  
                         l4218 2F86                           l4170 2E00                           l4162 2DDA  
                         l4154 2DAE                           l4146 2D7E                           l5050 436C  
                         l5042 4326                           l5034 42EC                           l5026 4270  
                         l5018 4248                           l5210 1588                           l5202 153E  
                         l5130 0F32                           l5122 0EF4                           l5114 0E5A  
                         l5106 36CA                           l4322 5B1E                           l4402 4A92  
                         l4410 58F6                           l4092 33BA                           l4084 3380  
                         l4076 3334                           l4068 32FC                           l4308 497A  
                         l4260 3160                           l4244 30B4                           l4252 30FC  
                         l4236 304E                           l4228 301C                           l4180 2E56  
                         l4172 2E10                           l4164 2DE0                           l4156 2DBE  
                         l4148 2D8C                           l3700 2930                           l5052 436E  
                         l5044 432A                           l5036 42F8                           l5028 42A2  
                         l5204 157C                           l5140 1044                           l5132 0F84  
                         l5124 0F28                           l5116 0E84                           l4500 4CC0  
                         l5108 36FE                           l5300 5C02                           l4340 4842  
                         l4332 4802                           l4420 3E08                           l4412 5906  
                         l5060 5508                           l4094 33C0                           l4086 3382  
                         l4078 3348                           l4270 318A                           l4262 3170  
                         l4254 3116                           l4246 30C0                           l4238 305C  
                         l4190 2E96                           l4174 2E20                           l4166 2DEE  
                         l4158 2DC4                           l3710 2958                           l3702 2932  
                         l5046 434E                           l5038 4306                           l5214 1594  
                         l5150 10C8                           l5142 104A                           l5134 0FB6  
                         l5118 0E90                           l4510 4D3A                           l4502 4CD8  
                         l5070 5638                           l5302 5C04                           l5310 5B30  
                         l4318 5AF8                           l4350 4872                           l4342 4850  
                         l4334 482C                           l4326 47D8                           l4406 4AD6  
                         l4430 3EF0                           l4422 3E5E                           l4414 5142  
                         l5062 5528                           l4096 33CA                           l4088 3392  
                         l4280 4BAA                           l4264 317E                           l4256 312A  
                         l4248 30CE                           l4192 2EA2                           l4184 2E6A  
                         l4176 2E26                           l4168 2DF0                           l3800 2B28  
                         l3720 2992                           l3712 2968                           l3704 2938  
                         l5048 435E                           l5240 16C2                           l5216 15C6  
                         l5160 11D6                           l5152 10DC                           l5144 1066  
                         l5136 0FBE                           l4520 4E52                           l4512 4D46  
                         l4504 4CF2                           l5080 5668                           l5072 5648  
                         l5400 407C                           l5304 5C0E                           l5312 5B34  
                         l4360 489C                           l4352 487C                           l4336 482E  
                         l4328 47EE                           l4440 3FD8                           l4432 3F2C  
                         l4424 3E72                           l4416 5160                           l4600 19A4  
                         l5056 54DE                           l4098 33D8                           l4290 4C4A  
                         l4282 4BD8                           l4266 3180                           l4258 3144  
                         l4194 2EBA                           l4186 2E76                           l4178 2E46  
                         l3810 2B9A                           l3802 2B2E                           l3730 29BE  
                         l3722 29A4                           l3714 2978                           l3706 2946  
                         l4274 58B0                           l5242 16F4                           l5234 1684  
                         l5226 163A                           l5218 15F8                           l5170 13B4  
                         l5162 1252                           l5154 117C                           l5146 10BC  
                         l5138 1012                           l4530 4EB2                           l4522 4E6A  
                         l4506 4D16                           l4514 4D5E                           l5090 5672  
                         l5082 566A                           l5074 5652                           l5066 562A  
                         l5410 4106                           l5402 409A                           l5330 4ECC  
                         l5306 5C10                           l5314 5B42                           l4370 5054  
                         l4362 48AC                           l4338 483E                           l4442 3FE8  
                         l4426 3E80                           l4434 3F60                           l4418 3DE8  
                         l4450 5740                           l4610 19F2                           l4602 19B4  
                         l5058 54EA                           l4292 4C50                           l4284 4BE8  
                         l4268 3186                           l4196 2EC6                           l4188 2E80  
                         l3820 2BF4                           l3804 2B54                           l3812 2BAA  
                         l3740 29D2                           l3732 29C2                           l3724 29B2  
                         l3716 297A                           l3708 2948                           l4276 58C0  
                         l5260 17CC                           l5228 1678                           l5180 1424  
                         l5172 13E6                           l5164 12AE                           l5156 118C  
                         l3900 5132                           l4524 4E76                           l4516 4D76  
                         l4508 4D2E                           l4460 5B9A                           l5092 5674  
                         l5084 566C                           l5076 565C                           l5068 562E  
                         l5420 418A                           l5412 411E                           l5404 40B2  
                         l5340 4EFA                           l5332 4EDE                           l5308 5C12  
                         l5316 5B46                           l3660 4AF2                           l4380 509A  
                         l4372 5062                           l4540 3BCE                           l4532 3B6A  
                         l4364 48BC                           l4348 4868                           l4436 3F9C  
                         l4452 5744                           l4700 1DE2                           l4620 1A2E  
                         l4612 1A04                           l4604 19C0                           l5500 2364  
                         l4286 4C16                           l4198 2ED2                           l3830 2C24  
                         l3822 2BFE                           l3814 2BD0                           l3806 2B88  
                         l3750 29E6                           l3742 29D6                           l3734 29C6  
                         l3726 29B6                           l3718 2982                           l5270 1834  
                         l5254 1736                           l5238 1690                           l5190 1494  
                         l5182 1456                           l5166 132A                           l5158 11C4  
                         l3910 4508                           l4526 4E82                           l4518 4E2E  
                         l4470 500A                           l4462 4FD6                           l5094 5676  
                         l5086 566E                           l5078 5666                           l5422 41A8  
                         l5414 413C                           l5406 40D0                           l5350 4F38  
                         l5342 4EFE                           l5334 4EE0                           l3662 4B04  
                         l3902 593A                           l4382 50B8                           l4374 506E  
                         l4550 3C2C                           l4542 3BEA                           l4534 3B8A  
                         l4366 48CC                           l4358 4890                           l4390 4A02  
                         l4438 3FB0                           l4454 5750                           l4446 5720  
                         l4710 1EC6                           l4702 1E3A                           l4630 1A90  
                         l4622 1A38                           l4614 1A08                           l4606 19C8  
                         l5510 2384                           l5502 2368                           ?_pad 0011  
                         l4288 4C26                           l4296 48DE                           l3840 2C4C  
                         l3832 2C28                           l3824 2C0C                           l3816 2BE0  
                         l3808 2B8A                           l3760 2A20                           l3752 29EA  
                         l3744 29DA                           l3736 29CA                           l3728 29BA  
                         l3680 28BE                           l5272 1866                           l5256 1768  
                         l5192 14C6                           l5168 1382                           l3672 5BB2  
                         l3920 45D2                           l3912 4524                           l4528 4E9A  
                         l4464 4FDA                           l4472 5022                           l4480 4DCC  
                         l5096 5678                           l5088 5670                           l5416 4154  
                         l5408 40E8                           l5424 41C0                           l5352 4F3A  
                         l5344 4F22                           l5336 4EE2                           l4384 59C0  
                         l3664 4B0E                           l3904 5946                           l4376 5082  
                         l4560 3C5C                           l4552 3C38                           l4544 3C06  
                         l4536 3B9E                           l4392 4A40                           l4448 5734  
                         l4456 5754                           l4800 2306                           l4720 1F60  
                         l4712 1EF8                           l4704 1E6E                           l4632 1A94  
                         l4616 1A0E                           l4608 19CC                           l5360 5534  
                         l5600 26B2                           l5520 23A0                           l5512 2388  
                         l5504 236C                           l4298 490C                           l3850 2CA6  
                         l3842 2C5A                           l3834 2C38                           l3826 2C0E  
                         l3770 2A72                           l3762 2A3C                           l3754 29EE  
                         l3746 29DE                           l3738 29CE                           l3690 28FE  
                         l3682 28CC                           l5290 1920                           l5274 18A0  
                         l5282 18DE                           l5258 179A                           l5194 1500  
                         l5178 13F2                           l3674 5BCE                           l3922 45EE  
                         l3914 4578                           l4474 503A                           l4466 4FF2  
                         l4482 4DD8                           l4490 4C54                           l4458 5B8A  
                         l4810 5C30                           l5418 4172                           l5354 4F44  
                         l5346 4F2C                           l5338 4EE4                           l5098 520E  
                         l3930 4392                           l4386 59DA                           l3666 4B2C  
                         l3658 4AE0                           l3906 5958                           l4378 5096  
                         l4570 3D68                           l4562 3CDE                           l4554 3C40  
                         l4546 3C16                           l4538 3BAE                           l4394 4A68  
                         l4802 230E                           l4730 2038                           l4722 1F94  
                         l4714 1F0E                           l4706 1E74                           l4650 1B1E  
                         l4634 1A9A                           l4618 1A16                           l4626 1A58  
                         l5362 5546                           l5610 26FA                           l5602 26B8  
                         l5530 23C8                           l5522 23A8                           l5514 238C  
                         l5506 2374                           l3860 2D10                           l3852 2CB4  
                         l3844 2C70                           l3828 2C1C                           l3836 2C3A  
                         l3780 2ABE                           l3772 2A80                           l3764 2A4C  
                         l3748 29E2                           l3756 29F2                           l3692 2900  
                         l3684 28CE                           l5268 1802                           l5188 1462  
                         l3924 4632                           l3916 458C                           l4468 4FFE  
                         l4484 4DE4                           l4476 4D90                           l5380 4F80  
                         l4492 4C78                           l5372 567C                           l4812 5C34  
                         l5356 4F46                           l5348 4F2E                           l4820 5C3E  
                         l3940 43E8                           l3932 43B2                           l3668 4B62  
                         l3908 595C                           l4580 3DC6                           l4572 3D86  
                         l4564 3CE4                           l4556 3C4C                           l4548 3C1C  
                         l4396 4A74                           l4388 49E2                           l4740 2062  
                         l4724 1FEA                           l4732 203C                           l4716 1F40  
                         l4708 1E92                           l4660 1C06                           l4652 1B24  
                         l4636 1AA2                           l4628 1A7E                           l4644 1ABE  
                         l5364 554E                           l5620 2750                           l5612 270E  
                         l5604 26CC                           l5532 23E2                           l5540 2432  
                         l5524 23B0                           l5516 2390                           l5508 237C  
                         l3870 2D4A                           l3862 2D30                           l3854 2CEE  
                         l3790 2AFE                           l3838 2C48                           l3774 2A82  
                         l3766 2A62                           l3758 29F6                           l3686 28DE  
                         l3694 2908                           l3678 28B2                           l5294 192C  
                         l3918 4590                           l4478 4DB4                           l4486 4DFC  
                         l5374 56CE                           l5382 4F94                           l4494 4C90  
                         l4806 5C4E                           l4814 5C44                           l5358 4F50  
                         l4830 59BA                           l4822 5980                           l3950 443C  
                         l3942 43F4                           l3934 43B6                           l3926 4380  
                         l4574 3DA0                           l4566 3CEA                           l4558 3C56  
                         l4750 2130                           l4742 206E                           l4734 204C  
                         l4726 1FF0                           l4718 1F50                           l4662 1C1A  
                         l4670 1C96                           l4654 1B58                           l4646 1AD8  
                         l4590 195A                           l4902 3A7E                           l5366 5556  
                         l5630 27A6                           l5622 2764                           l5614 2722  
                         l5606 26E0                           l5550 2496                           l5542 244E  
                         l5534 23F6                           l5526 23B8                           l5518 2398  
                         l3872 2D50                           l3864 2D34                           l3848 2C9A  
                         l3856 2CF0                           l3792 2B0A                           l3784 2AD2  
                         l3776 2A8C                           l3768 2A6E                           l3696 2918  
                         l3688 28EE                           l3880 50CE                           l4488 4E14  
                         l5384 4FA8                           l5376 4F54                           l4496 4C9C  
                         l4840 5458                           l4808 5C52                           l4816 5C48  
                         l5392 4014                           l4832 59BC                           l4824 5984  
                         l3960 44B0                           l3952 444E                           l3944 4412  
                         l3936 43C4                           l3928 4384                           l4576 3DB0  
                         l4568 3D4E                           l4760 2162                           l4752 2140  
                         l4744 20E6                           l4736 2054                           l4728 2024  
                         l4680 1CFC                           l4672 1CD0                           l4664 1C4E  
                         l4656 1B96                           l4592 195E                           l4584 1936  
                         l4912 3AFA                           l4904 3AA8                           l5368 5572  
                         l5640 2800                           l5632 27BA                           l5624 2778  
                         l5616 2736                           l5608 26F4                           l5560 2518  
                         l5552 24A2                           l5544 246C                           l5536 240A  
                         l5528 23C0                           l5480 2340                           l5472 2330  
                         l3874 2D5E                           l3866 2D42                           l3858 2D00  
                         l3794 2B0E                           l3786 2AE2                           l3778 2AAE  
                         l3698 291E                           l3890 5106                           l3882 50D6  
                         l4850 53E8                           l4842 5486                           l5378 4F68  
                         l4498 4CA8                           l5394 4030                           l5386 3FFA  
                         l5298 5BF8                           l4826 598C                           l4818 5C3A  
                         l3954 447C                           l3946 441A                           l3962 44B6  
                         l3938 43E4                           l3970 4674                           l4578 3DB6  
                         l4770 2196                           l4762 2166                           l4754 2144  
                         l4746 2106                           l4738 205A                           l4690 1D4A  
                         l4682 1D00                           l4674 1CE0                           l4666 1C56  
                         l4658 1BC8                           l4594 1982                           l4586 193C  
                         l4906 3AC8                           l4914 3B2A                           l5642 2812  
                         l5634 27C0                           l5626 277E                           l5618 273C  
                         l5570 2566                           l5562 2534                           l5554 24B6  
                         l5546 2480                           l5650 289A                           l5538 241E  
                         l5490 2354                           l5482 234C                           l5474 2334  
                         l3876 2D60                           l3868 2D48                           l3796 2B1C  
                         l3788 2AF0                           l3892 510C                           l3884 50E8  
                         l4852 5400                           l4844 549A                           l4836 542E  
                         l5396 4048                           l5388 4002                           l4828 5994  
                         l3964 44C6                           l3956 449C                           l3948 442E  
                         l3980 46B8                           l3972 4678                           l4780 2234  
                         l4772 219A                           l4764 216C                           l4756 214A  
                         l4748 2122                           l4684 1D12                           l4692 1D52  
                         l4676 1CEC                           l4596 198C                           l4588 194C  
                         l4860 3864                           l5644 2846                           l5636 27D4  
                         l5628 2792                           l5580 2606                           l5564 254E  
                         l5572 257E                           l5556 24D4                           l5548 2486  
                         l5492 2358                           l5484 234E                           l5476 2338  
                         l3798 2B1E                           l3894 5122                           l3886 50F0  
                         l4846 54B0                           l4838 5442                           l4950 5B74  
                         l4942 5B60                           l4854 52C6                           l5398 4064  
                         l3966 44E6                           l3958 449E                           l3990 4720  
                         l3982 46D8                           l3974 4686                           l4790 228A  
                         l4774 21A0                           l4758 2152                           l4766 2172  
                         l4782 2238                           l4694 1D5A                           l4686 1D20  
                         l4678 1CF4                           l4598 1994                           l4870 38BC  
                         l4862 388C                           l4918 3B3C                           l5638 27E8  
                         l5590 265C                           l5582 261A                           l5574 259C  
                         l5566 2556                           l5558 24FC                           l5646 2858  
                         l5494 235A                           l5486 2350                           l5478 233C  
                         l3896 512A                           l3888 50F8                           l4848 53D4  
                         l4952 5B76                           l4944 5B6A                           l4856 52DA  
                         l3992 474E                           l3984 46F6                           l3976 46A6  
                         l4792 22BA                           l4784 2256                           l4776 21F8  
                         l4768 2184                           l4696 1D6A                           l4688 1D38  
                         l4880 3982                           l4872 38DC                           l4864 389A  
                         l5648 288E                           l5592 2670                           l5584 262E  
                         l5576 25A4                           l5568 255E                           l5496 235C  
                         l5488 2352                           l3898 512C                           l4946 5B70  
                         l4954 5BDA                           l4858 52F2                           l4970 5856  
                         l4962 57C0                           l3994 476E                           l3986 46FE  
                         l3978 46AA                           l4794 22C8                           l4786 2272  
                         l4778 222C                           l4698 1D7E                           l4882 3992  
                         l4874 38FC                           l4866 38A8                           l5594 2676  
                         l5586 2634                           l5578 25FA                           l5498 235E  
                         l4948 5B72                           l4964 5806                           l4956 5770  
                         l4980 5C18                           l3996 4780                           l3988 4712  
                         l4796 22E0                           l4788 227A                           l4884 39A8  
                         l4892 39C0                           l4876 3952                           l4868 38AC  
                         l5596 268A                           l5588 2648                           l4990 5A7C  
                         l4974 5860                           l4958 57B6                           l4982 5C28  
                         l3998 4786                           l4798 22F0                           l4886 39B0  
                         l4894 39F2                           l5598 269E                           l4984 5320  
                         l4992 5586                           l4976 58A6                           l4968 5810  
                         l4896 3A16                           l5792 39D4                           l4888 39B8  
                         l4994 51A8                           l4986 5334                           l5794 3A92  
                         l4898 3A4A                           l4988 534C                           l4996 5ABA  
                         l5796 3B1C                           l4998 55D8                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E2E  
                         STR_3 0E50                           STR_6 0E54                           u3000 29A4  
                         u3001 29A0                           u3010 29B2                           u3011 29AE  
                         u3100 2AF0                           u3020 2A20                           u3101 2AEC  
                         u3021 2A1C                           u3110 2AFE                           u3030 2A38  
                         u3111 2AFA                           u3031 2A32                           u4000 49D8  
                         u3200 2C48                           u3120 2B1C                           u3040 2A3A  
                 _BAUD4CONbits 000EE9                           u4001 49D4                           u3201 2C44  
                         u3121 2B18                           u3210 2C5A                           u3130 2B54  
                         u3050 2A62                           u4010 5B0E                           u3211 2C56  
                         u3131 2B50                           u3051 2A5E                           u4011 5B0A  
                         u3300 2D42                           u3220 2C70                           u3140 2B9A  
                         u3060 2A80                           u4100 50B8                           u4020 47EE  
                         u3301 2D3E                           u3221 2C6C                           u3141 2B96  
                         u3061 2A7C                           u4101 50B4                           u4021 47EA  
                         u3310 2D5E                           u3230 2C86                           u3150 2BD0  
                         u3070 2AA0                           u4110 59DA                           u4030 4822  
                         u3311 2D5A                           u3231 2C82                           u3151 2BCC  
                         u3071 2A9C                           u4111 59D6                           u3240 2C9A  
                         u3160 2BE0                           u3080 2AAE                           u5000 4324  
                         u3320 50E8                           u4040 4850                           u4120 4A22  
                         u4200 5160                           u3241 2C96                           u3161 2BDC  
                         u3081 2AAA                           u5001 4320                           u3321 50E4  
                         u3401 43EE                           u4041 484C                           u4201 515C  
                         u3250 2CB4                           u3170 2C0C                           u3090 2ABE  
                         u5010 435E                           u3330 5106                           u3410 4412  
                         u4050 4864                           u4130 4A40                           u4210 3E30  
                         _T2PR 000FBC                           u3251 2CB0                           u3171 2C08  
                         u3091 2ABA                           u5011 435A                           u3331 5102  
                         u3411 440E                           u4051 4860                           u4035 4818  
                         u4131 4A3C                           u3260 2CEE                           u3180 2C1C  
                         u5020 436C                           u5100 118C                           u3340 5122  
                         u3420 443C                           u3500 4796                           u4060 488C  
                         u4140 4A68                           u4300 3FD8                           u4220 3E5E  
                         u3261 2CEA                           u3181 2C18                           u5021 4368  
                         u5101 1188                           u3341 511E                           u3421 4438  
                         u3501 4792                           u4061 4888                           u4141 4A64  
                         u4125 4A18                           u4301 3FD4                           u4221 3E5A  
                         u3510 31B6                           u3270 2D00                           u3190 2C38  
                         u5110 11D6                           u3430 447C                           u3350 597C  
                         u4070 48AC                           u4150 4A92                           u4230 3E80  
                         u4310 576E                           u5030 5528                           u3511 31B2  
                         u3271 2CFC                           u3191 2C34                           u5111 11D2  
                         u3431 4478                           u3351 5978                           u4071 48A8  
                         u4151 4A8E                           u4231 3E7C                           u4215 3E26  
                         u4311 576A                           u5031 5524                           u3600 3356  
                         u3520 31C8                           u3280 2D10                           u5200 157C  
                         u5120 13B4                           u3360 4524                           u4400 4D76  
                         u4320 5B9A                           u3440 44C6                           u4080 48BC  
                         u3601 3352                           u3521 31C4                           u3281 2D0C  
                         u5201 1578                           u5121 13B0                           u5041 0E8A  
                         u3361 4520                           u4401 4D72                           u4321 5B96  
                         u3441 44C2                           u4081 48B8                           u3610 3380  
                         u3530 31D8                           u3290 2D30                           u5210 15C6  
                         u5130 13E6                           u5050 0F84                           u3370 45EE  
                         u4410 4D8E                           u4330 5BB0                           u3450 4686  
                         u4090 5062                           u4170 4ACC                           u4250 3EEC  
                         u3611 337C                           u3531 31D4                           u3291 2D2C  
                         u5211 15C2                           u5131 13E2                           u5051 0F80  
                         u3371 45EA                           u4411 4D8A                           u4331 5BAC  
                         u3451 4682                           u4091 505E                           u4171 4AC6  
                         u4251 3EE8                           u3700 347C                           u3620 33A4  
                         u3540 321C                           u5300 17CC                           u5220 15F8  
                         u5140 1424                           u5060 1012                           u4420 4EB2  
                         u4340 503A                           u3380 4392                           u3460 46B8  
                         u2900 4B04                           u4500 3D68                           u4180 4ACE  
                         u4260 3F10                           u3701 3478                           u3621 33A0  
                         u3541 3218                           u5301 17C8                           u5221 15F4  
                         u5141 1420                           u5061 100E                           u4421 4EAE  
                         u4341 5036                           u3381 438E                           u3461 46B4  
                         u2901 4B00                           u4501 3D64                           u4165 4AA4  
                         u4245 3E94                           u3710 34C4                           u3630 33BA  
                         u3550 322E                           u5310 17FE                           u5230 1636  
                         u5150 1456                           u5070 1066                           u4430 4ECA  
                         u4350 5052                           u3390 43C4                           u3470 46F6  
                         u2910 4B2C                           u4510 3D86                           u4270 3F2C  
                         u4246 3E9E                           u4190 5938                           u3711 34C0  
                         u3631 33B6                           u3551 322A                           u5311 17FA  
                         u5231 1632                           u5151 1452                           u5071 1062  
                         u4431 4EC6                           u4351 504E                           u3391 43C0  
                         u3471 46F2                           u2911 4B28                           u4511 3D82  
                         u4271 3F28                           u4247 3EAE                           u4191 5934  
                         u3720 34F4                           u3640 33D8                           u3560 323E  
                         u3800 2E46                           u5320 1834                           u5240 1678  
                         u5160 1494                           u5080 10BC                           u4360 4E14  
                         u3480 4720                           u2920 4B62                           u4520 3DA0  
                         u4440 3B9A                           u4280 3F80                           u4600 1A90  
                         u3721 34F0                           u3641 33D4                           u3561 323A  
                         u3801 2E42                           u5321 1830                           u5241 1674  
                         u5161 1490                           u5081 10B8                           u4361 4E10  
                         u3481 471C                           u2921 4B5E                           u4521 3D9C  
                         u4441 3B94                           u4265 3F06                           u4601 1A8C  
                         u3730 3522                           u3650 33F8                           u3570 327E  
                         u3810 2E56                           u2930 28CC                           u5330 1866  
                         u5250 16C2                           u5170 14C6                           u5090 10DC  
                         u4370 4E2C                           u5410 4010                           u3490 474E  
                         u4530 3DB0                           u4450 3B9C                           u4290 3F9C  
                         u4610 1B0A                           u3731 351E                           u3651 33F4  
                         u3571 327A                           u3811 2E52                           u2931 28C8  
                         u5331 1862                           u5251 16BE                           u5171 14C2  
                         u5091 10D8                           u4371 4E28                           u5411 400C  
                         u3491 474A                           u4531 3DAC                           u4291 3F98  
                         u4611 1B06                           u3660 340A                           u3580 32BE  
                         u3900 3116                           u3820 2FD0                           u3740 2D8C  
                         u2940 28DE                           u5340 18A0                           u5260 16F4  
                         u5180 1500                           u4380 4CD8                           u5420 4030  
                         u4460 3BAE                           u4700 1D4A                           u4620 1B96  
                         u4540 195A                           u3661 3406                           u3581 32BA  
                         u3901 3112                           u3741 2D88                           u2941 28DA  
                         u5341 189C                           u5261 16F0                           u5181 14FC  
                         u4381 4CD4                           u5421 402C                           u4461 3BAA  
                         u4285 3F76                           u4701 1D46                           u4621 1B92  
                         u4541 1956                           u3670 3438                           u3590 3334  
                         u3910 3144                           u3830 302A                           u3750 2D9E  
                         u2950 28EE                           u5350 18DA                           u5270 1732  
                         u5190 153A                           u4390 4CF0                           u5430 4064  
                         u4470 3BEA                           u4710 1E92                           u4630 1BC8  
                         u4550 19A4                           u3671 3434                           u3591 3330  
                         u3911 3140                           u3831 3026                           u3751 2D9A  
                         u2951 28EA                           u5351 18D6                           u5271 172E  
                         u5191 1536                           u4391 4CEC                           u5431 4060  
                         u4471 3BE6                           u4711 1E8E                           u4631 1BC4  
                         u4551 19A0                           u3680 344E                           u3920 317E  
                         u3840 304A                           u3760 2DAE                           u2960 2930  
                         u5360 191C                           u5280 1768                           u5440 409A  
                         u4480 3C16                           u4800 2184                           u4720 1EF8  
                         u4640 1C06                           u4560 19B4                           u5600 261A  
                         u3681 344A                           u3921 317A                           u3841 3046  
                         u3825 2FC6                           u3761 2DAA                           u2961 292C  
                         u5361 1918                           u5281 1764                           u5441 4096  
                         u4481 3C12                           u4801 2180                           u4721 1EF4  
                         u4641 1C02                           u4561 19B0                           u5601 2616  
                         u3690 3462                           u3930 4BD8                           u3850 305C  
                         u3770 2DEE                           u2970 2946                           u5290 179A  
                         u5450 40D0                           u5370 5B5E                           u2890 4AF2  
                         u4490 3C2C                           u4810 2256                           u4730 1F40  
                         u4650 1C92                           u4570 19F2                           u5610 265C  
                         u3691 345E                           u3931 4BD4                           u3851 3058  
                         u3771 2DEA                           u2971 2942                           u5291 1796  
                         u5451 40CC                           u5371 5B5A                           u2891 4AEE  
                         u4491 3C28                           u4811 2252                           u4731 1F3C  
                         u4651 1C8E                           u4571 19EE                           u5611 2658  
                         u3940 4C16                           u3860 308A                           u3780 2E00  
                         u2980 2958                           u5460 4106                           u4820 2272  
                         u4740 1F50                           u4660 1CC8                           u4580 1A04  
                         u4900 38FC                           u5620 269E                           u3941 4C12  
                         u3861 3086                           u3781 2DFC                           u2981 2954  
                         u5461 4102                           u4821 226E                           u4741 1F4C  
                         u4661 1CC4                           u4581 1A00                           u4901 38F8  
                         u5621 269A                           u3950 4C4A                           u3870 30A0  
                         u3790 2E10                           u2990 2968                           u5470 413C  
                         u4830 22DA                           u4750 1FEA                           u4670 1CE0  
                         u4590 1A7E                           u4910 3A12                           u5630 26E0  
                         u5550 2440                           u3951 4C46                           u3871 309C  
                         u3791 2E0C                           u2991 2964                           u5471 4138  
                         u4831 22D4                           u4751 1FE6                           u4671 1CDC  
                         u4591 1A7A                           u4911 3A0E                           u5631 26DC  
                         u5551 243C                           u3960 490C                           u3880 30B4  
                         u5480 4172                           u4920 5C28                           u4840 22DC  
                         u4760 2038                           u4680 1D12                           u5640 2722  
                         u5560 244E                           u3961 4908                           u3881 30B0  
                         u5481 416E                           u4921 5C24                           u4761 2034  
                         u4681 1D0E                           u5641 271E                           u5561 244A  
                         u3970 494A                           u3890 30CE                           u4930 41DE  
                         u5490 41A8                           u4850 22F0                           u4770 20E6  
                         u4690 1D20                           u5650 2764                           u5570 24D4  
                         u3971 4946                           u3891 30CA                           u4931 41DA  
                         u5491 41A4                           u4851 22EC                           u4771 20E2  
                         u4691 1D1C                           u5651 2760                           u5571 24D0  
                         u3980 4968                           u4940 41EC                           u4860 59A8  
                         u4780 2122                           u5660 27A6                           u5580 254E  
                         u3981 4964                           u4941 41E8                           u4861 59A0  
                         u4781 211E                           u5661 27A2                           u5581 254A  
                         u3990 4988                           u4950 4248                           u4790 2130  
                         u5670 27E8                           u5590 259C                           u3991 4984  
                         u4951 4244                           u5807 52E4                           u4791 212C  
                         u5671 27E4                           u5591 2598                           u4960 429E  
                         u4880 388C                           u5680 2812                           u4961 429A  
                         u5817 5310                           u4881 3888                           u5681 280E  
                         u4970 42E8                           u4890 38DC                           u5690 28AE  
                         u4971 42E4                           u5907 4D50                           u5827 533E  
                         u4891 38D8                           u5691 28AA                           u4980 4306  
                         u4981 4302                           u5917 54A4                           u5837 536A  
                         u4990 4316                           u4878 59AA                           u4991 4312  
                         u5927 54CE                           u5847 563E                           u5767 23D4  
                         u5937 4DEE                           u5857 544C                           u5777 245A  
                         u5947 5398                           u5867 5476                           u5787 2508  
                         u5957 53C4                           u5877 4CB2                           u5797 2572  
                         u5967 53F2                           u5887 4F72                           u5977 541E  
                         u5897 4FB2                           u5987 5014                           u5997 4E8C  
                _LightBlueMove 55D8                           abs@a 0013                           _dbuf 0116  
                         _labs 5142                           _main 2330                           _dtoa 3B6A  
                         _prec 00E9                           _vals 0184                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4FD6  
                ___fpclassifyf 49E2                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 0043         __end_of_color_read_Red 5810  
              __end_of_HighISR 000E         __end_of_color_read_lum 57C0                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 5ABA  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 542E                _RunOneBlockTime 00F4                  ___fltol@sign1 0009  
              __end_of___aodiv 4508                          ?_labs 0001                __end_of___fladd 2D72  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 47D8  
              __end_of___fldiv 3536                __end_of___flneg 5B30                __end_of___flmul 319C  
              __end_of___flsub 58F6                __end_of___fltol 48DE                    colour_rel@B 0074  
                  colour_rel@G 0070                          ?_stop 0014                    colour_rel@L 0060  
                  colour_rel@R 006C                __end_of___lwdiv 5142                          i2l277 000A  
                 vfpfcnvrt@fmt 0097                __end_of_go_Home 41CC        __end_of_sendCharSerial4 5C2E  
   __end_of_I2C_2_Master_Start 5C58     __end_of_I2C_2_Master_Write 5C3A                   YellowMove@mL 0020  
                        _flags 00ED                   YellowMove@mR 0022                          _fputc 4AE0  
                        _fputs 593A                          labs@a 0001                          pad@fp 0011  
                        _power 00F8                          _width 00E7                          _putch 5C62  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 0020                          tablat 000FF5               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                 main@run_flag 01F0                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 5586                 ?___fpclassifyf 0001        __end_of_color_read_Blue 58B0  
        _I2C_2_Master_RepStart 5C3A               __end_of_BlueMove 520E                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 526C                _reverseOneBlock 537A                   __end_of_labs 51A8  
                 __end_of_main 28B2                   __end_of_dtoa 3DE8                   __end_of_stop 5054  
              _colour_rel$2796 0064                _colour_rel$2797 0068                         ??_labs 0005  
                       ??_main 00D1                         ??_dtoa 0026          __end_of_ReverseYellow 5A3E  
             __end_of_PinkMove 5720                         ??_stop 0018                  __activetblptr 000003  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 567C                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 5586               __end_of___xxtofl 4380  
                    ??_RedMove 0024                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0024                         ___flge 48DE                         ___fleq 4BAA  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 5BB2              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 1936  
                    ??___lwdiv 000B                         _floorf 3DE8                         _memcpy 5720  
                       clear_0 5292                         clear_1 529E                         clear_2 52AA  
                       clear_3 52B6                         _motorL 017B                         _motorR 0172  
                       isa$std 000001                      ??_go_Home 0026                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 58F6                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 5534                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 4E2E  
                   ___flge@ff1 002A                     _YellowMove 567C                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 52BC        __end_of_reverseOneBlock 53D4                     ___flneg@f1 0001  
     __end_of_color_read_Green 5860         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 5C64  
               __pcstackCOMRAM 0001                  _fullSpeedBack 4E2E                   __pidataBANK0 5C58  
                __end_of_fputc 4BAA                  __end_of_fputs 597E                  __end_of_putch 5C64  
            __end_of_GreenMove 5AF8            __end_of_ReversePink 5A7C                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14348 00D3  
        __end_of_reverseDetect 542E                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                     __pbssBANK3 0300  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 5320              __end_of_RetryMove 4FD6                      ?_PinkMove 0020  
            _color_writetoaddr 5BD8                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
          ??_color_writetoaddr 0004                        ?_strcpy 0001                  colour_rel@rel 004D  
               go_Home@WayBack 0024                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5              ??_ForwardOneBlock 001E                     ??_BlueMove 0024  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 0020  
                   _colour_rel 3536        __end_of_Interrupts_init 5C66         color_writetoaddr@value 0003  
             ??_color_read_Red 0007               main@consecuitive 01F2                        _HighISR 0008  
             ??_color_read_lum 0007               ?_reverseOneBlock 001A      __end_of_color_writetoaddr 5BF8  
                      _RedMove 5A7C             _I2C_2_Master_Start 5C4E                     ??_PinkMove 0024  
                   _initUSART4 5BF8             _I2C_2_Master_Write 5C2E                        __Hparam 0000  
                      _WayBack 0300                        __Lparam 0000              color_read_Red@tmp 000A  
                  RetryMove@mL 001A                    RetryMove@mR 001C        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 5A3E  
                      ___aodiv 4380                        ___fladd 28B2                        ___aomod 4674  
                      ___fldiv 319C                        ___flneg 5AF8                        ___flmul 2D72  
                      ___flsub 58B0                        ___fltol 47D8            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 50CE            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 526C                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3FFA                        __ptext0 2330                        __ptext1 5534  
                      __ptext2 54DE                        __ptext3 3864                        __ptext4 1936  
                      __ptext5 58F6                        __ptext6 5720                        __ptext7 5142  
                      __ptext8 3DE8                        __ptext9 49E2                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                        efgtoa@c 0066  
                      efgtoa@d 0074                        efgtoa@e 0078                        efgtoa@f 0062  
                      efgtoa@g 008D                        efgtoa@h 0082                        efgtoa@i 0080  
                      efgtoa@l 0086                        efgtoa@m 0076                        efgtoa@n 008B  
                      efgtoa@p 006B                        efgtoa@t 006D                        efgtoa@u 0091  
                      efgtoa@w 007A                  _RxBufWriteCnt 00F1              color_read_lum@tmp 000A  
                      main@buf 018C                        _sprintf 5534           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 52BC                        floorf@e 0059  
                      floorf@m 0055                        floorf@u 005B                        floorf@x 004B  
                      memcpy@d 0007                        memcpy@n 0005                        memcpy@s 0009  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
              LightBlueMove@mL 0020                LightBlueMove@mR 0022                ??_fullSpeedBack 0018  
           ??_color_click_init 0005                     _move_count 0114              __end_of_vfpfcnvrt 3B6A  
                   efgtoa@mode 0072                     efgtoa@sign 008A                        postdec1 000FE5  
                      postdec2 000FDD                    _Turn45Delay 00F6                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 009D  
                   ??_vfprintf 005F                        strcpy@d 0007                        strcpy@s 0005  
              _initDCmotorsPWM 4ECC                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 4CF2                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                    _CCP1CONbits 000FAB                     main@colour 01F4  
                 _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 5486  
               __end_of___flge 49E2                 __end_of___fleq 4C54                 _fullSpeedAhead 4CF2  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 5BD8                 __end_of_efgtoa 2330                 __end_of_floorf 3FFA  
               __end_of_memcpy 5770                     floorf@F526 00DF       __end_of_Forwardhalfblock 537A  
                    _GreenMove 5ABA                 __end_of_strcpy 593A            start_initialization 526C  
                  __end_of_abs 5A00                    __end_of_pad 50CE                  _TxBufWriteCnt 00EF  
        __end_of_LightBlueMove 562A                   ??_OrangeMove 0024          __end_of___fpclassifyf 4AE0  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 4F54                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 4D90                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 4F54                       ??___wmul 0005                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F2                _ForwardOneBlock 52C6  
                     ??_floorf 004F                       ??_memcpy 0007                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 5A00  
                    ___fldiv@a 0036                      ___fldiv@b 0032                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 55D8  
                    ___flmul@a 0015                      ___flmul@b 0011                      ___flsub@a 002E  
                    ___flsub@b 002A                  __pcstackBANK0 0060                  __pcstackBANK1 018C  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020                    _efgtoa$2427 006F  
             ___lwdiv@dividend 0007                      _dtoa$2396 002E                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 001A                       ?___aodiv 0001                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$2798 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 56CE           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
          __end_of_readColours 526C              _I2C_2_Master_Idle 5B8A              _I2C_2_Master_Init 5B60  
            _I2C_2_Master_Read 597E              _I2C_2_Master_Stop 5C44                  _low_threshold 00EB  
                 _RxBufReadCnt 00F0             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
               colour_rel@vals 004B              _sendStringSerial4 5B30            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D        __end_of_ForwardOneBlock 5320                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E5A  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 3864  
    __end_of_I2C_2_Master_Idle 5BB2      __end_of_I2C_2_Master_Init 5B8A      __end_of_I2C_2_Master_Read 59C0  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 5C4E                   setMotorPWM@m 000E  
                     _DataFlag 00FA    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007                   _TxBufReadCnt 00EE                       _BlueMove 51A8  
                    _turnRight 4C54                     vfpfcnvrt@c 00A5                      copy_data0 5280  
    __end_of_sendStringSerial4 5B60                   ??_colour_rel 004F                  _reverseDetect 53D4  
__end_of_I2C_2_Master_RepStart 5C44             color_read_Blue@tmp 000A            __end_of_setMotorPWM 4674  
                 ??_initUSART4 0001                       _PinkMove 56CE                       __Hrparam 0000  
       __end_of_Colour_decider 1936                      memcpy@tmp 000B                     vfprintf@ap 00AC  
                     __Lrparam 0000                     vfprintf@fp 00A8          __end_of_fullSpeedBack 4ECC  
                  ??_RetryMove 001E                    _readColours 520E                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 0095                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 3864                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3  
                   _ANSELFbits 000EB4                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 41CC                ___lwdiv@divisor 0009             __end_of_initUSART4 5C16  
              ___lwdiv@counter 000D             ??_Forwardhalfblock 001E                     ?_turnRight 0014  
                     __ptext10 47D8                       __ptext11 5AF8                       __ptext20 5B30  
                     __ptext12 3B6A                       __ptext21 5C16                       __ptext13 5054  
                     __ptext30 4ECC                       __ptext22 520E                       __ptext14 593A  
                     __ptext31 3FFA                       __ptext23 5770                       __ptext15 4AE0  
                     __ptext40 51A8                       __ptext32 5A00                       __ptext24 57C0  
                     __ptext16 5C62                       __ptext41 3536                       __ptext33 5A3E  
                     __ptext25 5810                       __ptext17 59C0                       __ptext50 542E  
                     __ptext42 562A                       __ptext34 52C6                       __ptext26 5860  
                     __ptext18 4674                       __ptext51 4C54                       __ptext43 5BD8  
                     __ptext35 5A7C                       __ptext27 5C3A                       __ptext19 4380  
                     __ptext60 4E2E                       __ptext52 4F54                       __ptext44 5C2E  
                     __ptext36 5586                       __ptext28 597E                       __ptext61 4508  
                     __ptext53 4CF2                       __ptext45 5C44                       __ptext37 55D8  
                     __ptext29 5BF8                       __ptext70 48DE                       __ptext62 5BB2  
                     __ptext54 56CE                       __ptext46 5C4E                       __ptext38 5ABA  
                     __ptext71 4BAA                       __ptext63 50CE                       __ptext55 5486  
                     __ptext47 5B8A                       __ptext39 5320                       __ptext72 319C  
                     __ptext64 5C64                       __ptext56 4D90                       __ptext48 5B60  
                     __ptext65 0E5A                       __ptext57 537A                       __ptext49 567C  
                     __ptext66 41CC                       __ptext58 53D4                       __ptext67 58B0  
                     __ptext59 4FD6                       __ptext68 28B2                       __ptext69 2D72  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 0027                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 54DE                  ??_turnRight45 001E  
                     _turnLeft 4D90               ___aomod@dividend 0001              ??_reverseOneBlock 001E  
              main@prev_colour 01F6                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 4508                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 00C4                 _high_threshold 00F2  
             ??_fullSpeedAhead 0018                      strcpy@src 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 562A                       sprintf@f 00C6                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5486  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 54DE                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 5C16                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
