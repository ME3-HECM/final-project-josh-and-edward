

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 16 02:06:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   108                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110   000000                     
   111                           ; Generated 06/04/2022 GMT
   112                           ; 
   113                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F67K40 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145   000000                     
   146                           	psect	idataBANK0
   147   00625C                     __pidataBANK0:
   148                           	callstack 0
   149                           
   150                           ;initializer for _RunOneBlockTime
   151   00625C  041A               	dw	1050
   152                           
   153                           ;initializer for _Turn45Delay
   154   00625E  003C               	dw	60
   155                           
   156                           ;initializer for _power
   157   006260  0032               	dw	50
   158                           
   159                           	psect	idataBANK1
   160   006262                     __pidataBANK1:
   161                           	callstack 0
   162                           
   163                           ;initializer for _run_flag
   164   006262  0001               	dw	1
   165                           
   166                           ;initializer for _move_count
   167   006264  FFFF               	dw	65535
   168   000000                     _TRISEbits	set	3973
   169   000000                     _LATHbits	set	3968
   170   000000                     _TX4REG	set	3812
   171   000000                     _RC4STAbits	set	3815
   172   000000                     _SP4BRGH	set	3814
   173   000000                     _SSP2CON2bits	set	3802
   174   000000                     _RX4PPS	set	3605
   175   000000                     _SSP2CLKPPS	set	3612
   176   000000                     _SSP2DATPPS	set	3613
   177   000000                     _ANSELDbits	set	3751
   178   000000                     _SSP2ADD	set	3798
   179   000000                     _SSP2CON1bits	set	3801
   180   000000                     _LATAbits	set	3961
   181   000000                     _LATFbits	set	3966
   182   000000                     _LATGbits	set	3967
   183   000000                     _TRISAbits	set	3969
   184   000000                     _TRISGbits	set	3975
   185   000000                     _TRISHbits	set	3976
   186   000000                     _PORTFbits	set	3982
   187   000000                     _TMR0L	set	4051
   188   000000                     _TMR0H	set	4052
   189   000000                     _INTCONbits	set	4082
   190   000000                     _CCPR2H	set	4006
   191   000000                     _CCPR1H	set	4010
   192   000000                     _TRISCbits	set	3971
   193   000000                     _TRISDbits	set	3972
   194   000000                     _TRISFbits	set	3974
   195   000000                     _LATDbits	set	3964
   196   000000                     _RC4REG	set	3811
   197   000000                     _SP4BRGL	set	3813
   198   000000                     _TX4STAbits	set	3816
   199   000000                     _BAUD4CONbits	set	3817
   200   000000                     _SSP2CON2	set	3802
   201   000000                     _SSP2STAT	set	3800
   202   000000                     _ANSELFbits	set	3764
   203   000000                     _SSP2BUF	set	3797
   204   000000                     _PIE0bits	set	3625
   205   000000                     _PIR4bits	set	3639
   206   000000                     _RC0PPS	set	3682
   207   000000                     _RD5PPS	set	3695
   208   000000                     _RE2PPS	set	3700
   209   000000                     _RD6PPS	set	3696
   210   000000                     _RC7PPS	set	3689
   211   000000                     _CCPR4H	set	3873
   212   000000                     _CCPR3H	set	3877
   213   000000                     _PIR0bits	set	3635
   214   000000                     _T0CON1bits	set	4054
   215   000000                     _T0CON0bits	set	4053
   216   000000                     _CCP1CONbits	set	4011
   217   000000                     _CCPTMRS0bits	set	4013
   218   000000                     _T2PR	set	4028
   219   000000                     _T2CONbits	set	4029
   220   000000                     _CCP2CONbits	set	4007
   221   000000                     _CCP3CONbits	set	3878
   222   000000                     _CCP4CONbits	set	3874
   223   000000                     _RE4PPS	set	3702
   224   000000                     _RG6PPS	set	3720
   225   000000                     _T2CLKCONbits	set	4031
   226   000000                     _T2HLTbits	set	4030
   227                           
   228                           	psect	smallconst
   229   000E00                     __psmallconst:
   230                           	callstack 0
   231   000E00  00                 	db	0
   232   000E01                     STR_1:
   233                           
   234                           ; BSR set to: 14
   235   000E01  72                 	db	114	;'r'
   236   000E02  65                 	db	101	;'e'
   237   000E03  64                 	db	100	;'d'
   238   000E04  3D                 	db	61	;'='
   239   000E05  25                 	db	37
   240   000E06  66                 	db	102	;'f'
   241   000E07  20                 	db	32
   242   000E08  67                 	db	103	;'g'
   243   000E09  72                 	db	114	;'r'
   244   000E0A  65                 	db	101	;'e'
   245   000E0B  65                 	db	101	;'e'
   246   000E0C  6E                 	db	110	;'n'
   247   000E0D  3D                 	db	61	;'='
   248   000E0E  25                 	db	37
   249   000E0F  66                 	db	102	;'f'
   250   000E10  20                 	db	32
   251   000E11  62                 	db	98	;'b'
   252   000E12  6C                 	db	108	;'l'
   253   000E13  75                 	db	117	;'u'
   254   000E14  65                 	db	101	;'e'
   255   000E15  3D                 	db	61	;'='
   256   000E16  25                 	db	37
   257   000E17  66                 	db	102	;'f'
   258   000E18  20                 	db	32
   259   000E19  6C                 	db	108	;'l'
   260   000E1A  75                 	db	117	;'u'
   261   000E1B  6D                 	db	109	;'m'
   262   000E1C  3D                 	db	61	;'='
   263   000E1D  25                 	db	37
   264   000E1E  64                 	db	100	;'d'
   265   000E1F  20                 	db	32
   266   000E20  61                 	db	97	;'a'
   267   000E21  63                 	db	99	;'c'
   268   000E22  74                 	db	116	;'t'
   269   000E23  75                 	db	117	;'u'
   270   000E24  61                 	db	97	;'a'
   271   000E25  6C                 	db	108	;'l'
   272   000E26  5F                 	db	95	;'_'
   273   000E27  63                 	db	99	;'c'
   274   000E28  6F                 	db	111	;'o'
   275   000E29  6C                 	db	108	;'l'
   276   000E2A  6F                 	db	111	;'o'
   277   000E2B  75                 	db	117	;'u'
   278   000E2C  72                 	db	114	;'r'
   279   000E2D  3D                 	db	61	;'='
   280   000E2E  25                 	db	37
   281   000E2F  64                 	db	100	;'d'
   282   000E30  20                 	db	32
   283   000E31  0D                 	db	13
   284   000E32  0A                 	db	10
   285   000E33  00                 	db	0
   286   000E34                     STR_2:
   287                           
   288                           ; BSR set to: 14
   289   000E34  69                 	db	105	;'i'
   290   000E35  6E                 	db	110	;'n'
   291   000E36  66                 	db	102	;'f'
   292   000E37  00                 	db	0
   293   000E38                     STR_5:
   294                           
   295                           ; BSR set to: 14
   296   000E38  6E                 	db	110	;'n'
   297   000E39  61                 	db	97	;'a'
   298   000E3A  6E                 	db	110	;'n'
   299   000E3B  00                 	db	0
   300   000E3C  00                 	db	0	; dummy byte at the end
   301   000000                     
   302                           ; #config settings
   303                           
   304                           	psect	cinit
   305   0054C6                     __pcinit:
   306                           	callstack 0
   307   0054C6                     start_initialization:
   308                           	callstack 0
   309   0054C6                     __initialization:
   310                           	callstack 0
   311                           
   312                           ; Initialize objects allocated to BANK1 (4 bytes)
   313                           ; load TBLPTR registers with __pidataBANK1
   314   0054C6  0E62               	movlw	low __pidataBANK1
   315   0054C8  6EF6               	movwf	tblptrl,c
   316   0054CA  0E62               	movlw	high __pidataBANK1
   317   0054CC  6EF7               	movwf	tblptrh,c
   318   0054CE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   319   0054D0  6EF8               	movwf	tblptru,c
   320   0054D2  EE01  F0D8         	lfsr	0,__pdataBANK1
   321   0054D6  EE10 F004          	lfsr	1,4
   322   0054DA                     copy_data0:
   323   0054DA  0009               	tblrd		*+
   324   0054DC  CFF5 FFEE          	movff	tablat,postinc0
   325   0054E0  50E5               	movf	postdec1,w,c
   326   0054E2  50E1               	movf	fsr1l,w,c
   327   0054E4  E1FA               	bnz	copy_data0
   328                           
   329                           ; Initialize objects allocated to BANK0 (6 bytes)
   330                           ; load TBLPTR registers with __pidataBANK0
   331   0054E6  0E5C               	movlw	low __pidataBANK0
   332   0054E8  6EF6               	movwf	tblptrl,c
   333   0054EA  0E62               	movlw	high __pidataBANK0
   334   0054EC  6EF7               	movwf	tblptrh,c
   335   0054EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   336   0054F0  6EF8               	movwf	tblptru,c
   337   0054F2  EE00  F0F2         	lfsr	0,__pdataBANK0
   338   0054F6  EE10 F006          	lfsr	1,6
   339   0054FA                     copy_data1:
   340   0054FA  0009               	tblrd		*+
   341   0054FC  CFF5 FFEE          	movff	tablat,postinc0
   342   005500  50E5               	movf	postdec1,w,c
   343   005502  50E1               	movf	fsr1l,w,c
   344   005504  E1FA               	bnz	copy_data1
   345                           
   346                           ; Clear objects allocated to BANK2 (240 bytes)
   347   005506  EE02  F000         	lfsr	0,__pbssBANK2
   348   00550A  0EF0               	movlw	240
   349   00550C                     clear_0:
   350   00550C  6AEE               	clrf	postinc0,c
   351   00550E  06E8               	decf	wreg,f,c
   352   005510  E1FD               	bnz	clear_0
   353                           
   354                           ; Clear objects allocated to BANK1 (114 bytes)
   355   005512  EE01  F000         	lfsr	0,__pbssBANK1
   356   005516  0E72               	movlw	114
   357   005518                     clear_1:
   358   005518  6AEE               	clrf	postinc0,c
   359   00551A  06E8               	decf	wreg,f,c
   360   00551C  E1FD               	bnz	clear_1
   361                           
   362                           ; Clear objects allocated to BANK0 (31 bytes)
   363   00551E  EE00  F0D3         	lfsr	0,__pbssBANK0
   364   005522  0E1F               	movlw	31
   365   005524                     clear_2:
   366   005524  6AEE               	clrf	postinc0,c
   367   005526  06E8               	decf	wreg,f,c
   368   005528  E1FD               	bnz	clear_2
   369   00552A                     end_of_initialization:
   370                           	callstack 0
   371   00552A                     __end_of__initialization:
   372                           	callstack 0
   373   00552A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   374   00552C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   375   00552E  0100               	movlb	0
   376   005530  EFE2  F01B         	goto	_main	;jump to C main() function
   377                           
   378                           	psect	bssBANK0
   379   0000D3                     __pbssBANK0:
   380                           	callstack 0
   381   0000D3                     	ds	12
   382   0000DF                     floorf@F526:
   383                           	callstack 0
   384   0000DF                     	ds	4
   385   0000E3                     ___fpclassifyf@F465:
   386                           	callstack 0
   387   0000E3                     	ds	4
   388   0000E7                     _width:
   389                           	callstack 0
   390   0000E7                     	ds	2
   391   0000E9                     _prec:
   392                           	callstack 0
   393   0000E9                     	ds	2
   394   0000EB                     _lost_count:
   395                           	callstack 0
   396   0000EB                     	ds	2
   397   0000ED                     _flags:
   398                           	callstack 0
   399   0000ED                     	ds	1
   400   0000EE                     _TxBufReadCnt:
   401                           	callstack 0
   402   0000EE                     	ds	1
   403   0000EF                     _TxBufWriteCnt:
   404                           	callstack 0
   405   0000EF                     	ds	1
   406   0000F0                     _RxBufReadCnt:
   407                           	callstack 0
   408   0000F0                     	ds	1
   409   0000F1                     _RxBufWriteCnt:
   410                           	callstack 0
   411   0000F1                     	ds	1
   412                           
   413                           	psect	dataBANK0
   414   0000F2                     __pdataBANK0:
   415                           	callstack 0
   416   0000F2                     _RunOneBlockTime:
   417                           	callstack 0
   418   0000F2                     	ds	2
   419   0000F4                     _Turn45Delay:
   420                           	callstack 0
   421   0000F4                     	ds	2
   422   0000F6                     _power:
   423                           	callstack 0
   424   0000F6                     	ds	2
   425                           
   426                           	psect	bssBANK1
   427   000100                     __pbssBANK1:
   428                           	callstack 0
   429   000100                     _EUSART4RXbuf:
   430                           	callstack 0
   431   000100                     	ds	20
   432   000114                     _lost_flag:
   433                           	callstack 0
   434   000114                     	ds	2
   435   000116                     _consecuitive:
   436                           	callstack 0
   437   000116                     	ds	2
   438   000118                     _prev_colour:
   439                           	callstack 0
   440   000118                     	ds	2
   441   00011A                     _WayBack:
   442                           	callstack 0
   443   00011A                     	ds	50
   444   00014C                     _rel:
   445                           	callstack 0
   446   00014C                     	ds	12
   447   000158                     _motorR:
   448                           	callstack 0
   449   000158                     	ds	9
   450   000161                     _motorL:
   451                           	callstack 0
   452   000161                     	ds	9
   453   00016A                     _vals:
   454                           	callstack 0
   455   00016A                     	ds	8
   456                           
   457                           	psect	dataBANK1
   458   0001D8                     __pdataBANK1:
   459                           	callstack 0
   460   0001D8                     _run_flag:
   461                           	callstack 0
   462   0001D8                     	ds	2
   463   0001DA                     _move_count:
   464                           	callstack 0
   465   0001DA                     	ds	2
   466                           
   467                           	psect	bssBANK2
   468   000200                     __pbssBANK2:
   469                           	callstack 0
   470   000200                     _EUSART4TXbuf:
   471                           	callstack 0
   472   000200                     	ds	60
   473   00023C                     _Time_forward:
   474                           	callstack 0
   475   00023C                     	ds	100
   476   0002A0                     _dbuf:
   477                           	callstack 0
   478   0002A0                     	ds	80
   479                           
   480                           	psect	cstackBANK1
   481   000172                     __pcstackBANK1:
   482                           	callstack 0
   483   000172                     main@buf:
   484                           	callstack 0
   485                           
   486                           ; 100 bytes @ 0x0
   487   000172                     	ds	100
   488   0001D6                     main@colour:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x64
   492   0001D6                     	ds	2
   493                           
   494                           	psect	cstackBANK0
   495   000060                     __pcstackBANK0:
   496                           	callstack 0
   497   000060                     efgtoa@fp:
   498                           	callstack 0
   499   000060                     colour_rel@L:
   500                           	callstack 0
   501   000060                     _Colour_decider$3315:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x0
   505   000060                     	ds	2
   506   000062                     efgtoa@f:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x2
   510   000062                     	ds	2
   511   000064                     Colour_decider@Cmax_i:
   512                           	callstack 0
   513   000064                     _colour_rel$3313:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x4
   517   000064                     	ds	2
   518   000066                     efgtoa@c:
   519                           	callstack 0
   520   000066                     Colour_decider@RGB_col:
   521                           	callstack 0
   522                           
   523                           ; 12 bytes @ 0x6
   524   000066                     	ds	1
   525   000067                     ??_efgtoa:
   526                           
   527                           ; 1 bytes @ 0x7
   528   000067                     	ds	1
   529   000068                     _colour_rel$3314:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x8
   533   000068                     	ds	1
   534   000069                     efgtoa@ne:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x9
   538   000069                     	ds	2
   539   00006B                     efgtoa@p:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xB
   543   00006B                     	ds	1
   544   00006C                     colour_rel@R:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0xC
   548   00006C                     	ds	1
   549   00006D                     efgtoa@t:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0xD
   553   00006D                     	ds	2
   554   00006F                     _efgtoa$2969:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0xF
   558   00006F                     	ds	1
   559   000070                     colour_rel@G:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x10
   563   000070                     	ds	1
   564   000071                     efgtoa@pp:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x11
   568   000071                     	ds	1
   569   000072                     efgtoa@mode:
   570                           	callstack 0
   571   000072                     Colour_decider@Cmax:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x12
   575   000072                     	ds	1
   576   000073                     efgtoa@nmode:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x13
   580   000073                     	ds	1
   581   000074                     efgtoa@d:
   582                           	callstack 0
   583   000074                     colour_rel@B:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x14
   587   000074                     	ds	2
   588   000076                     efgtoa@m:
   589                           	callstack 0
   590   000076                     Colour_decider@Cmin:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x16
   594   000076                     	ds	2
   595   000078                     efgtoa@e:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x18
   599   000078                     	ds	2
   600   00007A                     Colour_decider@i:
   601                           	callstack 0
   602   00007A                     efgtoa@w:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x1A
   606   00007A                     	ds	2
   607   00007C                     Colour_decider@Hue:
   608                           	callstack 0
   609   00007C                     efgtoa@ou:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x1C
   613   00007C                     	ds	4
   614   000080                     efgtoa@i:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x20
   618   000080                     	ds	2
   619   000082                     efgtoa@h:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x22
   623   000082                     	ds	4
   624   000086                     efgtoa@l:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x26
   628   000086                     	ds	4
   629   00008A                     efgtoa@sign:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x2A
   633   00008A                     	ds	1
   634   00008B                     efgtoa@n:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x2B
   638   00008B                     	ds	2
   639   00008D                     efgtoa@g:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0x2D
   643   00008D                     	ds	4
   644   000091                     efgtoa@u:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x31
   648   000091                     	ds	4
   649   000095                     vfpfcnvrt@fp:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x35
   653   000095                     	ds	2
   654   000097                     vfpfcnvrt@fmt:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x37
   658   000097                     	ds	2
   659   000099                     vfpfcnvrt@ap:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x39
   663   000099                     	ds	2
   664   00009B                     ??_vfpfcnvrt:
   665                           
   666                           ; 1 bytes @ 0x3B
   667   00009B                     	ds	2
   668   00009D                     vfpfcnvrt@convarg:
   669                           	callstack 0
   670                           
   671                           ; 8 bytes @ 0x3D
   672   00009D                     	ds	8
   673   0000A5                     vfpfcnvrt@c:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x45
   677   0000A5                     	ds	1
   678   0000A6                     vfpfcnvrt@cp:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x46
   682   0000A6                     	ds	2
   683   0000A8                     ?_vfprintf:
   684                           	callstack 0
   685   0000A8                     vfprintf@fp:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x48
   689   0000A8                     	ds	2
   690   0000AA                     vfprintf@fmt:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x4A
   694   0000AA                     	ds	2
   695   0000AC                     vfprintf@ap:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x4C
   699   0000AC                     	ds	2
   700   0000AE                     vfprintf@cfmt:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x4E
   704   0000AE                     	ds	2
   705   0000B0                     ?_sprintf:
   706                           	callstack 0
   707   0000B0                     sprintf@s:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x50
   711   0000B0                     	ds	2
   712   0000B2                     sprintf@fmt:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x52
   716   0000B2                     	ds	18
   717   0000C4                     sprintf@ap:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x64
   721   0000C4                     	ds	2
   722   0000C6                     sprintf@f:
   723                           	callstack 0
   724                           
   725                           ; 11 bytes @ 0x66
   726   0000C6                     	ds	11
   727   0000D1                     ??_main:
   728                           
   729                           ; 1 bytes @ 0x71
   730   0000D1                     	ds	2
   731                           
   732                           	psect	cstackCOMRAM
   733   000001                     __pcstackCOMRAM:
   734                           	callstack 0
   735   000001                     ??_getTMR0val:
   736   000001                     ??_I2C_2_Master_Idle:
   737   000001                     ?___fpclassifyf:
   738                           	callstack 0
   739   000001                     ?___wmul:
   740                           	callstack 0
   741   000001                     ?___fladd:
   742                           	callstack 0
   743   000001                     ?_labs:
   744                           	callstack 0
   745   000001                     ?___flneg:
   746                           	callstack 0
   747   000001                     ?___fltol:
   748                           	callstack 0
   749   000001                     ?___xxtofl:
   750                           	callstack 0
   751   000001                     ?___aodiv:
   752                           	callstack 0
   753   000001                     ?___aomod:
   754                           	callstack 0
   755   000001                     sendCharSerial4@charToSend:
   756                           	callstack 0
   757   000001                     initDCmotorsPWM@PWMperiod:
   758                           	callstack 0
   759   000001                     TurnDelay@Turn45Delay:
   760                           	callstack 0
   761   000001                     delayed_ms@time:
   762                           	callstack 0
   763   000001                     ___wmul@multiplier:
   764                           	callstack 0
   765   000001                     memcpy@d1:
   766                           	callstack 0
   767   000001                     fputc@c:
   768                           	callstack 0
   769   000001                     strcpy@dest:
   770                           	callstack 0
   771   000001                     ___flneg@f1:
   772                           	callstack 0
   773   000001                     ___fltol@f1:
   774                           	callstack 0
   775   000001                     ___fladd@b:
   776                           	callstack 0
   777   000001                     ___xxtofl@val:
   778                           	callstack 0
   779   000001                     ___fpclassifyf@x:
   780                           	callstack 0
   781   000001                     labs@a:
   782                           	callstack 0
   783   000001                     ___aodiv@dividend:
   784                           	callstack 0
   785   000001                     ___aomod@dividend:
   786                           	callstack 0
   787                           
   788                           ; 8 bytes @ 0x0
   789   000001                     	ds	1
   790   000002                     ??_I2C_2_Master_Read:
   791   000002                     I2C_2_Master_Write@data_byte:
   792                           	callstack 0
   793   000002                     sendStringSerial4@string:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x1
   797   000002                     	ds	1
   798   000003                     ??_delayed_ms:
   799   000003                     ??_TurnDelay:
   800   000003                     color_writetoaddr@value:
   801                           	callstack 0
   802   000003                     I2C_2_Master_Read@ack:
   803                           	callstack 0
   804   000003                     getTMR0val@temp:
   805                           	callstack 0
   806   000003                     ___wmul@multiplicand:
   807                           	callstack 0
   808   000003                     memcpy@s1:
   809                           	callstack 0
   810   000003                     fputc@fp:
   811                           	callstack 0
   812   000003                     strcpy@src:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816   000003                     	ds	1
   817   000004                     color_writetoaddr@address:
   818                           	callstack 0
   819   000004                     I2C_2_Master_Read@tmp:
   820                           	callstack 0
   821   000004                     delayed_ms@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x3
   825   000004                     	ds	1
   826   000005                     ??_fputc:
   827   000005                     ??___fpclassifyf:
   828   000005                     ??_labs:
   829   000005                     ??_color_click_init:
   830   000005                     ??___fltol:
   831   000005                     ??___xxtofl:
   832   000005                     ?_color_read_lum:
   833                           	callstack 0
   834   000005                     ?_color_read_Red:
   835                           	callstack 0
   836   000005                     ?_color_read_Green:
   837                           	callstack 0
   838   000005                     ?_color_read_Blue:
   839                           	callstack 0
   840   000005                     getTMR0val@moving:
   841                           	callstack 0
   842   000005                     ___wmul@product:
   843                           	callstack 0
   844   000005                     memcpy@n:
   845                           	callstack 0
   846   000005                     strcpy@s:
   847                           	callstack 0
   848   000005                     ___fladd@a:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x4
   852   000005                     	ds	2
   853   000007                     ??_color_read_lum:
   854   000007                     ??_color_read_Red:
   855   000007                     ??_color_read_Green:
   856   000007                     ??_color_read_Blue:
   857   000007                     ?___lwdiv:
   858                           	callstack 0
   859   000007                     ___lwdiv@dividend:
   860                           	callstack 0
   861   000007                     memcpy@d:
   862                           	callstack 0
   863   000007                     strcpy@d:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x6
   867   000007                     	ds	2
   868   000009                     ??___fladd:
   869   000009                     ___fltol@sign1:
   870                           	callstack 0
   871   000009                     ___xxtofl@sign:
   872                           	callstack 0
   873   000009                     ___lwdiv@divisor:
   874                           	callstack 0
   875   000009                     ___fpclassifyf@e:
   876                           	callstack 0
   877   000009                     memcpy@s:
   878                           	callstack 0
   879   000009                     ___aodiv@divisor:
   880                           	callstack 0
   881   000009                     ___aomod@divisor:
   882                           	callstack 0
   883                           
   884                           ; 8 bytes @ 0x8
   885   000009                     	ds	1
   886   00000A                     ___fltol@exp1:
   887                           	callstack 0
   888   00000A                     ___xxtofl@exp:
   889                           	callstack 0
   890   00000A                     color_read_lum@tmp:
   891                           	callstack 0
   892   00000A                     color_read_Red@tmp:
   893                           	callstack 0
   894   00000A                     color_read_Green@tmp:
   895                           	callstack 0
   896   00000A                     color_read_Blue@tmp:
   897                           	callstack 0
   898   00000A                     fputs@s:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x9
   902   00000A                     	ds	1
   903   00000B                     memcpy@tmp:
   904                           	callstack 0
   905   00000B                     ___lwdiv@quotient:
   906                           	callstack 0
   907   00000B                     ___xxtofl@arg:
   908                           	callstack 0
   909   00000B                     ___fpclassifyf@u:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0xA
   913   00000B                     	ds	1
   914   00000C                     readColours@vals:
   915                           	callstack 0
   916   00000C                     fputs@fp:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0xB
   920   00000C                     	ds	1
   921   00000D                     ___lwdiv@counter:
   922                           	callstack 0
   923   00000D                     ___fladd@signs:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0xC
   927   00000D                     	ds	1
   928   00000E                     ___fladd@aexp:
   929                           	callstack 0
   930   00000E                     fputs@c:
   931                           	callstack 0
   932   00000E                     setMotorPWM@m:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0xD
   936   00000E                     	ds	1
   937   00000F                     ___fladd@bexp:
   938                           	callstack 0
   939   00000F                     fputs@i:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0xE
   943   00000F                     	ds	1
   944   000010                     ??_setMotorPWM:
   945   000010                     ___fladd@grs:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0xF
   949   000010                     	ds	1
   950   000011                     ?___flmul:
   951                           	callstack 0
   952   000011                     ___aodiv@counter:
   953                           	callstack 0
   954   000011                     ___aomod@counter:
   955                           	callstack 0
   956   000011                     pad@fp:
   957                           	callstack 0
   958   000011                     ___flmul@b:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x10
   962   000011                     	ds	1
   963   000012                     setMotorPWM@posDuty:
   964                           	callstack 0
   965   000012                     ___aodiv@sign:
   966                           	callstack 0
   967   000012                     ___aomod@sign:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x11
   971   000012                     	ds	1
   972   000013                     ?_abs:
   973                           	callstack 0
   974   000013                     setMotorPWM@negDuty:
   975                           	callstack 0
   976   000013                     pad@buf:
   977                           	callstack 0
   978   000013                     abs@a:
   979                           	callstack 0
   980   000013                     ___aodiv@quotient:
   981                           	callstack 0
   982                           
   983                           ; 8 bytes @ 0x12
   984   000013                     	ds	1
   985   000014                     stop@mL:
   986                           	callstack 0
   987   000014                     turnLeft@mL:
   988                           	callstack 0
   989   000014                     turnRight@mL:
   990                           	callstack 0
   991   000014                     fullSpeedAhead@mL:
   992                           	callstack 0
   993   000014                     timed_forward@mL:
   994                           	callstack 0
   995   000014                     fullSpeedBack@mL:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x13
   999   000014                     	ds	1
  1000   000015                     ??_abs:
  1001   000015                     pad@p:
  1002                           	callstack 0
  1003   000015                     ___flmul@a:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x14
  1007   000015                     	ds	1
  1008   000016                     stop@mR:
  1009                           	callstack 0
  1010   000016                     turnLeft@mR:
  1011                           	callstack 0
  1012   000016                     turnRight@mR:
  1013                           	callstack 0
  1014   000016                     fullSpeedAhead@mR:
  1015                           	callstack 0
  1016   000016                     timed_forward@mR:
  1017                           	callstack 0
  1018   000016                     fullSpeedBack@mR:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x15
  1022   000016                     	ds	1
  1023   000017                     ??_pad:
  1024                           
  1025                           ; 1 bytes @ 0x16
  1026   000017                     	ds	1
  1027   000018                     ??_fullSpeedAhead:
  1028   000018                     ??_stop:
  1029   000018                     ??_turnLeft:
  1030   000018                     ??_turnRight:
  1031   000018                     ??_fullSpeedBack:
  1032   000018                     timed_forward@time:
  1033                           	callstack 0
  1034   000018                     pad@i:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x17
  1038   000018                     	ds	1
  1039   000019                     ??___flmul:
  1040                           
  1041                           ; 1 bytes @ 0x18
  1042   000019                     	ds	1
  1043   00001A                     ??_timed_forward:
  1044   00001A                     turnRight45@mL:
  1045                           	callstack 0
  1046   00001A                     turnLeft45@mL:
  1047                           	callstack 0
  1048   00001A                     reverseDetect@mL:
  1049                           	callstack 0
  1050   00001A                     homeReverse@mL:
  1051                           	callstack 0
  1052   00001A                     reverseOneBlock@mL:
  1053                           	callstack 0
  1054   00001A                     ForwardOneBlock@mL:
  1055                           	callstack 0
  1056   00001A                     Forwardhalfblock@mL:
  1057                           	callstack 0
  1058   00001A                     quaterForward@mL:
  1059                           	callstack 0
  1060   00001A                     Backhalfblock@mL:
  1061                           	callstack 0
  1062   00001A                     pad@w:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x19
  1066   00001A                     	ds	2
  1067   00001C                     turnRight45@mR:
  1068                           	callstack 0
  1069   00001C                     turnLeft45@mR:
  1070                           	callstack 0
  1071   00001C                     reverseDetect@mR:
  1072                           	callstack 0
  1073   00001C                     homeReverse@mR:
  1074                           	callstack 0
  1075   00001C                     reverseOneBlock@mR:
  1076                           	callstack 0
  1077   00001C                     ForwardOneBlock@mR:
  1078                           	callstack 0
  1079   00001C                     Forwardhalfblock@mR:
  1080                           	callstack 0
  1081   00001C                     quaterForward@mR:
  1082                           	callstack 0
  1083   00001C                     Backhalfblock@mR:
  1084                           	callstack 0
  1085   00001C                     dtoa@fp:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x1B
  1089   00001C                     	ds	1
  1090   00001D                     ___flmul@sign:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x1C
  1094   00001D                     	ds	1
  1095   00001E                     ??_Forwardhalfblock:
  1096   00001E                     ??_Backhalfblock:
  1097   00001E                     ??_homeReverse:
  1098   00001E                     ??_turnRight45:
  1099   00001E                     ??_turnLeft45:
  1100   00001E                     ??_reverseDetect:
  1101   00001E                     ??_reverseOneBlock:
  1102   00001E                     ??_ForwardOneBlock:
  1103   00001E                     ??_quaterForward:
  1104   00001E                     ___flmul@grs:
  1105                           	callstack 0
  1106   00001E                     dtoa@d:
  1107                           	callstack 0
  1108                           
  1109                           ; 8 bytes @ 0x1D
  1110   00001E                     	ds	2
  1111   000020                     RedMove@mL:
  1112                           	callstack 0
  1113   000020                     GreenMove@mL:
  1114                           	callstack 0
  1115   000020                     BlueMove@mL:
  1116                           	callstack 0
  1117   000020                     YellowMove@mL:
  1118                           	callstack 0
  1119   000020                     PinkMove@mL:
  1120                           	callstack 0
  1121   000020                     OrangeMove@mL:
  1122                           	callstack 0
  1123   000020                     LightBlueMove@mL:
  1124                           	callstack 0
  1125   000020                     RetryMove@mL:
  1126                           	callstack 0
  1127   000020                     ReverseYellow@mL:
  1128                           	callstack 0
  1129   000020                     ReversePink@mL:
  1130                           	callstack 0
  1131   000020                     ReverseOrangeMove@mL:
  1132                           	callstack 0
  1133   000020                     ReverseLightBlueMove@mL:
  1134                           	callstack 0
  1135   000020                     turnCalibration@mL:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x1F
  1139   000020                     	ds	2
  1140   000022                     ___flmul@aexp:
  1141                           	callstack 0
  1142   000022                     RedMove@mR:
  1143                           	callstack 0
  1144   000022                     GreenMove@mR:
  1145                           	callstack 0
  1146   000022                     BlueMove@mR:
  1147                           	callstack 0
  1148   000022                     YellowMove@mR:
  1149                           	callstack 0
  1150   000022                     PinkMove@mR:
  1151                           	callstack 0
  1152   000022                     OrangeMove@mR:
  1153                           	callstack 0
  1154   000022                     LightBlueMove@mR:
  1155                           	callstack 0
  1156   000022                     RetryMove@mR:
  1157                           	callstack 0
  1158   000022                     ReverseYellow@mR:
  1159                           	callstack 0
  1160   000022                     ReversePink@mR:
  1161                           	callstack 0
  1162   000022                     ReverseOrangeMove@mR:
  1163                           	callstack 0
  1164   000022                     ReverseLightBlueMove@mR:
  1165                           	callstack 0
  1166   000022                     turnCalibration@mR:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x21
  1170   000022                     	ds	1
  1171   000023                     ___flmul@bexp:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x22
  1175   000023                     	ds	1
  1176   000024                     ??_turnCalibration:
  1177   000024                     ??_RetryMove:
  1178   000024                     go_Home@WayBack:
  1179                           	callstack 0
  1180   000024                     ___flmul@prod:
  1181                           	callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x23
  1184   000024                     	ds	2
  1185   000026                     ??_dtoa:
  1186   000026                     go_Home@Time_forward:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x25
  1190   000026                     	ds	2
  1191   000028                     ??_go_Home:
  1192   000028                     ___flmul@temp:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x27
  1196   000028                     	ds	2
  1197   00002A                     ?___flsub:
  1198                           	callstack 0
  1199   00002A                     ___flge@ff1:
  1200                           	callstack 0
  1201   00002A                     ___flsub@b:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x29
  1205   00002A                     	ds	1
  1206   00002B                     go_Home@i:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x2A
  1210   00002B                     	ds	2
  1211   00002D                     colour_move@recognized_colour:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x2C
  1215   00002D                     	ds	1
  1216   00002E                     _dtoa$2938:
  1217                           	callstack 0
  1218   00002E                     ___flge@ff2:
  1219                           	callstack 0
  1220   00002E                     ___flsub@a:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x2D
  1224   00002E                     	ds	1
  1225   00002F                     
  1226                           ; 1 bytes @ 0x2E
  1227   00002F                     	ds	1
  1228   000030                     dtoa@p:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x2F
  1232   000030                     	ds	2
  1233   000032                     ??___flge:
  1234   000032                     ?___fldiv:
  1235                           	callstack 0
  1236   000032                     dtoa@w:
  1237                           	callstack 0
  1238   000032                     ___fleq@ff1:
  1239                           	callstack 0
  1240   000032                     ___fldiv@b:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x31
  1244   000032                     	ds	2
  1245   000034                     dtoa@n:
  1246                           	callstack 0
  1247                           
  1248                           ; 8 bytes @ 0x33
  1249   000034                     	ds	2
  1250   000036                     ___fleq@ff2:
  1251                           	callstack 0
  1252   000036                     ___fldiv@a:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x35
  1256   000036                     	ds	4
  1257   00003A                     ??___fldiv:
  1258   00003A                     ??___fleq:
  1259                           
  1260                           ; 1 bytes @ 0x39
  1261   00003A                     	ds	2
  1262   00003C                     dtoa@i:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x3B
  1266   00003C                     	ds	2
  1267   00003E                     dtoa@s:
  1268                           	callstack 0
  1269   00003E                     ___fldiv@rem:
  1270                           	callstack 0
  1271                           
  1272                           ; 4 bytes @ 0x3D
  1273   00003E                     	ds	4
  1274   000042                     ___fldiv@sign:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0x41
  1278   000042                     	ds	1
  1279   000043                     ___fldiv@new_exp:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x42
  1283   000043                     	ds	2
  1284   000045                     ___fldiv@grs:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x44
  1288   000045                     	ds	4
  1289   000049                     ___fldiv@bexp:
  1290                           	callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x48
  1293   000049                     	ds	1
  1294   00004A                     ___fldiv@aexp:
  1295                           	callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x49
  1298   00004A                     	ds	1
  1299   00004B                     ?_Colour_decider:
  1300                           	callstack 0
  1301   00004B                     ?_floorf:
  1302                           	callstack 0
  1303   00004B                     colour_rel@vals:
  1304                           	callstack 0
  1305   00004B                     Colour_decider@vals:
  1306                           	callstack 0
  1307   00004B                     floorf@x:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x4A
  1311   00004B                     	ds	2
  1312   00004D                     colour_rel@rel:
  1313                           	callstack 0
  1314   00004D                     Colour_decider@rel:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0x4C
  1318   00004D                     	ds	2
  1319   00004F                     ??_floorf:
  1320   00004F                     ??_Colour_decider:
  1321                           
  1322                           ; 1 bytes @ 0x4E
  1323   00004F                     	ds	6
  1324   000055                     floorf@m:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x54
  1328   000055                     	ds	4
  1329   000059                     floorf@e:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x58
  1333   000059                     	ds	2
  1334   00005B                     floorf@u:
  1335                           	callstack 0
  1336                           
  1337                           ; 4 bytes @ 0x5A
  1338   00005B                     	ds	4
  1339   00005F                     
  1340                           ; 1 bytes @ 0x5E
  1341 ;;
  1342 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1343 ;;
  1344 ;; *************** function _main *****************
  1345 ;; Defined at:
  1346 ;;		line 26 in file "main.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  colour          2  100[BANK1 ] int 
  1351 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Totals:         0       2     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;Total ram usage:      104 bytes
  1366 ;; Hardware stack levels required when called: 9
  1367 ;; This function calls:
  1368 ;;		_Buttons_init
  1369 ;;		_Colour_decider
  1370 ;;		_Forwardhalfblock
  1371 ;;		_I2C_2_Master_Init
  1372 ;;		_Interrupts_init
  1373 ;;		_LED_init
  1374 ;;		_Timer0_init
  1375 ;;		_color_click_init
  1376 ;;		_colour_move
  1377 ;;		_colour_rel
  1378 ;;		_fullSpeedAhead
  1379 ;;		_getTMR0val
  1380 ;;		_go_Home
  1381 ;;		_initDCmotorsPWM
  1382 ;;		_initUSART4
  1383 ;;		_readColours
  1384 ;;		_sendStringSerial4
  1385 ;;		_sprintf
  1386 ;;		_turnCalibration
  1387 ;; This function is called by:
  1388 ;;		Startup code after reset
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text0
  1393   0037C4                     __ptext0:
  1394                           	callstack 0
  1395   0037C4                     _main:
  1396                           	callstack 22
  1397   0037C4                     
  1398                           ;main.c: 27:     initUSART4();
  1399   0037C4  ECF2  F030         	call	_initUSART4	;wreg free
  1400   0037C8                     
  1401                           ;main.c: 28:     Interrupts_init();
  1402   0037C8  EC13  F031         	call	_Interrupts_init	;wreg free
  1403   0037CC                     
  1404                           ;main.c: 29:     color_click_init();
  1405   0037CC  ECCB  F02D         	call	_color_click_init	;wreg free
  1406   0037D0                     
  1407                           ;main.c: 30:     I2C_2_Master_Init();
  1408   0037D0  EC83  F030         	call	_I2C_2_Master_Init	;wreg free
  1409   0037D4                     
  1410                           ;main.c: 31:     LED_init();
  1411   0037D4  ECAC  F030         	call	_LED_init	;wreg free
  1412   0037D8                     
  1413                           ;main.c: 32:     Buttons_init();
  1414   0037D8  EC19  F031         	call	_Buttons_init	;wreg free
  1415   0037DC                     
  1416                           ;main.c: 33:     initDCmotorsPWM(200);
  1417   0037DC  0E00               	movlw	0
  1418   0037DE  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1419   0037E0  0EC8               	movlw	200
  1420   0037E2  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1421   0037E4  EC2C  F029         	call	_initDCmotorsPWM	;wreg free
  1422   0037E8                     
  1423                           ;main.c: 34:     Timer0_init();
  1424   0037E8  ECE2  F030         	call	_Timer0_init	;wreg free
  1425   0037EC                     
  1426                           ;main.c: 39:     motorL.power=0;
  1427   0037EC  0E00               	movlw	0
  1428   0037EE  0101               	movlb	1	; () banked
  1429   0037F0  6F61               	movwf	_motorL& (0+255),b
  1430   0037F2                     
  1431                           ; BSR set to: 1
  1432                           ;main.c: 40:     motorL.direction=1;
  1433   0037F2  0E01               	movlw	1
  1434   0037F4  6F62               	movwf	(_motorL+1)& (0+255),b
  1435   0037F6                     
  1436                           ; BSR set to: 1
  1437                           ;main.c: 41:     motorL.brakemode=1;
  1438   0037F6  0E01               	movlw	1
  1439   0037F8  6F63               	movwf	(_motorL+2)& (0+255),b
  1440   0037FA                     
  1441                           ; BSR set to: 1
  1442                           ;main.c: 42:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1443   0037FA  0EAA               	movlw	170
  1444   0037FC  6F66               	movwf	(_motorL+5)& (0+255),b
  1445   0037FE  0E0F               	movlw	15
  1446   003800  6F67               	movwf	(_motorL+6)& (0+255),b
  1447   003802                     
  1448                           ; BSR set to: 1
  1449                           ;main.c: 43:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1450   003802  0EA6               	movlw	166
  1451   003804  6F68               	movwf	(_motorL+7)& (0+255),b
  1452   003806  0E0F               	movlw	15
  1453   003808  6F69               	movwf	(_motorL+8)& (0+255),b
  1454   00380A                     
  1455                           ; BSR set to: 1
  1456                           ;main.c: 44:     motorL.PWMperiod=200;
  1457   00380A  0E00               	movlw	0
  1458   00380C  6F65               	movwf	(_motorL+4)& (0+255),b
  1459   00380E  0EC8               	movlw	200
  1460   003810  6F64               	movwf	(_motorL+3)& (0+255),b
  1461   003812                     
  1462                           ; BSR set to: 1
  1463                           ;main.c: 47:     motorR.power=0;
  1464   003812  0E00               	movlw	0
  1465   003814  6F58               	movwf	_motorR& (0+255),b
  1466   003816                     
  1467                           ; BSR set to: 1
  1468                           ;main.c: 48:     motorR.direction=1;
  1469   003816  0E01               	movlw	1
  1470   003818  6F59               	movwf	(_motorR+1)& (0+255),b
  1471   00381A                     
  1472                           ; BSR set to: 1
  1473                           ;main.c: 49:     motorR.brakemode=1;
  1474   00381A  0E01               	movlw	1
  1475   00381C  6F5A               	movwf	(_motorR+2)& (0+255),b
  1476   00381E                     
  1477                           ; BSR set to: 1
  1478                           ;main.c: 50:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1479   00381E  0E25               	movlw	37
  1480   003820  6F5D               	movwf	(_motorR+5)& (0+255),b
  1481   003822  0E0F               	movlw	15
  1482   003824  6F5E               	movwf	(_motorR+6)& (0+255),b
  1483   003826                     
  1484                           ; BSR set to: 1
  1485                           ;main.c: 51:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1486   003826  0E21               	movlw	33
  1487   003828  6F5F               	movwf	(_motorR+7)& (0+255),b
  1488   00382A  0E0F               	movlw	15
  1489   00382C  6F60               	movwf	(_motorR+8)& (0+255),b
  1490   00382E                     
  1491                           ; BSR set to: 1
  1492                           ;main.c: 52:     motorR.PWMperiod=200;
  1493   00382E  0E00               	movlw	0
  1494   003830  6F5C               	movwf	(_motorR+4)& (0+255),b
  1495   003832  0EC8               	movlw	200
  1496   003834  6F5B               	movwf	(_motorR+3)& (0+255),b
  1497   003836                     
  1498                           ; BSR set to: 1
  1499                           ;main.c: 54:     char buf[100];;main.c: 56:     turnCalibration(&motorL,&motorR);
  1500   003836  0E61               	movlw	low _motorL
  1501   003838  6E20               	movwf	turnCalibration@mL^0,c
  1502   00383A  0E01               	movlw	high _motorL
  1503   00383C  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1504   00383E  0E58               	movlw	low _motorR
  1505   003840  6E22               	movwf	turnCalibration@mR^0,c
  1506   003842  0E01               	movlw	high _motorR
  1507   003844  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1508   003846  ECA5  F021         	call	_turnCalibration	;wreg free
  1509   00384A                     
  1510                           ;main.c: 58:     LATFbits.LATF0=0;
  1511   00384A  907E               	bcf	126,0,c	;volatile
  1512   00384C                     
  1513                           ;main.c: 59:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1514   00384C  0E52               	movlw	82
  1515   00384E  0100               	movlb	0	; () banked
  1516   003850  6FD2               	movwf	(??_main+1)& (0+255),b
  1517   003852  0E2B               	movlw	43
  1518   003854  6FD1               	movwf	??_main& (0+255),b
  1519   003856  0E00               	movlw	0
  1520   003858                     u5827:
  1521   003858  2EE8               	decfsz	wreg,f,c
  1522   00385A  D7FE               	bra	u5827
  1523   00385C  2FD1               	decfsz	??_main& (0+255),f,b
  1524   00385E  D7FC               	bra	u5827
  1525   003860  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1526   003862  D7FA               	bra	u5827
  1527   003864  F000               	nop	
  1528   003866                     l330:
  1529   003866  B48E               	btfsc	142,2,c	;volatile
  1530   003868  EF38  F01C         	goto	u5691
  1531   00386C  EF3A  F01C         	goto	u5690
  1532   003870                     u5691:
  1533   003870  EF33  F01C         	goto	l330
  1534   003874                     u5690:
  1535   003874                     
  1536                           ;main.c: 62:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1537   003874  0E52               	movlw	82
  1538   003876  0100               	movlb	0	; () banked
  1539   003878  6FD2               	movwf	(??_main+1)& (0+255),b
  1540   00387A  0E2B               	movlw	43
  1541   00387C  6FD1               	movwf	??_main& (0+255),b
  1542   00387E  0E00               	movlw	0
  1543   003880                     u5837:
  1544   003880  2EE8               	decfsz	wreg,f,c
  1545   003882  D7FE               	bra	u5837
  1546   003884  2FD1               	decfsz	??_main& (0+255),f,b
  1547   003886  D7FC               	bra	u5837
  1548   003888  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1549   00388A  D7FA               	bra	u5837
  1550   00388C  F000               	nop	
  1551   00388E                     
  1552                           ;main.c: 64:     T0CON0bits.T0EN=1;
  1553   00388E  8ED5               	bsf	213,7,c	;volatile
  1554                           
  1555                           ;main.c: 65:     while (run_flag)
  1556   003890  EF3B  F01D         	goto	l5918
  1557   003894                     l5868:
  1558                           
  1559                           ; BSR set to: 1
  1560                           ;main.c: 66:     {;main.c: 67:         consecuitive=0;
  1561   003894  0E00               	movlw	0
  1562   003896  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1563   003898  0E00               	movlw	0
  1564   00389A  6F16               	movwf	_consecuitive& (0+255),b
  1565   00389C                     
  1566                           ; BSR set to: 1
  1567                           ;main.c: 69:         fullSpeedAhead(&motorL,&motorR);
  1568   00389C  0E61               	movlw	low _motorL
  1569   00389E  6E14               	movwf	fullSpeedAhead@mL^0,c
  1570   0038A0  0E01               	movlw	high _motorL
  1571   0038A2  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1572   0038A4  0E58               	movlw	low _motorR
  1573   0038A6  6E16               	movwf	fullSpeedAhead@mR^0,c
  1574   0038A8  0E01               	movlw	high _motorR
  1575   0038AA  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1576   0038AC  ECDD  F028         	call	_fullSpeedAhead	;wreg free
  1577   0038B0                     
  1578                           ;main.c: 71:         readColours(&vals);
  1579   0038B0  0E6A               	movlw	low _vals
  1580   0038B2  6E0C               	movwf	readColours@vals^0,c
  1581   0038B4  0E01               	movlw	high _vals
  1582   0038B6  6E0D               	movwf	(readColours@vals+1)^0,c
  1583   0038B8  EC99  F02B         	call	_readColours	;wreg free
  1584   0038BC                     
  1585                           ;main.c: 76:         if (vals.L>=500){
  1586   0038BC  0101               	movlb	1	; () banked
  1587   0038BE  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1588   0038C0  EF6B  F01C         	goto	u5701
  1589   0038C4  0EF4               	movlw	244
  1590   0038C6  5D70               	subwf	(_vals+6)& (0+255),w,b
  1591   0038C8  0E01               	movlw	1
  1592   0038CA  5971               	subwfb	(_vals+7)& (0+255),w,b
  1593   0038CC  A0D8               	btfss	status,0,c
  1594   0038CE  EF6B  F01C         	goto	u5701
  1595   0038D2  EF6D  F01C         	goto	u5700
  1596   0038D6                     u5701:
  1597   0038D6  EF21  F01D         	goto	l5910
  1598   0038DA                     u5700:
  1599   0038DA                     
  1600                           ; BSR set to: 1
  1601                           ;main.c: 77:             move_count++;
  1602   0038DA  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1603   0038DC  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1604   0038DE                     
  1605                           ; BSR set to: 1
  1606                           ;main.c: 78:             getTMR0val();
  1607   0038DE  EC68  F02B         	call	_getTMR0val	;wreg free
  1608   0038E2                     
  1609                           ;main.c: 79:             if (move_count>98){
  1610   0038E2  0101               	movlb	1	; () banked
  1611   0038E4  51DB               	movf	(_move_count+1)& (0+255),w,b	;volatile
  1612   0038E6  E109               	bnz	u5710
  1613   0038E8  0E63               	movlw	99
  1614   0038EA  5DDA               	subwf	_move_count& (0+255),w,b	;volatile
  1615   0038EC  A0D8               	btfss	status,0,c
  1616   0038EE  EF7B  F01C         	goto	u5711
  1617   0038F2  EF7D  F01C         	goto	u5710
  1618   0038F6                     u5711:
  1619   0038F6  EF89  F01C         	goto	l5884
  1620   0038FA                     u5710:
  1621   0038FA                     l5882:
  1622                           
  1623                           ; BSR set to: 1
  1624                           ;main.c: 80:                 go_Home(WayBack, Time_forward);
  1625   0038FA  0E1A               	movlw	low _WayBack
  1626   0038FC  6E24               	movwf	go_Home@WayBack^0,c
  1627   0038FE  0E01               	movlw	high _WayBack
  1628   003900  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1629   003902  0E3C               	movlw	low _Time_forward
  1630   003904  6E26               	movwf	go_Home@Time_forward^0,c
  1631   003906  0E02               	movlw	high _Time_forward
  1632   003908  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1633   00390A  EC72  F01A         	call	_go_Home	;wreg free
  1634                           
  1635                           ;main.c: 81:             }
  1636   00390E  EF3B  F01D         	goto	l5918
  1637   003912                     l5884:
  1638                           
  1639                           ; BSR set to: 1
  1640                           ;main.c: 83:                 Forwardhalfblock(&motorL,&motorR);
  1641   003912  0E61               	movlw	low _motorL
  1642   003914  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1643   003916  0E01               	movlw	high _motorL
  1644   003918  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1645   00391A  0E58               	movlw	low _motorR
  1646   00391C  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1647   00391E  0E01               	movlw	high _motorR
  1648   003920  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1649   003922  EC22  F02C         	call	_Forwardhalfblock	;wreg free
  1650                           
  1651                           ;main.c: 84:                 while (consecuitive<20){
  1652   003926  EFD9  F01C         	goto	l5902
  1653   00392A                     l5886:
  1654                           
  1655                           ; BSR set to: 1
  1656                           ;main.c: 85:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1657   00392A  0E09               	movlw	9
  1658   00392C  0100               	movlb	0	; () banked
  1659   00392E  6FD2               	movwf	(??_main+1)& (0+255),b
  1660   003930  0E1E               	movlw	30
  1661   003932  6FD1               	movwf	??_main& (0+255),b
  1662   003934  0EE4               	movlw	228
  1663   003936                     u5847:
  1664   003936  2EE8               	decfsz	wreg,f,c
  1665   003938  D7FE               	bra	u5847
  1666   00393A  2FD1               	decfsz	??_main& (0+255),f,b
  1667   00393C  D7FC               	bra	u5847
  1668   00393E  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1669   003940  D7FA               	bra	u5847
  1670   003942  F000               	nop	
  1671   003944                     
  1672                           ;main.c: 86:                     readColours(&vals);
  1673   003944  0E6A               	movlw	low _vals
  1674   003946  6E0C               	movwf	readColours@vals^0,c
  1675   003948  0E01               	movlw	high _vals
  1676   00394A  6E0D               	movwf	(readColours@vals+1)^0,c
  1677   00394C  EC99  F02B         	call	_readColours	;wreg free
  1678   003950                     
  1679                           ;main.c: 87:                     colour_rel(&vals, &rel);
  1680   003950  0E6A               	movlw	low _vals
  1681   003952  6E4B               	movwf	colour_rel@vals^0,c
  1682   003954  0E01               	movlw	high _vals
  1683   003956  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1684   003958  0E4C               	movlw	low _rel
  1685   00395A  6E4D               	movwf	colour_rel@rel^0,c
  1686   00395C  0E01               	movlw	high _rel
  1687   00395E  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1688   003960  EC58  F017         	call	_colour_rel	;wreg free
  1689   003964                     
  1690                           ;main.c: 88:                     int colour = Colour_decider(&vals, &rel);
  1691   003964  0E6A               	movlw	low _vals
  1692   003966  6E4B               	movwf	Colour_decider@vals^0,c
  1693   003968  0E01               	movlw	high _vals
  1694   00396A  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1695   00396C  0E4C               	movlw	low _rel
  1696   00396E  6E4D               	movwf	Colour_decider@rel^0,c
  1697   003970  0E01               	movlw	high _rel
  1698   003972  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1699   003974  EC1C  F00C         	call	_Colour_decider	;wreg free
  1700   003978  C04B  F1D6         	movff	?_Colour_decider,main@colour
  1701   00397C  C04C  F1D7         	movff	?_Colour_decider+1,main@colour+1
  1702   003980                     
  1703                           ;main.c: 89:                     if (colour==prev_colour){
  1704   003980  0101               	movlb	1	; () banked
  1705   003982  5118               	movf	_prev_colour& (0+255),w,b
  1706   003984  19D6               	xorwf	main@colour& (0+255),w,b
  1707   003986  E107               	bnz	u5721
  1708   003988  5119               	movf	(_prev_colour+1)& (0+255),w,b
  1709   00398A  19D7               	xorwf	(main@colour+1)& (0+255),w,b
  1710   00398C  A4D8               	btfss	status,2,c
  1711   00398E  EFCB  F01C         	goto	u5721
  1712   003992  EFCD  F01C         	goto	u5720
  1713   003996                     u5721:
  1714   003996  EFD1  F01C         	goto	l5898
  1715   00399A                     u5720:
  1716   00399A                     
  1717                           ; BSR set to: 1
  1718                           ;main.c: 90:                         consecuitive++;
  1719   00399A  4B16               	infsnz	_consecuitive& (0+255),f,b
  1720   00399C  2B17               	incf	(_consecuitive+1)& (0+255),f,b
  1721                           
  1722                           ;main.c: 91:                     }
  1723   00399E  EFD5  F01C         	goto	l5900
  1724   0039A2                     l5898:
  1725                           
  1726                           ; BSR set to: 1
  1727                           ;main.c: 93:                         consecuitive=0;
  1728   0039A2  0E00               	movlw	0
  1729   0039A4  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1730   0039A6  0E00               	movlw	0
  1731   0039A8  6F16               	movwf	_consecuitive& (0+255),b
  1732   0039AA                     l5900:
  1733                           
  1734                           ; BSR set to: 1
  1735                           ;main.c: 95:                     prev_colour=colour;
  1736   0039AA  C1D6  F118         	movff	main@colour,_prev_colour
  1737   0039AE  C1D7  F119         	movff	main@colour+1,_prev_colour+1
  1738   0039B2                     l5902:
  1739                           
  1740                           ;main.c: 84:                 while (consecuitive<20){
  1741   0039B2  0101               	movlb	1	; () banked
  1742   0039B4  BF17               	btfsc	(_consecuitive+1)& (0+255),7,b
  1743   0039B6  EFE6  F01C         	goto	u5731
  1744   0039BA  5117               	movf	(_consecuitive+1)& (0+255),w,b
  1745   0039BC  E109               	bnz	u5730
  1746   0039BE  0E14               	movlw	20
  1747   0039C0  5D16               	subwf	_consecuitive& (0+255),w,b
  1748   0039C2  A0D8               	btfss	status,0,c
  1749   0039C4  EFE6  F01C         	goto	u5731
  1750   0039C8  EFE8  F01C         	goto	u5730
  1751   0039CC                     u5731:
  1752   0039CC  EF95  F01C         	goto	l5886
  1753   0039D0                     u5730:
  1754   0039D0                     
  1755                           ; BSR set to: 1
  1756                           ;main.c: 99:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=%
      +                          d \r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1757   0039D0  0E72               	movlw	low main@buf
  1758   0039D2  0100               	movlb	0	; () banked
  1759   0039D4  6FB0               	movwf	sprintf@s& (0+255),b
  1760   0039D6  0E01               	movlw	high main@buf
  1761   0039D8  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1762   0039DA  0E01               	movlw	low STR_1
  1763   0039DC  6FB2               	movwf	sprintf@fmt& (0+255),b
  1764   0039DE  0E0E               	movlw	high STR_1
  1765   0039E0  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1766   0039E2  C14C  F0B4         	movff	_rel,?_sprintf+4
  1767   0039E6  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1768   0039EA  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1769   0039EE  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1770   0039F2  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1771   0039F6  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1772   0039FA  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1773   0039FE  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1774   003A02  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1775   003A06  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1776   003A0A  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1777   003A0E  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1778   003A12  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1779   003A16  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1780   003A1A  C118  F0C2         	movff	_prev_colour,?_sprintf+18
  1781   003A1E  C119  F0C3         	movff	_prev_colour+1,?_sprintf+19
  1782   003A22  ECFE  F02C         	call	_sprintf	;wreg free
  1783   003A26                     
  1784                           ;main.c: 100:                 sendStringSerial4(buf);
  1785   003A26  0E72               	movlw	low main@buf
  1786   003A28  6E02               	movwf	sendStringSerial4@string^0,c
  1787   003A2A  0E01               	movlw	high main@buf
  1788   003A2C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1789   003A2E  EC6B  F030         	call	_sendStringSerial4	;wreg free
  1790   003A32                     
  1791                           ;main.c: 102:                 colour_move (prev_colour);
  1792   003A32  C118  F02D         	movff	_prev_colour,colour_move@recognized_colour
  1793   003A36  C119  F02E         	movff	_prev_colour+1,colour_move@recognized_colour+1
  1794   003A3A  EC86  F01E         	call	_colour_move	;wreg free
  1795   003A3E  EF3B  F01D         	goto	l5918
  1796   003A42                     l5910:
  1797                           
  1798                           ; BSR set to: 1
  1799   003A42  5114               	movf	_lost_flag& (0+255),w,b
  1800   003A44  1115               	iorwf	(_lost_flag+1)& (0+255),w,b
  1801   003A46  B4D8               	btfsc	status,2,c
  1802   003A48  EF28  F01D         	goto	u5741
  1803   003A4C  EF2A  F01D         	goto	u5740
  1804   003A50                     u5741:
  1805   003A50  EF3B  F01D         	goto	l5918
  1806   003A54                     u5740:
  1807   003A54                     
  1808                           ; BSR set to: 1
  1809                           ;main.c: 106:             move_count++;
  1810   003A54  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1811   003A56  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1812   003A58                     
  1813                           ; BSR set to: 1
  1814                           ;main.c: 107:             Time_forward[move_count]=65535;
  1815   003A58  90D8               	bcf	status,0,c
  1816   003A5A  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  1817   003A5C  6ED9               	movwf	fsr2l,c
  1818   003A5E  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1819   003A60  6EDA               	movwf	fsr2h,c
  1820   003A62  0E3C               	movlw	low _Time_forward
  1821   003A64  26D9               	addwf	fsr2l,f,c
  1822   003A66  0E02               	movlw	high _Time_forward
  1823   003A68  22DA               	addwfc	fsr2h,f,c
  1824   003A6A  0EFF               	movlw	255
  1825   003A6C  6EDE               	movwf	postinc2,c
  1826   003A6E  0EFF               	movlw	255
  1827   003A70  6EDD               	movwf	postdec2,c
  1828   003A72  EF7D  F01C         	goto	l5882
  1829   003A76                     l5918:
  1830                           
  1831                           ;main.c: 65:     while (run_flag)
  1832   003A76  0101               	movlb	1	; () banked
  1833   003A78  51D8               	movf	_run_flag& (0+255),w,b
  1834   003A7A  11D9               	iorwf	(_run_flag+1)& (0+255),w,b
  1835   003A7C  A4D8               	btfss	status,2,c
  1836   003A7E  EF43  F01D         	goto	u5751
  1837   003A82  EF45  F01D         	goto	u5750
  1838   003A86                     u5751:
  1839   003A86  EF4A  F01C         	goto	l5868
  1840   003A8A                     u5750:
  1841   003A8A                     
  1842                           ; BSR set to: 1
  1843   003A8A  EF1A  F000         	goto	start
  1844   003A8E                     __end_of_main:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _turnCalibration *****************
  1848 ;; Defined at:
  1849 ;;		line 409 in file "dc_motor.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  1852 ;;		 -> motorL(9), 
  1853 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  1854 ;;		 -> motorR(9), 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;Total ram usage:        6 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 5
  1873 ;; This function calls:
  1874 ;;		_turnLeft45
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text1
  1881   00434A                     __ptext1:
  1882                           	callstack 0
  1883   00434A                     _turnCalibration:
  1884                           	callstack 25
  1885   00434A                     
  1886                           ;dc_motor.c: 410:     LATFbits.LATF0=1;
  1887   00434A  807E               	bsf	126,0,c	;volatile
  1888   00434C                     
  1889                           ;dc_motor.c: 411:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1890   00434C  0E52               	movlw	82
  1891   00434E  6E25               	movwf	(??_turnCalibration+1)^0,c
  1892   004350  0E2B               	movlw	43
  1893   004352  6E24               	movwf	??_turnCalibration^0,c
  1894   004354  0E00               	movlw	0
  1895   004356                     u5857:
  1896   004356  2EE8               	decfsz	wreg,f,c
  1897   004358  D7FE               	bra	u5857
  1898   00435A  2E24               	decfsz	??_turnCalibration^0,f,c
  1899   00435C  D7FC               	bra	u5857
  1900   00435E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1901   004360  D7FA               	bra	u5857
  1902   004362  D000               	nop2	
  1903                           
  1904                           ;dc_motor.c: 413:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  1905   004364  EF5F  F022         	goto	l5678
  1906   004368                     l711:
  1907                           
  1908                           ;dc_motor.c: 415:         LATDbits.LATD3=1;
  1909   004368  867C               	bsf	124,3,c	;volatile
  1910   00436A                     
  1911                           ;dc_motor.c: 417:         turnLeft45(&motorL, &motorR);
  1912   00436A  0E61               	movlw	low _motorL
  1913   00436C  6E1A               	movwf	turnLeft45@mL^0,c
  1914   00436E  0E01               	movlw	high _motorL
  1915   004370  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1916   004372  0E58               	movlw	low _motorR
  1917   004374  6E1C               	movwf	turnLeft45@mR^0,c
  1918   004376  0E01               	movlw	high _motorR
  1919   004378  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1920   00437A  EC0B  F02F         	call	_turnLeft45	;wreg free
  1921                           
  1922                           ;dc_motor.c: 418:         turnLeft45(&motorL, &motorR);
  1923   00437E  0E61               	movlw	low _motorL
  1924   004380  6E1A               	movwf	turnLeft45@mL^0,c
  1925   004382  0E01               	movlw	high _motorL
  1926   004384  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1927   004386  0E58               	movlw	low _motorR
  1928   004388  6E1C               	movwf	turnLeft45@mR^0,c
  1929   00438A  0E01               	movlw	high _motorR
  1930   00438C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1931   00438E  EC0B  F02F         	call	_turnLeft45	;wreg free
  1932                           
  1933                           ;dc_motor.c: 419:         turnLeft45(&motorL, &motorR);
  1934   004392  0E61               	movlw	low _motorL
  1935   004394  6E1A               	movwf	turnLeft45@mL^0,c
  1936   004396  0E01               	movlw	high _motorL
  1937   004398  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1938   00439A  0E58               	movlw	low _motorR
  1939   00439C  6E1C               	movwf	turnLeft45@mR^0,c
  1940   00439E  0E01               	movlw	high _motorR
  1941   0043A0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1942   0043A2  EC0B  F02F         	call	_turnLeft45	;wreg free
  1943                           
  1944                           ;dc_motor.c: 420:         turnLeft45(&motorL, &motorR);
  1945   0043A6  0E61               	movlw	low _motorL
  1946   0043A8  6E1A               	movwf	turnLeft45@mL^0,c
  1947   0043AA  0E01               	movlw	high _motorL
  1948   0043AC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1949   0043AE  0E58               	movlw	low _motorR
  1950   0043B0  6E1C               	movwf	turnLeft45@mR^0,c
  1951   0043B2  0E01               	movlw	high _motorR
  1952   0043B4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1953   0043B6  EC0B  F02F         	call	_turnLeft45	;wreg free
  1954                           
  1955                           ;dc_motor.c: 422:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1956   0043BA  EF44  F022         	goto	l5672
  1957   0043BE                     l713:
  1958                           
  1959                           ;dc_motor.c: 424:               LATDbits.LATD4=1;
  1960   0043BE  887C               	bsf	124,4,c	;volatile
  1961   0043C0                     
  1962                           ;dc_motor.c: 425:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1963   0043C0  0EA3               	movlw	163
  1964   0043C2  6E25               	movwf	(??_turnCalibration+1)^0,c
  1965   0043C4  0E57               	movlw	87
  1966   0043C6  6E24               	movwf	??_turnCalibration^0,c
  1967   0043C8  0E02               	movlw	2
  1968   0043CA                     u5867:
  1969   0043CA  2EE8               	decfsz	wreg,f,c
  1970   0043CC  D7FE               	bra	u5867
  1971   0043CE  2E24               	decfsz	??_turnCalibration^0,f,c
  1972   0043D0  D7FC               	bra	u5867
  1973   0043D2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1974   0043D4  D7FA               	bra	u5867
  1975   0043D6  D000               	nop2	
  1976   0043D8                     
  1977                           ;dc_motor.c: 426:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  1978   0043D8  B68E               	btfsc	142,3,c	;volatile
  1979   0043DA  EFF1  F021         	goto	u5491
  1980   0043DE  EFF3  F021         	goto	u5490
  1981   0043E2                     u5491:
  1982   0043E2  EF0C  F022         	goto	l714
  1983   0043E6                     u5490:
  1984   0043E6  B48E               	btfsc	142,2,c	;volatile
  1985   0043E8  EFF8  F021         	goto	u5501
  1986   0043EC  EFFA  F021         	goto	u5500
  1987   0043F0                     u5501:
  1988   0043F0  EF0C  F022         	goto	l714
  1989   0043F4                     u5500:
  1990   0043F4                     
  1991                           ;dc_motor.c: 427:                 LATHbits.LATH3=1;
  1992   0043F4  8680               	bsf	128,3,c	;volatile
  1993                           
  1994                           ;dc_motor.c: 428:                 LATDbits.LATD7=1;
  1995   0043F6  8E7C               	bsf	124,7,c	;volatile
  1996   0043F8                     
  1997                           ;dc_motor.c: 429:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1998   0043F8  0E52               	movlw	82
  1999   0043FA  6E25               	movwf	(??_turnCalibration+1)^0,c
  2000   0043FC  0E2B               	movlw	43
  2001   0043FE  6E24               	movwf	??_turnCalibration^0,c
  2002   004400  0E00               	movlw	0
  2003   004402                     u5877:
  2004   004402  2EE8               	decfsz	wreg,f,c
  2005   004404  D7FE               	bra	u5877
  2006   004406  2E24               	decfsz	??_turnCalibration^0,f,c
  2007   004408  D7FC               	bra	u5877
  2008   00440A  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2009   00440C  D7FA               	bra	u5877
  2010   00440E  D000               	nop2	
  2011   004410                     
  2012                           ;dc_motor.c: 430:                 LATHbits.LATH3=0;
  2013   004410  9680               	bcf	128,3,c	;volatile
  2014   004412                     
  2015                           ;dc_motor.c: 431:                 LATDbits.LATD7=0;
  2016   004412  9E7C               	bcf	124,7,c	;volatile
  2017                           
  2018                           ;dc_motor.c: 432:             }
  2019   004414  EF44  F022         	goto	l5672
  2020   004418                     l714:
  2021   004418  B68E               	btfsc	142,3,c	;volatile
  2022   00441A  EF11  F022         	goto	u5511
  2023   00441E  EF13  F022         	goto	u5510
  2024   004422                     u5511:
  2025   004422  EF28  F022         	goto	l716
  2026   004426                     u5510:
  2027   004426                     
  2028                           ;dc_motor.c: 435:                 Turn45Delay+=10;
  2029   004426  0E0A               	movlw	10
  2030   004428  0100               	movlb	0	; () banked
  2031   00442A  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2032   00442C  0E00               	movlw	0
  2033   00442E  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2034   004430                     
  2035                           ; BSR set to: 0
  2036                           ;dc_motor.c: 436:                 LATHbits.LATH3=1;
  2037   004430  8680               	bsf	128,3,c	;volatile
  2038   004432                     
  2039                           ; BSR set to: 0
  2040                           ;dc_motor.c: 437:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2041   004432  0E52               	movlw	82
  2042   004434  6E25               	movwf	(??_turnCalibration+1)^0,c
  2043   004436  0E2B               	movlw	43
  2044   004438  6E24               	movwf	??_turnCalibration^0,c
  2045   00443A  0E00               	movlw	0
  2046   00443C                     u5887:
  2047   00443C  2EE8               	decfsz	wreg,f,c
  2048   00443E  D7FE               	bra	u5887
  2049   004440  2E24               	decfsz	??_turnCalibration^0,f,c
  2050   004442  D7FC               	bra	u5887
  2051   004444  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2052   004446  D7FA               	bra	u5887
  2053   004448  D000               	nop2	
  2054   00444A                     
  2055                           ;dc_motor.c: 438:                 LATHbits.LATH3=0;
  2056   00444A  9680               	bcf	128,3,c	;volatile
  2057                           
  2058                           ;dc_motor.c: 439:             }
  2059   00444C  EF44  F022         	goto	l5672
  2060   004450                     l716:
  2061   004450  B48E               	btfsc	142,2,c	;volatile
  2062   004452  EF2D  F022         	goto	u5521
  2063   004456  EF2F  F022         	goto	u5520
  2064   00445A                     u5521:
  2065   00445A  EF44  F022         	goto	l715
  2066   00445E                     u5520:
  2067   00445E                     
  2068                           ;dc_motor.c: 442:                 Turn45Delay-=10;
  2069   00445E  0100               	movlb	0	; () banked
  2070   004460  0EF6               	movlw	246
  2071   004462  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2072   004464  0EFF               	movlw	255
  2073   004466  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2074   004468                     
  2075                           ; BSR set to: 0
  2076                           ;dc_motor.c: 443:                 LATDbits.LATD7=1;
  2077   004468  8E7C               	bsf	124,7,c	;volatile
  2078   00446A                     
  2079                           ; BSR set to: 0
  2080                           ;dc_motor.c: 444:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2081   00446A  0E52               	movlw	82
  2082   00446C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2083   00446E  0E2B               	movlw	43
  2084   004470  6E24               	movwf	??_turnCalibration^0,c
  2085   004472  0E00               	movlw	0
  2086   004474                     u5897:
  2087   004474  2EE8               	decfsz	wreg,f,c
  2088   004476  D7FE               	bra	u5897
  2089   004478  2E24               	decfsz	??_turnCalibration^0,f,c
  2090   00447A  D7FC               	bra	u5897
  2091   00447C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2092   00447E  D7FA               	bra	u5897
  2093   004480  D000               	nop2	
  2094   004482                     
  2095                           ;dc_motor.c: 445:                 LATDbits.LATD7=0;
  2096   004482  9E7C               	bcf	124,7,c	;volatile
  2097   004484  EF44  F022         	goto	l5672
  2098   004488                     l715:
  2099   004488                     l5672:
  2100                           
  2101                           ;dc_motor.c: 422:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2102   004488  A48E               	btfss	142,2,c	;volatile
  2103   00448A  EF49  F022         	goto	u5531
  2104   00448E  EF4B  F022         	goto	u5530
  2105   004492                     u5531:
  2106   004492  EF52  F022         	goto	l721
  2107   004496                     u5530:
  2108   004496  B68E               	btfsc	142,3,c	;volatile
  2109   004498  EF50  F022         	goto	u5541
  2110   00449C  EF52  F022         	goto	u5540
  2111   0044A0                     u5541:
  2112   0044A0  EFDF  F021         	goto	l713
  2113   0044A4                     u5540:
  2114   0044A4                     l721:
  2115                           
  2116                           ;dc_motor.c: 448:         LATDbits.LATD4=0;
  2117   0044A4  987C               	bcf	124,4,c	;volatile
  2118   0044A6                     
  2119                           ;dc_motor.c: 449:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2120   0044A6  0EA3               	movlw	163
  2121   0044A8  6E25               	movwf	(??_turnCalibration+1)^0,c
  2122   0044AA  0E57               	movlw	87
  2123   0044AC  6E24               	movwf	??_turnCalibration^0,c
  2124   0044AE  0E02               	movlw	2
  2125   0044B0                     u5907:
  2126   0044B0  2EE8               	decfsz	wreg,f,c
  2127   0044B2  D7FE               	bra	u5907
  2128   0044B4  2E24               	decfsz	??_turnCalibration^0,f,c
  2129   0044B6  D7FC               	bra	u5907
  2130   0044B8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2131   0044BA  D7FA               	bra	u5907
  2132   0044BC  D000               	nop2	
  2133   0044BE                     l5678:
  2134                           
  2135                           ;dc_motor.c: 413:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2136   0044BE  B48E               	btfsc	142,2,c	;volatile
  2137   0044C0  EF64  F022         	goto	u5551
  2138   0044C4  EF66  F022         	goto	u5550
  2139   0044C8                     u5551:
  2140   0044C8  EFB4  F021         	goto	l711
  2141   0044CC                     u5550:
  2142   0044CC  B68E               	btfsc	142,3,c	;volatile
  2143   0044CE  EF6B  F022         	goto	u5561
  2144   0044D2  EF6D  F022         	goto	u5560
  2145   0044D6                     u5561:
  2146   0044D6  EFB4  F021         	goto	l711
  2147   0044DA                     u5560:
  2148   0044DA                     
  2149                           ;dc_motor.c: 451:     LATDbits.LATD3=0;
  2150   0044DA  967C               	bcf	124,3,c	;volatile
  2151   0044DC                     
  2152                           ;dc_motor.c: 452:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2153   0044DC  0EA3               	movlw	163
  2154   0044DE  6E25               	movwf	(??_turnCalibration+1)^0,c
  2155   0044E0  0E57               	movlw	87
  2156   0044E2  6E24               	movwf	??_turnCalibration^0,c
  2157   0044E4  0E02               	movlw	2
  2158   0044E6                     u5917:
  2159   0044E6  2EE8               	decfsz	wreg,f,c
  2160   0044E8  D7FE               	bra	u5917
  2161   0044EA  2E24               	decfsz	??_turnCalibration^0,f,c
  2162   0044EC  D7FC               	bra	u5917
  2163   0044EE  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2164   0044F0  D7FA               	bra	u5917
  2165   0044F2  D000               	nop2	
  2166   0044F4  0012               	return		;funcret
  2167   0044F6                     __end_of_turnCalibration:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _sprintf *****************
  2171 ;; Defined at:
  2172 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2175 ;;		 -> main@buf(100), 
  2176 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2177 ;;		 -> STR_1(51), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2180 ;;  ap              2  100[BANK0 ] PTR void [1]
  2181 ;;		 -> ?_sprintf(2), 
  2182 ;;  ret             2    0        int 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2   80[BANK0 ] int 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2192 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;Total ram usage:       33 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 8
  2199 ;; This function calls:
  2200 ;;		_vfprintf
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text2
  2207   0059FC                     __ptext2:
  2208                           	callstack 0
  2209   0059FC                     _sprintf:
  2210                           	callstack 22
  2211   0059FC  0EB4               	movlw	low (?_sprintf+4)
  2212   0059FE  0100               	movlb	0	; () banked
  2213   005A00  6FC4               	movwf	sprintf@ap& (0+255),b
  2214   005A02  0E00               	movlw	high (?_sprintf+4)
  2215   005A04  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2216   005A06  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2217   005A0A  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2218   005A0E                     
  2219                           ; BSR set to: 0
  2220   005A0E  0E00               	movlw	0
  2221   005A10  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2222   005A12  0E00               	movlw	0
  2223   005A14  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2224   005A16                     
  2225                           ; BSR set to: 0
  2226   005A16  0E00               	movlw	0
  2227   005A18  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2228   005A1A  0E00               	movlw	0
  2229   005A1C  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2230   005A1E                     
  2231                           ; BSR set to: 0
  2232   005A1E  0EC6               	movlw	low sprintf@f
  2233   005A20  6FA8               	movwf	vfprintf@fp& (0+255),b
  2234   005A22  0E00               	movlw	high sprintf@f
  2235   005A24  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2236   005A26  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2237   005A2A  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2238   005A2E  0EC4               	movlw	low sprintf@ap
  2239   005A30  6FAC               	movwf	vfprintf@ap& (0+255),b
  2240   005A32  0E00               	movlw	high sprintf@ap
  2241   005A34  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2242   005A36  ECD3  F02C         	call	_vfprintf	;wreg free
  2243   005A3A  0100               	movlb	0	; () banked
  2244   005A3C  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2245   005A3E  25B0               	addwf	sprintf@s& (0+255),w,b
  2246   005A40  6ED9               	movwf	fsr2l,c
  2247   005A42  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2248   005A44  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2249   005A46  6EDA               	movwf	fsr2h,c
  2250   005A48  0E00               	movlw	0
  2251   005A4A  6EDF               	movwf	indf2,c
  2252   005A4C                     
  2253                           ; BSR set to: 0
  2254   005A4C  0012               	return		;funcret
  2255   005A4E                     __end_of_sprintf:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _vfprintf *****************
  2259 ;; Defined at:
  2260 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2263 ;;		 -> sprintf@f(11), 
  2264 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2265 ;;		 -> STR_1(51), 
  2266 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2267 ;;		 -> sprintf@ap(2), 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2270 ;;		 -> STR_1(51), 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2   72[BANK0 ] int 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2280 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2281 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;Total ram usage:        8 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 7
  2287 ;; This function calls:
  2288 ;;		_vfpfcnvrt
  2289 ;; This function is called by:
  2290 ;;		_sprintf
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text3
  2295   0059A6                     __ptext3:
  2296                           	callstack 0
  2297   0059A6                     _vfprintf:
  2298                           	callstack 22
  2299   0059A6                     
  2300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2301   0059A6  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2302   0059AA  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2305   0059AE  EFE8  F02C         	goto	l5362
  2306   0059B2                     l5360:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2309   0059B2  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2310   0059B6  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2311   0059BA  0EAE               	movlw	low vfprintf@cfmt
  2312   0059BC  0100               	movlb	0	; () banked
  2313   0059BE  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2314   0059C0  0E00               	movlw	high vfprintf@cfmt
  2315   0059C2  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2316   0059C4  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2317   0059C8  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2318   0059CC  ECEF  F018         	call	_vfpfcnvrt	;wreg free
  2319   0059D0                     l5362:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2322   0059D0  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2323   0059D4  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2324   0059D8                     	if	0	;tblptru may be non-zero
  2325   0059D8                     	endif
  2326   0059D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2327   0059D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2328   0059DA  6EF8               	movwf	tblptru,c
  2329   0059DC                     	endif
  2330   0059DC  0008               	tblrd		*
  2331   0059DE  50F5               	movf	tablat,w,c
  2332   0059E0  0900               	iorlw	0
  2333   0059E2  A4D8               	btfss	status,2,c
  2334   0059E4  EFF6  F02C         	goto	u5181
  2335   0059E8  EFF8  F02C         	goto	u5180
  2336   0059EC                     u5181:
  2337   0059EC  EFD9  F02C         	goto	l5360
  2338   0059F0                     u5180:
  2339   0059F0                     
  2340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2341   0059F0  0E00               	movlw	0
  2342   0059F2  0100               	movlb	0	; () banked
  2343   0059F4  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2344   0059F6  0E00               	movlw	0
  2345   0059F8  6FA8               	movwf	?_vfprintf& (0+255),b
  2346   0059FA                     
  2347                           ; BSR set to: 0
  2348   0059FA  0012               	return		;funcret
  2349   0059FC                     __end_of_vfprintf:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _vfpfcnvrt *****************
  2353 ;; Defined at:
  2354 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2357 ;;		 -> sprintf@f(11), 
  2358 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2359 ;;		 -> vfprintf@cfmt(2), 
  2360 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2361 ;;		 -> sprintf@ap(2), 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  convarg         8   61[BANK0 ] struct .
  2364 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2365 ;;		 -> STR_1(51), 
  2366 ;;  i               2    0        int 
  2367 ;;  done            2    0        int 
  2368 ;;  c               1   69[BANK0 ] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2378 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;Total ram usage:       19 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 6
  2385 ;; This function calls:
  2386 ;;		_dtoa
  2387 ;;		_efgtoa
  2388 ;;		_fputc
  2389 ;; This function is called by:
  2390 ;;		_vfprintf
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text4
  2395   0031DE                     __ptext4:
  2396                           	callstack 0
  2397   0031DE                     _vfpfcnvrt:
  2398                           	callstack 22
  2399   0031DE                     
  2400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2401   0031DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2402   0031E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2403   0031E6  CFDE FFF6          	movff	postinc2,tblptrl
  2404   0031EA  CFDD FFF7          	movff	postdec2,tblptrh
  2405   0031EE                     	if	0	;tblptru may be non-zero
  2406   0031EE                     	endif
  2407   0031EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2408   0031EE  0E00               	movlw	low (__mediumconst shr (0+16))
  2409   0031F0  6EF8               	movwf	tblptru,c
  2410   0031F2                     	endif
  2411   0031F2  0008               	tblrd		*
  2412   0031F4  50F5               	movf	tablat,w,c
  2413   0031F6  0A25               	xorlw	37
  2414   0031F8  A4D8               	btfss	status,2,c
  2415   0031FA  EF01  F019         	goto	u4951
  2416   0031FE  EF03  F019         	goto	u4950
  2417   003202                     u4951:
  2418   003202  EF5B  F01A         	goto	l5184
  2419   003206                     u4950:
  2420   003206                     
  2421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2422   003206  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2423   00320A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2424   00320E  2ADE               	incf	postinc2,f,c
  2425   003210  0E00               	movlw	0
  2426   003212  22DD               	addwfc	postdec2,f,c
  2427   003214                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2429   003214  0E00               	movlw	0
  2430   003216  0100               	movlb	0	; () banked
  2431   003218  6FE8               	movwf	(_width+1)& (0+255),b
  2432   00321A  0E00               	movlw	0
  2433   00321C  6FE7               	movwf	_width& (0+255),b
  2434   00321E  C0E7  F0ED         	movff	_width,_flags
  2435   003222                     
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2438   003222  69E9               	setf	_prec& (0+255),b
  2439   003224  69EA               	setf	(_prec+1)& (0+255),b
  2440   003226                     
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2443   003226  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2444   00322A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2445   00322E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2446   003232  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2447   003236                     
  2448                           ; BSR set to: 0
  2449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2450   003236  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2451   00323A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2452   00323E                     	if	0	;tblptru may be non-zero
  2453   00323E                     	endif
  2454   00323E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2455   00323E  0E00               	movlw	low (__mediumconst shr (0+16))
  2456   003240  6EF8               	movwf	tblptru,c
  2457   003242                     	endif
  2458   003242  0008               	tblrd		*
  2459   003244  50F5               	movf	tablat,w,c
  2460   003246  0A64               	xorlw	100
  2461   003248  B4D8               	btfsc	status,2,c
  2462   00324A  EF29  F019         	goto	u4961
  2463   00324E  EF2B  F019         	goto	u4960
  2464   003252                     u4961:
  2465   003252  EF3B  F019         	goto	l5140
  2466   003256                     u4960:
  2467   003256                     
  2468                           ; BSR set to: 0
  2469   003256  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2470   00325A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2471   00325E                     	if	0	;tblptru may be non-zero
  2472   00325E                     	endif
  2473   00325E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2474   00325E  0E00               	movlw	low (__mediumconst shr (0+16))
  2475   003260  6EF8               	movwf	tblptru,c
  2476   003262                     	endif
  2477   003262  0008               	tblrd		*
  2478   003264  50F5               	movf	tablat,w,c
  2479   003266  0A69               	xorlw	105
  2480   003268  A4D8               	btfss	status,2,c
  2481   00326A  EF39  F019         	goto	u4971
  2482   00326E  EF3B  F019         	goto	u4970
  2483   003272                     u4971:
  2484   003272  EF7E  F019         	goto	l5146
  2485   003276                     u4970:
  2486   003276                     l5140:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2490   003276  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2491   00327A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2492   00327E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2493   003282  0E02               	movlw	2
  2494   003284  26DE               	addwf	postinc2,f,c
  2495   003286  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2496   00328A  0E00               	movlw	0
  2497   00328C  22DD               	addwfc	postdec2,f,c
  2498   00328E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2499   003292  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2500   003296  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2501   00329A  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2502   00329E  0E00               	movlw	0
  2503   0032A0  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2504   0032A2  0EFF               	movlw	-1
  2505   0032A4  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2506   0032A6  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2507   0032A8  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2508   0032AA  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2509   0032AC  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2510   0032AE  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2513   0032B0  0E01               	movlw	1
  2514   0032B2  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2515   0032B4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2516   0032B6  0E00               	movlw	0
  2517   0032B8  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2518   0032BA  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2519   0032BC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2520   0032C0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2521   0032C4  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2522   0032C8  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2523   0032CC                     
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2526   0032CC  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2527   0032D0  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2528   0032D4  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2529   0032D8  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2530   0032DC  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2531   0032E0  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2532   0032E4  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2533   0032E8  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2534   0032EC  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2535   0032F0  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2536   0032F4  EC47  F01D         	call	_dtoa	;wreg free
  2537   0032F8  EF71  F01A         	goto	l1551
  2538   0032FC                     l5146:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2542   0032FC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2543   003300  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2544   003304  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2545   003308  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2546   00330C                     
  2547                           ; BSR set to: 0
  2548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2549   00330C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2550   003310  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2551   003314                     	if	0	;tblptru may be non-zero
  2552   003314                     	endif
  2553   003314                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2554   003314  0E00               	movlw	low (__mediumconst shr (0+16))
  2555   003316  6EF8               	movwf	tblptru,c
  2556   003318                     	endif
  2557   003318  0008               	tblrd		*
  2558   00331A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2561   00331E  EF9D  F019         	goto	l5158
  2562   003322                     l5150:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2566   003322  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2567   003324  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2570   003326  EFB6  F019         	goto	l5160
  2571   00332A                     l5152:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2575   00332A  0E6C               	movlw	108
  2576   00332C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2579   00332E  EFB6  F019         	goto	l5160
  2580   003332                     l5154:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2584   003332  0E00               	movlw	0
  2585   003334  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2588   003336  EFB6  F019         	goto	l5160
  2589   00333A                     l5158:
  2590                           
  2591                           ; BSR set to: 0
  2592   00333A  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2593   00333C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2594   00333E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2595                           
  2596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2597                           ; Switch size 1, requested type "simple"
  2598                           ; Number of cases is 1, Range of values is 0 to 0
  2599                           ; switch strategies available:
  2600                           ; Name         Instructions Cycles
  2601                           ; simple_byte            4     3 (average)
  2602                           ;	Chosen strategy is simple_byte
  2603   003340  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2604   003342  0A00               	xorlw	0	; case 0
  2605   003344  B4D8               	btfsc	status,2,c
  2606   003346  EFA7  F019         	goto	l6054
  2607   00334A  EF99  F019         	goto	l5154
  2608   00334E                     l6054:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 3, Range of values is 76 to 108
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte           10     6 (average)
  2616                           ;	Chosen strategy is simple_byte
  2617   00334E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2618   003350  0A4C               	xorlw	76	; case 76
  2619   003352  B4D8               	btfsc	status,2,c
  2620   003354  EF91  F019         	goto	l5150
  2621   003358  0A2A               	xorlw	42	; case 102
  2622   00335A  B4D8               	btfsc	status,2,c
  2623   00335C  EF95  F019         	goto	l5152
  2624   003360  0A0A               	xorlw	10	; case 108
  2625   003362  B4D8               	btfsc	status,2,c
  2626   003364  EF91  F019         	goto	l5150
  2627   003368  EF99  F019         	goto	l5154
  2628   00336C                     l5160:
  2629                           
  2630                           ; BSR set to: 0
  2631   00336C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2632   003370  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2633   003374                     	if	0	;tblptru may be non-zero
  2634   003374                     	endif
  2635   003374                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2636   003374  0E00               	movlw	low (__mediumconst shr (0+16))
  2637   003376  6EF8               	movwf	tblptru,c
  2638   003378                     	endif
  2639   003378  0008               	tblrd		*
  2640   00337A  50F5               	movf	tablat,w,c
  2641   00337C  0A66               	xorlw	102
  2642   00337E  A4D8               	btfss	status,2,c
  2643   003380  EFC4  F019         	goto	u4981
  2644   003384  EFC6  F019         	goto	u4980
  2645   003388                     u4981:
  2646   003388  EF52  F01A         	goto	l5180
  2647   00338C                     u4980:
  2648   00338C  EFFC  F019         	goto	l5168
  2649   003390                     l5162:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2653   003390  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2654   003394  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2655   003398  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2656   00339C  0E04               	movlw	4
  2657   00339E  26DE               	addwf	postinc2,f,c
  2658   0033A0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2659   0033A4  0E00               	movlw	0
  2660   0033A6  22DD               	addwfc	postdec2,f,c
  2661   0033A8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2662   0033AC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2663   0033B0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2664   0033B4  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2665   0033B8  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2666   0033BC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2669   0033C0  EF11  F01A         	goto	l5170
  2670   0033C4                     l5164:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2674   0033C4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2675   0033C8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2676   0033CC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2677   0033D0  0E04               	movlw	4
  2678   0033D2  26DE               	addwf	postinc2,f,c
  2679   0033D4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2680   0033D8  0E00               	movlw	0
  2681   0033DA  22DD               	addwfc	postdec2,f,c
  2682   0033DC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2683   0033E0  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2684   0033E4  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2685   0033E8  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2686   0033EC  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2687   0033F0  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2690   0033F4  EF11  F01A         	goto	l5170
  2691   0033F8                     l5168:
  2692                           
  2693                           ; BSR set to: 0
  2694   0033F8  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2695   0033FA  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2696   0033FC  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2697                           
  2698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2699                           ; Switch size 1, requested type "simple"
  2700                           ; Number of cases is 1, Range of values is 0 to 0
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte            4     3 (average)
  2704                           ;	Chosen strategy is simple_byte
  2705   0033FE  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2706   003400  0A00               	xorlw	0	; case 0
  2707   003402  B4D8               	btfsc	status,2,c
  2708   003404  EF06  F01A         	goto	l6056
  2709   003408  EF11  F01A         	goto	l5170
  2710   00340C                     l6056:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ; Switch size 1, requested type "simple"
  2714                           ; Number of cases is 2, Range of values is 76 to 108
  2715                           ; switch strategies available:
  2716                           ; Name         Instructions Cycles
  2717                           ; simple_byte            7     4 (average)
  2718                           ;	Chosen strategy is simple_byte
  2719   00340C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2720   00340E  0A4C               	xorlw	76	; case 76
  2721   003410  B4D8               	btfsc	status,2,c
  2722   003412  EFE2  F019         	goto	l5164
  2723   003416  0A20               	xorlw	32	; case 108
  2724   003418  B4D8               	btfsc	status,2,c
  2725   00341A  EFC8  F019         	goto	l5162
  2726   00341E  EF11  F01A         	goto	l5170
  2727   003422                     l5170:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2731   003422  0E01               	movlw	1
  2732   003424  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2733   003426  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2734   003428  0E00               	movlw	0
  2735   00342A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2736   00342C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2737   00342E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2738   003432  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2739   003436  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2740   00343A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2743   00343E  EF3A  F01A         	goto	l5178
  2744   003442                     l5172:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2748   003442  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2749   003446  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2750   00344A  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2751   00344E  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2752   003452  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2753   003456  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2754   00345A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2755   00345E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2756   003462                     	if	0	;tblptru may be non-zero
  2757   003462                     	endif
  2758   003462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2759   003462  0E00               	movlw	low (__mediumconst shr (0+16))
  2760   003464  6EF8               	movwf	tblptru,c
  2761   003466                     	endif
  2762   003466  0008               	tblrd		*
  2763   003468  CFF5 F066          	movff	tablat,efgtoa@c
  2764   00346C  EC1F  F007         	call	_efgtoa	;wreg free
  2765   003470  EF71  F01A         	goto	l1551
  2766   003474                     l5178:
  2767                           
  2768                           ; BSR set to: 0
  2769   003474  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2770   003478  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2771   00347C                     	if	0	;tblptru may be non-zero
  2772   00347C                     	endif
  2773   00347C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2774   00347C  0E00               	movlw	low (__mediumconst shr (0+16))
  2775   00347E  6EF8               	movwf	tblptru,c
  2776   003480                     	endif
  2777   003480  0008               	tblrd		*
  2778   003482  50F5               	movf	tablat,w,c
  2779   003484  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2780   003486  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2781                           
  2782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2783                           ; Switch size 1, requested type "simple"
  2784                           ; Number of cases is 1, Range of values is 0 to 0
  2785                           ; switch strategies available:
  2786                           ; Name         Instructions Cycles
  2787                           ; simple_byte            4     3 (average)
  2788                           ;	Chosen strategy is simple_byte
  2789   003488  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2790   00348A  0A00               	xorlw	0	; case 0
  2791   00348C  B4D8               	btfsc	status,2,c
  2792   00348E  EF4B  F01A         	goto	l6058
  2793   003492  EF52  F01A         	goto	l5180
  2794   003496                     l6058:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ; Switch size 1, requested type "simple"
  2798                           ; Number of cases is 1, Range of values is 102 to 102
  2799                           ; switch strategies available:
  2800                           ; Name         Instructions Cycles
  2801                           ; simple_byte            4     3 (average)
  2802                           ;	Chosen strategy is simple_byte
  2803   003496  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2804   003498  0A66               	xorlw	102	; case 102
  2805   00349A  B4D8               	btfsc	status,2,c
  2806   00349C  EF21  F01A         	goto	l5172
  2807   0034A0  EF52  F01A         	goto	l5180
  2808   0034A4                     l5180:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2811   0034A4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2812   0034A8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2813   0034AC  2ADE               	incf	postinc2,f,c
  2814   0034AE  0E00               	movlw	0
  2815   0034B0  22DD               	addwfc	postdec2,f,c
  2816   0034B2  EF71  F01A         	goto	l1551
  2817   0034B6                     l5184:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2820   0034B6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2821   0034BA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2822   0034BE  CFDE FFF6          	movff	postinc2,tblptrl
  2823   0034C2  CFDD FFF7          	movff	postdec2,tblptrh
  2824   0034C6                     	if	0	;tblptru may be non-zero
  2825   0034C6                     	endif
  2826   0034C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2827   0034C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2828   0034C8  6EF8               	movwf	tblptru,c
  2829   0034CA                     	endif
  2830   0034CA  0008               	tblrd		*
  2831   0034CC  50F5               	movf	tablat,w,c
  2832   0034CE  6E01               	movwf	fputc@c^0,c
  2833   0034D0  6A02               	clrf	(fputc@c+1)^0,c
  2834   0034D2  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2835   0034D6  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2836   0034DA  EC2B  F026         	call	_fputc	;wreg free
  2837   0034DE  EF52  F01A         	goto	l5180
  2838   0034E2                     l1551:
  2839   0034E2  0012               	return		;funcret
  2840   0034E4                     __end_of_vfpfcnvrt:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _efgtoa *****************
  2844 ;; Defined at:
  2845 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2848 ;;		 -> sprintf@f(11), 
  2849 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2850 ;;  c               1    6[BANK0 ] unsigned char 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  u               4   49[BANK0 ] struct flui
  2853 ;;  g               4   45[BANK0 ] struct flui
  2854 ;;  l               4   38[BANK0 ] struct flui
  2855 ;;  h               4   34[BANK0 ] struct flui
  2856 ;;  ou              4   28[BANK0 ] struct flui
  2857 ;;  n               2   43[BANK0 ] int 
  2858 ;;  i               2   32[BANK0 ] int 
  2859 ;;  w               2   26[BANK0 ] int 
  2860 ;;  e               2   24[BANK0 ] int 
  2861 ;;  m               2   22[BANK0 ] int 
  2862 ;;  d               2   20[BANK0 ] int 
  2863 ;;  t               2   13[BANK0 ] int 
  2864 ;;  p               2   11[BANK0 ] int 
  2865 ;;  ne              2    9[BANK0 ] int 
  2866 ;;  sign            1   42[BANK0 ] unsigned char 
  2867 ;;  nmode           1   19[BANK0 ] unsigned char 
  2868 ;;  mode            1   18[BANK0 ] unsigned char 
  2869 ;;  pp              1   17[BANK0 ] unsigned char 
  2870 ;;  esign           1    0        unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2880 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;Total ram usage:       53 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 5
  2887 ;; This function calls:
  2888 ;;		___fladd
  2889 ;;		___fldiv
  2890 ;;		___fleq
  2891 ;;		___flge
  2892 ;;		___flmul
  2893 ;;		___flneg
  2894 ;;		___flsub
  2895 ;;		___fltol
  2896 ;;		___fpclassifyf
  2897 ;;		_floorf
  2898 ;;		_labs
  2899 ;;		_memcpy
  2900 ;;		_pad
  2901 ;;		_strcpy
  2902 ;; This function is called by:
  2903 ;;		_vfpfcnvrt
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text5
  2908   000E3E                     __ptext5:
  2909                           	callstack 0
  2910   000E3E                     _efgtoa:
  2911                           	callstack 22
  2912   000E3E                     
  2913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2914   000E3E  0E00               	movlw	0
  2915   000E40  0100               	movlb	0	; () banked
  2916   000E42  6F8A               	movwf	efgtoa@sign& (0+255),b
  2917   000E44                     
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2920   000E44  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2921   000E48  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2922   000E4C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2923   000E50  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2924   000E54                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2927   000E54  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2928   000E56  EF31  F007         	goto	u4590
  2929   000E5A  EF2F  F007         	goto	u4591
  2930   000E5E                     u4591:
  2931   000E5E  EF45  F007         	goto	l4836
  2932   000E62                     u4590:
  2933   000E62                     
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2936   000E62  0E01               	movlw	1
  2937   000E64  6F8A               	movwf	efgtoa@sign& (0+255),b
  2938   000E66                     
  2939                           ; BSR set to: 0
  2940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2941   000E66  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2942   000E6A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2943   000E6E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2944   000E72  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2945   000E76  EC18  F030         	call	___flneg	;wreg free
  2946   000E7A  C001  F08D         	movff	?___flneg,efgtoa@g
  2947   000E7E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2948   000E82  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2949   000E86  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2950   000E8A                     l4836:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2953   000E8A  0E00               	movlw	0
  2954   000E8C  0100               	movlb	0	; () banked
  2955   000E8E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2956   000E90  0E00               	movlw	0
  2957   000E92  6F8B               	movwf	efgtoa@n& (0+255),b
  2958   000E94                     
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2961   000E94  C0E7  F07A         	movff	_width,efgtoa@w
  2962   000E98  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2963   000E9C                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2966   000E9C  518A               	movf	efgtoa@sign& (0+255),w,b
  2967   000E9E  B4D8               	btfsc	status,2,c
  2968   000EA0  EF54  F007         	goto	u4601
  2969   000EA4  EF56  F007         	goto	u4600
  2970   000EA8                     u4601:
  2971   000EA8  EF6A  F007         	goto	l4850
  2972   000EAC                     u4600:
  2973   000EAC                     
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2976   000EAC  518A               	movf	efgtoa@sign& (0+255),w,b
  2977   000EAE  A4D8               	btfss	status,2,c
  2978   000EB0  EF5C  F007         	goto	u4611
  2979   000EB4  EF5E  F007         	goto	u4610
  2980   000EB8                     u4611:
  2981   000EB8  EF64  F007         	goto	l4846
  2982   000EBC                     u4610:
  2983   000EBC                     
  2984                           ; BSR set to: 0
  2985   000EBC  0E00               	movlw	0
  2986   000EBE  6F70               	movwf	(_efgtoa$2969+1)& (0+255),b
  2987   000EC0  0E2B               	movlw	43
  2988   000EC2  6F6F               	movwf	_efgtoa$2969& (0+255),b
  2989   000EC4  EF68  F007         	goto	l4848
  2990   000EC8                     l4846:
  2991                           
  2992                           ; BSR set to: 0
  2993   000EC8  0E00               	movlw	0
  2994   000ECA  6F70               	movwf	(_efgtoa$2969+1)& (0+255),b
  2995   000ECC  0E2D               	movlw	45
  2996   000ECE  6F6F               	movwf	_efgtoa$2969& (0+255),b
  2997   000ED0                     l4848:
  2998                           
  2999                           ; BSR set to: 0
  3000   000ED0  C06F  F08A         	movff	_efgtoa$2969,efgtoa@sign
  3001   000ED4                     l4850:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3005   000ED4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3006   000ED8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3007   000EDC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3008   000EE0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3009   000EE4  ECAC  F025         	call	___fpclassifyf	;wreg free
  3010   000EE8  0401               	decf	?___fpclassifyf^0,w,c
  3011   000EEA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3012   000EEC  A4D8               	btfss	status,2,c
  3013   000EEE  EF7B  F007         	goto	u4621
  3014   000EF2  EF7D  F007         	goto	u4620
  3015   000EF6                     u4621:
  3016   000EF6  EFB0  F007         	goto	l4868
  3017   000EFA                     u4620:
  3018   000EFA                     
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3020   000EFA  0100               	movlb	0	; () banked
  3021   000EFC  518A               	movf	efgtoa@sign& (0+255),w,b
  3022   000EFE  B4D8               	btfsc	status,2,c
  3023   000F00  EF84  F007         	goto	u4631
  3024   000F04  EF86  F007         	goto	u4630
  3025   000F08                     u4631:
  3026   000F08  EF8F  F007         	goto	l4860
  3027   000F0C                     u4630:
  3028   000F0C                     
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3031   000F0C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3032   000F10                     
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3035   000F10  077A               	decf	efgtoa@w& (0+255),f,b
  3036   000F12  A0D8               	btfss	status,0,c
  3037   000F14  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3038   000F16                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3041   000F16  0E00               	movlw	0
  3042   000F18  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3043   000F1A  0E01               	movlw	1
  3044   000F1C  6F8B               	movwf	efgtoa@n& (0+255),b
  3045   000F1E                     l4860:
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3049   000F1E  0EA0               	movlw	low _dbuf
  3050   000F20  258B               	addwf	efgtoa@n& (0+255),w,b
  3051   000F22  6E01               	movwf	strcpy@dest^0,c
  3052   000F24  0E02               	movlw	high _dbuf
  3053   000F26  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3054   000F28  6E02               	movwf	(strcpy@dest+1)^0,c
  3055   000F2A  0E34               	movlw	low STR_2
  3056   000F2C  6E03               	movwf	strcpy@src^0,c
  3057   000F2E  0E0E               	movlw	high STR_2
  3058   000F30  6E04               	movwf	(strcpy@src+1)^0,c
  3059   000F32  EC55  F02F         	call	_strcpy	;wreg free
  3060   000F36                     l4862:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3063   000F36  0100               	movlb	0	; () banked
  3064   000F38  0EFD               	movlw	253
  3065   000F3A  277A               	addwf	efgtoa@w& (0+255),f,b
  3066   000F3C  0EFF               	movlw	255
  3067   000F3E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3068   000F40                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3071   000F40  C060  F011         	movff	efgtoa@fp,pad@fp
  3072   000F44  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3073   000F48  0EA0               	movlw	low _dbuf
  3074   000F4A  6E13               	movwf	pad@buf^0,c
  3075   000F4C  0E02               	movlw	high _dbuf
  3076   000F4E  6E14               	movwf	(pad@buf+1)^0,c
  3077   000F50  C07A  F015         	movff	efgtoa@w,pad@p
  3078   000F54  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3079   000F58  ECAF  F029         	call	_pad	;wreg free
  3080   000F5C  EF1B  F00C         	goto	l1503
  3081   000F60                     l4868:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3084   000F60  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3085   000F64  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3086   000F68  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3087   000F6C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3088   000F70  ECAC  F025         	call	___fpclassifyf	;wreg free
  3089   000F74  5001               	movf	?___fpclassifyf^0,w,c
  3090   000F76  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3091   000F78  A4D8               	btfss	status,2,c
  3092   000F7A  EFC1  F007         	goto	u4641
  3093   000F7E  EFC3  F007         	goto	u4640
  3094   000F82                     u4641:
  3095   000F82  EFE3  F007         	goto	l4886
  3096   000F86                     u4640:
  3097   000F86                     
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3099   000F86  0100               	movlb	0	; () banked
  3100   000F88  518A               	movf	efgtoa@sign& (0+255),w,b
  3101   000F8A  B4D8               	btfsc	status,2,c
  3102   000F8C  EFCA  F007         	goto	u4651
  3103   000F90  EFCC  F007         	goto	u4650
  3104   000F94                     u4651:
  3105   000F94  EFD5  F007         	goto	l4878
  3106   000F98                     u4650:
  3107   000F98                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3110   000F98  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3111   000F9C                     
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3114   000F9C  077A               	decf	efgtoa@w& (0+255),f,b
  3115   000F9E  A0D8               	btfss	status,0,c
  3116   000FA0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3117   000FA2                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3120   000FA2  0E00               	movlw	0
  3121   000FA4  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3122   000FA6  0E01               	movlw	1
  3123   000FA8  6F8B               	movwf	efgtoa@n& (0+255),b
  3124   000FAA                     l4878:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3128   000FAA  0EA0               	movlw	low _dbuf
  3129   000FAC  258B               	addwf	efgtoa@n& (0+255),w,b
  3130   000FAE  6E01               	movwf	strcpy@dest^0,c
  3131   000FB0  0E02               	movlw	high _dbuf
  3132   000FB2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3133   000FB4  6E02               	movwf	(strcpy@dest+1)^0,c
  3134   000FB6  0E38               	movlw	low STR_5
  3135   000FB8  6E03               	movwf	strcpy@src^0,c
  3136   000FBA  0E0E               	movlw	high STR_5
  3137   000FBC  6E04               	movwf	(strcpy@src+1)^0,c
  3138   000FBE  EC55  F02F         	call	_strcpy	;wreg free
  3139   000FC2  EF9B  F007         	goto	l4862
  3140   000FC6                     l4886:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3143   000FC6  0E00               	movlw	0
  3144   000FC8  0100               	movlb	0	; () banked
  3145   000FCA  6F91               	movwf	efgtoa@u& (0+255),b
  3146   000FCC  0E00               	movlw	0
  3147   000FCE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3148   000FD0  0E80               	movlw	128
  3149   000FD2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3150   000FD4  0E3F               	movlw	63
  3151   000FD6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3154   000FD8  0E00               	movlw	0
  3155   000FDA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3156   000FDC  0E00               	movlw	0
  3157   000FDE  6F78               	movwf	efgtoa@e& (0+255),b
  3158   000FE0                     
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3161   000FE0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3162   000FE4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3163   000FE8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3164   000FEC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3165   000FF0  0E00               	movlw	0
  3166   000FF2  6E36               	movwf	___fleq@ff2^0,c
  3167   000FF4  0E00               	movlw	0
  3168   000FF6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3169   000FF8  0E00               	movlw	0
  3170   000FFA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3171   000FFC  0E00               	movlw	0
  3172   000FFE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3173   001000  EC9B  F027         	call	___fleq	;wreg free
  3174   001004  B0D8               	btfsc	status,0,c
  3175   001006  EF07  F008         	goto	u4661
  3176   00100A  EF09  F008         	goto	u4660
  3177   00100E                     u4661:
  3178   00100E  EFE8  F008         	goto	l1506
  3179   001012                     u4660:
  3180   001012  EF16  F008         	goto	l4894
  3181   001016                     l1508:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3184   001016  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3185   00101A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3186   00101E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3187   001022  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3188   001026                     
  3189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3190   001026  0100               	movlb	0	; () banked
  3191   001028  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3192   00102A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3193   00102C                     l4894:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3196   00102C  C091  F011         	movff	efgtoa@u,___flmul@b
  3197   001030  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3198   001034  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3199   001038  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3200   00103C  0E00               	movlw	0
  3201   00103E  6E15               	movwf	___flmul@a^0,c
  3202   001040  0E00               	movlw	0
  3203   001042  6E16               	movwf	(___flmul@a+1)^0,c
  3204   001044  0E20               	movlw	32
  3205   001046  6E17               	movwf	(___flmul@a+2)^0,c
  3206   001048  0E41               	movlw	65
  3207   00104A  6E18               	movwf	(___flmul@a+3)^0,c
  3208   00104C  EC76  F013         	call	___flmul	;wreg free
  3209   001050  C011  F07C         	movff	?___flmul,efgtoa@ou
  3210   001054  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3211   001058  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3212   00105C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3213   001060  0100               	movlb	0	; () banked
  3214   001062  517C               	movf	efgtoa@ou& (0+255),w,b
  3215   001064  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3216   001066  6E01               	movwf	labs@a^0,c
  3217   001068  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3218   00106A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3219   00106C  6E02               	movwf	(labs@a+1)^0,c
  3220   00106E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3221   001070  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3222   001072  6E03               	movwf	(labs@a+2)^0,c
  3223   001074  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3224   001076  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3225   001078  6E04               	movwf	(labs@a+3)^0,c
  3226   00107A  ECCF  F02A         	call	_labs	;wreg free
  3227   00107E  BE04               	btfsc	(?_labs+3)^0,7,c
  3228   001080  EF4D  F008         	goto	u4671
  3229   001084  5004               	movf	(?_labs+3)^0,w,c
  3230   001086  1003               	iorwf	(?_labs+2)^0,w,c
  3231   001088  1002               	iorwf	(?_labs+1)^0,w,c
  3232   00108A  E109               	bnz	u4670
  3233   00108C  0E02               	movlw	2
  3234   00108E  5C01               	subwf	?_labs^0,w,c
  3235   001090  A0D8               	btfss	status,0,c
  3236   001092  EF4D  F008         	goto	u4671
  3237   001096  EF4F  F008         	goto	u4670
  3238   00109A                     u4671:
  3239   00109A  EF0B  F008         	goto	l1508
  3240   00109E                     u4670:
  3241   00109E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3242   0010A2  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3243   0010A6  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3244   0010AA  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3245   0010AE  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3246   0010B2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3247   0010B6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3248   0010BA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3249   0010BE  EC2A  F025         	call	___flge	;wreg free
  3250   0010C2  A0D8               	btfss	status,0,c
  3251   0010C4  EF66  F008         	goto	u4681
  3252   0010C8  EF68  F008         	goto	u4680
  3253   0010CC                     u4681:
  3254   0010CC  EF0B  F008         	goto	l1508
  3255   0010D0                     u4680:
  3256   0010D0                     
  3257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3258   0010D0  0100               	movlb	0	; () banked
  3259   0010D2  5191               	movf	efgtoa@u& (0+255),w,b
  3260   0010D4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3261   0010D6  6E01               	movwf	labs@a^0,c
  3262   0010D8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3263   0010DA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3264   0010DC  6E02               	movwf	(labs@a+1)^0,c
  3265   0010DE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3266   0010E0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3267   0010E2  6E03               	movwf	(labs@a+2)^0,c
  3268   0010E4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3269   0010E6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3270   0010E8  6E04               	movwf	(labs@a+3)^0,c
  3271   0010EA  ECCF  F02A         	call	_labs	;wreg free
  3272   0010EE  BE04               	btfsc	(?_labs+3)^0,7,c
  3273   0010F0  EF87  F008         	goto	u4690
  3274   0010F4  5004               	movf	(?_labs+3)^0,w,c
  3275   0010F6  1003               	iorwf	(?_labs+2)^0,w,c
  3276   0010F8  1002               	iorwf	(?_labs+1)^0,w,c
  3277   0010FA  E107               	bnz	u4691
  3278   0010FC  0E02               	movlw	2
  3279   0010FE  5C01               	subwf	?_labs^0,w,c
  3280   001100  B0D8               	btfsc	status,0,c
  3281   001102  EF85  F008         	goto	u4691
  3282   001106  EF87  F008         	goto	u4690
  3283   00110A                     u4691:
  3284   00110A  EFCF  F008         	goto	l4912
  3285   00110E                     u4690:
  3286   00110E                     l4902:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3289   00110E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3290   001112  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3291   001116  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3292   00111A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3295   00111E  EFE8  F008         	goto	l1506
  3296   001122                     l4904:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3299   001122  C091  F032         	movff	efgtoa@u,___fldiv@b
  3300   001126  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3301   00112A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3302   00112E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3303   001132  0E00               	movlw	0
  3304   001134  6E36               	movwf	___fldiv@a^0,c
  3305   001136  0E00               	movlw	0
  3306   001138  6E37               	movwf	(___fldiv@a+1)^0,c
  3307   00113A  0E20               	movlw	32
  3308   00113C  6E38               	movwf	(___fldiv@a+2)^0,c
  3309   00113E  0E41               	movlw	65
  3310   001140  6E39               	movwf	(___fldiv@a+3)^0,c
  3311   001142  EC8B  F015         	call	___fldiv	;wreg free
  3312   001146  C032  F091         	movff	?___fldiv,efgtoa@u
  3313   00114A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3314   00114E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3315   001152  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3316   001156                     
  3317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3318   001156  0100               	movlb	0	; () banked
  3319   001158  0778               	decf	efgtoa@e& (0+255),f,b
  3320   00115A  A0D8               	btfss	status,0,c
  3321   00115C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3322   00115E                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3325   00115E  5191               	movf	efgtoa@u& (0+255),w,b
  3326   001160  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3327   001162  6E01               	movwf	labs@a^0,c
  3328   001164  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3329   001166  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3330   001168  6E02               	movwf	(labs@a+1)^0,c
  3331   00116A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3332   00116C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3333   00116E  6E03               	movwf	(labs@a+2)^0,c
  3334   001170  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3335   001172  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3336   001174  6E04               	movwf	(labs@a+3)^0,c
  3337   001176  ECCF  F02A         	call	_labs	;wreg free
  3338   00117A  BE04               	btfsc	(?_labs+3)^0,7,c
  3339   00117C  EFCD  F008         	goto	u4700
  3340   001180  5004               	movf	(?_labs+3)^0,w,c
  3341   001182  1003               	iorwf	(?_labs+2)^0,w,c
  3342   001184  1002               	iorwf	(?_labs+1)^0,w,c
  3343   001186  E107               	bnz	u4701
  3344   001188  0E02               	movlw	2
  3345   00118A  5C01               	subwf	?_labs^0,w,c
  3346   00118C  B0D8               	btfsc	status,0,c
  3347   00118E  EFCB  F008         	goto	u4701
  3348   001192  EFCD  F008         	goto	u4700
  3349   001196                     u4701:
  3350   001196  EFCF  F008         	goto	l4912
  3351   00119A                     u4700:
  3352   00119A  EF87  F008         	goto	l4902
  3353   00119E                     l4912:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3356   00119E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3357   0011A2  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3358   0011A6  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3359   0011AA  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3360   0011AE  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3361   0011B2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3362   0011B6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3363   0011BA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3364   0011BE  EC2A  F025         	call	___flge	;wreg free
  3365   0011C2  A0D8               	btfss	status,0,c
  3366   0011C4  EFE6  F008         	goto	u4711
  3367   0011C8  EFE8  F008         	goto	u4710
  3368   0011CC                     u4711:
  3369   0011CC  EF91  F008         	goto	l4904
  3370   0011D0                     u4710:
  3371   0011D0                     l1506:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3374   0011D0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3377   0011D4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3378   0011D8                     
  3379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3380   0011D8  0100               	movlb	0	; () banked
  3381   0011DA  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3382   0011DC  EFF2  F008         	goto	u4721
  3383   0011E0  EFF4  F008         	goto	u4720
  3384   0011E4                     u4721:
  3385   0011E4  EFFA  F008         	goto	l4918
  3386   0011E8                     u4720:
  3387   0011E8                     
  3388                           ; BSR set to: 0
  3389   0011E8  C0E9  F06B         	movff	_prec,efgtoa@p
  3390   0011EC  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3391   0011F0  EFFE  F008         	goto	l4920
  3392   0011F4                     l4918:
  3393                           
  3394                           ; BSR set to: 0
  3395   0011F4  0E00               	movlw	0
  3396   0011F6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3397   0011F8  0E06               	movlw	6
  3398   0011FA  6F6B               	movwf	efgtoa@p& (0+255),b
  3399   0011FC                     l4920:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3403   0011FC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3404   001200  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3405   001204                     
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3408   001204  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3409   001206  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3410   001208                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3413   001208  0E66               	movlw	102
  3414   00120A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3415   00120C  A4D8               	btfss	status,2,c
  3416   00120E  EF0B  F009         	goto	u4731
  3417   001212  EF0D  F009         	goto	u4730
  3418   001216                     u4731:
  3419   001216  EF2D  F009         	goto	l4934
  3420   00121A                     u4730:
  3421   00121A                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3424   00121A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3425   00121C  EF14  F009         	goto	u4740
  3426   001220  EF12  F009         	goto	u4741
  3427   001224                     u4741:
  3428   001224  EF20  F009         	goto	l4930
  3429   001228                     u4740:
  3430   001228                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3433   001228  0E00               	movlw	0
  3434   00122A  6F91               	movwf	efgtoa@u& (0+255),b
  3435   00122C  0E00               	movlw	0
  3436   00122E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3437   001230  0E80               	movlw	128
  3438   001232  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3439   001234  0E3F               	movlw	63
  3440   001236  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3443   001238  0E00               	movlw	0
  3444   00123A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3445   00123C  0E00               	movlw	0
  3446   00123E  6F78               	movwf	efgtoa@e& (0+255),b
  3447   001240                     l4930:
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3451   001240  0E67               	movlw	103
  3452   001242  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3453   001244  B4D8               	btfsc	status,2,c
  3454   001246  EF27  F009         	goto	u4751
  3455   00124A  EF29  F009         	goto	u4750
  3456   00124E                     u4751:
  3457   00124E  EF2D  F009         	goto	l4934
  3458   001252                     u4750:
  3459   001252                     
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3462   001252  5178               	movf	efgtoa@e& (0+255),w,b
  3463   001254  2776               	addwf	efgtoa@m& (0+255),f,b
  3464   001256  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3465   001258  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3466   00125A                     l4934:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3470   00125A  0E00               	movlw	0
  3471   00125C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3472   00125E  0E00               	movlw	0
  3473   001260  6F80               	movwf	efgtoa@i& (0+255),b
  3474   001262                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3477   001262  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3478   001266  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3479   00126A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3480   00126E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3481   001272                     
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3484   001272  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3485   001276  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3486   00127A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3487   00127E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3490   001282  EFBE  F009         	goto	l4948
  3491   001286                     l4940:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3495   001286  C082  F032         	movff	efgtoa@h,___fldiv@b
  3496   00128A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3497   00128E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3498   001292  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3499   001296  C091  F036         	movff	efgtoa@u,___fldiv@a
  3500   00129A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3501   00129E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3502   0012A2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3503   0012A6  EC8B  F015         	call	___fldiv	;wreg free
  3504   0012AA  C032  F04B         	movff	?___fldiv,floorf@x
  3505   0012AE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3506   0012B2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3507   0012B6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3508   0012BA  ECC2  F01F         	call	_floorf	;wreg free
  3509   0012BE  C04B  F086         	movff	?_floorf,efgtoa@l
  3510   0012C2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3511   0012C6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3512   0012CA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3515   0012CE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3516   0012D2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3517   0012D6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3518   0012DA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3519   0012DE  ECA7  F024         	call	___fltol	;wreg free
  3520   0012E2  C001  F074         	movff	?___fltol,efgtoa@d
  3521   0012E6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3522   0012EA                     
  3523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3524   0012EA  C082  F02A         	movff	efgtoa@h,___flsub@b
  3525   0012EE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3526   0012F2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3527   0012F6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3528   0012FA  C086  F015         	movff	efgtoa@l,___flmul@a
  3529   0012FE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3530   001302  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3531   001306  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3532   00130A  C091  F011         	movff	efgtoa@u,___flmul@b
  3533   00130E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3534   001312  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3535   001316  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3536   00131A  EC76  F013         	call	___flmul	;wreg free
  3537   00131E  C011  F02E         	movff	?___flmul,___flsub@a
  3538   001322  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3539   001326  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3540   00132A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3541   00132E  EC32  F02F         	call	___flsub	;wreg free
  3542   001332  C02A  F082         	movff	?___flsub,efgtoa@h
  3543   001336  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3544   00133A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3545   00133E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3546   001342                     
  3547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3548   001342  C091  F032         	movff	efgtoa@u,___fldiv@b
  3549   001346  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3550   00134A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3551   00134E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3552   001352  0E00               	movlw	0
  3553   001354  6E36               	movwf	___fldiv@a^0,c
  3554   001356  0E00               	movlw	0
  3555   001358  6E37               	movwf	(___fldiv@a+1)^0,c
  3556   00135A  0E20               	movlw	32
  3557   00135C  6E38               	movwf	(___fldiv@a+2)^0,c
  3558   00135E  0E41               	movlw	65
  3559   001360  6E39               	movwf	(___fldiv@a+3)^0,c
  3560   001362  EC8B  F015         	call	___fldiv	;wreg free
  3561   001366  C032  F091         	movff	?___fldiv,efgtoa@u
  3562   00136A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3563   00136E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3564   001372  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3565   001376                     
  3566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3567   001376  0100               	movlb	0	; () banked
  3568   001378  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3569   00137A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3570   00137C                     l4948:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3574   00137C  5176               	movf	efgtoa@m& (0+255),w,b
  3575   00137E  5D80               	subwf	efgtoa@i& (0+255),w,b
  3576   001380  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3577   001382  0A80               	xorlw	128
  3578   001384  6F67               	movwf	??_efgtoa& (0+255),b
  3579   001386  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3580   001388  0A80               	xorlw	128
  3581   00138A  5967               	subwfb	??_efgtoa& (0+255),w,b
  3582   00138C  A0D8               	btfss	status,0,c
  3583   00138E  EFCB  F009         	goto	u4761
  3584   001392  EFCD  F009         	goto	u4760
  3585   001396                     u4761:
  3586   001396  EF43  F009         	goto	l4940
  3587   00139A                     u4760:
  3588   00139A                     
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3591   00139A  C091  F011         	movff	efgtoa@u,___flmul@b
  3592   00139E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3593   0013A2  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3594   0013A6  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3595   0013AA  0E00               	movlw	0
  3596   0013AC  6E15               	movwf	___flmul@a^0,c
  3597   0013AE  0E00               	movlw	0
  3598   0013B0  6E16               	movwf	(___flmul@a+1)^0,c
  3599   0013B2  0EA0               	movlw	160
  3600   0013B4  6E17               	movwf	(___flmul@a+2)^0,c
  3601   0013B6  0E40               	movlw	64
  3602   0013B8  6E18               	movwf	(___flmul@a+3)^0,c
  3603   0013BA  EC76  F013         	call	___flmul	;wreg free
  3604   0013BE  C011  F086         	movff	?___flmul,efgtoa@l
  3605   0013C2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3606   0013C6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3607   0013CA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3608   0013CE                     
  3609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3610   0013CE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3611   0013D2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3612   0013D6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3613   0013DA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3614   0013DE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3615   0013E2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3616   0013E6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3617   0013EA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3618   0013EE  EC2A  F025         	call	___flge	;wreg free
  3619   0013F2  B0D8               	btfsc	status,0,c
  3620   0013F4  EFFE  F009         	goto	u4771
  3621   0013F8  EF00  F00A         	goto	u4770
  3622   0013FC                     u4771:
  3623   0013FC  EF0B  F00A         	goto	l4956
  3624   001400                     u4770:
  3625   001400                     
  3626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3627   001400  0E00               	movlw	0
  3628   001402  0100               	movlb	0	; () banked
  3629   001404  6F86               	movwf	efgtoa@l& (0+255),b
  3630   001406  0E00               	movlw	0
  3631   001408  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3632   00140A  0E00               	movlw	0
  3633   00140C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3634   00140E  0E00               	movlw	0
  3635   001410  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3638   001412  EF34  F00A         	goto	l4962
  3639   001416                     l4956:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3642   001416  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3643   00141A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3644   00141E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3645   001422  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3646   001426  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3647   00142A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3648   00142E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3649   001432  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3650   001436  EC9B  F027         	call	___fleq	;wreg free
  3651   00143A  A0D8               	btfss	status,0,c
  3652   00143C  EF22  F00A         	goto	u4781
  3653   001440  EF24  F00A         	goto	u4780
  3654   001444                     u4781:
  3655   001444  EF34  F00A         	goto	l4962
  3656   001448                     u4780:
  3657   001448  0100               	movlb	0	; () banked
  3658   00144A  B174               	btfsc	efgtoa@d& (0+255),0,b
  3659   00144C  EF2A  F00A         	goto	u4791
  3660   001450  EF2C  F00A         	goto	u4790
  3661   001454                     u4791:
  3662   001454  EF34  F00A         	goto	l4962
  3663   001458                     u4790:
  3664   001458                     
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3667   001458  0E00               	movlw	0
  3668   00145A  6F86               	movwf	efgtoa@l& (0+255),b
  3669   00145C  0E00               	movlw	0
  3670   00145E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3671   001460  0E00               	movlw	0
  3672   001462  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3673   001464  0E00               	movlw	0
  3674   001466  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3675   001468                     l4962:
  3676                           
  3677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3678   001468  C08D  F001         	movff	efgtoa@g,___fladd@b
  3679   00146C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3680   001470  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3681   001474  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3682   001478  C086  F005         	movff	efgtoa@l,___fladd@a
  3683   00147C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3684   001480  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3685   001484  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3686   001488  EC16  F011         	call	___fladd	;wreg free
  3687   00148C  C001  F082         	movff	?___fladd,efgtoa@h
  3688   001490  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3689   001494  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3690   001498  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3691   00149C                     
  3692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3693   00149C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3694   0014A0  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3695   0014A4  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3696   0014A8  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3697   0014AC  0E00               	movlw	0
  3698   0014AE  6E15               	movwf	___flmul@a^0,c
  3699   0014B0  0E00               	movlw	0
  3700   0014B2  6E16               	movwf	(___flmul@a+1)^0,c
  3701   0014B4  0E20               	movlw	32
  3702   0014B6  6E17               	movwf	(___flmul@a+2)^0,c
  3703   0014B8  0E41               	movlw	65
  3704   0014BA  6E18               	movwf	(___flmul@a+3)^0,c
  3705   0014BC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3706   0014C0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3707   0014C4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3708   0014C8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3709   0014CC  EC76  F013         	call	___flmul	;wreg free
  3710   0014D0  C011  F02E         	movff	?___flmul,___flge@ff2
  3711   0014D4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3712   0014D8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3713   0014DC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3714   0014E0  EC2A  F025         	call	___flge	;wreg free
  3715   0014E4  A0D8               	btfss	status,0,c
  3716   0014E6  EF77  F00A         	goto	u4801
  3717   0014EA  EF79  F00A         	goto	u4800
  3718   0014EE                     u4801:
  3719   0014EE  EFA2  F00A         	goto	l4974
  3720   0014F2                     u4800:
  3721   0014F2                     
  3722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3723   0014F2  0100               	movlb	0	; () banked
  3724   0014F4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3725   0014F6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3726   0014F8                     
  3727                           ; BSR set to: 0
  3728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3729   0014F8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3730   0014FC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3731   001500  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3732   001504  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3733   001508  0E00               	movlw	0
  3734   00150A  6E15               	movwf	___flmul@a^0,c
  3735   00150C  0E00               	movlw	0
  3736   00150E  6E16               	movwf	(___flmul@a+1)^0,c
  3737   001510  0E20               	movlw	32
  3738   001512  6E17               	movwf	(___flmul@a+2)^0,c
  3739   001514  0E41               	movlw	65
  3740   001516  6E18               	movwf	(___flmul@a+3)^0,c
  3741   001518  EC76  F013         	call	___flmul	;wreg free
  3742   00151C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3743   001520  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3744   001524  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3745   001528  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3746   00152C                     
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3748   00152C  0E66               	movlw	102
  3749   00152E  0100               	movlb	0	; () banked
  3750   001530  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3751   001532  A4D8               	btfss	status,2,c
  3752   001534  EF9E  F00A         	goto	u4811
  3753   001538  EFA0  F00A         	goto	u4810
  3754   00153C                     u4811:
  3755   00153C  EFA2  F00A         	goto	l4974
  3756   001540                     u4810:
  3757   001540                     
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3760   001540  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3761   001542  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3762   001544                     l4974:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3765   001544  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3766   001548  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3767   00154C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3768   001550  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3769   001554                     
  3770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3771   001554  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3772   001558  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3773   00155C                     
  3774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3775   00155C  0E00               	movlw	0
  3776   00155E  0100               	movlb	0	; () banked
  3777   001560  6F71               	movwf	efgtoa@pp& (0+255),b
  3778   001562                     
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3781   001562  0E00               	movlw	0
  3782   001564  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3783   001566  0E00               	movlw	0
  3784   001568  6F6D               	movwf	efgtoa@t& (0+255),b
  3785   00156A                     
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3788   00156A  0E00               	movlw	0
  3789   00156C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3790   00156E  0E00               	movlw	0
  3791   001570  6F80               	movwf	efgtoa@i& (0+255),b
  3792                           
  3793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3794   001572  EFA0  F00B         	goto	l5024
  3795   001576                     l4984:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3799   001576  C082  F032         	movff	efgtoa@h,___fldiv@b
  3800   00157A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3801   00157E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3802   001582  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3803   001586  C091  F036         	movff	efgtoa@u,___fldiv@a
  3804   00158A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3805   00158E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3806   001592  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3807   001596  EC8B  F015         	call	___fldiv	;wreg free
  3808   00159A  C032  F04B         	movff	?___fldiv,floorf@x
  3809   00159E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3810   0015A2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3811   0015A6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3812   0015AA  ECC2  F01F         	call	_floorf	;wreg free
  3813   0015AE  C04B  F086         	movff	?_floorf,efgtoa@l
  3814   0015B2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3815   0015B6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3816   0015BA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3817                           
  3818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3819   0015BE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3820   0015C2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3821   0015C6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3822   0015CA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3823   0015CE  ECA7  F024         	call	___fltol	;wreg free
  3824   0015D2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3825   0015D4  EFF7  F00A         	goto	u4820
  3826   0015D8  5002               	movf	(?___fltol+1)^0,w,c
  3827   0015DA  E107               	bnz	u4821
  3828   0015DC  0E0A               	movlw	10
  3829   0015DE  5C01               	subwf	?___fltol^0,w,c
  3830   0015E0  B0D8               	btfsc	status,0,c
  3831   0015E2  EFF5  F00A         	goto	u4821
  3832   0015E6  EFF7  F00A         	goto	u4820
  3833   0015EA                     u4821:
  3834   0015EA  EF07  F00B         	goto	l4988
  3835   0015EE                     u4820:
  3836   0015EE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3837   0015F2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3838   0015F6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3839   0015FA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3840   0015FE  ECA7  F024         	call	___fltol	;wreg free
  3841   001602  C001  F074         	movff	?___fltol,efgtoa@d
  3842   001606  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3843   00160A  EF0C  F00B         	goto	l1536
  3844   00160E                     l4988:
  3845   00160E  0E00               	movlw	0
  3846   001610  0100               	movlb	0	; () banked
  3847   001612  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3848   001614  0E09               	movlw	9
  3849   001616  6F74               	movwf	efgtoa@d& (0+255),b
  3850   001618                     l1536:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3853   001618  0100               	movlb	0	; () banked
  3854   00161A  5171               	movf	efgtoa@pp& (0+255),w,b
  3855   00161C  A4D8               	btfss	status,2,c
  3856   00161E  EF13  F00B         	goto	u4831
  3857   001622  EF15  F00B         	goto	u4830
  3858   001626                     u4831:
  3859   001626  EF3D  F00B         	goto	l5008
  3860   00162A                     u4830:
  3861   00162A                     
  3862                           ; BSR set to: 0
  3863   00162A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3864   00162C  EF1C  F00B         	goto	u4840
  3865   001630  EF1A  F00B         	goto	u4841
  3866   001634                     u4841:
  3867   001634  EF3D  F00B         	goto	l5008
  3868   001638                     u4840:
  3869   001638                     
  3870                           ; BSR set to: 0
  3871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3872   001638  0EA0               	movlw	low _dbuf
  3873   00163A  258B               	addwf	efgtoa@n& (0+255),w,b
  3874   00163C  6ED9               	movwf	fsr2l,c
  3875   00163E  0E02               	movlw	high _dbuf
  3876   001640  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3877   001642  6EDA               	movwf	fsr2h,c
  3878   001644  0E2E               	movlw	46
  3879   001646  6EDF               	movwf	indf2,c
  3880   001648                     
  3881                           ; BSR set to: 0
  3882   001648  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3883   00164A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3884   00164C                     
  3885                           ; BSR set to: 0
  3886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3887   00164C  077A               	decf	efgtoa@w& (0+255),f,b
  3888   00164E  A0D8               	btfss	status,0,c
  3889   001650  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3890   001652                     
  3891                           ; BSR set to: 0
  3892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3893   001652  0E01               	movlw	1
  3894   001654  6F71               	movwf	efgtoa@pp& (0+255),b
  3895   001656  EF3D  F00B         	goto	l5008
  3896   00165A                     l5000:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3900   00165A  0EA0               	movlw	low _dbuf
  3901   00165C  258B               	addwf	efgtoa@n& (0+255),w,b
  3902   00165E  6ED9               	movwf	fsr2l,c
  3903   001660  0E02               	movlw	high _dbuf
  3904   001662  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3905   001664  6EDA               	movwf	fsr2h,c
  3906   001666  0E30               	movlw	48
  3907   001668  6EDF               	movwf	indf2,c
  3908   00166A                     
  3909                           ; BSR set to: 0
  3910   00166A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3911   00166C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3912   00166E                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3915   00166E  077A               	decf	efgtoa@w& (0+255),f,b
  3916   001670  A0D8               	btfss	status,0,c
  3917   001672  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3918   001674                     
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3921   001674  076D               	decf	efgtoa@t& (0+255),f,b
  3922   001676  A0D8               	btfss	status,0,c
  3923   001678  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3924   00167A                     l5008:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3928   00167A  516D               	movf	efgtoa@t& (0+255),w,b
  3929   00167C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3930   00167E  A4D8               	btfss	status,2,c
  3931   001680  EF44  F00B         	goto	u4851
  3932   001684  EF46  F00B         	goto	u4850
  3933   001688                     u4851:
  3934   001688  EF2D  F00B         	goto	l5000
  3935   00168C                     u4850:
  3936   00168C                     
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3939   00168C  0EA0               	movlw	low _dbuf
  3940   00168E  258B               	addwf	efgtoa@n& (0+255),w,b
  3941   001690  6ED9               	movwf	fsr2l,c
  3942   001692  0E02               	movlw	high _dbuf
  3943   001694  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3944   001696  6EDA               	movwf	fsr2h,c
  3945   001698  5174               	movf	efgtoa@d& (0+255),w,b
  3946   00169A  0F30               	addlw	48
  3947   00169C  6EDF               	movwf	indf2,c
  3948   00169E                     
  3949                           ; BSR set to: 0
  3950   00169E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3951   0016A0  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3952   0016A2                     
  3953                           ; BSR set to: 0
  3954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3955   0016A2  077A               	decf	efgtoa@w& (0+255),f,b
  3956   0016A4  A0D8               	btfss	status,0,c
  3957   0016A6  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3958   0016A8                     
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3961   0016A8  C082  F02A         	movff	efgtoa@h,___flsub@b
  3962   0016AC  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3963   0016B0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3964   0016B4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3965   0016B8  C086  F015         	movff	efgtoa@l,___flmul@a
  3966   0016BC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3967   0016C0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3968   0016C4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3969   0016C8  C091  F011         	movff	efgtoa@u,___flmul@b
  3970   0016CC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3971   0016D0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3972   0016D4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3973   0016D8  EC76  F013         	call	___flmul	;wreg free
  3974   0016DC  C011  F02E         	movff	?___flmul,___flsub@a
  3975   0016E0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3976   0016E4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3977   0016E8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3978   0016EC  EC32  F02F         	call	___flsub	;wreg free
  3979   0016F0  C02A  F082         	movff	?___flsub,efgtoa@h
  3980   0016F4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3981   0016F8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3982   0016FC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3983   001700                     
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3985   001700  C091  F032         	movff	efgtoa@u,___fldiv@b
  3986   001704  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3987   001708  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3988   00170C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3989   001710  0E00               	movlw	0
  3990   001712  6E36               	movwf	___fldiv@a^0,c
  3991   001714  0E00               	movlw	0
  3992   001716  6E37               	movwf	(___fldiv@a+1)^0,c
  3993   001718  0E20               	movlw	32
  3994   00171A  6E38               	movwf	(___fldiv@a+2)^0,c
  3995   00171C  0E41               	movlw	65
  3996   00171E  6E39               	movwf	(___fldiv@a+3)^0,c
  3997   001720  EC8B  F015         	call	___fldiv	;wreg free
  3998   001724  C032  F091         	movff	?___fldiv,efgtoa@u
  3999   001728  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4000   00172C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4001   001730  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4002   001734                     
  4003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4004   001734  0100               	movlb	0	; () banked
  4005   001736  0769               	decf	efgtoa@ne& (0+255),f,b
  4006   001738  A0D8               	btfss	status,0,c
  4007   00173A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4008   00173C                     
  4009                           ; BSR set to: 0
  4010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4011   00173C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4012   00173E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4013   001740                     l5024:
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4017   001740  5176               	movf	efgtoa@m& (0+255),w,b
  4018   001742  5D80               	subwf	efgtoa@i& (0+255),w,b
  4019   001744  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4020   001746  0A80               	xorlw	128
  4021   001748  6F67               	movwf	??_efgtoa& (0+255),b
  4022   00174A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4023   00174C  0A80               	xorlw	128
  4024   00174E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4025   001750  B0D8               	btfsc	status,0,c
  4026   001752  EFAD  F00B         	goto	u4861
  4027   001756  EFAF  F00B         	goto	u4860
  4028   00175A                     u4861:
  4029   00175A  EFBD  F00B         	goto	l5028
  4030   00175E                     u4860:
  4031   00175E                     
  4032                           ; BSR set to: 0
  4033   00175E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4034   001760  EFBB  F00B         	goto	u4871
  4035   001764  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4036   001766  E109               	bnz	u4870
  4037   001768  0E4B               	movlw	75
  4038   00176A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4039   00176C  A0D8               	btfss	status,0,c
  4040   00176E  EFBB  F00B         	goto	u4871
  4041   001772  EFBD  F00B         	goto	u4870
  4042   001776                     u4871:
  4043   001776  EFBB  F00A         	goto	l4984
  4044   00177A                     u4870:
  4045   00177A                     l5028:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4049   00177A  0E00               	movlw	0
  4050   00177C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4051   00177E  0E4F               	movlw	79
  4052   001780  6F80               	movwf	efgtoa@i& (0+255),b
  4053   001782                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4056   001782  0EA0               	movlw	low _dbuf
  4057   001784  2580               	addwf	efgtoa@i& (0+255),w,b
  4058   001786  6ED9               	movwf	fsr2l,c
  4059   001788  0E02               	movlw	high _dbuf
  4060   00178A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4061   00178C  6EDA               	movwf	fsr2h,c
  4062   00178E  0E00               	movlw	0
  4063   001790  6EDF               	movwf	indf2,c
  4064   001792                     
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4067   001792  0EA0               	movlw	low _dbuf
  4068   001794  6F67               	movwf	??_efgtoa& (0+255),b
  4069   001796  0E02               	movlw	high _dbuf
  4070   001798  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4071   00179A  518B               	movf	efgtoa@n& (0+255),w,b
  4072   00179C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4073   00179E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4074   0017A0  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4075   0017A2  5180               	movf	efgtoa@i& (0+255),w,b
  4076   0017A4  2567               	addwf	??_efgtoa& (0+255),w,b
  4077   0017A6  6E01               	movwf	memcpy@d1^0,c
  4078   0017A8  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4079   0017AA  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4080   0017AC  6E02               	movwf	(memcpy@d1+1)^0,c
  4081   0017AE  0EA0               	movlw	low _dbuf
  4082   0017B0  6E03               	movwf	memcpy@s1^0,c
  4083   0017B2  0E02               	movlw	high _dbuf
  4084   0017B4  6E04               	movwf	(memcpy@s1+1)^0,c
  4085   0017B6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4086   0017BA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4087   0017BE  ECF4  F02D         	call	_memcpy	;wreg free
  4088   0017C2                     
  4089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4090   0017C2  0100               	movlb	0	; () banked
  4091   0017C4  518B               	movf	efgtoa@n& (0+255),w,b
  4092   0017C6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4093   0017C8  6F8B               	movwf	efgtoa@n& (0+255),b
  4094   0017CA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4095   0017CC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4096   0017CE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4097   0017D0                     
  4098                           ; BSR set to: 0
  4099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4100   0017D0  518A               	movf	efgtoa@sign& (0+255),w,b
  4101   0017D2  A4D8               	btfss	status,2,c
  4102   0017D4  EFEE  F00B         	goto	u4881
  4103   0017D8  EFF1  F00B         	goto	u4880
  4104   0017DC                     u4881:
  4105   0017DC  0E01               	movlw	1
  4106   0017DE  EFF2  F00B         	goto	u4890
  4107   0017E2                     u4880:
  4108   0017E2  0E00               	movlw	0
  4109   0017E4                     u4890:
  4110   0017E4  6F80               	movwf	efgtoa@i& (0+255),b
  4111   0017E6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4112   0017E8                     
  4113                           ; BSR set to: 0
  4114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4115   0017E8  518A               	movf	efgtoa@sign& (0+255),w,b
  4116   0017EA  B4D8               	btfsc	status,2,c
  4117   0017EC  EFFA  F00B         	goto	u4901
  4118   0017F0  EFFC  F00B         	goto	u4900
  4119   0017F4                     u4901:
  4120   0017F4  EF07  F00C         	goto	l5042
  4121   0017F8                     u4900:
  4122   0017F8                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4125   0017F8  078B               	decf	efgtoa@n& (0+255),f,b
  4126   0017FA  A0D8               	btfss	status,0,c
  4127   0017FC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4128   0017FE  0EA0               	movlw	low _dbuf
  4129   001800  258B               	addwf	efgtoa@n& (0+255),w,b
  4130   001802  6ED9               	movwf	fsr2l,c
  4131   001804  0E02               	movlw	high _dbuf
  4132   001806  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4133   001808  6EDA               	movwf	fsr2h,c
  4134   00180A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4135   00180E                     l5042:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4139   00180E  5180               	movf	efgtoa@i& (0+255),w,b
  4140   001810  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4141   001812  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4142   001814  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4143   001816                     
  4144                           ; BSR set to: 0
  4145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4146   001816  C060  F011         	movff	efgtoa@fp,pad@fp
  4147   00181A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4148   00181E  0EA0               	movlw	low _dbuf
  4149   001820  258B               	addwf	efgtoa@n& (0+255),w,b
  4150   001822  6E13               	movwf	pad@buf^0,c
  4151   001824  0E02               	movlw	high _dbuf
  4152   001826  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4153   001828  6E14               	movwf	(pad@buf+1)^0,c
  4154   00182A  C07A  F015         	movff	efgtoa@w,pad@p
  4155   00182E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4156   001832  ECAF  F029         	call	_pad	;wreg free
  4157   001836                     l1503:
  4158   001836  0012               	return		;funcret
  4159   001838                     __end_of_efgtoa:
  4160                           	callstack 0
  4161                           
  4162 ;; *************** function _strcpy *****************
  4163 ;; Defined at:
  4164 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4167 ;;		 -> dbuf(80), 
  4168 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4169 ;;		 -> STR_5(4), STR_2(4), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  d               2    6[COMRAM] PTR unsigned char 
  4172 ;;		 -> dbuf(80), 
  4173 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4174 ;;		 -> STR_5(4), STR_2(4), 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  2    0[COMRAM] PTR unsigned char 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4185 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;Total ram usage:        8 bytes
  4189 ;; Hardware stack levels used: 1
  4190 ;; Hardware stack levels required when called: 1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_efgtoa
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text6
  4199   005EAA                     __ptext6:
  4200                           	callstack 0
  4201   005EAA                     _strcpy:
  4202                           	callstack 25
  4203   005EAA  C003  F005         	movff	strcpy@src,strcpy@s
  4204   005EAE  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4205   005EB2  C001  F007         	movff	strcpy@dest,strcpy@d
  4206   005EB6  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4207   005EBA                     l4684:
  4208   005EBA  C005  FFF6         	movff	strcpy@s,tblptrl
  4209   005EBE  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4210   005EC2  4A05               	infsnz	strcpy@s^0,f,c
  4211   005EC4  2A06               	incf	(strcpy@s+1)^0,f,c
  4212   005EC6                     	if	0	;tblptru may be non-zero
  4213   005EC6                     	endif
  4214   005EC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4215   005EC6  0E00               	movlw	low (__mediumconst shr (0+16))
  4216   005EC8  6EF8               	movwf	tblptru,c
  4217   005ECA                     	endif
  4218   005ECA  C007  FFD9         	movff	strcpy@d,fsr2l
  4219   005ECE  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4220   005ED2  4A07               	infsnz	strcpy@d^0,f,c
  4221   005ED4  2A08               	incf	(strcpy@d+1)^0,f,c
  4222   005ED6  0008               	tblrd		*
  4223   005ED8  CFF5 FFDF          	movff	tablat,indf2
  4224   005EDC  50DF               	movf	indf2,w,c
  4225   005EDE  A4D8               	btfss	status,2,c
  4226   005EE0  EF74  F02F         	goto	u4331
  4227   005EE4  EF76  F02F         	goto	u4330
  4228   005EE8                     u4331:
  4229   005EE8  EF5D  F02F         	goto	l4684
  4230   005EEC                     u4330:
  4231   005EEC  0012               	return		;funcret
  4232   005EEE                     __end_of_strcpy:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _memcpy *****************
  4236 ;; Defined at:
  4237 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  d1              2    0[COMRAM] PTR void 
  4240 ;;		 -> dbuf(80), 
  4241 ;;  s1              2    2[COMRAM] PTR const void 
  4242 ;;		 -> dbuf(80), 
  4243 ;;  n               2    4[COMRAM] unsigned int 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4246 ;;		 -> dbuf(80), 
  4247 ;;  d               2    6[COMRAM] PTR unsigned char 
  4248 ;;		 -> dbuf(80), 
  4249 ;;  tmp             1   10[COMRAM] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  2    0[COMRAM] PTR void 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4259 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;Total ram usage:       11 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_efgtoa
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text7
  4274   005BE8                     __ptext7:
  4275                           	callstack 0
  4276   005BE8                     _memcpy:
  4277                           	callstack 25
  4278   005BE8  C003  F009         	movff	memcpy@s1,memcpy@s
  4279   005BEC  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4280   005BF0  C001  F007         	movff	memcpy@d1,memcpy@d
  4281   005BF4  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4282   005BF8  EF0E  F02E         	goto	l4728
  4283   005BFC                     l4720:
  4284   005BFC  C009  FFD9         	movff	memcpy@s,fsr2l
  4285   005C00  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4286   005C04  50DF               	movf	indf2,w,c
  4287   005C06  6E0B               	movwf	memcpy@tmp^0,c
  4288   005C08  4A09               	infsnz	memcpy@s^0,f,c
  4289   005C0A  2A0A               	incf	(memcpy@s+1)^0,f,c
  4290   005C0C  C007  FFD9         	movff	memcpy@d,fsr2l
  4291   005C10  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4292   005C14  C00B  FFDF         	movff	memcpy@tmp,indf2
  4293   005C18  4A07               	infsnz	memcpy@d^0,f,c
  4294   005C1A  2A08               	incf	(memcpy@d+1)^0,f,c
  4295   005C1C                     l4728:
  4296   005C1C  0605               	decf	memcpy@n^0,f,c
  4297   005C1E  A0D8               	btfss	status,0,c
  4298   005C20  0606               	decf	(memcpy@n+1)^0,f,c
  4299   005C22  2805               	incf	memcpy@n^0,w,c
  4300   005C24  E106               	bnz	u4451
  4301   005C26  2806               	incf	(memcpy@n+1)^0,w,c
  4302   005C28  A4D8               	btfss	status,2,c
  4303   005C2A  EF19  F02E         	goto	u4451
  4304   005C2E  EF1B  F02E         	goto	u4450
  4305   005C32                     u4451:
  4306   005C32  EFFE  F02D         	goto	l4720
  4307   005C36                     u4450:
  4308   005C36  0012               	return		;funcret
  4309   005C38                     __end_of_memcpy:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _labs *****************
  4313 ;; Defined at:
  4314 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  a               4    0[COMRAM] long 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  4    0[COMRAM] long 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;Total ram usage:        8 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_efgtoa
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text8
  4343   00559E                     __ptext8:
  4344                           	callstack 0
  4345   00559E                     _labs:
  4346                           	callstack 25
  4347   00559E  BE04               	btfsc	(labs@a+3)^0,7,c
  4348   0055A0  EFDE  F02A         	goto	u4340
  4349   0055A4  5004               	movf	(labs@a+3)^0,w,c
  4350   0055A6  1003               	iorwf	(labs@a+2)^0,w,c
  4351   0055A8  1002               	iorwf	(labs@a+1)^0,w,c
  4352   0055AA  E106               	bnz	u4341
  4353   0055AC  0401               	decf	labs@a^0,w,c
  4354   0055AE  B0D8               	btfsc	status,0,c
  4355   0055B0  EFDC  F02A         	goto	u4341
  4356   0055B4  EFDE  F02A         	goto	u4340
  4357   0055B8                     u4341:
  4358   0055B8  EFF9  F02A         	goto	l1608
  4359   0055BC                     u4340:
  4360   0055BC  C001  F005         	movff	labs@a,??_labs
  4361   0055C0  C002  F006         	movff	labs@a+1,??_labs+1
  4362   0055C4  C003  F007         	movff	labs@a+2,??_labs+2
  4363   0055C8  C004  F008         	movff	labs@a+3,??_labs+3
  4364   0055CC  1E05               	comf	??_labs^0,f,c
  4365   0055CE  1E06               	comf	(??_labs+1)^0,f,c
  4366   0055D0  1E07               	comf	(??_labs+2)^0,f,c
  4367   0055D2  1E08               	comf	(??_labs+3)^0,f,c
  4368   0055D4  2A05               	incf	??_labs^0,f,c
  4369   0055D6  0E00               	movlw	0
  4370   0055D8  2206               	addwfc	(??_labs+1)^0,f,c
  4371   0055DA  2207               	addwfc	(??_labs+2)^0,f,c
  4372   0055DC  2208               	addwfc	(??_labs+3)^0,f,c
  4373   0055DE  C005  F001         	movff	??_labs,?_labs
  4374   0055E2  C006  F002         	movff	??_labs+1,?_labs+1
  4375   0055E6  C007  F003         	movff	??_labs+2,?_labs+2
  4376   0055EA  C008  F004         	movff	??_labs+3,?_labs+3
  4377   0055EE  EF01  F02B         	goto	l1611
  4378   0055F2                     l1608:
  4379   0055F2  C001  F001         	movff	labs@a,?_labs
  4380   0055F6  C002  F002         	movff	labs@a+1,?_labs+1
  4381   0055FA  C003  F003         	movff	labs@a+2,?_labs+2
  4382   0055FE  C004  F004         	movff	labs@a+3,?_labs+3
  4383   005602                     l1611:
  4384   005602  0012               	return		;funcret
  4385   005604                     __end_of_labs:
  4386                           	callstack 0
  4387                           
  4388 ;; *************** function _floorf *****************
  4389 ;; Defined at:
  4390 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  x               4   74[COMRAM] float 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  u               4   90[COMRAM] struct .
  4395 ;;  m               4   84[COMRAM] unsigned long 
  4396 ;;  e               2   88[COMRAM] int 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  4   74[COMRAM] float 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;Total ram usage:       20 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_efgtoa
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text9
  4421   003F84                     __ptext9:
  4422                           	callstack 0
  4423   003F84                     _floorf:
  4424                           	callstack 25
  4425   003F84  C0DF  F05B         	movff	floorf@F526,floorf@u
  4426   003F88  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4427   003F8C  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4428   003F90  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4429   003F94  C04B  F05B         	movff	floorf@x,floorf@u
  4430   003F98  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4431   003F9C  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4432   003FA0  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4433   003FA4  0E81               	movlw	129
  4434   003FA6  6E4F               	movwf	??_floorf^0,c
  4435   003FA8  0EFF               	movlw	255
  4436   003FAA  6E50               	movwf	(??_floorf+1)^0,c
  4437   003FAC  C05B  F051         	movff	floorf@u,??_floorf+2
  4438   003FB0  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4439   003FB4  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4440   003FB8  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4441   003FBC  0E18               	movlw	24
  4442   003FBE  EFE6  F01F         	goto	u4350
  4443   003FC2                     u4355:
  4444   003FC2  90D8               	bcf	status,0,c
  4445   003FC4  3254               	rrcf	(??_floorf+5)^0,f,c
  4446   003FC6  3253               	rrcf	(??_floorf+4)^0,f,c
  4447   003FC8  3252               	rrcf	(??_floorf+3)^0,f,c
  4448   003FCA  3251               	rrcf	(??_floorf+2)^0,f,c
  4449   003FCC                     u4350:
  4450   003FCC  2EE8               	decfsz	wreg,f,c
  4451   003FCE  EFE1  F01F         	goto	u4355
  4452   003FD2  5051               	movf	(??_floorf+2)^0,w,c
  4453   003FD4  244F               	addwf	??_floorf^0,w,c
  4454   003FD6  6E59               	movwf	floorf@e^0,c
  4455   003FD8  0E00               	movlw	0
  4456   003FDA  2050               	addwfc	(??_floorf+1)^0,w,c
  4457   003FDC  6E5A               	movwf	(floorf@e+1)^0,c
  4458   003FDE  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4459   003FE0  EFFB  F01F         	goto	u4361
  4460   003FE4  505A               	movf	(floorf@e+1)^0,w,c
  4461   003FE6  E109               	bnz	u4360
  4462   003FE8  0E17               	movlw	23
  4463   003FEA  5C59               	subwf	floorf@e^0,w,c
  4464   003FEC  A0D8               	btfss	status,0,c
  4465   003FEE  EFFB  F01F         	goto	u4361
  4466   003FF2  EFFD  F01F         	goto	u4360
  4467   003FF6                     u4361:
  4468   003FF6  EF07  F020         	goto	l4696
  4469   003FFA                     u4360:
  4470   003FFA                     l4694:
  4471   003FFA  C04B  F04B         	movff	floorf@x,?_floorf
  4472   003FFE  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4473   004002  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4474   004006  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4475   00400A  EFCA  F020         	goto	l1597
  4476   00400E                     l4696:
  4477   00400E  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4478   004010  EF0C  F020         	goto	u4371
  4479   004014  EF0E  F020         	goto	u4370
  4480   004018                     u4371:
  4481   004018  EF7E  F020         	goto	l4706
  4482   00401C                     u4370:
  4483   00401C  C059  F04F         	movff	floorf@e,??_floorf
  4484   004020  0EFF               	movlw	255
  4485   004022  6E50               	movwf	(??_floorf+1)^0,c
  4486   004024  0EFF               	movlw	255
  4487   004026  6E51               	movwf	(??_floorf+2)^0,c
  4488   004028  0E7F               	movlw	127
  4489   00402A  6E52               	movwf	(??_floorf+3)^0,c
  4490   00402C  0E00               	movlw	0
  4491   00402E  6E53               	movwf	(??_floorf+4)^0,c
  4492   004030                     u4385:
  4493   004030  664F               	tstfsz	??_floorf^0,c
  4494   004032  EF1D  F020         	goto	u4386
  4495   004036  EF25  F020         	goto	u4387
  4496   00403A                     u4386:
  4497   00403A  3453               	rlcf	(??_floorf+4)^0,w,c
  4498   00403C  3253               	rrcf	(??_floorf+4)^0,f,c
  4499   00403E  3252               	rrcf	(??_floorf+3)^0,f,c
  4500   004040  3251               	rrcf	(??_floorf+2)^0,f,c
  4501   004042  3250               	rrcf	(??_floorf+1)^0,f,c
  4502   004044  2E4F               	decfsz	??_floorf^0,f,c
  4503   004046  EF18  F020         	goto	u4385
  4504   00404A                     u4387:
  4505   00404A  C050  F055         	movff	??_floorf+1,floorf@m
  4506   00404E  C051  F056         	movff	??_floorf+2,floorf@m+1
  4507   004052  C052  F057         	movff	??_floorf+3,floorf@m+2
  4508   004056  C053  F058         	movff	??_floorf+4,floorf@m+3
  4509   00405A  5055               	movf	floorf@m^0,w,c
  4510   00405C  145B               	andwf	floorf@u^0,w,c
  4511   00405E  6E4F               	movwf	??_floorf^0,c
  4512   004060  5056               	movf	(floorf@m+1)^0,w,c
  4513   004062  145C               	andwf	(floorf@u+1)^0,w,c
  4514   004064  6E50               	movwf	(??_floorf+1)^0,c
  4515   004066  5057               	movf	(floorf@m+2)^0,w,c
  4516   004068  145D               	andwf	(floorf@u+2)^0,w,c
  4517   00406A  6E51               	movwf	(??_floorf+2)^0,c
  4518   00406C  5058               	movf	(floorf@m+3)^0,w,c
  4519   00406E  145E               	andwf	(floorf@u+3)^0,w,c
  4520   004070  6E52               	movwf	(??_floorf+3)^0,c
  4521   004072  504F               	movf	??_floorf^0,w,c
  4522   004074  1050               	iorwf	(??_floorf+1)^0,w,c
  4523   004076  1051               	iorwf	(??_floorf+2)^0,w,c
  4524   004078  1052               	iorwf	(??_floorf+3)^0,w,c
  4525   00407A  A4D8               	btfss	status,2,c
  4526   00407C  EF42  F020         	goto	u4391
  4527   004080  EF44  F020         	goto	u4390
  4528   004084                     u4391:
  4529   004084  EF46  F020         	goto	l4702
  4530   004088                     u4390:
  4531   004088  EFFD  F01F         	goto	l4694
  4532   00408C                     l4702:
  4533   00408C  C05B  F04F         	movff	floorf@u,??_floorf
  4534   004090  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4535   004094  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4536   004098  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4537   00409C  0E20               	movlw	32
  4538   00409E  EF56  F020         	goto	u4400
  4539   0040A2                     u4405:
  4540   0040A2  90D8               	bcf	status,0,c
  4541   0040A4  3252               	rrcf	(??_floorf+3)^0,f,c
  4542   0040A6  3251               	rrcf	(??_floorf+2)^0,f,c
  4543   0040A8  3250               	rrcf	(??_floorf+1)^0,f,c
  4544   0040AA  324F               	rrcf	??_floorf^0,f,c
  4545   0040AC                     u4400:
  4546   0040AC  2EE8               	decfsz	wreg,f,c
  4547   0040AE  EF51  F020         	goto	u4405
  4548   0040B2  504F               	movf	??_floorf^0,w,c
  4549   0040B4  1050               	iorwf	(??_floorf+1)^0,w,c
  4550   0040B6  1051               	iorwf	(??_floorf+2)^0,w,c
  4551   0040B8  1052               	iorwf	(??_floorf+3)^0,w,c
  4552   0040BA  B4D8               	btfsc	status,2,c
  4553   0040BC  EF62  F020         	goto	u4411
  4554   0040C0  EF64  F020         	goto	u4410
  4555   0040C4                     u4411:
  4556   0040C4  EF6C  F020         	goto	l1600
  4557   0040C8                     u4410:
  4558   0040C8  5055               	movf	floorf@m^0,w,c
  4559   0040CA  265B               	addwf	floorf@u^0,f,c
  4560   0040CC  5056               	movf	(floorf@m+1)^0,w,c
  4561   0040CE  225C               	addwfc	(floorf@u+1)^0,f,c
  4562   0040D0  5057               	movf	(floorf@m+2)^0,w,c
  4563   0040D2  225D               	addwfc	(floorf@u+2)^0,f,c
  4564   0040D4  5058               	movf	(floorf@m+3)^0,w,c
  4565   0040D6  225E               	addwfc	(floorf@u+3)^0,f,c
  4566   0040D8                     l1600:
  4567   0040D8  1C55               	comf	floorf@m^0,w,c
  4568   0040DA  6E4F               	movwf	??_floorf^0,c
  4569   0040DC  1C56               	comf	(floorf@m+1)^0,w,c
  4570   0040DE  6E50               	movwf	(??_floorf+1)^0,c
  4571   0040E0  1C57               	comf	(floorf@m+2)^0,w,c
  4572   0040E2  6E51               	movwf	(??_floorf+2)^0,c
  4573   0040E4  1C58               	comf	(floorf@m+3)^0,w,c
  4574   0040E6  6E52               	movwf	(??_floorf+3)^0,c
  4575   0040E8  504F               	movf	??_floorf^0,w,c
  4576   0040EA  165B               	andwf	floorf@u^0,f,c
  4577   0040EC  5050               	movf	(??_floorf+1)^0,w,c
  4578   0040EE  165C               	andwf	(floorf@u+1)^0,f,c
  4579   0040F0  5051               	movf	(??_floorf+2)^0,w,c
  4580   0040F2  165D               	andwf	(floorf@u+2)^0,f,c
  4581   0040F4  5052               	movf	(??_floorf+3)^0,w,c
  4582   0040F6  165E               	andwf	(floorf@u+3)^0,f,c
  4583   0040F8  EFC2  F020         	goto	l4714
  4584   0040FC                     l4706:
  4585   0040FC  C05B  F04F         	movff	floorf@u,??_floorf
  4586   004100  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4587   004104  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4588   004108  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4589   00410C  0E20               	movlw	32
  4590   00410E  EF8E  F020         	goto	u4420
  4591   004112                     u4425:
  4592   004112  90D8               	bcf	status,0,c
  4593   004114  3252               	rrcf	(??_floorf+3)^0,f,c
  4594   004116  3251               	rrcf	(??_floorf+2)^0,f,c
  4595   004118  3250               	rrcf	(??_floorf+1)^0,f,c
  4596   00411A  324F               	rrcf	??_floorf^0,f,c
  4597   00411C                     u4420:
  4598   00411C  2EE8               	decfsz	wreg,f,c
  4599   00411E  EF89  F020         	goto	u4425
  4600   004122  504F               	movf	??_floorf^0,w,c
  4601   004124  1050               	iorwf	(??_floorf+1)^0,w,c
  4602   004126  1051               	iorwf	(??_floorf+2)^0,w,c
  4603   004128  1052               	iorwf	(??_floorf+3)^0,w,c
  4604   00412A  A4D8               	btfss	status,2,c
  4605   00412C  EF9A  F020         	goto	u4431
  4606   004130  EF9C  F020         	goto	u4430
  4607   004134                     u4431:
  4608   004134  EFA6  F020         	goto	l4710
  4609   004138                     u4430:
  4610   004138  0E00               	movlw	0
  4611   00413A  6E5B               	movwf	floorf@u^0,c
  4612   00413C  0E00               	movlw	0
  4613   00413E  6E5C               	movwf	(floorf@u+1)^0,c
  4614   004140  0E00               	movlw	0
  4615   004142  6E5D               	movwf	(floorf@u+2)^0,c
  4616   004144  0E00               	movlw	0
  4617   004146  6E5E               	movwf	(floorf@u+3)^0,c
  4618   004148  EFC2  F020         	goto	l4714
  4619   00414C                     l4710:
  4620   00414C  90D8               	bcf	status,0,c
  4621   00414E  345B               	rlcf	floorf@u^0,w,c
  4622   004150  6E4F               	movwf	??_floorf^0,c
  4623   004152  345C               	rlcf	(floorf@u+1)^0,w,c
  4624   004154  6E50               	movwf	(??_floorf+1)^0,c
  4625   004156  345D               	rlcf	(floorf@u+2)^0,w,c
  4626   004158  6E51               	movwf	(??_floorf+2)^0,c
  4627   00415A  345E               	rlcf	(floorf@u+3)^0,w,c
  4628   00415C  6E52               	movwf	(??_floorf+3)^0,c
  4629   00415E  504F               	movf	??_floorf^0,w,c
  4630   004160  1050               	iorwf	(??_floorf+1)^0,w,c
  4631   004162  1051               	iorwf	(??_floorf+2)^0,w,c
  4632   004164  1052               	iorwf	(??_floorf+3)^0,w,c
  4633   004166  B4D8               	btfsc	status,2,c
  4634   004168  EFB8  F020         	goto	u4441
  4635   00416C  EFBA  F020         	goto	u4440
  4636   004170                     u4441:
  4637   004170  EFC2  F020         	goto	l4714
  4638   004174                     u4440:
  4639   004174  0E00               	movlw	0
  4640   004176  6E5B               	movwf	floorf@u^0,c
  4641   004178  0E00               	movlw	0
  4642   00417A  6E5C               	movwf	(floorf@u+1)^0,c
  4643   00417C  0E80               	movlw	128
  4644   00417E  6E5D               	movwf	(floorf@u+2)^0,c
  4645   004180  0EBF               	movlw	191
  4646   004182  6E5E               	movwf	(floorf@u+3)^0,c
  4647   004184                     l4714:
  4648   004184  C05B  F04B         	movff	floorf@u,?_floorf
  4649   004188  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4650   00418C  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4651   004190  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4652   004194                     l1597:
  4653   004194  0012               	return		;funcret
  4654   004196                     __end_of_floorf:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function ___fpclassifyf *****************
  4658 ;; Defined at:
  4659 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  x               4    0[COMRAM] float 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  u               4   10[COMRAM] struct .
  4664 ;;  e               2    8[COMRAM] int 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  2    0[COMRAM] int 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;Total ram usage:       14 bytes
  4679 ;; Hardware stack levels used: 1
  4680 ;; Hardware stack levels required when called: 1
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_efgtoa
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text10
  4689   004B58                     __ptext10:
  4690                           	callstack 0
  4691   004B58                     ___fpclassifyf:
  4692                           	callstack 25
  4693   004B58  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4694   004B5C  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4695   004B60  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4696   004B64  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4697   004B68  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4698   004B6C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4699   004B70  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4700   004B74  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4701   004B78  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4702   004B7C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4703   004B80  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4704   004B84  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4705   004B88  0E18               	movlw	24
  4706   004B8A  EFCC  F025         	goto	u4260
  4707   004B8E                     u4265:
  4708   004B8E  90D8               	bcf	status,0,c
  4709   004B90  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4710   004B92  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4711   004B94  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4712   004B96  3205               	rrcf	??___fpclassifyf^0,f,c
  4713   004B98                     u4260:
  4714   004B98  2EE8               	decfsz	wreg,f,c
  4715   004B9A  EFC7  F025         	goto	u4265
  4716   004B9E  5005               	movf	??___fpclassifyf^0,w,c
  4717   004BA0  6E09               	movwf	___fpclassifyf@e^0,c
  4718   004BA2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4719   004BA4  5009               	movf	___fpclassifyf@e^0,w,c
  4720   004BA6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4721   004BA8  A4D8               	btfss	status,2,c
  4722   004BAA  EFD9  F025         	goto	u4271
  4723   004BAE  EFDB  F025         	goto	u4270
  4724   004BB2                     u4271:
  4725   004BB2  EFFB  F025         	goto	l4672
  4726   004BB6                     u4270:
  4727   004BB6  90D8               	bcf	status,0,c
  4728   004BB8  340B               	rlcf	___fpclassifyf@u^0,w,c
  4729   004BBA  6E05               	movwf	??___fpclassifyf^0,c
  4730   004BBC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4731   004BBE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4732   004BC0  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4733   004BC2  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4734   004BC4  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4735   004BC6  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4736   004BC8  5005               	movf	??___fpclassifyf^0,w,c
  4737   004BCA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4738   004BCC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4739   004BCE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4740   004BD0  A4D8               	btfss	status,2,c
  4741   004BD2  EFED  F025         	goto	u4281
  4742   004BD6  EFEF  F025         	goto	u4280
  4743   004BDA                     u4281:
  4744   004BDA  EFF5  F025         	goto	l4668
  4745   004BDE                     u4280:
  4746   004BDE  0E00               	movlw	0
  4747   004BE0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4748   004BE2  0E02               	movlw	2
  4749   004BE4  6E01               	movwf	?___fpclassifyf^0,c
  4750   004BE6  EF2A  F026         	goto	l1583
  4751   004BEA                     l4668:
  4752   004BEA  0E00               	movlw	0
  4753   004BEC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4754   004BEE  0E03               	movlw	3
  4755   004BF0  6E01               	movwf	?___fpclassifyf^0,c
  4756   004BF2  EF2A  F026         	goto	l1583
  4757   004BF6                     l4672:
  4758   004BF6  2809               	incf	___fpclassifyf@e^0,w,c
  4759   004BF8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4760   004BFA  A4D8               	btfss	status,2,c
  4761   004BFC  EF02  F026         	goto	u4291
  4762   004C00  EF04  F026         	goto	u4290
  4763   004C04                     u4291:
  4764   004C04  EF26  F026         	goto	l4678
  4765   004C08                     u4290:
  4766   004C08  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4767   004C0C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4768   004C10  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4769   004C14  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4770   004C18  0E09               	movlw	9
  4771   004C1A                     u4305:
  4772   004C1A  90D8               	bcf	status,0,c
  4773   004C1C  3605               	rlcf	??___fpclassifyf^0,f,c
  4774   004C1E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4775   004C20  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4776   004C22  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4777   004C24  2EE8               	decfsz	wreg,f,c
  4778   004C26  EF0D  F026         	goto	u4305
  4779   004C2A  5005               	movf	??___fpclassifyf^0,w,c
  4780   004C2C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4781   004C2E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4782   004C30  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4783   004C32  B4D8               	btfsc	status,2,c
  4784   004C34  EF1E  F026         	goto	u4311
  4785   004C38  EF21  F026         	goto	u4310
  4786   004C3C                     u4311:
  4787   004C3C  0E01               	movlw	1
  4788   004C3E  EF22  F026         	goto	u4320
  4789   004C42                     u4310:
  4790   004C42  0E00               	movlw	0
  4791   004C44                     u4320:
  4792   004C44  6E01               	movwf	?___fpclassifyf^0,c
  4793   004C46  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4794   004C48  EF2A  F026         	goto	l1583
  4795   004C4C                     l4678:
  4796   004C4C  0E00               	movlw	0
  4797   004C4E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4798   004C50  0E04               	movlw	4
  4799   004C52  6E01               	movwf	?___fpclassifyf^0,c
  4800   004C54                     l1583:
  4801   004C54  0012               	return		;funcret
  4802   004C56                     __end_of___fpclassifyf:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function ___fltol *****************
  4806 ;; Defined at:
  4807 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  f1              4    0[COMRAM] int 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  exp1            1    9[COMRAM] unsigned char 
  4812 ;;  sign1           1    8[COMRAM] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  4    0[COMRAM] long 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4825 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4826 ;;Total ram usage:       10 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; Hardware stack levels required when called: 1
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_reverseOneBlock
  4833 ;;		_ForwardOneBlock
  4834 ;;		_Forwardhalfblock
  4835 ;;		_Backhalfblock
  4836 ;;		_efgtoa
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text11
  4841   00494E                     __ptext11:
  4842                           	callstack 0
  4843   00494E                     ___fltol:
  4844                           	callstack 25
  4845   00494E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4846   004950  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4847   004952  6E0A               	movwf	___fltol@exp1^0,c
  4848   004954  500A               	movf	___fltol@exp1^0,w,c
  4849   004956  A4D8               	btfss	status,2,c
  4850   004958  EFB0  F024         	goto	u4161
  4851   00495C  EFB2  F024         	goto	u4160
  4852   004960                     u4161:
  4853   004960  EFBC  F024         	goto	l4604
  4854   004964                     u4160:
  4855   004964                     l4600:
  4856   004964  0E00               	movlw	0
  4857   004966  6E01               	movwf	?___fltol^0,c
  4858   004968  0E00               	movlw	0
  4859   00496A  6E02               	movwf	(?___fltol+1)^0,c
  4860   00496C  0E00               	movlw	0
  4861   00496E  6E03               	movwf	(?___fltol+2)^0,c
  4862   004970  0E00               	movlw	0
  4863   004972  6E04               	movwf	(?___fltol+3)^0,c
  4864   004974  EF29  F025         	goto	l1056
  4865   004978                     l4604:
  4866   004978  C001  F005         	movff	___fltol@f1,??___fltol
  4867   00497C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4868   004980  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4869   004984  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4870   004988  0E20               	movlw	32
  4871   00498A  EFCC  F024         	goto	u4170
  4872   00498E                     u4175:
  4873   00498E  90D8               	bcf	status,0,c
  4874   004990  3208               	rrcf	(??___fltol+3)^0,f,c
  4875   004992  3207               	rrcf	(??___fltol+2)^0,f,c
  4876   004994  3206               	rrcf	(??___fltol+1)^0,f,c
  4877   004996  3205               	rrcf	??___fltol^0,f,c
  4878   004998                     u4170:
  4879   004998  2EE8               	decfsz	wreg,f,c
  4880   00499A  EFC7  F024         	goto	u4175
  4881   00499E  5005               	movf	??___fltol^0,w,c
  4882   0049A0  6E09               	movwf	___fltol@sign1^0,c
  4883   0049A2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4884   0049A4  0EFF               	movlw	255
  4885   0049A6  1601               	andwf	___fltol@f1^0,f,c
  4886   0049A8  0EFF               	movlw	255
  4887   0049AA  1602               	andwf	(___fltol@f1+1)^0,f,c
  4888   0049AC  0EFF               	movlw	255
  4889   0049AE  1603               	andwf	(___fltol@f1+2)^0,f,c
  4890   0049B0  0E00               	movlw	0
  4891   0049B2  1604               	andwf	(___fltol@f1+3)^0,f,c
  4892   0049B4  0E96               	movlw	150
  4893   0049B6  5E0A               	subwf	___fltol@exp1^0,f,c
  4894   0049B8  BE0A               	btfsc	___fltol@exp1^0,7,c
  4895   0049BA  EFE3  F024         	goto	u4180
  4896   0049BE  EFE1  F024         	goto	u4181
  4897   0049C2                     u4181:
  4898   0049C2  EFF9  F024         	goto	l4624
  4899   0049C6                     u4180:
  4900   0049C6  500A               	movf	___fltol@exp1^0,w,c
  4901   0049C8  0A80               	xorlw	128
  4902   0049CA  0F97               	addlw	151
  4903   0049CC  B0D8               	btfsc	status,0,c
  4904   0049CE  EFEB  F024         	goto	u4191
  4905   0049D2  EFED  F024         	goto	u4190
  4906   0049D6                     u4191:
  4907   0049D6  EFEF  F024         	goto	l4620
  4908   0049DA                     u4190:
  4909   0049DA  EFB2  F024         	goto	l4600
  4910   0049DE                     l4620:
  4911   0049DE  90D8               	bcf	status,0,c
  4912   0049E0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4913   0049E2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4914   0049E4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4915   0049E6  3201               	rrcf	___fltol@f1^0,f,c
  4916   0049E8  3E0A               	incfsz	___fltol@exp1^0,f,c
  4917   0049EA  EFEF  F024         	goto	l4620
  4918   0049EE  EF11  F025         	goto	l4634
  4919   0049F2                     l4624:
  4920   0049F2  0E1F               	movlw	31
  4921   0049F4  640A               	cpfsgt	___fltol@exp1^0,c
  4922   0049F6  EFFF  F024         	goto	u4201
  4923   0049FA  EF01  F025         	goto	u4200
  4924   0049FE                     u4201:
  4925   0049FE  EF09  F025         	goto	l4632
  4926   004A02                     u4200:
  4927   004A02  EFB2  F024         	goto	l4600
  4928   004A06                     l4630:
  4929   004A06  90D8               	bcf	status,0,c
  4930   004A08  3601               	rlcf	___fltol@f1^0,f,c
  4931   004A0A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4932   004A0C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4933   004A0E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4934   004A10  060A               	decf	___fltol@exp1^0,f,c
  4935   004A12                     l4632:
  4936   004A12  500A               	movf	___fltol@exp1^0,w,c
  4937   004A14  A4D8               	btfss	status,2,c
  4938   004A16  EF0F  F025         	goto	u4211
  4939   004A1A  EF11  F025         	goto	u4210
  4940   004A1E                     u4211:
  4941   004A1E  EF03  F025         	goto	l4630
  4942   004A22                     u4210:
  4943   004A22                     l4634:
  4944   004A22  5009               	movf	___fltol@sign1^0,w,c
  4945   004A24  B4D8               	btfsc	status,2,c
  4946   004A26  EF17  F025         	goto	u4221
  4947   004A2A  EF19  F025         	goto	u4220
  4948   004A2E                     u4221:
  4949   004A2E  EF21  F025         	goto	l4638
  4950   004A32                     u4220:
  4951   004A32  1E04               	comf	(___fltol@f1+3)^0,f,c
  4952   004A34  1E03               	comf	(___fltol@f1+2)^0,f,c
  4953   004A36  1E02               	comf	(___fltol@f1+1)^0,f,c
  4954   004A38  6C01               	negf	___fltol@f1^0,c
  4955   004A3A  0E00               	movlw	0
  4956   004A3C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4957   004A3E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4958   004A40  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4959   004A42                     l4638:
  4960   004A42  C001  F001         	movff	___fltol@f1,?___fltol
  4961   004A46  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4962   004A4A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4963   004A4E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4964   004A52                     l1056:
  4965   004A52  0012               	return		;funcret
  4966   004A54                     __end_of___fltol:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function ___flneg *****************
  4970 ;; Defined at:
  4971 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  f1              4    0[COMRAM] long 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;		None
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  4    0[COMRAM] long 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4989 ;;Total ram usage:        4 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; Hardware stack levels required when called: 1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_efgtoa
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text12
  5000   006030                     __ptext12:
  5001                           	callstack 0
  5002   006030                     ___flneg:
  5003                           	callstack 25
  5004   006030  5001               	movf	___flneg@f1^0,w,c
  5005   006032  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5006   006034  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5007   006036  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5008   006038  B4D8               	btfsc	status,2,c
  5009   00603A  EF21  F030         	goto	u4151
  5010   00603E  EF23  F030         	goto	u4150
  5011   006042                     u4151:
  5012   006042  EF2B  F030         	goto	l4594
  5013   006046                     u4150:
  5014   006046  0E00               	movlw	0
  5015   006048  1A01               	xorwf	___flneg@f1^0,f,c
  5016   00604A  0E00               	movlw	0
  5017   00604C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5018   00604E  0E00               	movlw	0
  5019   006050  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5020   006052  0E80               	movlw	128
  5021   006054  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5022   006056                     l4594:
  5023   006056  C001  F001         	movff	___flneg@f1,?___flneg
  5024   00605A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5025   00605E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5026   006062  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5027   006066  0012               	return		;funcret
  5028   006068                     __end_of___flneg:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _dtoa *****************
  5032 ;; Defined at:
  5033 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5036 ;;		 -> sprintf@f(11), 
  5037 ;;  d               8   29[COMRAM] long long 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  n               8   51[COMRAM] long long 
  5040 ;;  i               2   59[COMRAM] int 
  5041 ;;  w               2   49[COMRAM] int 
  5042 ;;  p               2   47[COMRAM] int 
  5043 ;;  s               1   61[COMRAM] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5053 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;Total ram usage:       35 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 5
  5060 ;; This function calls:
  5061 ;;		___aodiv
  5062 ;;		___aomod
  5063 ;;		_abs
  5064 ;;		_pad
  5065 ;; This function is called by:
  5066 ;;		_vfpfcnvrt
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text13
  5071   003A8E                     __ptext13:
  5072                           	callstack 0
  5073   003A8E                     _dtoa:
  5074                           	callstack 22
  5075   003A8E                     
  5076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5077   003A8E  C01E  F034         	movff	dtoa@d,dtoa@n
  5078   003A92  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5079   003A96  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5080   003A9A  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5081   003A9E  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5082   003AA2  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5083   003AA6  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5084   003AAA  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5085   003AAE                     
  5086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5087   003AAE  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5088   003AB0  EF5C  F01D         	goto	u4491
  5089   003AB4  EF5F  F01D         	goto	u4490
  5090   003AB8                     u4491:
  5091   003AB8  0E01               	movlw	1
  5092   003ABA  EF60  F01D         	goto	u4500
  5093   003ABE                     u4490:
  5094   003ABE  0E00               	movlw	0
  5095   003AC0                     u4500:
  5096   003AC0  6E3E               	movwf	dtoa@s^0,c
  5097   003AC2                     
  5098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5099   003AC2  503E               	movf	dtoa@s^0,w,c
  5100   003AC4  B4D8               	btfsc	status,2,c
  5101   003AC6  EF67  F01D         	goto	u4511
  5102   003ACA  EF69  F01D         	goto	u4510
  5103   003ACE                     u4511:
  5104   003ACE  EF79  F01D         	goto	l4782
  5105   003AD2                     u4510:
  5106   003AD2                     
  5107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5108   003AD2  1E3B               	comf	(dtoa@n+7)^0,f,c
  5109   003AD4  1E3A               	comf	(dtoa@n+6)^0,f,c
  5110   003AD6  1E39               	comf	(dtoa@n+5)^0,f,c
  5111   003AD8  1E38               	comf	(dtoa@n+4)^0,f,c
  5112   003ADA  1E37               	comf	(dtoa@n+3)^0,f,c
  5113   003ADC  1E36               	comf	(dtoa@n+2)^0,f,c
  5114   003ADE  1E35               	comf	(dtoa@n+1)^0,f,c
  5115   003AE0  6C34               	negf	dtoa@n^0,c
  5116   003AE2  0E00               	movlw	0
  5117   003AE4  2235               	addwfc	(dtoa@n+1)^0,f,c
  5118   003AE6  2236               	addwfc	(dtoa@n+2)^0,f,c
  5119   003AE8  2237               	addwfc	(dtoa@n+3)^0,f,c
  5120   003AEA  2238               	addwfc	(dtoa@n+4)^0,f,c
  5121   003AEC  2239               	addwfc	(dtoa@n+5)^0,f,c
  5122   003AEE  223A               	addwfc	(dtoa@n+6)^0,f,c
  5123   003AF0  223B               	addwfc	(dtoa@n+7)^0,f,c
  5124   003AF2                     l4782:
  5125                           
  5126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5127   003AF2  0100               	movlb	0	; () banked
  5128   003AF4  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5129   003AF6  EF87  F01D         	goto	u4520
  5130   003AFA  51EA               	movf	(_prec+1)& (0+255),w,b
  5131   003AFC  E106               	bnz	u4521
  5132   003AFE  05E9               	decf	_prec& (0+255),w,b
  5133   003B00  B0D8               	btfsc	status,0,c
  5134   003B02  EF85  F01D         	goto	u4521
  5135   003B06  EF87  F01D         	goto	u4520
  5136   003B0A                     u4521:
  5137   003B0A  EF8D  F01D         	goto	l1478
  5138   003B0E                     u4520:
  5139   003B0E                     
  5140                           ; BSR set to: 0
  5141   003B0E  0E00               	movlw	0
  5142   003B10  6E31               	movwf	(dtoa@p+1)^0,c
  5143   003B12  0E01               	movlw	1
  5144   003B14  6E30               	movwf	dtoa@p^0,c
  5145   003B16  EF91  F01D         	goto	l1480
  5146   003B1A                     l1478:
  5147                           
  5148                           ; BSR set to: 0
  5149   003B1A  C0E9  F030         	movff	_prec,dtoa@p
  5150   003B1E  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5151   003B22                     l1480:
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5155   003B22  C0E7  F032         	movff	_width,dtoa@w
  5156   003B26  C0E8  F033         	movff	_width+1,dtoa@w+1
  5157   003B2A                     
  5158                           ; BSR set to: 0
  5159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5160   003B2A  503E               	movf	dtoa@s^0,w,c
  5161   003B2C  B4D8               	btfsc	status,2,c
  5162   003B2E  EF9B  F01D         	goto	u4531
  5163   003B32  EF9D  F01D         	goto	u4530
  5164   003B36                     u4531:
  5165   003B36  EFB4  F01D         	goto	l1481
  5166   003B3A                     u4530:
  5167   003B3A                     
  5168                           ; BSR set to: 0
  5169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5170   003B3A  0632               	decf	dtoa@w^0,f,c
  5171   003B3C  A0D8               	btfss	status,0,c
  5172   003B3E  0633               	decf	(dtoa@w+1)^0,f,c
  5173   003B40                     
  5174                           ; BSR set to: 0
  5175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5176   003B40  503E               	movf	dtoa@s^0,w,c
  5177   003B42  A4D8               	btfss	status,2,c
  5178   003B44  EFA6  F01D         	goto	u4541
  5179   003B48  EFA8  F01D         	goto	u4540
  5180   003B4C                     u4541:
  5181   003B4C  EFAE  F01D         	goto	l4794
  5182   003B50                     u4540:
  5183   003B50                     
  5184                           ; BSR set to: 0
  5185   003B50  0E00               	movlw	0
  5186   003B52  6E2F               	movwf	(_dtoa$2938+1)^0,c
  5187   003B54  0E2B               	movlw	43
  5188   003B56  6E2E               	movwf	_dtoa$2938^0,c
  5189   003B58  EFB2  F01D         	goto	l4796
  5190   003B5C                     l4794:
  5191                           
  5192                           ; BSR set to: 0
  5193   003B5C  0E00               	movlw	0
  5194   003B5E  6E2F               	movwf	(_dtoa$2938+1)^0,c
  5195   003B60  0E2D               	movlw	45
  5196   003B62  6E2E               	movwf	_dtoa$2938^0,c
  5197   003B64                     l4796:
  5198                           
  5199                           ; BSR set to: 0
  5200   003B64  C02E  F03E         	movff	_dtoa$2938,dtoa@s
  5201   003B68                     l1481:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5205   003B68  0E00               	movlw	0
  5206   003B6A  6E3D               	movwf	(dtoa@i+1)^0,c
  5207   003B6C  0E4F               	movlw	79
  5208   003B6E  6E3C               	movwf	dtoa@i^0,c
  5209   003B70                     
  5210                           ; BSR set to: 0
  5211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5212   003B70  0E00               	movlw	0
  5213   003B72  0102               	movlb	2	; () banked
  5214   003B74  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5215                           
  5216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5217   003B76  EF39  F01E         	goto	l4810
  5218   003B7A                     l4800:
  5219                           
  5220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5221   003B7A  063C               	decf	dtoa@i^0,f,c
  5222   003B7C  A0D8               	btfss	status,0,c
  5223   003B7E  063D               	decf	(dtoa@i+1)^0,f,c
  5224   003B80                     
  5225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5226   003B80  0EA0               	movlw	low _dbuf
  5227   003B82  243C               	addwf	dtoa@i^0,w,c
  5228   003B84  6ED9               	movwf	fsr2l,c
  5229   003B86  0E02               	movlw	high _dbuf
  5230   003B88  203D               	addwfc	(dtoa@i+1)^0,w,c
  5231   003B8A  6EDA               	movwf	fsr2h,c
  5232   003B8C  C034  F001         	movff	dtoa@n,___aomod@dividend
  5233   003B90  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5234   003B94  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5235   003B98  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5236   003B9C  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5237   003BA0  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5238   003BA4  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5239   003BA8  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5240   003BAC  0E0A               	movlw	10
  5241   003BAE  6E09               	movwf	___aomod@divisor^0,c
  5242   003BB0  0E00               	movlw	0
  5243   003BB2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5244   003BB4  0E00               	movlw	0
  5245   003BB6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5246   003BB8  0E00               	movlw	0
  5247   003BBA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5248   003BBC  0E00               	movlw	0
  5249   003BBE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5250   003BC0  0E00               	movlw	0
  5251   003BC2  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5252   003BC4  0E00               	movlw	0
  5253   003BC6  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5254   003BC8  0E00               	movlw	0
  5255   003BCA  6E10               	movwf	(___aomod@divisor+7)^0,c
  5256   003BCC  ECF5  F023         	call	___aomod	;wreg free
  5257   003BD0  C001  F026         	movff	?___aomod,??_dtoa
  5258   003BD4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5259   003BD8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5260   003BDC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5261   003BE0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5262   003BE4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5263   003BE8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5264   003BEC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5265   003BF0  C026  F013         	movff	??_dtoa,abs@a
  5266   003BF4  C027  F014         	movff	??_dtoa+1,abs@a+1
  5267   003BF8  ECBA  F02F         	call	_abs	;wreg free
  5268   003BFC  5013               	movf	?_abs^0,w,c
  5269   003BFE  0F30               	addlw	48
  5270   003C00  6EDF               	movwf	indf2,c
  5271   003C02                     
  5272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5273   003C02  0630               	decf	dtoa@p^0,f,c
  5274   003C04  A0D8               	btfss	status,0,c
  5275   003C06  0631               	decf	(dtoa@p+1)^0,f,c
  5276   003C08                     
  5277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5278   003C08  0632               	decf	dtoa@w^0,f,c
  5279   003C0A  A0D8               	btfss	status,0,c
  5280   003C0C  0633               	decf	(dtoa@w+1)^0,f,c
  5281   003C0E                     
  5282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5283   003C0E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5284   003C12  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5285   003C16  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5286   003C1A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5287   003C1E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5288   003C22  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5289   003C26  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5290   003C2A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5291   003C2E  0E0A               	movlw	10
  5292   003C30  6E09               	movwf	___aodiv@divisor^0,c
  5293   003C32  0E00               	movlw	0
  5294   003C34  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5295   003C36  0E00               	movlw	0
  5296   003C38  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5297   003C3A  0E00               	movlw	0
  5298   003C3C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5299   003C3E  0E00               	movlw	0
  5300   003C40  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5301   003C42  0E00               	movlw	0
  5302   003C44  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5303   003C46  0E00               	movlw	0
  5304   003C48  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5305   003C4A  0E00               	movlw	0
  5306   003C4C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5307   003C4E  EC7B  F022         	call	___aodiv	;wreg free
  5308   003C52  C001  F034         	movff	?___aodiv,dtoa@n
  5309   003C56  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5310   003C5A  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5311   003C5E  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5312   003C62  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5313   003C66  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5314   003C6A  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5315   003C6E  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5316   003C72                     l4810:
  5317                           
  5318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5319   003C72  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5320   003C74  EF44  F01E         	goto	u4551
  5321   003C78  503D               	movf	(dtoa@i+1)^0,w,c
  5322   003C7A  E108               	bnz	u4550
  5323   003C7C  043C               	decf	dtoa@i^0,w,c
  5324   003C7E  A0D8               	btfss	status,0,c
  5325   003C80  EF44  F01E         	goto	u4551
  5326   003C84  EF46  F01E         	goto	u4550
  5327   003C88                     u4551:
  5328   003C88  EF62  F01E         	goto	l4816
  5329   003C8C                     u4550:
  5330   003C8C  5034               	movf	dtoa@n^0,w,c
  5331   003C8E  1035               	iorwf	(dtoa@n+1)^0,w,c
  5332   003C90  1036               	iorwf	(dtoa@n+2)^0,w,c
  5333   003C92  1037               	iorwf	(dtoa@n+3)^0,w,c
  5334   003C94  1038               	iorwf	(dtoa@n+4)^0,w,c
  5335   003C96  1039               	iorwf	(dtoa@n+5)^0,w,c
  5336   003C98  103A               	iorwf	(dtoa@n+6)^0,w,c
  5337   003C9A  103B               	iorwf	(dtoa@n+7)^0,w,c
  5338   003C9C  A4D8               	btfss	status,2,c
  5339   003C9E  EF53  F01E         	goto	u4561
  5340   003CA2  EF55  F01E         	goto	u4560
  5341   003CA6                     u4561:
  5342   003CA6  EFBD  F01D         	goto	l4800
  5343   003CAA                     u4560:
  5344   003CAA  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5345   003CAC  EF62  F01E         	goto	u4570
  5346   003CB0  5031               	movf	(dtoa@p+1)^0,w,c
  5347   003CB2  E106               	bnz	u4571
  5348   003CB4  0430               	decf	dtoa@p^0,w,c
  5349   003CB6  B0D8               	btfsc	status,0,c
  5350   003CB8  EF60  F01E         	goto	u4571
  5351   003CBC  EF62  F01E         	goto	u4570
  5352   003CC0                     u4571:
  5353   003CC0  EFBD  F01D         	goto	l4800
  5354   003CC4                     u4570:
  5355   003CC4                     l4816:
  5356                           
  5357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5358   003CC4  503E               	movf	dtoa@s^0,w,c
  5359   003CC6  B4D8               	btfsc	status,2,c
  5360   003CC8  EF68  F01E         	goto	u4581
  5361   003CCC  EF6A  F01E         	goto	u4580
  5362   003CD0                     u4581:
  5363   003CD0  EF75  F01E         	goto	l4822
  5364   003CD4                     u4580:
  5365   003CD4                     
  5366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5367   003CD4  063C               	decf	dtoa@i^0,f,c
  5368   003CD6  A0D8               	btfss	status,0,c
  5369   003CD8  063D               	decf	(dtoa@i+1)^0,f,c
  5370   003CDA                     
  5371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5372   003CDA  0EA0               	movlw	low _dbuf
  5373   003CDC  243C               	addwf	dtoa@i^0,w,c
  5374   003CDE  6ED9               	movwf	fsr2l,c
  5375   003CE0  0E02               	movlw	high _dbuf
  5376   003CE2  203D               	addwfc	(dtoa@i+1)^0,w,c
  5377   003CE4  6EDA               	movwf	fsr2h,c
  5378   003CE6  C03E  FFDF         	movff	dtoa@s,indf2
  5379   003CEA                     l4822:
  5380                           
  5381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5382   003CEA  C01C  F011         	movff	dtoa@fp,pad@fp
  5383   003CEE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5384   003CF2  0EA0               	movlw	low _dbuf
  5385   003CF4  243C               	addwf	dtoa@i^0,w,c
  5386   003CF6  6E13               	movwf	pad@buf^0,c
  5387   003CF8  0E02               	movlw	high _dbuf
  5388   003CFA  203D               	addwfc	(dtoa@i+1)^0,w,c
  5389   003CFC  6E14               	movwf	(pad@buf+1)^0,c
  5390   003CFE  C032  F015         	movff	dtoa@w,pad@p
  5391   003D02  C033  F016         	movff	dtoa@w+1,pad@p+1
  5392   003D06  ECAF  F029         	call	_pad	;wreg free
  5393   003D0A  0012               	return		;funcret
  5394   003D0C                     __end_of_dtoa:
  5395                           	callstack 0
  5396                           
  5397 ;; *************** function _pad *****************
  5398 ;; Defined at:
  5399 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5402 ;;		 -> sprintf@f(11), 
  5403 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5404 ;;		 -> dbuf(80), 
  5405 ;;  p               2   20[COMRAM] int 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  w               2   25[COMRAM] int 
  5408 ;;  i               2   23[COMRAM] int 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5418 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5419 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;Total ram usage:       11 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; Hardware stack levels required when called: 4
  5425 ;; This function calls:
  5426 ;;		_fputc
  5427 ;;		_fputs
  5428 ;; This function is called by:
  5429 ;;		_dtoa
  5430 ;;		_efgtoa
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text14
  5435   00535E                     __ptext14:
  5436                           	callstack 0
  5437   00535E                     _pad:
  5438                           	callstack 22
  5439   00535E                     
  5440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5441   00535E  BE16               	btfsc	(pad@p+1)^0,7,c
  5442   005360  EFB4  F029         	goto	u4231
  5443   005364  EFB6  F029         	goto	u4230
  5444   005368                     u4231:
  5445   005368  EFBC  F029         	goto	l4646
  5446   00536C                     u4230:
  5447   00536C  C015  F01A         	movff	pad@p,pad@w
  5448   005370  C016  F01B         	movff	pad@p+1,pad@w+1
  5449   005374  EFC0  F029         	goto	l1469
  5450   005378                     l4646:
  5451   005378  0E00               	movlw	0
  5452   00537A  6E1B               	movwf	(pad@w+1)^0,c
  5453   00537C  0E00               	movlw	0
  5454   00537E  6E1A               	movwf	pad@w^0,c
  5455   005380                     l1469:
  5456                           
  5457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5458   005380  0E00               	movlw	0
  5459   005382  6E19               	movwf	(pad@i+1)^0,c
  5460   005384  0E00               	movlw	0
  5461   005386  6E18               	movwf	pad@i^0,c
  5462                           
  5463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5464   005388  EFD2  F029         	goto	l4652
  5465   00538C                     l4648:
  5466                           
  5467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5468   00538C  0E00               	movlw	0
  5469   00538E  6E02               	movwf	(fputc@c+1)^0,c
  5470   005390  0E20               	movlw	32
  5471   005392  6E01               	movwf	fputc@c^0,c
  5472   005394  C011  F003         	movff	pad@fp,fputc@fp
  5473   005398  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5474   00539C  EC2B  F026         	call	_fputc	;wreg free
  5475   0053A0                     
  5476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5477   0053A0  4A18               	infsnz	pad@i^0,f,c
  5478   0053A2  2A19               	incf	(pad@i+1)^0,f,c
  5479   0053A4                     l4652:
  5480                           
  5481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5482   0053A4  501A               	movf	pad@w^0,w,c
  5483   0053A6  5C18               	subwf	pad@i^0,w,c
  5484   0053A8  5019               	movf	(pad@i+1)^0,w,c
  5485   0053AA  0A80               	xorlw	128
  5486   0053AC  6E17               	movwf	??_pad^0,c
  5487   0053AE  501B               	movf	(pad@w+1)^0,w,c
  5488   0053B0  0A80               	xorlw	128
  5489   0053B2  5817               	subwfb	??_pad^0,w,c
  5490   0053B4  A0D8               	btfss	status,0,c
  5491   0053B6  EFDF  F029         	goto	u4241
  5492   0053BA  EFE1  F029         	goto	u4240
  5493   0053BE                     u4241:
  5494   0053BE  EFC6  F029         	goto	l4648
  5495   0053C2                     u4240:
  5496   0053C2                     
  5497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5498   0053C2  C013  F00A         	movff	pad@buf,fputs@s
  5499   0053C6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5500   0053CA  C011  F00C         	movff	pad@fp,fputs@fp
  5501   0053CE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5502   0053D2  EC77  F02F         	call	_fputs	;wreg free
  5503   0053D6  0012               	return		;funcret
  5504   0053D8                     __end_of_pad:
  5505                           	callstack 0
  5506                           
  5507 ;; *************** function _fputs *****************
  5508 ;; Defined at:
  5509 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5512 ;;		 -> dbuf(80), 
  5513 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5514 ;;		 -> sprintf@f(11), 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  i               2   14[COMRAM] int 
  5517 ;;  c               1   13[COMRAM] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  2    9[COMRAM] int 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;Total ram usage:        7 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 3
  5534 ;; This function calls:
  5535 ;;		_fputc
  5536 ;; This function is called by:
  5537 ;;		_pad
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text15
  5542   005EEE                     __ptext15:
  5543                           	callstack 0
  5544   005EEE                     _fputs:
  5545                           	callstack 22
  5546   005EEE  0E00               	movlw	0
  5547   005EF0  6E10               	movwf	(fputs@i+1)^0,c
  5548   005EF2  0E00               	movlw	0
  5549   005EF4  6E0F               	movwf	fputs@i^0,c
  5550   005EF6  EF88  F02F         	goto	l4120
  5551   005EFA                     l4116:
  5552   005EFA  C00E  F001         	movff	fputs@c,fputc@c
  5553   005EFE  6A02               	clrf	(fputc@c+1)^0,c
  5554   005F00  C00C  F003         	movff	fputs@fp,fputc@fp
  5555   005F04  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5556   005F08  EC2B  F026         	call	_fputc	;wreg free
  5557   005F0C  4A0F               	infsnz	fputs@i^0,f,c
  5558   005F0E  2A10               	incf	(fputs@i+1)^0,f,c
  5559   005F10                     l4120:
  5560   005F10  500F               	movf	fputs@i^0,w,c
  5561   005F12  240A               	addwf	fputs@s^0,w,c
  5562   005F14  6ED9               	movwf	fsr2l,c
  5563   005F16  5010               	movf	(fputs@i+1)^0,w,c
  5564   005F18  200B               	addwfc	(fputs@s+1)^0,w,c
  5565   005F1A  6EDA               	movwf	fsr2h,c
  5566   005F1C  50DF               	movf	indf2,w,c
  5567   005F1E  6E0E               	movwf	fputs@c^0,c
  5568   005F20  500E               	movf	fputs@c^0,w,c
  5569   005F22  A4D8               	btfss	status,2,c
  5570   005F24  EF96  F02F         	goto	u3401
  5571   005F28  EF98  F02F         	goto	u3400
  5572   005F2C                     u3401:
  5573   005F2C  EF7D  F02F         	goto	l4116
  5574   005F30                     u3400:
  5575   005F30  0012               	return		;funcret
  5576   005F32                     __end_of_fputs:
  5577                           	callstack 0
  5578                           
  5579 ;; *************** function _fputc *****************
  5580 ;; Defined at:
  5581 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  c               2    0[COMRAM] int 
  5584 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5585 ;;		 -> sprintf@f(11), 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2    0[COMRAM] int 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;Total ram usage:        9 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 2
  5604 ;; This function calls:
  5605 ;;		_putch
  5606 ;; This function is called by:
  5607 ;;		_pad
  5608 ;;		_vfpfcnvrt
  5609 ;;		_fputs
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text16
  5614   004C56                     __ptext16:
  5615                           	callstack 0
  5616   004C56                     _fputc:
  5617                           	callstack 25
  5618   004C56  5003               	movf	fputc@fp^0,w,c
  5619   004C58  1004               	iorwf	(fputc@fp+1)^0,w,c
  5620   004C5A  B4D8               	btfsc	status,2,c
  5621   004C5C  EF32  F026         	goto	u2951
  5622   004C60  EF34  F026         	goto	u2950
  5623   004C64                     u2951:
  5624   004C64  EF3D  F026         	goto	l3886
  5625   004C68                     u2950:
  5626   004C68  5003               	movf	fputc@fp^0,w,c
  5627   004C6A  1004               	iorwf	(fputc@fp+1)^0,w,c
  5628   004C6C  A4D8               	btfss	status,2,c
  5629   004C6E  EF3B  F026         	goto	u2961
  5630   004C72  EF3D  F026         	goto	u2960
  5631   004C76                     u2961:
  5632   004C76  EF42  F026         	goto	l3888
  5633   004C7A                     u2960:
  5634   004C7A                     l3886:
  5635   004C7A  5001               	movf	fputc@c^0,w,c
  5636   004C7C  EC33  F031         	call	_putch
  5637   004C80  EF8F  F026         	goto	l1629
  5638   004C84                     l3888:
  5639   004C84  EE20 F009          	lfsr	2,9
  5640   004C88  5003               	movf	fputc@fp^0,w,c
  5641   004C8A  26D9               	addwf	fsr2l,f,c
  5642   004C8C  5004               	movf	(fputc@fp+1)^0,w,c
  5643   004C8E  22DA               	addwfc	fsr2h,f,c
  5644   004C90  50DE               	movf	postinc2,w,c
  5645   004C92  10DE               	iorwf	postinc2,w,c
  5646   004C94  B4D8               	btfsc	status,2,c
  5647   004C96  EF4F  F026         	goto	u2971
  5648   004C9A  EF51  F026         	goto	u2970
  5649   004C9E                     u2971:
  5650   004C9E  EF6C  F026         	goto	l3892
  5651   004CA2                     u2970:
  5652   004CA2  EE20 F009          	lfsr	2,9
  5653   004CA6  5003               	movf	fputc@fp^0,w,c
  5654   004CA8  26D9               	addwf	fsr2l,f,c
  5655   004CAA  5004               	movf	(fputc@fp+1)^0,w,c
  5656   004CAC  22DA               	addwfc	fsr2h,f,c
  5657   004CAE  EE10 F003          	lfsr	1,3
  5658   004CB2  5003               	movf	fputc@fp^0,w,c
  5659   004CB4  26E1               	addwf	fsr1l,f,c
  5660   004CB6  5004               	movf	(fputc@fp+1)^0,w,c
  5661   004CB8  22E2               	addwfc	fsr1h,f,c
  5662   004CBA  50DE               	movf	postinc2,w,c
  5663   004CBC  5CE6               	subwf	postinc1,w,c
  5664   004CBE  50E6               	movf	postinc1,w,c
  5665   004CC0  0A80               	xorlw	128
  5666   004CC2  6E09               	movwf	(??_fputc+4)^0,c
  5667   004CC4  50DE               	movf	postinc2,w,c
  5668   004CC6  0A80               	xorlw	128
  5669   004CC8  5809               	subwfb	(??_fputc+4)^0,w,c
  5670   004CCA  B0D8               	btfsc	status,0,c
  5671   004CCC  EF6A  F026         	goto	u2981
  5672   004CD0  EF6C  F026         	goto	u2980
  5673   004CD4                     u2981:
  5674   004CD4  EF8F  F026         	goto	l1629
  5675   004CD8                     u2980:
  5676   004CD8                     l3892:
  5677   004CD8  EE20 F003          	lfsr	2,3
  5678   004CDC  5003               	movf	fputc@fp^0,w,c
  5679   004CDE  26D9               	addwf	fsr2l,f,c
  5680   004CE0  5004               	movf	(fputc@fp+1)^0,w,c
  5681   004CE2  22DA               	addwfc	fsr2h,f,c
  5682   004CE4  CFDE F005          	movff	postinc2,??_fputc
  5683   004CE8  CFDD F006          	movff	postdec2,??_fputc+1
  5684   004CEC  C003  FFD9         	movff	fputc@fp,fsr2l
  5685   004CF0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5686   004CF4  CFDE F007          	movff	postinc2,??_fputc+2
  5687   004CF8  CFDD F008          	movff	postdec2,??_fputc+3
  5688   004CFC  5005               	movf	??_fputc^0,w,c
  5689   004CFE  2407               	addwf	(??_fputc+2)^0,w,c
  5690   004D00  6ED9               	movwf	fsr2l,c
  5691   004D02  5006               	movf	(??_fputc+1)^0,w,c
  5692   004D04  2008               	addwfc	(??_fputc+3)^0,w,c
  5693   004D06  6EDA               	movwf	fsr2h,c
  5694   004D08  C001  FFDF         	movff	fputc@c,indf2
  5695   004D0C  EE20 F003          	lfsr	2,3
  5696   004D10  5003               	movf	fputc@fp^0,w,c
  5697   004D12  26D9               	addwf	fsr2l,f,c
  5698   004D14  5004               	movf	(fputc@fp+1)^0,w,c
  5699   004D16  22DA               	addwfc	fsr2h,f,c
  5700   004D18  2ADE               	incf	postinc2,f,c
  5701   004D1A  0E00               	movlw	0
  5702   004D1C  22DD               	addwfc	postdec2,f,c
  5703   004D1E                     l1629:
  5704   004D1E  0012               	return		;funcret
  5705   004D20                     __end_of_fputc:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _putch *****************
  5709 ;; Defined at:
  5710 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  c               1    wreg     unsigned char 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  c               1    0[COMRAM] unsigned char 
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		wreg
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used: 1
  5730 ;; Hardware stack levels required when called: 1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_fputc
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text17
  5739   006266                     __ptext17:
  5740                           	callstack 0
  5741   006266                     _putch:
  5742                           	callstack 25
  5743   006266  0012               	return		;funcret
  5744   006268                     __end_of_putch:
  5745                           	callstack 0
  5746                           
  5747 ;; *************** function _abs *****************
  5748 ;; Defined at:
  5749 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  a               2   18[COMRAM] int 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;		None
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  2   18[COMRAM] int 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;Total ram usage:        4 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; Hardware stack levels required when called: 1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_dtoa
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text18
  5778   005F74                     __ptext18:
  5779                           	callstack 0
  5780   005F74                     _abs:
  5781                           	callstack 25
  5782   005F74  BE14               	btfsc	(abs@a+1)^0,7,c
  5783   005F76  EFC7  F02F         	goto	u4250
  5784   005F7A  5014               	movf	(abs@a+1)^0,w,c
  5785   005F7C  E106               	bnz	u4251
  5786   005F7E  0413               	decf	abs@a^0,w,c
  5787   005F80  B0D8               	btfsc	status,0,c
  5788   005F82  EFC5  F02F         	goto	u4251
  5789   005F86  EFC7  F02F         	goto	u4250
  5790   005F8A                     u4251:
  5791   005F8A  EFD5  F02F         	goto	l1588
  5792   005F8E                     u4250:
  5793   005F8E  C013  F015         	movff	abs@a,??_abs
  5794   005F92  C014  F016         	movff	abs@a+1,??_abs+1
  5795   005F96  1E15               	comf	??_abs^0,f,c
  5796   005F98  1E16               	comf	(??_abs+1)^0,f,c
  5797   005F9A  4A15               	infsnz	??_abs^0,f,c
  5798   005F9C  2A16               	incf	(??_abs+1)^0,f,c
  5799   005F9E  C015  F013         	movff	??_abs,?_abs
  5800   005FA2  C016  F014         	movff	??_abs+1,?_abs+1
  5801   005FA6  EFD9  F02F         	goto	l1591
  5802   005FAA                     l1588:
  5803   005FAA  C013  F013         	movff	abs@a,?_abs
  5804   005FAE  C014  F014         	movff	abs@a+1,?_abs+1
  5805   005FB2                     l1591:
  5806   005FB2  0012               	return		;funcret
  5807   005FB4                     __end_of_abs:
  5808                           	callstack 0
  5809                           
  5810 ;; *************** function ___aomod *****************
  5811 ;; Defined at:
  5812 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  dividend        8    0[COMRAM] long long 
  5815 ;;  divisor         8    8[COMRAM] long long 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  sign            1   17[COMRAM] unsigned char 
  5818 ;;  counter         1   16[COMRAM] unsigned char 
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  8    0[COMRAM] long long 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5828 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5831 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;Total ram usage:       18 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; Hardware stack levels required when called: 1
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_dtoa
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text19
  5843   0047EA                     __ptext19:
  5844                           	callstack 0
  5845   0047EA                     ___aomod:
  5846                           	callstack 25
  5847   0047EA  0E00               	movlw	0
  5848   0047EC  6E12               	movwf	___aomod@sign^0,c
  5849   0047EE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5850   0047F0  EFFE  F023         	goto	u3590
  5851   0047F4  EFFC  F023         	goto	u3591
  5852   0047F8                     u3591:
  5853   0047F8  EF10  F024         	goto	l4250
  5854   0047FC                     u3590:
  5855   0047FC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5856   0047FE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5857   004800  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5858   004802  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5859   004804  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5860   004806  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5861   004808  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5862   00480A  6C01               	negf	___aomod@dividend^0,c
  5863   00480C  0E00               	movlw	0
  5864   00480E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5865   004810  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5866   004812  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5867   004814  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5868   004816  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5869   004818  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5870   00481A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5871   00481C  0E01               	movlw	1
  5872   00481E  6E12               	movwf	___aomod@sign^0,c
  5873   004820                     l4250:
  5874   004820  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5875   004822  EF17  F024         	goto	u3600
  5876   004826  EF15  F024         	goto	u3601
  5877   00482A                     u3601:
  5878   00482A  EF27  F024         	goto	l4254
  5879   00482E                     u3600:
  5880   00482E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5881   004830  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5882   004832  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5883   004834  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5884   004836  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5885   004838  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5886   00483A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5887   00483C  6C09               	negf	___aomod@divisor^0,c
  5888   00483E  0E00               	movlw	0
  5889   004840  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5890   004842  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5891   004844  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5892   004846  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5893   004848  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5894   00484A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5895   00484C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5896   00484E                     l4254:
  5897   00484E  5009               	movf	___aomod@divisor^0,w,c
  5898   004850  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5899   004852  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5900   004854  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5901   004856  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5902   004858  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5903   00485A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5904   00485C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5905   00485E  B4D8               	btfsc	status,2,c
  5906   004860  EF34  F024         	goto	u3611
  5907   004864  EF36  F024         	goto	u3610
  5908   004868                     u3611:
  5909   004868  EF7E  F024         	goto	l4270
  5910   00486C                     u3610:
  5911   00486C  0E01               	movlw	1
  5912   00486E  6E11               	movwf	___aomod@counter^0,c
  5913   004870  EF44  F024         	goto	l4260
  5914   004874                     l4258:
  5915   004874  90D8               	bcf	status,0,c
  5916   004876  3609               	rlcf	___aomod@divisor^0,f,c
  5917   004878  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5918   00487A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5919   00487C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5920   00487E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5921   004880  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5922   004882  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5923   004884  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5924   004886  2A11               	incf	___aomod@counter^0,f,c
  5925   004888                     l4260:
  5926   004888  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5927   00488A  EF49  F024         	goto	u3621
  5928   00488E  EF4B  F024         	goto	u3620
  5929   004892                     u3621:
  5930   004892  EF3A  F024         	goto	l4258
  5931   004896                     u3620:
  5932   004896                     l4262:
  5933   004896  5009               	movf	___aomod@divisor^0,w,c
  5934   004898  5C01               	subwf	___aomod@dividend^0,w,c
  5935   00489A  500A               	movf	(___aomod@divisor+1)^0,w,c
  5936   00489C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5937   00489E  500B               	movf	(___aomod@divisor+2)^0,w,c
  5938   0048A0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5939   0048A2  500C               	movf	(___aomod@divisor+3)^0,w,c
  5940   0048A4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5941   0048A6  500D               	movf	(___aomod@divisor+4)^0,w,c
  5942   0048A8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5943   0048AA  500E               	movf	(___aomod@divisor+5)^0,w,c
  5944   0048AC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5945   0048AE  500F               	movf	(___aomod@divisor+6)^0,w,c
  5946   0048B0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5947   0048B2  5010               	movf	(___aomod@divisor+7)^0,w,c
  5948   0048B4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5949   0048B6  A0D8               	btfss	status,0,c
  5950   0048B8  EF60  F024         	goto	u3631
  5951   0048BC  EF62  F024         	goto	u3630
  5952   0048C0                     u3631:
  5953   0048C0  EF72  F024         	goto	l4266
  5954   0048C4                     u3630:
  5955   0048C4  5009               	movf	___aomod@divisor^0,w,c
  5956   0048C6  5E01               	subwf	___aomod@dividend^0,f,c
  5957   0048C8  500A               	movf	(___aomod@divisor+1)^0,w,c
  5958   0048CA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5959   0048CC  500B               	movf	(___aomod@divisor+2)^0,w,c
  5960   0048CE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5961   0048D0  500C               	movf	(___aomod@divisor+3)^0,w,c
  5962   0048D2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5963   0048D4  500D               	movf	(___aomod@divisor+4)^0,w,c
  5964   0048D6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5965   0048D8  500E               	movf	(___aomod@divisor+5)^0,w,c
  5966   0048DA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5967   0048DC  500F               	movf	(___aomod@divisor+6)^0,w,c
  5968   0048DE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5969   0048E0  5010               	movf	(___aomod@divisor+7)^0,w,c
  5970   0048E2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5971   0048E4                     l4266:
  5972   0048E4  90D8               	bcf	status,0,c
  5973   0048E6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5974   0048E8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5975   0048EA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5976   0048EC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5977   0048EE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5978   0048F0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5979   0048F2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5980   0048F4  3209               	rrcf	___aomod@divisor^0,f,c
  5981   0048F6  2E11               	decfsz	___aomod@counter^0,f,c
  5982   0048F8  EF4B  F024         	goto	l4262
  5983   0048FC                     l4270:
  5984   0048FC  5012               	movf	___aomod@sign^0,w,c
  5985   0048FE  B4D8               	btfsc	status,2,c
  5986   004900  EF84  F024         	goto	u3641
  5987   004904  EF86  F024         	goto	u3640
  5988   004908                     u3641:
  5989   004908  EF96  F024         	goto	l4274
  5990   00490C                     u3640:
  5991   00490C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5992   00490E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5993   004910  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5994   004912  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5995   004914  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5996   004916  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5997   004918  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5998   00491A  6C01               	negf	___aomod@dividend^0,c
  5999   00491C  0E00               	movlw	0
  6000   00491E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6001   004920  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6002   004922  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6003   004924  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6004   004926  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6005   004928  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6006   00492A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6007   00492C                     l4274:
  6008   00492C  C001  F001         	movff	___aomod@dividend,?___aomod
  6009   004930  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6010   004934  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6011   004938  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6012   00493C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6013   004940  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6014   004944  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6015   004948  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6016   00494C  0012               	return		;funcret
  6017   00494E                     __end_of___aomod:
  6018                           	callstack 0
  6019                           
  6020 ;; *************** function ___aodiv *****************
  6021 ;; Defined at:
  6022 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  dividend        8    0[COMRAM] long long 
  6025 ;;  divisor         8    8[COMRAM] long long 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  quotient        8   18[COMRAM] long long 
  6028 ;;  sign            1   17[COMRAM] unsigned char 
  6029 ;;  counter         1   16[COMRAM] unsigned char 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  8    0[COMRAM] long long 
  6032 ;; Registers used:
  6033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6039 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6040 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6042 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6043 ;;Total ram usage:       26 bytes
  6044 ;; Hardware stack levels used: 1
  6045 ;; Hardware stack levels required when called: 1
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		_dtoa
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text20
  6054   0044F6                     __ptext20:
  6055                           	callstack 0
  6056   0044F6                     ___aodiv:
  6057                           	callstack 25
  6058   0044F6  0E00               	movlw	0
  6059   0044F8  6E12               	movwf	___aodiv@sign^0,c
  6060   0044FA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6061   0044FC  EF84  F022         	goto	u3520
  6062   004500  EF82  F022         	goto	u3521
  6063   004504                     u3521:
  6064   004504  EF96  F022         	goto	l4206
  6065   004508                     u3520:
  6066   004508  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6067   00450A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6068   00450C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6069   00450E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6070   004510  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6071   004512  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6072   004514  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6073   004516  6C09               	negf	___aodiv@divisor^0,c
  6074   004518  0E00               	movlw	0
  6075   00451A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6076   00451C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6077   00451E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6078   004520  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6079   004522  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6080   004524  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6081   004526  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6082   004528  0E01               	movlw	1
  6083   00452A  6E12               	movwf	___aodiv@sign^0,c
  6084   00452C                     l4206:
  6085   00452C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6086   00452E  EF9D  F022         	goto	u3530
  6087   004532  EF9B  F022         	goto	u3531
  6088   004536                     u3531:
  6089   004536  EFAF  F022         	goto	l4212
  6090   00453A                     u3530:
  6091   00453A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6092   00453C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6093   00453E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6094   004540  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6095   004542  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6096   004544  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6097   004546  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6098   004548  6C01               	negf	___aodiv@dividend^0,c
  6099   00454A  0E00               	movlw	0
  6100   00454C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6101   00454E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6102   004550  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6103   004552  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6104   004554  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6105   004556  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6106   004558  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6107   00455A  0E01               	movlw	1
  6108   00455C  1A12               	xorwf	___aodiv@sign^0,f,c
  6109   00455E                     l4212:
  6110   00455E  EE20  F013         	lfsr	2,___aodiv@quotient
  6111   004562  0E07               	movlw	7
  6112   004564                     u3541:
  6113   004564  6ADE               	clrf	postinc2,c
  6114   004566  06E8               	decf	wreg,f,c
  6115   004568  E2FD               	bc	u3541
  6116   00456A  5009               	movf	___aodiv@divisor^0,w,c
  6117   00456C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6118   00456E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6119   004570  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6120   004572  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6121   004574  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6122   004576  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6123   004578  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6124   00457A  B4D8               	btfsc	status,2,c
  6125   00457C  EFC2  F022         	goto	u3551
  6126   004580  EFC4  F022         	goto	u3550
  6127   004584                     u3551:
  6128   004584  EF16  F023         	goto	l4234
  6129   004588                     u3550:
  6130   004588  0E01               	movlw	1
  6131   00458A  6E11               	movwf	___aodiv@counter^0,c
  6132   00458C  EFD2  F022         	goto	l4220
  6133   004590                     l4218:
  6134   004590  90D8               	bcf	status,0,c
  6135   004592  3609               	rlcf	___aodiv@divisor^0,f,c
  6136   004594  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6137   004596  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6138   004598  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6139   00459A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6140   00459C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6141   00459E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6142   0045A0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6143   0045A2  2A11               	incf	___aodiv@counter^0,f,c
  6144   0045A4                     l4220:
  6145   0045A4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6146   0045A6  EFD7  F022         	goto	u3561
  6147   0045AA  EFD9  F022         	goto	u3560
  6148   0045AE                     u3561:
  6149   0045AE  EFC8  F022         	goto	l4218
  6150   0045B2                     u3560:
  6151   0045B2                     l4222:
  6152   0045B2  90D8               	bcf	status,0,c
  6153   0045B4  3613               	rlcf	___aodiv@quotient^0,f,c
  6154   0045B6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6155   0045B8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6156   0045BA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6157   0045BC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6158   0045BE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6159   0045C0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6160   0045C2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6161   0045C4  5009               	movf	___aodiv@divisor^0,w,c
  6162   0045C6  5C01               	subwf	___aodiv@dividend^0,w,c
  6163   0045C8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6164   0045CA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6165   0045CC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6166   0045CE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6167   0045D0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6168   0045D2  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6169   0045D4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6170   0045D6  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6171   0045D8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6172   0045DA  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6173   0045DC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6174   0045DE  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6175   0045E0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6176   0045E2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6177   0045E4  A0D8               	btfss	status,0,c
  6178   0045E6  EFF7  F022         	goto	u3571
  6179   0045EA  EFF9  F022         	goto	u3570
  6180   0045EE                     u3571:
  6181   0045EE  EF0A  F023         	goto	l4230
  6182   0045F2                     u3570:
  6183   0045F2  5009               	movf	___aodiv@divisor^0,w,c
  6184   0045F4  5E01               	subwf	___aodiv@dividend^0,f,c
  6185   0045F6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6186   0045F8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6187   0045FA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6188   0045FC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6189   0045FE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6190   004600  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6191   004602  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6192   004604  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6193   004606  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6194   004608  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6195   00460A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6196   00460C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6197   00460E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6198   004610  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6199   004612  8013               	bsf	___aodiv@quotient^0,0,c
  6200   004614                     l4230:
  6201   004614  90D8               	bcf	status,0,c
  6202   004616  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6203   004618  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6204   00461A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6205   00461C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6206   00461E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6207   004620  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6208   004622  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6209   004624  3209               	rrcf	___aodiv@divisor^0,f,c
  6210   004626  2E11               	decfsz	___aodiv@counter^0,f,c
  6211   004628  EFD9  F022         	goto	l4222
  6212   00462C                     l4234:
  6213   00462C  5012               	movf	___aodiv@sign^0,w,c
  6214   00462E  B4D8               	btfsc	status,2,c
  6215   004630  EF1C  F023         	goto	u3581
  6216   004634  EF1E  F023         	goto	u3580
  6217   004638                     u3581:
  6218   004638  EF2E  F023         	goto	l4238
  6219   00463C                     u3580:
  6220   00463C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6221   00463E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6222   004640  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6223   004642  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6224   004644  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6225   004646  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6226   004648  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6227   00464A  6C13               	negf	___aodiv@quotient^0,c
  6228   00464C  0E00               	movlw	0
  6229   00464E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6230   004650  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6231   004652  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6232   004654  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6233   004656  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6234   004658  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6235   00465A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6236   00465C                     l4238:
  6237   00465C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6238   004660  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6239   004664  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6240   004668  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6241   00466C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6242   004670  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6243   004674  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6244   004678  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6245   00467C  0012               	return		;funcret
  6246   00467E                     __end_of___aodiv:
  6247                           	callstack 0
  6248                           
  6249 ;; *************** function _sendStringSerial4 *****************
  6250 ;; Defined at:
  6251 ;;		line 33 in file "serial.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  string          2    1[COMRAM] PTR unsigned char 
  6254 ;;		 -> main@buf(100), 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  1    wreg      void 
  6259 ;; Registers used:
  6260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6270 ;;Total ram usage:        2 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; Hardware stack levels required when called: 2
  6273 ;; This function calls:
  6274 ;;		_sendCharSerial4
  6275 ;; This function is called by:
  6276 ;;		_main
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text21
  6281   0060D6                     __ptext21:
  6282                           	callstack 0
  6283   0060D6                     _sendStringSerial4:
  6284                           	callstack 28
  6285   0060D6                     
  6286                           ;serial.c: 34:     while (*string!=0){
  6287   0060D6  EF76  F030         	goto	l5590
  6288   0060DA                     l5586:
  6289                           
  6290                           ;serial.c: 35:         sendCharSerial4(*string++);
  6291   0060DA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6292   0060DE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6293   0060E2  50DF               	movf	indf2,w,c
  6294   0060E4  EC01  F031         	call	_sendCharSerial4
  6295   0060E8  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6296   0060EA  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6297   0060EC                     l5590:
  6298                           
  6299                           ;serial.c: 34:     while (*string!=0){
  6300   0060EC  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6301   0060F0  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6302   0060F4  50DF               	movf	indf2,w,c
  6303   0060F6  A4D8               	btfss	status,2,c
  6304   0060F8  EF80  F030         	goto	u5481
  6305   0060FC  EF82  F030         	goto	u5480
  6306   006100                     u5481:
  6307   006100  EF6D  F030         	goto	l5586
  6308   006104                     u5480:
  6309   006104  0012               	return		;funcret
  6310   006106                     __end_of_sendStringSerial4:
  6311                           	callstack 0
  6312                           
  6313 ;; *************** function _sendCharSerial4 *****************
  6314 ;; Defined at:
  6315 ;;		line 26 in file "serial.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  charToSend      1    wreg     unsigned char 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  charToSend      1    0[COMRAM] unsigned char 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;Total ram usage:        1 bytes
  6334 ;; Hardware stack levels used: 1
  6335 ;; Hardware stack levels required when called: 1
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_sendStringSerial4
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text22
  6344   006202                     __ptext22:
  6345                           	callstack 0
  6346   006202                     _sendCharSerial4:
  6347                           	callstack 28
  6348                           
  6349                           ;incstack = 0
  6350                           ;sendCharSerial4@charToSend stored from wreg
  6351   006202  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6352   006204                     l197:
  6353   006204  010E               	movlb	14	; () banked
  6354   006206  A537               	btfss	55,2,b	;volatile
  6355   006208  EF08  F031         	goto	u4991
  6356   00620C  EF0A  F031         	goto	u4990
  6357   006210                     u4991:
  6358   006210  EF02  F031         	goto	l197
  6359   006214                     u4990:
  6360   006214                     
  6361                           ; BSR set to: 14
  6362                           ;serial.c: 28:     TX4REG = charToSend;
  6363   006214  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6364   006218                     
  6365                           ; BSR set to: 14
  6366   006218  0012               	return		;funcret
  6367   00621A                     __end_of_sendCharSerial4:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _readColours *****************
  6371 ;; Defined at:
  6372 ;;		line 102 in file "color.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  vals            2   11[COMRAM] PTR struct RGB
  6375 ;;		 -> vals(8), 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  1    wreg      void 
  6380 ;; Registers used:
  6381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6391 ;;Total ram usage:        2 bytes
  6392 ;; Hardware stack levels used: 1
  6393 ;; Hardware stack levels required when called: 4
  6394 ;; This function calls:
  6395 ;;		_color_read_Blue
  6396 ;;		_color_read_Green
  6397 ;;		_color_read_Red
  6398 ;;		_color_read_lum
  6399 ;; This function is called by:
  6400 ;;		_main
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text23
  6405   005732                     __ptext23:
  6406                           	callstack 0
  6407   005732                     _readColours:
  6408                           	callstack 26
  6409   005732                     
  6410                           ;color.c: 104:     vals ->R = color_read_Red();
  6411   005732  EC44  F02E         	call	_color_read_Red	;wreg free
  6412   005736  C00C  FFD9         	movff	readColours@vals,fsr2l
  6413   00573A  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6414   00573E  C005  FFDE         	movff	?_color_read_Red,postinc2
  6415   005742  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6416                           
  6417                           ;color.c: 105:     vals ->B = color_read_Blue();
  6418   005746  EC94  F02E         	call	_color_read_Blue	;wreg free
  6419   00574A  EE20 F004          	lfsr	2,4
  6420   00574E  500C               	movf	readColours@vals^0,w,c
  6421   005750  26D9               	addwf	fsr2l,f,c
  6422   005752  500D               	movf	(readColours@vals+1)^0,w,c
  6423   005754  22DA               	addwfc	fsr2h,f,c
  6424   005756  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6425   00575A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6426                           
  6427                           ;color.c: 106:     vals ->G = color_read_Green();
  6428   00575E  EC6C  F02E         	call	_color_read_Green	;wreg free
  6429   005762  EE20 F002          	lfsr	2,2
  6430   005766  500C               	movf	readColours@vals^0,w,c
  6431   005768  26D9               	addwf	fsr2l,f,c
  6432   00576A  500D               	movf	(readColours@vals+1)^0,w,c
  6433   00576C  22DA               	addwfc	fsr2h,f,c
  6434   00576E  C005  FFDE         	movff	?_color_read_Green,postinc2
  6435   005772  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6436                           
  6437                           ;color.c: 107:     vals ->L = color_read_lum();
  6438   005776  EC1C  F02E         	call	_color_read_lum	;wreg free
  6439   00577A  EE20 F006          	lfsr	2,6
  6440   00577E  500C               	movf	readColours@vals^0,w,c
  6441   005780  26D9               	addwf	fsr2l,f,c
  6442   005782  500D               	movf	(readColours@vals+1)^0,w,c
  6443   005784  22DA               	addwfc	fsr2h,f,c
  6444   005786  C005  FFDE         	movff	?_color_read_lum,postinc2
  6445   00578A  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6446   00578E  0012               	return		;funcret
  6447   005790                     __end_of_readColours:
  6448                           	callstack 0
  6449                           
  6450 ;; *************** function _color_read_lum *****************
  6451 ;; Defined at:
  6452 ;;		line 46 in file "color.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  tmp             2    9[COMRAM] unsigned int 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  2    4[COMRAM] unsigned int 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6469 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;Total ram usage:        7 bytes
  6471 ;; Hardware stack levels used: 1
  6472 ;; Hardware stack levels required when called: 3
  6473 ;; This function calls:
  6474 ;;		_I2C_2_Master_Read
  6475 ;;		_I2C_2_Master_RepStart
  6476 ;;		_I2C_2_Master_Start
  6477 ;;		_I2C_2_Master_Stop
  6478 ;;		_I2C_2_Master_Write
  6479 ;; This function is called by:
  6480 ;;		_readColours
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text24
  6485   005C38                     __ptext24:
  6486                           	callstack 0
  6487   005C38                     _color_read_lum:
  6488                           	callstack 26
  6489   005C38                     
  6490                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  6491   005C38  EC29  F031         	call	_I2C_2_Master_Start	;wreg free
  6492                           
  6493                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  6494   005C3C  0E52               	movlw	82
  6495   005C3E  EC0D  F031         	call	_I2C_2_Master_Write
  6496                           
  6497                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x14);
  6498   005C42  0EB4               	movlw	180
  6499   005C44  EC0D  F031         	call	_I2C_2_Master_Write
  6500                           
  6501                           ;color.c: 52:  I2C_2_Master_RepStart();
  6502   005C48  EC1F  F031         	call	_I2C_2_Master_RepStart	;wreg free
  6503                           
  6504                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  6505   005C4C  0E53               	movlw	83
  6506   005C4E  EC0D  F031         	call	_I2C_2_Master_Write
  6507                           
  6508                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  6509   005C52  0E01               	movlw	1
  6510   005C54  EC99  F02F         	call	_I2C_2_Master_Read
  6511   005C58  6E07               	movwf	??_color_read_lum^0,c
  6512   005C5A  5007               	movf	??_color_read_lum^0,w,c
  6513   005C5C  6E0A               	movwf	color_read_lum@tmp^0,c
  6514   005C5E  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6515                           
  6516                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6517   005C60  0E00               	movlw	0
  6518   005C62  EC99  F02F         	call	_I2C_2_Master_Read
  6519   005C66  6E07               	movwf	??_color_read_lum^0,c
  6520   005C68  5007               	movf	??_color_read_lum^0,w,c
  6521   005C6A  6E09               	movwf	(??_color_read_lum+2)^0,c
  6522   005C6C  6A08               	clrf	(??_color_read_lum+1)^0,c
  6523   005C6E  500A               	movf	color_read_lum@tmp^0,w,c
  6524   005C70  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6525   005C72  6E0A               	movwf	color_read_lum@tmp^0,c
  6526   005C74  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6527   005C76  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6528   005C78  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6529                           
  6530                           ;color.c: 56:  I2C_2_Master_Stop();
  6531   005C7A  EC24  F031         	call	_I2C_2_Master_Stop	;wreg free
  6532   005C7E                     
  6533                           ;color.c: 57:  return tmp;
  6534   005C7E  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6535   005C82  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6536   005C86  0012               	return		;funcret
  6537   005C88                     __end_of_color_read_lum:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function _color_read_Red *****************
  6541 ;; Defined at:
  6542 ;;		line 60 in file "color.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  tmp             2    9[COMRAM] unsigned int 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  2    4[COMRAM] unsigned int 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2, status,0, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;Total ram usage:        7 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 3
  6563 ;; This function calls:
  6564 ;;		_I2C_2_Master_Read
  6565 ;;		_I2C_2_Master_RepStart
  6566 ;;		_I2C_2_Master_Start
  6567 ;;		_I2C_2_Master_Stop
  6568 ;;		_I2C_2_Master_Write
  6569 ;; This function is called by:
  6570 ;;		_readColours
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text25
  6575   005C88                     __ptext25:
  6576                           	callstack 0
  6577   005C88                     _color_read_Red:
  6578                           	callstack 26
  6579   005C88                     
  6580                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  6581   005C88  EC29  F031         	call	_I2C_2_Master_Start	;wreg free
  6582                           
  6583                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  6584   005C8C  0E52               	movlw	82
  6585   005C8E  EC0D  F031         	call	_I2C_2_Master_Write
  6586                           
  6587                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x16);
  6588   005C92  0EB6               	movlw	182
  6589   005C94  EC0D  F031         	call	_I2C_2_Master_Write
  6590                           
  6591                           ;color.c: 66:  I2C_2_Master_RepStart();
  6592   005C98  EC1F  F031         	call	_I2C_2_Master_RepStart	;wreg free
  6593                           
  6594                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  6595   005C9C  0E53               	movlw	83
  6596   005C9E  EC0D  F031         	call	_I2C_2_Master_Write
  6597                           
  6598                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  6599   005CA2  0E01               	movlw	1
  6600   005CA4  EC99  F02F         	call	_I2C_2_Master_Read
  6601   005CA8  6E07               	movwf	??_color_read_Red^0,c
  6602   005CAA  5007               	movf	??_color_read_Red^0,w,c
  6603   005CAC  6E0A               	movwf	color_read_Red@tmp^0,c
  6604   005CAE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6605                           
  6606                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6607   005CB0  0E00               	movlw	0
  6608   005CB2  EC99  F02F         	call	_I2C_2_Master_Read
  6609   005CB6  6E07               	movwf	??_color_read_Red^0,c
  6610   005CB8  5007               	movf	??_color_read_Red^0,w,c
  6611   005CBA  6E09               	movwf	(??_color_read_Red+2)^0,c
  6612   005CBC  6A08               	clrf	(??_color_read_Red+1)^0,c
  6613   005CBE  500A               	movf	color_read_Red@tmp^0,w,c
  6614   005CC0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6615   005CC2  6E0A               	movwf	color_read_Red@tmp^0,c
  6616   005CC4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6617   005CC6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6618   005CC8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6619                           
  6620                           ;color.c: 70:  I2C_2_Master_Stop();
  6621   005CCA  EC24  F031         	call	_I2C_2_Master_Stop	;wreg free
  6622   005CCE                     
  6623                           ;color.c: 71:  return tmp;
  6624   005CCE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6625   005CD2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6626   005CD6  0012               	return		;funcret
  6627   005CD8                     __end_of_color_read_Red:
  6628                           	callstack 0
  6629                           
  6630 ;; *************** function _color_read_Green *****************
  6631 ;; Defined at:
  6632 ;;		line 73 in file "color.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  tmp             2    9[COMRAM] unsigned int 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  2    4[COMRAM] unsigned int 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;Total ram usage:        7 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; Hardware stack levels required when called: 3
  6653 ;; This function calls:
  6654 ;;		_I2C_2_Master_Read
  6655 ;;		_I2C_2_Master_RepStart
  6656 ;;		_I2C_2_Master_Start
  6657 ;;		_I2C_2_Master_Stop
  6658 ;;		_I2C_2_Master_Write
  6659 ;; This function is called by:
  6660 ;;		_readColours
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text26
  6665   005CD8                     __ptext26:
  6666                           	callstack 0
  6667   005CD8                     _color_read_Green:
  6668                           	callstack 26
  6669   005CD8                     
  6670                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  6671   005CD8  EC29  F031         	call	_I2C_2_Master_Start	;wreg free
  6672                           
  6673                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  6674   005CDC  0E52               	movlw	82
  6675   005CDE  EC0D  F031         	call	_I2C_2_Master_Write
  6676                           
  6677                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x18);
  6678   005CE2  0EB8               	movlw	184
  6679   005CE4  EC0D  F031         	call	_I2C_2_Master_Write
  6680                           
  6681                           ;color.c: 79:  I2C_2_Master_RepStart();
  6682   005CE8  EC1F  F031         	call	_I2C_2_Master_RepStart	;wreg free
  6683                           
  6684                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  6685   005CEC  0E53               	movlw	83
  6686   005CEE  EC0D  F031         	call	_I2C_2_Master_Write
  6687                           
  6688                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  6689   005CF2  0E01               	movlw	1
  6690   005CF4  EC99  F02F         	call	_I2C_2_Master_Read
  6691   005CF8  6E07               	movwf	??_color_read_Green^0,c
  6692   005CFA  5007               	movf	??_color_read_Green^0,w,c
  6693   005CFC  6E0A               	movwf	color_read_Green@tmp^0,c
  6694   005CFE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6695                           
  6696                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6697   005D00  0E00               	movlw	0
  6698   005D02  EC99  F02F         	call	_I2C_2_Master_Read
  6699   005D06  6E07               	movwf	??_color_read_Green^0,c
  6700   005D08  5007               	movf	??_color_read_Green^0,w,c
  6701   005D0A  6E09               	movwf	(??_color_read_Green+2)^0,c
  6702   005D0C  6A08               	clrf	(??_color_read_Green+1)^0,c
  6703   005D0E  500A               	movf	color_read_Green@tmp^0,w,c
  6704   005D10  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6705   005D12  6E0A               	movwf	color_read_Green@tmp^0,c
  6706   005D14  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6707   005D16  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6708   005D18  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6709                           
  6710                           ;color.c: 83:  I2C_2_Master_Stop();
  6711   005D1A  EC24  F031         	call	_I2C_2_Master_Stop	;wreg free
  6712   005D1E                     
  6713                           ;color.c: 84:  return tmp;
  6714   005D1E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6715   005D22  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6716   005D26  0012               	return		;funcret
  6717   005D28                     __end_of_color_read_Green:
  6718                           	callstack 0
  6719                           
  6720 ;; *************** function _color_read_Blue *****************
  6721 ;; Defined at:
  6722 ;;		line 87 in file "color.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  tmp             2    9[COMRAM] unsigned int 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  2    4[COMRAM] unsigned int 
  6729 ;; Registers used:
  6730 ;;		wreg, status,2, status,0, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;Total ram usage:        7 bytes
  6741 ;; Hardware stack levels used: 1
  6742 ;; Hardware stack levels required when called: 3
  6743 ;; This function calls:
  6744 ;;		_I2C_2_Master_Read
  6745 ;;		_I2C_2_Master_RepStart
  6746 ;;		_I2C_2_Master_Start
  6747 ;;		_I2C_2_Master_Stop
  6748 ;;		_I2C_2_Master_Write
  6749 ;; This function is called by:
  6750 ;;		_readColours
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text27
  6755   005D28                     __ptext27:
  6756                           	callstack 0
  6757   005D28                     _color_read_Blue:
  6758                           	callstack 26
  6759   005D28                     
  6760                           ;color.c: 89:  unsigned int tmp;;color.c: 90:  I2C_2_Master_Start();
  6761   005D28  EC29  F031         	call	_I2C_2_Master_Start	;wreg free
  6762                           
  6763                           ;color.c: 91:  I2C_2_Master_Write(0x52 | 0x00);
  6764   005D2C  0E52               	movlw	82
  6765   005D2E  EC0D  F031         	call	_I2C_2_Master_Write
  6766                           
  6767                           ;color.c: 92:  I2C_2_Master_Write(0xA0 | 0x1A);
  6768   005D32  0EBA               	movlw	186
  6769   005D34  EC0D  F031         	call	_I2C_2_Master_Write
  6770                           
  6771                           ;color.c: 93:  I2C_2_Master_RepStart();
  6772   005D38  EC1F  F031         	call	_I2C_2_Master_RepStart	;wreg free
  6773                           
  6774                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x01);
  6775   005D3C  0E53               	movlw	83
  6776   005D3E  EC0D  F031         	call	_I2C_2_Master_Write
  6777                           
  6778                           ;color.c: 95:  tmp=I2C_2_Master_Read(1);
  6779   005D42  0E01               	movlw	1
  6780   005D44  EC99  F02F         	call	_I2C_2_Master_Read
  6781   005D48  6E07               	movwf	??_color_read_Blue^0,c
  6782   005D4A  5007               	movf	??_color_read_Blue^0,w,c
  6783   005D4C  6E0A               	movwf	color_read_Blue@tmp^0,c
  6784   005D4E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6785                           
  6786                           ;color.c: 96:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6787   005D50  0E00               	movlw	0
  6788   005D52  EC99  F02F         	call	_I2C_2_Master_Read
  6789   005D56  6E07               	movwf	??_color_read_Blue^0,c
  6790   005D58  5007               	movf	??_color_read_Blue^0,w,c
  6791   005D5A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6792   005D5C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6793   005D5E  500A               	movf	color_read_Blue@tmp^0,w,c
  6794   005D60  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6795   005D62  6E0A               	movwf	color_read_Blue@tmp^0,c
  6796   005D64  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6797   005D66  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6798   005D68  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6799                           
  6800                           ;color.c: 97:  I2C_2_Master_Stop();
  6801   005D6A  EC24  F031         	call	_I2C_2_Master_Stop	;wreg free
  6802   005D6E                     
  6803                           ;color.c: 98:  return tmp;
  6804   005D6E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6805   005D72  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6806   005D76  0012               	return		;funcret
  6807   005D78                     __end_of_color_read_Blue:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function _I2C_2_Master_RepStart *****************
  6811 ;; Defined at:
  6812 ;;		line 33 in file "i2c.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0, cstack
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6830 ;;Total ram usage:        0 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; Hardware stack levels required when called: 2
  6833 ;; This function calls:
  6834 ;;		_I2C_2_Master_Idle
  6835 ;; This function is called by:
  6836 ;;		_color_read_lum
  6837 ;;		_color_read_Red
  6838 ;;		_color_read_Green
  6839 ;;		_color_read_Blue
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text28
  6844   00623E                     __ptext28:
  6845                           	callstack 0
  6846   00623E                     _I2C_2_Master_RepStart:
  6847                           	callstack 26
  6848   00623E                     
  6849                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6850   00623E  EC98  F030         	call	_I2C_2_Master_Idle	;wreg free
  6851   006242                     
  6852                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6853   006242  010E               	movlb	14	; () banked
  6854   006244  83DA               	bsf	218,1,b	;volatile
  6855   006246                     
  6856                           ; BSR set to: 14
  6857   006246  0012               	return		;funcret
  6858   006248                     __end_of_I2C_2_Master_RepStart:
  6859                           	callstack 0
  6860                           
  6861 ;; *************** function _I2C_2_Master_Read *****************
  6862 ;; Defined at:
  6863 ;;		line 51 in file "i2c.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  ack             1    wreg     unsigned char 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  ack             1    2[COMRAM] unsigned char 
  6868 ;;  tmp             1    3[COMRAM] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      unsigned char 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6881 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6882 ;;Total ram usage:        3 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; Hardware stack levels required when called: 2
  6885 ;; This function calls:
  6886 ;;		_I2C_2_Master_Idle
  6887 ;; This function is called by:
  6888 ;;		_color_read_lum
  6889 ;;		_color_read_Red
  6890 ;;		_color_read_Green
  6891 ;;		_color_read_Blue
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text29
  6896   005F32                     __ptext29:
  6897                           	callstack 0
  6898   005F32                     _I2C_2_Master_Read:
  6899                           	callstack 26
  6900                           
  6901                           ; BSR set to: 14
  6902                           ;incstack = 0
  6903                           ;I2C_2_Master_Read@ack stored from wreg
  6904   005F32  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6905   005F34                     
  6906                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6907   005F34  EC98  F030         	call	_I2C_2_Master_Idle	;wreg free
  6908   005F38                     
  6909                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6910   005F38  010E               	movlb	14	; () banked
  6911   005F3A  87DA               	bsf	218,3,b	;volatile
  6912                           
  6913                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6914   005F3C  EC98  F030         	call	_I2C_2_Master_Idle	;wreg free
  6915   005F40                     
  6916                           ;i2c.c: 57:   tmp = SSP2BUF;
  6917   005F40  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6918                           
  6919                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6920   005F44  EC98  F030         	call	_I2C_2_Master_Idle	;wreg free
  6921   005F48                     
  6922                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6923   005F48  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6924   005F4A  B4D8               	btfsc	status,2,c
  6925   005F4C  EFAA  F02F         	goto	u4911
  6926   005F50  EFAE  F02F         	goto	u4910
  6927   005F54                     u4911:
  6928   005F54  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6929   005F56  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6930   005F58  EFAF  F02F         	goto	u4928
  6931   005F5C                     u4910:
  6932   005F5C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6933   005F5E                     u4928:
  6934   005F5E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6935   005F60  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6936   005F62  010E               	movlb	14	; () banked
  6937   005F64  51DA               	movf	218,w,b	;volatile
  6938   005F66  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6939   005F68  0BDF               	andlw	-33
  6940   005F6A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6941   005F6C  6FDA               	movwf	218,b	;volatile
  6942   005F6E                     
  6943                           ; BSR set to: 14
  6944                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6945   005F6E  89DA               	bsf	218,4,b	;volatile
  6946   005F70                     
  6947                           ; BSR set to: 14
  6948                           ;i2c.c: 61:   return tmp;
  6949   005F70  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6950   005F72                     
  6951                           ; BSR set to: 14
  6952   005F72  0012               	return		;funcret
  6953   005F74                     __end_of_I2C_2_Master_Read:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function _initUSART4 *****************
  6957 ;; Defined at:
  6958 ;;		line 4 in file "serial.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg, status,2
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; Hardware stack levels required when called: 1
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_main
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text30
  6987   0061E4                     __ptext30:
  6988                           	callstack 0
  6989   0061E4                     _initUSART4:
  6990                           	callstack 29
  6991   0061E4                     
  6992                           ;serial.c: 5:     RC0PPS = 0x12;
  6993   0061E4  0E12               	movlw	18
  6994   0061E6  010E               	movlb	14	; () banked
  6995   0061E8  6F62               	movwf	98,b	;volatile
  6996                           
  6997                           ;serial.c: 6:     RX4PPS = 0x11;
  6998   0061EA  0E11               	movlw	17
  6999   0061EC  6F15               	movwf	21,b	;volatile
  7000   0061EE                     
  7001                           ; BSR set to: 14
  7002                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7003   0061EE  97E9               	bcf	233,3,b	;volatile
  7004   0061F0                     
  7005                           ; BSR set to: 14
  7006                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7007   0061F0  95E8               	bcf	232,2,b	;volatile
  7008                           
  7009                           ;serial.c: 9:     SP4BRGL = 51;
  7010   0061F2  0E33               	movlw	51
  7011   0061F4  6FE5               	movwf	229,b	;volatile
  7012                           
  7013                           ;serial.c: 10:     SP4BRGH = 0;
  7014   0061F6  0E00               	movlw	0
  7015   0061F8  6FE6               	movwf	230,b	;volatile
  7016   0061FA                     
  7017                           ; BSR set to: 14
  7018                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7019   0061FA  89E7               	bsf	231,4,b	;volatile
  7020   0061FC                     
  7021                           ; BSR set to: 14
  7022                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7023   0061FC  8BE8               	bsf	232,5,b	;volatile
  7024   0061FE                     
  7025                           ; BSR set to: 14
  7026                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7027   0061FE  8FE7               	bsf	231,7,b	;volatile
  7028   006200                     
  7029                           ; BSR set to: 14
  7030   006200  0012               	return		;funcret
  7031   006202                     __end_of_initUSART4:
  7032                           	callstack 0
  7033                           
  7034 ;; *************** function _initDCmotorsPWM *****************
  7035 ;; Defined at:
  7036 ;;		line 7 in file "dc_motor.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;		None
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  1    wreg      void 
  7043 ;; Registers used:
  7044 ;;		wreg, status,2
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7054 ;;Total ram usage:        2 bytes
  7055 ;; Hardware stack levels used: 1
  7056 ;; Hardware stack levels required when called: 1
  7057 ;; This function calls:
  7058 ;;		Nothing
  7059 ;; This function is called by:
  7060 ;;		_main
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text31
  7065   005258                     __ptext31:
  7066                           	callstack 0
  7067   005258                     _initDCmotorsPWM:
  7068                           	callstack 29
  7069   005258                     
  7070                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7071   005258  0E05               	movlw	5
  7072   00525A  010E               	movlb	14	; () banked
  7073   00525C  6F74               	movwf	116,b	;volatile
  7074                           
  7075                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7076   00525E  0E06               	movlw	6
  7077   005260  6F76               	movwf	118,b	;volatile
  7078                           
  7079                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7080   005262  0E07               	movlw	7
  7081   005264  6F69               	movwf	105,b	;volatile
  7082                           
  7083                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7084   005266  0E08               	movlw	8
  7085   005268  6F88               	movwf	136,b	;volatile
  7086   00526A                     
  7087                           ; BSR set to: 14
  7088                           ;dc_motor.c: 17:     TRISEbits.TRISE2=0;
  7089   00526A  9485               	bcf	133,2,c	;volatile
  7090   00526C                     
  7091                           ; BSR set to: 14
  7092                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  7093   00526C  9885               	bcf	133,4,c	;volatile
  7094   00526E                     
  7095                           ; BSR set to: 14
  7096                           ;dc_motor.c: 19:     TRISCbits.TRISC7=0;
  7097   00526E  9E83               	bcf	131,7,c	;volatile
  7098   005270                     
  7099                           ; BSR set to: 14
  7100                           ;dc_motor.c: 20:     TRISGbits.TRISG6=0;
  7101   005270  9C87               	bcf	135,6,c	;volatile
  7102                           
  7103                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  7104   005272  50BD               	movf	189,w,c	;volatile
  7105   005274  0B8F               	andlw	-113
  7106   005276  0930               	iorlw	48
  7107   005278  6EBD               	movwf	189,c	;volatile
  7108                           
  7109                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  7110   00527A  0EE0               	movlw	-32
  7111   00527C  16BE               	andwf	190,f,c	;volatile
  7112                           
  7113                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  7114   00527E  50BF               	movf	191,w,c	;volatile
  7115   005280  0BF0               	andlw	-16
  7116   005282  0901               	iorlw	1
  7117   005284  6EBF               	movwf	191,c	;volatile
  7118   005286                     
  7119                           ; BSR set to: 14
  7120                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  7121   005286  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7122   00528A                     
  7123                           ; BSR set to: 14
  7124                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  7125   00528A  8EBD               	bsf	189,7,c	;volatile
  7126                           
  7127                           ;dc_motor.c: 35:     CCPR1H=0;
  7128   00528C  0E00               	movlw	0
  7129   00528E  6EAA               	movwf	170,c	;volatile
  7130                           
  7131                           ;dc_motor.c: 36:     CCPR2H=0;
  7132   005290  0E00               	movlw	0
  7133   005292  6EA6               	movwf	166,c	;volatile
  7134                           
  7135                           ;dc_motor.c: 37:     CCPR3H=0;
  7136   005294  0E00               	movlw	0
  7137   005296  010F               	movlb	15	; () banked
  7138   005298  6F25               	movwf	37,b	;volatile
  7139                           
  7140                           ;dc_motor.c: 38:     CCPR4H=0;
  7141   00529A  0E00               	movlw	0
  7142   00529C  6F21               	movwf	33,b	;volatile
  7143                           
  7144                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7145   00529E  0EFC               	movlw	-4
  7146   0052A0  16AD               	andwf	173,f,c	;volatile
  7147                           
  7148                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7149   0052A2  0EF3               	movlw	-13
  7150   0052A4  16AD               	andwf	173,f,c	;volatile
  7151                           
  7152                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7153   0052A6  0ECF               	movlw	-49
  7154   0052A8  16AD               	andwf	173,f,c	;volatile
  7155                           
  7156                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7157   0052AA  0E3F               	movlw	-193
  7158   0052AC  16AD               	andwf	173,f,c	;volatile
  7159   0052AE                     
  7160                           ; BSR set to: 15
  7161                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  7162   0052AE  88AB               	bsf	171,4,c	;volatile
  7163                           
  7164                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7165   0052B0  50AB               	movf	171,w,c	;volatile
  7166   0052B2  0BF0               	andlw	-16
  7167   0052B4  090C               	iorlw	12
  7168   0052B6  6EAB               	movwf	171,c	;volatile
  7169   0052B8                     
  7170                           ; BSR set to: 15
  7171                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  7172   0052B8  8EAB               	bsf	171,7,c	;volatile
  7173   0052BA                     
  7174                           ; BSR set to: 15
  7175                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  7176   0052BA  88A7               	bsf	167,4,c	;volatile
  7177                           
  7178                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7179   0052BC  50A7               	movf	167,w,c	;volatile
  7180   0052BE  0BF0               	andlw	-16
  7181   0052C0  090C               	iorlw	12
  7182   0052C2  6EA7               	movwf	167,c	;volatile
  7183   0052C4                     
  7184                           ; BSR set to: 15
  7185                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  7186   0052C4  8EA7               	bsf	167,7,c	;volatile
  7187   0052C6                     
  7188                           ; BSR set to: 15
  7189                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  7190   0052C6  8926               	bsf	38,4,b	;volatile
  7191                           
  7192                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7193   0052C8  5126               	movf	38,w,b	;volatile
  7194   0052CA  0BF0               	andlw	-16
  7195   0052CC  090C               	iorlw	12
  7196   0052CE  6F26               	movwf	38,b	;volatile
  7197   0052D0                     
  7198                           ; BSR set to: 15
  7199                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  7200   0052D0  8F26               	bsf	38,7,b	;volatile
  7201   0052D2                     
  7202                           ; BSR set to: 15
  7203                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  7204   0052D2  8922               	bsf	34,4,b	;volatile
  7205                           
  7206                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7207   0052D4  5122               	movf	34,w,b	;volatile
  7208   0052D6  0BF0               	andlw	-16
  7209   0052D8  090C               	iorlw	12
  7210   0052DA  6F22               	movwf	34,b	;volatile
  7211   0052DC                     
  7212                           ; BSR set to: 15
  7213                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  7214   0052DC  8F22               	bsf	34,7,b	;volatile
  7215   0052DE                     
  7216                           ; BSR set to: 15
  7217   0052DE  0012               	return		;funcret
  7218   0052E0                     __end_of_initDCmotorsPWM:
  7219                           	callstack 0
  7220                           
  7221 ;; *************** function _getTMR0val *****************
  7222 ;; Defined at:
  7223 ;;		line 25 in file "timers.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  moving          2    4[COMRAM] int 
  7228 ;;  temp            2    2[COMRAM] unsigned int 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;Total ram usage:        6 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; Hardware stack levels required when called: 1
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_main
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text32
  7253   0056D0                     __ptext32:
  7254                           	callstack 0
  7255   0056D0                     _getTMR0val:
  7256                           	callstack 29
  7257   0056D0                     
  7258                           ;timers.c: 27:     unsigned int temp= TMR0L;
  7259   0056D0  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  7260   0056D4  6A04               	clrf	(getTMR0val@temp+1)^0,c
  7261   0056D6                     
  7262                           ;timers.c: 29:     int moving=(TMR0H<<8)|(temp&0xff);
  7263   0056D6  5003               	movf	getTMR0val@temp^0,w,c
  7264   0056D8  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  7265   0056DC  6A02               	clrf	(??_getTMR0val+1)^0,c
  7266   0056DE  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  7267   0056E2  6A01               	clrf	??_getTMR0val^0,c
  7268   0056E4  1001               	iorwf	??_getTMR0val^0,w,c
  7269   0056E6  6E05               	movwf	getTMR0val@moving^0,c
  7270   0056E8  5002               	movf	(??_getTMR0val+1)^0,w,c
  7271   0056EA  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7272                           
  7273                           ;timers.c: 30:     if (moving>500){
  7274   0056EC  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  7275   0056EE  EF82  F02B         	goto	u5571
  7276   0056F2  0EF5               	movlw	245
  7277   0056F4  5C05               	subwf	getTMR0val@moving^0,w,c
  7278   0056F6  0E01               	movlw	1
  7279   0056F8  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  7280   0056FA  A0D8               	btfss	status,0,c
  7281   0056FC  EF82  F02B         	goto	u5571
  7282   005700  EF84  F02B         	goto	u5570
  7283   005704                     u5571:
  7284   005704  EF8A  F02B         	goto	l5690
  7285   005708                     u5570:
  7286   005708                     
  7287                           ;timers.c: 31:         moving=moving-500;
  7288   005708  0E0C               	movlw	12
  7289   00570A  2405               	addwf	getTMR0val@moving^0,w,c
  7290   00570C  6E05               	movwf	getTMR0val@moving^0,c
  7291   00570E  0EFE               	movlw	254
  7292   005710  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  7293   005712  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7294   005714                     l5690:
  7295                           
  7296                           ;timers.c: 34:     Time_forward[move_count]=moving;
  7297   005714  90D8               	bcf	status,0,c
  7298   005716  0101               	movlb	1	; () banked
  7299   005718  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  7300   00571A  6ED9               	movwf	fsr2l,c
  7301   00571C  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  7302   00571E  6EDA               	movwf	fsr2h,c
  7303   005720  0E3C               	movlw	low _Time_forward
  7304   005722  26D9               	addwf	fsr2l,f,c
  7305   005724  0E02               	movlw	high _Time_forward
  7306   005726  22DA               	addwfc	fsr2h,f,c
  7307   005728  C005  FFDE         	movff	getTMR0val@moving,postinc2
  7308   00572C  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  7309   005730                     
  7310                           ; BSR set to: 1
  7311   005730  0012               	return		;funcret
  7312   005732                     __end_of_getTMR0val:
  7313                           	callstack 0
  7314                           
  7315 ;; *************** function _colour_rel *****************
  7316 ;; Defined at:
  7317 ;;		line 111 in file "color.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  vals            2   74[COMRAM] PTR struct RGB
  7320 ;;		 -> vals(8), 
  7321 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7322 ;;		 -> rel(12), 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  B               4   20[BANK0 ] float 
  7325 ;;  G               4   16[BANK0 ] float 
  7326 ;;  R               4   12[BANK0 ] float 
  7327 ;;  L               4    0[BANK0 ] float 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7338 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;Total ram usage:       28 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 2
  7344 ;; This function calls:
  7345 ;;		___fladd
  7346 ;;		___fldiv
  7347 ;;		___xxtofl
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text33
  7354   002EB0                     __ptext33:
  7355                           	callstack 0
  7356   002EB0                     _colour_rel:
  7357                           	callstack 28
  7358   002EB0                     
  7359                           ;color.c: 112:     float R = vals->R;
  7360   002EB0  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  7361   002EB4  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  7362   002EB8  CFDE F001          	movff	postinc2,___xxtofl@val
  7363   002EBC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7364   002EC0  0E00               	movlw	0
  7365   002EC2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7366   002EC4  0EFF               	movlw	-1
  7367   002EC6  6E03               	movwf	(___xxtofl@val+2)^0,c
  7368   002EC8  6E04               	movwf	(___xxtofl@val+3)^0,c
  7369   002ECA  0E01               	movlw	1
  7370   002ECC  ECCB  F020         	call	___xxtofl
  7371   002ED0  C001  F06C         	movff	?___xxtofl,colour_rel@R
  7372   002ED4  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  7373   002ED8  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  7374   002EDC  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  7375                           
  7376                           ;color.c: 113:     float G = vals->G;
  7377   002EE0  EE20 F002          	lfsr	2,2
  7378   002EE4  504B               	movf	colour_rel@vals^0,w,c
  7379   002EE6  26D9               	addwf	fsr2l,f,c
  7380   002EE8  504C               	movf	(colour_rel@vals+1)^0,w,c
  7381   002EEA  22DA               	addwfc	fsr2h,f,c
  7382   002EEC  CFDE F001          	movff	postinc2,___xxtofl@val
  7383   002EF0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7384   002EF4  0E00               	movlw	0
  7385   002EF6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7386   002EF8  0EFF               	movlw	-1
  7387   002EFA  6E03               	movwf	(___xxtofl@val+2)^0,c
  7388   002EFC  6E04               	movwf	(___xxtofl@val+3)^0,c
  7389   002EFE  0E01               	movlw	1
  7390   002F00  ECCB  F020         	call	___xxtofl
  7391   002F04  C001  F070         	movff	?___xxtofl,colour_rel@G
  7392   002F08  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7393   002F0C  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7394   002F10  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7395                           
  7396                           ;color.c: 114:     float B = vals->B;
  7397   002F14  EE20 F004          	lfsr	2,4
  7398   002F18  504B               	movf	colour_rel@vals^0,w,c
  7399   002F1A  26D9               	addwf	fsr2l,f,c
  7400   002F1C  504C               	movf	(colour_rel@vals+1)^0,w,c
  7401   002F1E  22DA               	addwfc	fsr2h,f,c
  7402   002F20  CFDE F001          	movff	postinc2,___xxtofl@val
  7403   002F24  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7404   002F28  0E00               	movlw	0
  7405   002F2A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7406   002F2C  0EFF               	movlw	-1
  7407   002F2E  6E03               	movwf	(___xxtofl@val+2)^0,c
  7408   002F30  6E04               	movwf	(___xxtofl@val+3)^0,c
  7409   002F32  0E01               	movlw	1
  7410   002F34  ECCB  F020         	call	___xxtofl
  7411   002F38  C001  F074         	movff	?___xxtofl,colour_rel@B
  7412   002F3C  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7413   002F40  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7414   002F44  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7415                           
  7416                           ;color.c: 115:     float L = vals->L;
  7417   002F48  EE20 F006          	lfsr	2,6
  7418   002F4C  504B               	movf	colour_rel@vals^0,w,c
  7419   002F4E  26D9               	addwf	fsr2l,f,c
  7420   002F50  504C               	movf	(colour_rel@vals+1)^0,w,c
  7421   002F52  22DA               	addwfc	fsr2h,f,c
  7422   002F54  CFDE F001          	movff	postinc2,___xxtofl@val
  7423   002F58  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7424   002F5C  0E00               	movlw	0
  7425   002F5E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7426   002F60  0EFF               	movlw	-1
  7427   002F62  6E03               	movwf	(___xxtofl@val+2)^0,c
  7428   002F64  6E04               	movwf	(___xxtofl@val+3)^0,c
  7429   002F66  0E01               	movlw	1
  7430   002F68  ECCB  F020         	call	___xxtofl
  7431   002F6C  C001  F060         	movff	?___xxtofl,colour_rel@L
  7432   002F70  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7433   002F74  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7434   002F78  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7435   002F7C                     
  7436                           ;color.c: 116:     rel -> R = R/(R+G+B+L);
  7437   002F7C  C070  F005         	movff	colour_rel@G,___fladd@a
  7438   002F80  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7439   002F84  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7440   002F88  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7441   002F8C  C06C  F001         	movff	colour_rel@R,___fladd@b
  7442   002F90  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7443   002F94  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7444   002F98  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7445   002F9C  EC16  F011         	call	___fladd	;wreg free
  7446   002FA0  C001  F064         	movff	?___fladd,_colour_rel$3313
  7447   002FA4  C002  F065         	movff	?___fladd+1,_colour_rel$3313+1
  7448   002FA8  C003  F066         	movff	?___fladd+2,_colour_rel$3313+2
  7449   002FAC  C004  F067         	movff	?___fladd+3,_colour_rel$3313+3
  7450   002FB0                     
  7451                           ;color.c: 116:     rel -> R = R/(R+G+B+L);
  7452   002FB0  C074  F005         	movff	colour_rel@B,___fladd@a
  7453   002FB4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7454   002FB8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7455   002FBC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7456   002FC0  C064  F001         	movff	_colour_rel$3313,___fladd@b
  7457   002FC4  C065  F002         	movff	_colour_rel$3313+1,___fladd@b+1
  7458   002FC8  C066  F003         	movff	_colour_rel$3313+2,___fladd@b+2
  7459   002FCC  C067  F004         	movff	_colour_rel$3313+3,___fladd@b+3
  7460   002FD0  EC16  F011         	call	___fladd	;wreg free
  7461   002FD4  C001  F068         	movff	?___fladd,_colour_rel$3314
  7462   002FD8  C002  F069         	movff	?___fladd+1,_colour_rel$3314+1
  7463   002FDC  C003  F06A         	movff	?___fladd+2,_colour_rel$3314+2
  7464   002FE0  C004  F06B         	movff	?___fladd+3,_colour_rel$3314+3
  7465                           
  7466                           ;color.c: 116:     rel -> R = R/(R+G+B+L);
  7467   002FE4  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7468   002FE8  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7469   002FEC  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7470   002FF0  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7471   002FF4  C060  F005         	movff	colour_rel@L,___fladd@a
  7472   002FF8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7473   002FFC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7474   003000  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7475   003004  C068  F001         	movff	_colour_rel$3314,___fladd@b
  7476   003008  C069  F002         	movff	_colour_rel$3314+1,___fladd@b+1
  7477   00300C  C06A  F003         	movff	_colour_rel$3314+2,___fladd@b+2
  7478   003010  C06B  F004         	movff	_colour_rel$3314+3,___fladd@b+3
  7479   003014  EC16  F011         	call	___fladd	;wreg free
  7480   003018  C001  F036         	movff	?___fladd,___fldiv@a
  7481   00301C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7482   003020  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7483   003024  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7484   003028  EC8B  F015         	call	___fldiv	;wreg free
  7485   00302C  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7486   003030  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7487   003034  C032  FFDE         	movff	?___fldiv,postinc2
  7488   003038  C033  FFDE         	movff	?___fldiv+1,postinc2
  7489   00303C  C034  FFDE         	movff	?___fldiv+2,postinc2
  7490   003040  C035  FFDE         	movff	?___fldiv+3,postinc2
  7491   003044                     
  7492                           ;color.c: 117:     rel -> B = B/(R+G+B+L);
  7493   003044  C070  F005         	movff	colour_rel@G,___fladd@a
  7494   003048  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7495   00304C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7496   003050  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7497   003054  C06C  F001         	movff	colour_rel@R,___fladd@b
  7498   003058  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7499   00305C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7500   003060  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7501   003064  EC16  F011         	call	___fladd	;wreg free
  7502   003068  C001  F064         	movff	?___fladd,_colour_rel$3313
  7503   00306C  C002  F065         	movff	?___fladd+1,_colour_rel$3313+1
  7504   003070  C003  F066         	movff	?___fladd+2,_colour_rel$3313+2
  7505   003074  C004  F067         	movff	?___fladd+3,_colour_rel$3313+3
  7506   003078                     
  7507                           ;color.c: 117:     rel -> B = B/(R+G+B+L);
  7508   003078  C074  F005         	movff	colour_rel@B,___fladd@a
  7509   00307C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7510   003080  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7511   003084  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7512   003088  C064  F001         	movff	_colour_rel$3313,___fladd@b
  7513   00308C  C065  F002         	movff	_colour_rel$3313+1,___fladd@b+1
  7514   003090  C066  F003         	movff	_colour_rel$3313+2,___fladd@b+2
  7515   003094  C067  F004         	movff	_colour_rel$3313+3,___fladd@b+3
  7516   003098  EC16  F011         	call	___fladd	;wreg free
  7517   00309C  C001  F068         	movff	?___fladd,_colour_rel$3314
  7518   0030A0  C002  F069         	movff	?___fladd+1,_colour_rel$3314+1
  7519   0030A4  C003  F06A         	movff	?___fladd+2,_colour_rel$3314+2
  7520   0030A8  C004  F06B         	movff	?___fladd+3,_colour_rel$3314+3
  7521                           
  7522                           ;color.c: 117:     rel -> B = B/(R+G+B+L);
  7523   0030AC  C074  F032         	movff	colour_rel@B,___fldiv@b
  7524   0030B0  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7525   0030B4  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7526   0030B8  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7527   0030BC  C060  F005         	movff	colour_rel@L,___fladd@a
  7528   0030C0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7529   0030C4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7530   0030C8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7531   0030CC  C068  F001         	movff	_colour_rel$3314,___fladd@b
  7532   0030D0  C069  F002         	movff	_colour_rel$3314+1,___fladd@b+1
  7533   0030D4  C06A  F003         	movff	_colour_rel$3314+2,___fladd@b+2
  7534   0030D8  C06B  F004         	movff	_colour_rel$3314+3,___fladd@b+3
  7535   0030DC  EC16  F011         	call	___fladd	;wreg free
  7536   0030E0  C001  F036         	movff	?___fladd,___fldiv@a
  7537   0030E4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7538   0030E8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7539   0030EC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7540   0030F0  EC8B  F015         	call	___fldiv	;wreg free
  7541   0030F4  EE20 F008          	lfsr	2,8
  7542   0030F8  504D               	movf	colour_rel@rel^0,w,c
  7543   0030FA  26D9               	addwf	fsr2l,f,c
  7544   0030FC  504E               	movf	(colour_rel@rel+1)^0,w,c
  7545   0030FE  22DA               	addwfc	fsr2h,f,c
  7546   003100  C032  FFDE         	movff	?___fldiv,postinc2
  7547   003104  C033  FFDE         	movff	?___fldiv+1,postinc2
  7548   003108  C034  FFDE         	movff	?___fldiv+2,postinc2
  7549   00310C  C035  FFDE         	movff	?___fldiv+3,postinc2
  7550   003110                     
  7551                           ;color.c: 118:     rel -> G = G/(R+G+B+L);
  7552   003110  C070  F005         	movff	colour_rel@G,___fladd@a
  7553   003114  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7554   003118  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7555   00311C  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7556   003120  C06C  F001         	movff	colour_rel@R,___fladd@b
  7557   003124  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7558   003128  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7559   00312C  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7560   003130  EC16  F011         	call	___fladd	;wreg free
  7561   003134  C001  F064         	movff	?___fladd,_colour_rel$3313
  7562   003138  C002  F065         	movff	?___fladd+1,_colour_rel$3313+1
  7563   00313C  C003  F066         	movff	?___fladd+2,_colour_rel$3313+2
  7564   003140  C004  F067         	movff	?___fladd+3,_colour_rel$3313+3
  7565   003144                     
  7566                           ;color.c: 118:     rel -> G = G/(R+G+B+L);
  7567   003144  C074  F005         	movff	colour_rel@B,___fladd@a
  7568   003148  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7569   00314C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7570   003150  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7571   003154  C064  F001         	movff	_colour_rel$3313,___fladd@b
  7572   003158  C065  F002         	movff	_colour_rel$3313+1,___fladd@b+1
  7573   00315C  C066  F003         	movff	_colour_rel$3313+2,___fladd@b+2
  7574   003160  C067  F004         	movff	_colour_rel$3313+3,___fladd@b+3
  7575   003164  EC16  F011         	call	___fladd	;wreg free
  7576   003168  C001  F068         	movff	?___fladd,_colour_rel$3314
  7577   00316C  C002  F069         	movff	?___fladd+1,_colour_rel$3314+1
  7578   003170  C003  F06A         	movff	?___fladd+2,_colour_rel$3314+2
  7579   003174  C004  F06B         	movff	?___fladd+3,_colour_rel$3314+3
  7580                           
  7581                           ;color.c: 118:     rel -> G = G/(R+G+B+L);
  7582   003178  C070  F032         	movff	colour_rel@G,___fldiv@b
  7583   00317C  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7584   003180  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7585   003184  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7586   003188  C060  F005         	movff	colour_rel@L,___fladd@a
  7587   00318C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7588   003190  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7589   003194  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7590   003198  C068  F001         	movff	_colour_rel$3314,___fladd@b
  7591   00319C  C069  F002         	movff	_colour_rel$3314+1,___fladd@b+1
  7592   0031A0  C06A  F003         	movff	_colour_rel$3314+2,___fladd@b+2
  7593   0031A4  C06B  F004         	movff	_colour_rel$3314+3,___fladd@b+3
  7594   0031A8  EC16  F011         	call	___fladd	;wreg free
  7595   0031AC  C001  F036         	movff	?___fladd,___fldiv@a
  7596   0031B0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7597   0031B4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7598   0031B8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7599   0031BC  EC8B  F015         	call	___fldiv	;wreg free
  7600   0031C0  EE20 F004          	lfsr	2,4
  7601   0031C4  504D               	movf	colour_rel@rel^0,w,c
  7602   0031C6  26D9               	addwf	fsr2l,f,c
  7603   0031C8  504E               	movf	(colour_rel@rel+1)^0,w,c
  7604   0031CA  22DA               	addwfc	fsr2h,f,c
  7605   0031CC  C032  FFDE         	movff	?___fldiv,postinc2
  7606   0031D0  C033  FFDE         	movff	?___fldiv+1,postinc2
  7607   0031D4  C034  FFDE         	movff	?___fldiv+2,postinc2
  7608   0031D8  C035  FFDE         	movff	?___fldiv+3,postinc2
  7609   0031DC  0012               	return		;funcret
  7610   0031DE                     __end_of_colour_rel:
  7611                           	callstack 0
  7612                           
  7613 ;; *************** function _colour_move *****************
  7614 ;; Defined at:
  7615 ;;		line 8 in file "colour_move.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  recognized_c    2   44[COMRAM] int 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;Total ram usage:        2 bytes
  7634 ;; Hardware stack levels used: 1
  7635 ;; Hardware stack levels required when called: 7
  7636 ;; This function calls:
  7637 ;;		_BlueMove
  7638 ;;		_GreenMove
  7639 ;;		_LightBlueMove
  7640 ;;		_OrangeMove
  7641 ;;		_PinkMove
  7642 ;;		_RedMove
  7643 ;;		_RetryMove
  7644 ;;		_YellowMove
  7645 ;;		_go_Home
  7646 ;; This function is called by:
  7647 ;;		_main
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text34
  7652   003D0C                     __ptext34:
  7653                           	callstack 0
  7654   003D0C                     _colour_move:
  7655                           	callstack 23
  7656   003D0C                     
  7657                           ;colour_move.c: 8: void colour_move (int recognized_colour);colour_move.c: 9: {;colour_m
      +                          ove.c: 12:     if (recognized_colour==1){
  7658   003D0C  042D               	decf	colour_move@recognized_colour^0,w,c
  7659   003D0E  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7660   003D10  A4D8               	btfss	status,2,c
  7661   003D12  EF8D  F01E         	goto	u5581
  7662   003D16  EF8F  F01E         	goto	u5580
  7663   003D1A                     u5581:
  7664   003D1A  EFAD  F01E         	goto	l5722
  7665   003D1E                     u5580:
  7666   003D1E                     
  7667                           ;colour_move.c: 13:         RedMove(&motorL, &motorR);
  7668   003D1E  0E61               	movlw	low _motorL
  7669   003D20  6E20               	movwf	RedMove@mL^0,c
  7670   003D22  0E01               	movlw	high _motorL
  7671   003D24  6E21               	movwf	(RedMove@mL+1)^0,c
  7672   003D26  0E58               	movlw	low _motorR
  7673   003D28  6E22               	movwf	RedMove@mR^0,c
  7674   003D2A  0E01               	movlw	high _motorR
  7675   003D2C  6E23               	movwf	(RedMove@mR+1)^0,c
  7676   003D2E  ECDA  F02F         	call	_RedMove	;wreg free
  7677   003D32                     
  7678                           ;colour_move.c: 14:         TMR0H=0;
  7679   003D32  0E00               	movlw	0
  7680   003D34  6ED4               	movwf	212,c	;volatile
  7681   003D36                     
  7682                           ;colour_move.c: 15:         TMR0L=0;
  7683   003D36  0E00               	movlw	0
  7684   003D38  6ED3               	movwf	211,c	;volatile
  7685   003D3A                     
  7686                           ;colour_move.c: 16:         WayBack[move_count]=1;
  7687   003D3A  0E1A               	movlw	low _WayBack
  7688   003D3C  0101               	movlb	1	; () banked
  7689   003D3E  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7690   003D40  6ED9               	movwf	fsr2l,c
  7691   003D42  0E01               	movlw	high _WayBack
  7692   003D44  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7693   003D46  6EDA               	movwf	fsr2h,c
  7694   003D48  0E01               	movlw	1
  7695   003D4A  6EDF               	movwf	indf2,c
  7696   003D4C                     l5720:
  7697                           
  7698                           ; BSR set to: 1
  7699                           ;colour_move.c: 17:         lost_count=0;
  7700   003D4C  0E00               	movlw	0
  7701   003D4E  0100               	movlb	0	; () banked
  7702   003D50  6FEC               	movwf	(_lost_count+1)& (0+255),b
  7703   003D52  0E00               	movlw	0
  7704   003D54  6FEB               	movwf	_lost_count& (0+255),b
  7705                           
  7706                           ;colour_move.c: 18:     }
  7707   003D56  EFC1  F01F         	goto	l516
  7708   003D5A                     l5722:
  7709   003D5A  0E02               	movlw	2
  7710   003D5C  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7711   003D5E  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7712   003D60  A4D8               	btfss	status,2,c
  7713   003D62  EFB5  F01E         	goto	u5591
  7714   003D66  EFB7  F01E         	goto	u5590
  7715   003D6A                     u5591:
  7716   003D6A  EFD0  F01E         	goto	l5734
  7717   003D6E                     u5590:
  7718   003D6E                     
  7719                           ;colour_move.c: 20:         OrangeMove(&motorL, &motorR);
  7720   003D6E  0E61               	movlw	low _motorL
  7721   003D70  6E20               	movwf	OrangeMove@mL^0,c
  7722   003D72  0E01               	movlw	high _motorL
  7723   003D74  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7724   003D76  0E58               	movlw	low _motorR
  7725   003D78  6E22               	movwf	OrangeMove@mR^0,c
  7726   003D7A  0E01               	movlw	high _motorR
  7727   003D7C  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7728   003D7E  EC02  F02B         	call	_OrangeMove	;wreg free
  7729   003D82                     
  7730                           ;colour_move.c: 21:         TMR0H=0;
  7731   003D82  0E00               	movlw	0
  7732   003D84  6ED4               	movwf	212,c	;volatile
  7733   003D86                     
  7734                           ;colour_move.c: 22:         TMR0L=0;
  7735   003D86  0E00               	movlw	0
  7736   003D88  6ED3               	movwf	211,c	;volatile
  7737   003D8A                     
  7738                           ;colour_move.c: 23:         WayBack[move_count]=2;
  7739   003D8A  0E1A               	movlw	low _WayBack
  7740   003D8C  0101               	movlb	1	; () banked
  7741   003D8E  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7742   003D90  6ED9               	movwf	fsr2l,c
  7743   003D92  0E01               	movlw	high _WayBack
  7744   003D94  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7745   003D96  6EDA               	movwf	fsr2h,c
  7746   003D98  0E02               	movlw	2
  7747   003D9A  6EDF               	movwf	indf2,c
  7748   003D9C  EFA6  F01E         	goto	l5720
  7749   003DA0                     l5734:
  7750   003DA0  0E03               	movlw	3
  7751   003DA2  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7752   003DA4  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7753   003DA6  A4D8               	btfss	status,2,c
  7754   003DA8  EFD8  F01E         	goto	u5601
  7755   003DAC  EFDA  F01E         	goto	u5600
  7756   003DB0                     u5601:
  7757   003DB0  EFF3  F01E         	goto	l5746
  7758   003DB4                     u5600:
  7759   003DB4                     
  7760                           ;colour_move.c: 27:         YellowMove(&motorL, &motorR);
  7761   003DB4  0E61               	movlw	low _motorL
  7762   003DB6  6E20               	movwf	YellowMove@mL^0,c
  7763   003DB8  0E01               	movlw	high _motorL
  7764   003DBA  6E21               	movwf	(YellowMove@mL+1)^0,c
  7765   003DBC  0E58               	movlw	low _motorR
  7766   003DBE  6E22               	movwf	YellowMove@mR^0,c
  7767   003DC0  0E01               	movlw	high _motorR
  7768   003DC2  6E23               	movwf	(YellowMove@mR+1)^0,c
  7769   003DC4  EC79  F02D         	call	_YellowMove	;wreg free
  7770   003DC8                     
  7771                           ;colour_move.c: 28:         TMR0H=0;
  7772   003DC8  0E00               	movlw	0
  7773   003DCA  6ED4               	movwf	212,c	;volatile
  7774   003DCC                     
  7775                           ;colour_move.c: 29:         TMR0L=0;
  7776   003DCC  0E00               	movlw	0
  7777   003DCE  6ED3               	movwf	211,c	;volatile
  7778   003DD0                     
  7779                           ;colour_move.c: 30:         WayBack[move_count]=3;
  7780   003DD0  0E1A               	movlw	low _WayBack
  7781   003DD2  0101               	movlb	1	; () banked
  7782   003DD4  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7783   003DD6  6ED9               	movwf	fsr2l,c
  7784   003DD8  0E01               	movlw	high _WayBack
  7785   003DDA  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7786   003DDC  6EDA               	movwf	fsr2h,c
  7787   003DDE  0E03               	movlw	3
  7788   003DE0  6EDF               	movwf	indf2,c
  7789   003DE2  EFA6  F01E         	goto	l5720
  7790   003DE6                     l5746:
  7791   003DE6  0E04               	movlw	4
  7792   003DE8  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7793   003DEA  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7794   003DEC  A4D8               	btfss	status,2,c
  7795   003DEE  EFFB  F01E         	goto	u5611
  7796   003DF2  EFFD  F01E         	goto	u5610
  7797   003DF6                     u5611:
  7798   003DF6  EF16  F01F         	goto	l5758
  7799   003DFA                     u5610:
  7800   003DFA                     
  7801                           ;colour_move.c: 34:         BlueMove(&motorL, &motorR);
  7802   003DFA  0E61               	movlw	low _motorL
  7803   003DFC  6E20               	movwf	BlueMove@mL^0,c
  7804   003DFE  0E01               	movlw	high _motorL
  7805   003E00  6E21               	movwf	(BlueMove@mL+1)^0,c
  7806   003E02  0E58               	movlw	low _motorR
  7807   003E04  6E22               	movwf	BlueMove@mR^0,c
  7808   003E06  0E01               	movlw	high _motorR
  7809   003E08  6E23               	movwf	(BlueMove@mR+1)^0,c
  7810   003E0A  ECEC  F029         	call	_BlueMove	;wreg free
  7811   003E0E                     
  7812                           ;colour_move.c: 35:         TMR0H=0;
  7813   003E0E  0E00               	movlw	0
  7814   003E10  6ED4               	movwf	212,c	;volatile
  7815   003E12                     
  7816                           ;colour_move.c: 36:         TMR0L=0;
  7817   003E12  0E00               	movlw	0
  7818   003E14  6ED3               	movwf	211,c	;volatile
  7819   003E16                     
  7820                           ;colour_move.c: 37:         WayBack[move_count]=4;
  7821   003E16  0E1A               	movlw	low _WayBack
  7822   003E18  0101               	movlb	1	; () banked
  7823   003E1A  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7824   003E1C  6ED9               	movwf	fsr2l,c
  7825   003E1E  0E01               	movlw	high _WayBack
  7826   003E20  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7827   003E22  6EDA               	movwf	fsr2h,c
  7828   003E24  0E04               	movlw	4
  7829   003E26  6EDF               	movwf	indf2,c
  7830   003E28  EFA6  F01E         	goto	l5720
  7831   003E2C                     l5758:
  7832   003E2C  0E05               	movlw	5
  7833   003E2E  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7834   003E30  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7835   003E32  A4D8               	btfss	status,2,c
  7836   003E34  EF1E  F01F         	goto	u5621
  7837   003E38  EF20  F01F         	goto	u5620
  7838   003E3C                     u5621:
  7839   003E3C  EF39  F01F         	goto	l5770
  7840   003E40                     u5620:
  7841   003E40                     
  7842                           ;colour_move.c: 41:         GreenMove(&motorL, &motorR);
  7843   003E40  0E61               	movlw	low _motorL
  7844   003E42  6E20               	movwf	GreenMove@mL^0,c
  7845   003E44  0E01               	movlw	high _motorL
  7846   003E46  6E21               	movwf	(GreenMove@mL+1)^0,c
  7847   003E48  0E58               	movlw	low _motorR
  7848   003E4A  6E22               	movwf	GreenMove@mR^0,c
  7849   003E4C  0E01               	movlw	high _motorR
  7850   003E4E  6E23               	movwf	(GreenMove@mR+1)^0,c
  7851   003E50  ECF9  F02F         	call	_GreenMove	;wreg free
  7852   003E54                     
  7853                           ;colour_move.c: 42:         TMR0H=0;
  7854   003E54  0E00               	movlw	0
  7855   003E56  6ED4               	movwf	212,c	;volatile
  7856   003E58                     
  7857                           ;colour_move.c: 43:         TMR0L=0;
  7858   003E58  0E00               	movlw	0
  7859   003E5A  6ED3               	movwf	211,c	;volatile
  7860   003E5C                     
  7861                           ;colour_move.c: 44:         WayBack[move_count]=5;
  7862   003E5C  0E1A               	movlw	low _WayBack
  7863   003E5E  0101               	movlb	1	; () banked
  7864   003E60  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7865   003E62  6ED9               	movwf	fsr2l,c
  7866   003E64  0E01               	movlw	high _WayBack
  7867   003E66  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7868   003E68  6EDA               	movwf	fsr2h,c
  7869   003E6A  0E05               	movlw	5
  7870   003E6C  6EDF               	movwf	indf2,c
  7871   003E6E  EFA6  F01E         	goto	l5720
  7872   003E72                     l5770:
  7873   003E72  0E06               	movlw	6
  7874   003E74  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7875   003E76  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7876   003E78  A4D8               	btfss	status,2,c
  7877   003E7A  EF41  F01F         	goto	u5631
  7878   003E7E  EF43  F01F         	goto	u5630
  7879   003E82                     u5631:
  7880   003E82  EF5C  F01F         	goto	l5782
  7881   003E86                     u5630:
  7882   003E86                     
  7883                           ;colour_move.c: 48:         LightBlueMove(&motorL, &motorR);
  7884   003E86  0E61               	movlw	low _motorL
  7885   003E88  6E20               	movwf	LightBlueMove@mL^0,c
  7886   003E8A  0E01               	movlw	high _motorL
  7887   003E8C  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7888   003E8E  0E58               	movlw	low _motorR
  7889   003E90  6E22               	movwf	LightBlueMove@mR^0,c
  7890   003E92  0E01               	movlw	high _motorR
  7891   003E94  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7892   003E96  EC35  F02B         	call	_LightBlueMove	;wreg free
  7893   003E9A                     
  7894                           ;colour_move.c: 49:         TMR0H=0;
  7895   003E9A  0E00               	movlw	0
  7896   003E9C  6ED4               	movwf	212,c	;volatile
  7897   003E9E                     
  7898                           ;colour_move.c: 50:         TMR0L=0;
  7899   003E9E  0E00               	movlw	0
  7900   003EA0  6ED3               	movwf	211,c	;volatile
  7901   003EA2                     
  7902                           ;colour_move.c: 51:         WayBack[move_count]=6;
  7903   003EA2  0E1A               	movlw	low _WayBack
  7904   003EA4  0101               	movlb	1	; () banked
  7905   003EA6  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7906   003EA8  6ED9               	movwf	fsr2l,c
  7907   003EAA  0E01               	movlw	high _WayBack
  7908   003EAC  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7909   003EAE  6EDA               	movwf	fsr2h,c
  7910   003EB0  0E06               	movlw	6
  7911   003EB2  6EDF               	movwf	indf2,c
  7912   003EB4  EFA6  F01E         	goto	l5720
  7913   003EB8                     l5782:
  7914   003EB8  0E07               	movlw	7
  7915   003EBA  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7916   003EBC  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7917   003EBE  A4D8               	btfss	status,2,c
  7918   003EC0  EF64  F01F         	goto	u5641
  7919   003EC4  EF66  F01F         	goto	u5640
  7920   003EC8                     u5641:
  7921   003EC8  EF7F  F01F         	goto	l5794
  7922   003ECC                     u5640:
  7923   003ECC                     
  7924                           ;colour_move.c: 55:         PinkMove(&motorL, &motorR);
  7925   003ECC  0E61               	movlw	low _motorL
  7926   003ECE  6E20               	movwf	PinkMove@mL^0,c
  7927   003ED0  0E01               	movlw	high _motorL
  7928   003ED2  6E21               	movwf	(PinkMove@mL+1)^0,c
  7929   003ED4  0E58               	movlw	low _motorR
  7930   003ED6  6E22               	movwf	PinkMove@mR^0,c
  7931   003ED8  0E01               	movlw	high _motorR
  7932   003EDA  6E23               	movwf	(PinkMove@mR+1)^0,c
  7933   003EDC  ECA2  F02D         	call	_PinkMove	;wreg free
  7934   003EE0                     
  7935                           ;colour_move.c: 56:         TMR0H=0;
  7936   003EE0  0E00               	movlw	0
  7937   003EE2  6ED4               	movwf	212,c	;volatile
  7938   003EE4                     
  7939                           ;colour_move.c: 57:         TMR0L=0;
  7940   003EE4  0E00               	movlw	0
  7941   003EE6  6ED3               	movwf	211,c	;volatile
  7942   003EE8                     
  7943                           ;colour_move.c: 58:         WayBack[move_count]=7;
  7944   003EE8  0E1A               	movlw	low _WayBack
  7945   003EEA  0101               	movlb	1	; () banked
  7946   003EEC  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7947   003EEE  6ED9               	movwf	fsr2l,c
  7948   003EF0  0E01               	movlw	high _WayBack
  7949   003EF2  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7950   003EF4  6EDA               	movwf	fsr2h,c
  7951   003EF6  0E07               	movlw	7
  7952   003EF8  6EDF               	movwf	indf2,c
  7953   003EFA  EFA6  F01E         	goto	l5720
  7954   003EFE                     l5794:
  7955   003EFE  0E0A               	movlw	10
  7956   003F00  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7957   003F02  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7958   003F04  A4D8               	btfss	status,2,c
  7959   003F06  EF87  F01F         	goto	u5651
  7960   003F0A  EF89  F01F         	goto	u5650
  7961   003F0E                     u5651:
  7962   003F0E  EFB6  F01F         	goto	l5808
  7963   003F12                     u5650:
  7964   003F12                     
  7965                           ;colour_move.c: 62:         lost_count++;
  7966   003F12  0100               	movlb	0	; () banked
  7967   003F14  4BEB               	infsnz	_lost_count& (0+255),f,b
  7968   003F16  2BEC               	incf	(_lost_count+1)& (0+255),f,b
  7969   003F18                     
  7970                           ; BSR set to: 0
  7971                           ;colour_move.c: 63:         if (lost_count>=3){
  7972   003F18  BFEC               	btfsc	(_lost_count+1)& (0+255),7,b
  7973   003F1A  EF98  F01F         	goto	u5661
  7974   003F1E  51EC               	movf	(_lost_count+1)& (0+255),w,b
  7975   003F20  E109               	bnz	u5660
  7976   003F22  0E03               	movlw	3
  7977   003F24  5DEB               	subwf	_lost_count& (0+255),w,b
  7978   003F26  A0D8               	btfss	status,0,c
  7979   003F28  EF98  F01F         	goto	u5661
  7980   003F2C  EF9A  F01F         	goto	u5660
  7981   003F30                     u5661:
  7982   003F30  EFA6  F01F         	goto	l5802
  7983   003F34                     u5660:
  7984   003F34                     l5800:
  7985                           
  7986                           ;colour_move.c: 64:             go_Home(WayBack, Time_forward);
  7987   003F34  0E1A               	movlw	low _WayBack
  7988   003F36  6E24               	movwf	go_Home@WayBack^0,c
  7989   003F38  0E01               	movlw	high _WayBack
  7990   003F3A  6E25               	movwf	(go_Home@WayBack+1)^0,c
  7991   003F3C  0E3C               	movlw	low _Time_forward
  7992   003F3E  6E26               	movwf	go_Home@Time_forward^0,c
  7993   003F40  0E02               	movlw	high _Time_forward
  7994   003F42  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  7995   003F44  EC72  F01A         	call	_go_Home	;wreg free
  7996                           
  7997                           ;colour_move.c: 65:         }
  7998   003F48  EFC1  F01F         	goto	l516
  7999   003F4C                     l5802:
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;colour_move.c: 67:             RetryMove(&motorL, &motorR);
  8003   003F4C  0E61               	movlw	low _motorL
  8004   003F4E  6E20               	movwf	RetryMove@mL^0,c
  8005   003F50  0E01               	movlw	high _motorL
  8006   003F52  6E21               	movwf	(RetryMove@mL+1)^0,c
  8007   003F54  0E58               	movlw	low _motorR
  8008   003F56  6E22               	movwf	RetryMove@mR^0,c
  8009   003F58  0E01               	movlw	high _motorR
  8010   003F5A  6E23               	movwf	(RetryMove@mR+1)^0,c
  8011   003F5C  EC9A  F02A         	call	_RetryMove	;wreg free
  8012   003F60                     
  8013                           ;colour_move.c: 68:             TMR0H=0;
  8014   003F60  0E00               	movlw	0
  8015   003F62  6ED4               	movwf	212,c	;volatile
  8016   003F64                     
  8017                           ;colour_move.c: 69:             TMR0L=0;
  8018   003F64  0E00               	movlw	0
  8019   003F66  6ED3               	movwf	211,c	;volatile
  8020   003F68  EFC1  F01F         	goto	l516
  8021   003F6C                     l5808:
  8022   003F6C  502D               	movf	colour_move@recognized_colour^0,w,c
  8023   003F6E  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  8024   003F70  A4D8               	btfss	status,2,c
  8025   003F72  EFBD  F01F         	goto	u5671
  8026   003F76  EFBF  F01F         	goto	u5670
  8027   003F7A                     u5671:
  8028   003F7A  EFC1  F01F         	goto	l508
  8029   003F7E                     u5670:
  8030   003F7E  EF9A  F01F         	goto	l5800
  8031   003F82                     l508:
  8032   003F82                     l516:
  8033   003F82  0012               	return		;funcret
  8034   003F84                     __end_of_colour_move:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function _go_Home *****************
  8038 ;; Defined at:
  8039 ;;		line 4 in file "Memory.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  8042 ;;		 -> WayBack(50), 
  8043 ;;  Time_forward    2   37[COMRAM] PTR int 
  8044 ;;		 -> Time_forward(100), 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  i               2   42[COMRAM] int 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8059 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8060 ;;Total ram usage:        9 bytes
  8061 ;; Hardware stack levels used: 1
  8062 ;; Hardware stack levels required when called: 6
  8063 ;; This function calls:
  8064 ;;		_Backhalfblock
  8065 ;;		_BlueMove
  8066 ;;		_GreenMove
  8067 ;;		_RedMove
  8068 ;;		_ReverseLightBlueMove
  8069 ;;		_ReverseOrangeMove
  8070 ;;		_ReversePink
  8071 ;;		_ReverseYellow
  8072 ;;		_homeReverse
  8073 ;;		_stop
  8074 ;;		_timed_forward
  8075 ;; This function is called by:
  8076 ;;		_main
  8077 ;;		_colour_move
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text35
  8082   0034E4                     __ptext35:
  8083                           	callstack 0
  8084   0034E4                     _go_Home:
  8085                           	callstack 24
  8086   0034E4                     
  8087                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  8088   0034E4  0E61               	movlw	low _motorL
  8089   0034E6  6E20               	movwf	BlueMove@mL^0,c
  8090   0034E8  0E01               	movlw	high _motorL
  8091   0034EA  6E21               	movwf	(BlueMove@mL+1)^0,c
  8092   0034EC  0E58               	movlw	low _motorR
  8093   0034EE  6E22               	movwf	BlueMove@mR^0,c
  8094   0034F0  0E01               	movlw	high _motorR
  8095   0034F2  6E23               	movwf	(BlueMove@mR+1)^0,c
  8096   0034F4  ECEC  F029         	call	_BlueMove	;wreg free
  8097   0034F8                     
  8098                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  8099   0034F8  9ED5               	bcf	213,7,c	;volatile
  8100   0034FA                     
  8101                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  8102   0034FA  C1DA  F02B         	movff	_move_count,go_Home@i	;volatile
  8103   0034FE  C1DB  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  8104   003502                     l5256:
  8105   003502  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  8106   003504  EF88  F01A         	goto	u5000
  8107   003508  EF86  F01A         	goto	u5001
  8108   00350C                     u5001:
  8109   00350C  EF8A  F01A         	goto	l5260
  8110   003510                     u5000:
  8111   003510  EFD2  F01B         	goto	l5294
  8112   003514                     l5260:
  8113                           
  8114                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  8115   003514  0E61               	movlw	low _motorL
  8116   003516  6E14               	movwf	timed_forward@mL^0,c
  8117   003518  0E01               	movlw	high _motorL
  8118   00351A  6E15               	movwf	(timed_forward@mL+1)^0,c
  8119   00351C  0E58               	movlw	low _motorR
  8120   00351E  6E16               	movwf	timed_forward@mR^0,c
  8121   003520  0E01               	movlw	high _motorR
  8122   003522  6E17               	movwf	(timed_forward@mR+1)^0,c
  8123   003524  90D8               	bcf	status,0,c
  8124   003526  342B               	rlcf	go_Home@i^0,w,c
  8125   003528  6ED9               	movwf	fsr2l,c
  8126   00352A  342C               	rlcf	(go_Home@i+1)^0,w,c
  8127   00352C  6EDA               	movwf	fsr2h,c
  8128   00352E  5026               	movf	go_Home@Time_forward^0,w,c
  8129   003530  26D9               	addwf	fsr2l,f,c
  8130   003532  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  8131   003534  22DA               	addwfc	fsr2h,f,c
  8132   003536  CFDE F018          	movff	postinc2,timed_forward@time
  8133   00353A  CFDD F019          	movff	postdec2,timed_forward@time+1
  8134   00353E  EC46  F027         	call	_timed_forward	;wreg free
  8135   003542                     
  8136                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  8137   003542  502B               	movf	go_Home@i^0,w,c
  8138   003544  2424               	addwf	go_Home@WayBack^0,w,c
  8139   003546  6E28               	movwf	??_go_Home^0,c
  8140   003548  502C               	movf	(go_Home@i+1)^0,w,c
  8141   00354A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8142   00354C  6E29               	movwf	(??_go_Home+1)^0,c
  8143   00354E  0EFF               	movlw	255
  8144   003550  2428               	addwf	??_go_Home^0,w,c
  8145   003552  6ED9               	movwf	fsr2l,c
  8146   003554  0EFF               	movlw	255
  8147   003556  2029               	addwfc	(??_go_Home+1)^0,w,c
  8148   003558  6EDA               	movwf	fsr2h,c
  8149   00355A  04DE               	decf	postinc2,w,c
  8150   00355C  A4D8               	btfss	status,2,c
  8151   00355E  EFB3  F01A         	goto	u5011
  8152   003562  EFB5  F01A         	goto	u5010
  8153   003566                     u5011:
  8154   003566  EFCB  F01A         	goto	l5266
  8155   00356A                     u5010:
  8156   00356A                     
  8157                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  8158   00356A  0E61               	movlw	low _motorL
  8159   00356C  6E20               	movwf	GreenMove@mL^0,c
  8160   00356E  0E01               	movlw	high _motorL
  8161   003570  6E21               	movwf	(GreenMove@mL+1)^0,c
  8162   003572  0E58               	movlw	low _motorR
  8163   003574  6E22               	movwf	GreenMove@mR^0,c
  8164   003576  0E01               	movlw	high _motorR
  8165   003578  6E23               	movwf	(GreenMove@mR+1)^0,c
  8166   00357A  ECF9  F02F         	call	_GreenMove	;wreg free
  8167                           
  8168                           ;Memory.c: 14:             Backhalfblock(&motorL, &motorR);
  8169   00357E  0E61               	movlw	low _motorL
  8170   003580  6E1A               	movwf	Backhalfblock@mL^0,c
  8171   003582  0E01               	movlw	high _motorL
  8172   003584  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8173   003586  0E58               	movlw	low _motorR
  8174   003588  6E1C               	movwf	Backhalfblock@mR^0,c
  8175   00358A  0E01               	movlw	high _motorR
  8176   00358C  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8177   00358E  ECC8  F02B         	call	_Backhalfblock	;wreg free
  8178                           
  8179                           ;Memory.c: 15:         }
  8180   003592  EFCD  F01B         	goto	l5290
  8181   003596                     l5266:
  8182   003596  502B               	movf	go_Home@i^0,w,c
  8183   003598  2424               	addwf	go_Home@WayBack^0,w,c
  8184   00359A  6E28               	movwf	??_go_Home^0,c
  8185   00359C  502C               	movf	(go_Home@i+1)^0,w,c
  8186   00359E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8187   0035A0  6E29               	movwf	(??_go_Home+1)^0,c
  8188   0035A2  0EFF               	movlw	255
  8189   0035A4  2428               	addwf	??_go_Home^0,w,c
  8190   0035A6  6ED9               	movwf	fsr2l,c
  8191   0035A8  0EFF               	movlw	255
  8192   0035AA  2029               	addwfc	(??_go_Home+1)^0,w,c
  8193   0035AC  6EDA               	movwf	fsr2h,c
  8194   0035AE  0E02               	movlw	2
  8195   0035B0  18DE               	xorwf	postinc2,w,c
  8196   0035B2  A4D8               	btfss	status,2,c
  8197   0035B4  EFDE  F01A         	goto	u5021
  8198   0035B8  EFE0  F01A         	goto	u5020
  8199   0035BC                     u5021:
  8200   0035BC  EFF6  F01A         	goto	l5270
  8201   0035C0                     u5020:
  8202   0035C0                     
  8203                           ;Memory.c: 18:             ReverseOrangeMove(&motorL, &motorR);
  8204   0035C0  0E61               	movlw	low _motorL
  8205   0035C2  6E20               	movwf	ReverseOrangeMove@mL^0,c
  8206   0035C4  0E01               	movlw	high _motorL
  8207   0035C6  6E21               	movwf	(ReverseOrangeMove@mL+1)^0,c
  8208   0035C8  0E58               	movlw	low _motorR
  8209   0035CA  6E22               	movwf	ReverseOrangeMove@mR^0,c
  8210   0035CC  0E01               	movlw	high _motorR
  8211   0035CE  6E23               	movwf	(ReverseOrangeMove@mR+1)^0,c
  8212   0035D0  EC27  F02D         	call	_ReverseOrangeMove	;wreg free
  8213                           
  8214                           ;Memory.c: 19:             Backhalfblock(&motorL, &motorR);
  8215   0035D4  0E61               	movlw	low _motorL
  8216   0035D6  6E1A               	movwf	Backhalfblock@mL^0,c
  8217   0035D8  0E01               	movlw	high _motorL
  8218   0035DA  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8219   0035DC  0E58               	movlw	low _motorR
  8220   0035DE  6E1C               	movwf	Backhalfblock@mR^0,c
  8221   0035E0  0E01               	movlw	high _motorR
  8222   0035E2  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8223   0035E4  ECC8  F02B         	call	_Backhalfblock	;wreg free
  8224                           
  8225                           ;Memory.c: 20:         }
  8226   0035E8  EFCD  F01B         	goto	l5290
  8227   0035EC                     l5270:
  8228   0035EC  502B               	movf	go_Home@i^0,w,c
  8229   0035EE  2424               	addwf	go_Home@WayBack^0,w,c
  8230   0035F0  6E28               	movwf	??_go_Home^0,c
  8231   0035F2  502C               	movf	(go_Home@i+1)^0,w,c
  8232   0035F4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8233   0035F6  6E29               	movwf	(??_go_Home+1)^0,c
  8234   0035F8  0EFF               	movlw	255
  8235   0035FA  2428               	addwf	??_go_Home^0,w,c
  8236   0035FC  6ED9               	movwf	fsr2l,c
  8237   0035FE  0EFF               	movlw	255
  8238   003600  2029               	addwfc	(??_go_Home+1)^0,w,c
  8239   003602  6EDA               	movwf	fsr2h,c
  8240   003604  0E03               	movlw	3
  8241   003606  18DE               	xorwf	postinc2,w,c
  8242   003608  A4D8               	btfss	status,2,c
  8243   00360A  EF09  F01B         	goto	u5031
  8244   00360E  EF0B  F01B         	goto	u5030
  8245   003612                     u5031:
  8246   003612  EF21  F01B         	goto	l5274
  8247   003616                     u5030:
  8248   003616                     
  8249                           ;Memory.c: 23:             ReverseYellow(&motorL, &motorR);
  8250   003616  0E61               	movlw	low _motorL
  8251   003618  6E20               	movwf	ReverseYellow@mL^0,c
  8252   00361A  0E01               	movlw	high _motorL
  8253   00361C  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8254   00361E  0E58               	movlw	low _motorR
  8255   003620  6E22               	movwf	ReverseYellow@mR^0,c
  8256   003622  0E01               	movlw	high _motorR
  8257   003624  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8258   003626  EC90  F026         	call	_ReverseYellow	;wreg free
  8259                           
  8260                           ;Memory.c: 24:             Backhalfblock(&motorL, &motorR);
  8261   00362A  0E61               	movlw	low _motorL
  8262   00362C  6E1A               	movwf	Backhalfblock@mL^0,c
  8263   00362E  0E01               	movlw	high _motorL
  8264   003630  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8265   003632  0E58               	movlw	low _motorR
  8266   003634  6E1C               	movwf	Backhalfblock@mR^0,c
  8267   003636  0E01               	movlw	high _motorR
  8268   003638  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8269   00363A  ECC8  F02B         	call	_Backhalfblock	;wreg free
  8270                           
  8271                           ;Memory.c: 25:         }
  8272   00363E  EFCD  F01B         	goto	l5290
  8273   003642                     l5274:
  8274   003642  502B               	movf	go_Home@i^0,w,c
  8275   003644  2424               	addwf	go_Home@WayBack^0,w,c
  8276   003646  6E28               	movwf	??_go_Home^0,c
  8277   003648  502C               	movf	(go_Home@i+1)^0,w,c
  8278   00364A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8279   00364C  6E29               	movwf	(??_go_Home+1)^0,c
  8280   00364E  0EFF               	movlw	255
  8281   003650  2428               	addwf	??_go_Home^0,w,c
  8282   003652  6ED9               	movwf	fsr2l,c
  8283   003654  0EFF               	movlw	255
  8284   003656  2029               	addwfc	(??_go_Home+1)^0,w,c
  8285   003658  6EDA               	movwf	fsr2h,c
  8286   00365A  0E04               	movlw	4
  8287   00365C  18DE               	xorwf	postinc2,w,c
  8288   00365E  A4D8               	btfss	status,2,c
  8289   003660  EF34  F01B         	goto	u5041
  8290   003664  EF36  F01B         	goto	u5040
  8291   003668                     u5041:
  8292   003668  EF4C  F01B         	goto	l5278
  8293   00366C                     u5040:
  8294   00366C                     
  8295                           ;Memory.c: 27:             homeReverse(&motorL, &motorR);
  8296   00366C  0E61               	movlw	low _motorL
  8297   00366E  6E1A               	movwf	homeReverse@mL^0,c
  8298   003670  0E01               	movlw	high _motorL
  8299   003672  6E1B               	movwf	(homeReverse@mL+1)^0,c
  8300   003674  0E58               	movlw	low _motorR
  8301   003676  6E1C               	movwf	homeReverse@mR^0,c
  8302   003678  0E01               	movlw	high _motorR
  8303   00367A  6E1D               	movwf	(homeReverse@mR+1)^0,c
  8304   00367C  ECBC  F02E         	call	_homeReverse	;wreg free
  8305                           
  8306                           ;Memory.c: 28:             BlueMove(&motorL, &motorR);
  8307   003680  0E61               	movlw	low _motorL
  8308   003682  6E20               	movwf	BlueMove@mL^0,c
  8309   003684  0E01               	movlw	high _motorL
  8310   003686  6E21               	movwf	(BlueMove@mL+1)^0,c
  8311   003688  0E58               	movlw	low _motorR
  8312   00368A  6E22               	movwf	BlueMove@mR^0,c
  8313   00368C  0E01               	movlw	high _motorR
  8314   00368E  6E23               	movwf	(BlueMove@mR+1)^0,c
  8315   003690  ECEC  F029         	call	_BlueMove	;wreg free
  8316                           
  8317                           ;Memory.c: 30:         }
  8318   003694  EFCD  F01B         	goto	l5290
  8319   003698                     l5278:
  8320   003698  502B               	movf	go_Home@i^0,w,c
  8321   00369A  2424               	addwf	go_Home@WayBack^0,w,c
  8322   00369C  6E28               	movwf	??_go_Home^0,c
  8323   00369E  502C               	movf	(go_Home@i+1)^0,w,c
  8324   0036A0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8325   0036A2  6E29               	movwf	(??_go_Home+1)^0,c
  8326   0036A4  0EFF               	movlw	255
  8327   0036A6  2428               	addwf	??_go_Home^0,w,c
  8328   0036A8  6ED9               	movwf	fsr2l,c
  8329   0036AA  0EFF               	movlw	255
  8330   0036AC  2029               	addwfc	(??_go_Home+1)^0,w,c
  8331   0036AE  6EDA               	movwf	fsr2h,c
  8332   0036B0  0E05               	movlw	5
  8333   0036B2  18DE               	xorwf	postinc2,w,c
  8334   0036B4  A4D8               	btfss	status,2,c
  8335   0036B6  EF5F  F01B         	goto	u5051
  8336   0036BA  EF61  F01B         	goto	u5050
  8337   0036BE                     u5051:
  8338   0036BE  EF77  F01B         	goto	l5282
  8339   0036C2                     u5050:
  8340   0036C2                     
  8341                           ;Memory.c: 33:             RedMove(&motorL, &motorR);
  8342   0036C2  0E61               	movlw	low _motorL
  8343   0036C4  6E20               	movwf	RedMove@mL^0,c
  8344   0036C6  0E01               	movlw	high _motorL
  8345   0036C8  6E21               	movwf	(RedMove@mL+1)^0,c
  8346   0036CA  0E58               	movlw	low _motorR
  8347   0036CC  6E22               	movwf	RedMove@mR^0,c
  8348   0036CE  0E01               	movlw	high _motorR
  8349   0036D0  6E23               	movwf	(RedMove@mR+1)^0,c
  8350   0036D2  ECDA  F02F         	call	_RedMove	;wreg free
  8351                           
  8352                           ;Memory.c: 34:             Backhalfblock(&motorL, &motorR);
  8353   0036D6  0E61               	movlw	low _motorL
  8354   0036D8  6E1A               	movwf	Backhalfblock@mL^0,c
  8355   0036DA  0E01               	movlw	high _motorL
  8356   0036DC  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8357   0036DE  0E58               	movlw	low _motorR
  8358   0036E0  6E1C               	movwf	Backhalfblock@mR^0,c
  8359   0036E2  0E01               	movlw	high _motorR
  8360   0036E4  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8361   0036E6  ECC8  F02B         	call	_Backhalfblock	;wreg free
  8362                           
  8363                           ;Memory.c: 35:         }
  8364   0036EA  EFCD  F01B         	goto	l5290
  8365   0036EE                     l5282:
  8366   0036EE  502B               	movf	go_Home@i^0,w,c
  8367   0036F0  2424               	addwf	go_Home@WayBack^0,w,c
  8368   0036F2  6E28               	movwf	??_go_Home^0,c
  8369   0036F4  502C               	movf	(go_Home@i+1)^0,w,c
  8370   0036F6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8371   0036F8  6E29               	movwf	(??_go_Home+1)^0,c
  8372   0036FA  0EFF               	movlw	255
  8373   0036FC  2428               	addwf	??_go_Home^0,w,c
  8374   0036FE  6ED9               	movwf	fsr2l,c
  8375   003700  0EFF               	movlw	255
  8376   003702  2029               	addwfc	(??_go_Home+1)^0,w,c
  8377   003704  6EDA               	movwf	fsr2h,c
  8378   003706  0E06               	movlw	6
  8379   003708  18DE               	xorwf	postinc2,w,c
  8380   00370A  A4D8               	btfss	status,2,c
  8381   00370C  EF8A  F01B         	goto	u5061
  8382   003710  EF8C  F01B         	goto	u5060
  8383   003714                     u5061:
  8384   003714  EFA2  F01B         	goto	l5286
  8385   003718                     u5060:
  8386   003718                     
  8387                           ;Memory.c: 38:             ReverseLightBlueMove(&motorL, &motorR);
  8388   003718  0E61               	movlw	low _motorL
  8389   00371A  6E20               	movwf	ReverseLightBlueMove@mL^0,c
  8390   00371C  0E01               	movlw	high _motorL
  8391   00371E  6E21               	movwf	(ReverseLightBlueMove@mL+1)^0,c
  8392   003720  0E58               	movlw	low _motorR
  8393   003722  6E22               	movwf	ReverseLightBlueMove@mR^0,c
  8394   003724  0E01               	movlw	high _motorR
  8395   003726  6E23               	movwf	(ReverseLightBlueMove@mR+1)^0,c
  8396   003728  EC50  F02D         	call	_ReverseLightBlueMove	;wreg free
  8397                           
  8398                           ;Memory.c: 39:             Backhalfblock(&motorL, &motorR);
  8399   00372C  0E61               	movlw	low _motorL
  8400   00372E  6E1A               	movwf	Backhalfblock@mL^0,c
  8401   003730  0E01               	movlw	high _motorL
  8402   003732  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8403   003734  0E58               	movlw	low _motorR
  8404   003736  6E1C               	movwf	Backhalfblock@mR^0,c
  8405   003738  0E01               	movlw	high _motorR
  8406   00373A  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8407   00373C  ECC8  F02B         	call	_Backhalfblock	;wreg free
  8408                           
  8409                           ;Memory.c: 40:         }
  8410   003740  EFCD  F01B         	goto	l5290
  8411   003744                     l5286:
  8412   003744  502B               	movf	go_Home@i^0,w,c
  8413   003746  2424               	addwf	go_Home@WayBack^0,w,c
  8414   003748  6E28               	movwf	??_go_Home^0,c
  8415   00374A  502C               	movf	(go_Home@i+1)^0,w,c
  8416   00374C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8417   00374E  6E29               	movwf	(??_go_Home+1)^0,c
  8418   003750  0EFF               	movlw	255
  8419   003752  2428               	addwf	??_go_Home^0,w,c
  8420   003754  6ED9               	movwf	fsr2l,c
  8421   003756  0EFF               	movlw	255
  8422   003758  2029               	addwfc	(??_go_Home+1)^0,w,c
  8423   00375A  6EDA               	movwf	fsr2h,c
  8424   00375C  0E07               	movlw	7
  8425   00375E  18DE               	xorwf	postinc2,w,c
  8426   003760  A4D8               	btfss	status,2,c
  8427   003762  EFB5  F01B         	goto	u5071
  8428   003766  EFB7  F01B         	goto	u5070
  8429   00376A                     u5071:
  8430   00376A  EFCD  F01B         	goto	l430
  8431   00376E                     u5070:
  8432   00376E                     
  8433                           ;Memory.c: 43:             ReversePink(&motorL, &motorR);
  8434   00376E  0E61               	movlw	low _motorL
  8435   003770  6E20               	movwf	ReversePink@mL^0,c
  8436   003772  0E01               	movlw	high _motorL
  8437   003774  6E21               	movwf	(ReversePink@mL+1)^0,c
  8438   003776  0E58               	movlw	low _motorR
  8439   003778  6E22               	movwf	ReversePink@mR^0,c
  8440   00377A  0E01               	movlw	high _motorR
  8441   00377C  6E23               	movwf	(ReversePink@mR+1)^0,c
  8442   00377E  ECEB  F026         	call	_ReversePink	;wreg free
  8443                           
  8444                           ;Memory.c: 44:             Backhalfblock(&motorL, &motorR);
  8445   003782  0E61               	movlw	low _motorL
  8446   003784  6E1A               	movwf	Backhalfblock@mL^0,c
  8447   003786  0E01               	movlw	high _motorL
  8448   003788  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8449   00378A  0E58               	movlw	low _motorR
  8450   00378C  6E1C               	movwf	Backhalfblock@mR^0,c
  8451   00378E  0E01               	movlw	high _motorR
  8452   003790  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8453   003792  ECC8  F02B         	call	_Backhalfblock	;wreg free
  8454   003796  EFCD  F01B         	goto	l5290
  8455   00379A                     l430:
  8456   00379A                     l5290:
  8457                           
  8458                           ;Memory.c: 47:     }
  8459   00379A  062B               	decf	go_Home@i^0,f,c
  8460   00379C  A0D8               	btfss	status,0,c
  8461   00379E  062C               	decf	(go_Home@i+1)^0,f,c
  8462   0037A0  EF81  F01A         	goto	l5256
  8463   0037A4                     l5294:
  8464                           
  8465                           ;Memory.c: 48:     stop(&motorL, &motorR);
  8466   0037A4  0E61               	movlw	low _motorL
  8467   0037A6  6E14               	movwf	stop@mL^0,c
  8468   0037A8  0E01               	movlw	high _motorL
  8469   0037AA  6E15               	movwf	(stop@mL+1)^0,c
  8470   0037AC  0E58               	movlw	low _motorR
  8471   0037AE  6E16               	movwf	stop@mR^0,c
  8472   0037B0  0E01               	movlw	high _motorR
  8473   0037B2  6E17               	movwf	(stop@mR+1)^0,c
  8474   0037B4  EC70  F029         	call	_stop	;wreg free
  8475   0037B8                     
  8476                           ;Memory.c: 49:     run_flag=0;
  8477   0037B8  0E00               	movlw	0
  8478   0037BA  0101               	movlb	1	; () banked
  8479   0037BC  6FD9               	movwf	(_run_flag+1)& (0+255),b
  8480   0037BE  0E00               	movlw	0
  8481   0037C0  6FD8               	movwf	_run_flag& (0+255),b
  8482   0037C2                     
  8483                           ; BSR set to: 1
  8484   0037C2  0012               	return		;funcret
  8485   0037C4                     __end_of_go_Home:
  8486                           	callstack 0
  8487                           
  8488 ;; *************** function _timed_forward *****************
  8489 ;; Defined at:
  8490 ;;		line 164 in file "dc_motor.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8493 ;;		 -> motorL(9), 
  8494 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8495 ;;		 -> motorR(9), 
  8496 ;;  time            2   23[COMRAM] int 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8508 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;Total ram usage:        8 bytes
  8513 ;; Hardware stack levels used: 1
  8514 ;; Hardware stack levels required when called: 3
  8515 ;; This function calls:
  8516 ;;		_delayed_ms
  8517 ;;		_setMotorPWM
  8518 ;; This function is called by:
  8519 ;;		_go_Home
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text36
  8524   004E8C                     __ptext36:
  8525                           	callstack 0
  8526   004E8C                     _timed_forward:
  8527                           	callstack 26
  8528   004E8C                     
  8529                           ;dc_motor.c: 164: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 165: {;dc_motor.c: 167:     mL->direction =1;
  8530   004E8C  EE20 F001          	lfsr	2,1
  8531   004E90  5014               	movf	timed_forward@mL^0,w,c
  8532   004E92  26D9               	addwf	fsr2l,f,c
  8533   004E94  5015               	movf	(timed_forward@mL+1)^0,w,c
  8534   004E96  22DA               	addwfc	fsr2h,f,c
  8535   004E98  0E01               	movlw	1
  8536   004E9A  6EDF               	movwf	indf2,c
  8537                           
  8538                           ;dc_motor.c: 168:     mR->direction =1;
  8539   004E9C  EE20 F001          	lfsr	2,1
  8540   004EA0  5016               	movf	timed_forward@mR^0,w,c
  8541   004EA2  26D9               	addwf	fsr2l,f,c
  8542   004EA4  5017               	movf	(timed_forward@mR+1)^0,w,c
  8543   004EA6  22DA               	addwfc	fsr2h,f,c
  8544   004EA8  0E01               	movlw	1
  8545   004EAA  6EDF               	movwf	indf2,c
  8546                           
  8547                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  8548   004EAC  EF7C  F027         	goto	l5090
  8549   004EB0                     l5082:
  8550                           
  8551                           ;dc_motor.c: 171:         mL->power+=10;
  8552   004EB0  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8553   004EB4  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8554   004EB8  0E0A               	movlw	10
  8555   004EBA  26DF               	addwf	indf2,f,c
  8556                           
  8557                           ;dc_motor.c: 172:         mR->power+=10;
  8558   004EBC  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8559   004EC0  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8560   004EC4  0E0A               	movlw	10
  8561   004EC6  26DF               	addwf	indf2,f,c
  8562   004EC8                     
  8563                           ;dc_motor.c: 174:         setMotorPWM(mL);
  8564   004EC8  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8565   004ECC  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8566   004ED0  EC3F  F023         	call	_setMotorPWM	;wreg free
  8567   004ED4                     
  8568                           ;dc_motor.c: 175:         setMotorPWM(mR);
  8569   004ED4  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8570   004ED8  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8571   004EDC  EC3F  F023         	call	_setMotorPWM	;wreg free
  8572   004EE0                     
  8573                           ;dc_motor.c: 177:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8574   004EE0  0E02               	movlw	2
  8575   004EE2  6E1B               	movwf	(??_timed_forward+1)^0,c
  8576   004EE4  0EA0               	movlw	160
  8577   004EE6  6E1A               	movwf	??_timed_forward^0,c
  8578   004EE8  0E92               	movlw	146
  8579   004EEA                     u5927:
  8580   004EEA  2EE8               	decfsz	wreg,f,c
  8581   004EEC  D7FE               	bra	u5927
  8582   004EEE  2E1A               	decfsz	??_timed_forward^0,f,c
  8583   004EF0  D7FC               	bra	u5927
  8584   004EF2  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8585   004EF4  D7FA               	bra	u5927
  8586   004EF6  D000               	nop2	
  8587   004EF8                     l5090:
  8588   004EF8  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8589   004EFC  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8590   004F00  0E32               	movlw	50
  8591   004F02  60DF               	cpfslt	indf2,c
  8592   004F04  EF86  F027         	goto	u4931
  8593   004F08  EF88  F027         	goto	u4930
  8594   004F0C                     u4931:
  8595   004F0C  EF94  F027         	goto	l5094
  8596   004F10                     u4930:
  8597   004F10  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8598   004F14  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8599   004F18  0E31               	movlw	49
  8600   004F1A  64DF               	cpfsgt	indf2,c
  8601   004F1C  EF92  F027         	goto	u4941
  8602   004F20  EF94  F027         	goto	u4940
  8603   004F24                     u4941:
  8604   004F24  EF58  F027         	goto	l5082
  8605   004F28                     u4940:
  8606   004F28                     l5094:
  8607                           
  8608                           ;dc_motor.c: 179:     delayed_ms(time);
  8609   004F28  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8610   004F2C  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8611   004F30  EC34  F030         	call	_delayed_ms	;wreg free
  8612   004F34  0012               	return		;funcret
  8613   004F36                     __end_of_timed_forward:
  8614                           	callstack 0
  8615                           
  8616 ;; *************** function _delayed_ms *****************
  8617 ;; Defined at:
  8618 ;;		line 41 in file "timers.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  time            2    0[COMRAM] int 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  i               2    3[COMRAM] unsigned int 
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  1    wreg      void 
  8625 ;; Registers used:
  8626 ;;		wreg, status,2, status,0
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8636 ;;Total ram usage:        5 bytes
  8637 ;; Hardware stack levels used: 1
  8638 ;; Hardware stack levels required when called: 1
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		_timed_forward
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text37
  8647   006068                     __ptext37:
  8648                           	callstack 0
  8649   006068                     _delayed_ms:
  8650                           	callstack 27
  8651   006068                     
  8652                           ;timers.c: 42:     for(unsigned int i=0;i<time;i++){
  8653   006068  0E00               	movlw	0
  8654   00606A  6E05               	movwf	(delayed_ms@i+1)^0,c
  8655   00606C  0E00               	movlw	0
  8656   00606E  6E04               	movwf	delayed_ms@i^0,c
  8657   006070  EF44  F030         	goto	l753
  8658   006074                     l4742:
  8659                           
  8660                           ;timers.c: 43:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8661   006074  0E0B               	movlw	11
  8662   006076  6E03               	movwf	??_delayed_ms^0,c
  8663   006078  0E62               	movlw	98
  8664   00607A                     u5937:
  8665   00607A  2EE8               	decfsz	wreg,f,c
  8666   00607C  D7FE               	bra	u5937
  8667   00607E  2E03               	decfsz	??_delayed_ms^0,f,c
  8668   006080  D7FC               	bra	u5937
  8669   006082  D000               	nop2	
  8670   006084                     
  8671                           ;timers.c: 44:     }
  8672   006084  4A04               	infsnz	delayed_ms@i^0,f,c
  8673   006086  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8674   006088                     l753:
  8675   006088  5001               	movf	delayed_ms@time^0,w,c
  8676   00608A  5C04               	subwf	delayed_ms@i^0,w,c
  8677   00608C  5002               	movf	(delayed_ms@time+1)^0,w,c
  8678   00608E  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8679   006090  A0D8               	btfss	status,0,c
  8680   006092  EF4D  F030         	goto	u4481
  8681   006096  EF4F  F030         	goto	u4480
  8682   00609A                     u4481:
  8683   00609A  EF3A  F030         	goto	l4742
  8684   00609E                     u4480:
  8685   00609E  0012               	return		;funcret
  8686   0060A0                     __end_of_delayed_ms:
  8687                           	callstack 0
  8688                           
  8689 ;; *************** function _homeReverse *****************
  8690 ;; Defined at:
  8691 ;;		line 233 in file "dc_motor.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8694 ;;		 -> motorL(9), 
  8695 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8696 ;;		 -> motorR(9), 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8711 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8712 ;;Total ram usage:        6 bytes
  8713 ;; Hardware stack levels used: 1
  8714 ;; Hardware stack levels required when called: 4
  8715 ;; This function calls:
  8716 ;;		_fullSpeedBack
  8717 ;;		_stop
  8718 ;; This function is called by:
  8719 ;;		_go_Home
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text38
  8724   005D78                     __ptext38:
  8725                           	callstack 0
  8726   005D78                     _homeReverse:
  8727                           	callstack 25
  8728   005D78                     
  8729                           ;dc_motor.c: 234:     fullSpeedBack(mL,mR);
  8730   005D78  C01A  F014         	movff	homeReverse@mL,fullSpeedBack@mL
  8731   005D7C  C01B  F015         	movff	homeReverse@mL+1,fullSpeedBack@mL+1
  8732   005D80  C01C  F016         	movff	homeReverse@mR,fullSpeedBack@mR
  8733   005D84  C01D  F017         	movff	homeReverse@mR+1,fullSpeedBack@mR+1
  8734   005D88  EC8E  F028         	call	_fullSpeedBack	;wreg free
  8735   005D8C                     
  8736                           ;dc_motor.c: 235:     _delay((unsigned long)((10)*(64000000/4000.0)));
  8737   005D8C  0ED0               	movlw	208
  8738   005D8E  6E1E               	movwf	??_homeReverse^0,c
  8739   005D90  0ECA               	movlw	202
  8740   005D92                     u5947:
  8741   005D92  2EE8               	decfsz	wreg,f,c
  8742   005D94  D7FE               	bra	u5947
  8743   005D96  2E1E               	decfsz	??_homeReverse^0,f,c
  8744   005D98  D7FC               	bra	u5947
  8745   005D9A                     
  8746                           ;dc_motor.c: 236:     stop(&motorL, &motorR);
  8747   005D9A  0E61               	movlw	low _motorL
  8748   005D9C  6E14               	movwf	stop@mL^0,c
  8749   005D9E  0E01               	movlw	high _motorL
  8750   005DA0  6E15               	movwf	(stop@mL+1)^0,c
  8751   005DA2  0E58               	movlw	low _motorR
  8752   005DA4  6E16               	movwf	stop@mR^0,c
  8753   005DA6  0E01               	movlw	high _motorR
  8754   005DA8  6E17               	movwf	(stop@mR+1)^0,c
  8755   005DAA  EC70  F029         	call	_stop	;wreg free
  8756                           
  8757                           ;dc_motor.c: 237:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8758   005DAE  0E05               	movlw	5
  8759   005DB0  6E1F               	movwf	(??_homeReverse+1)^0,c
  8760   005DB2  0E0F               	movlw	15
  8761   005DB4  6E1E               	movwf	??_homeReverse^0,c
  8762   005DB6  0EF1               	movlw	241
  8763   005DB8                     u5957:
  8764   005DB8  2EE8               	decfsz	wreg,f,c
  8765   005DBA  D7FE               	bra	u5957
  8766   005DBC  2E1E               	decfsz	??_homeReverse^0,f,c
  8767   005DBE  D7FC               	bra	u5957
  8768   005DC0  2E1F               	decfsz	(??_homeReverse+1)^0,f,c
  8769   005DC2  D7FA               	bra	u5957
  8770   005DC4  F000               	nop	
  8771   005DC6  0012               	return		;funcret
  8772   005DC8                     __end_of_homeReverse:
  8773                           	callstack 0
  8774                           
  8775 ;; *************** function _ReverseYellow *****************
  8776 ;; Defined at:
  8777 ;;		line 362 in file "dc_motor.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8780 ;;		 -> motorL(9), 
  8781 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8782 ;;		 -> motorR(9), 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;Total ram usage:        4 bytes
  8799 ;; Hardware stack levels used: 1
  8800 ;; Hardware stack levels required when called: 5
  8801 ;; This function calls:
  8802 ;;		_ForwardOneBlock
  8803 ;;		_reverseDetect
  8804 ;;		_turnRight45
  8805 ;; This function is called by:
  8806 ;;		_go_Home
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text39
  8811   004D20                     __ptext39:
  8812                           	callstack 0
  8813   004D20                     _ReverseYellow:
  8814                           	callstack 24
  8815   004D20                     
  8816                           ;dc_motor.c: 363:     reverseDetect(&motorL, &motorR);
  8817   004D20  0E61               	movlw	low _motorL
  8818   004D22  6E1A               	movwf	reverseDetect@mL^0,c
  8819   004D24  0E01               	movlw	high _motorL
  8820   004D26  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8821   004D28  0E58               	movlw	low _motorR
  8822   004D2A  6E1C               	movwf	reverseDetect@mR^0,c
  8823   004D2C  0E01               	movlw	high _motorR
  8824   004D2E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8825   004D30  ECF5  F02B         	call	_reverseDetect	;wreg free
  8826                           
  8827                           ;dc_motor.c: 365:     turnRight45(&motorL, &motorR);
  8828   004D34  0E61               	movlw	low _motorL
  8829   004D36  6E1A               	movwf	turnRight45@mL^0,c
  8830   004D38  0E01               	movlw	high _motorL
  8831   004D3A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8832   004D3C  0E58               	movlw	low _motorR
  8833   004D3E  6E1C               	movwf	turnRight45@mR^0,c
  8834   004D40  0E01               	movlw	high _motorR
  8835   004D42  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8836   004D44  ECE4  F02E         	call	_turnRight45	;wreg free
  8837                           
  8838                           ;dc_motor.c: 366:     turnRight45(&motorL, &motorR);
  8839   004D48  0E61               	movlw	low _motorL
  8840   004D4A  6E1A               	movwf	turnRight45@mL^0,c
  8841   004D4C  0E01               	movlw	high _motorL
  8842   004D4E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8843   004D50  0E58               	movlw	low _motorR
  8844   004D52  6E1C               	movwf	turnRight45@mR^0,c
  8845   004D54  0E01               	movlw	high _motorR
  8846   004D56  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8847   004D58  ECE4  F02E         	call	_turnRight45	;wreg free
  8848                           
  8849                           ;dc_motor.c: 368:     ForwardOneBlock(&motorL, &motorR);
  8850   004D5C  0E61               	movlw	low _motorL
  8851   004D5E  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8852   004D60  0E01               	movlw	high _motorL
  8853   004D62  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8854   004D64  0E58               	movlw	low _motorR
  8855   004D66  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8856   004D68  0E01               	movlw	high _motorR
  8857   004D6A  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8858   004D6C  EC4F  F02C         	call	_ForwardOneBlock	;wreg free
  8859                           
  8860                           ;dc_motor.c: 369:     reverseDetect(&motorL, &motorR);
  8861   004D70  0E61               	movlw	low _motorL
  8862   004D72  6E1A               	movwf	reverseDetect@mL^0,c
  8863   004D74  0E01               	movlw	high _motorL
  8864   004D76  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8865   004D78  0E58               	movlw	low _motorR
  8866   004D7A  6E1C               	movwf	reverseDetect@mR^0,c
  8867   004D7C  0E01               	movlw	high _motorR
  8868   004D7E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8869   004D80  ECF5  F02B         	call	_reverseDetect	;wreg free
  8870                           
  8871                           ;dc_motor.c: 371:     turnRight45(&motorL, &motorR);
  8872   004D84  0E61               	movlw	low _motorL
  8873   004D86  6E1A               	movwf	turnRight45@mL^0,c
  8874   004D88  0E01               	movlw	high _motorL
  8875   004D8A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8876   004D8C  0E58               	movlw	low _motorR
  8877   004D8E  6E1C               	movwf	turnRight45@mR^0,c
  8878   004D90  0E01               	movlw	high _motorR
  8879   004D92  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8880   004D94  ECE4  F02E         	call	_turnRight45	;wreg free
  8881                           
  8882                           ;dc_motor.c: 372:     turnRight45(&motorL, &motorR);
  8883   004D98  0E61               	movlw	low _motorL
  8884   004D9A  6E1A               	movwf	turnRight45@mL^0,c
  8885   004D9C  0E01               	movlw	high _motorL
  8886   004D9E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8887   004DA0  0E58               	movlw	low _motorR
  8888   004DA2  6E1C               	movwf	turnRight45@mR^0,c
  8889   004DA4  0E01               	movlw	high _motorR
  8890   004DA6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8891   004DA8  ECE4  F02E         	call	_turnRight45	;wreg free
  8892                           
  8893                           ;dc_motor.c: 373:     turnRight45(&motorL, &motorR);
  8894   004DAC  0E61               	movlw	low _motorL
  8895   004DAE  6E1A               	movwf	turnRight45@mL^0,c
  8896   004DB0  0E01               	movlw	high _motorL
  8897   004DB2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8898   004DB4  0E58               	movlw	low _motorR
  8899   004DB6  6E1C               	movwf	turnRight45@mR^0,c
  8900   004DB8  0E01               	movlw	high _motorR
  8901   004DBA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8902   004DBC  ECE4  F02E         	call	_turnRight45	;wreg free
  8903                           
  8904                           ;dc_motor.c: 374:     turnRight45(&motorL, &motorR);
  8905   004DC0  0E61               	movlw	low _motorL
  8906   004DC2  6E1A               	movwf	turnRight45@mL^0,c
  8907   004DC4  0E01               	movlw	high _motorL
  8908   004DC6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8909   004DC8  0E58               	movlw	low _motorR
  8910   004DCA  6E1C               	movwf	turnRight45@mR^0,c
  8911   004DCC  0E01               	movlw	high _motorR
  8912   004DCE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8913   004DD0  ECE4  F02E         	call	_turnRight45	;wreg free
  8914   004DD4  0012               	return		;funcret
  8915   004DD6                     __end_of_ReverseYellow:
  8916                           	callstack 0
  8917                           
  8918 ;; *************** function _ReversePink *****************
  8919 ;; Defined at:
  8920 ;;		line 378 in file "dc_motor.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8923 ;;		 -> motorL(9), 
  8924 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8925 ;;		 -> motorR(9), 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8940 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8941 ;;Total ram usage:        4 bytes
  8942 ;; Hardware stack levels used: 1
  8943 ;; Hardware stack levels required when called: 5
  8944 ;; This function calls:
  8945 ;;		_ForwardOneBlock
  8946 ;;		_reverseDetect
  8947 ;;		_turnLeft45
  8948 ;; This function is called by:
  8949 ;;		_go_Home
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text40
  8954   004DD6                     __ptext40:
  8955                           	callstack 0
  8956   004DD6                     _ReversePink:
  8957                           	callstack 24
  8958   004DD6                     
  8959                           ;dc_motor.c: 379:     reverseDetect(&motorL, &motorR);
  8960   004DD6  0E61               	movlw	low _motorL
  8961   004DD8  6E1A               	movwf	reverseDetect@mL^0,c
  8962   004DDA  0E01               	movlw	high _motorL
  8963   004DDC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8964   004DDE  0E58               	movlw	low _motorR
  8965   004DE0  6E1C               	movwf	reverseDetect@mR^0,c
  8966   004DE2  0E01               	movlw	high _motorR
  8967   004DE4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8968   004DE6  ECF5  F02B         	call	_reverseDetect	;wreg free
  8969                           
  8970                           ;dc_motor.c: 380:     turnLeft45(&motorL, &motorR);
  8971   004DEA  0E61               	movlw	low _motorL
  8972   004DEC  6E1A               	movwf	turnLeft45@mL^0,c
  8973   004DEE  0E01               	movlw	high _motorL
  8974   004DF0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8975   004DF2  0E58               	movlw	low _motorR
  8976   004DF4  6E1C               	movwf	turnLeft45@mR^0,c
  8977   004DF6  0E01               	movlw	high _motorR
  8978   004DF8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8979   004DFA  EC0B  F02F         	call	_turnLeft45	;wreg free
  8980                           
  8981                           ;dc_motor.c: 381:     turnLeft45(&motorL, &motorR);
  8982   004DFE  0E61               	movlw	low _motorL
  8983   004E00  6E1A               	movwf	turnLeft45@mL^0,c
  8984   004E02  0E01               	movlw	high _motorL
  8985   004E04  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8986   004E06  0E58               	movlw	low _motorR
  8987   004E08  6E1C               	movwf	turnLeft45@mR^0,c
  8988   004E0A  0E01               	movlw	high _motorR
  8989   004E0C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8990   004E0E  EC0B  F02F         	call	_turnLeft45	;wreg free
  8991                           
  8992                           ;dc_motor.c: 382:     ForwardOneBlock(&motorL, &motorR);
  8993   004E12  0E61               	movlw	low _motorL
  8994   004E14  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8995   004E16  0E01               	movlw	high _motorL
  8996   004E18  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8997   004E1A  0E58               	movlw	low _motorR
  8998   004E1C  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8999   004E1E  0E01               	movlw	high _motorR
  9000   004E20  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  9001   004E22  EC4F  F02C         	call	_ForwardOneBlock	;wreg free
  9002                           
  9003                           ;dc_motor.c: 383:     reverseDetect(&motorL, &motorR);
  9004   004E26  0E61               	movlw	low _motorL
  9005   004E28  6E1A               	movwf	reverseDetect@mL^0,c
  9006   004E2A  0E01               	movlw	high _motorL
  9007   004E2C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9008   004E2E  0E58               	movlw	low _motorR
  9009   004E30  6E1C               	movwf	reverseDetect@mR^0,c
  9010   004E32  0E01               	movlw	high _motorR
  9011   004E34  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9012   004E36  ECF5  F02B         	call	_reverseDetect	;wreg free
  9013                           
  9014                           ;dc_motor.c: 385:     turnLeft45(&motorL, &motorR);
  9015   004E3A  0E61               	movlw	low _motorL
  9016   004E3C  6E1A               	movwf	turnLeft45@mL^0,c
  9017   004E3E  0E01               	movlw	high _motorL
  9018   004E40  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9019   004E42  0E58               	movlw	low _motorR
  9020   004E44  6E1C               	movwf	turnLeft45@mR^0,c
  9021   004E46  0E01               	movlw	high _motorR
  9022   004E48  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9023   004E4A  EC0B  F02F         	call	_turnLeft45	;wreg free
  9024                           
  9025                           ;dc_motor.c: 386:     turnLeft45(&motorL, &motorR);
  9026   004E4E  0E61               	movlw	low _motorL
  9027   004E50  6E1A               	movwf	turnLeft45@mL^0,c
  9028   004E52  0E01               	movlw	high _motorL
  9029   004E54  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9030   004E56  0E58               	movlw	low _motorR
  9031   004E58  6E1C               	movwf	turnLeft45@mR^0,c
  9032   004E5A  0E01               	movlw	high _motorR
  9033   004E5C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9034   004E5E  EC0B  F02F         	call	_turnLeft45	;wreg free
  9035                           
  9036                           ;dc_motor.c: 387:     turnLeft45(&motorL, &motorR);
  9037   004E62  0E61               	movlw	low _motorL
  9038   004E64  6E1A               	movwf	turnLeft45@mL^0,c
  9039   004E66  0E01               	movlw	high _motorL
  9040   004E68  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9041   004E6A  0E58               	movlw	low _motorR
  9042   004E6C  6E1C               	movwf	turnLeft45@mR^0,c
  9043   004E6E  0E01               	movlw	high _motorR
  9044   004E70  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9045   004E72  EC0B  F02F         	call	_turnLeft45	;wreg free
  9046                           
  9047                           ;dc_motor.c: 388:     turnLeft45(&motorL, &motorR);
  9048   004E76  0E61               	movlw	low _motorL
  9049   004E78  6E1A               	movwf	turnLeft45@mL^0,c
  9050   004E7A  0E01               	movlw	high _motorL
  9051   004E7C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9052   004E7E  0E58               	movlw	low _motorR
  9053   004E80  6E1C               	movwf	turnLeft45@mR^0,c
  9054   004E82  0E01               	movlw	high _motorR
  9055   004E84  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9056   004E86  EC0B  F02F         	call	_turnLeft45	;wreg free
  9057   004E8A  0012               	return		;funcret
  9058   004E8C                     __end_of_ReversePink:
  9059                           	callstack 0
  9060                           
  9061 ;; *************** function _ForwardOneBlock *****************
  9062 ;; Defined at:
  9063 ;;		line 249 in file "dc_motor.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9066 ;;		 -> motorL(9), 
  9067 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9068 ;;		 -> motorR(9), 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;Total ram usage:        6 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 4
  9087 ;; This function calls:
  9088 ;;		_fullSpeedAhead
  9089 ;;		_stop
  9090 ;; This function is called by:
  9091 ;;		_ReverseYellow
  9092 ;;		_ReversePink
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text41
  9097   00589E                     __ptext41:
  9098                           	callstack 0
  9099   00589E                     _ForwardOneBlock:
  9100                           	callstack 24
  9101   00589E                     
  9102                           ;dc_motor.c: 250:     fullSpeedAhead(mL,mR);
  9103   00589E  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  9104   0058A2  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  9105   0058A6  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  9106   0058AA  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  9107   0058AE  ECDD  F028         	call	_fullSpeedAhead	;wreg free
  9108   0058B2                     
  9109                           ;dc_motor.c: 251:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  9110   0058B2  0E56               	movlw	86
  9111   0058B4  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  9112   0058B6  0E3A               	movlw	58
  9113   0058B8  6E1E               	movwf	??_ForwardOneBlock^0,c
  9114   0058BA  0EF4               	movlw	244
  9115   0058BC                     u5967:
  9116   0058BC  2EE8               	decfsz	wreg,f,c
  9117   0058BE  D7FE               	bra	u5967
  9118   0058C0  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  9119   0058C2  D7FC               	bra	u5967
  9120   0058C4  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  9121   0058C6  D7FA               	bra	u5967
  9122   0058C8                     
  9123                           ;dc_motor.c: 252:     stop(&motorL, &motorR);
  9124   0058C8  0E61               	movlw	low _motorL
  9125   0058CA  6E14               	movwf	stop@mL^0,c
  9126   0058CC  0E01               	movlw	high _motorL
  9127   0058CE  6E15               	movwf	(stop@mL+1)^0,c
  9128   0058D0  0E58               	movlw	low _motorR
  9129   0058D2  6E16               	movwf	stop@mR^0,c
  9130   0058D4  0E01               	movlw	high _motorR
  9131   0058D6  6E17               	movwf	(stop@mR+1)^0,c
  9132   0058D8  EC70  F029         	call	_stop	;wreg free
  9133                           
  9134                           ;dc_motor.c: 253:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9135   0058DC  0E05               	movlw	5
  9136   0058DE  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  9137   0058E0  0E0F               	movlw	15
  9138   0058E2  6E1E               	movwf	??_ForwardOneBlock^0,c
  9139   0058E4  0EF1               	movlw	241
  9140   0058E6                     u5977:
  9141   0058E6  2EE8               	decfsz	wreg,f,c
  9142   0058E8  D7FE               	bra	u5977
  9143   0058EA  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  9144   0058EC  D7FC               	bra	u5977
  9145   0058EE  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  9146   0058F0  D7FA               	bra	u5977
  9147   0058F2  F000               	nop	
  9148   0058F4  0012               	return		;funcret
  9149   0058F6                     __end_of_ForwardOneBlock:
  9150                           	callstack 0
  9151                           
  9152 ;; *************** function _ReverseOrangeMove *****************
  9153 ;; Defined at:
  9154 ;;		line 392 in file "dc_motor.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9157 ;;		 -> motorL(9), 
  9158 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9159 ;;		 -> motorR(9), 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9174 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9175 ;;Total ram usage:        4 bytes
  9176 ;; Hardware stack levels used: 1
  9177 ;; Hardware stack levels required when called: 5
  9178 ;; This function calls:
  9179 ;;		_reverseDetect
  9180 ;;		_turnLeft45
  9181 ;; This function is called by:
  9182 ;;		_go_Home
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text42
  9187   005A4E                     __ptext42:
  9188                           	callstack 0
  9189   005A4E                     _ReverseOrangeMove:
  9190                           	callstack 24
  9191   005A4E                     
  9192                           ;dc_motor.c: 393:     reverseDetect(&motorL, &motorR);
  9193   005A4E  0E61               	movlw	low _motorL
  9194   005A50  6E1A               	movwf	reverseDetect@mL^0,c
  9195   005A52  0E01               	movlw	high _motorL
  9196   005A54  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9197   005A56  0E58               	movlw	low _motorR
  9198   005A58  6E1C               	movwf	reverseDetect@mR^0,c
  9199   005A5A  0E01               	movlw	high _motorR
  9200   005A5C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9201   005A5E  ECF5  F02B         	call	_reverseDetect	;wreg free
  9202                           
  9203                           ;dc_motor.c: 395:     turnLeft45(&motorL, &motorR);
  9204   005A62  0E61               	movlw	low _motorL
  9205   005A64  6E1A               	movwf	turnLeft45@mL^0,c
  9206   005A66  0E01               	movlw	high _motorL
  9207   005A68  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9208   005A6A  0E58               	movlw	low _motorR
  9209   005A6C  6E1C               	movwf	turnLeft45@mR^0,c
  9210   005A6E  0E01               	movlw	high _motorR
  9211   005A70  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9212   005A72  EC0B  F02F         	call	_turnLeft45	;wreg free
  9213                           
  9214                           ;dc_motor.c: 396:     turnLeft45(&motorL, &motorR);
  9215   005A76  0E61               	movlw	low _motorL
  9216   005A78  6E1A               	movwf	turnLeft45@mL^0,c
  9217   005A7A  0E01               	movlw	high _motorL
  9218   005A7C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9219   005A7E  0E58               	movlw	low _motorR
  9220   005A80  6E1C               	movwf	turnLeft45@mR^0,c
  9221   005A82  0E01               	movlw	high _motorR
  9222   005A84  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9223   005A86  EC0B  F02F         	call	_turnLeft45	;wreg free
  9224                           
  9225                           ;dc_motor.c: 397:     turnLeft45(&motorL, &motorR);
  9226   005A8A  0E61               	movlw	low _motorL
  9227   005A8C  6E1A               	movwf	turnLeft45@mL^0,c
  9228   005A8E  0E01               	movlw	high _motorL
  9229   005A90  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9230   005A92  0E58               	movlw	low _motorR
  9231   005A94  6E1C               	movwf	turnLeft45@mR^0,c
  9232   005A96  0E01               	movlw	high _motorR
  9233   005A98  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9234   005A9A  EC0B  F02F         	call	_turnLeft45	;wreg free
  9235   005A9E  0012               	return		;funcret
  9236   005AA0                     __end_of_ReverseOrangeMove:
  9237                           	callstack 0
  9238                           
  9239 ;; *************** function _ReverseLightBlueMove *****************
  9240 ;; Defined at:
  9241 ;;		line 401 in file "dc_motor.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9244 ;;		 -> motorL(9), 
  9245 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9246 ;;		 -> motorR(9), 
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  1    wreg      void 
  9251 ;; Registers used:
  9252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9261 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9262 ;;Total ram usage:        4 bytes
  9263 ;; Hardware stack levels used: 1
  9264 ;; Hardware stack levels required when called: 5
  9265 ;; This function calls:
  9266 ;;		_reverseDetect
  9267 ;;		_turnRight45
  9268 ;; This function is called by:
  9269 ;;		_go_Home
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text43
  9274   005AA0                     __ptext43:
  9275                           	callstack 0
  9276   005AA0                     _ReverseLightBlueMove:
  9277                           	callstack 24
  9278   005AA0                     
  9279                           ;dc_motor.c: 402:     reverseDetect(&motorL, &motorR);
  9280   005AA0  0E61               	movlw	low _motorL
  9281   005AA2  6E1A               	movwf	reverseDetect@mL^0,c
  9282   005AA4  0E01               	movlw	high _motorL
  9283   005AA6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9284   005AA8  0E58               	movlw	low _motorR
  9285   005AAA  6E1C               	movwf	reverseDetect@mR^0,c
  9286   005AAC  0E01               	movlw	high _motorR
  9287   005AAE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9288   005AB0  ECF5  F02B         	call	_reverseDetect	;wreg free
  9289                           
  9290                           ;dc_motor.c: 404:     turnRight45(&motorL, &motorR);
  9291   005AB4  0E61               	movlw	low _motorL
  9292   005AB6  6E1A               	movwf	turnRight45@mL^0,c
  9293   005AB8  0E01               	movlw	high _motorL
  9294   005ABA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9295   005ABC  0E58               	movlw	low _motorR
  9296   005ABE  6E1C               	movwf	turnRight45@mR^0,c
  9297   005AC0  0E01               	movlw	high _motorR
  9298   005AC2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9299   005AC4  ECE4  F02E         	call	_turnRight45	;wreg free
  9300                           
  9301                           ;dc_motor.c: 405:     turnRight45(&motorL, &motorR);
  9302   005AC8  0E61               	movlw	low _motorL
  9303   005ACA  6E1A               	movwf	turnRight45@mL^0,c
  9304   005ACC  0E01               	movlw	high _motorL
  9305   005ACE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9306   005AD0  0E58               	movlw	low _motorR
  9307   005AD2  6E1C               	movwf	turnRight45@mR^0,c
  9308   005AD4  0E01               	movlw	high _motorR
  9309   005AD6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9310   005AD8  ECE4  F02E         	call	_turnRight45	;wreg free
  9311                           
  9312                           ;dc_motor.c: 406:     turnRight45(&motorL, &motorR);
  9313   005ADC  0E61               	movlw	low _motorL
  9314   005ADE  6E1A               	movwf	turnRight45@mL^0,c
  9315   005AE0  0E01               	movlw	high _motorL
  9316   005AE2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9317   005AE4  0E58               	movlw	low _motorR
  9318   005AE6  6E1C               	movwf	turnRight45@mR^0,c
  9319   005AE8  0E01               	movlw	high _motorR
  9320   005AEA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9321   005AEC  ECE4  F02E         	call	_turnRight45	;wreg free
  9322   005AF0  0012               	return		;funcret
  9323   005AF2                     __end_of_ReverseLightBlueMove:
  9324                           	callstack 0
  9325                           
  9326 ;; *************** function _RedMove *****************
  9327 ;; Defined at:
  9328 ;;		line 284 in file "dc_motor.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9331 ;;		 -> motorL(9), 
  9332 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9333 ;;		 -> motorR(9), 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9349 ;;Total ram usage:        4 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; Hardware stack levels required when called: 5
  9352 ;; This function calls:
  9353 ;;		_reverseDetect
  9354 ;;		_turnRight45
  9355 ;; This function is called by:
  9356 ;;		_go_Home
  9357 ;;		_colour_move
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text44
  9362   005FB4                     __ptext44:
  9363                           	callstack 0
  9364   005FB4                     _RedMove:
  9365                           	callstack 24
  9366   005FB4                     
  9367                           ;dc_motor.c: 285:     reverseDetect(&motorL, &motorR);
  9368   005FB4  0E61               	movlw	low _motorL
  9369   005FB6  6E1A               	movwf	reverseDetect@mL^0,c
  9370   005FB8  0E01               	movlw	high _motorL
  9371   005FBA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9372   005FBC  0E58               	movlw	low _motorR
  9373   005FBE  6E1C               	movwf	reverseDetect@mR^0,c
  9374   005FC0  0E01               	movlw	high _motorR
  9375   005FC2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9376   005FC4  ECF5  F02B         	call	_reverseDetect	;wreg free
  9377                           
  9378                           ;dc_motor.c: 287:     turnRight45(&motorL, &motorR);
  9379   005FC8  0E61               	movlw	low _motorL
  9380   005FCA  6E1A               	movwf	turnRight45@mL^0,c
  9381   005FCC  0E01               	movlw	high _motorL
  9382   005FCE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9383   005FD0  0E58               	movlw	low _motorR
  9384   005FD2  6E1C               	movwf	turnRight45@mR^0,c
  9385   005FD4  0E01               	movlw	high _motorR
  9386   005FD6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9387   005FD8  ECE4  F02E         	call	_turnRight45	;wreg free
  9388                           
  9389                           ;dc_motor.c: 288:     turnRight45(&motorL, &motorR);
  9390   005FDC  0E61               	movlw	low _motorL
  9391   005FDE  6E1A               	movwf	turnRight45@mL^0,c
  9392   005FE0  0E01               	movlw	high _motorL
  9393   005FE2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9394   005FE4  0E58               	movlw	low _motorR
  9395   005FE6  6E1C               	movwf	turnRight45@mR^0,c
  9396   005FE8  0E01               	movlw	high _motorR
  9397   005FEA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9398   005FEC  ECE4  F02E         	call	_turnRight45	;wreg free
  9399   005FF0  0012               	return		;funcret
  9400   005FF2                     __end_of_RedMove:
  9401                           	callstack 0
  9402                           
  9403 ;; *************** function _GreenMove *****************
  9404 ;; Defined at:
  9405 ;;		line 292 in file "dc_motor.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9408 ;;		 -> motorL(9), 
  9409 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9410 ;;		 -> motorR(9), 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;		None
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      void 
  9415 ;; Registers used:
  9416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;Total ram usage:        4 bytes
  9427 ;; Hardware stack levels used: 1
  9428 ;; Hardware stack levels required when called: 5
  9429 ;; This function calls:
  9430 ;;		_reverseDetect
  9431 ;;		_turnLeft45
  9432 ;; This function is called by:
  9433 ;;		_go_Home
  9434 ;;		_colour_move
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           	psect	text45
  9439   005FF2                     __ptext45:
  9440                           	callstack 0
  9441   005FF2                     _GreenMove:
  9442                           	callstack 24
  9443   005FF2                     
  9444                           ;dc_motor.c: 293:     reverseDetect(&motorL, &motorR);
  9445   005FF2  0E61               	movlw	low _motorL
  9446   005FF4  6E1A               	movwf	reverseDetect@mL^0,c
  9447   005FF6  0E01               	movlw	high _motorL
  9448   005FF8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9449   005FFA  0E58               	movlw	low _motorR
  9450   005FFC  6E1C               	movwf	reverseDetect@mR^0,c
  9451   005FFE  0E01               	movlw	high _motorR
  9452   006000  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9453   006002  ECF5  F02B         	call	_reverseDetect	;wreg free
  9454                           
  9455                           ;dc_motor.c: 295:     turnLeft45(&motorL, &motorR);
  9456   006006  0E61               	movlw	low _motorL
  9457   006008  6E1A               	movwf	turnLeft45@mL^0,c
  9458   00600A  0E01               	movlw	high _motorL
  9459   00600C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9460   00600E  0E58               	movlw	low _motorR
  9461   006010  6E1C               	movwf	turnLeft45@mR^0,c
  9462   006012  0E01               	movlw	high _motorR
  9463   006014  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9464   006016  EC0B  F02F         	call	_turnLeft45	;wreg free
  9465                           
  9466                           ;dc_motor.c: 296:     turnLeft45(&motorL, &motorR);
  9467   00601A  0E61               	movlw	low _motorL
  9468   00601C  6E1A               	movwf	turnLeft45@mL^0,c
  9469   00601E  0E01               	movlw	high _motorL
  9470   006020  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9471   006022  0E58               	movlw	low _motorR
  9472   006024  6E1C               	movwf	turnLeft45@mR^0,c
  9473   006026  0E01               	movlw	high _motorR
  9474   006028  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9475   00602A  EC0B  F02F         	call	_turnLeft45	;wreg free
  9476   00602E  0012               	return		;funcret
  9477   006030                     __end_of_GreenMove:
  9478                           	callstack 0
  9479                           
  9480 ;; *************** function _BlueMove *****************
  9481 ;; Defined at:
  9482 ;;		line 300 in file "dc_motor.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9485 ;;		 -> motorL(9), 
  9486 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9487 ;;		 -> motorR(9), 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9503 ;;Total ram usage:        4 bytes
  9504 ;; Hardware stack levels used: 1
  9505 ;; Hardware stack levels required when called: 5
  9506 ;; This function calls:
  9507 ;;		_Backhalfblock
  9508 ;;		_reverseDetect
  9509 ;;		_turnRight45
  9510 ;; This function is called by:
  9511 ;;		_go_Home
  9512 ;;		_colour_move
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text46
  9517   0053D8                     __ptext46:
  9518                           	callstack 0
  9519   0053D8                     _BlueMove:
  9520                           	callstack 24
  9521   0053D8                     
  9522                           ;dc_motor.c: 301:     reverseDetect(&motorL, &motorR);
  9523   0053D8  0E61               	movlw	low _motorL
  9524   0053DA  6E1A               	movwf	reverseDetect@mL^0,c
  9525   0053DC  0E01               	movlw	high _motorL
  9526   0053DE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9527   0053E0  0E58               	movlw	low _motorR
  9528   0053E2  6E1C               	movwf	reverseDetect@mR^0,c
  9529   0053E4  0E01               	movlw	high _motorR
  9530   0053E6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9531   0053E8  ECF5  F02B         	call	_reverseDetect	;wreg free
  9532                           
  9533                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  9534   0053EC  0E61               	movlw	low _motorL
  9535   0053EE  6E1A               	movwf	turnRight45@mL^0,c
  9536   0053F0  0E01               	movlw	high _motorL
  9537   0053F2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9538   0053F4  0E58               	movlw	low _motorR
  9539   0053F6  6E1C               	movwf	turnRight45@mR^0,c
  9540   0053F8  0E01               	movlw	high _motorR
  9541   0053FA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9542   0053FC  ECE4  F02E         	call	_turnRight45	;wreg free
  9543                           
  9544                           ;dc_motor.c: 304:     turnRight45(&motorL, &motorR);
  9545   005400  0E61               	movlw	low _motorL
  9546   005402  6E1A               	movwf	turnRight45@mL^0,c
  9547   005404  0E01               	movlw	high _motorL
  9548   005406  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9549   005408  0E58               	movlw	low _motorR
  9550   00540A  6E1C               	movwf	turnRight45@mR^0,c
  9551   00540C  0E01               	movlw	high _motorR
  9552   00540E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9553   005410  ECE4  F02E         	call	_turnRight45	;wreg free
  9554                           
  9555                           ;dc_motor.c: 305:     turnRight45(&motorL, &motorR);
  9556   005414  0E61               	movlw	low _motorL
  9557   005416  6E1A               	movwf	turnRight45@mL^0,c
  9558   005418  0E01               	movlw	high _motorL
  9559   00541A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9560   00541C  0E58               	movlw	low _motorR
  9561   00541E  6E1C               	movwf	turnRight45@mR^0,c
  9562   005420  0E01               	movlw	high _motorR
  9563   005422  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9564   005424  ECE4  F02E         	call	_turnRight45	;wreg free
  9565                           
  9566                           ;dc_motor.c: 306:     turnRight45(&motorL, &motorR);
  9567   005428  0E61               	movlw	low _motorL
  9568   00542A  6E1A               	movwf	turnRight45@mL^0,c
  9569   00542C  0E01               	movlw	high _motorL
  9570   00542E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9571   005430  0E58               	movlw	low _motorR
  9572   005432  6E1C               	movwf	turnRight45@mR^0,c
  9573   005434  0E01               	movlw	high _motorR
  9574   005436  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9575   005438  ECE4  F02E         	call	_turnRight45	;wreg free
  9576                           
  9577                           ;dc_motor.c: 308:     Backhalfblock(&motorL, &motorR);
  9578   00543C  0E61               	movlw	low _motorL
  9579   00543E  6E1A               	movwf	Backhalfblock@mL^0,c
  9580   005440  0E01               	movlw	high _motorL
  9581   005442  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  9582   005444  0E58               	movlw	low _motorR
  9583   005446  6E1C               	movwf	Backhalfblock@mR^0,c
  9584   005448  0E01               	movlw	high _motorR
  9585   00544A  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  9586   00544C  ECC8  F02B         	call	_Backhalfblock	;wreg free
  9587   005450  0012               	return		;funcret
  9588   005452                     __end_of_BlueMove:
  9589                           	callstack 0
  9590                           
  9591 ;; *************** function _Backhalfblock *****************
  9592 ;; Defined at:
  9593 ;;		line 273 in file "dc_motor.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9596 ;;		 -> motorL(9), 
  9597 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9598 ;;		 -> motorR(9), 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9613 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9614 ;;Total ram usage:        6 bytes
  9615 ;; Hardware stack levels used: 1
  9616 ;; Hardware stack levels required when called: 4
  9617 ;; This function calls:
  9618 ;;		_fullSpeedBack
  9619 ;;		_stop
  9620 ;; This function is called by:
  9621 ;;		_go_Home
  9622 ;;		_BlueMove
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text47
  9627   005790                     __ptext47:
  9628                           	callstack 0
  9629   005790                     _Backhalfblock:
  9630                           	callstack 24
  9631   005790                     
  9632                           ;dc_motor.c: 274:     fullSpeedBack(mL,mR);
  9633   005790  C01A  F014         	movff	Backhalfblock@mL,fullSpeedBack@mL
  9634   005794  C01B  F015         	movff	Backhalfblock@mL+1,fullSpeedBack@mL+1
  9635   005798  C01C  F016         	movff	Backhalfblock@mR,fullSpeedBack@mR
  9636   00579C  C01D  F017         	movff	Backhalfblock@mR+1,fullSpeedBack@mR+1
  9637   0057A0  EC8E  F028         	call	_fullSpeedBack	;wreg free
  9638   0057A4                     
  9639                           ;dc_motor.c: 275:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  9640   0057A4  0E2B               	movlw	43
  9641   0057A6  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9642   0057A8  0E9D               	movlw	157
  9643   0057AA  6E1E               	movwf	??_Backhalfblock^0,c
  9644   0057AC  0EF9               	movlw	249
  9645   0057AE                     u5987:
  9646   0057AE  2EE8               	decfsz	wreg,f,c
  9647   0057B0  D7FE               	bra	u5987
  9648   0057B2  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9649   0057B4  D7FC               	bra	u5987
  9650   0057B6  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9651   0057B8  D7FA               	bra	u5987
  9652   0057BA  F000               	nop	
  9653   0057BC                     
  9654                           ;dc_motor.c: 276:     stop(&motorL, &motorR);
  9655   0057BC  0E61               	movlw	low _motorL
  9656   0057BE  6E14               	movwf	stop@mL^0,c
  9657   0057C0  0E01               	movlw	high _motorL
  9658   0057C2  6E15               	movwf	(stop@mL+1)^0,c
  9659   0057C4  0E58               	movlw	low _motorR
  9660   0057C6  6E16               	movwf	stop@mR^0,c
  9661   0057C8  0E01               	movlw	high _motorR
  9662   0057CA  6E17               	movwf	(stop@mR+1)^0,c
  9663   0057CC  EC70  F029         	call	_stop	;wreg free
  9664                           
  9665                           ;dc_motor.c: 277:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9666   0057D0  0E05               	movlw	5
  9667   0057D2  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9668   0057D4  0E0F               	movlw	15
  9669   0057D6  6E1E               	movwf	??_Backhalfblock^0,c
  9670   0057D8  0EF1               	movlw	241
  9671   0057DA                     u5997:
  9672   0057DA  2EE8               	decfsz	wreg,f,c
  9673   0057DC  D7FE               	bra	u5997
  9674   0057DE  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9675   0057E0  D7FC               	bra	u5997
  9676   0057E2  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9677   0057E4  D7FA               	bra	u5997
  9678   0057E6  F000               	nop	
  9679   0057E8  0012               	return		;funcret
  9680   0057EA                     __end_of_Backhalfblock:
  9681                           	callstack 0
  9682                           
  9683 ;; *************** function _YellowMove *****************
  9684 ;; Defined at:
  9685 ;;		line 312 in file "dc_motor.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9688 ;;		 -> motorL(9), 
  9689 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9690 ;;		 -> motorR(9), 
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  1    wreg      void 
  9695 ;; Registers used:
  9696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9706 ;;Total ram usage:        4 bytes
  9707 ;; Hardware stack levels used: 1
  9708 ;; Hardware stack levels required when called: 5
  9709 ;; This function calls:
  9710 ;;		_reverseDetect
  9711 ;;		_reverseOneBlock
  9712 ;;		_turnRight45
  9713 ;; This function is called by:
  9714 ;;		_colour_move
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           	psect	text48
  9719   005AF2                     __ptext48:
  9720                           	callstack 0
  9721   005AF2                     _YellowMove:
  9722                           	callstack 24
  9723   005AF2                     
  9724                           ;dc_motor.c: 313:     reverseDetect(&motorL, &motorR);
  9725   005AF2  0E61               	movlw	low _motorL
  9726   005AF4  6E1A               	movwf	reverseDetect@mL^0,c
  9727   005AF6  0E01               	movlw	high _motorL
  9728   005AF8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9729   005AFA  0E58               	movlw	low _motorR
  9730   005AFC  6E1C               	movwf	reverseDetect@mR^0,c
  9731   005AFE  0E01               	movlw	high _motorR
  9732   005B00  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9733   005B02  ECF5  F02B         	call	_reverseDetect	;wreg free
  9734                           
  9735                           ;dc_motor.c: 315:     reverseOneBlock(&motorL, &motorR);
  9736   005B06  0E61               	movlw	low _motorL
  9737   005B08  6E1A               	movwf	reverseOneBlock@mL^0,c
  9738   005B0A  0E01               	movlw	high _motorL
  9739   005B0C  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9740   005B0E  0E58               	movlw	low _motorR
  9741   005B10  6E1C               	movwf	reverseOneBlock@mR^0,c
  9742   005B12  0E01               	movlw	high _motorR
  9743   005B14  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9744   005B16  EC7B  F02C         	call	_reverseOneBlock	;wreg free
  9745                           
  9746                           ;dc_motor.c: 317:     turnRight45(&motorL, &motorR);
  9747   005B1A  0E61               	movlw	low _motorL
  9748   005B1C  6E1A               	movwf	turnRight45@mL^0,c
  9749   005B1E  0E01               	movlw	high _motorL
  9750   005B20  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9751   005B22  0E58               	movlw	low _motorR
  9752   005B24  6E1C               	movwf	turnRight45@mR^0,c
  9753   005B26  0E01               	movlw	high _motorR
  9754   005B28  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9755   005B2A  ECE4  F02E         	call	_turnRight45	;wreg free
  9756                           
  9757                           ;dc_motor.c: 318:     turnRight45(&motorL, &motorR);
  9758   005B2E  0E61               	movlw	low _motorL
  9759   005B30  6E1A               	movwf	turnRight45@mL^0,c
  9760   005B32  0E01               	movlw	high _motorL
  9761   005B34  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9762   005B36  0E58               	movlw	low _motorR
  9763   005B38  6E1C               	movwf	turnRight45@mR^0,c
  9764   005B3A  0E01               	movlw	high _motorR
  9765   005B3C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9766   005B3E  ECE4  F02E         	call	_turnRight45	;wreg free
  9767   005B42  0012               	return		;funcret
  9768   005B44                     __end_of_YellowMove:
  9769                           	callstack 0
  9770                           
  9771 ;; *************** function _RetryMove *****************
  9772 ;; Defined at:
  9773 ;;		line 353 in file "dc_motor.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9776 ;;		 -> motorL(9), 
  9777 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9778 ;;		 -> motorR(9), 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;Total ram usage:        6 bytes
  9795 ;; Hardware stack levels used: 1
  9796 ;; Hardware stack levels required when called: 5
  9797 ;; This function calls:
  9798 ;;		_fullSpeedAhead
  9799 ;;		_reverseDetect
  9800 ;;		_stop
  9801 ;; This function is called by:
  9802 ;;		_colour_move
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text49
  9807   005534                     __ptext49:
  9808                           	callstack 0
  9809   005534                     _RetryMove:
  9810                           	callstack 24
  9811   005534                     
  9812                           ;dc_motor.c: 354:     reverseDetect(&motorL, &motorR);
  9813   005534  0E61               	movlw	low _motorL
  9814   005536  6E1A               	movwf	reverseDetect@mL^0,c
  9815   005538  0E01               	movlw	high _motorL
  9816   00553A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9817   00553C  0E58               	movlw	low _motorR
  9818   00553E  6E1C               	movwf	reverseDetect@mR^0,c
  9819   005540  0E01               	movlw	high _motorR
  9820   005542  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9821   005544  ECF5  F02B         	call	_reverseDetect	;wreg free
  9822                           
  9823                           ;dc_motor.c: 355:     stop(&motorL, &motorR);
  9824   005548  0E61               	movlw	low _motorL
  9825   00554A  6E14               	movwf	stop@mL^0,c
  9826   00554C  0E01               	movlw	high _motorL
  9827   00554E  6E15               	movwf	(stop@mL+1)^0,c
  9828   005550  0E58               	movlw	low _motorR
  9829   005552  6E16               	movwf	stop@mR^0,c
  9830   005554  0E01               	movlw	high _motorR
  9831   005556  6E17               	movwf	(stop@mR+1)^0,c
  9832   005558  EC70  F029         	call	_stop	;wreg free
  9833                           
  9834                           ;dc_motor.c: 356:     fullSpeedAhead(mL,mR);
  9835   00555C  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9836   005560  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9837   005564  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9838   005568  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9839   00556C  ECDD  F028         	call	_fullSpeedAhead	;wreg free
  9840   005570                     
  9841                           ;dc_motor.c: 357:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9842   005570  0E29               	movlw	41
  9843   005572  6E25               	movwf	(??_RetryMove+1)^0,c
  9844   005574  0E96               	movlw	150
  9845   005576  6E24               	movwf	??_RetryMove^0,c
  9846   005578  0E7F               	movlw	127
  9847   00557A                     u6007:
  9848   00557A  2EE8               	decfsz	wreg,f,c
  9849   00557C  D7FE               	bra	u6007
  9850   00557E  2E24               	decfsz	??_RetryMove^0,f,c
  9851   005580  D7FC               	bra	u6007
  9852   005582  2E25               	decfsz	(??_RetryMove+1)^0,f,c
  9853   005584  D7FA               	bra	u6007
  9854   005586  F000               	nop	
  9855   005588                     
  9856                           ;dc_motor.c: 358:     stop(&motorL, &motorR);
  9857   005588  0E61               	movlw	low _motorL
  9858   00558A  6E14               	movwf	stop@mL^0,c
  9859   00558C  0E01               	movlw	high _motorL
  9860   00558E  6E15               	movwf	(stop@mL+1)^0,c
  9861   005590  0E58               	movlw	low _motorR
  9862   005592  6E16               	movwf	stop@mR^0,c
  9863   005594  0E01               	movlw	high _motorR
  9864   005596  6E17               	movwf	(stop@mR+1)^0,c
  9865   005598  EC70  F029         	call	_stop	;wreg free
  9866   00559C  0012               	return		;funcret
  9867   00559E                     __end_of_RetryMove:
  9868                           	callstack 0
  9869                           
  9870 ;; *************** function _PinkMove *****************
  9871 ;; Defined at:
  9872 ;;		line 322 in file "dc_motor.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9875 ;;		 -> motorL(9), 
  9876 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9877 ;;		 -> motorR(9), 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      void 
  9882 ;; Registers used:
  9883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9893 ;;Total ram usage:        4 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; Hardware stack levels required when called: 5
  9896 ;; This function calls:
  9897 ;;		_reverseDetect
  9898 ;;		_reverseOneBlock
  9899 ;;		_turnLeft45
  9900 ;; This function is called by:
  9901 ;;		_colour_move
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           	psect	text50
  9906   005B44                     __ptext50:
  9907                           	callstack 0
  9908   005B44                     _PinkMove:
  9909                           	callstack 24
  9910   005B44                     
  9911                           ;dc_motor.c: 323:     reverseDetect(&motorL, &motorR);
  9912   005B44  0E61               	movlw	low _motorL
  9913   005B46  6E1A               	movwf	reverseDetect@mL^0,c
  9914   005B48  0E01               	movlw	high _motorL
  9915   005B4A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9916   005B4C  0E58               	movlw	low _motorR
  9917   005B4E  6E1C               	movwf	reverseDetect@mR^0,c
  9918   005B50  0E01               	movlw	high _motorR
  9919   005B52  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9920   005B54  ECF5  F02B         	call	_reverseDetect	;wreg free
  9921                           
  9922                           ;dc_motor.c: 325:     reverseOneBlock(&motorL, &motorR);
  9923   005B58  0E61               	movlw	low _motorL
  9924   005B5A  6E1A               	movwf	reverseOneBlock@mL^0,c
  9925   005B5C  0E01               	movlw	high _motorL
  9926   005B5E  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9927   005B60  0E58               	movlw	low _motorR
  9928   005B62  6E1C               	movwf	reverseOneBlock@mR^0,c
  9929   005B64  0E01               	movlw	high _motorR
  9930   005B66  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9931   005B68  EC7B  F02C         	call	_reverseOneBlock	;wreg free
  9932                           
  9933                           ;dc_motor.c: 327:     turnLeft45(&motorL, &motorR);
  9934   005B6C  0E61               	movlw	low _motorL
  9935   005B6E  6E1A               	movwf	turnLeft45@mL^0,c
  9936   005B70  0E01               	movlw	high _motorL
  9937   005B72  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9938   005B74  0E58               	movlw	low _motorR
  9939   005B76  6E1C               	movwf	turnLeft45@mR^0,c
  9940   005B78  0E01               	movlw	high _motorR
  9941   005B7A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9942   005B7C  EC0B  F02F         	call	_turnLeft45	;wreg free
  9943                           
  9944                           ;dc_motor.c: 328:     turnLeft45(&motorL, &motorR);
  9945   005B80  0E61               	movlw	low _motorL
  9946   005B82  6E1A               	movwf	turnLeft45@mL^0,c
  9947   005B84  0E01               	movlw	high _motorL
  9948   005B86  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9949   005B88  0E58               	movlw	low _motorR
  9950   005B8A  6E1C               	movwf	turnLeft45@mR^0,c
  9951   005B8C  0E01               	movlw	high _motorR
  9952   005B8E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9953   005B90  EC0B  F02F         	call	_turnLeft45	;wreg free
  9954   005B94  0012               	return		;funcret
  9955   005B96                     __end_of_PinkMove:
  9956                           	callstack 0
  9957                           
  9958 ;; *************** function _reverseOneBlock *****************
  9959 ;; Defined at:
  9960 ;;		line 241 in file "dc_motor.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9963 ;;		 -> motorL(9), 
  9964 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9965 ;;		 -> motorR(9), 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  1    wreg      void 
  9970 ;; Registers used:
  9971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9981 ;;Total ram usage:        6 bytes
  9982 ;; Hardware stack levels used: 1
  9983 ;; Hardware stack levels required when called: 4
  9984 ;; This function calls:
  9985 ;;		_fullSpeedBack
  9986 ;;		_stop
  9987 ;; This function is called by:
  9988 ;;		_YellowMove
  9989 ;;		_PinkMove
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text51
  9994   0058F6                     __ptext51:
  9995                           	callstack 0
  9996   0058F6                     _reverseOneBlock:
  9997                           	callstack 24
  9998   0058F6                     
  9999                           ;dc_motor.c: 242:     fullSpeedBack(mL,mR);
 10000   0058F6  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10001   0058FA  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10002   0058FE  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10003   005902  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10004   005906  EC8E  F028         	call	_fullSpeedBack	;wreg free
 10005   00590A                     
 10006                           ;dc_motor.c: 243:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10007   00590A  0E56               	movlw	86
 10008   00590C  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10009   00590E  0E3A               	movlw	58
 10010   005910  6E1E               	movwf	??_reverseOneBlock^0,c
 10011   005912  0EF4               	movlw	244
 10012   005914                     u6017:
 10013   005914  2EE8               	decfsz	wreg,f,c
 10014   005916  D7FE               	bra	u6017
 10015   005918  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10016   00591A  D7FC               	bra	u6017
 10017   00591C  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10018   00591E  D7FA               	bra	u6017
 10019   005920                     
 10020                           ;dc_motor.c: 244:     stop(&motorL, &motorR);
 10021   005920  0E61               	movlw	low _motorL
 10022   005922  6E14               	movwf	stop@mL^0,c
 10023   005924  0E01               	movlw	high _motorL
 10024   005926  6E15               	movwf	(stop@mL+1)^0,c
 10025   005928  0E58               	movlw	low _motorR
 10026   00592A  6E16               	movwf	stop@mR^0,c
 10027   00592C  0E01               	movlw	high _motorR
 10028   00592E  6E17               	movwf	(stop@mR+1)^0,c
 10029   005930  EC70  F029         	call	_stop	;wreg free
 10030                           
 10031                           ;dc_motor.c: 245:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10032   005934  0E05               	movlw	5
 10033   005936  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10034   005938  0E0F               	movlw	15
 10035   00593A  6E1E               	movwf	??_reverseOneBlock^0,c
 10036   00593C  0EF1               	movlw	241
 10037   00593E                     u6027:
 10038   00593E  2EE8               	decfsz	wreg,f,c
 10039   005940  D7FE               	bra	u6027
 10040   005942  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10041   005944  D7FC               	bra	u6027
 10042   005946  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10043   005948  D7FA               	bra	u6027
 10044   00594A  F000               	nop	
 10045   00594C  0012               	return		;funcret
 10046   00594E                     __end_of_reverseOneBlock:
 10047                           	callstack 0
 10048                           
 10049 ;; *************** function _OrangeMove *****************
 10050 ;; Defined at:
 10051 ;;		line 332 in file "dc_motor.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10054 ;;		 -> motorL(9), 
 10055 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10056 ;;		 -> motorR(9), 
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;		None
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  1    wreg      void 
 10061 ;; Registers used:
 10062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10071 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10072 ;;Total ram usage:        4 bytes
 10073 ;; Hardware stack levels used: 1
 10074 ;; Hardware stack levels required when called: 5
 10075 ;; This function calls:
 10076 ;;		_quaterForward
 10077 ;;		_reverseDetect
 10078 ;;		_turnRight45
 10079 ;; This function is called by:
 10080 ;;		_colour_move
 10081 ;; This function uses a non-reentrant model
 10082 ;;
 10083                           
 10084                           	psect	text52
 10085   005604                     __ptext52:
 10086                           	callstack 0
 10087   005604                     _OrangeMove:
 10088                           	callstack 24
 10089   005604                     
 10090                           ;dc_motor.c: 333:     reverseDetect(&motorL, &motorR);
 10091   005604  0E61               	movlw	low _motorL
 10092   005606  6E1A               	movwf	reverseDetect@mL^0,c
 10093   005608  0E01               	movlw	high _motorL
 10094   00560A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10095   00560C  0E58               	movlw	low _motorR
 10096   00560E  6E1C               	movwf	reverseDetect@mR^0,c
 10097   005610  0E01               	movlw	high _motorR
 10098   005612  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10099   005614  ECF5  F02B         	call	_reverseDetect	;wreg free
 10100                           
 10101                           ;dc_motor.c: 335:     turnRight45(&motorL, &motorR);
 10102   005618  0E61               	movlw	low _motorL
 10103   00561A  6E1A               	movwf	turnRight45@mL^0,c
 10104   00561C  0E01               	movlw	high _motorL
 10105   00561E  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10106   005620  0E58               	movlw	low _motorR
 10107   005622  6E1C               	movwf	turnRight45@mR^0,c
 10108   005624  0E01               	movlw	high _motorR
 10109   005626  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10110   005628  ECE4  F02E         	call	_turnRight45	;wreg free
 10111                           
 10112                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
 10113   00562C  0E61               	movlw	low _motorL
 10114   00562E  6E1A               	movwf	turnRight45@mL^0,c
 10115   005630  0E01               	movlw	high _motorL
 10116   005632  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10117   005634  0E58               	movlw	low _motorR
 10118   005636  6E1C               	movwf	turnRight45@mR^0,c
 10119   005638  0E01               	movlw	high _motorR
 10120   00563A  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10121   00563C  ECE4  F02E         	call	_turnRight45	;wreg free
 10122                           
 10123                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
 10124   005640  0E61               	movlw	low _motorL
 10125   005642  6E1A               	movwf	turnRight45@mL^0,c
 10126   005644  0E01               	movlw	high _motorL
 10127   005646  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10128   005648  0E58               	movlw	low _motorR
 10129   00564A  6E1C               	movwf	turnRight45@mR^0,c
 10130   00564C  0E01               	movlw	high _motorR
 10131   00564E  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10132   005650  ECE4  F02E         	call	_turnRight45	;wreg free
 10133                           
 10134                           ;dc_motor.c: 339:     quaterForward(&motorL, &motorR);
 10135   005654  0E61               	movlw	low _motorL
 10136   005656  6E1A               	movwf	quaterForward@mL^0,c
 10137   005658  0E01               	movlw	high _motorL
 10138   00565A  6E1B               	movwf	(quaterForward@mL+1)^0,c
 10139   00565C  0E58               	movlw	low _motorR
 10140   00565E  6E1C               	movwf	quaterForward@mR^0,c
 10141   005660  0E01               	movlw	high _motorR
 10142   005662  6E1D               	movwf	(quaterForward@mR+1)^0,c
 10143   005664  ECA7  F02C         	call	_quaterForward	;wreg free
 10144   005668  0012               	return		;funcret
 10145   00566A                     __end_of_OrangeMove:
 10146                           	callstack 0
 10147                           
 10148 ;; *************** function _turnRight45 *****************
 10149 ;; Defined at:
 10150 ;;		line 209 in file "dc_motor.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10153 ;;		 -> motorL(9), 
 10154 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10155 ;;		 -> motorR(9), 
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;		None
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  1    wreg      void 
 10160 ;; Registers used:
 10161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10170 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10171 ;;Total ram usage:        6 bytes
 10172 ;; Hardware stack levels used: 1
 10173 ;; Hardware stack levels required when called: 4
 10174 ;; This function calls:
 10175 ;;		_TurnDelay
 10176 ;;		_stop
 10177 ;;		_turnRight
 10178 ;; This function is called by:
 10179 ;;		_RedMove
 10180 ;;		_BlueMove
 10181 ;;		_YellowMove
 10182 ;;		_OrangeMove
 10183 ;;		_ReverseYellow
 10184 ;;		_ReverseLightBlueMove
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text53
 10189   005DC8                     __ptext53:
 10190                           	callstack 0
 10191   005DC8                     _turnRight45:
 10192                           	callstack 24
 10193   005DC8                     
 10194                           ;dc_motor.c: 210:     turnRight(mL,mR);
 10195   005DC8  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10196   005DCC  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10197   005DD0  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10198   005DD4  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10199   005DD8  ECF0  F027         	call	_turnRight	;wreg free
 10200   005DDC                     
 10201                           ;dc_motor.c: 211:     TurnDelay(Turn45Delay);
 10202   005DDC  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10203   005DE0  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10204   005DE4  EC50  F030         	call	_TurnDelay	;wreg free
 10205   005DE8                     
 10206                           ;dc_motor.c: 212:     stop(&motorL, &motorR);
 10207   005DE8  0E61               	movlw	low _motorL
 10208   005DEA  6E14               	movwf	stop@mL^0,c
 10209   005DEC  0E01               	movlw	high _motorL
 10210   005DEE  6E15               	movwf	(stop@mL+1)^0,c
 10211   005DF0  0E58               	movlw	low _motorR
 10212   005DF2  6E16               	movwf	stop@mR^0,c
 10213   005DF4  0E01               	movlw	high _motorR
 10214   005DF6  6E17               	movwf	(stop@mR+1)^0,c
 10215   005DF8  EC70  F029         	call	_stop	;wreg free
 10216   005DFC                     
 10217                           ;dc_motor.c: 213:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10218   005DFC  0E05               	movlw	5
 10219   005DFE  6E1F               	movwf	(??_turnRight45+1)^0,c
 10220   005E00  0E0F               	movlw	15
 10221   005E02  6E1E               	movwf	??_turnRight45^0,c
 10222   005E04  0EF1               	movlw	241
 10223   005E06                     u6037:
 10224   005E06  2EE8               	decfsz	wreg,f,c
 10225   005E08  D7FE               	bra	u6037
 10226   005E0A  2E1E               	decfsz	??_turnRight45^0,f,c
 10227   005E0C  D7FC               	bra	u6037
 10228   005E0E  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10229   005E10  D7FA               	bra	u6037
 10230   005E12  F000               	nop	
 10231   005E14  0012               	return		;funcret
 10232   005E16                     __end_of_turnRight45:
 10233                           	callstack 0
 10234                           
 10235 ;; *************** function _turnRight *****************
 10236 ;; Defined at:
 10237 ;;		line 128 in file "dc_motor.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10240 ;;		 -> motorL(9), 
 10241 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10242 ;;		 -> motorR(9), 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10257 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10258 ;;Total ram usage:        6 bytes
 10259 ;; Hardware stack levels used: 1
 10260 ;; Hardware stack levels required when called: 3
 10261 ;; This function calls:
 10262 ;;		_setMotorPWM
 10263 ;; This function is called by:
 10264 ;;		_turnRight45
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           	psect	text54
 10269   004FE0                     __ptext54:
 10270                           	callstack 0
 10271   004FE0                     _turnRight:
 10272                           	callstack 24
 10273   004FE0                     
 10274                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
 10275   004FE0  EE20 F001          	lfsr	2,1
 10276   004FE4  5014               	movf	turnRight@mL^0,w,c
 10277   004FE6  26D9               	addwf	fsr2l,f,c
 10278   004FE8  5015               	movf	(turnRight@mL+1)^0,w,c
 10279   004FEA  22DA               	addwfc	fsr2h,f,c
 10280   004FEC  0E01               	movlw	1
 10281   004FEE  6EDF               	movwf	indf2,c
 10282                           
 10283                           ;dc_motor.c: 131:     mR->direction =0;
 10284   004FF0  EE20 F001          	lfsr	2,1
 10285   004FF4  5016               	movf	turnRight@mR^0,w,c
 10286   004FF6  26D9               	addwf	fsr2l,f,c
 10287   004FF8  5017               	movf	(turnRight@mR+1)^0,w,c
 10288   004FFA  22DA               	addwfc	fsr2h,f,c
 10289   004FFC  0E00               	movlw	0
 10290   004FFE  6EDF               	movwf	indf2,c
 10291                           
 10292                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
 10293   005000  EF26  F028         	goto	l4174
 10294   005004                     l4166:
 10295                           
 10296                           ;dc_motor.c: 135:         mL->power+=10;
 10297   005004  C014  FFD9         	movff	turnRight@mL,fsr2l
 10298   005008  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10299   00500C  0E0A               	movlw	10
 10300   00500E  26DF               	addwf	indf2,f,c
 10301                           
 10302                           ;dc_motor.c: 136:         mR->power+=10;
 10303   005010  C016  FFD9         	movff	turnRight@mR,fsr2l
 10304   005014  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10305   005018  0E0A               	movlw	10
 10306   00501A  26DF               	addwf	indf2,f,c
 10307   00501C                     
 10308                           ;dc_motor.c: 138:         setMotorPWM(mL);
 10309   00501C  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10310   005020  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10311   005024  EC3F  F023         	call	_setMotorPWM	;wreg free
 10312   005028                     
 10313                           ;dc_motor.c: 139:         setMotorPWM(mR);
 10314   005028  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10315   00502C  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10316   005030  EC3F  F023         	call	_setMotorPWM	;wreg free
 10317   005034                     
 10318                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10319   005034  0E02               	movlw	2
 10320   005036  6E19               	movwf	(??_turnRight+1)^0,c
 10321   005038  0EA0               	movlw	160
 10322   00503A  6E18               	movwf	??_turnRight^0,c
 10323   00503C  0E92               	movlw	146
 10324   00503E                     u6047:
 10325   00503E  2EE8               	decfsz	wreg,f,c
 10326   005040  D7FE               	bra	u6047
 10327   005042  2E18               	decfsz	??_turnRight^0,f,c
 10328   005044  D7FC               	bra	u6047
 10329   005046  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10330   005048  D7FA               	bra	u6047
 10331   00504A  D000               	nop2	
 10332   00504C                     l4174:
 10333   00504C  C014  FFD9         	movff	turnRight@mL,fsr2l
 10334   005050  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10335   005054  0E32               	movlw	50
 10336   005056  60DF               	cpfslt	indf2,c
 10337   005058  EF30  F028         	goto	u3471
 10338   00505C  EF32  F028         	goto	u3470
 10339   005060                     u3471:
 10340   005060  EF3E  F028         	goto	l614
 10341   005064                     u3470:
 10342   005064  C016  FFD9         	movff	turnRight@mR,fsr2l
 10343   005068  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10344   00506C  0E31               	movlw	49
 10345   00506E  64DF               	cpfsgt	indf2,c
 10346   005070  EF3C  F028         	goto	u3481
 10347   005074  EF3E  F028         	goto	u3480
 10348   005078                     u3481:
 10349   005078  EF02  F028         	goto	l4166
 10350   00507C                     u3480:
 10351   00507C                     l614:
 10352   00507C  0012               	return		;funcret
 10353   00507E                     __end_of_turnRight:
 10354                           	callstack 0
 10355                           
 10356 ;; *************** function _LightBlueMove *****************
 10357 ;; Defined at:
 10358 ;;		line 343 in file "dc_motor.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10361 ;;		 -> motorL(9), 
 10362 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10363 ;;		 -> motorR(9), 
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;		None
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 0/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10379 ;;Total ram usage:        4 bytes
 10380 ;; Hardware stack levels used: 1
 10381 ;; Hardware stack levels required when called: 5
 10382 ;; This function calls:
 10383 ;;		_quaterForward
 10384 ;;		_reverseDetect
 10385 ;;		_turnLeft45
 10386 ;; This function is called by:
 10387 ;;		_colour_move
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           
 10391                           	psect	text55
 10392   00566A                     __ptext55:
 10393                           	callstack 0
 10394   00566A                     _LightBlueMove:
 10395                           	callstack 24
 10396   00566A                     
 10397                           ;dc_motor.c: 344:     reverseDetect(&motorL, &motorR);
 10398   00566A  0E61               	movlw	low _motorL
 10399   00566C  6E1A               	movwf	reverseDetect@mL^0,c
 10400   00566E  0E01               	movlw	high _motorL
 10401   005670  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10402   005672  0E58               	movlw	low _motorR
 10403   005674  6E1C               	movwf	reverseDetect@mR^0,c
 10404   005676  0E01               	movlw	high _motorR
 10405   005678  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10406   00567A  ECF5  F02B         	call	_reverseDetect	;wreg free
 10407                           
 10408                           ;dc_motor.c: 346:     turnLeft45(&motorL, &motorR);
 10409   00567E  0E61               	movlw	low _motorL
 10410   005680  6E1A               	movwf	turnLeft45@mL^0,c
 10411   005682  0E01               	movlw	high _motorL
 10412   005684  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10413   005686  0E58               	movlw	low _motorR
 10414   005688  6E1C               	movwf	turnLeft45@mR^0,c
 10415   00568A  0E01               	movlw	high _motorR
 10416   00568C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10417   00568E  EC0B  F02F         	call	_turnLeft45	;wreg free
 10418                           
 10419                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
 10420   005692  0E61               	movlw	low _motorL
 10421   005694  6E1A               	movwf	turnLeft45@mL^0,c
 10422   005696  0E01               	movlw	high _motorL
 10423   005698  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10424   00569A  0E58               	movlw	low _motorR
 10425   00569C  6E1C               	movwf	turnLeft45@mR^0,c
 10426   00569E  0E01               	movlw	high _motorR
 10427   0056A0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10428   0056A2  EC0B  F02F         	call	_turnLeft45	;wreg free
 10429                           
 10430                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
 10431   0056A6  0E61               	movlw	low _motorL
 10432   0056A8  6E1A               	movwf	turnLeft45@mL^0,c
 10433   0056AA  0E01               	movlw	high _motorL
 10434   0056AC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10435   0056AE  0E58               	movlw	low _motorR
 10436   0056B0  6E1C               	movwf	turnLeft45@mR^0,c
 10437   0056B2  0E01               	movlw	high _motorR
 10438   0056B4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10439   0056B6  EC0B  F02F         	call	_turnLeft45	;wreg free
 10440                           
 10441                           ;dc_motor.c: 350:     quaterForward(&motorL, &motorR);
 10442   0056BA  0E61               	movlw	low _motorL
 10443   0056BC  6E1A               	movwf	quaterForward@mL^0,c
 10444   0056BE  0E01               	movlw	high _motorL
 10445   0056C0  6E1B               	movwf	(quaterForward@mL+1)^0,c
 10446   0056C2  0E58               	movlw	low _motorR
 10447   0056C4  6E1C               	movwf	quaterForward@mR^0,c
 10448   0056C6  0E01               	movlw	high _motorR
 10449   0056C8  6E1D               	movwf	(quaterForward@mR+1)^0,c
 10450   0056CA  ECA7  F02C         	call	_quaterForward	;wreg free
 10451   0056CE  0012               	return		;funcret
 10452   0056D0                     __end_of_LightBlueMove:
 10453                           	callstack 0
 10454                           
 10455 ;; *************** function _turnLeft45 *****************
 10456 ;; Defined at:
 10457 ;;		line 217 in file "dc_motor.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10460 ;;		 -> motorL(9), 
 10461 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10462 ;;		 -> motorR(9), 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10478 ;;Total ram usage:        6 bytes
 10479 ;; Hardware stack levels used: 1
 10480 ;; Hardware stack levels required when called: 4
 10481 ;; This function calls:
 10482 ;;		_TurnDelay
 10483 ;;		_stop
 10484 ;;		_turnLeft
 10485 ;; This function is called by:
 10486 ;;		_GreenMove
 10487 ;;		_PinkMove
 10488 ;;		_LightBlueMove
 10489 ;;		_ReversePink
 10490 ;;		_ReverseOrangeMove
 10491 ;;		_turnCalibration
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           	psect	text56
 10496   005E16                     __ptext56:
 10497                           	callstack 0
 10498   005E16                     _turnLeft45:
 10499                           	callstack 25
 10500   005E16                     
 10501                           ;dc_motor.c: 218:     turnLeft(mL,mR);
 10502   005E16  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10503   005E1A  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10504   005E1E  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10505   005E22  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10506   005E26  EC3F  F028         	call	_turnLeft	;wreg free
 10507   005E2A                     
 10508                           ;dc_motor.c: 219:     TurnDelay(Turn45Delay);
 10509   005E2A  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10510   005E2E  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10511   005E32  EC50  F030         	call	_TurnDelay	;wreg free
 10512   005E36                     
 10513                           ;dc_motor.c: 220:     stop(&motorL, &motorR);
 10514   005E36  0E61               	movlw	low _motorL
 10515   005E38  6E14               	movwf	stop@mL^0,c
 10516   005E3A  0E01               	movlw	high _motorL
 10517   005E3C  6E15               	movwf	(stop@mL+1)^0,c
 10518   005E3E  0E58               	movlw	low _motorR
 10519   005E40  6E16               	movwf	stop@mR^0,c
 10520   005E42  0E01               	movlw	high _motorR
 10521   005E44  6E17               	movwf	(stop@mR+1)^0,c
 10522   005E46  EC70  F029         	call	_stop	;wreg free
 10523   005E4A                     
 10524                           ;dc_motor.c: 221:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10525   005E4A  0E05               	movlw	5
 10526   005E4C  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10527   005E4E  0E0F               	movlw	15
 10528   005E50  6E1E               	movwf	??_turnLeft45^0,c
 10529   005E52  0EF1               	movlw	241
 10530   005E54                     u6057:
 10531   005E54  2EE8               	decfsz	wreg,f,c
 10532   005E56  D7FE               	bra	u6057
 10533   005E58  2E1E               	decfsz	??_turnLeft45^0,f,c
 10534   005E5A  D7FC               	bra	u6057
 10535   005E5C  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10536   005E5E  D7FA               	bra	u6057
 10537   005E60  F000               	nop	
 10538   005E62  0012               	return		;funcret
 10539   005E64                     __end_of_turnLeft45:
 10540                           	callstack 0
 10541                           
 10542 ;; *************** function _turnLeft *****************
 10543 ;; Defined at:
 10544 ;;		line 109 in file "dc_motor.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10547 ;;		 -> motorL(9), 
 10548 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10549 ;;		 -> motorR(9), 
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      void 
 10554 ;; Registers used:
 10555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;Total ram usage:        6 bytes
 10566 ;; Hardware stack levels used: 1
 10567 ;; Hardware stack levels required when called: 3
 10568 ;; This function calls:
 10569 ;;		_setMotorPWM
 10570 ;; This function is called by:
 10571 ;;		_turnLeft45
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574                           
 10575                           	psect	text57
 10576   00507E                     __ptext57:
 10577                           	callstack 0
 10578   00507E                     _turnLeft:
 10579                           	callstack 25
 10580   00507E                     
 10581                           ;dc_motor.c: 109: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 110
      +                          : {;dc_motor.c: 111:     mL->direction =0;
 10582   00507E  EE20 F001          	lfsr	2,1
 10583   005082  5014               	movf	turnLeft@mL^0,w,c
 10584   005084  26D9               	addwf	fsr2l,f,c
 10585   005086  5015               	movf	(turnLeft@mL+1)^0,w,c
 10586   005088  22DA               	addwfc	fsr2h,f,c
 10587   00508A  0E00               	movlw	0
 10588   00508C  6EDF               	movwf	indf2,c
 10589                           
 10590                           ;dc_motor.c: 112:     mR->direction =1;
 10591   00508E  EE20 F001          	lfsr	2,1
 10592   005092  5016               	movf	turnLeft@mR^0,w,c
 10593   005094  26D9               	addwf	fsr2l,f,c
 10594   005096  5017               	movf	(turnLeft@mR+1)^0,w,c
 10595   005098  22DA               	addwfc	fsr2h,f,c
 10596   00509A  0E01               	movlw	1
 10597   00509C  6EDF               	movwf	indf2,c
 10598                           
 10599                           ;dc_motor.c: 114:     while(mL->power<power && mR->power<power){
 10600   00509E  EF75  F028         	goto	l4160
 10601   0050A2                     l4152:
 10602                           
 10603                           ;dc_motor.c: 117:         mL->power+=10;
 10604   0050A2  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10605   0050A6  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10606   0050AA  0E0A               	movlw	10
 10607   0050AC  26DF               	addwf	indf2,f,c
 10608                           
 10609                           ;dc_motor.c: 118:         mR->power+=10;
 10610   0050AE  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10611   0050B2  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10612   0050B6  0E0A               	movlw	10
 10613   0050B8  26DF               	addwf	indf2,f,c
 10614   0050BA                     
 10615                           ;dc_motor.c: 120:         setMotorPWM(mL);
 10616   0050BA  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10617   0050BE  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10618   0050C2  EC3F  F023         	call	_setMotorPWM	;wreg free
 10619   0050C6                     
 10620                           ;dc_motor.c: 121:         setMotorPWM(mR);
 10621   0050C6  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10622   0050CA  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10623   0050CE  EC3F  F023         	call	_setMotorPWM	;wreg free
 10624   0050D2                     
 10625                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10626   0050D2  0E02               	movlw	2
 10627   0050D4  6E19               	movwf	(??_turnLeft+1)^0,c
 10628   0050D6  0EA0               	movlw	160
 10629   0050D8  6E18               	movwf	??_turnLeft^0,c
 10630   0050DA  0E92               	movlw	146
 10631   0050DC                     u6067:
 10632   0050DC  2EE8               	decfsz	wreg,f,c
 10633   0050DE  D7FE               	bra	u6067
 10634   0050E0  2E18               	decfsz	??_turnLeft^0,f,c
 10635   0050E2  D7FC               	bra	u6067
 10636   0050E4  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10637   0050E6  D7FA               	bra	u6067
 10638   0050E8  D000               	nop2	
 10639   0050EA                     l4160:
 10640   0050EA  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10641   0050EE  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10642   0050F2  0E32               	movlw	50
 10643   0050F4  60DF               	cpfslt	indf2,c
 10644   0050F6  EF7F  F028         	goto	u3451
 10645   0050FA  EF81  F028         	goto	u3450
 10646   0050FE                     u3451:
 10647   0050FE  EF8D  F028         	goto	l606
 10648   005102                     u3450:
 10649   005102  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10650   005106  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10651   00510A  0E31               	movlw	49
 10652   00510C  64DF               	cpfsgt	indf2,c
 10653   00510E  EF8B  F028         	goto	u3461
 10654   005112  EF8D  F028         	goto	u3460
 10655   005116                     u3461:
 10656   005116  EF51  F028         	goto	l4152
 10657   00511A                     u3460:
 10658   00511A                     l606:
 10659   00511A  0012               	return		;funcret
 10660   00511C                     __end_of_turnLeft:
 10661                           	callstack 0
 10662                           
 10663 ;; *************** function _TurnDelay *****************
 10664 ;; Defined at:
 10665 ;;		line 201 in file "dc_motor.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  Turn45Delay     2    0[COMRAM] int 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;		None
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg, status,2, status,0
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10683 ;;Total ram usage:        3 bytes
 10684 ;; Hardware stack levels used: 1
 10685 ;; Hardware stack levels required when called: 1
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_turnRight45
 10690 ;;		_turnLeft45
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text58
 10695   0060A0                     __ptext58:
 10696                           	callstack 0
 10697   0060A0                     _TurnDelay:
 10698                           	callstack 27
 10699   0060A0                     
 10700                           ;dc_motor.c: 202:     while (Turn45Delay>0){
 10701   0060A0  EF5D  F030         	goto	l641
 10702   0060A4                     l4194:
 10703                           
 10704                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10705   0060A4  0E15               	movlw	21
 10706   0060A6  6E03               	movwf	??_TurnDelay^0,c
 10707   0060A8  0EC6               	movlw	198
 10708   0060AA                     u6077:
 10709   0060AA  2EE8               	decfsz	wreg,f,c
 10710   0060AC  D7FE               	bra	u6077
 10711   0060AE  2E03               	decfsz	??_TurnDelay^0,f,c
 10712   0060B0  D7FC               	bra	u6077
 10713   0060B2  D000               	nop2	
 10714   0060B4                     
 10715                           ;dc_motor.c: 204:         Turn45Delay--;
 10716   0060B4  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10717   0060B6  A0D8               	btfss	status,0,c
 10718   0060B8  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10719   0060BA                     l641:
 10720                           
 10721                           ;dc_motor.c: 202:     while (Turn45Delay>0){
 10722   0060BA  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10723   0060BC  EF6A  F030         	goto	u3510
 10724   0060C0  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10725   0060C2  E106               	bnz	u3511
 10726   0060C4  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10727   0060C6  B0D8               	btfsc	status,0,c
 10728   0060C8  EF68  F030         	goto	u3511
 10729   0060CC  EF6A  F030         	goto	u3510
 10730   0060D0                     u3511:
 10731   0060D0  EF52  F030         	goto	l4194
 10732   0060D4                     u3510:
 10733   0060D4  0012               	return		;funcret
 10734   0060D6                     __end_of_TurnDelay:
 10735                           	callstack 0
 10736                           
 10737 ;; *************** function _reverseDetect *****************
 10738 ;; Defined at:
 10739 ;;		line 225 in file "dc_motor.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10742 ;;		 -> motorL(9), 
 10743 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10744 ;;		 -> motorR(9), 
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10759 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10760 ;;Total ram usage:        6 bytes
 10761 ;; Hardware stack levels used: 1
 10762 ;; Hardware stack levels required when called: 4
 10763 ;; This function calls:
 10764 ;;		_fullSpeedBack
 10765 ;;		_stop
 10766 ;; This function is called by:
 10767 ;;		_RedMove
 10768 ;;		_GreenMove
 10769 ;;		_BlueMove
 10770 ;;		_YellowMove
 10771 ;;		_PinkMove
 10772 ;;		_OrangeMove
 10773 ;;		_LightBlueMove
 10774 ;;		_RetryMove
 10775 ;;		_ReverseYellow
 10776 ;;		_ReversePink
 10777 ;;		_ReverseOrangeMove
 10778 ;;		_ReverseLightBlueMove
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text59
 10783   0057EA                     __ptext59:
 10784                           	callstack 0
 10785   0057EA                     _reverseDetect:
 10786                           	callstack 24
 10787   0057EA                     
 10788                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 10789   0057EA  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10790   0057EE  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10791   0057F2  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10792   0057F6  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10793   0057FA  EC8E  F028         	call	_fullSpeedBack	;wreg free
 10794   0057FE                     
 10795                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10796   0057FE  0E11               	movlw	17
 10797   005800  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10798   005802  0E3C               	movlw	60
 10799   005804  6E1E               	movwf	??_reverseDetect^0,c
 10800   005806  0ECB               	movlw	203
 10801   005808                     u6087:
 10802   005808  2EE8               	decfsz	wreg,f,c
 10803   00580A  D7FE               	bra	u6087
 10804   00580C  2E1E               	decfsz	??_reverseDetect^0,f,c
 10805   00580E  D7FC               	bra	u6087
 10806   005810  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10807   005812  D7FA               	bra	u6087
 10808   005814  F000               	nop	
 10809   005816                     
 10810                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 10811   005816  0E61               	movlw	low _motorL
 10812   005818  6E14               	movwf	stop@mL^0,c
 10813   00581A  0E01               	movlw	high _motorL
 10814   00581C  6E15               	movwf	(stop@mL+1)^0,c
 10815   00581E  0E58               	movlw	low _motorR
 10816   005820  6E16               	movwf	stop@mR^0,c
 10817   005822  0E01               	movlw	high _motorR
 10818   005824  6E17               	movwf	(stop@mR+1)^0,c
 10819   005826  EC70  F029         	call	_stop	;wreg free
 10820                           
 10821                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10822   00582A  0E05               	movlw	5
 10823   00582C  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10824   00582E  0E0F               	movlw	15
 10825   005830  6E1E               	movwf	??_reverseDetect^0,c
 10826   005832  0EF1               	movlw	241
 10827   005834                     u6097:
 10828   005834  2EE8               	decfsz	wreg,f,c
 10829   005836  D7FE               	bra	u6097
 10830   005838  2E1E               	decfsz	??_reverseDetect^0,f,c
 10831   00583A  D7FC               	bra	u6097
 10832   00583C  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10833   00583E  D7FA               	bra	u6097
 10834   005840  F000               	nop	
 10835   005842  0012               	return		;funcret
 10836   005844                     __end_of_reverseDetect:
 10837                           	callstack 0
 10838                           
 10839 ;; *************** function _fullSpeedBack *****************
 10840 ;; Defined at:
 10841 ;;		line 183 in file "dc_motor.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10844 ;;		 -> motorL(9), 
 10845 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10846 ;;		 -> motorR(9), 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;		None
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      void 
 10851 ;; Registers used:
 10852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10861 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10862 ;;Total ram usage:        6 bytes
 10863 ;; Hardware stack levels used: 1
 10864 ;; Hardware stack levels required when called: 3
 10865 ;; This function calls:
 10866 ;;		_setMotorPWM
 10867 ;; This function is called by:
 10868 ;;		_reverseDetect
 10869 ;;		_homeReverse
 10870 ;;		_reverseOneBlock
 10871 ;;		_Backhalfblock
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text60
 10876   00511C                     __ptext60:
 10877                           	callstack 0
 10878   00511C                     _fullSpeedBack:
 10879                           	callstack 25
 10880   00511C                     
 10881                           ;dc_motor.c: 183: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: {;dc_motor.c: 186:     mL->direction =0;
 10882   00511C  EE20 F001          	lfsr	2,1
 10883   005120  5014               	movf	fullSpeedBack@mL^0,w,c
 10884   005122  26D9               	addwf	fsr2l,f,c
 10885   005124  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10886   005126  22DA               	addwfc	fsr2h,f,c
 10887   005128  0E00               	movlw	0
 10888   00512A  6EDF               	movwf	indf2,c
 10889                           
 10890                           ;dc_motor.c: 187:     mR->direction =0;
 10891   00512C  EE20 F001          	lfsr	2,1
 10892   005130  5016               	movf	fullSpeedBack@mR^0,w,c
 10893   005132  26D9               	addwf	fsr2l,f,c
 10894   005134  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10895   005136  22DA               	addwfc	fsr2h,f,c
 10896   005138  0E00               	movlw	0
 10897   00513A  6EDF               	movwf	indf2,c
 10898                           
 10899                           ;dc_motor.c: 188:     while (mL->power < power && mR->power < power){
 10900   00513C  EFC4  F028         	goto	l4188
 10901   005140                     l4180:
 10902                           
 10903                           ;dc_motor.c: 190:         mL->power+=10;
 10904   005140  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10905   005144  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10906   005148  0E0A               	movlw	10
 10907   00514A  26DF               	addwf	indf2,f,c
 10908                           
 10909                           ;dc_motor.c: 191:         mR->power+=10;
 10910   00514C  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10911   005150  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10912   005154  0E0A               	movlw	10
 10913   005156  26DF               	addwf	indf2,f,c
 10914   005158                     
 10915                           ;dc_motor.c: 193:         setMotorPWM(mL);
 10916   005158  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10917   00515C  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10918   005160  EC3F  F023         	call	_setMotorPWM	;wreg free
 10919   005164                     
 10920                           ;dc_motor.c: 194:         setMotorPWM(mR);
 10921   005164  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10922   005168  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10923   00516C  EC3F  F023         	call	_setMotorPWM	;wreg free
 10924   005170                     
 10925                           ;dc_motor.c: 196:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10926   005170  0E02               	movlw	2
 10927   005172  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10928   005174  0EA0               	movlw	160
 10929   005176  6E18               	movwf	??_fullSpeedBack^0,c
 10930   005178  0E92               	movlw	146
 10931   00517A                     u6107:
 10932   00517A  2EE8               	decfsz	wreg,f,c
 10933   00517C  D7FE               	bra	u6107
 10934   00517E  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10935   005180  D7FC               	bra	u6107
 10936   005182  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10937   005184  D7FA               	bra	u6107
 10938   005186  D000               	nop2	
 10939   005188                     l4188:
 10940   005188  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10941   00518C  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10942   005190  0E32               	movlw	50
 10943   005192  60DF               	cpfslt	indf2,c
 10944   005194  EFCE  F028         	goto	u3491
 10945   005198  EFD0  F028         	goto	u3490
 10946   00519C                     u3491:
 10947   00519C  EFDC  F028         	goto	l638
 10948   0051A0                     u3490:
 10949   0051A0  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10950   0051A4  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10951   0051A8  0E31               	movlw	49
 10952   0051AA  64DF               	cpfsgt	indf2,c
 10953   0051AC  EFDA  F028         	goto	u3501
 10954   0051B0  EFDC  F028         	goto	u3500
 10955   0051B4                     u3501:
 10956   0051B4  EFA0  F028         	goto	l4180
 10957   0051B8                     u3500:
 10958   0051B8                     l638:
 10959   0051B8  0012               	return		;funcret
 10960   0051BA                     __end_of_fullSpeedBack:
 10961                           	callstack 0
 10962                           
 10963 ;; *************** function _quaterForward *****************
 10964 ;; Defined at:
 10965 ;;		line 265 in file "dc_motor.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10968 ;;		 -> motorL(9), 
 10969 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10970 ;;		 -> motorR(9), 
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;		None
 10973 ;; Return value:  Size  Location     Type
 10974 ;;                  1    wreg      void 
 10975 ;; Registers used:
 10976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10985 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10986 ;;Total ram usage:        6 bytes
 10987 ;; Hardware stack levels used: 1
 10988 ;; Hardware stack levels required when called: 4
 10989 ;; This function calls:
 10990 ;;		_fullSpeedAhead
 10991 ;;		_stop
 10992 ;; This function is called by:
 10993 ;;		_OrangeMove
 10994 ;;		_LightBlueMove
 10995 ;; This function uses a non-reentrant model
 10996 ;;
 10997                           
 10998                           	psect	text61
 10999   00594E                     __ptext61:
 11000                           	callstack 0
 11001   00594E                     _quaterForward:
 11002                           	callstack 24
 11003   00594E                     
 11004                           ;dc_motor.c: 266:     fullSpeedAhead(mL,mR);
 11005   00594E  C01A  F014         	movff	quaterForward@mL,fullSpeedAhead@mL
 11006   005952  C01B  F015         	movff	quaterForward@mL+1,fullSpeedAhead@mL+1
 11007   005956  C01C  F016         	movff	quaterForward@mR,fullSpeedAhead@mR
 11008   00595A  C01D  F017         	movff	quaterForward@mR+1,fullSpeedAhead@mR+1
 11009   00595E  ECDD  F028         	call	_fullSpeedAhead	;wreg free
 11010   005962                     
 11011                           ;dc_motor.c: 267:     _delay((unsigned long)((300)*(64000000/4000.0)));
 11012   005962  0E19               	movlw	25
 11013   005964  6E1F               	movwf	(??_quaterForward+1)^0,c
 11014   005966  0E5A               	movlw	90
 11015   005968  6E1E               	movwf	??_quaterForward^0,c
 11016   00596A  0EB2               	movlw	178
 11017   00596C                     u6117:
 11018   00596C  2EE8               	decfsz	wreg,f,c
 11019   00596E  D7FE               	bra	u6117
 11020   005970  2E1E               	decfsz	??_quaterForward^0,f,c
 11021   005972  D7FC               	bra	u6117
 11022   005974  2E1F               	decfsz	(??_quaterForward+1)^0,f,c
 11023   005976  D7FA               	bra	u6117
 11024   005978                     
 11025                           ;dc_motor.c: 268:     stop(&motorL, &motorR);
 11026   005978  0E61               	movlw	low _motorL
 11027   00597A  6E14               	movwf	stop@mL^0,c
 11028   00597C  0E01               	movlw	high _motorL
 11029   00597E  6E15               	movwf	(stop@mL+1)^0,c
 11030   005980  0E58               	movlw	low _motorR
 11031   005982  6E16               	movwf	stop@mR^0,c
 11032   005984  0E01               	movlw	high _motorR
 11033   005986  6E17               	movwf	(stop@mR+1)^0,c
 11034   005988  EC70  F029         	call	_stop	;wreg free
 11035                           
 11036                           ;dc_motor.c: 269:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11037   00598C  0E05               	movlw	5
 11038   00598E  6E1F               	movwf	(??_quaterForward+1)^0,c
 11039   005990  0E0F               	movlw	15
 11040   005992  6E1E               	movwf	??_quaterForward^0,c
 11041   005994  0EF1               	movlw	241
 11042   005996                     u6127:
 11043   005996  2EE8               	decfsz	wreg,f,c
 11044   005998  D7FE               	bra	u6127
 11045   00599A  2E1E               	decfsz	??_quaterForward^0,f,c
 11046   00599C  D7FC               	bra	u6127
 11047   00599E  2E1F               	decfsz	(??_quaterForward+1)^0,f,c
 11048   0059A0  D7FA               	bra	u6127
 11049   0059A2  F000               	nop	
 11050   0059A4  0012               	return		;funcret
 11051   0059A6                     __end_of_quaterForward:
 11052                           	callstack 0
 11053                           
 11054 ;; *************** function _color_click_init *****************
 11055 ;; Defined at:
 11056 ;;		line 8 in file "color.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;		None
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;		None
 11061 ;; Return value:  Size  Location     Type
 11062 ;;                  1    wreg      void 
 11063 ;; Registers used:
 11064 ;;		wreg, status,2, status,0, cstack
 11065 ;; Tracked objects:
 11066 ;;		On entry : 0/0
 11067 ;;		On exit  : 0/0
 11068 ;;		Unchanged: 0/0
 11069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11074 ;;Total ram usage:        1 bytes
 11075 ;; Hardware stack levels used: 1
 11076 ;; Hardware stack levels required when called: 4
 11077 ;; This function calls:
 11078 ;;		_I2C_2_Master_Init
 11079 ;;		_color_writetoaddr
 11080 ;; This function is called by:
 11081 ;;		_main
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           
 11085                           	psect	text62
 11086   005B96                     __ptext62:
 11087                           	callstack 0
 11088   005B96                     _color_click_init:
 11089                           	callstack 26
 11090   005B96                     
 11091                           ;color.c: 11:     I2C_2_Master_Init();
 11092   005B96  EC83  F030         	call	_I2C_2_Master_Init	;wreg free
 11093   005B9A                     
 11094                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
 11095   005B9A  0E01               	movlw	1
 11096   005B9C  6E03               	movwf	color_writetoaddr@value^0,c
 11097   005B9E  0E00               	movlw	0
 11098   005BA0  ECD2  F030         	call	_color_writetoaddr
 11099   005BA4                     
 11100                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
 11101   005BA4  0E3F               	movlw	63
 11102   005BA6  6E05               	movwf	??_color_click_init^0,c
 11103   005BA8  0E55               	movlw	85
 11104   005BAA                     u6137:
 11105   005BAA  2EE8               	decfsz	wreg,f,c
 11106   005BAC  D7FE               	bra	u6137
 11107   005BAE  2E05               	decfsz	??_color_click_init^0,f,c
 11108   005BB0  D7FC               	bra	u6137
 11109   005BB2  F000               	nop	
 11110   005BB4                     
 11111                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
 11112   005BB4  0E03               	movlw	3
 11113   005BB6  6E03               	movwf	color_writetoaddr@value^0,c
 11114   005BB8  0E00               	movlw	0
 11115   005BBA  ECD2  F030         	call	_color_writetoaddr
 11116   005BBE                     
 11117                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
 11118   005BBE  0ED5               	movlw	213
 11119   005BC0  6E03               	movwf	color_writetoaddr@value^0,c
 11120   005BC2  0E01               	movlw	1
 11121   005BC4  ECD2  F030         	call	_color_writetoaddr
 11122   005BC8                     
 11123                           ;color.c: 20:     color_writetoaddr(0x0F, 0x00);
 11124   005BC8  0E00               	movlw	0
 11125   005BCA  6E03               	movwf	color_writetoaddr@value^0,c
 11126   005BCC  0E0F               	movlw	15
 11127   005BCE  ECD2  F030         	call	_color_writetoaddr
 11128   005BD2                     
 11129                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
 11130   005BD2  9287               	bcf	135,1,c	;volatile
 11131   005BD4                     
 11132                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
 11133   005BD4  9881               	bcf	129,4,c	;volatile
 11134   005BD6                     
 11135                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
 11136   005BD6  9E86               	bcf	134,7,c	;volatile
 11137   005BD8                     
 11138                           ;color.c: 26:     TRISDbits.TRISD3 = 0;
 11139   005BD8  9684               	bcf	132,3,c	;volatile
 11140   005BDA                     
 11141                           ;color.c: 27:     TRISDbits.TRISD4 = 0;
 11142   005BDA  9884               	bcf	132,4,c	;volatile
 11143   005BDC                     
 11144                           ;color.c: 29:     LATGbits.LATG1=0;
 11145   005BDC  927F               	bcf	127,1,c	;volatile
 11146   005BDE                     
 11147                           ;color.c: 30:     LATFbits.LATF7=0;
 11148   005BDE  9E7E               	bcf	126,7,c	;volatile
 11149   005BE0                     
 11150                           ;color.c: 31:     LATAbits.LATA4=0;
 11151   005BE0  9879               	bcf	121,4,c	;volatile
 11152   005BE2                     
 11153                           ;color.c: 33:     LATDbits.LATD3=0;
 11154   005BE2  967C               	bcf	124,3,c	;volatile
 11155   005BE4                     
 11156                           ;color.c: 34:     LATDbits.LATD4=0;
 11157   005BE4  987C               	bcf	124,4,c	;volatile
 11158   005BE6  0012               	return		;funcret
 11159   005BE8                     __end_of_color_click_init:
 11160                           	callstack 0
 11161                           
 11162 ;; *************** function _color_writetoaddr *****************
 11163 ;; Defined at:
 11164 ;;		line 38 in file "color.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;  address         1    wreg     unsigned char 
 11167 ;;  value           1    2[COMRAM] unsigned char 
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;  address         1    3[COMRAM] unsigned char 
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2, status,0, cstack
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11179 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11183 ;;Total ram usage:        2 bytes
 11184 ;; Hardware stack levels used: 1
 11185 ;; Hardware stack levels required when called: 3
 11186 ;; This function calls:
 11187 ;;		_I2C_2_Master_Start
 11188 ;;		_I2C_2_Master_Stop
 11189 ;;		_I2C_2_Master_Write
 11190 ;; This function is called by:
 11191 ;;		_color_click_init
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text63
 11196   0061A4                     __ptext63:
 11197                           	callstack 0
 11198   0061A4                     _color_writetoaddr:
 11199                           	callstack 26
 11200                           
 11201                           ;incstack = 0
 11202                           ;color_writetoaddr@address stored from wreg
 11203   0061A4  6E04               	movwf	color_writetoaddr@address^0,c
 11204   0061A6                     
 11205                           ;color.c: 39:     I2C_2_Master_Start();
 11206   0061A6  EC29  F031         	call	_I2C_2_Master_Start	;wreg free
 11207                           
 11208                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 11209   0061AA  0E52               	movlw	82
 11210   0061AC  EC0D  F031         	call	_I2C_2_Master_Write
 11211                           
 11212                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 11213   0061B0  5004               	movf	color_writetoaddr@address^0,w,c
 11214   0061B2  0980               	iorlw	128
 11215   0061B4  EC0D  F031         	call	_I2C_2_Master_Write
 11216                           
 11217                           ;color.c: 42:     I2C_2_Master_Write(value);
 11218   0061B8  5003               	movf	color_writetoaddr@value^0,w,c
 11219   0061BA  EC0D  F031         	call	_I2C_2_Master_Write
 11220                           
 11221                           ;color.c: 43:     I2C_2_Master_Stop();
 11222   0061BE  EC24  F031         	call	_I2C_2_Master_Stop	;wreg free
 11223   0061C2  0012               	return		;funcret
 11224   0061C4                     __end_of_color_writetoaddr:
 11225                           	callstack 0
 11226                           
 11227 ;; *************** function _I2C_2_Master_Write *****************
 11228 ;; Defined at:
 11229 ;;		line 45 in file "i2c.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  data_byte       1    wreg     unsigned char 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;  data_byte       1    1[COMRAM] unsigned char 
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      void 
 11236 ;; Registers used:
 11237 ;;		wreg, status,2, status,0, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11247 ;;Total ram usage:        1 bytes
 11248 ;; Hardware stack levels used: 1
 11249 ;; Hardware stack levels required when called: 2
 11250 ;; This function calls:
 11251 ;;		_I2C_2_Master_Idle
 11252 ;; This function is called by:
 11253 ;;		_color_writetoaddr
 11254 ;;		_color_read_lum
 11255 ;;		_color_read_Red
 11256 ;;		_color_read_Green
 11257 ;;		_color_read_Blue
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text64
 11262   00621A                     __ptext64:
 11263                           	callstack 0
 11264   00621A                     _I2C_2_Master_Write:
 11265                           	callstack 26
 11266                           
 11267                           ;incstack = 0
 11268                           ;I2C_2_Master_Write@data_byte stored from wreg
 11269   00621A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 11270   00621C                     
 11271                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 11272   00621C  EC98  F030         	call	_I2C_2_Master_Idle	;wreg free
 11273   006220                     
 11274                           ;i2c.c: 48:   SSP2BUF = data_byte;
 11275   006220  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 11276   006224  0012               	return		;funcret
 11277   006226                     __end_of_I2C_2_Master_Write:
 11278                           	callstack 0
 11279                           
 11280 ;; *************** function _I2C_2_Master_Stop *****************
 11281 ;; Defined at:
 11282 ;;		line 39 in file "i2c.c"
 11283 ;; Parameters:    Size  Location     Type
 11284 ;;		None
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;		None
 11287 ;; Return value:  Size  Location     Type
 11288 ;;                  1    wreg      void 
 11289 ;; Registers used:
 11290 ;;		wreg, status,2, status,0, cstack
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11300 ;;Total ram usage:        0 bytes
 11301 ;; Hardware stack levels used: 1
 11302 ;; Hardware stack levels required when called: 2
 11303 ;; This function calls:
 11304 ;;		_I2C_2_Master_Idle
 11305 ;; This function is called by:
 11306 ;;		_color_writetoaddr
 11307 ;;		_color_read_lum
 11308 ;;		_color_read_Red
 11309 ;;		_color_read_Green
 11310 ;;		_color_read_Blue
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           
 11314                           	psect	text65
 11315   006248                     __ptext65:
 11316                           	callstack 0
 11317   006248                     _I2C_2_Master_Stop:
 11318                           	callstack 26
 11319   006248                     
 11320                           ;i2c.c: 41:   I2C_2_Master_Idle();
 11321   006248  EC98  F030         	call	_I2C_2_Master_Idle	;wreg free
 11322   00624C                     
 11323                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 11324   00624C  010E               	movlb	14	; () banked
 11325   00624E  85DA               	bsf	218,2,b	;volatile
 11326   006250                     
 11327                           ; BSR set to: 14
 11328   006250  0012               	return		;funcret
 11329   006252                     __end_of_I2C_2_Master_Stop:
 11330                           	callstack 0
 11331                           
 11332 ;; *************** function _I2C_2_Master_Start *****************
 11333 ;; Defined at:
 11334 ;;		line 27 in file "i2c.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;		None
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;		None
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      void 
 11341 ;; Registers used:
 11342 ;;		wreg, status,2, status,0, cstack
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11352 ;;Total ram usage:        0 bytes
 11353 ;; Hardware stack levels used: 1
 11354 ;; Hardware stack levels required when called: 2
 11355 ;; This function calls:
 11356 ;;		_I2C_2_Master_Idle
 11357 ;; This function is called by:
 11358 ;;		_color_writetoaddr
 11359 ;;		_color_read_lum
 11360 ;;		_color_read_Red
 11361 ;;		_color_read_Green
 11362 ;;		_color_read_Blue
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text66
 11367   006252                     __ptext66:
 11368                           	callstack 0
 11369   006252                     _I2C_2_Master_Start:
 11370                           	callstack 26
 11371   006252                     
 11372                           ;i2c.c: 29:   I2C_2_Master_Idle();
 11373   006252  EC98  F030         	call	_I2C_2_Master_Idle	;wreg free
 11374   006256                     
 11375                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 11376   006256  010E               	movlb	14	; () banked
 11377   006258  81DA               	bsf	218,0,b	;volatile
 11378   00625A                     
 11379                           ; BSR set to: 14
 11380   00625A  0012               	return		;funcret
 11381   00625C                     __end_of_I2C_2_Master_Start:
 11382                           	callstack 0
 11383                           
 11384 ;; *************** function _I2C_2_Master_Idle *****************
 11385 ;; Defined at:
 11386 ;;		line 22 in file "i2c.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;		None
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;		None
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  1    wreg      void 
 11393 ;; Registers used:
 11394 ;;		wreg, status,2, status,0
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11404 ;;Total ram usage:        1 bytes
 11405 ;; Hardware stack levels used: 1
 11406 ;; Hardware stack levels required when called: 1
 11407 ;; This function calls:
 11408 ;;		Nothing
 11409 ;; This function is called by:
 11410 ;;		_I2C_2_Master_Start
 11411 ;;		_I2C_2_Master_RepStart
 11412 ;;		_I2C_2_Master_Stop
 11413 ;;		_I2C_2_Master_Write
 11414 ;;		_I2C_2_Master_Read
 11415 ;; This function uses a non-reentrant model
 11416 ;;
 11417                           
 11418                           	psect	text67
 11419   006130                     __ptext67:
 11420                           	callstack 0
 11421   006130                     _I2C_2_Master_Idle:
 11422                           	callstack 26
 11423   006130                     l135:
 11424   006130  010E               	movlb	14	; () banked
 11425   006132  B5D8               	btfsc	216,2,b	;volatile
 11426   006134  EF9E  F030         	goto	u4461
 11427   006138  EFA0  F030         	goto	u4460
 11428   00613C                     u4461:
 11429   00613C  EF98  F030         	goto	l135
 11430   006140                     u4460:
 11431   006140                     
 11432                           ; BSR set to: 14
 11433   006140  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11434   006144  0E1F               	movlw	31
 11435   006146  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11436   006148  A4D8               	btfss	status,2,c
 11437   00614A  EFA9  F030         	goto	u4471
 11438   00614E  EFAB  F030         	goto	u4470
 11439   006152                     u4471:
 11440   006152  EF98  F030         	goto	l135
 11441   006156                     u4470:
 11442   006156                     
 11443                           ; BSR set to: 14
 11444   006156  0012               	return		;funcret
 11445   006158                     __end_of_I2C_2_Master_Idle:
 11446                           	callstack 0
 11447                           
 11448 ;; *************** function _I2C_2_Master_Init *****************
 11449 ;; Defined at:
 11450 ;;		line 4 in file "i2c.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;		None
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;		None
 11455 ;; Return value:  Size  Location     Type
 11456 ;;                  1    wreg      void 
 11457 ;; Registers used:
 11458 ;;		wreg, status,2
 11459 ;; Tracked objects:
 11460 ;;		On entry : 0/0
 11461 ;;		On exit  : 0/0
 11462 ;;		Unchanged: 0/0
 11463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11468 ;;Total ram usage:        0 bytes
 11469 ;; Hardware stack levels used: 1
 11470 ;; Hardware stack levels required when called: 1
 11471 ;; This function calls:
 11472 ;;		Nothing
 11473 ;; This function is called by:
 11474 ;;		_color_click_init
 11475 ;;		_main
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479                           	psect	text68
 11480   006106                     __ptext68:
 11481                           	callstack 0
 11482   006106                     _I2C_2_Master_Init:
 11483                           	callstack 28
 11484   006106                     
 11485                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11486   006106  010E               	movlb	14	; () banked
 11487   006108  51D9               	movf	217,w,b	;volatile
 11488   00610A  0BF0               	andlw	-16
 11489   00610C  0908               	iorlw	8
 11490   00610E  6FD9               	movwf	217,b	;volatile
 11491   006110                     
 11492                           ; BSR set to: 14
 11493                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11494   006110  8BD9               	bsf	217,5,b	;volatile
 11495                           
 11496                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11497   006112  0E9F               	movlw	159
 11498   006114  6FD6               	movwf	214,b	;volatile
 11499   006116                     
 11500                           ; BSR set to: 14
 11501                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11502   006116  8A84               	bsf	132,5,c	;volatile
 11503   006118                     
 11504                           ; BSR set to: 14
 11505                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11506   006118  8C84               	bsf	132,6,c	;volatile
 11507   00611A                     
 11508                           ; BSR set to: 14
 11509                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11510   00611A  9BA7               	bcf	167,5,b	;volatile
 11511   00611C                     
 11512                           ; BSR set to: 14
 11513                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11514   00611C  9DA7               	bcf	167,6,b	;volatile
 11515                           
 11516                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11517   00611E  0E1D               	movlw	29
 11518   006120  6F1D               	movwf	29,b	;volatile
 11519                           
 11520                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11521   006122  0E1E               	movlw	30
 11522   006124  6F1C               	movwf	28,b	;volatile
 11523                           
 11524                           ;i2c.c: 18:   RD5PPS=0x1C;
 11525   006126  0E1C               	movlw	28
 11526   006128  6F6F               	movwf	111,b	;volatile
 11527                           
 11528                           ;i2c.c: 19:   RD6PPS=0x1B;
 11529   00612A  0E1B               	movlw	27
 11530   00612C  6F70               	movwf	112,b	;volatile
 11531   00612E                     
 11532                           ; BSR set to: 14
 11533   00612E  0012               	return		;funcret
 11534   006130                     __end_of_I2C_2_Master_Init:
 11535                           	callstack 0
 11536                           
 11537 ;; *************** function _Timer0_init *****************
 11538 ;; Defined at:
 11539 ;;		line 8 in file "timers.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;		None
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;		None
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  1    wreg      void 
 11546 ;; Registers used:
 11547 ;;		wreg, status,2
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11557 ;;Total ram usage:        0 bytes
 11558 ;; Hardware stack levels used: 1
 11559 ;; Hardware stack levels required when called: 1
 11560 ;; This function calls:
 11561 ;;		Nothing
 11562 ;; This function is called by:
 11563 ;;		_main
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567                           	psect	text69
 11568   0061C4                     __ptext69:
 11569                           	callstack 0
 11570   0061C4                     _Timer0_init:
 11571                           	callstack 29
 11572   0061C4                     
 11573                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 11574   0061C4  50D6               	movf	214,w,c	;volatile
 11575   0061C6  0B1F               	andlw	-225
 11576   0061C8  0940               	iorlw	64
 11577   0061CA  6ED6               	movwf	214,c	;volatile
 11578   0061CC                     
 11579                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 11580   0061CC  88D6               	bsf	214,4,c	;volatile
 11581                           
 11582                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 11583   0061CE  50D6               	movf	214,w,c	;volatile
 11584   0061D0  0BF0               	andlw	-16
 11585   0061D2  090D               	iorlw	13
 11586   0061D4  6ED6               	movwf	214,c	;volatile
 11587   0061D6                     
 11588                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 11589   0061D6  88D5               	bsf	213,4,c	;volatile
 11590                           
 11591                           ;timers.c: 16:     TMR0H=0;
 11592   0061D8  0E00               	movlw	0
 11593   0061DA  6ED4               	movwf	212,c	;volatile
 11594                           
 11595                           ;timers.c: 17:     TMR0L=0;
 11596   0061DC  0E00               	movlw	0
 11597   0061DE  6ED3               	movwf	211,c	;volatile
 11598   0061E0                     
 11599                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 11600   0061E0  9ED5               	bcf	213,7,c	;volatile
 11601   0061E2  0012               	return		;funcret
 11602   0061E4                     __end_of_Timer0_init:
 11603                           	callstack 0
 11604                           
 11605 ;; *************** function _LED_init *****************
 11606 ;; Defined at:
 11607 ;;		line 6 in file "LED_buttons.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;		None
 11610 ;; Auto vars:     Size  Location     Type
 11611 ;;		None
 11612 ;; Return value:  Size  Location     Type
 11613 ;;                  1    wreg      void 
 11614 ;; Registers used:
 11615 ;;		None
 11616 ;; Tracked objects:
 11617 ;;		On entry : 0/0
 11618 ;;		On exit  : 0/0
 11619 ;;		Unchanged: 0/0
 11620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11625 ;;Total ram usage:        0 bytes
 11626 ;; Hardware stack levels used: 1
 11627 ;; Hardware stack levels required when called: 1
 11628 ;; This function calls:
 11629 ;;		Nothing
 11630 ;; This function is called by:
 11631 ;;		_main
 11632 ;; This function uses a non-reentrant model
 11633 ;;
 11634                           
 11635                           	psect	text70
 11636   006158                     __ptext70:
 11637                           	callstack 0
 11638   006158                     _LED_init:
 11639                           	callstack 29
 11640   006158                     
 11641                           ;LED_buttons.c: 10:     TRISGbits.TRISG1 = 0;
 11642   006158  9287               	bcf	135,1,c	;volatile
 11643                           
 11644                           ;LED_buttons.c: 11:     TRISAbits.TRISA4 = 0;
 11645   00615A  9881               	bcf	129,4,c	;volatile
 11646                           
 11647                           ;LED_buttons.c: 12:     TRISFbits.TRISF7 = 0;
 11648   00615C  9E86               	bcf	134,7,c	;volatile
 11649                           
 11650                           ;LED_buttons.c: 14:     LATGbits.LATG1=1;
 11651   00615E  827F               	bsf	127,1,c	;volatile
 11652                           
 11653                           ;LED_buttons.c: 15:     LATAbits.LATA4=1;
 11654   006160  8879               	bsf	121,4,c	;volatile
 11655                           
 11656                           ;LED_buttons.c: 16:     LATFbits.LATF7=1;
 11657   006162  8E7E               	bsf	126,7,c	;volatile
 11658                           
 11659                           ;LED_buttons.c: 20:     LATDbits.LATD7=0;
 11660   006164  9E7C               	bcf	124,7,c	;volatile
 11661                           
 11662                           ;LED_buttons.c: 21:     TRISDbits.TRISD7=0;
 11663   006166  9E84               	bcf	132,7,c	;volatile
 11664                           
 11665                           ;LED_buttons.c: 22:     LATHbits.LATH3=0;
 11666   006168  9680               	bcf	128,3,c	;volatile
 11667                           
 11668                           ;LED_buttons.c: 23:     TRISHbits.TRISH3=0;
 11669   00616A  9688               	bcf	136,3,c	;volatile
 11670                           
 11671                           ;LED_buttons.c: 28:     LATHbits.LATH0=0;
 11672   00616C  9080               	bcf	128,0,c	;volatile
 11673                           
 11674                           ;LED_buttons.c: 29:     TRISHbits.TRISH0=0;
 11675   00616E  9088               	bcf	136,0,c	;volatile
 11676                           
 11677                           ;LED_buttons.c: 31:     LATFbits.LATF0=0;
 11678   006170  907E               	bcf	126,0,c	;volatile
 11679                           
 11680                           ;LED_buttons.c: 32:     TRISFbits.TRISF0=0;
 11681   006172  9086               	bcf	134,0,c	;volatile
 11682                           
 11683                           ;LED_buttons.c: 34:     LATDbits.LATD4=0;
 11684   006174  987C               	bcf	124,4,c	;volatile
 11685                           
 11686                           ;LED_buttons.c: 35:     TRISDbits.TRISD4=0;
 11687   006176  9884               	bcf	132,4,c	;volatile
 11688                           
 11689                           ;LED_buttons.c: 38:     LATDbits.LATD3=0;
 11690   006178  967C               	bcf	124,3,c	;volatile
 11691                           
 11692                           ;LED_buttons.c: 39:     TRISDbits.TRISD3=0;
 11693   00617A  9684               	bcf	132,3,c	;volatile
 11694   00617C  0012               	return		;funcret
 11695   00617E                     __end_of_LED_init:
 11696                           	callstack 0
 11697                           
 11698 ;; *************** function _Interrupts_init *****************
 11699 ;; Defined at:
 11700 ;;		line 8 in file "interrupts.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;		None
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;		None
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		None
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11718 ;;Total ram usage:        0 bytes
 11719 ;; Hardware stack levels used: 1
 11720 ;; Hardware stack levels required when called: 1
 11721 ;; This function calls:
 11722 ;;		Nothing
 11723 ;; This function is called by:
 11724 ;;		_main
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text71
 11729   006226                     __ptext71:
 11730                           	callstack 0
 11731   006226                     _Interrupts_init:
 11732                           	callstack 29
 11733   006226                     
 11734                           ;interrupts.c: 10:     INTCONbits.IPEN=0;
 11735   006226  9AF2               	bcf	242,5,c	;volatile
 11736                           
 11737                           ;interrupts.c: 11:     INTCONbits.PEIE=0;
 11738   006228  9CF2               	bcf	242,6,c	;volatile
 11739                           
 11740                           ;interrupts.c: 12:     INTCONbits.GIE=1;
 11741   00622A  8EF2               	bsf	242,7,c	;volatile
 11742                           
 11743                           ;interrupts.c: 13:     PIE0bits.TMR0IE=1;
 11744   00622C  010E               	movlb	14	; () banked
 11745   00622E  8B29               	bsf	41,5,b	;volatile
 11746   006230                     
 11747                           ; BSR set to: 14
 11748   006230  0012               	return		;funcret
 11749   006232                     __end_of_Interrupts_init:
 11750                           	callstack 0
 11751                           
 11752 ;; *************** function _Forwardhalfblock *****************
 11753 ;; Defined at:
 11754 ;;		line 257 in file "dc_motor.c"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11757 ;;		 -> motorL(9), 
 11758 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11759 ;;		 -> motorR(9), 
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;		None
 11762 ;; Return value:  Size  Location     Type
 11763 ;;                  1    wreg      void 
 11764 ;; Registers used:
 11765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11766 ;; Tracked objects:
 11767 ;;		On entry : 0/0
 11768 ;;		On exit  : 0/0
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11774 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11775 ;;Total ram usage:        6 bytes
 11776 ;; Hardware stack levels used: 1
 11777 ;; Hardware stack levels required when called: 4
 11778 ;; This function calls:
 11779 ;;		_fullSpeedAhead
 11780 ;;		_stop
 11781 ;; This function is called by:
 11782 ;;		_main
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           	psect	text72
 11787   005844                     __ptext72:
 11788                           	callstack 0
 11789   005844                     _Forwardhalfblock:
 11790                           	callstack 26
 11791   005844                     
 11792                           ;dc_motor.c: 258:     fullSpeedAhead(mL,mR);
 11793   005844  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11794   005848  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11795   00584C  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11796   005850  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11797   005854  ECDD  F028         	call	_fullSpeedAhead	;wreg free
 11798   005858                     
 11799                           ;dc_motor.c: 259:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11800   005858  0E2B               	movlw	43
 11801   00585A  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11802   00585C  0E9D               	movlw	157
 11803   00585E  6E1E               	movwf	??_Forwardhalfblock^0,c
 11804   005860  0EF9               	movlw	249
 11805   005862                     u6147:
 11806   005862  2EE8               	decfsz	wreg,f,c
 11807   005864  D7FE               	bra	u6147
 11808   005866  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11809   005868  D7FC               	bra	u6147
 11810   00586A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11811   00586C  D7FA               	bra	u6147
 11812   00586E  F000               	nop	
 11813   005870                     
 11814                           ;dc_motor.c: 260:     stop(&motorL, &motorR);
 11815   005870  0E61               	movlw	low _motorL
 11816   005872  6E14               	movwf	stop@mL^0,c
 11817   005874  0E01               	movlw	high _motorL
 11818   005876  6E15               	movwf	(stop@mL+1)^0,c
 11819   005878  0E58               	movlw	low _motorR
 11820   00587A  6E16               	movwf	stop@mR^0,c
 11821   00587C  0E01               	movlw	high _motorR
 11822   00587E  6E17               	movwf	(stop@mR+1)^0,c
 11823   005880  EC70  F029         	call	_stop	;wreg free
 11824                           
 11825                           ;dc_motor.c: 261:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11826   005884  0E05               	movlw	5
 11827   005886  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11828   005888  0E0F               	movlw	15
 11829   00588A  6E1E               	movwf	??_Forwardhalfblock^0,c
 11830   00588C  0EF1               	movlw	241
 11831   00588E                     u6157:
 11832   00588E  2EE8               	decfsz	wreg,f,c
 11833   005890  D7FE               	bra	u6157
 11834   005892  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11835   005894  D7FC               	bra	u6157
 11836   005896  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11837   005898  D7FA               	bra	u6157
 11838   00589A  F000               	nop	
 11839   00589C  0012               	return		;funcret
 11840   00589E                     __end_of_Forwardhalfblock:
 11841                           	callstack 0
 11842                           
 11843 ;; *************** function _stop *****************
 11844 ;; Defined at:
 11845 ;;		line 94 in file "dc_motor.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11848 ;;		 -> motorL(9), 
 11849 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11850 ;;		 -> motorR(9), 
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;		None
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  1    wreg      void 
 11855 ;; Registers used:
 11856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11866 ;;Total ram usage:        6 bytes
 11867 ;; Hardware stack levels used: 1
 11868 ;; Hardware stack levels required when called: 3
 11869 ;; This function calls:
 11870 ;;		_setMotorPWM
 11871 ;; This function is called by:
 11872 ;;		_go_Home
 11873 ;;		_turnRight45
 11874 ;;		_turnLeft45
 11875 ;;		_reverseDetect
 11876 ;;		_homeReverse
 11877 ;;		_reverseOneBlock
 11878 ;;		_ForwardOneBlock
 11879 ;;		_Forwardhalfblock
 11880 ;;		_quaterForward
 11881 ;;		_Backhalfblock
 11882 ;;		_RetryMove
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text73
 11887   0052E0                     __ptext73:
 11888                           	callstack 0
 11889   0052E0                     _stop:
 11890                           	callstack 25
 11891   0052E0                     
 11892                           ;dc_motor.c: 94: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 95: {;dc
      +                          _motor.c: 96:     while (mL->power >0 || mR->power >0){
 11893   0052E0  EF96  F029         	goto	l4146
 11894   0052E4                     l4138:
 11895                           
 11896                           ;dc_motor.c: 98:         mL->power-=10;
 11897   0052E4  C014  FFD9         	movff	stop@mL,fsr2l
 11898   0052E8  C015  FFDA         	movff	stop@mL+1,fsr2h
 11899   0052EC  0E0A               	movlw	10
 11900   0052EE  5EDF               	subwf	indf2,f,c
 11901                           
 11902                           ;dc_motor.c: 99:         mR->power-=10;
 11903   0052F0  C016  FFD9         	movff	stop@mR,fsr2l
 11904   0052F4  C017  FFDA         	movff	stop@mR+1,fsr2h
 11905   0052F8  0E0A               	movlw	10
 11906   0052FA  5EDF               	subwf	indf2,f,c
 11907   0052FC                     
 11908                           ;dc_motor.c: 101:         setMotorPWM(mL);
 11909   0052FC  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11910   005300  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11911   005304  EC3F  F023         	call	_setMotorPWM	;wreg free
 11912   005308                     
 11913                           ;dc_motor.c: 102:         setMotorPWM(mR);
 11914   005308  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11915   00530C  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11916   005310  EC3F  F023         	call	_setMotorPWM	;wreg free
 11917   005314                     
 11918                           ;dc_motor.c: 104:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11919   005314  0E02               	movlw	2
 11920   005316  6E19               	movwf	(??_stop+1)^0,c
 11921   005318  0EA0               	movlw	160
 11922   00531A  6E18               	movwf	??_stop^0,c
 11923   00531C  0E92               	movlw	146
 11924   00531E                     u6167:
 11925   00531E  2EE8               	decfsz	wreg,f,c
 11926   005320  D7FE               	bra	u6167
 11927   005322  2E18               	decfsz	??_stop^0,f,c
 11928   005324  D7FC               	bra	u6167
 11929   005326  2E19               	decfsz	(??_stop+1)^0,f,c
 11930   005328  D7FA               	bra	u6167
 11931   00532A  D000               	nop2	
 11932   00532C                     l4146:
 11933                           
 11934                           ;dc_motor.c: 96:     while (mL->power >0 || mR->power >0){
 11935   00532C  C014  FFD9         	movff	stop@mL,fsr2l
 11936   005330  C015  FFDA         	movff	stop@mL+1,fsr2h
 11937   005334  50DF               	movf	indf2,w,c
 11938   005336  A4D8               	btfss	status,2,c
 11939   005338  EFA0  F029         	goto	u3431
 11940   00533C  EFA2  F029         	goto	u3430
 11941   005340                     u3431:
 11942   005340  EF72  F029         	goto	l4138
 11943   005344                     u3430:
 11944   005344  C016  FFD9         	movff	stop@mR,fsr2l
 11945   005348  C017  FFDA         	movff	stop@mR+1,fsr2h
 11946   00534C  50DF               	movf	indf2,w,c
 11947   00534E  A4D8               	btfss	status,2,c
 11948   005350  EFAC  F029         	goto	u3441
 11949   005354  EFAE  F029         	goto	u3440
 11950   005358                     u3441:
 11951   005358  EF72  F029         	goto	l4138
 11952   00535C                     u3440:
 11953   00535C  0012               	return		;funcret
 11954   00535E                     __end_of_stop:
 11955                           	callstack 0
 11956                           
 11957 ;; *************** function _fullSpeedAhead *****************
 11958 ;; Defined at:
 11959 ;;		line 146 in file "dc_motor.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11962 ;;		 -> motorL(9), 
 11963 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11964 ;;		 -> motorR(9), 
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;		None
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  1    wreg      void 
 11969 ;; Registers used:
 11970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11979 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11980 ;;Total ram usage:        6 bytes
 11981 ;; Hardware stack levels used: 1
 11982 ;; Hardware stack levels required when called: 3
 11983 ;; This function calls:
 11984 ;;		_setMotorPWM
 11985 ;; This function is called by:
 11986 ;;		_main
 11987 ;;		_ForwardOneBlock
 11988 ;;		_Forwardhalfblock
 11989 ;;		_quaterForward
 11990 ;;		_RetryMove
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text74
 11995   0051BA                     __ptext74:
 11996                           	callstack 0
 11997   0051BA                     _fullSpeedAhead:
 11998                           	callstack 24
 11999   0051BA                     
 12000                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
 12001   0051BA  EE20 F001          	lfsr	2,1
 12002   0051BE  5014               	movf	fullSpeedAhead@mL^0,w,c
 12003   0051C0  26D9               	addwf	fsr2l,f,c
 12004   0051C2  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 12005   0051C4  22DA               	addwfc	fsr2h,f,c
 12006   0051C6  0E01               	movlw	1
 12007   0051C8  6EDF               	movwf	indf2,c
 12008                           
 12009                           ;dc_motor.c: 150:     mR->direction =1;
 12010   0051CA  EE20 F001          	lfsr	2,1
 12011   0051CE  5016               	movf	fullSpeedAhead@mR^0,w,c
 12012   0051D0  26D9               	addwf	fsr2l,f,c
 12013   0051D2  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 12014   0051D4  22DA               	addwfc	fsr2h,f,c
 12015   0051D6  0E01               	movlw	1
 12016   0051D8  6EDF               	movwf	indf2,c
 12017                           
 12018                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
 12019   0051DA  EF13  F029         	goto	l4132
 12020   0051DE                     l4124:
 12021                           
 12022                           ;dc_motor.c: 153:         mL->power+=10;
 12023   0051DE  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12024   0051E2  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12025   0051E6  0E0A               	movlw	10
 12026   0051E8  26DF               	addwf	indf2,f,c
 12027                           
 12028                           ;dc_motor.c: 154:         mR->power+=10;
 12029   0051EA  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12030   0051EE  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12031   0051F2  0E0A               	movlw	10
 12032   0051F4  26DF               	addwf	indf2,f,c
 12033   0051F6                     
 12034                           ;dc_motor.c: 156:         setMotorPWM(mL);
 12035   0051F6  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 12036   0051FA  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 12037   0051FE  EC3F  F023         	call	_setMotorPWM	;wreg free
 12038   005202                     
 12039                           ;dc_motor.c: 157:         setMotorPWM(mR);
 12040   005202  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 12041   005206  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 12042   00520A  EC3F  F023         	call	_setMotorPWM	;wreg free
 12043   00520E                     
 12044                           ;dc_motor.c: 160:         _delay((unsigned long)((20)*(64000000/4000.0)));
 12045   00520E  0E02               	movlw	2
 12046   005210  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 12047   005212  0EA0               	movlw	160
 12048   005214  6E18               	movwf	??_fullSpeedAhead^0,c
 12049   005216  0E92               	movlw	146
 12050   005218                     u6177:
 12051   005218  2EE8               	decfsz	wreg,f,c
 12052   00521A  D7FE               	bra	u6177
 12053   00521C  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 12054   00521E  D7FC               	bra	u6177
 12055   005220  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 12056   005222  D7FA               	bra	u6177
 12057   005224  D000               	nop2	
 12058   005226                     l4132:
 12059   005226  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12060   00522A  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12061   00522E  0E32               	movlw	50
 12062   005230  60DF               	cpfslt	indf2,c
 12063   005232  EF1D  F029         	goto	u3411
 12064   005236  EF1F  F029         	goto	u3410
 12065   00523A                     u3411:
 12066   00523A  EF2B  F029         	goto	l622
 12067   00523E                     u3410:
 12068   00523E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12069   005242  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12070   005246  0E31               	movlw	49
 12071   005248  64DF               	cpfsgt	indf2,c
 12072   00524A  EF29  F029         	goto	u3421
 12073   00524E  EF2B  F029         	goto	u3420
 12074   005252                     u3421:
 12075   005252  EFEF  F028         	goto	l4124
 12076   005256                     u3420:
 12077   005256                     l622:
 12078   005256  0012               	return		;funcret
 12079   005258                     __end_of_fullSpeedAhead:
 12080                           	callstack 0
 12081                           
 12082 ;; *************** function _setMotorPWM *****************
 12083 ;; Defined at:
 12084 ;;		line 69 in file "dc_motor.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;  m               2   13[COMRAM] PTR struct DC_motor
 12087 ;;		 -> motorR(9), motorL(9), 
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;  negDuty         1   18[COMRAM] unsigned char 
 12090 ;;  posDuty         1   17[COMRAM] unsigned char 
 12091 ;; Return value:  Size  Location     Type
 12092 ;;                  1    wreg      void 
 12093 ;; Registers used:
 12094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12095 ;; Tracked objects:
 12096 ;;		On entry : 0/0
 12097 ;;		On exit  : 0/0
 12098 ;;		Unchanged: 0/0
 12099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12103 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12104 ;;Total ram usage:        6 bytes
 12105 ;; Hardware stack levels used: 1
 12106 ;; Hardware stack levels required when called: 2
 12107 ;; This function calls:
 12108 ;;		___lwdiv
 12109 ;;		___wmul
 12110 ;; This function is called by:
 12111 ;;		_stop
 12112 ;;		_turnLeft
 12113 ;;		_turnRight
 12114 ;;		_fullSpeedAhead
 12115 ;;		_timed_forward
 12116 ;;		_fullSpeedBack
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120                           	psect	text75
 12121   00467E                     __ptext75:
 12122                           	callstack 0
 12123   00467E                     _setMotorPWM:
 12124                           	callstack 25
 12125   00467E                     
 12126                           ;dc_motor.c: 69: void setMotorPWM(struct DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 12127   00467E  EE20 F002          	lfsr	2,2
 12128   004682  500E               	movf	setMotorPWM@m^0,w,c
 12129   004684  26D9               	addwf	fsr2l,f,c
 12130   004686  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12131   004688  22DA               	addwfc	fsr2h,f,c
 12132   00468A  50DF               	movf	indf2,w,c
 12133   00468C  B4D8               	btfsc	status,2,c
 12134   00468E  EF4B  F023         	goto	u2991
 12135   004692  EF4D  F023         	goto	u2990
 12136   004696                     u2991:
 12137   004696  EF81  F023         	goto	l3902
 12138   00469A                     u2990:
 12139   00469A                     
 12140                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 12141   00469A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12142   00469E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12143   0046A2  50DF               	movf	indf2,w,c
 12144   0046A4  6E10               	movwf	??_setMotorPWM^0,c
 12145   0046A6  5010               	movf	??_setMotorPWM^0,w,c
 12146   0046A8  6E01               	movwf	___wmul@multiplier^0,c
 12147   0046AA  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12148   0046AC  EE20 F003          	lfsr	2,3
 12149   0046B0  500E               	movf	setMotorPWM@m^0,w,c
 12150   0046B2  26D9               	addwf	fsr2l,f,c
 12151   0046B4  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12152   0046B6  22DA               	addwfc	fsr2h,f,c
 12153   0046B8  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12154   0046BC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12155   0046C0  ECBF  F030         	call	___wmul	;wreg free
 12156   0046C4  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12157   0046C8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12158   0046CC  0E00               	movlw	0
 12159   0046CE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12160   0046D0  0E64               	movlw	100
 12161   0046D2  6E09               	movwf	___lwdiv@divisor^0,c
 12162   0046D4  EC29  F02A         	call	___lwdiv	;wreg free
 12163   0046D8  EE20 F003          	lfsr	2,3
 12164   0046DC  500E               	movf	setMotorPWM@m^0,w,c
 12165   0046DE  26D9               	addwf	fsr2l,f,c
 12166   0046E0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12167   0046E2  22DA               	addwfc	fsr2h,f,c
 12168   0046E4  50DF               	movf	indf2,w,c
 12169   0046E6  6E11               	movwf	(??_setMotorPWM+1)^0,c
 12170   0046E8  5007               	movf	?___lwdiv^0,w,c
 12171   0046EA  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 12172   0046EC  6E12               	movwf	setMotorPWM@posDuty^0,c
 12173   0046EE                     
 12174                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 12175   0046EE  EE20 F003          	lfsr	2,3
 12176   0046F2  500E               	movf	setMotorPWM@m^0,w,c
 12177   0046F4  26D9               	addwf	fsr2l,f,c
 12178   0046F6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12179   0046F8  22DA               	addwfc	fsr2h,f,c
 12180   0046FA  50DF               	movf	indf2,w,c
 12181   0046FC  6E13               	movwf	setMotorPWM@negDuty^0,c
 12182                           
 12183                           ;dc_motor.c: 76:     }
 12184   0046FE  EFA4  F023         	goto	l3906
 12185   004702                     l3902:
 12186                           
 12187                           ;dc_motor.c: 78:         posDuty=0;
 12188   004702  0E00               	movlw	0
 12189   004704  6E12               	movwf	setMotorPWM@posDuty^0,c
 12190   004706                     
 12191                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 12192   004706  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12193   00470A  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12194   00470E  50DF               	movf	indf2,w,c
 12195   004710  6E10               	movwf	??_setMotorPWM^0,c
 12196   004712  5010               	movf	??_setMotorPWM^0,w,c
 12197   004714  6E01               	movwf	___wmul@multiplier^0,c
 12198   004716  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12199   004718  EE20 F003          	lfsr	2,3
 12200   00471C  500E               	movf	setMotorPWM@m^0,w,c
 12201   00471E  26D9               	addwf	fsr2l,f,c
 12202   004720  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12203   004722  22DA               	addwfc	fsr2h,f,c
 12204   004724  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12205   004728  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12206   00472C  ECBF  F030         	call	___wmul	;wreg free
 12207   004730  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12208   004734  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12209   004738  0E00               	movlw	0
 12210   00473A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12211   00473C  0E64               	movlw	100
 12212   00473E  6E09               	movwf	___lwdiv@divisor^0,c
 12213   004740  EC29  F02A         	call	___lwdiv	;wreg free
 12214   004744  5007               	movf	?___lwdiv^0,w,c
 12215   004746  6E13               	movwf	setMotorPWM@negDuty^0,c
 12216   004748                     l3906:
 12217                           
 12218                           ;dc_motor.c: 82:     if (m->direction) {
 12219   004748  EE20 F001          	lfsr	2,1
 12220   00474C  500E               	movf	setMotorPWM@m^0,w,c
 12221   00474E  26D9               	addwf	fsr2l,f,c
 12222   004750  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12223   004752  22DA               	addwfc	fsr2h,f,c
 12224   004754  50DF               	movf	indf2,w,c
 12225   004756  B4D8               	btfsc	status,2,c
 12226   004758  EFB0  F023         	goto	u3001
 12227   00475C  EFB2  F023         	goto	u3000
 12228   004760                     u3001:
 12229   004760  EFD4  F023         	goto	l3910
 12230   004764                     u3000:
 12231   004764                     
 12232                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 12233   004764  EE20 F005          	lfsr	2,5
 12234   004768  500E               	movf	setMotorPWM@m^0,w,c
 12235   00476A  26D9               	addwf	fsr2l,f,c
 12236   00476C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12237   00476E  22DA               	addwfc	fsr2h,f,c
 12238   004770  CFDE F010          	movff	postinc2,??_setMotorPWM
 12239   004774  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12240   004778  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12241   00477C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12242   004780  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 12243                           
 12244                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 12245   004784  EE20 F007          	lfsr	2,7
 12246   004788  500E               	movf	setMotorPWM@m^0,w,c
 12247   00478A  26D9               	addwf	fsr2l,f,c
 12248   00478C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12249   00478E  22DA               	addwfc	fsr2h,f,c
 12250   004790  CFDE F010          	movff	postinc2,??_setMotorPWM
 12251   004794  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12252   004798  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12253   00479C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12254   0047A0  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 12255                           
 12256                           ;dc_motor.c: 87:     } else {
 12257   0047A4  EFF4  F023         	goto	l592
 12258   0047A8                     l3910:
 12259                           
 12260                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=negDuty;
 12261   0047A8  EE20 F005          	lfsr	2,5
 12262   0047AC  500E               	movf	setMotorPWM@m^0,w,c
 12263   0047AE  26D9               	addwf	fsr2l,f,c
 12264   0047B0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12265   0047B2  22DA               	addwfc	fsr2h,f,c
 12266   0047B4  CFDE F010          	movff	postinc2,??_setMotorPWM
 12267   0047B8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12268   0047BC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12269   0047C0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12270   0047C4  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 12271                           
 12272                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=posDuty;
 12273   0047C8  EE20 F007          	lfsr	2,7
 12274   0047CC  500E               	movf	setMotorPWM@m^0,w,c
 12275   0047CE  26D9               	addwf	fsr2l,f,c
 12276   0047D0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12277   0047D2  22DA               	addwfc	fsr2h,f,c
 12278   0047D4  CFDE F010          	movff	postinc2,??_setMotorPWM
 12279   0047D8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12280   0047DC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12281   0047E0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12282   0047E4  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 12283   0047E8                     l592:
 12284   0047E8  0012               	return		;funcret
 12285   0047EA                     __end_of_setMotorPWM:
 12286                           	callstack 0
 12287                           
 12288 ;; *************** function ___wmul *****************
 12289 ;; Defined at:
 12290 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;  multiplier      2    0[COMRAM] unsigned int 
 12293 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;  product         2    4[COMRAM] unsigned int 
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  2    0[COMRAM] unsigned int 
 12298 ;; Registers used:
 12299 ;;		wreg, status,2, status,0, prodl, prodh
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12308 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12309 ;;Total ram usage:        6 bytes
 12310 ;; Hardware stack levels used: 1
 12311 ;; Hardware stack levels required when called: 1
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_setMotorPWM
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           	psect	text76
 12320   00617E                     __ptext76:
 12321                           	callstack 0
 12322   00617E                     ___wmul:
 12323                           	callstack 25
 12324   00617E  5001               	movf	___wmul@multiplier^0,w,c
 12325   006180  0203               	mulwf	___wmul@multiplicand^0,c
 12326   006182  CFF3 F005          	movff	prodl,___wmul@product
 12327   006186  CFF4 F006          	movff	prodh,___wmul@product+1
 12328   00618A  5001               	movf	___wmul@multiplier^0,w,c
 12329   00618C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12330   00618E  50F3               	movf	243,w,c
 12331   006190  2606               	addwf	(___wmul@product+1)^0,f,c
 12332   006192  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12333   006194  0203               	mulwf	___wmul@multiplicand^0,c
 12334   006196  50F3               	movf	243,w,c
 12335   006198  2606               	addwf	(___wmul@product+1)^0,f,c
 12336   00619A  C005  F001         	movff	___wmul@product,?___wmul
 12337   00619E  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12338   0061A2  0012               	return		;funcret
 12339   0061A4                     __end_of___wmul:
 12340                           	callstack 0
 12341                           
 12342 ;; *************** function ___lwdiv *****************
 12343 ;; Defined at:
 12344 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;  dividend        2    6[COMRAM] unsigned int 
 12347 ;;  divisor         2    8[COMRAM] unsigned int 
 12348 ;; Auto vars:     Size  Location     Type
 12349 ;;  quotient        2   10[COMRAM] unsigned int 
 12350 ;;  counter         1   12[COMRAM] unsigned char 
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  2    6[COMRAM] unsigned int 
 12353 ;; Registers used:
 12354 ;;		wreg, status,2, status,0
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12360 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12361 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12363 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;Total ram usage:        7 bytes
 12365 ;; Hardware stack levels used: 1
 12366 ;; Hardware stack levels required when called: 1
 12367 ;; This function calls:
 12368 ;;		Nothing
 12369 ;; This function is called by:
 12370 ;;		_setMotorPWM
 12371 ;; This function uses a non-reentrant model
 12372 ;;
 12373                           
 12374                           	psect	text77
 12375   005452                     __ptext77:
 12376                           	callstack 0
 12377   005452                     ___lwdiv:
 12378                           	callstack 25
 12379   005452  0E00               	movlw	0
 12380   005454  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 12381   005456  0E00               	movlw	0
 12382   005458  6E0B               	movwf	___lwdiv@quotient^0,c
 12383   00545A  5009               	movf	___lwdiv@divisor^0,w,c
 12384   00545C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 12385   00545E  B4D8               	btfsc	status,2,c
 12386   005460  EF34  F02A         	goto	u2921
 12387   005464  EF36  F02A         	goto	u2920
 12388   005468                     u2921:
 12389   005468  EF5E  F02A         	goto	l1250
 12390   00546C                     u2920:
 12391   00546C  0E01               	movlw	1
 12392   00546E  6E0D               	movwf	___lwdiv@counter^0,c
 12393   005470  EF3E  F02A         	goto	l3868
 12394   005474                     l3866:
 12395   005474  90D8               	bcf	status,0,c
 12396   005476  3609               	rlcf	___lwdiv@divisor^0,f,c
 12397   005478  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 12398   00547A  2A0D               	incf	___lwdiv@counter^0,f,c
 12399   00547C                     l3868:
 12400   00547C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 12401   00547E  EF43  F02A         	goto	u2931
 12402   005482  EF45  F02A         	goto	u2930
 12403   005486                     u2931:
 12404   005486  EF3A  F02A         	goto	l3866
 12405   00548A                     u2930:
 12406   00548A                     l3870:
 12407   00548A  90D8               	bcf	status,0,c
 12408   00548C  360B               	rlcf	___lwdiv@quotient^0,f,c
 12409   00548E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 12410   005490  5009               	movf	___lwdiv@divisor^0,w,c
 12411   005492  5C07               	subwf	___lwdiv@dividend^0,w,c
 12412   005494  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12413   005496  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 12414   005498  A0D8               	btfss	status,0,c
 12415   00549A  EF51  F02A         	goto	u2941
 12416   00549E  EF53  F02A         	goto	u2940
 12417   0054A2                     u2941:
 12418   0054A2  EF58  F02A         	goto	l3878
 12419   0054A6                     u2940:
 12420   0054A6  5009               	movf	___lwdiv@divisor^0,w,c
 12421   0054A8  5E07               	subwf	___lwdiv@dividend^0,f,c
 12422   0054AA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12423   0054AC  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 12424   0054AE  800B               	bsf	___lwdiv@quotient^0,0,c
 12425   0054B0                     l3878:
 12426   0054B0  90D8               	bcf	status,0,c
 12427   0054B2  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 12428   0054B4  3209               	rrcf	___lwdiv@divisor^0,f,c
 12429   0054B6  2E0D               	decfsz	___lwdiv@counter^0,f,c
 12430   0054B8  EF45  F02A         	goto	l3870
 12431   0054BC                     l1250:
 12432   0054BC  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 12433   0054C0  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12434   0054C4  0012               	return		;funcret
 12435   0054C6                     __end_of___lwdiv:
 12436                           	callstack 0
 12437                           
 12438 ;; *************** function _Colour_decider *****************
 12439 ;; Defined at:
 12440 ;;		line 122 in file "color.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;  vals            2   74[COMRAM] PTR struct RGB
 12443 ;;		 -> vals(8), 
 12444 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 12445 ;;		 -> rel(12), 
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;  RGB_col        12    6[BANK0 ] float [3]
 12448 ;;  Hue             4   28[BANK0 ] float 
 12449 ;;  Cmin            4   22[BANK0 ] float 
 12450 ;;  Cmax            4   18[BANK0 ] float 
 12451 ;;  i               2   26[BANK0 ] int 
 12452 ;;  Cmax_i          2    4[BANK0 ] int 
 12453 ;; Return value:  Size  Location     Type
 12454 ;;                  2   74[COMRAM] int 
 12455 ;; Registers used:
 12456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12457 ;; Tracked objects:
 12458 ;;		On entry : 0/0
 12459 ;;		On exit  : 0/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12463 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12465 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12466 ;;Total ram usage:       38 bytes
 12467 ;; Hardware stack levels used: 1
 12468 ;; Hardware stack levels required when called: 3
 12469 ;; This function calls:
 12470 ;;		___fladd
 12471 ;;		___fldiv
 12472 ;;		___fleq
 12473 ;;		___flge
 12474 ;;		___flmul
 12475 ;;		___flsub
 12476 ;;		___xxtofl
 12477 ;; This function is called by:
 12478 ;;		_main
 12479 ;; This function uses a non-reentrant model
 12480 ;;
 12481                           
 12482                           	psect	text78
 12483   001838                     __ptext78:
 12484                           	callstack 0
 12485   001838                     _Colour_decider:
 12486                           	callstack 27
 12487   001838                     
 12488                           ;color.c: 123:     float Cmax = 0;
 12489   001838  0E00               	movlw	0
 12490   00183A  0100               	movlb	0	; () banked
 12491   00183C  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 12492   00183E  0E00               	movlw	0
 12493   001840  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 12494   001842  0E00               	movlw	0
 12495   001844  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 12496   001846  0E00               	movlw	0
 12497   001848  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 12498                           
 12499                           ;color.c: 124:     float Cmin= 100000;
 12500   00184A  0E00               	movlw	0
 12501   00184C  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12502   00184E  0E50               	movlw	80
 12503   001850  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12504   001852  0EC3               	movlw	195
 12505   001854  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12506   001856  0E47               	movlw	71
 12507   001858  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12508                           
 12509                           ;color.c: 125:     int Cmax_i =4;
 12510   00185A  0E00               	movlw	0
 12511   00185C  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12512   00185E  0E04               	movlw	4
 12513   001860  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12514   001862                     
 12515                           ; BSR set to: 0
 12516                           ;color.c: 127:     int i;;color.c: 128:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12517   001862  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12518   001866  0E0B               	movlw	11
 12519   001868                     u5191:
 12520   001868  6ADE               	clrf	postinc2,c
 12521   00186A  06E8               	decf	wreg,f,c
 12522   00186C  E2FD               	bc	u5191
 12523   00186E                     
 12524                           ; BSR set to: 0
 12525   00186E  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12526   001872  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12527   001876  CFDE F001          	movff	postinc2,___xxtofl@val
 12528   00187A  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12529   00187E  0E00               	movlw	0
 12530   001880  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12531   001882  0EFF               	movlw	-1
 12532   001884  6E03               	movwf	(___xxtofl@val+2)^0,c
 12533   001886  6E04               	movwf	(___xxtofl@val+3)^0,c
 12534   001888  0E01               	movlw	1
 12535   00188A  ECCB  F020         	call	___xxtofl
 12536   00188E  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12537   001892  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12538   001896  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12539   00189A  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12540   00189E  EE20 F002          	lfsr	2,2
 12541   0018A2  504B               	movf	Colour_decider@vals^0,w,c
 12542   0018A4  26D9               	addwf	fsr2l,f,c
 12543   0018A6  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12544   0018A8  22DA               	addwfc	fsr2h,f,c
 12545   0018AA  CFDE F001          	movff	postinc2,___xxtofl@val
 12546   0018AE  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12547   0018B2  0E00               	movlw	0
 12548   0018B4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12549   0018B6  0EFF               	movlw	-1
 12550   0018B8  6E03               	movwf	(___xxtofl@val+2)^0,c
 12551   0018BA  6E04               	movwf	(___xxtofl@val+3)^0,c
 12552   0018BC  0E01               	movlw	1
 12553   0018BE  ECCB  F020         	call	___xxtofl
 12554   0018C2  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12555   0018C6  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12556   0018CA  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12557   0018CE  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12558   0018D2  EE20 F004          	lfsr	2,4
 12559   0018D6  504B               	movf	Colour_decider@vals^0,w,c
 12560   0018D8  26D9               	addwf	fsr2l,f,c
 12561   0018DA  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12562   0018DC  22DA               	addwfc	fsr2h,f,c
 12563   0018DE  CFDE F001          	movff	postinc2,___xxtofl@val
 12564   0018E2  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12565   0018E6  0E00               	movlw	0
 12566   0018E8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12567   0018EA  0EFF               	movlw	-1
 12568   0018EC  6E03               	movwf	(___xxtofl@val+2)^0,c
 12569   0018EE  6E04               	movwf	(___xxtofl@val+3)^0,c
 12570   0018F0  0E01               	movlw	1
 12571   0018F2  ECCB  F020         	call	___xxtofl
 12572   0018F6  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12573   0018FA  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12574   0018FE  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12575   001902  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12576   001906                     
 12577                           ;color.c: 129:     float Hue;;color.c: 132:     for (i=0; i<3 ;i++){
 12578   001906  0E00               	movlw	0
 12579   001908  0100               	movlb	0	; () banked
 12580   00190A  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12581   00190C  0E00               	movlw	0
 12582   00190E  6F7A               	movwf	Colour_decider@i& (0+255),b
 12583   001910                     l5432:
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;color.c: 133:         if (RGB_col[i]>Cmax){
 12587   001910  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12588   001914  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12589   001918  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12590   00191C  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12591   001920  0E66               	movlw	low Colour_decider@RGB_col
 12592   001922  6E4F               	movwf	??_Colour_decider^0,c
 12593   001924  0E00               	movlw	high Colour_decider@RGB_col
 12594   001926  6E50               	movwf	(??_Colour_decider+1)^0,c
 12595   001928  90D8               	bcf	status,0,c
 12596   00192A  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12597   00192C  6ED9               	movwf	fsr2l,c
 12598   00192E  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12599   001930  6EDA               	movwf	fsr2h,c
 12600   001932  90D8               	bcf	status,0,c
 12601   001934  36D9               	rlcf	fsr2l,f,c
 12602   001936  36DA               	rlcf	fsr2h,f,c
 12603   001938  504F               	movf	??_Colour_decider^0,w,c
 12604   00193A  26D9               	addwf	fsr2l,f,c
 12605   00193C  5050               	movf	(??_Colour_decider+1)^0,w,c
 12606   00193E  22DA               	addwfc	fsr2h,f,c
 12607   001940  CFDE F02E          	movff	postinc2,___flge@ff2
 12608   001944  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12609   001948  CFDE F030          	movff	postinc2,___flge@ff2+2
 12610   00194C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12611   001950  EC2A  F025         	call	___flge	;wreg free
 12612   001954  B0D8               	btfsc	status,0,c
 12613   001956  EFAF  F00C         	goto	u5201
 12614   00195A  EFB1  F00C         	goto	u5200
 12615   00195E                     u5201:
 12616   00195E  EFCE  F00C         	goto	l5438
 12617   001962                     u5200:
 12618   001962                     
 12619                           ;color.c: 134:             Cmax=RGB_col[i];
 12620   001962  0E66               	movlw	low Colour_decider@RGB_col
 12621   001964  6E4F               	movwf	??_Colour_decider^0,c
 12622   001966  0E00               	movlw	high Colour_decider@RGB_col
 12623   001968  6E50               	movwf	(??_Colour_decider+1)^0,c
 12624   00196A  90D8               	bcf	status,0,c
 12625   00196C  0100               	movlb	0	; () banked
 12626   00196E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12627   001970  6ED9               	movwf	fsr2l,c
 12628   001972  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12629   001974  6EDA               	movwf	fsr2h,c
 12630   001976  90D8               	bcf	status,0,c
 12631   001978  36D9               	rlcf	fsr2l,f,c
 12632   00197A  36DA               	rlcf	fsr2h,f,c
 12633   00197C  504F               	movf	??_Colour_decider^0,w,c
 12634   00197E  26D9               	addwf	fsr2l,f,c
 12635   001980  5050               	movf	(??_Colour_decider+1)^0,w,c
 12636   001982  22DA               	addwfc	fsr2h,f,c
 12637   001984  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12638   001988  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12639   00198C  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12640   001990  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12641   001994                     
 12642                           ; BSR set to: 0
 12643                           ;color.c: 135:             Cmax_i=i;
 12644   001994  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12645   001998  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12646   00199C                     l5438:
 12647                           
 12648                           ;color.c: 137:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12649   00199C  0E66               	movlw	low Colour_decider@RGB_col
 12650   00199E  6E4F               	movwf	??_Colour_decider^0,c
 12651   0019A0  0E00               	movlw	high Colour_decider@RGB_col
 12652   0019A2  6E50               	movwf	(??_Colour_decider+1)^0,c
 12653   0019A4  90D8               	bcf	status,0,c
 12654   0019A6  0100               	movlb	0	; () banked
 12655   0019A8  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12656   0019AA  6ED9               	movwf	fsr2l,c
 12657   0019AC  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12658   0019AE  6EDA               	movwf	fsr2h,c
 12659   0019B0  90D8               	bcf	status,0,c
 12660   0019B2  36D9               	rlcf	fsr2l,f,c
 12661   0019B4  36DA               	rlcf	fsr2h,f,c
 12662   0019B6  504F               	movf	??_Colour_decider^0,w,c
 12663   0019B8  26D9               	addwf	fsr2l,f,c
 12664   0019BA  5050               	movf	(??_Colour_decider+1)^0,w,c
 12665   0019BC  22DA               	addwfc	fsr2h,f,c
 12666   0019BE  CFDE F02A          	movff	postinc2,___flge@ff1
 12667   0019C2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12668   0019C6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12669   0019CA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12670   0019CE  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12671   0019D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12672   0019D6  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12673   0019DA  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12674   0019DE  EC2A  F025         	call	___flge	;wreg free
 12675   0019E2  B0D8               	btfsc	status,0,c
 12676   0019E4  EFF6  F00C         	goto	u5211
 12677   0019E8  EFF8  F00C         	goto	u5210
 12678   0019EC                     u5211:
 12679   0019EC  EF11  F00D         	goto	l5442
 12680   0019F0                     u5210:
 12681   0019F0  0E66               	movlw	low Colour_decider@RGB_col
 12682   0019F2  6E4F               	movwf	??_Colour_decider^0,c
 12683   0019F4  0E00               	movlw	high Colour_decider@RGB_col
 12684   0019F6  6E50               	movwf	(??_Colour_decider+1)^0,c
 12685   0019F8  90D8               	bcf	status,0,c
 12686   0019FA  0100               	movlb	0	; () banked
 12687   0019FC  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12688   0019FE  6ED9               	movwf	fsr2l,c
 12689   001A00  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12690   001A02  6EDA               	movwf	fsr2h,c
 12691   001A04  90D8               	bcf	status,0,c
 12692   001A06  36D9               	rlcf	fsr2l,f,c
 12693   001A08  36DA               	rlcf	fsr2h,f,c
 12694   001A0A  504F               	movf	??_Colour_decider^0,w,c
 12695   001A0C  26D9               	addwf	fsr2l,f,c
 12696   001A0E  5050               	movf	(??_Colour_decider+1)^0,w,c
 12697   001A10  22DA               	addwfc	fsr2h,f,c
 12698   001A12  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12699   001A16  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12700   001A1A  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12701   001A1E  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12702   001A22                     l5442:
 12703                           
 12704                           ;color.c: 138:     }
 12705   001A22  0100               	movlb	0	; () banked
 12706   001A24  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12707   001A26  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12708   001A28                     
 12709                           ; BSR set to: 0
 12710   001A28  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12711   001A2A  EF20  F00D         	goto	u5221
 12712   001A2E  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12713   001A30  E109               	bnz	u5220
 12714   001A32  0E03               	movlw	3
 12715   001A34  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12716   001A36  A0D8               	btfss	status,0,c
 12717   001A38  EF20  F00D         	goto	u5221
 12718   001A3C  EF22  F00D         	goto	u5220
 12719   001A40                     u5221:
 12720   001A40  EF88  F00C         	goto	l5432
 12721   001A44                     u5220:
 12722   001A44                     
 12723                           ; BSR set to: 0
 12724                           ;color.c: 140:     if (Cmax-Cmin==0){return 0;}
 12725   001A44  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12726   001A48  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12727   001A4C  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12728   001A50  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12729   001A54  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12730   001A58  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12731   001A5C  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12732   001A60  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12733   001A64  EC32  F02F         	call	___flsub	;wreg free
 12734   001A68  C02A  F032         	movff	?___flsub,___fleq@ff1
 12735   001A6C  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12736   001A70  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12737   001A74  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12738   001A78  0E00               	movlw	0
 12739   001A7A  6E36               	movwf	___fleq@ff2^0,c
 12740   001A7C  0E00               	movlw	0
 12741   001A7E  6E37               	movwf	(___fleq@ff2+1)^0,c
 12742   001A80  0E00               	movlw	0
 12743   001A82  6E38               	movwf	(___fleq@ff2+2)^0,c
 12744   001A84  0E00               	movlw	0
 12745   001A86  6E39               	movwf	(___fleq@ff2+3)^0,c
 12746   001A88  EC9B  F027         	call	___fleq	;wreg free
 12747   001A8C  A0D8               	btfss	status,0,c
 12748   001A8E  EF4B  F00D         	goto	u5231
 12749   001A92  EF4D  F00D         	goto	u5230
 12750   001A96                     u5231:
 12751   001A96  EF53  F00D         	goto	l5452
 12752   001A9A                     u5230:
 12753   001A9A                     l5448:
 12754   001A9A  0E00               	movlw	0
 12755   001A9C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12756   001A9E  0E00               	movlw	0
 12757   001AA0  6E4B               	movwf	?_Colour_decider^0,c
 12758   001AA2  EF15  F011         	goto	l80
 12759   001AA6                     l5452:
 12760                           
 12761                           ;color.c: 143:     if (Cmax_i==0){
 12762   001AA6  0100               	movlb	0	; () banked
 12763   001AA8  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12764   001AAA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12765   001AAC  A4D8               	btfss	status,2,c
 12766   001AAE  EF5B  F00D         	goto	u5241
 12767   001AB2  EF5D  F00D         	goto	u5240
 12768   001AB6                     u5241:
 12769   001AB6  EFD1  F00D         	goto	l5460
 12770   001ABA                     u5240:
 12771   001ABA                     
 12772                           ; BSR set to: 0
 12773                           ;color.c: 144:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12774   001ABA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12775   001ABE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12776   001AC2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12777   001AC6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12778   001ACA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12779   001ACE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12780   001AD2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12781   001AD6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12782   001ADA  EC32  F02F         	call	___flsub	;wreg free
 12783   001ADE  C02A  F036         	movff	?___flsub,___fldiv@a
 12784   001AE2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12785   001AE6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12786   001AEA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12787   001AEE  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12788   001AF2  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12789   001AF6  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12790   001AFA  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12791   001AFE  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12792   001B02  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12793   001B06  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12794   001B0A  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12795   001B0E  EC32  F02F         	call	___flsub	;wreg free
 12796   001B12  C02A  F032         	movff	?___flsub,___fldiv@b
 12797   001B16  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12798   001B1A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12799   001B1E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12800   001B22  EC8B  F015         	call	___fldiv	;wreg free
 12801   001B26  C032  F011         	movff	?___fldiv,___flmul@b
 12802   001B2A  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12803   001B2E  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12804   001B32  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12805   001B36  0E00               	movlw	0
 12806   001B38  6E15               	movwf	___flmul@a^0,c
 12807   001B3A  0E00               	movlw	0
 12808   001B3C  6E16               	movwf	(___flmul@a+1)^0,c
 12809   001B3E  0E70               	movlw	112
 12810   001B40  6E17               	movwf	(___flmul@a+2)^0,c
 12811   001B42  0E42               	movlw	66
 12812   001B44  6E18               	movwf	(___flmul@a+3)^0,c
 12813   001B46  EC76  F013         	call	___flmul	;wreg free
 12814   001B4A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12815   001B4E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12816   001B52  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12817   001B56  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12818   001B5A                     
 12819                           ;color.c: 146:         if (Hue < 0) {Hue += 360;}
 12820   001B5A  0100               	movlb	0	; () banked
 12821   001B5C  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12822   001B5E  EFB5  F00D         	goto	u5250
 12823   001B62  EFB3  F00D         	goto	u5251
 12824   001B66                     u5251:
 12825   001B66  EFB0  F00E         	goto	l5470
 12826   001B6A                     u5250:
 12827   001B6A                     
 12828                           ; BSR set to: 0
 12829   001B6A  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12830   001B6E  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12831   001B72  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12832   001B76  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12833   001B7A  0E00               	movlw	0
 12834   001B7C  6E05               	movwf	___fladd@a^0,c
 12835   001B7E  0E00               	movlw	0
 12836   001B80  6E06               	movwf	(___fladd@a+1)^0,c
 12837   001B82  0EB4               	movlw	180
 12838   001B84  6E07               	movwf	(___fladd@a+2)^0,c
 12839   001B86  0E43               	movlw	67
 12840   001B88  6E08               	movwf	(___fladd@a+3)^0,c
 12841   001B8A  EC16  F011         	call	___fladd	;wreg free
 12842   001B8E  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12843   001B92  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12844   001B96  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12845   001B9A  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12846   001B9E  EFB0  F00E         	goto	l5470
 12847   001BA2                     l5460:
 12848                           
 12849                           ; BSR set to: 0
 12850   001BA2  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12851   001BA4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12852   001BA6  A4D8               	btfss	status,2,c
 12853   001BA8  EFD8  F00D         	goto	u5261
 12854   001BAC  EFDA  F00D         	goto	u5260
 12855   001BB0                     u5261:
 12856   001BB0  EF46  F00E         	goto	l5466
 12857   001BB4                     u5260:
 12858   001BB4                     
 12859                           ; BSR set to: 0
 12860                           ;color.c: 150:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12861   001BB4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12862   001BB8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12863   001BBC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12864   001BC0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12865   001BC4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12866   001BC8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12867   001BCC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12868   001BD0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12869   001BD4  EC32  F02F         	call	___flsub	;wreg free
 12870   001BD8  C02A  F036         	movff	?___flsub,___fldiv@a
 12871   001BDC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12872   001BE0  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12873   001BE4  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12874   001BE8  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12875   001BEC  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12876   001BF0  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12877   001BF4  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12878   001BF8  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12879   001BFC  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12880   001C00  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12881   001C04  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12882   001C08  EC32  F02F         	call	___flsub	;wreg free
 12883   001C0C  C02A  F032         	movff	?___flsub,___fldiv@b
 12884   001C10  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12885   001C14  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12886   001C18  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12887   001C1C  EC8B  F015         	call	___fldiv	;wreg free
 12888   001C20  C032  F060         	movff	?___fldiv,_Colour_decider$3315
 12889   001C24  C033  F061         	movff	?___fldiv+1,_Colour_decider$3315+1
 12890   001C28  C034  F062         	movff	?___fldiv+2,_Colour_decider$3315+2
 12891   001C2C  C035  F063         	movff	?___fldiv+3,_Colour_decider$3315+3
 12892   001C30                     
 12893                           ;color.c: 150:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12894   001C30  0E00               	movlw	0
 12895   001C32  6E05               	movwf	___fladd@a^0,c
 12896   001C34  0E00               	movlw	0
 12897   001C36  6E06               	movwf	(___fladd@a+1)^0,c
 12898   001C38  0E00               	movlw	0
 12899   001C3A  6E07               	movwf	(___fladd@a+2)^0,c
 12900   001C3C  0E40               	movlw	64
 12901   001C3E  6E08               	movwf	(___fladd@a+3)^0,c
 12902   001C40  C060  F001         	movff	_Colour_decider$3315,___fladd@b
 12903   001C44  C061  F002         	movff	_Colour_decider$3315+1,___fladd@b+1
 12904   001C48  C062  F003         	movff	_Colour_decider$3315+2,___fladd@b+2
 12905   001C4C  C063  F004         	movff	_Colour_decider$3315+3,___fladd@b+3
 12906   001C50  EC16  F011         	call	___fladd	;wreg free
 12907   001C54  C001  F011         	movff	?___fladd,___flmul@b
 12908   001C58  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12909   001C5C  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12910   001C60  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12911   001C64  0E00               	movlw	0
 12912   001C66  6E15               	movwf	___flmul@a^0,c
 12913   001C68  0E00               	movlw	0
 12914   001C6A  6E16               	movwf	(___flmul@a+1)^0,c
 12915   001C6C  0E70               	movlw	112
 12916   001C6E  6E17               	movwf	(___flmul@a+2)^0,c
 12917   001C70  0E42               	movlw	66
 12918   001C72  6E18               	movwf	(___flmul@a+3)^0,c
 12919   001C74  EC76  F013         	call	___flmul	;wreg free
 12920   001C78  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12921   001C7C  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12922   001C80  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12923   001C84  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12924                           
 12925                           ;color.c: 152:     }
 12926   001C88  EFB0  F00E         	goto	l5470
 12927   001C8C                     l5466:
 12928                           
 12929                           ; BSR set to: 0
 12930                           ;color.c: 155:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12931   001C8C  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12932   001C90  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12933   001C94  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12934   001C98  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12935   001C9C  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12936   001CA0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12937   001CA4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12938   001CA8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12939   001CAC  EC32  F02F         	call	___flsub	;wreg free
 12940   001CB0  C02A  F036         	movff	?___flsub,___fldiv@a
 12941   001CB4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12942   001CB8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12943   001CBC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12944   001CC0  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12945   001CC4  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12946   001CC8  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12947   001CCC  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12948   001CD0  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12949   001CD4  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12950   001CD8  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12951   001CDC  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12952   001CE0  EC32  F02F         	call	___flsub	;wreg free
 12953   001CE4  C02A  F032         	movff	?___flsub,___fldiv@b
 12954   001CE8  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12955   001CEC  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12956   001CF0  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12957   001CF4  EC8B  F015         	call	___fldiv	;wreg free
 12958   001CF8  C032  F060         	movff	?___fldiv,_Colour_decider$3315
 12959   001CFC  C033  F061         	movff	?___fldiv+1,_Colour_decider$3315+1
 12960   001D00  C034  F062         	movff	?___fldiv+2,_Colour_decider$3315+2
 12961   001D04  C035  F063         	movff	?___fldiv+3,_Colour_decider$3315+3
 12962   001D08                     
 12963                           ;color.c: 155:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12964   001D08  0E00               	movlw	0
 12965   001D0A  6E05               	movwf	___fladd@a^0,c
 12966   001D0C  0E00               	movlw	0
 12967   001D0E  6E06               	movwf	(___fladd@a+1)^0,c
 12968   001D10  0E80               	movlw	128
 12969   001D12  6E07               	movwf	(___fladd@a+2)^0,c
 12970   001D14  0E40               	movlw	64
 12971   001D16  6E08               	movwf	(___fladd@a+3)^0,c
 12972   001D18  C060  F001         	movff	_Colour_decider$3315,___fladd@b
 12973   001D1C  C061  F002         	movff	_Colour_decider$3315+1,___fladd@b+1
 12974   001D20  C062  F003         	movff	_Colour_decider$3315+2,___fladd@b+2
 12975   001D24  C063  F004         	movff	_Colour_decider$3315+3,___fladd@b+3
 12976   001D28  EC16  F011         	call	___fladd	;wreg free
 12977   001D2C  C001  F011         	movff	?___fladd,___flmul@b
 12978   001D30  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12979   001D34  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12980   001D38  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12981   001D3C  0E00               	movlw	0
 12982   001D3E  6E15               	movwf	___flmul@a^0,c
 12983   001D40  0E00               	movlw	0
 12984   001D42  6E16               	movwf	(___flmul@a+1)^0,c
 12985   001D44  0E70               	movlw	112
 12986   001D46  6E17               	movwf	(___flmul@a+2)^0,c
 12987   001D48  0E42               	movlw	66
 12988   001D4A  6E18               	movwf	(___flmul@a+3)^0,c
 12989   001D4C  EC76  F013         	call	___flmul	;wreg free
 12990   001D50  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12991   001D54  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12992   001D58  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12993   001D5C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12994   001D60                     l5470:
 12995                           
 12996                           ;color.c: 159:     if ((330<=Hue)&(Hue<=360)){
 12997   001D60  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12998   001D64  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12999   001D68  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13000   001D6C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13001   001D70  0E00               	movlw	0
 13002   001D72  6E2E               	movwf	___flge@ff2^0,c
 13003   001D74  0E00               	movlw	0
 13004   001D76  6E2F               	movwf	(___flge@ff2+1)^0,c
 13005   001D78  0EA5               	movlw	165
 13006   001D7A  6E30               	movwf	(___flge@ff2+2)^0,c
 13007   001D7C  0E43               	movlw	67
 13008   001D7E  6E31               	movwf	(___flge@ff2+3)^0,c
 13009   001D80  EC2A  F025         	call	___flge	;wreg free
 13010   001D84  A0D8               	btfss	status,0,c
 13011   001D86  EFC7  F00E         	goto	u5271
 13012   001D8A  EFC9  F00E         	goto	u5270
 13013   001D8E                     u5271:
 13014   001D8E  EFE8  F00E         	goto	l5480
 13015   001D92                     u5270:
 13016   001D92  0E00               	movlw	0
 13017   001D94  6E2A               	movwf	___flge@ff1^0,c
 13018   001D96  0E00               	movlw	0
 13019   001D98  6E2B               	movwf	(___flge@ff1+1)^0,c
 13020   001D9A  0EB4               	movlw	180
 13021   001D9C  6E2C               	movwf	(___flge@ff1+2)^0,c
 13022   001D9E  0E43               	movlw	67
 13023   001DA0  6E2D               	movwf	(___flge@ff1+3)^0,c
 13024   001DA2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13025   001DA6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13026   001DAA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13027   001DAE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13028   001DB2  EC2A  F025         	call	___flge	;wreg free
 13029   001DB6  A0D8               	btfss	status,0,c
 13030   001DB8  EFE0  F00E         	goto	u5281
 13031   001DBC  EFE2  F00E         	goto	u5280
 13032   001DC0                     u5281:
 13033   001DC0  EFE8  F00E         	goto	l5480
 13034   001DC4                     u5280:
 13035   001DC4                     
 13036                           ;color.c: 160:         return 1;
 13037   001DC4  0E00               	movlw	0
 13038   001DC6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13039   001DC8  0E01               	movlw	1
 13040   001DCA  6E4B               	movwf	?_Colour_decider^0,c
 13041   001DCC  EF15  F011         	goto	l80
 13042   001DD0                     l5480:
 13043   001DD0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13044   001DD4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13045   001DD8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13046   001DDC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13047   001DE0  0E00               	movlw	0
 13048   001DE2  6E2E               	movwf	___flge@ff2^0,c
 13049   001DE4  0E00               	movlw	0
 13050   001DE6  6E2F               	movwf	(___flge@ff2+1)^0,c
 13051   001DE8  0EA0               	movlw	160
 13052   001DEA  6E30               	movwf	(___flge@ff2+2)^0,c
 13053   001DEC  0E40               	movlw	64
 13054   001DEE  6E31               	movwf	(___flge@ff2+3)^0,c
 13055   001DF0  EC2A  F025         	call	___flge	;wreg free
 13056   001DF4  A0D8               	btfss	status,0,c
 13057   001DF6  EFFF  F00E         	goto	u5291
 13058   001DFA  EF01  F00F         	goto	u5290
 13059   001DFE                     u5291:
 13060   001DFE  EF20  F00F         	goto	l5490
 13061   001E02                     u5290:
 13062   001E02  0E00               	movlw	0
 13063   001E04  6E2A               	movwf	___flge@ff1^0,c
 13064   001E06  0E00               	movlw	0
 13065   001E08  6E2B               	movwf	(___flge@ff1+1)^0,c
 13066   001E0A  0E30               	movlw	48
 13067   001E0C  6E2C               	movwf	(___flge@ff1+2)^0,c
 13068   001E0E  0E41               	movlw	65
 13069   001E10  6E2D               	movwf	(___flge@ff1+3)^0,c
 13070   001E12  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13071   001E16  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13072   001E1A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13073   001E1E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13074   001E22  EC2A  F025         	call	___flge	;wreg free
 13075   001E26  A0D8               	btfss	status,0,c
 13076   001E28  EF18  F00F         	goto	u5301
 13077   001E2C  EF1A  F00F         	goto	u5300
 13078   001E30                     u5301:
 13079   001E30  EF20  F00F         	goto	l5490
 13080   001E34                     u5300:
 13081   001E34                     
 13082                           ;color.c: 164:         return 2;
 13083   001E34  0E00               	movlw	0
 13084   001E36  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13085   001E38  0E02               	movlw	2
 13086   001E3A  6E4B               	movwf	?_Colour_decider^0,c
 13087   001E3C  EF15  F011         	goto	l80
 13088   001E40                     l5490:
 13089   001E40  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13090   001E44  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13091   001E48  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13092   001E4C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13093   001E50  0E00               	movlw	0
 13094   001E52  6E2E               	movwf	___flge@ff2^0,c
 13095   001E54  0E00               	movlw	0
 13096   001E56  6E2F               	movwf	(___flge@ff2+1)^0,c
 13097   001E58  0E90               	movlw	144
 13098   001E5A  6E30               	movwf	(___flge@ff2+2)^0,c
 13099   001E5C  0E41               	movlw	65
 13100   001E5E  6E31               	movwf	(___flge@ff2+3)^0,c
 13101   001E60  EC2A  F025         	call	___flge	;wreg free
 13102   001E64  A0D8               	btfss	status,0,c
 13103   001E66  EF37  F00F         	goto	u5311
 13104   001E6A  EF39  F00F         	goto	u5310
 13105   001E6E                     u5311:
 13106   001E6E  EFED  F00F         	goto	l5520
 13107   001E72                     u5310:
 13108   001E72  0E00               	movlw	0
 13109   001E74  6E2A               	movwf	___flge@ff1^0,c
 13110   001E76  0E00               	movlw	0
 13111   001E78  6E2B               	movwf	(___flge@ff1+1)^0,c
 13112   001E7A  0EC8               	movlw	200
 13113   001E7C  6E2C               	movwf	(___flge@ff1+2)^0,c
 13114   001E7E  0E41               	movlw	65
 13115   001E80  6E2D               	movwf	(___flge@ff1+3)^0,c
 13116   001E82  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13117   001E86  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13118   001E8A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13119   001E8E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13120   001E92  EC2A  F025         	call	___flge	;wreg free
 13121   001E96  A0D8               	btfss	status,0,c
 13122   001E98  EF50  F00F         	goto	u5321
 13123   001E9C  EF52  F00F         	goto	u5320
 13124   001EA0                     u5321:
 13125   001EA0  EFED  F00F         	goto	l5520
 13126   001EA4                     u5320:
 13127   001EA4                     
 13128                           ;color.c: 169:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 13129   001EA4  0EB8               	movlw	184
 13130   001EA6  6E2A               	movwf	___flge@ff1^0,c
 13131   001EA8  0E1E               	movlw	30
 13132   001EAA  6E2B               	movwf	(___flge@ff1+1)^0,c
 13133   001EAC  0E85               	movlw	133
 13134   001EAE  6E2C               	movwf	(___flge@ff1+2)^0,c
 13135   001EB0  0E3E               	movlw	62
 13136   001EB2  6E2D               	movwf	(___flge@ff1+3)^0,c
 13137   001EB4  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13138   001EB8  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13139   001EBC  CFDE F02E          	movff	postinc2,___flge@ff2
 13140   001EC0  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13141   001EC4  CFDE F030          	movff	postinc2,___flge@ff2+2
 13142   001EC8  CFDE F031          	movff	postinc2,___flge@ff2+3
 13143   001ECC  EC2A  F025         	call	___flge	;wreg free
 13144   001ED0  A0D8               	btfss	status,0,c
 13145   001ED2  EF6D  F00F         	goto	u5331
 13146   001ED6  EF6F  F00F         	goto	u5330
 13147   001EDA                     u5331:
 13148   001EDA  EFA5  F00F         	goto	l5506
 13149   001EDE                     u5330:
 13150   001EDE  0ECD               	movlw	205
 13151   001EE0  6E2A               	movwf	___flge@ff1^0,c
 13152   001EE2  0ECC               	movlw	204
 13153   001EE4  6E2B               	movwf	(___flge@ff1+1)^0,c
 13154   001EE6  0ECC               	movlw	204
 13155   001EE8  6E2C               	movwf	(___flge@ff1+2)^0,c
 13156   001EEA  0E3D               	movlw	61
 13157   001EEC  6E2D               	movwf	(___flge@ff1+3)^0,c
 13158   001EEE  EE20 F008          	lfsr	2,8
 13159   001EF2  504D               	movf	Colour_decider@rel^0,w,c
 13160   001EF4  26D9               	addwf	fsr2l,f,c
 13161   001EF6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13162   001EF8  22DA               	addwfc	fsr2h,f,c
 13163   001EFA  CFDE F02E          	movff	postinc2,___flge@ff2
 13164   001EFE  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13165   001F02  CFDE F030          	movff	postinc2,___flge@ff2+2
 13166   001F06  CFDE F031          	movff	postinc2,___flge@ff2+3
 13167   001F0A  EC2A  F025         	call	___flge	;wreg free
 13168   001F0E  B0D8               	btfsc	status,0,c
 13169   001F10  EF8C  F00F         	goto	u5341
 13170   001F14  EF8E  F00F         	goto	u5340
 13171   001F18                     u5341:
 13172   001F18  EFA5  F00F         	goto	l5506
 13173   001F1C                     u5340:
 13174   001F1C  EE20 F006          	lfsr	2,6
 13175   001F20  504B               	movf	Colour_decider@vals^0,w,c
 13176   001F22  26D9               	addwf	fsr2l,f,c
 13177   001F24  504C               	movf	(Colour_decider@vals+1)^0,w,c
 13178   001F26  22DA               	addwfc	fsr2h,f,c
 13179   001F28  0E01               	movlw	1
 13180   001F2A  BEDB               	btfsc	plusw2,7,c
 13181   001F2C  EFA1  F00F         	goto	u5351
 13182   001F30  0EE9               	movlw	233
 13183   001F32  5CDE               	subwf	postinc2,w,c
 13184   001F34  0E03               	movlw	3
 13185   001F36  58DE               	subwfb	postinc2,w,c
 13186   001F38  A0D8               	btfss	status,0,c
 13187   001F3A  EFA1  F00F         	goto	u5351
 13188   001F3E  EFA3  F00F         	goto	u5350
 13189   001F42                     u5351:
 13190   001F42  EFA5  F00F         	goto	l5506
 13191   001F46                     u5350:
 13192   001F46  EF4D  F00D         	goto	l5448
 13193   001F4A                     l5506:
 13194   001F4A  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13195   001F4E  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13196   001F52  CFDE F02A          	movff	postinc2,___flge@ff1
 13197   001F56  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13198   001F5A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13199   001F5E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13200   001F62  0EB8               	movlw	184
 13201   001F64  6E2E               	movwf	___flge@ff2^0,c
 13202   001F66  0E1E               	movlw	30
 13203   001F68  6E2F               	movwf	(___flge@ff2+1)^0,c
 13204   001F6A  0E85               	movlw	133
 13205   001F6C  6E30               	movwf	(___flge@ff2+2)^0,c
 13206   001F6E  0E3E               	movlw	62
 13207   001F70  6E31               	movwf	(___flge@ff2+3)^0,c
 13208   001F72  EC2A  F025         	call	___flge	;wreg free
 13209   001F76  A0D8               	btfss	status,0,c
 13210   001F78  EFC0  F00F         	goto	u5361
 13211   001F7C  EFC2  F00F         	goto	u5360
 13212   001F80                     u5361:
 13213   001F80  EFE7  F00F         	goto	l5516
 13214   001F84                     u5360:
 13215   001F84  EE20 F008          	lfsr	2,8
 13216   001F88  504D               	movf	Colour_decider@rel^0,w,c
 13217   001F8A  26D9               	addwf	fsr2l,f,c
 13218   001F8C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13219   001F8E  22DA               	addwfc	fsr2h,f,c
 13220   001F90  CFDE F02A          	movff	postinc2,___flge@ff1
 13221   001F94  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13222   001F98  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13223   001F9C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13224   001FA0  0ECD               	movlw	205
 13225   001FA2  6E2E               	movwf	___flge@ff2^0,c
 13226   001FA4  0ECC               	movlw	204
 13227   001FA6  6E2F               	movwf	(___flge@ff2+1)^0,c
 13228   001FA8  0ECC               	movlw	204
 13229   001FAA  6E30               	movwf	(___flge@ff2+2)^0,c
 13230   001FAC  0E3D               	movlw	61
 13231   001FAE  6E31               	movwf	(___flge@ff2+3)^0,c
 13232   001FB0  EC2A  F025         	call	___flge	;wreg free
 13233   001FB4  B0D8               	btfsc	status,0,c
 13234   001FB6  EFDF  F00F         	goto	u5371
 13235   001FBA  EFE1  F00F         	goto	u5370
 13236   001FBE                     u5371:
 13237   001FBE  EFE7  F00F         	goto	l5516
 13238   001FC2                     u5370:
 13239   001FC2                     
 13240                           ;color.c: 173:             return 3;
 13241   001FC2  0E00               	movlw	0
 13242   001FC4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13243   001FC6  0E03               	movlw	3
 13244   001FC8  6E4B               	movwf	?_Colour_decider^0,c
 13245   001FCA  EF15  F011         	goto	l80
 13246   001FCE                     l5516:
 13247                           
 13248                           ;color.c: 176:             return 10;
 13249   001FCE  0E00               	movlw	0
 13250   001FD0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13251   001FD2  0E0A               	movlw	10
 13252   001FD4  6E4B               	movwf	?_Colour_decider^0,c
 13253   001FD6  EF15  F011         	goto	l80
 13254   001FDA                     l5520:
 13255   001FDA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13256   001FDE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13257   001FE2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13258   001FE6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13259   001FEA  0E00               	movlw	0
 13260   001FEC  6E2E               	movwf	___flge@ff2^0,c
 13261   001FEE  0E00               	movlw	0
 13262   001FF0  6E2F               	movwf	(___flge@ff2+1)^0,c
 13263   001FF2  0EAA               	movlw	170
 13264   001FF4  6E30               	movwf	(___flge@ff2+2)^0,c
 13265   001FF6  0E42               	movlw	66
 13266   001FF8  6E31               	movwf	(___flge@ff2+3)^0,c
 13267   001FFA  EC2A  F025         	call	___flge	;wreg free
 13268   001FFE  A0D8               	btfss	status,0,c
 13269   002000  EF04  F010         	goto	u5381
 13270   002004  EF06  F010         	goto	u5380
 13271   002008                     u5381:
 13272   002008  EF25  F010         	goto	l5530
 13273   00200C                     u5380:
 13274   00200C  0E00               	movlw	0
 13275   00200E  6E2A               	movwf	___flge@ff1^0,c
 13276   002010  0E00               	movlw	0
 13277   002012  6E2B               	movwf	(___flge@ff1+1)^0,c
 13278   002014  0E20               	movlw	32
 13279   002016  6E2C               	movwf	(___flge@ff1+2)^0,c
 13280   002018  0E43               	movlw	67
 13281   00201A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13282   00201C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13283   002020  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13284   002024  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13285   002028  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13286   00202C  EC2A  F025         	call	___flge	;wreg free
 13287   002030  A0D8               	btfss	status,0,c
 13288   002032  EF1D  F010         	goto	u5391
 13289   002036  EF1F  F010         	goto	u5390
 13290   00203A                     u5391:
 13291   00203A  EF25  F010         	goto	l5530
 13292   00203E                     u5390:
 13293   00203E                     
 13294                           ;color.c: 182:         return 4;
 13295   00203E  0E00               	movlw	0
 13296   002040  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13297   002042  0E04               	movlw	4
 13298   002044  6E4B               	movwf	?_Colour_decider^0,c
 13299   002046  EF15  F011         	goto	l80
 13300   00204A                     l5530:
 13301   00204A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13302   00204E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13303   002052  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13304   002056  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13305   00205A  0E00               	movlw	0
 13306   00205C  6E2E               	movwf	___flge@ff2^0,c
 13307   00205E  0E00               	movlw	0
 13308   002060  6E2F               	movwf	(___flge@ff2+1)^0,c
 13309   002062  0E70               	movlw	112
 13310   002064  6E30               	movwf	(___flge@ff2+2)^0,c
 13311   002066  0E42               	movlw	66
 13312   002068  6E31               	movwf	(___flge@ff2+3)^0,c
 13313   00206A  EC2A  F025         	call	___flge	;wreg free
 13314   00206E  A0D8               	btfss	status,0,c
 13315   002070  EF3C  F010         	goto	u5401
 13316   002074  EF3E  F010         	goto	u5400
 13317   002078                     u5401:
 13318   002078  EFDF  F010         	goto	l5558
 13319   00207C                     u5400:
 13320   00207C  0E00               	movlw	0
 13321   00207E  6E2A               	movwf	___flge@ff1^0,c
 13322   002080  0E00               	movlw	0
 13323   002082  6E2B               	movwf	(___flge@ff1+1)^0,c
 13324   002084  0E9A               	movlw	154
 13325   002086  6E2C               	movwf	(___flge@ff1+2)^0,c
 13326   002088  0E42               	movlw	66
 13327   00208A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13328   00208C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13329   002090  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13330   002094  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13331   002098  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13332   00209C  EC2A  F025         	call	___flge	;wreg free
 13333   0020A0  A0D8               	btfss	status,0,c
 13334   0020A2  EF55  F010         	goto	u5411
 13335   0020A6  EF57  F010         	goto	u5410
 13336   0020AA                     u5411:
 13337   0020AA  EFDF  F010         	goto	l5558
 13338   0020AE                     u5410:
 13339   0020AE                     
 13340                           ;color.c: 187:         if ((0.12<=rel->B)&(0.21>rel->G)){
 13341   0020AE  EE20 F008          	lfsr	2,8
 13342   0020B2  504D               	movf	Colour_decider@rel^0,w,c
 13343   0020B4  26D9               	addwf	fsr2l,f,c
 13344   0020B6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13345   0020B8  22DA               	addwfc	fsr2h,f,c
 13346   0020BA  CFDE F02A          	movff	postinc2,___flge@ff1
 13347   0020BE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13348   0020C2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13349   0020C6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13350   0020CA  0E8F               	movlw	143
 13351   0020CC  6E2E               	movwf	___flge@ff2^0,c
 13352   0020CE  0EC2               	movlw	194
 13353   0020D0  6E2F               	movwf	(___flge@ff2+1)^0,c
 13354   0020D2  0EF5               	movlw	245
 13355   0020D4  6E30               	movwf	(___flge@ff2+2)^0,c
 13356   0020D6  0E3D               	movlw	61
 13357   0020D8  6E31               	movwf	(___flge@ff2+3)^0,c
 13358   0020DA  EC2A  F025         	call	___flge	;wreg free
 13359   0020DE  A0D8               	btfss	status,0,c
 13360   0020E0  EF74  F010         	goto	u5421
 13361   0020E4  EF76  F010         	goto	u5420
 13362   0020E8                     u5421:
 13363   0020E8  EF9B  F010         	goto	l5544
 13364   0020EC                     u5420:
 13365   0020EC  EE20 F004          	lfsr	2,4
 13366   0020F0  504D               	movf	Colour_decider@rel^0,w,c
 13367   0020F2  26D9               	addwf	fsr2l,f,c
 13368   0020F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13369   0020F6  22DA               	addwfc	fsr2h,f,c
 13370   0020F8  CFDE F02A          	movff	postinc2,___flge@ff1
 13371   0020FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13372   002100  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13373   002104  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13374   002108  0E3D               	movlw	61
 13375   00210A  6E2E               	movwf	___flge@ff2^0,c
 13376   00210C  0E0A               	movlw	10
 13377   00210E  6E2F               	movwf	(___flge@ff2+1)^0,c
 13378   002110  0E57               	movlw	87
 13379   002112  6E30               	movwf	(___flge@ff2+2)^0,c
 13380   002114  0E3E               	movlw	62
 13381   002116  6E31               	movwf	(___flge@ff2+3)^0,c
 13382   002118  EC2A  F025         	call	___flge	;wreg free
 13383   00211C  B0D8               	btfsc	status,0,c
 13384   00211E  EF93  F010         	goto	u5431
 13385   002122  EF95  F010         	goto	u5430
 13386   002126                     u5431:
 13387   002126  EF9B  F010         	goto	l5544
 13388   00212A                     u5430:
 13389   00212A                     
 13390                           ;color.c: 188:             return 6;
 13391   00212A  0E00               	movlw	0
 13392   00212C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13393   00212E  0E06               	movlw	6
 13394   002130  6E4B               	movwf	?_Colour_decider^0,c
 13395   002132  EF15  F011         	goto	l80
 13396   002136                     l5544:
 13397   002136  EE20 F008          	lfsr	2,8
 13398   00213A  504D               	movf	Colour_decider@rel^0,w,c
 13399   00213C  26D9               	addwf	fsr2l,f,c
 13400   00213E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13401   002140  22DA               	addwfc	fsr2h,f,c
 13402   002142  CFDE F02A          	movff	postinc2,___flge@ff1
 13403   002146  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13404   00214A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13405   00214E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13406   002152  0E8F               	movlw	143
 13407   002154  6E2E               	movwf	___flge@ff2^0,c
 13408   002156  0EC2               	movlw	194
 13409   002158  6E2F               	movwf	(___flge@ff2+1)^0,c
 13410   00215A  0EF5               	movlw	245
 13411   00215C  6E30               	movwf	(___flge@ff2+2)^0,c
 13412   00215E  0E3D               	movlw	61
 13413   002160  6E31               	movwf	(___flge@ff2+3)^0,c
 13414   002162  EC2A  F025         	call	___flge	;wreg free
 13415   002166  B0D8               	btfsc	status,0,c
 13416   002168  EFB8  F010         	goto	u5441
 13417   00216C  EFBA  F010         	goto	u5440
 13418   002170                     u5441:
 13419   002170  EFE7  F00F         	goto	l5516
 13420   002174                     u5440:
 13421   002174  0E3D               	movlw	61
 13422   002176  6E2A               	movwf	___flge@ff1^0,c
 13423   002178  0E0A               	movlw	10
 13424   00217A  6E2B               	movwf	(___flge@ff1+1)^0,c
 13425   00217C  0E57               	movlw	87
 13426   00217E  6E2C               	movwf	(___flge@ff1+2)^0,c
 13427   002180  0E3E               	movlw	62
 13428   002182  6E2D               	movwf	(___flge@ff1+3)^0,c
 13429   002184  EE20 F004          	lfsr	2,4
 13430   002188  504D               	movf	Colour_decider@rel^0,w,c
 13431   00218A  26D9               	addwf	fsr2l,f,c
 13432   00218C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13433   00218E  22DA               	addwfc	fsr2h,f,c
 13434   002190  CFDE F02E          	movff	postinc2,___flge@ff2
 13435   002194  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13436   002198  CFDE F030          	movff	postinc2,___flge@ff2+2
 13437   00219C  CFDE F031          	movff	postinc2,___flge@ff2+3
 13438   0021A0  EC2A  F025         	call	___flge	;wreg free
 13439   0021A4  B0D8               	btfsc	status,0,c
 13440   0021A6  EFD7  F010         	goto	u5451
 13441   0021AA  EFD9  F010         	goto	u5450
 13442   0021AE                     u5451:
 13443   0021AE  EFE7  F00F         	goto	l5516
 13444   0021B2                     u5450:
 13445   0021B2                     
 13446                           ;color.c: 191:             return 5;
 13447   0021B2  0E00               	movlw	0
 13448   0021B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13449   0021B6  0E05               	movlw	5
 13450   0021B8  6E4B               	movwf	?_Colour_decider^0,c
 13451   0021BA  EF15  F011         	goto	l80
 13452   0021BE                     l5558:
 13453   0021BE  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13454   0021C2  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13455   0021C6  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13456   0021CA  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13457   0021CE  0E00               	movlw	0
 13458   0021D0  6E2E               	movwf	___flge@ff2^0,c
 13459   0021D2  0E00               	movlw	0
 13460   0021D4  6E2F               	movwf	(___flge@ff2+1)^0,c
 13461   0021D6  0E40               	movlw	64
 13462   0021D8  6E30               	movwf	(___flge@ff2+2)^0,c
 13463   0021DA  0E41               	movlw	65
 13464   0021DC  6E31               	movwf	(___flge@ff2+3)^0,c
 13465   0021DE  EC2A  F025         	call	___flge	;wreg free
 13466   0021E2  A0D8               	btfss	status,0,c
 13467   0021E4  EFF6  F010         	goto	u5461
 13468   0021E8  EFF8  F010         	goto	u5460
 13469   0021EC                     u5461:
 13470   0021EC  EFE7  F00F         	goto	l5516
 13471   0021F0                     u5460:
 13472   0021F0  0E00               	movlw	0
 13473   0021F2  6E2A               	movwf	___flge@ff1^0,c
 13474   0021F4  0E00               	movlw	0
 13475   0021F6  6E2B               	movwf	(___flge@ff1+1)^0,c
 13476   0021F8  0E88               	movlw	136
 13477   0021FA  6E2C               	movwf	(___flge@ff1+2)^0,c
 13478   0021FC  0E41               	movlw	65
 13479   0021FE  6E2D               	movwf	(___flge@ff1+3)^0,c
 13480   002200  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13481   002204  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13482   002208  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13483   00220C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13484   002210  EC2A  F025         	call	___flge	;wreg free
 13485   002214  A0D8               	btfss	status,0,c
 13486   002216  EF0F  F011         	goto	u5471
 13487   00221A  EF11  F011         	goto	u5470
 13488   00221E                     u5471:
 13489   00221E  EFE7  F00F         	goto	l5516
 13490   002222                     u5470:
 13491   002222                     
 13492                           ;color.c: 200:             return 7;
 13493   002222  0E00               	movlw	0
 13494   002224  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13495   002226  0E07               	movlw	7
 13496   002228  6E4B               	movwf	?_Colour_decider^0,c
 13497   00222A                     l80:
 13498   00222A  0012               	return		;funcret
 13499   00222C                     __end_of_Colour_decider:
 13500                           	callstack 0
 13501                           
 13502 ;; *************** function ___xxtofl *****************
 13503 ;; Defined at:
 13504 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13505 ;; Parameters:    Size  Location     Type
 13506 ;;  sign            1    wreg     unsigned char 
 13507 ;;  val             4    0[COMRAM] long 
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;  sign            1    8[COMRAM] unsigned char 
 13510 ;;  arg             4   10[COMRAM] unsigned long 
 13511 ;;  exp             1    9[COMRAM] unsigned char 
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  4    0[COMRAM] unsigned char 
 13514 ;; Registers used:
 13515 ;;		wreg, status,2, status,0
 13516 ;; Tracked objects:
 13517 ;;		On entry : 0/0
 13518 ;;		On exit  : 0/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13522 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13523 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13524 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13525 ;;Total ram usage:       14 bytes
 13526 ;; Hardware stack levels used: 1
 13527 ;; Hardware stack levels required when called: 1
 13528 ;; This function calls:
 13529 ;;		Nothing
 13530 ;; This function is called by:
 13531 ;;		_colour_rel
 13532 ;;		_Colour_decider
 13533 ;;		_reverseOneBlock
 13534 ;;		_ForwardOneBlock
 13535 ;;		_Forwardhalfblock
 13536 ;;		_Backhalfblock
 13537 ;; This function uses a non-reentrant model
 13538 ;;
 13539                           
 13540                           	psect	text79
 13541   004196                     __ptext79:
 13542                           	callstack 0
 13543   004196                     ___xxtofl:
 13544                           	callstack 28
 13545                           
 13546                           ;incstack = 0
 13547                           ;___xxtofl@sign stored from wreg
 13548   004196  6E09               	movwf	___xxtofl@sign^0,c
 13549   004198  5009               	movf	___xxtofl@sign^0,w,c
 13550   00419A  B4D8               	btfsc	status,2,c
 13551   00419C  EFD2  F020         	goto	u5081
 13552   0041A0  EFD4  F020         	goto	u5080
 13553   0041A4                     u5081:
 13554   0041A4  EFF6  F020         	goto	l1414
 13555   0041A8                     u5080:
 13556   0041A8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13557   0041AA  EFDB  F020         	goto	u5090
 13558   0041AE  EFD9  F020         	goto	u5091
 13559   0041B2                     u5091:
 13560   0041B2  EFF6  F020         	goto	l1414
 13561   0041B6                     u5090:
 13562   0041B6  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13563   0041BA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13564   0041BE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13565   0041C2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13566   0041C6  1E05               	comf	??___xxtofl^0,f,c
 13567   0041C8  1E06               	comf	(??___xxtofl+1)^0,f,c
 13568   0041CA  1E07               	comf	(??___xxtofl+2)^0,f,c
 13569   0041CC  1E08               	comf	(??___xxtofl+3)^0,f,c
 13570   0041CE  2A05               	incf	??___xxtofl^0,f,c
 13571   0041D0  0E00               	movlw	0
 13572   0041D2  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13573   0041D4  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13574   0041D6  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13575   0041D8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13576   0041DC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13577   0041E0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13578   0041E4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13579   0041E8  EFFE  F020         	goto	l5318
 13580   0041EC                     l1414:
 13581   0041EC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13582   0041F0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13583   0041F4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13584   0041F8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13585   0041FC                     l5318:
 13586   0041FC  5001               	movf	___xxtofl@val^0,w,c
 13587   0041FE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13588   004200  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13589   004202  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13590   004204  A4D8               	btfss	status,2,c
 13591   004206  EF07  F021         	goto	u5101
 13592   00420A  EF09  F021         	goto	u5100
 13593   00420E                     u5101:
 13594   00420E  EF13  F021         	goto	l5324
 13595   004212                     u5100:
 13596   004212  0E00               	movlw	0
 13597   004214  6E01               	movwf	?___xxtofl^0,c
 13598   004216  0E00               	movlw	0
 13599   004218  6E02               	movwf	(?___xxtofl+1)^0,c
 13600   00421A  0E00               	movlw	0
 13601   00421C  6E03               	movwf	(?___xxtofl+2)^0,c
 13602   00421E  0E00               	movlw	0
 13603   004220  6E04               	movwf	(?___xxtofl+3)^0,c
 13604   004222  EFA4  F021         	goto	l1417
 13605   004226                     l5324:
 13606   004226  0E96               	movlw	150
 13607   004228  6E0A               	movwf	___xxtofl@exp^0,c
 13608   00422A  EF1D  F021         	goto	l5328
 13609   00422E                     l5326:
 13610   00422E  2A0A               	incf	___xxtofl@exp^0,f,c
 13611   004230  90D8               	bcf	status,0,c
 13612   004232  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13613   004234  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13614   004236  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13615   004238  320B               	rrcf	___xxtofl@arg^0,f,c
 13616   00423A                     l5328:
 13617   00423A  0E00               	movlw	0
 13618   00423C  140B               	andwf	___xxtofl@arg^0,w,c
 13619   00423E  6E05               	movwf	??___xxtofl^0,c
 13620   004240  0E00               	movlw	0
 13621   004242  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13622   004244  6E06               	movwf	(??___xxtofl+1)^0,c
 13623   004246  0E00               	movlw	0
 13624   004248  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13625   00424A  6E07               	movwf	(??___xxtofl+2)^0,c
 13626   00424C  0EFE               	movlw	254
 13627   00424E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13628   004250  6E08               	movwf	(??___xxtofl+3)^0,c
 13629   004252  5005               	movf	??___xxtofl^0,w,c
 13630   004254  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13631   004256  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13632   004258  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13633   00425A  A4D8               	btfss	status,2,c
 13634   00425C  EF32  F021         	goto	u5111
 13635   004260  EF34  F021         	goto	u5110
 13636   004264                     u5111:
 13637   004264  EF17  F021         	goto	l5326
 13638   004268                     u5110:
 13639   004268  EF42  F021         	goto	l1421
 13640   00426C                     l5330:
 13641   00426C  2A0A               	incf	___xxtofl@exp^0,f,c
 13642   00426E  0E01               	movlw	1
 13643   004270  260B               	addwf	___xxtofl@arg^0,f,c
 13644   004272  0E00               	movlw	0
 13645   004274  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13646   004276  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13647   004278  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13648   00427A  90D8               	bcf	status,0,c
 13649   00427C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13650   00427E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13651   004280  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13652   004282  320B               	rrcf	___xxtofl@arg^0,f,c
 13653   004284                     l1421:
 13654   004284  0E00               	movlw	0
 13655   004286  140B               	andwf	___xxtofl@arg^0,w,c
 13656   004288  6E05               	movwf	??___xxtofl^0,c
 13657   00428A  0E00               	movlw	0
 13658   00428C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13659   00428E  6E06               	movwf	(??___xxtofl+1)^0,c
 13660   004290  0E00               	movlw	0
 13661   004292  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13662   004294  6E07               	movwf	(??___xxtofl+2)^0,c
 13663   004296  0EFF               	movlw	255
 13664   004298  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13665   00429A  6E08               	movwf	(??___xxtofl+3)^0,c
 13666   00429C  5005               	movf	??___xxtofl^0,w,c
 13667   00429E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13668   0042A0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13669   0042A2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13670   0042A4  A4D8               	btfss	status,2,c
 13671   0042A6  EF57  F021         	goto	u5121
 13672   0042AA  EF59  F021         	goto	u5120
 13673   0042AE                     u5121:
 13674   0042AE  EF36  F021         	goto	l5330
 13675   0042B2                     u5120:
 13676   0042B2  EF61  F021         	goto	l5338
 13677   0042B6                     l5336:
 13678   0042B6  060A               	decf	___xxtofl@exp^0,f,c
 13679   0042B8  90D8               	bcf	status,0,c
 13680   0042BA  360B               	rlcf	___xxtofl@arg^0,f,c
 13681   0042BC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13682   0042BE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13683   0042C0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13684   0042C2                     l5338:
 13685   0042C2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13686   0042C4  EF66  F021         	goto	u5131
 13687   0042C8  EF68  F021         	goto	u5130
 13688   0042CC                     u5131:
 13689   0042CC  EF70  F021         	goto	l1428
 13690   0042D0                     u5130:
 13691   0042D0  0E02               	movlw	2
 13692   0042D2  600A               	cpfslt	___xxtofl@exp^0,c
 13693   0042D4  EF6E  F021         	goto	u5141
 13694   0042D8  EF70  F021         	goto	u5140
 13695   0042DC                     u5141:
 13696   0042DC  EF5B  F021         	goto	l5336
 13697   0042E0                     u5140:
 13698   0042E0                     l1428:
 13699   0042E0  B00A               	btfsc	___xxtofl@exp^0,0,c
 13700   0042E2  EF75  F021         	goto	u5151
 13701   0042E6  EF77  F021         	goto	u5150
 13702   0042EA                     u5151:
 13703   0042EA  EF78  F021         	goto	l5344
 13704   0042EE                     u5150:
 13705   0042EE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13706   0042F0                     l5344:
 13707   0042F0  90D8               	bcf	status,0,c
 13708   0042F2  320A               	rrcf	___xxtofl@exp^0,f,c
 13709   0042F4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13710   0042F8  6A06               	clrf	(??___xxtofl+1)^0,c
 13711   0042FA  6A07               	clrf	(??___xxtofl+2)^0,c
 13712   0042FC  6A08               	clrf	(??___xxtofl+3)^0,c
 13713   0042FE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13714   004302  6A07               	clrf	(??___xxtofl+2)^0,c
 13715   004304  6A06               	clrf	(??___xxtofl+1)^0,c
 13716   004306  6A05               	clrf	??___xxtofl^0,c
 13717   004308  5005               	movf	??___xxtofl^0,w,c
 13718   00430A  120B               	iorwf	___xxtofl@arg^0,f,c
 13719   00430C  5006               	movf	(??___xxtofl+1)^0,w,c
 13720   00430E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13721   004310  5007               	movf	(??___xxtofl+2)^0,w,c
 13722   004312  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13723   004314  5008               	movf	(??___xxtofl+3)^0,w,c
 13724   004316  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13725   004318  5009               	movf	___xxtofl@sign^0,w,c
 13726   00431A  B4D8               	btfsc	status,2,c
 13727   00431C  EF92  F021         	goto	u5161
 13728   004320  EF94  F021         	goto	u5160
 13729   004324                     u5161:
 13730   004324  EF9C  F021         	goto	l5354
 13731   004328                     u5160:
 13732   004328  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13733   00432A  EF9B  F021         	goto	u5170
 13734   00432E  EF99  F021         	goto	u5171
 13735   004332                     u5171:
 13736   004332  EF9C  F021         	goto	l5354
 13737   004336                     u5170:
 13738   004336  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13739   004338                     l5354:
 13740   004338  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13741   00433C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13742   004340  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13743   004344  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13744   004348                     l1417:
 13745   004348  0012               	return		;funcret
 13746   00434A                     __end_of___xxtofl:
 13747                           	callstack 0
 13748                           
 13749 ;; *************** function ___flsub *****************
 13750 ;; Defined at:
 13751 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13752 ;; Parameters:    Size  Location     Type
 13753 ;;  b               4   41[COMRAM] unsigned char 
 13754 ;;  a               4   45[COMRAM] unsigned char 
 13755 ;; Auto vars:     Size  Location     Type
 13756 ;;		None
 13757 ;; Return value:  Size  Location     Type
 13758 ;;                  4   41[COMRAM] unsigned char 
 13759 ;; Registers used:
 13760 ;;		wreg, status,2, status,0, cstack
 13761 ;; Tracked objects:
 13762 ;;		On entry : 0/0
 13763 ;;		On exit  : 0/0
 13764 ;;		Unchanged: 0/0
 13765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13766 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13769 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13770 ;;Total ram usage:        8 bytes
 13771 ;; Hardware stack levels used: 1
 13772 ;; Hardware stack levels required when called: 2
 13773 ;; This function calls:
 13774 ;;		___fladd
 13775 ;; This function is called by:
 13776 ;;		_Colour_decider
 13777 ;;		_efgtoa
 13778 ;; This function uses a non-reentrant model
 13779 ;;
 13780                           
 13781                           	psect	text80
 13782   005E64                     __ptext80:
 13783                           	callstack 0
 13784   005E64                     ___flsub:
 13785                           	callstack 24
 13786   005E64  0E00               	movlw	0
 13787   005E66  1A2E               	xorwf	___flsub@a^0,f,c
 13788   005E68  0E00               	movlw	0
 13789   005E6A  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13790   005E6C  0E00               	movlw	0
 13791   005E6E  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13792   005E70  0E80               	movlw	128
 13793   005E72  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13794   005E74  C02A  F001         	movff	___flsub@b,___fladd@b
 13795   005E78  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13796   005E7C  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13797   005E80  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13798   005E84  C02E  F005         	movff	___flsub@a,___fladd@a
 13799   005E88  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13800   005E8C  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13801   005E90  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13802   005E94  EC16  F011         	call	___fladd	;wreg free
 13803   005E98  C001  F02A         	movff	?___fladd,?___flsub
 13804   005E9C  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13805   005EA0  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13806   005EA4  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13807   005EA8  0012               	return		;funcret
 13808   005EAA                     __end_of___flsub:
 13809                           	callstack 0
 13810                           
 13811 ;; *************** function ___fladd *****************
 13812 ;; Defined at:
 13813 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13814 ;; Parameters:    Size  Location     Type
 13815 ;;  b               4    0[COMRAM] unsigned char 
 13816 ;;  a               4    4[COMRAM] unsigned char 
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;  grs             1   15[COMRAM] unsigned char 
 13819 ;;  bexp            1   14[COMRAM] unsigned char 
 13820 ;;  aexp            1   13[COMRAM] unsigned char 
 13821 ;;  signs           1   12[COMRAM] unsigned char 
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  4    0[COMRAM] unsigned char 
 13824 ;; Registers used:
 13825 ;;		wreg, status,2, status,0
 13826 ;; Tracked objects:
 13827 ;;		On entry : 0/0
 13828 ;;		On exit  : 0/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13831 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13832 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13834 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13835 ;;Total ram usage:       16 bytes
 13836 ;; Hardware stack levels used: 1
 13837 ;; Hardware stack levels required when called: 1
 13838 ;; This function calls:
 13839 ;;		Nothing
 13840 ;; This function is called by:
 13841 ;;		_colour_rel
 13842 ;;		_Colour_decider
 13843 ;;		___flsub
 13844 ;;		_efgtoa
 13845 ;; This function uses a non-reentrant model
 13846 ;;
 13847                           
 13848                           	psect	text81
 13849   00222C                     __ptext81:
 13850                           	callstack 0
 13851   00222C                     ___fladd:
 13852                           	callstack 24
 13853   00222C  5004               	movf	(___fladd@b+3)^0,w,c
 13854   00222E  0B80               	andlw	128
 13855   002230  6E0D               	movwf	___fladd@signs^0,c
 13856   002232  5004               	movf	(___fladd@b+3)^0,w,c
 13857   002234  2404               	addwf	(___fladd@b+3)^0,w,c
 13858   002236  6E0F               	movwf	___fladd@bexp^0,c
 13859   002238  AE03               	btfss	(___fladd@b+2)^0,7,c
 13860   00223A  EF21  F011         	goto	u3011
 13861   00223E  EF23  F011         	goto	u3010
 13862   002242                     u3011:
 13863   002242  EF24  F011         	goto	l3918
 13864   002246                     u3010:
 13865   002246  800F               	bsf	___fladd@bexp^0,0,c
 13866   002248                     l3918:
 13867   002248  500F               	movf	___fladd@bexp^0,w,c
 13868   00224A  B4D8               	btfsc	status,2,c
 13869   00224C  EF2A  F011         	goto	u3021
 13870   002250  EF2C  F011         	goto	u3020
 13871   002254                     u3021:
 13872   002254  EF41  F011         	goto	l3928
 13873   002258                     u3020:
 13874   002258  280F               	incf	___fladd@bexp^0,w,c
 13875   00225A  A4D8               	btfss	status,2,c
 13876   00225C  EF32  F011         	goto	u3031
 13877   002260  EF34  F011         	goto	u3030
 13878   002264                     u3031:
 13879   002264  EF3C  F011         	goto	l3924
 13880   002268                     u3030:
 13881   002268  0E00               	movlw	0
 13882   00226A  6E01               	movwf	___fladd@b^0,c
 13883   00226C  0E00               	movlw	0
 13884   00226E  6E02               	movwf	(___fladd@b+1)^0,c
 13885   002270  0E00               	movlw	0
 13886   002272  6E03               	movwf	(___fladd@b+2)^0,c
 13887   002274  0E00               	movlw	0
 13888   002276  6E04               	movwf	(___fladd@b+3)^0,c
 13889   002278                     l3924:
 13890   002278  8E03               	bsf	(___fladd@b+2)^0,7,c
 13891   00227A  0E00               	movlw	0
 13892   00227C  6E04               	movwf	(___fladd@b+3)^0,c
 13893   00227E  EF49  F011         	goto	l3930
 13894   002282                     l3928:
 13895   002282  0E00               	movlw	0
 13896   002284  6E01               	movwf	___fladd@b^0,c
 13897   002286  0E00               	movlw	0
 13898   002288  6E02               	movwf	(___fladd@b+1)^0,c
 13899   00228A  0E00               	movlw	0
 13900   00228C  6E03               	movwf	(___fladd@b+2)^0,c
 13901   00228E  0E00               	movlw	0
 13902   002290  6E04               	movwf	(___fladd@b+3)^0,c
 13903   002292                     l3930:
 13904   002292  5008               	movf	(___fladd@a+3)^0,w,c
 13905   002294  0B80               	andlw	128
 13906   002296  6E0E               	movwf	___fladd@aexp^0,c
 13907   002298  500D               	movf	___fladd@signs^0,w,c
 13908   00229A  180E               	xorwf	___fladd@aexp^0,w,c
 13909   00229C  B4D8               	btfsc	status,2,c
 13910   00229E  EF53  F011         	goto	u3041
 13911   0022A2  EF55  F011         	goto	u3040
 13912   0022A6                     u3041:
 13913   0022A6  EF56  F011         	goto	l3936
 13914   0022AA                     u3040:
 13915   0022AA  8C0D               	bsf	___fladd@signs^0,6,c
 13916   0022AC                     l3936:
 13917   0022AC  5008               	movf	(___fladd@a+3)^0,w,c
 13918   0022AE  2408               	addwf	(___fladd@a+3)^0,w,c
 13919   0022B0  6E0E               	movwf	___fladd@aexp^0,c
 13920   0022B2  AE07               	btfss	(___fladd@a+2)^0,7,c
 13921   0022B4  EF5E  F011         	goto	u3051
 13922   0022B8  EF60  F011         	goto	u3050
 13923   0022BC                     u3051:
 13924   0022BC  EF61  F011         	goto	l3942
 13925   0022C0                     u3050:
 13926   0022C0  800E               	bsf	___fladd@aexp^0,0,c
 13927   0022C2                     l3942:
 13928   0022C2  500E               	movf	___fladd@aexp^0,w,c
 13929   0022C4  B4D8               	btfsc	status,2,c
 13930   0022C6  EF67  F011         	goto	u3061
 13931   0022CA  EF69  F011         	goto	u3060
 13932   0022CE                     u3061:
 13933   0022CE  EF7E  F011         	goto	l3952
 13934   0022D2                     u3060:
 13935   0022D2  280E               	incf	___fladd@aexp^0,w,c
 13936   0022D4  A4D8               	btfss	status,2,c
 13937   0022D6  EF6F  F011         	goto	u3071
 13938   0022DA  EF71  F011         	goto	u3070
 13939   0022DE                     u3071:
 13940   0022DE  EF79  F011         	goto	l3948
 13941   0022E2                     u3070:
 13942   0022E2  0E00               	movlw	0
 13943   0022E4  6E05               	movwf	___fladd@a^0,c
 13944   0022E6  0E00               	movlw	0
 13945   0022E8  6E06               	movwf	(___fladd@a+1)^0,c
 13946   0022EA  0E00               	movlw	0
 13947   0022EC  6E07               	movwf	(___fladd@a+2)^0,c
 13948   0022EE  0E00               	movlw	0
 13949   0022F0  6E08               	movwf	(___fladd@a+3)^0,c
 13950   0022F2                     l3948:
 13951   0022F2  8E07               	bsf	(___fladd@a+2)^0,7,c
 13952   0022F4  0E00               	movlw	0
 13953   0022F6  6E08               	movwf	(___fladd@a+3)^0,c
 13954   0022F8  EF86  F011         	goto	l3954
 13955   0022FC                     l3952:
 13956   0022FC  0E00               	movlw	0
 13957   0022FE  6E05               	movwf	___fladd@a^0,c
 13958   002300  0E00               	movlw	0
 13959   002302  6E06               	movwf	(___fladd@a+1)^0,c
 13960   002304  0E00               	movlw	0
 13961   002306  6E07               	movwf	(___fladd@a+2)^0,c
 13962   002308  0E00               	movlw	0
 13963   00230A  6E08               	movwf	(___fladd@a+3)^0,c
 13964   00230C                     l3954:
 13965   00230C  500F               	movf	___fladd@bexp^0,w,c
 13966   00230E  5C0E               	subwf	___fladd@aexp^0,w,c
 13967   002310  B0D8               	btfsc	status,0,c
 13968   002312  EF8D  F011         	goto	u3081
 13969   002316  EF8F  F011         	goto	u3080
 13970   00231A                     u3081:
 13971   00231A  EFB6  F011         	goto	l3990
 13972   00231E                     u3080:
 13973   00231E  AC0D               	btfss	___fladd@signs^0,6,c
 13974   002320  EF94  F011         	goto	u3091
 13975   002324  EF96  F011         	goto	u3090
 13976   002328                     u3091:
 13977   002328  EF98  F011         	goto	l3960
 13978   00232C                     u3090:
 13979   00232C  0E80               	movlw	128
 13980   00232E  1A0D               	xorwf	___fladd@signs^0,f,c
 13981   002330                     l3960:
 13982   002330  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13983   002334  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13984   002338  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13985   00233C  C001  F010         	movff	___fladd@b,___fladd@grs
 13986   002340  C005  F001         	movff	___fladd@a,___fladd@b
 13987   002344  C010  F005         	movff	___fladd@grs,___fladd@a
 13988   002348  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13989   00234C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13990   002350  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13991   002354  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13992   002358  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13993   00235C  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13994   002360  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13995   002364  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13996   002368  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13997   00236C                     l3990:
 13998   00236C  0E00               	movlw	0
 13999   00236E  6E10               	movwf	___fladd@grs^0,c
 14000   002370  500F               	movf	___fladd@bexp^0,w,c
 14001   002372  C00E  F009         	movff	___fladd@aexp,??___fladd
 14002   002376  6A0A               	clrf	(??___fladd+1)^0,c
 14003   002378  5E09               	subwf	??___fladd^0,f,c
 14004   00237A  0E00               	movlw	0
 14005   00237C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 14006   00237E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 14007   002380  EFCB  F011         	goto	u3101
 14008   002384  500A               	movf	(??___fladd+1)^0,w,c
 14009   002386  E109               	bnz	u3100
 14010   002388  0E1A               	movlw	26
 14011   00238A  5C09               	subwf	??___fladd^0,w,c
 14012   00238C  A0D8               	btfss	status,0,c
 14013   00238E  EFCB  F011         	goto	u3101
 14014   002392  EFCD  F011         	goto	u3100
 14015   002396                     u3101:
 14016   002396  EF04  F012         	goto	l1288
 14017   00239A                     u3100:
 14018   00239A  5001               	movf	___fladd@b^0,w,c
 14019   00239C  1002               	iorwf	(___fladd@b+1)^0,w,c
 14020   00239E  1003               	iorwf	(___fladd@b+2)^0,w,c
 14021   0023A0  1004               	iorwf	(___fladd@b+3)^0,w,c
 14022   0023A2  A4D8               	btfss	status,2,c
 14023   0023A4  EFD6  F011         	goto	u3111
 14024   0023A8  EFD9  F011         	goto	u3110
 14025   0023AC                     u3111:
 14026   0023AC  0E01               	movlw	1
 14027   0023AE  EFDA  F011         	goto	u3120
 14028   0023B2                     u3110:
 14029   0023B2  0E00               	movlw	0
 14030   0023B4                     u3120:
 14031   0023B4  6E10               	movwf	___fladd@grs^0,c
 14032   0023B6  0E00               	movlw	0
 14033   0023B8  6E01               	movwf	___fladd@b^0,c
 14034   0023BA  0E00               	movlw	0
 14035   0023BC  6E02               	movwf	(___fladd@b+1)^0,c
 14036   0023BE  0E00               	movlw	0
 14037   0023C0  6E03               	movwf	(___fladd@b+2)^0,c
 14038   0023C2  0E00               	movlw	0
 14039   0023C4  6E04               	movwf	(___fladd@b+3)^0,c
 14040   0023C6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 14041   0023CA  EF0D  F012         	goto	l1287
 14042   0023CE                     l1289:
 14043   0023CE  A010               	btfss	___fladd@grs^0,0,c
 14044   0023D0  EFEC  F011         	goto	u3131
 14045   0023D4  EFEE  F011         	goto	u3130
 14046   0023D8                     u3131:
 14047   0023D8  EFF4  F011         	goto	l4002
 14048   0023DC                     u3130:
 14049   0023DC  90D8               	bcf	status,0,c
 14050   0023DE  3010               	rrcf	___fladd@grs^0,w,c
 14051   0023E0  0901               	iorlw	1
 14052   0023E2  6E10               	movwf	___fladd@grs^0,c
 14053   0023E4  EFF6  F011         	goto	l4004
 14054   0023E8                     l4002:
 14055   0023E8  90D8               	bcf	status,0,c
 14056   0023EA  3210               	rrcf	___fladd@grs^0,f,c
 14057   0023EC                     l4004:
 14058   0023EC  A001               	btfss	___fladd@b^0,0,c
 14059   0023EE  EFFB  F011         	goto	u3141
 14060   0023F2  EFFD  F011         	goto	u3140
 14061   0023F6                     u3141:
 14062   0023F6  EFFE  F011         	goto	l4008
 14063   0023FA                     u3140:
 14064   0023FA  8E10               	bsf	___fladd@grs^0,7,c
 14065   0023FC                     l4008:
 14066   0023FC  3404               	rlcf	(___fladd@b+3)^0,w,c
 14067   0023FE  3204               	rrcf	(___fladd@b+3)^0,f,c
 14068   002400  3203               	rrcf	(___fladd@b+2)^0,f,c
 14069   002402  3202               	rrcf	(___fladd@b+1)^0,f,c
 14070   002404  3201               	rrcf	___fladd@b^0,f,c
 14071   002406  2A0F               	incf	___fladd@bexp^0,f,c
 14072   002408                     l1288:
 14073   002408  500E               	movf	___fladd@aexp^0,w,c
 14074   00240A  5C0F               	subwf	___fladd@bexp^0,w,c
 14075   00240C  A0D8               	btfss	status,0,c
 14076   00240E  EF0B  F012         	goto	u3151
 14077   002412  EF0D  F012         	goto	u3150
 14078   002416                     u3151:
 14079   002416  EFE7  F011         	goto	l1289
 14080   00241A                     u3150:
 14081   00241A                     l1287:
 14082   00241A  BC0D               	btfsc	___fladd@signs^0,6,c
 14083   00241C  EF12  F012         	goto	u3161
 14084   002420  EF14  F012         	goto	u3160
 14085   002424                     u3161:
 14086   002424  EF54  F012         	goto	l4036
 14087   002428                     u3160:
 14088   002428  500F               	movf	___fladd@bexp^0,w,c
 14089   00242A  A4D8               	btfss	status,2,c
 14090   00242C  EF1A  F012         	goto	u3171
 14091   002430  EF1C  F012         	goto	u3170
 14092   002434                     u3171:
 14093   002434  EF26  F012         	goto	l4018
 14094   002438                     u3170:
 14095   002438  0E00               	movlw	0
 14096   00243A  6E01               	movwf	?___fladd^0,c
 14097   00243C  0E00               	movlw	0
 14098   00243E  6E02               	movwf	(?___fladd+1)^0,c
 14099   002440  0E00               	movlw	0
 14100   002442  6E03               	movwf	(?___fladd+2)^0,c
 14101   002444  0E00               	movlw	0
 14102   002446  6E04               	movwf	(?___fladd+3)^0,c
 14103   002448  EF75  F013         	goto	l1296
 14104   00244C                     l4018:
 14105   00244C  5005               	movf	___fladd@a^0,w,c
 14106   00244E  2601               	addwf	___fladd@b^0,f,c
 14107   002450  5006               	movf	(___fladd@a+1)^0,w,c
 14108   002452  2202               	addwfc	(___fladd@b+1)^0,f,c
 14109   002454  5007               	movf	(___fladd@a+2)^0,w,c
 14110   002456  2203               	addwfc	(___fladd@b+2)^0,f,c
 14111   002458  5008               	movf	(___fladd@a+3)^0,w,c
 14112   00245A  2204               	addwfc	(___fladd@b+3)^0,f,c
 14113   00245C  A004               	btfss	(___fladd@b+3)^0,0,c
 14114   00245E  EF33  F012         	goto	u3181
 14115   002462  EF35  F012         	goto	u3180
 14116   002466                     u3181:
 14117   002466  EFE1  F012         	goto	l4072
 14118   00246A                     u3180:
 14119   00246A  A010               	btfss	___fladd@grs^0,0,c
 14120   00246C  EF3A  F012         	goto	u3191
 14121   002470  EF3C  F012         	goto	u3190
 14122   002474                     u3191:
 14123   002474  EF42  F012         	goto	l4026
 14124   002478                     u3190:
 14125   002478  90D8               	bcf	status,0,c
 14126   00247A  3010               	rrcf	___fladd@grs^0,w,c
 14127   00247C  0901               	iorlw	1
 14128   00247E  6E10               	movwf	___fladd@grs^0,c
 14129   002480  EF44  F012         	goto	l4028
 14130   002484                     l4026:
 14131   002484  90D8               	bcf	status,0,c
 14132   002486  3210               	rrcf	___fladd@grs^0,f,c
 14133   002488                     l4028:
 14134   002488  A001               	btfss	___fladd@b^0,0,c
 14135   00248A  EF49  F012         	goto	u3201
 14136   00248E  EF4B  F012         	goto	u3200
 14137   002492                     u3201:
 14138   002492  EF4C  F012         	goto	l4032
 14139   002496                     u3200:
 14140   002496  8E10               	bsf	___fladd@grs^0,7,c
 14141   002498                     l4032:
 14142   002498  3404               	rlcf	(___fladd@b+3)^0,w,c
 14143   00249A  3204               	rrcf	(___fladd@b+3)^0,f,c
 14144   00249C  3203               	rrcf	(___fladd@b+2)^0,f,c
 14145   00249E  3202               	rrcf	(___fladd@b+1)^0,f,c
 14146   0024A0  3201               	rrcf	___fladd@b^0,f,c
 14147   0024A2  2A0F               	incf	___fladd@bexp^0,f,c
 14148   0024A4  EFE1  F012         	goto	l4072
 14149   0024A8                     l4036:
 14150   0024A8  5005               	movf	___fladd@a^0,w,c
 14151   0024AA  5C01               	subwf	___fladd@b^0,w,c
 14152   0024AC  5006               	movf	(___fladd@a+1)^0,w,c
 14153   0024AE  5802               	subwfb	(___fladd@b+1)^0,w,c
 14154   0024B0  5007               	movf	(___fladd@a+2)^0,w,c
 14155   0024B2  5803               	subwfb	(___fladd@b+2)^0,w,c
 14156   0024B4  5004               	movf	(___fladd@b+3)^0,w,c
 14157   0024B6  0A80               	xorlw	128
 14158   0024B8  6E09               	movwf	??___fladd^0,c
 14159   0024BA  5008               	movf	(___fladd@a+3)^0,w,c
 14160   0024BC  0A80               	xorlw	128
 14161   0024BE  5809               	subwfb	??___fladd^0,w,c
 14162   0024C0  B0D8               	btfsc	status,0,c
 14163   0024C2  EF65  F012         	goto	u3211
 14164   0024C6  EF67  F012         	goto	u3210
 14165   0024CA                     u3211:
 14166   0024CA  EF92  F012         	goto	l4046
 14167   0024CE                     u3210:
 14168   0024CE  5001               	movf	___fladd@b^0,w,c
 14169   0024D0  5C05               	subwf	___fladd@a^0,w,c
 14170   0024D2  6E09               	movwf	??___fladd^0,c
 14171   0024D4  5002               	movf	(___fladd@b+1)^0,w,c
 14172   0024D6  5806               	subwfb	(___fladd@a+1)^0,w,c
 14173   0024D8  6E0A               	movwf	(??___fladd+1)^0,c
 14174   0024DA  5003               	movf	(___fladd@b+2)^0,w,c
 14175   0024DC  5807               	subwfb	(___fladd@a+2)^0,w,c
 14176   0024DE  6E0B               	movwf	(??___fladd+2)^0,c
 14177   0024E0  5004               	movf	(___fladd@b+3)^0,w,c
 14178   0024E2  5808               	subwfb	(___fladd@a+3)^0,w,c
 14179   0024E4  6E0C               	movwf	(??___fladd+3)^0,c
 14180   0024E6  0EFF               	movlw	255
 14181   0024E8  2409               	addwf	??___fladd^0,w,c
 14182   0024EA  6E01               	movwf	___fladd@b^0,c
 14183   0024EC  0EFF               	movlw	255
 14184   0024EE  200A               	addwfc	(??___fladd+1)^0,w,c
 14185   0024F0  6E02               	movwf	(___fladd@b+1)^0,c
 14186   0024F2  0EFF               	movlw	255
 14187   0024F4  200B               	addwfc	(??___fladd+2)^0,w,c
 14188   0024F6  6E03               	movwf	(___fladd@b+2)^0,c
 14189   0024F8  0EFF               	movlw	255
 14190   0024FA  200C               	addwfc	(??___fladd+3)^0,w,c
 14191   0024FC  6E04               	movwf	(___fladd@b+3)^0,c
 14192   0024FE  0E80               	movlw	128
 14193   002500  1A0D               	xorwf	___fladd@signs^0,f,c
 14194   002502  6C10               	negf	___fladd@grs^0,c
 14195   002504  5010               	movf	___fladd@grs^0,w,c
 14196   002506  A4D8               	btfss	status,2,c
 14197   002508  EF88  F012         	goto	u3221
 14198   00250C  EF8A  F012         	goto	u3220
 14199   002510                     u3221:
 14200   002510  EF9A  F012         	goto	l1304
 14201   002514                     u3220:
 14202   002514  0E01               	movlw	1
 14203   002516  2601               	addwf	___fladd@b^0,f,c
 14204   002518  0E00               	movlw	0
 14205   00251A  2202               	addwfc	(___fladd@b+1)^0,f,c
 14206   00251C  2203               	addwfc	(___fladd@b+2)^0,f,c
 14207   00251E  2204               	addwfc	(___fladd@b+3)^0,f,c
 14208   002520  EF9A  F012         	goto	l1304
 14209   002524                     l4046:
 14210   002524  5005               	movf	___fladd@a^0,w,c
 14211   002526  5E01               	subwf	___fladd@b^0,f,c
 14212   002528  5006               	movf	(___fladd@a+1)^0,w,c
 14213   00252A  5A02               	subwfb	(___fladd@b+1)^0,f,c
 14214   00252C  5007               	movf	(___fladd@a+2)^0,w,c
 14215   00252E  5A03               	subwfb	(___fladd@b+2)^0,f,c
 14216   002530  5008               	movf	(___fladd@a+3)^0,w,c
 14217   002532  5A04               	subwfb	(___fladd@b+3)^0,f,c
 14218   002534                     l1304:
 14219   002534  5001               	movf	___fladd@b^0,w,c
 14220   002536  1002               	iorwf	(___fladd@b+1)^0,w,c
 14221   002538  1003               	iorwf	(___fladd@b+2)^0,w,c
 14222   00253A  1004               	iorwf	(___fladd@b+3)^0,w,c
 14223   00253C  A4D8               	btfss	status,2,c
 14224   00253E  EFA3  F012         	goto	u3231
 14225   002542  EFA5  F012         	goto	u3230
 14226   002546                     u3231:
 14227   002546  EFDA  F012         	goto	l4070
 14228   00254A                     u3230:
 14229   00254A  5010               	movf	___fladd@grs^0,w,c
 14230   00254C  A4D8               	btfss	status,2,c
 14231   00254E  EFAB  F012         	goto	u3241
 14232   002552  EFAD  F012         	goto	u3240
 14233   002556                     u3241:
 14234   002556  EFDA  F012         	goto	l4070
 14235   00255A                     u3240:
 14236   00255A  0E00               	movlw	0
 14237   00255C  6E01               	movwf	?___fladd^0,c
 14238   00255E  0E00               	movlw	0
 14239   002560  6E02               	movwf	(?___fladd+1)^0,c
 14240   002562  0E00               	movlw	0
 14241   002564  6E03               	movwf	(?___fladd+2)^0,c
 14242   002566  0E00               	movlw	0
 14243   002568  6E04               	movwf	(?___fladd+3)^0,c
 14244   00256A  EF75  F013         	goto	l1296
 14245   00256E                     l4054:
 14246   00256E  90D8               	bcf	status,0,c
 14247   002570  3601               	rlcf	___fladd@b^0,f,c
 14248   002572  3602               	rlcf	(___fladd@b+1)^0,f,c
 14249   002574  3603               	rlcf	(___fladd@b+2)^0,f,c
 14250   002576  3604               	rlcf	(___fladd@b+3)^0,f,c
 14251   002578  AE10               	btfss	___fladd@grs^0,7,c
 14252   00257A  EFC1  F012         	goto	u3251
 14253   00257E  EFC3  F012         	goto	u3250
 14254   002582                     u3251:
 14255   002582  EFC4  F012         	goto	l4060
 14256   002586                     u3250:
 14257   002586  8001               	bsf	___fladd@b^0,0,c
 14258   002588                     l4060:
 14259   002588  A010               	btfss	___fladd@grs^0,0,c
 14260   00258A  EFC9  F012         	goto	u3261
 14261   00258E  EFCB  F012         	goto	u3260
 14262   002592                     u3261:
 14263   002592  EFCF  F012         	goto	l4064
 14264   002596                     u3260:
 14265   002596  80D8               	bsf	status,0,c
 14266   002598  3610               	rlcf	___fladd@grs^0,f,c
 14267   00259A  EFD1  F012         	goto	l4066
 14268   00259E                     l4064:
 14269   00259E  90D8               	bcf	status,0,c
 14270   0025A0  3610               	rlcf	___fladd@grs^0,f,c
 14271   0025A2                     l4066:
 14272   0025A2  500F               	movf	___fladd@bexp^0,w,c
 14273   0025A4  B4D8               	btfsc	status,2,c
 14274   0025A6  EFD7  F012         	goto	u3271
 14275   0025AA  EFD9  F012         	goto	u3270
 14276   0025AE                     u3271:
 14277   0025AE  EFDA  F012         	goto	l4070
 14278   0025B2                     u3270:
 14279   0025B2  060F               	decf	___fladd@bexp^0,f,c
 14280   0025B4                     l4070:
 14281   0025B4  AE03               	btfss	(___fladd@b+2)^0,7,c
 14282   0025B6  EFDF  F012         	goto	u3281
 14283   0025BA  EFE1  F012         	goto	u3280
 14284   0025BE                     u3281:
 14285   0025BE  EFB7  F012         	goto	l4054
 14286   0025C2                     u3280:
 14287   0025C2                     l4072:
 14288   0025C2  0E00               	movlw	0
 14289   0025C4  6E0E               	movwf	___fladd@aexp^0,c
 14290   0025C6  AE10               	btfss	___fladd@grs^0,7,c
 14291   0025C8  EFE8  F012         	goto	u3291
 14292   0025CC  EFEA  F012         	goto	u3290
 14293   0025D0                     u3291:
 14294   0025D0  EF02  F013         	goto	l1313
 14295   0025D4                     u3290:
 14296   0025D4  C010  F009         	movff	___fladd@grs,??___fladd
 14297   0025D8  0E7F               	movlw	127
 14298   0025DA  1609               	andwf	??___fladd^0,f,c
 14299   0025DC  B4D8               	btfsc	status,2,c
 14300   0025DE  EFF3  F012         	goto	u3301
 14301   0025E2  EFF5  F012         	goto	u3300
 14302   0025E6                     u3301:
 14303   0025E6  EFF9  F012         	goto	l1314
 14304   0025EA                     u3300:
 14305   0025EA                     l4078:
 14306   0025EA  0E01               	movlw	1
 14307   0025EC  6E0E               	movwf	___fladd@aexp^0,c
 14308   0025EE  EF02  F013         	goto	l1313
 14309   0025F2                     l1314:
 14310   0025F2  A001               	btfss	___fladd@b^0,0,c
 14311   0025F4  EFFE  F012         	goto	u3311
 14312   0025F8  EF00  F013         	goto	u3310
 14313   0025FC                     u3311:
 14314   0025FC  EF02  F013         	goto	l1313
 14315   002600                     u3310:
 14316   002600  EFF5  F012         	goto	l4078
 14317   002604                     l1313:
 14318   002604  500E               	movf	___fladd@aexp^0,w,c
 14319   002606  B4D8               	btfsc	status,2,c
 14320   002608  EF08  F013         	goto	u3321
 14321   00260C  EF0A  F013         	goto	u3320
 14322   002610                     u3321:
 14323   002610  EF35  F013         	goto	l4090
 14324   002614                     u3320:
 14325   002614  0E01               	movlw	1
 14326   002616  2601               	addwf	___fladd@b^0,f,c
 14327   002618  0E00               	movlw	0
 14328   00261A  2202               	addwfc	(___fladd@b+1)^0,f,c
 14329   00261C  2203               	addwfc	(___fladd@b+2)^0,f,c
 14330   00261E  2204               	addwfc	(___fladd@b+3)^0,f,c
 14331   002620  A004               	btfss	(___fladd@b+3)^0,0,c
 14332   002622  EF15  F013         	goto	u3331
 14333   002626  EF17  F013         	goto	u3330
 14334   00262A                     u3331:
 14335   00262A  EF35  F013         	goto	l4090
 14336   00262E                     u3330:
 14337   00262E  C001  F009         	movff	___fladd@b,??___fladd
 14338   002632  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 14339   002636  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 14340   00263A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 14341   00263E  340C               	rlcf	(??___fladd+3)^0,w,c
 14342   002640  320C               	rrcf	(??___fladd+3)^0,f,c
 14343   002642  320B               	rrcf	(??___fladd+2)^0,f,c
 14344   002644  320A               	rrcf	(??___fladd+1)^0,f,c
 14345   002646  3209               	rrcf	??___fladd^0,f,c
 14346   002648  C009  F001         	movff	??___fladd,___fladd@b
 14347   00264C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 14348   002650  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 14349   002654  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 14350   002658  280F               	incf	___fladd@bexp^0,w,c
 14351   00265A  B4D8               	btfsc	status,2,c
 14352   00265C  EF32  F013         	goto	u3341
 14353   002660  EF34  F013         	goto	u3340
 14354   002664                     u3341:
 14355   002664  EF35  F013         	goto	l4090
 14356   002668                     u3340:
 14357   002668  2A0F               	incf	___fladd@bexp^0,f,c
 14358   00266A                     l4090:
 14359   00266A  280F               	incf	___fladd@bexp^0,w,c
 14360   00266C  B4D8               	btfsc	status,2,c
 14361   00266E  EF3B  F013         	goto	u3351
 14362   002672  EF3D  F013         	goto	u3350
 14363   002676                     u3351:
 14364   002676  EF45  F013         	goto	l4094
 14365   00267A                     u3350:
 14366   00267A  500F               	movf	___fladd@bexp^0,w,c
 14367   00267C  A4D8               	btfss	status,2,c
 14368   00267E  EF43  F013         	goto	u3361
 14369   002682  EF45  F013         	goto	u3360
 14370   002686                     u3361:
 14371   002686  EF57  F013         	goto	l4098
 14372   00268A                     u3360:
 14373   00268A                     l4094:
 14374   00268A  0E00               	movlw	0
 14375   00268C  6E01               	movwf	___fladd@b^0,c
 14376   00268E  0E00               	movlw	0
 14377   002690  6E02               	movwf	(___fladd@b+1)^0,c
 14378   002692  0E00               	movlw	0
 14379   002694  6E03               	movwf	(___fladd@b+2)^0,c
 14380   002696  0E00               	movlw	0
 14381   002698  6E04               	movwf	(___fladd@b+3)^0,c
 14382   00269A  500F               	movf	___fladd@bexp^0,w,c
 14383   00269C  A4D8               	btfss	status,2,c
 14384   00269E  EF53  F013         	goto	u3371
 14385   0026A2  EF55  F013         	goto	u3370
 14386   0026A6                     u3371:
 14387   0026A6  EF57  F013         	goto	l4098
 14388   0026AA                     u3370:
 14389   0026AA  0E00               	movlw	0
 14390   0026AC  6E0D               	movwf	___fladd@signs^0,c
 14391   0026AE                     l4098:
 14392   0026AE  A00F               	btfss	___fladd@bexp^0,0,c
 14393   0026B0  EF5C  F013         	goto	u3381
 14394   0026B4  EF5E  F013         	goto	u3380
 14395   0026B8                     u3381:
 14396   0026B8  EF61  F013         	goto	l4102
 14397   0026BC                     u3380:
 14398   0026BC  8E03               	bsf	(___fladd@b+2)^0,7,c
 14399   0026BE  EF62  F013         	goto	l4104
 14400   0026C2                     l4102:
 14401   0026C2  9E03               	bcf	(___fladd@b+2)^0,7,c
 14402   0026C4                     l4104:
 14403   0026C4  90D8               	bcf	status,0,c
 14404   0026C6  300F               	rrcf	___fladd@bexp^0,w,c
 14405   0026C8  6E04               	movwf	(___fladd@b+3)^0,c
 14406   0026CA  AE0D               	btfss	___fladd@signs^0,7,c
 14407   0026CC  EF6A  F013         	goto	u3391
 14408   0026D0  EF6C  F013         	goto	u3390
 14409   0026D4                     u3391:
 14410   0026D4  EF6D  F013         	goto	l4110
 14411   0026D8                     u3390:
 14412   0026D8  8E04               	bsf	(___fladd@b+3)^0,7,c
 14413   0026DA                     l4110:
 14414   0026DA  C001  F001         	movff	___fladd@b,?___fladd
 14415   0026DE  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14416   0026E2  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14417   0026E6  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14418   0026EA                     l1296:
 14419   0026EA  0012               	return		;funcret
 14420   0026EC                     __end_of___fladd:
 14421                           	callstack 0
 14422                           
 14423 ;; *************** function ___flmul *****************
 14424 ;; Defined at:
 14425 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;  b               4   16[COMRAM] unsigned char 
 14428 ;;  a               4   20[COMRAM] unsigned char 
 14429 ;; Auto vars:     Size  Location     Type
 14430 ;;  prod            4   35[COMRAM] struct .
 14431 ;;  grs             4   29[COMRAM] unsigned long 
 14432 ;;  temp            2   39[COMRAM] struct .
 14433 ;;  bexp            1   34[COMRAM] unsigned char 
 14434 ;;  aexp            1   33[COMRAM] unsigned char 
 14435 ;;  sign            1   28[COMRAM] unsigned char 
 14436 ;; Return value:  Size  Location     Type
 14437 ;;                  4   16[COMRAM] unsigned char 
 14438 ;; Registers used:
 14439 ;;		wreg, status,2, status,0, prodl, prodh
 14440 ;; Tracked objects:
 14441 ;;		On entry : 0/0
 14442 ;;		On exit  : 0/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14445 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14446 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14448 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14449 ;;Total ram usage:       25 bytes
 14450 ;; Hardware stack levels used: 1
 14451 ;; Hardware stack levels required when called: 1
 14452 ;; This function calls:
 14453 ;;		Nothing
 14454 ;; This function is called by:
 14455 ;;		_Colour_decider
 14456 ;;		_reverseOneBlock
 14457 ;;		_ForwardOneBlock
 14458 ;;		_Forwardhalfblock
 14459 ;;		_Backhalfblock
 14460 ;;		_efgtoa
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	text82
 14465   0026EC                     __ptext82:
 14466                           	callstack 0
 14467   0026EC                     ___flmul:
 14468                           	callstack 25
 14469   0026EC  5014               	movf	(___flmul@b+3)^0,w,c
 14470   0026EE  0B80               	andlw	128
 14471   0026F0  6E1D               	movwf	___flmul@sign^0,c
 14472   0026F2  5014               	movf	(___flmul@b+3)^0,w,c
 14473   0026F4  2414               	addwf	(___flmul@b+3)^0,w,c
 14474   0026F6  6E23               	movwf	___flmul@bexp^0,c
 14475   0026F8  AE13               	btfss	(___flmul@b+2)^0,7,c
 14476   0026FA  EF81  F013         	goto	u3881
 14477   0026FE  EF83  F013         	goto	u3880
 14478   002702                     u3881:
 14479   002702  EF84  F013         	goto	l4422
 14480   002706                     u3880:
 14481   002706  8023               	bsf	___flmul@bexp^0,0,c
 14482   002708                     l4422:
 14483   002708  5023               	movf	___flmul@bexp^0,w,c
 14484   00270A  B4D8               	btfsc	status,2,c
 14485   00270C  EF8A  F013         	goto	u3891
 14486   002710  EF8C  F013         	goto	u3890
 14487   002714                     u3891:
 14488   002714  EF9F  F013         	goto	l4430
 14489   002718                     u3890:
 14490   002718  2823               	incf	___flmul@bexp^0,w,c
 14491   00271A  A4D8               	btfss	status,2,c
 14492   00271C  EF92  F013         	goto	u3901
 14493   002720  EF94  F013         	goto	u3900
 14494   002724                     u3901:
 14495   002724  EF9C  F013         	goto	l4428
 14496   002728                     u3900:
 14497   002728  0E00               	movlw	0
 14498   00272A  6E11               	movwf	___flmul@b^0,c
 14499   00272C  0E00               	movlw	0
 14500   00272E  6E12               	movwf	(___flmul@b+1)^0,c
 14501   002730  0E00               	movlw	0
 14502   002732  6E13               	movwf	(___flmul@b+2)^0,c
 14503   002734  0E00               	movlw	0
 14504   002736  6E14               	movwf	(___flmul@b+3)^0,c
 14505   002738                     l4428:
 14506   002738  8E13               	bsf	(___flmul@b+2)^0,7,c
 14507   00273A  EFA7  F013         	goto	l4432
 14508   00273E                     l4430:
 14509   00273E  0E00               	movlw	0
 14510   002740  6E11               	movwf	___flmul@b^0,c
 14511   002742  0E00               	movlw	0
 14512   002744  6E12               	movwf	(___flmul@b+1)^0,c
 14513   002746  0E00               	movlw	0
 14514   002748  6E13               	movwf	(___flmul@b+2)^0,c
 14515   00274A  0E00               	movlw	0
 14516   00274C  6E14               	movwf	(___flmul@b+3)^0,c
 14517   00274E                     l4432:
 14518   00274E  5018               	movf	(___flmul@a+3)^0,w,c
 14519   002750  0B80               	andlw	128
 14520   002752  1A1D               	xorwf	___flmul@sign^0,f,c
 14521   002754  5018               	movf	(___flmul@a+3)^0,w,c
 14522   002756  2418               	addwf	(___flmul@a+3)^0,w,c
 14523   002758  6E22               	movwf	___flmul@aexp^0,c
 14524   00275A  AE17               	btfss	(___flmul@a+2)^0,7,c
 14525   00275C  EFB2  F013         	goto	u3911
 14526   002760  EFB4  F013         	goto	u3910
 14527   002764                     u3911:
 14528   002764  EFB5  F013         	goto	l4440
 14529   002768                     u3910:
 14530   002768  8022               	bsf	___flmul@aexp^0,0,c
 14531   00276A                     l4440:
 14532   00276A  5022               	movf	___flmul@aexp^0,w,c
 14533   00276C  B4D8               	btfsc	status,2,c
 14534   00276E  EFBB  F013         	goto	u3921
 14535   002772  EFBD  F013         	goto	u3920
 14536   002776                     u3921:
 14537   002776  EFD0  F013         	goto	l4448
 14538   00277A                     u3920:
 14539   00277A  2822               	incf	___flmul@aexp^0,w,c
 14540   00277C  A4D8               	btfss	status,2,c
 14541   00277E  EFC3  F013         	goto	u3931
 14542   002782  EFC5  F013         	goto	u3930
 14543   002786                     u3931:
 14544   002786  EFCD  F013         	goto	l4446
 14545   00278A                     u3930:
 14546   00278A  0E00               	movlw	0
 14547   00278C  6E15               	movwf	___flmul@a^0,c
 14548   00278E  0E00               	movlw	0
 14549   002790  6E16               	movwf	(___flmul@a+1)^0,c
 14550   002792  0E00               	movlw	0
 14551   002794  6E17               	movwf	(___flmul@a+2)^0,c
 14552   002796  0E00               	movlw	0
 14553   002798  6E18               	movwf	(___flmul@a+3)^0,c
 14554   00279A                     l4446:
 14555   00279A  8E17               	bsf	(___flmul@a+2)^0,7,c
 14556   00279C  EFD8  F013         	goto	l1373
 14557   0027A0                     l4448:
 14558   0027A0  0E00               	movlw	0
 14559   0027A2  6E15               	movwf	___flmul@a^0,c
 14560   0027A4  0E00               	movlw	0
 14561   0027A6  6E16               	movwf	(___flmul@a+1)^0,c
 14562   0027A8  0E00               	movlw	0
 14563   0027AA  6E17               	movwf	(___flmul@a+2)^0,c
 14564   0027AC  0E00               	movlw	0
 14565   0027AE  6E18               	movwf	(___flmul@a+3)^0,c
 14566   0027B0                     l1373:
 14567   0027B0  5022               	movf	___flmul@aexp^0,w,c
 14568   0027B2  B4D8               	btfsc	status,2,c
 14569   0027B4  EFDE  F013         	goto	u3941
 14570   0027B8  EFE0  F013         	goto	u3940
 14571   0027BC                     u3941:
 14572   0027BC  EFE8  F013         	goto	l4452
 14573   0027C0                     u3940:
 14574   0027C0  5023               	movf	___flmul@bexp^0,w,c
 14575   0027C2  A4D8               	btfss	status,2,c
 14576   0027C4  EFE6  F013         	goto	u3951
 14577   0027C8  EFE8  F013         	goto	u3950
 14578   0027CC                     u3951:
 14579   0027CC  EFF2  F013         	goto	l4456
 14580   0027D0                     u3950:
 14581   0027D0                     l4452:
 14582   0027D0  0E00               	movlw	0
 14583   0027D2  6E11               	movwf	?___flmul^0,c
 14584   0027D4  0E00               	movlw	0
 14585   0027D6  6E12               	movwf	(?___flmul+1)^0,c
 14586   0027D8  0E00               	movlw	0
 14587   0027DA  6E13               	movwf	(?___flmul+2)^0,c
 14588   0027DC  0E00               	movlw	0
 14589   0027DE  6E14               	movwf	(?___flmul+3)^0,c
 14590   0027E0  EF8A  F015         	goto	l1377
 14591   0027E4                     l4456:
 14592   0027E4  5017               	movf	(___flmul@a+2)^0,w,c
 14593   0027E6  0211               	mulwf	___flmul@b^0,c
 14594   0027E8  CFF3 F028          	movff	prodl,___flmul@temp
 14595   0027EC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14596   0027F0  5028               	movf	___flmul@temp^0,w,c
 14597   0027F2  6E1E               	movwf	___flmul@grs^0,c
 14598   0027F4  6A1F               	clrf	(___flmul@grs+1)^0,c
 14599   0027F6  6A20               	clrf	(___flmul@grs+2)^0,c
 14600   0027F8  6A21               	clrf	(___flmul@grs+3)^0,c
 14601   0027FA  5029               	movf	(___flmul@temp+1)^0,w,c
 14602   0027FC  6E24               	movwf	___flmul@prod^0,c
 14603   0027FE  6A25               	clrf	(___flmul@prod+1)^0,c
 14604   002800  6A26               	clrf	(___flmul@prod+2)^0,c
 14605   002802  6A27               	clrf	(___flmul@prod+3)^0,c
 14606   002804  5016               	movf	(___flmul@a+1)^0,w,c
 14607   002806  0212               	mulwf	(___flmul@b+1)^0,c
 14608   002808  CFF3 F028          	movff	prodl,___flmul@temp
 14609   00280C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14610   002810  5028               	movf	___flmul@temp^0,w,c
 14611   002812  261E               	addwf	___flmul@grs^0,f,c
 14612   002814  0E00               	movlw	0
 14613   002816  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14614   002818  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14615   00281A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14616   00281C  5029               	movf	(___flmul@temp+1)^0,w,c
 14617   00281E  2624               	addwf	___flmul@prod^0,f,c
 14618   002820  0E00               	movlw	0
 14619   002822  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14620   002824  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14621   002826  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14622   002828  5015               	movf	___flmul@a^0,w,c
 14623   00282A  0213               	mulwf	(___flmul@b+2)^0,c
 14624   00282C  CFF3 F028          	movff	prodl,___flmul@temp
 14625   002830  CFF4 F029          	movff	prodh,___flmul@temp+1
 14626   002834  5028               	movf	___flmul@temp^0,w,c
 14627   002836  261E               	addwf	___flmul@grs^0,f,c
 14628   002838  0E00               	movlw	0
 14629   00283A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14630   00283C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14631   00283E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14632   002840  5029               	movf	(___flmul@temp+1)^0,w,c
 14633   002842  2624               	addwf	___flmul@prod^0,f,c
 14634   002844  0E00               	movlw	0
 14635   002846  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14636   002848  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14637   00284A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14638   00284C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14639   002850  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14640   002854  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14641   002858  6A1E               	clrf	___flmul@grs^0,c
 14642   00285A  5015               	movf	___flmul@a^0,w,c
 14643   00285C  0212               	mulwf	(___flmul@b+1)^0,c
 14644   00285E  CFF3 F028          	movff	prodl,___flmul@temp
 14645   002862  CFF4 F029          	movff	prodh,___flmul@temp+1
 14646   002866  5028               	movf	___flmul@temp^0,w,c
 14647   002868  261E               	addwf	___flmul@grs^0,f,c
 14648   00286A  5029               	movf	(___flmul@temp+1)^0,w,c
 14649   00286C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14650   00286E  0E00               	movlw	0
 14651   002870  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14652   002872  0E00               	movlw	0
 14653   002874  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14654   002876  5016               	movf	(___flmul@a+1)^0,w,c
 14655   002878  0211               	mulwf	___flmul@b^0,c
 14656   00287A  CFF3 F028          	movff	prodl,___flmul@temp
 14657   00287E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14658   002882  5028               	movf	___flmul@temp^0,w,c
 14659   002884  261E               	addwf	___flmul@grs^0,f,c
 14660   002886  5029               	movf	(___flmul@temp+1)^0,w,c
 14661   002888  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14662   00288A  0E00               	movlw	0
 14663   00288C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14664   00288E  0E00               	movlw	0
 14665   002890  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14666   002892  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14667   002896  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14668   00289A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14669   00289E  6A1E               	clrf	___flmul@grs^0,c
 14670   0028A0  5015               	movf	___flmul@a^0,w,c
 14671   0028A2  0211               	mulwf	___flmul@b^0,c
 14672   0028A4  CFF3 F028          	movff	prodl,___flmul@temp
 14673   0028A8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14674   0028AC  5028               	movf	___flmul@temp^0,w,c
 14675   0028AE  261E               	addwf	___flmul@grs^0,f,c
 14676   0028B0  5029               	movf	(___flmul@temp+1)^0,w,c
 14677   0028B2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14678   0028B4  0E00               	movlw	0
 14679   0028B6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14680   0028B8  0E00               	movlw	0
 14681   0028BA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14682   0028BC  5017               	movf	(___flmul@a+2)^0,w,c
 14683   0028BE  0212               	mulwf	(___flmul@b+1)^0,c
 14684   0028C0  CFF3 F028          	movff	prodl,___flmul@temp
 14685   0028C4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14686   0028C8  5028               	movf	___flmul@temp^0,w,c
 14687   0028CA  2624               	addwf	___flmul@prod^0,f,c
 14688   0028CC  5029               	movf	(___flmul@temp+1)^0,w,c
 14689   0028CE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14690   0028D0  0E00               	movlw	0
 14691   0028D2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14692   0028D4  0E00               	movlw	0
 14693   0028D6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14694   0028D8  5016               	movf	(___flmul@a+1)^0,w,c
 14695   0028DA  0213               	mulwf	(___flmul@b+2)^0,c
 14696   0028DC  CFF3 F028          	movff	prodl,___flmul@temp
 14697   0028E0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14698   0028E4  5028               	movf	___flmul@temp^0,w,c
 14699   0028E6  2624               	addwf	___flmul@prod^0,f,c
 14700   0028E8  5029               	movf	(___flmul@temp+1)^0,w,c
 14701   0028EA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14702   0028EC  0E00               	movlw	0
 14703   0028EE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14704   0028F0  0E00               	movlw	0
 14705   0028F2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14706   0028F4  5017               	movf	(___flmul@a+2)^0,w,c
 14707   0028F6  0213               	mulwf	(___flmul@b+2)^0,c
 14708   0028F8  CFF3 F028          	movff	prodl,___flmul@temp
 14709   0028FC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14710   002900  5028               	movf	___flmul@temp^0,w,c
 14711   002902  6E19               	movwf	??___flmul^0,c
 14712   002904  5029               	movf	(___flmul@temp+1)^0,w,c
 14713   002906  6E1A               	movwf	(??___flmul+1)^0,c
 14714   002908  6A1B               	clrf	(??___flmul+2)^0,c
 14715   00290A  6A1C               	clrf	(??___flmul+3)^0,c
 14716   00290C  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14717   002910  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14718   002914  C019  F01A         	movff	??___flmul,??___flmul+1
 14719   002918  6A19               	clrf	??___flmul^0,c
 14720   00291A  5019               	movf	??___flmul^0,w,c
 14721   00291C  2624               	addwf	___flmul@prod^0,f,c
 14722   00291E  501A               	movf	(??___flmul+1)^0,w,c
 14723   002920  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14724   002922  501B               	movf	(??___flmul+2)^0,w,c
 14725   002924  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14726   002926  501C               	movf	(??___flmul+3)^0,w,c
 14727   002928  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14728   00292A  C01E  F019         	movff	___flmul@grs,??___flmul
 14729   00292E  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14730   002932  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14731   002936  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14732   00293A  0E19               	movlw	25
 14733   00293C  EFA5  F014         	goto	u3960
 14734   002940                     u3965:
 14735   002940  90D8               	bcf	status,0,c
 14736   002942  321C               	rrcf	(??___flmul+3)^0,f,c
 14737   002944  321B               	rrcf	(??___flmul+2)^0,f,c
 14738   002946  321A               	rrcf	(??___flmul+1)^0,f,c
 14739   002948  3219               	rrcf	??___flmul^0,f,c
 14740   00294A                     u3960:
 14741   00294A  2EE8               	decfsz	wreg,f,c
 14742   00294C  EFA0  F014         	goto	u3965
 14743   002950  5019               	movf	??___flmul^0,w,c
 14744   002952  2624               	addwf	___flmul@prod^0,f,c
 14745   002954  501A               	movf	(??___flmul+1)^0,w,c
 14746   002956  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14747   002958  501B               	movf	(??___flmul+2)^0,w,c
 14748   00295A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14749   00295C  501C               	movf	(??___flmul+3)^0,w,c
 14750   00295E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14751   002960  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14752   002964  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14753   002968  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14754   00296C  6A1E               	clrf	___flmul@grs^0,c
 14755   00296E  5022               	movf	___flmul@aexp^0,w,c
 14756   002970  C023  F019         	movff	___flmul@bexp,??___flmul
 14757   002974  6A1A               	clrf	(??___flmul+1)^0,c
 14758   002976  2619               	addwf	??___flmul^0,f,c
 14759   002978  0E00               	movlw	0
 14760   00297A  221A               	addwfc	(??___flmul+1)^0,f,c
 14761   00297C  0E82               	movlw	130
 14762   00297E  2419               	addwf	??___flmul^0,w,c
 14763   002980  6E28               	movwf	___flmul@temp^0,c
 14764   002982  0EFF               	movlw	255
 14765   002984  201A               	addwfc	(??___flmul+1)^0,w,c
 14766   002986  6E29               	movwf	(___flmul@temp+1)^0,c
 14767   002988  EFDB  F014         	goto	l4504
 14768   00298C                     l4498:
 14769   00298C  90D8               	bcf	status,0,c
 14770   00298E  3624               	rlcf	___flmul@prod^0,f,c
 14771   002990  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14772   002992  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14773   002994  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14774   002996  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14775   002998  EFD0  F014         	goto	u3971
 14776   00299C  EFD2  F014         	goto	u3970
 14777   0029A0                     u3971:
 14778   0029A0  EFD3  F014         	goto	l1380
 14779   0029A4                     u3970:
 14780   0029A4  8024               	bsf	___flmul@prod^0,0,c
 14781   0029A6                     l1380:
 14782   0029A6  90D8               	bcf	status,0,c
 14783   0029A8  361E               	rlcf	___flmul@grs^0,f,c
 14784   0029AA  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14785   0029AC  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14786   0029AE  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14787   0029B0  0628               	decf	___flmul@temp^0,f,c
 14788   0029B2  A0D8               	btfss	status,0,c
 14789   0029B4  0629               	decf	(___flmul@temp+1)^0,f,c
 14790   0029B6                     l4504:
 14791   0029B6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14792   0029B8  EFE0  F014         	goto	u3981
 14793   0029BC  EFE2  F014         	goto	u3980
 14794   0029C0                     u3981:
 14795   0029C0  EFC6  F014         	goto	l4498
 14796   0029C4                     u3980:
 14797   0029C4  0E00               	movlw	0
 14798   0029C6  6E22               	movwf	___flmul@aexp^0,c
 14799   0029C8  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14800   0029CA  EFE9  F014         	goto	u3991
 14801   0029CE  EFEB  F014         	goto	u3990
 14802   0029D2                     u3991:
 14803   0029D2  EF0F  F015         	goto	l1382
 14804   0029D6                     u3990:
 14805   0029D6  0EFF               	movlw	255
 14806   0029D8  141E               	andwf	___flmul@grs^0,w,c
 14807   0029DA  6E19               	movwf	??___flmul^0,c
 14808   0029DC  0EFF               	movlw	255
 14809   0029DE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14810   0029E0  6E1A               	movwf	(??___flmul+1)^0,c
 14811   0029E2  0EFF               	movlw	255
 14812   0029E4  1420               	andwf	(___flmul@grs+2)^0,w,c
 14813   0029E6  6E1B               	movwf	(??___flmul+2)^0,c
 14814   0029E8  0E7F               	movlw	127
 14815   0029EA  1421               	andwf	(___flmul@grs+3)^0,w,c
 14816   0029EC  6E1C               	movwf	(??___flmul+3)^0,c
 14817   0029EE  5019               	movf	??___flmul^0,w,c
 14818   0029F0  101A               	iorwf	(??___flmul+1)^0,w,c
 14819   0029F2  101B               	iorwf	(??___flmul+2)^0,w,c
 14820   0029F4  101C               	iorwf	(??___flmul+3)^0,w,c
 14821   0029F6  B4D8               	btfsc	status,2,c
 14822   0029F8  EF00  F015         	goto	u4001
 14823   0029FC  EF02  F015         	goto	u4000
 14824   002A00                     u4001:
 14825   002A00  EF06  F015         	goto	l1383
 14826   002A04                     u4000:
 14827   002A04                     l4512:
 14828   002A04  0E01               	movlw	1
 14829   002A06  6E22               	movwf	___flmul@aexp^0,c
 14830   002A08  EF0F  F015         	goto	l1382
 14831   002A0C                     l1383:
 14832   002A0C  A024               	btfss	___flmul@prod^0,0,c
 14833   002A0E  EF0B  F015         	goto	u4011
 14834   002A12  EF0D  F015         	goto	u4010
 14835   002A16                     u4011:
 14836   002A16  EF0F  F015         	goto	l1382
 14837   002A1A                     u4010:
 14838   002A1A  EF02  F015         	goto	l4512
 14839   002A1E                     l1382:
 14840   002A1E  5022               	movf	___flmul@aexp^0,w,c
 14841   002A20  B4D8               	btfsc	status,2,c
 14842   002A22  EF15  F015         	goto	u4021
 14843   002A26  EF17  F015         	goto	u4020
 14844   002A2A                     u4021:
 14845   002A2A  EF3B  F015         	goto	l4524
 14846   002A2E                     u4020:
 14847   002A2E  0E01               	movlw	1
 14848   002A30  2624               	addwf	___flmul@prod^0,f,c
 14849   002A32  0E00               	movlw	0
 14850   002A34  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14851   002A36  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14852   002A38  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14853   002A3A  A027               	btfss	(___flmul@prod+3)^0,0,c
 14854   002A3C  EF22  F015         	goto	u4031
 14855   002A40  EF24  F015         	goto	u4030
 14856   002A44                     u4031:
 14857   002A44  EF3B  F015         	goto	l4524
 14858   002A48                     u4030:
 14859   002A48  C024  F019         	movff	___flmul@prod,??___flmul
 14860   002A4C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14861   002A50  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14862   002A54  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14863   002A58  341C               	rlcf	(??___flmul+3)^0,w,c
 14864   002A5A  321C               	rrcf	(??___flmul+3)^0,f,c
 14865   002A5C  321B               	rrcf	(??___flmul+2)^0,f,c
 14866   002A5E  321A               	rrcf	(??___flmul+1)^0,f,c
 14867   002A60  3219               	rrcf	??___flmul^0,f,c
 14868   002A62  C019  F024         	movff	??___flmul,___flmul@prod
 14869   002A66  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14870   002A6A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14871   002A6E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14872   002A72  4A28               	infsnz	___flmul@temp^0,f,c
 14873   002A74  2A29               	incf	(___flmul@temp+1)^0,f,c
 14874   002A76                     l4524:
 14875   002A76  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14876   002A78  EF46  F015         	goto	u4041
 14877   002A7C  5029               	movf	(___flmul@temp+1)^0,w,c
 14878   002A7E  E108               	bnz	u4040
 14879   002A80  2828               	incf	___flmul@temp^0,w,c
 14880   002A82  A0D8               	btfss	status,0,c
 14881   002A84  EF46  F015         	goto	u4041
 14882   002A88  EF48  F015         	goto	u4040
 14883   002A8C                     u4041:
 14884   002A8C  EF52  F015         	goto	l4528
 14885   002A90                     u4040:
 14886   002A90  0E00               	movlw	0
 14887   002A92  6E24               	movwf	___flmul@prod^0,c
 14888   002A94  0E00               	movlw	0
 14889   002A96  6E25               	movwf	(___flmul@prod+1)^0,c
 14890   002A98  0E80               	movlw	128
 14891   002A9A  6E26               	movwf	(___flmul@prod+2)^0,c
 14892   002A9C  0E7F               	movlw	127
 14893   002A9E  6E27               	movwf	(___flmul@prod+3)^0,c
 14894   002AA0  EF80  F015         	goto	l4540
 14895   002AA4                     l4528:
 14896   002AA4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14897   002AA6  EF5F  F015         	goto	u4050
 14898   002AAA  5029               	movf	(___flmul@temp+1)^0,w,c
 14899   002AAC  E106               	bnz	u4051
 14900   002AAE  0428               	decf	___flmul@temp^0,w,c
 14901   002AB0  B0D8               	btfsc	status,0,c
 14902   002AB2  EF5D  F015         	goto	u4051
 14903   002AB6  EF5F  F015         	goto	u4050
 14904   002ABA                     u4051:
 14905   002ABA  EF6B  F015         	goto	l1390
 14906   002ABE                     u4050:
 14907   002ABE  0E00               	movlw	0
 14908   002AC0  6E24               	movwf	___flmul@prod^0,c
 14909   002AC2  0E00               	movlw	0
 14910   002AC4  6E25               	movwf	(___flmul@prod+1)^0,c
 14911   002AC6  0E00               	movlw	0
 14912   002AC8  6E26               	movwf	(___flmul@prod+2)^0,c
 14913   002ACA  0E00               	movlw	0
 14914   002ACC  6E27               	movwf	(___flmul@prod+3)^0,c
 14915   002ACE  0E00               	movlw	0
 14916   002AD0  6E1D               	movwf	___flmul@sign^0,c
 14917   002AD2  EF80  F015         	goto	l4540
 14918   002AD6                     l1390:
 14919   002AD6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14920   002ADA  0EFF               	movlw	255
 14921   002ADC  1624               	andwf	___flmul@prod^0,f,c
 14922   002ADE  0EFF               	movlw	255
 14923   002AE0  1625               	andwf	(___flmul@prod+1)^0,f,c
 14924   002AE2  0E7F               	movlw	127
 14925   002AE4  1626               	andwf	(___flmul@prod+2)^0,f,c
 14926   002AE6  0E00               	movlw	0
 14927   002AE8  1627               	andwf	(___flmul@prod+3)^0,f,c
 14928   002AEA  A023               	btfss	___flmul@bexp^0,0,c
 14929   002AEC  EF7A  F015         	goto	u4061
 14930   002AF0  EF7C  F015         	goto	u4060
 14931   002AF4                     u4061:
 14932   002AF4  EF7D  F015         	goto	l4538
 14933   002AF8                     u4060:
 14934   002AF8  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14935   002AFA                     l4538:
 14936   002AFA  90D8               	bcf	status,0,c
 14937   002AFC  3023               	rrcf	___flmul@bexp^0,w,c
 14938   002AFE  6E27               	movwf	(___flmul@prod+3)^0,c
 14939   002B00                     l4540:
 14940   002B00  501D               	movf	___flmul@sign^0,w,c
 14941   002B02  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14942   002B04  C024  F011         	movff	___flmul@prod,?___flmul
 14943   002B08  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14944   002B0C  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14945   002B10  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14946   002B14                     l1377:
 14947   002B14  0012               	return		;funcret
 14948   002B16                     __end_of___flmul:
 14949                           	callstack 0
 14950                           
 14951 ;; *************** function ___flge *****************
 14952 ;; Defined at:
 14953 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14954 ;; Parameters:    Size  Location     Type
 14955 ;;  ff1             4   41[COMRAM] unsigned char 
 14956 ;;  ff2             4   45[COMRAM] unsigned char 
 14957 ;; Auto vars:     Size  Location     Type
 14958 ;;		None
 14959 ;; Return value:  Size  Location     Type
 14960 ;;		None               void
 14961 ;; Registers used:
 14962 ;;		wreg, status,2, status,0
 14963 ;; Tracked objects:
 14964 ;;		On entry : 0/0
 14965 ;;		On exit  : 0/0
 14966 ;;		Unchanged: 0/0
 14967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14968 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14970 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14971 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14972 ;;Total ram usage:       12 bytes
 14973 ;; Hardware stack levels used: 1
 14974 ;; Hardware stack levels required when called: 1
 14975 ;; This function calls:
 14976 ;;		Nothing
 14977 ;; This function is called by:
 14978 ;;		_Colour_decider
 14979 ;;		_efgtoa
 14980 ;; This function uses a non-reentrant model
 14981 ;;
 14982                           
 14983                           	psect	text83
 14984   004A54                     __ptext83:
 14985                           	callstack 0
 14986   004A54                     ___flge:
 14987                           	callstack 25
 14988   004A54  0E00               	movlw	0
 14989   004A56  142A               	andwf	___flge@ff1^0,w,c
 14990   004A58  6E32               	movwf	??___flge^0,c
 14991   004A5A  0E00               	movlw	0
 14992   004A5C  142B               	andwf	(___flge@ff1+1)^0,w,c
 14993   004A5E  6E33               	movwf	(??___flge+1)^0,c
 14994   004A60  0E80               	movlw	128
 14995   004A62  142C               	andwf	(___flge@ff1+2)^0,w,c
 14996   004A64  6E34               	movwf	(??___flge+2)^0,c
 14997   004A66  0E7F               	movlw	127
 14998   004A68  142D               	andwf	(___flge@ff1+3)^0,w,c
 14999   004A6A  6E35               	movwf	(??___flge+3)^0,c
 15000   004A6C  5032               	movf	??___flge^0,w,c
 15001   004A6E  1033               	iorwf	(??___flge+1)^0,w,c
 15002   004A70  1034               	iorwf	(??___flge+2)^0,w,c
 15003   004A72  1035               	iorwf	(??___flge+3)^0,w,c
 15004   004A74  A4D8               	btfss	status,2,c
 15005   004A76  EF3F  F025         	goto	u4101
 15006   004A7A  EF41  F025         	goto	u4100
 15007   004A7E                     u4101:
 15008   004A7E  EF49  F025         	goto	l4572
 15009   004A82                     u4100:
 15010   004A82  0E00               	movlw	0
 15011   004A84  6E2A               	movwf	___flge@ff1^0,c
 15012   004A86  0E00               	movlw	0
 15013   004A88  6E2B               	movwf	(___flge@ff1+1)^0,c
 15014   004A8A  0E00               	movlw	0
 15015   004A8C  6E2C               	movwf	(___flge@ff1+2)^0,c
 15016   004A8E  0E00               	movlw	0
 15017   004A90  6E2D               	movwf	(___flge@ff1+3)^0,c
 15018   004A92                     l4572:
 15019   004A92  0E00               	movlw	0
 15020   004A94  142E               	andwf	___flge@ff2^0,w,c
 15021   004A96  6E32               	movwf	??___flge^0,c
 15022   004A98  0E00               	movlw	0
 15023   004A9A  142F               	andwf	(___flge@ff2+1)^0,w,c
 15024   004A9C  6E33               	movwf	(??___flge+1)^0,c
 15025   004A9E  0E80               	movlw	128
 15026   004AA0  1430               	andwf	(___flge@ff2+2)^0,w,c
 15027   004AA2  6E34               	movwf	(??___flge+2)^0,c
 15028   004AA4  0E7F               	movlw	127
 15029   004AA6  1431               	andwf	(___flge@ff2+3)^0,w,c
 15030   004AA8  6E35               	movwf	(??___flge+3)^0,c
 15031   004AAA  5032               	movf	??___flge^0,w,c
 15032   004AAC  1033               	iorwf	(??___flge+1)^0,w,c
 15033   004AAE  1034               	iorwf	(??___flge+2)^0,w,c
 15034   004AB0  1035               	iorwf	(??___flge+3)^0,w,c
 15035   004AB2  A4D8               	btfss	status,2,c
 15036   004AB4  EF5E  F025         	goto	u4111
 15037   004AB8  EF60  F025         	goto	u4110
 15038   004ABC                     u4111:
 15039   004ABC  EF68  F025         	goto	l4576
 15040   004AC0                     u4110:
 15041   004AC0  0E00               	movlw	0
 15042   004AC2  6E2E               	movwf	___flge@ff2^0,c
 15043   004AC4  0E00               	movlw	0
 15044   004AC6  6E2F               	movwf	(___flge@ff2+1)^0,c
 15045   004AC8  0E00               	movlw	0
 15046   004ACA  6E30               	movwf	(___flge@ff2+2)^0,c
 15047   004ACC  0E00               	movlw	0
 15048   004ACE  6E31               	movwf	(___flge@ff2+3)^0,c
 15049   004AD0                     l4576:
 15050   004AD0  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 15051   004AD2  EF6D  F025         	goto	u4121
 15052   004AD6  EF6F  F025         	goto	u4120
 15053   004ADA                     u4121:
 15054   004ADA  EF78  F025         	goto	l4580
 15055   004ADE                     u4120:
 15056   004ADE  6C2A               	negf	___flge@ff1^0,c
 15057   004AE0  1E2B               	comf	(___flge@ff1+1)^0,f,c
 15058   004AE2  B0D8               	btfsc	status,0,c
 15059   004AE4  2A2B               	incf	(___flge@ff1+1)^0,f,c
 15060   004AE6  1E2C               	comf	(___flge@ff1+2)^0,f,c
 15061   004AE8  B0D8               	btfsc	status,0,c
 15062   004AEA  2A2C               	incf	(___flge@ff1+2)^0,f,c
 15063   004AEC  0E80               	movlw	128
 15064   004AEE  562D               	subfwb	(___flge@ff1+3)^0,f,c
 15065   004AF0                     l4580:
 15066   004AF0  AE31               	btfss	(___flge@ff2+3)^0,7,c
 15067   004AF2  EF7D  F025         	goto	u4131
 15068   004AF6  EF7F  F025         	goto	u4130
 15069   004AFA                     u4131:
 15070   004AFA  EF88  F025         	goto	l1024
 15071   004AFE                     u4130:
 15072   004AFE  6C2E               	negf	___flge@ff2^0,c
 15073   004B00  1E2F               	comf	(___flge@ff2+1)^0,f,c
 15074   004B02  B0D8               	btfsc	status,0,c
 15075   004B04  2A2F               	incf	(___flge@ff2+1)^0,f,c
 15076   004B06  1E30               	comf	(___flge@ff2+2)^0,f,c
 15077   004B08  B0D8               	btfsc	status,0,c
 15078   004B0A  2A30               	incf	(___flge@ff2+2)^0,f,c
 15079   004B0C  0E80               	movlw	128
 15080   004B0E  5631               	subfwb	(___flge@ff2+3)^0,f,c
 15081   004B10                     l1024:
 15082   004B10  0E00               	movlw	0
 15083   004B12  1A2A               	xorwf	___flge@ff1^0,f,c
 15084   004B14  0E00               	movlw	0
 15085   004B16  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 15086   004B18  0E00               	movlw	0
 15087   004B1A  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 15088   004B1C  0E80               	movlw	128
 15089   004B1E  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 15090   004B20  0E00               	movlw	0
 15091   004B22  1A2E               	xorwf	___flge@ff2^0,f,c
 15092   004B24  0E00               	movlw	0
 15093   004B26  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 15094   004B28  0E00               	movlw	0
 15095   004B2A  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 15096   004B2C  0E80               	movlw	128
 15097   004B2E  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 15098   004B30  502E               	movf	___flge@ff2^0,w,c
 15099   004B32  5C2A               	subwf	___flge@ff1^0,w,c
 15100   004B34  502F               	movf	(___flge@ff2+1)^0,w,c
 15101   004B36  582B               	subwfb	(___flge@ff1+1)^0,w,c
 15102   004B38  5030               	movf	(___flge@ff2+2)^0,w,c
 15103   004B3A  582C               	subwfb	(___flge@ff1+2)^0,w,c
 15104   004B3C  5031               	movf	(___flge@ff2+3)^0,w,c
 15105   004B3E  582D               	subwfb	(___flge@ff1+3)^0,w,c
 15106   004B40  B0D8               	btfsc	status,0,c
 15107   004B42  EFA5  F025         	goto	u4141
 15108   004B46  EFA7  F025         	goto	u4140
 15109   004B4A                     u4141:
 15110   004B4A  EFAA  F025         	goto	l4586
 15111   004B4E                     u4140:
 15112   004B4E  90D8               	bcf	status,0,c
 15113   004B50  EFAB  F025         	goto	l1029
 15114   004B54                     l4586:
 15115   004B54  80D8               	bsf	status,0,c
 15116   004B56                     l1029:
 15117   004B56  0012               	return		;funcret
 15118   004B58                     __end_of___flge:
 15119                           	callstack 0
 15120                           
 15121 ;; *************** function ___fleq *****************
 15122 ;; Defined at:
 15123 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 15124 ;; Parameters:    Size  Location     Type
 15125 ;;  ff1             4   49[COMRAM] unsigned char 
 15126 ;;  ff2             4   53[COMRAM] unsigned char 
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;		None
 15129 ;; Return value:  Size  Location     Type
 15130 ;;		None               void
 15131 ;; Registers used:
 15132 ;;		wreg, status,2, status,0
 15133 ;; Tracked objects:
 15134 ;;		On entry : 0/0
 15135 ;;		On exit  : 0/0
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15138 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15140 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15141 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15142 ;;Total ram usage:       12 bytes
 15143 ;; Hardware stack levels used: 1
 15144 ;; Hardware stack levels required when called: 1
 15145 ;; This function calls:
 15146 ;;		Nothing
 15147 ;; This function is called by:
 15148 ;;		_Colour_decider
 15149 ;;		_efgtoa
 15150 ;; This function uses a non-reentrant model
 15151 ;;
 15152                           
 15153                           	psect	text84
 15154   004F36                     __ptext84:
 15155                           	callstack 0
 15156   004F36                     ___fleq:
 15157                           	callstack 25
 15158   004F36  0E00               	movlw	0
 15159   004F38  1432               	andwf	___fleq@ff1^0,w,c
 15160   004F3A  6E3A               	movwf	??___fleq^0,c
 15161   004F3C  0E00               	movlw	0
 15162   004F3E  1433               	andwf	(___fleq@ff1+1)^0,w,c
 15163   004F40  6E3B               	movwf	(??___fleq+1)^0,c
 15164   004F42  0E80               	movlw	128
 15165   004F44  1434               	andwf	(___fleq@ff1+2)^0,w,c
 15166   004F46  6E3C               	movwf	(??___fleq+2)^0,c
 15167   004F48  0E7F               	movlw	127
 15168   004F4A  1435               	andwf	(___fleq@ff1+3)^0,w,c
 15169   004F4C  6E3D               	movwf	(??___fleq+3)^0,c
 15170   004F4E  503A               	movf	??___fleq^0,w,c
 15171   004F50  103B               	iorwf	(??___fleq+1)^0,w,c
 15172   004F52  103C               	iorwf	(??___fleq+2)^0,w,c
 15173   004F54  103D               	iorwf	(??___fleq+3)^0,w,c
 15174   004F56  A4D8               	btfss	status,2,c
 15175   004F58  EFB0  F027         	goto	u4071
 15176   004F5C  EFB2  F027         	goto	u4070
 15177   004F60                     u4071:
 15178   004F60  EFBA  F027         	goto	l4556
 15179   004F64                     u4070:
 15180   004F64  0E00               	movlw	0
 15181   004F66  6E32               	movwf	___fleq@ff1^0,c
 15182   004F68  0E00               	movlw	0
 15183   004F6A  6E33               	movwf	(___fleq@ff1+1)^0,c
 15184   004F6C  0E00               	movlw	0
 15185   004F6E  6E34               	movwf	(___fleq@ff1+2)^0,c
 15186   004F70  0E00               	movlw	0
 15187   004F72  6E35               	movwf	(___fleq@ff1+3)^0,c
 15188   004F74                     l4556:
 15189   004F74  0E00               	movlw	0
 15190   004F76  1436               	andwf	___fleq@ff2^0,w,c
 15191   004F78  6E3A               	movwf	??___fleq^0,c
 15192   004F7A  0E00               	movlw	0
 15193   004F7C  1437               	andwf	(___fleq@ff2+1)^0,w,c
 15194   004F7E  6E3B               	movwf	(??___fleq+1)^0,c
 15195   004F80  0E80               	movlw	128
 15196   004F82  1438               	andwf	(___fleq@ff2+2)^0,w,c
 15197   004F84  6E3C               	movwf	(??___fleq+2)^0,c
 15198   004F86  0E7F               	movlw	127
 15199   004F88  1439               	andwf	(___fleq@ff2+3)^0,w,c
 15200   004F8A  6E3D               	movwf	(??___fleq+3)^0,c
 15201   004F8C  503A               	movf	??___fleq^0,w,c
 15202   004F8E  103B               	iorwf	(??___fleq+1)^0,w,c
 15203   004F90  103C               	iorwf	(??___fleq+2)^0,w,c
 15204   004F92  103D               	iorwf	(??___fleq+3)^0,w,c
 15205   004F94  A4D8               	btfss	status,2,c
 15206   004F96  EFCF  F027         	goto	u4081
 15207   004F9A  EFD1  F027         	goto	u4080
 15208   004F9E                     u4081:
 15209   004F9E  EFD9  F027         	goto	l4560
 15210   004FA2                     u4080:
 15211   004FA2  0E00               	movlw	0
 15212   004FA4  6E36               	movwf	___fleq@ff2^0,c
 15213   004FA6  0E00               	movlw	0
 15214   004FA8  6E37               	movwf	(___fleq@ff2+1)^0,c
 15215   004FAA  0E00               	movlw	0
 15216   004FAC  6E38               	movwf	(___fleq@ff2+2)^0,c
 15217   004FAE  0E00               	movlw	0
 15218   004FB0  6E39               	movwf	(___fleq@ff2+3)^0,c
 15219   004FB2                     l4560:
 15220   004FB2  5036               	movf	___fleq@ff2^0,w,c
 15221   004FB4  1832               	xorwf	___fleq@ff1^0,w,c
 15222   004FB6  E10F               	bnz	u4090
 15223   004FB8  5037               	movf	(___fleq@ff2+1)^0,w,c
 15224   004FBA  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 15225   004FBC  E10C               	bnz	u4090
 15226   004FBE  5038               	movf	(___fleq@ff2+2)^0,w,c
 15227   004FC0  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 15228   004FC2  E109               	bnz	u4090
 15229   004FC4  5039               	movf	(___fleq@ff2+3)^0,w,c
 15230   004FC6  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 15231   004FC8  B4D8               	btfsc	status,2,c
 15232   004FCA  EFE9  F027         	goto	u4091
 15233   004FCE  EFEB  F027         	goto	u4090
 15234   004FD2                     u4091:
 15235   004FD2  EFEE  F027         	goto	l4564
 15236   004FD6                     u4090:
 15237   004FD6  90D8               	bcf	status,0,c
 15238   004FD8  EFEF  F027         	goto	l1018
 15239   004FDC                     l4564:
 15240   004FDC  80D8               	bsf	status,0,c
 15241   004FDE                     l1018:
 15242   004FDE  0012               	return		;funcret
 15243   004FE0                     __end_of___fleq:
 15244                           	callstack 0
 15245                           
 15246 ;; *************** function ___fldiv *****************
 15247 ;; Defined at:
 15248 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;  b               4   49[COMRAM] unsigned char 
 15251 ;;  a               4   53[COMRAM] unsigned char 
 15252 ;; Auto vars:     Size  Location     Type
 15253 ;;  grs             4   68[COMRAM] unsigned long 
 15254 ;;  rem             4   61[COMRAM] unsigned long 
 15255 ;;  new_exp         2   66[COMRAM] short 
 15256 ;;  aexp            1   73[COMRAM] unsigned char 
 15257 ;;  bexp            1   72[COMRAM] unsigned char 
 15258 ;;  sign            1   65[COMRAM] unsigned char 
 15259 ;; Return value:  Size  Location     Type
 15260 ;;                  4   49[COMRAM] unsigned char 
 15261 ;; Registers used:
 15262 ;;		wreg, status,2, status,0
 15263 ;; Tracked objects:
 15264 ;;		On entry : 0/0
 15265 ;;		On exit  : 0/0
 15266 ;;		Unchanged: 0/0
 15267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15268 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15269 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15270 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15271 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15272 ;;Total ram usage:       25 bytes
 15273 ;; Hardware stack levels used: 1
 15274 ;; Hardware stack levels required when called: 1
 15275 ;; This function calls:
 15276 ;;		Nothing
 15277 ;; This function is called by:
 15278 ;;		_colour_rel
 15279 ;;		_Colour_decider
 15280 ;;		_efgtoa
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284                           	psect	text85
 15285   002B16                     __ptext85:
 15286                           	callstack 0
 15287   002B16                     ___fldiv:
 15288                           	callstack 25
 15289   002B16  5035               	movf	(___fldiv@b+3)^0,w,c
 15290   002B18  0B80               	andlw	128
 15291   002B1A  6E42               	movwf	___fldiv@sign^0,c
 15292   002B1C  5035               	movf	(___fldiv@b+3)^0,w,c
 15293   002B1E  2435               	addwf	(___fldiv@b+3)^0,w,c
 15294   002B20  6E49               	movwf	___fldiv@bexp^0,c
 15295   002B22  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15296   002B24  EF96  F015         	goto	u3651
 15297   002B28  EF98  F015         	goto	u3650
 15298   002B2C                     u3651:
 15299   002B2C  EF99  F015         	goto	l4284
 15300   002B30                     u3650:
 15301   002B30  8049               	bsf	___fldiv@bexp^0,0,c
 15302   002B32                     l4284:
 15303   002B32  5049               	movf	___fldiv@bexp^0,w,c
 15304   002B34  B4D8               	btfsc	status,2,c
 15305   002B36  EF9F  F015         	goto	u3661
 15306   002B3A  EFA1  F015         	goto	u3660
 15307   002B3E                     u3661:
 15308   002B3E  EFB6  F015         	goto	l4294
 15309   002B42                     u3660:
 15310   002B42  2849               	incf	___fldiv@bexp^0,w,c
 15311   002B44  A4D8               	btfss	status,2,c
 15312   002B46  EFA7  F015         	goto	u3671
 15313   002B4A  EFA9  F015         	goto	u3670
 15314   002B4E                     u3671:
 15315   002B4E  EFB1  F015         	goto	l4290
 15316   002B52                     u3670:
 15317   002B52  0E00               	movlw	0
 15318   002B54  6E32               	movwf	___fldiv@b^0,c
 15319   002B56  0E00               	movlw	0
 15320   002B58  6E33               	movwf	(___fldiv@b+1)^0,c
 15321   002B5A  0E00               	movlw	0
 15322   002B5C  6E34               	movwf	(___fldiv@b+2)^0,c
 15323   002B5E  0E00               	movlw	0
 15324   002B60  6E35               	movwf	(___fldiv@b+3)^0,c
 15325   002B62                     l4290:
 15326   002B62  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15327   002B64  0E00               	movlw	0
 15328   002B66  6E35               	movwf	(___fldiv@b+3)^0,c
 15329   002B68  EFBE  F015         	goto	l4296
 15330   002B6C                     l4294:
 15331   002B6C  0E00               	movlw	0
 15332   002B6E  6E32               	movwf	___fldiv@b^0,c
 15333   002B70  0E00               	movlw	0
 15334   002B72  6E33               	movwf	(___fldiv@b+1)^0,c
 15335   002B74  0E00               	movlw	0
 15336   002B76  6E34               	movwf	(___fldiv@b+2)^0,c
 15337   002B78  0E00               	movlw	0
 15338   002B7A  6E35               	movwf	(___fldiv@b+3)^0,c
 15339   002B7C                     l4296:
 15340   002B7C  5039               	movf	(___fldiv@a+3)^0,w,c
 15341   002B7E  0B80               	andlw	128
 15342   002B80  1A42               	xorwf	___fldiv@sign^0,f,c
 15343   002B82  5039               	movf	(___fldiv@a+3)^0,w,c
 15344   002B84  2439               	addwf	(___fldiv@a+3)^0,w,c
 15345   002B86  6E4A               	movwf	___fldiv@aexp^0,c
 15346   002B88  AE38               	btfss	(___fldiv@a+2)^0,7,c
 15347   002B8A  EFC9  F015         	goto	u3681
 15348   002B8E  EFCB  F015         	goto	u3680
 15349   002B92                     u3681:
 15350   002B92  EFCC  F015         	goto	l4304
 15351   002B96                     u3680:
 15352   002B96  804A               	bsf	___fldiv@aexp^0,0,c
 15353   002B98                     l4304:
 15354   002B98  504A               	movf	___fldiv@aexp^0,w,c
 15355   002B9A  B4D8               	btfsc	status,2,c
 15356   002B9C  EFD2  F015         	goto	u3691
 15357   002BA0  EFD4  F015         	goto	u3690
 15358   002BA4                     u3691:
 15359   002BA4  EFE9  F015         	goto	l4314
 15360   002BA8                     u3690:
 15361   002BA8  284A               	incf	___fldiv@aexp^0,w,c
 15362   002BAA  A4D8               	btfss	status,2,c
 15363   002BAC  EFDA  F015         	goto	u3701
 15364   002BB0  EFDC  F015         	goto	u3700
 15365   002BB4                     u3701:
 15366   002BB4  EFE4  F015         	goto	l4310
 15367   002BB8                     u3700:
 15368   002BB8  0E00               	movlw	0
 15369   002BBA  6E36               	movwf	___fldiv@a^0,c
 15370   002BBC  0E00               	movlw	0
 15371   002BBE  6E37               	movwf	(___fldiv@a+1)^0,c
 15372   002BC0  0E00               	movlw	0
 15373   002BC2  6E38               	movwf	(___fldiv@a+2)^0,c
 15374   002BC4  0E00               	movlw	0
 15375   002BC6  6E39               	movwf	(___fldiv@a+3)^0,c
 15376   002BC8                     l4310:
 15377   002BC8  8E38               	bsf	(___fldiv@a+2)^0,7,c
 15378   002BCA  0E00               	movlw	0
 15379   002BCC  6E39               	movwf	(___fldiv@a+3)^0,c
 15380   002BCE  EFF1  F015         	goto	l4316
 15381   002BD2                     l4314:
 15382   002BD2  0E00               	movlw	0
 15383   002BD4  6E36               	movwf	___fldiv@a^0,c
 15384   002BD6  0E00               	movlw	0
 15385   002BD8  6E37               	movwf	(___fldiv@a+1)^0,c
 15386   002BDA  0E00               	movlw	0
 15387   002BDC  6E38               	movwf	(___fldiv@a+2)^0,c
 15388   002BDE  0E00               	movlw	0
 15389   002BE0  6E39               	movwf	(___fldiv@a+3)^0,c
 15390   002BE2                     l4316:
 15391   002BE2  5036               	movf	___fldiv@a^0,w,c
 15392   002BE4  1037               	iorwf	(___fldiv@a+1)^0,w,c
 15393   002BE6  1038               	iorwf	(___fldiv@a+2)^0,w,c
 15394   002BE8  1039               	iorwf	(___fldiv@a+3)^0,w,c
 15395   002BEA  A4D8               	btfss	status,2,c
 15396   002BEC  EFFA  F015         	goto	u3711
 15397   002BF0  EFFC  F015         	goto	u3710
 15398   002BF4                     u3711:
 15399   002BF4  EF14  F016         	goto	l4328
 15400   002BF8                     u3710:
 15401   002BF8  0E00               	movlw	0
 15402   002BFA  6E32               	movwf	___fldiv@b^0,c
 15403   002BFC  0E00               	movlw	0
 15404   002BFE  6E33               	movwf	(___fldiv@b+1)^0,c
 15405   002C00  0E00               	movlw	0
 15406   002C02  6E34               	movwf	(___fldiv@b+2)^0,c
 15407   002C04  0E00               	movlw	0
 15408   002C06  6E35               	movwf	(___fldiv@b+3)^0,c
 15409   002C08  0E80               	movlw	128
 15410   002C0A  1234               	iorwf	(___fldiv@b+2)^0,f,c
 15411   002C0C  0E7F               	movlw	127
 15412   002C0E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15413   002C10                     l4322:
 15414   002C10  5042               	movf	___fldiv@sign^0,w,c
 15415   002C12  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15416   002C14  C032  F032         	movff	___fldiv@b,?___fldiv
 15417   002C18  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15418   002C1C  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15419   002C20  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15420   002C24  EF57  F017         	goto	l1341
 15421   002C28                     l4328:
 15422   002C28  5049               	movf	___fldiv@bexp^0,w,c
 15423   002C2A  A4D8               	btfss	status,2,c
 15424   002C2C  EF1A  F016         	goto	u3721
 15425   002C30  EF1C  F016         	goto	u3720
 15426   002C34                     u3721:
 15427   002C34  EF26  F016         	goto	l4336
 15428   002C38                     u3720:
 15429   002C38  0E00               	movlw	0
 15430   002C3A  6E32               	movwf	?___fldiv^0,c
 15431   002C3C  0E00               	movlw	0
 15432   002C3E  6E33               	movwf	(?___fldiv+1)^0,c
 15433   002C40  0E00               	movlw	0
 15434   002C42  6E34               	movwf	(?___fldiv+2)^0,c
 15435   002C44  0E00               	movlw	0
 15436   002C46  6E35               	movwf	(?___fldiv+3)^0,c
 15437   002C48  EF57  F017         	goto	l1341
 15438   002C4C                     l4336:
 15439   002C4C  504A               	movf	___fldiv@aexp^0,w,c
 15440   002C4E  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15441   002C52  6A3B               	clrf	(??___fldiv+1)^0,c
 15442   002C54  5E3A               	subwf	??___fldiv^0,f,c
 15443   002C56  0E00               	movlw	0
 15444   002C58  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15445   002C5A  0E7F               	movlw	127
 15446   002C5C  243A               	addwf	??___fldiv^0,w,c
 15447   002C5E  6E43               	movwf	___fldiv@new_exp^0,c
 15448   002C60  0E00               	movlw	0
 15449   002C62  203B               	addwfc	(??___fldiv+1)^0,w,c
 15450   002C64  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15451   002C66  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15452   002C6A  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15453   002C6E  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15454   002C72  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15455   002C76  0E00               	movlw	0
 15456   002C78  6E32               	movwf	___fldiv@b^0,c
 15457   002C7A  0E00               	movlw	0
 15458   002C7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15459   002C7E  0E00               	movlw	0
 15460   002C80  6E34               	movwf	(___fldiv@b+2)^0,c
 15461   002C82  0E00               	movlw	0
 15462   002C84  6E35               	movwf	(___fldiv@b+3)^0,c
 15463   002C86  0E00               	movlw	0
 15464   002C88  6E45               	movwf	___fldiv@grs^0,c
 15465   002C8A  0E00               	movlw	0
 15466   002C8C  6E46               	movwf	(___fldiv@grs+1)^0,c
 15467   002C8E  0E00               	movlw	0
 15468   002C90  6E47               	movwf	(___fldiv@grs+2)^0,c
 15469   002C92  0E00               	movlw	0
 15470   002C94  6E48               	movwf	(___fldiv@grs+3)^0,c
 15471   002C96  0E00               	movlw	0
 15472   002C98  6E4A               	movwf	___fldiv@aexp^0,c
 15473   002C9A  EF87  F016         	goto	l1343
 15474   002C9E                     l4346:
 15475   002C9E  504A               	movf	___fldiv@aexp^0,w,c
 15476   002CA0  B4D8               	btfsc	status,2,c
 15477   002CA2  EF55  F016         	goto	u3731
 15478   002CA6  EF57  F016         	goto	u3730
 15479   002CAA                     u3731:
 15480   002CAA  EF6E  F016         	goto	l4354
 15481   002CAE                     u3730:
 15482   002CAE  90D8               	bcf	status,0,c
 15483   002CB0  363E               	rlcf	___fldiv@rem^0,f,c
 15484   002CB2  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15485   002CB4  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15486   002CB6  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15487   002CB8  90D8               	bcf	status,0,c
 15488   002CBA  3632               	rlcf	___fldiv@b^0,f,c
 15489   002CBC  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15490   002CBE  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15491   002CC0  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15492   002CC2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15493   002CC4  EF66  F016         	goto	u3741
 15494   002CC8  EF68  F016         	goto	u3740
 15495   002CCC                     u3741:
 15496   002CCC  EF69  F016         	goto	l1346
 15497   002CD0                     u3740:
 15498   002CD0  8032               	bsf	___fldiv@b^0,0,c
 15499   002CD2                     l1346:
 15500   002CD2  90D8               	bcf	status,0,c
 15501   002CD4  3645               	rlcf	___fldiv@grs^0,f,c
 15502   002CD6  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15503   002CD8  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15504   002CDA  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15505   002CDC                     l4354:
 15506   002CDC  5036               	movf	___fldiv@a^0,w,c
 15507   002CDE  5C3E               	subwf	___fldiv@rem^0,w,c
 15508   002CE0  5037               	movf	(___fldiv@a+1)^0,w,c
 15509   002CE2  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15510   002CE4  5038               	movf	(___fldiv@a+2)^0,w,c
 15511   002CE6  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15512   002CE8  5039               	movf	(___fldiv@a+3)^0,w,c
 15513   002CEA  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15514   002CEC  A0D8               	btfss	status,0,c
 15515   002CEE  EF7B  F016         	goto	u3751
 15516   002CF2  EF7D  F016         	goto	u3750
 15517   002CF6                     u3751:
 15518   002CF6  EF86  F016         	goto	l4360
 15519   002CFA                     u3750:
 15520   002CFA  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15521   002CFC  5036               	movf	___fldiv@a^0,w,c
 15522   002CFE  5E3E               	subwf	___fldiv@rem^0,f,c
 15523   002D00  5037               	movf	(___fldiv@a+1)^0,w,c
 15524   002D02  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15525   002D04  5038               	movf	(___fldiv@a+2)^0,w,c
 15526   002D06  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15527   002D08  5039               	movf	(___fldiv@a+3)^0,w,c
 15528   002D0A  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15529   002D0C                     l4360:
 15530   002D0C  2A4A               	incf	___fldiv@aexp^0,f,c
 15531   002D0E                     l1343:
 15532   002D0E  0E19               	movlw	25
 15533   002D10  644A               	cpfsgt	___fldiv@aexp^0,c
 15534   002D12  EF8D  F016         	goto	u3761
 15535   002D16  EF8F  F016         	goto	u3760
 15536   002D1A                     u3761:
 15537   002D1A  EF4F  F016         	goto	l4346
 15538   002D1E                     u3760:
 15539   002D1E  503E               	movf	___fldiv@rem^0,w,c
 15540   002D20  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15541   002D22  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15542   002D24  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15543   002D26  B4D8               	btfsc	status,2,c
 15544   002D28  EF98  F016         	goto	u3771
 15545   002D2C  EF9A  F016         	goto	u3770
 15546   002D30                     u3771:
 15547   002D30  EFB2  F016         	goto	l4372
 15548   002D34                     u3770:
 15549   002D34  8045               	bsf	___fldiv@grs^0,0,c
 15550   002D36  EFB2  F016         	goto	l4372
 15551   002D3A                     l4366:
 15552   002D3A  90D8               	bcf	status,0,c
 15553   002D3C  3632               	rlcf	___fldiv@b^0,f,c
 15554   002D3E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15555   002D40  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15556   002D42  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15557   002D44  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15558   002D46  EFA7  F016         	goto	u3781
 15559   002D4A  EFA9  F016         	goto	u3780
 15560   002D4E                     u3781:
 15561   002D4E  EFAA  F016         	goto	l1352
 15562   002D52                     u3780:
 15563   002D52  8032               	bsf	___fldiv@b^0,0,c
 15564   002D54                     l1352:
 15565   002D54  90D8               	bcf	status,0,c
 15566   002D56  3645               	rlcf	___fldiv@grs^0,f,c
 15567   002D58  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15568   002D5A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15569   002D5C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15570   002D5E  0643               	decf	___fldiv@new_exp^0,f,c
 15571   002D60  A0D8               	btfss	status,0,c
 15572   002D62  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15573   002D64                     l4372:
 15574   002D64  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15575   002D66  EFB7  F016         	goto	u3791
 15576   002D6A  EFB9  F016         	goto	u3790
 15577   002D6E                     u3791:
 15578   002D6E  EF9D  F016         	goto	l4366
 15579   002D72                     u3790:
 15580   002D72  0E00               	movlw	0
 15581   002D74  6E4A               	movwf	___fldiv@aexp^0,c
 15582   002D76  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15583   002D78  EFC0  F016         	goto	u3801
 15584   002D7C  EFC2  F016         	goto	u3800
 15585   002D80                     u3801:
 15586   002D80  EFE6  F016         	goto	l1354
 15587   002D84                     u3800:
 15588   002D84  0EFF               	movlw	255
 15589   002D86  1445               	andwf	___fldiv@grs^0,w,c
 15590   002D88  6E3A               	movwf	??___fldiv^0,c
 15591   002D8A  0EFF               	movlw	255
 15592   002D8C  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15593   002D8E  6E3B               	movwf	(??___fldiv+1)^0,c
 15594   002D90  0EFF               	movlw	255
 15595   002D92  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15596   002D94  6E3C               	movwf	(??___fldiv+2)^0,c
 15597   002D96  0E7F               	movlw	127
 15598   002D98  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15599   002D9A  6E3D               	movwf	(??___fldiv+3)^0,c
 15600   002D9C  503A               	movf	??___fldiv^0,w,c
 15601   002D9E  103B               	iorwf	(??___fldiv+1)^0,w,c
 15602   002DA0  103C               	iorwf	(??___fldiv+2)^0,w,c
 15603   002DA2  103D               	iorwf	(??___fldiv+3)^0,w,c
 15604   002DA4  B4D8               	btfsc	status,2,c
 15605   002DA6  EFD7  F016         	goto	u3811
 15606   002DAA  EFD9  F016         	goto	u3810
 15607   002DAE                     u3811:
 15608   002DAE  EFDD  F016         	goto	l1355
 15609   002DB2                     u3810:
 15610   002DB2                     l4380:
 15611   002DB2  0E01               	movlw	1
 15612   002DB4  6E4A               	movwf	___fldiv@aexp^0,c
 15613   002DB6  EFE6  F016         	goto	l1354
 15614   002DBA                     l1355:
 15615   002DBA  A032               	btfss	___fldiv@b^0,0,c
 15616   002DBC  EFE2  F016         	goto	u3821
 15617   002DC0  EFE4  F016         	goto	u3820
 15618   002DC4                     u3821:
 15619   002DC4  EFE6  F016         	goto	l1354
 15620   002DC8                     u3820:
 15621   002DC8  EFD9  F016         	goto	l4380
 15622   002DCC                     l1354:
 15623   002DCC  504A               	movf	___fldiv@aexp^0,w,c
 15624   002DCE  B4D8               	btfsc	status,2,c
 15625   002DD0  EFEC  F016         	goto	u3831
 15626   002DD4  EFEE  F016         	goto	u3830
 15627   002DD8                     u3831:
 15628   002DD8  EF12  F017         	goto	l4392
 15629   002DDC                     u3830:
 15630   002DDC  0E01               	movlw	1
 15631   002DDE  2632               	addwf	___fldiv@b^0,f,c
 15632   002DE0  0E00               	movlw	0
 15633   002DE2  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15634   002DE4  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15635   002DE6  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15636   002DE8  A035               	btfss	(___fldiv@b+3)^0,0,c
 15637   002DEA  EFF9  F016         	goto	u3841
 15638   002DEE  EFFB  F016         	goto	u3840
 15639   002DF2                     u3841:
 15640   002DF2  EF12  F017         	goto	l4392
 15641   002DF6                     u3840:
 15642   002DF6  C032  F03A         	movff	___fldiv@b,??___fldiv
 15643   002DFA  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15644   002DFE  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15645   002E02  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15646   002E06  343D               	rlcf	(??___fldiv+3)^0,w,c
 15647   002E08  323D               	rrcf	(??___fldiv+3)^0,f,c
 15648   002E0A  323C               	rrcf	(??___fldiv+2)^0,f,c
 15649   002E0C  323B               	rrcf	(??___fldiv+1)^0,f,c
 15650   002E0E  323A               	rrcf	??___fldiv^0,f,c
 15651   002E10  C03A  F032         	movff	??___fldiv,___fldiv@b
 15652   002E14  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15653   002E18  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15654   002E1C  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15655   002E20  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15656   002E22  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15657   002E24                     l4392:
 15658   002E24  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15659   002E26  EF1D  F017         	goto	u3851
 15660   002E2A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15661   002E2C  E108               	bnz	u3850
 15662   002E2E  2843               	incf	___fldiv@new_exp^0,w,c
 15663   002E30  A0D8               	btfss	status,0,c
 15664   002E32  EF1D  F017         	goto	u3851
 15665   002E36  EF1F  F017         	goto	u3850
 15666   002E3A                     u3851:
 15667   002E3A  EF2A  F017         	goto	l4396
 15668   002E3E                     u3850:
 15669   002E3E  0E00               	movlw	0
 15670   002E40  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15671   002E42  6843               	setf	___fldiv@new_exp^0,c
 15672   002E44  0E00               	movlw	0
 15673   002E46  6E32               	movwf	___fldiv@b^0,c
 15674   002E48  0E00               	movlw	0
 15675   002E4A  6E33               	movwf	(___fldiv@b+1)^0,c
 15676   002E4C  0E00               	movlw	0
 15677   002E4E  6E34               	movwf	(___fldiv@b+2)^0,c
 15678   002E50  0E00               	movlw	0
 15679   002E52  6E35               	movwf	(___fldiv@b+3)^0,c
 15680   002E54                     l4396:
 15681   002E54  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15682   002E56  EF37  F017         	goto	u3860
 15683   002E5A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15684   002E5C  E106               	bnz	u3861
 15685   002E5E  0443               	decf	___fldiv@new_exp^0,w,c
 15686   002E60  B0D8               	btfsc	status,0,c
 15687   002E62  EF35  F017         	goto	u3861
 15688   002E66  EF37  F017         	goto	u3860
 15689   002E6A                     u3861:
 15690   002E6A  EF45  F017         	goto	l4400
 15691   002E6E                     u3860:
 15692   002E6E  0E00               	movlw	0
 15693   002E70  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15694   002E72  0E00               	movlw	0
 15695   002E74  6E43               	movwf	___fldiv@new_exp^0,c
 15696   002E76  0E00               	movlw	0
 15697   002E78  6E32               	movwf	___fldiv@b^0,c
 15698   002E7A  0E00               	movlw	0
 15699   002E7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15700   002E7E  0E00               	movlw	0
 15701   002E80  6E34               	movwf	(___fldiv@b+2)^0,c
 15702   002E82  0E00               	movlw	0
 15703   002E84  6E35               	movwf	(___fldiv@b+3)^0,c
 15704   002E86  0E00               	movlw	0
 15705   002E88  6E42               	movwf	___fldiv@sign^0,c
 15706   002E8A                     l4400:
 15707   002E8A  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15708   002E8E  A049               	btfss	___fldiv@bexp^0,0,c
 15709   002E90  EF4C  F017         	goto	u3871
 15710   002E94  EF4E  F017         	goto	u3870
 15711   002E98                     u3871:
 15712   002E98  EF51  F017         	goto	l4406
 15713   002E9C                     u3870:
 15714   002E9C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15715   002E9E  EF52  F017         	goto	l4408
 15716   002EA2                     l4406:
 15717   002EA2  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15718   002EA4                     l4408:
 15719   002EA4  90D8               	bcf	status,0,c
 15720   002EA6  3049               	rrcf	___fldiv@bexp^0,w,c
 15721   002EA8  6E35               	movwf	(___fldiv@b+3)^0,c
 15722   002EAA  EF08  F016         	goto	l4322
 15723   002EAE                     l1341:
 15724   002EAE  0012               	return		;funcret
 15725   002EB0                     __end_of___fldiv:
 15726                           	callstack 0
 15727                           
 15728 ;; *************** function _Buttons_init *****************
 15729 ;; Defined at:
 15730 ;;		line 43 in file "LED_buttons.c"
 15731 ;; Parameters:    Size  Location     Type
 15732 ;;		None
 15733 ;; Auto vars:     Size  Location     Type
 15734 ;;		None
 15735 ;; Return value:  Size  Location     Type
 15736 ;;                  1    wreg      void 
 15737 ;; Registers used:
 15738 ;;		None
 15739 ;; Tracked objects:
 15740 ;;		On entry : 0/0
 15741 ;;		On exit  : 0/0
 15742 ;;		Unchanged: 0/0
 15743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15748 ;;Total ram usage:        0 bytes
 15749 ;; Hardware stack levels used: 1
 15750 ;; Hardware stack levels required when called: 1
 15751 ;; This function calls:
 15752 ;;		Nothing
 15753 ;; This function is called by:
 15754 ;;		_main
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           	psect	text86
 15759   006232                     __ptext86:
 15760                           	callstack 0
 15761   006232                     _Buttons_init:
 15762                           	callstack 29
 15763   006232                     
 15764                           ;LED_buttons.c: 45:     TRISFbits.TRISF2 = 1;
 15765   006232  8486               	bsf	134,2,c	;volatile
 15766                           
 15767                           ;LED_buttons.c: 46:     ANSELFbits.ANSELF2=0;
 15768   006234  010E               	movlb	14	; () banked
 15769   006236  95B4               	bcf	180,2,b	;volatile
 15770                           
 15771                           ;LED_buttons.c: 47:     TRISFbits.TRISF3 = 1;
 15772   006238  8686               	bsf	134,3,c	;volatile
 15773                           
 15774                           ;LED_buttons.c: 48:     ANSELFbits.ANSELF3=0;
 15775   00623A  97B4               	bcf	180,3,b	;volatile
 15776   00623C                     
 15777                           ; BSR set to: 14
 15778   00623C  0012               	return		;funcret
 15779   00623E                     __end_of_Buttons_init:
 15780                           	callstack 0
 15781                           
 15782 ;; *************** function _HighISR *****************
 15783 ;; Defined at:
 15784 ;;		line 22 in file "interrupts.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;		None
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;		None
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  1    wreg      void 
 15791 ;; Registers used:
 15792 ;;		wreg, status,2
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15802 ;;Total ram usage:        0 bytes
 15803 ;; Hardware stack levels used: 1
 15804 ;; This function calls:
 15805 ;;		Nothing
 15806 ;; This function is called by:
 15807 ;;		Interrupt level 2
 15808 ;; This function uses a non-reentrant model
 15809 ;;
 15810                           
 15811                           	psect	intcode
 15812   000008                     __pintcode:
 15813                           	callstack 0
 15814   000008                     _HighISR:
 15815                           	callstack 22
 15816                           
 15817                           ; BSR set to: 14
 15818                           ;incstack = 0
 15819   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15820   00000A                     
 15821                           ;interrupts.c: 24:     if (PIR0bits.TMR0IF){
 15822   00000A  010E               	movlb	14	; () banked
 15823   00000C  AB33               	btfss	51,5,b	;volatile
 15824   00000E  EF0B  F000         	goto	i2u568_41
 15825   000012  EF0D  F000         	goto	i2u568_40
 15826   000016                     i2u568_41:
 15827   000016  EF18  F000         	goto	i2l227
 15828   00001A                     i2u568_40:
 15829   00001A                     
 15830                           ; BSR set to: 14
 15831                           ;interrupts.c: 25:         TMR0H=0;
 15832   00001A  0E00               	movlw	0
 15833   00001C  6ED4               	movwf	212,c	;volatile
 15834                           
 15835                           ;interrupts.c: 26:         TMR0L=0;
 15836   00001E  0E00               	movlw	0
 15837   000020  6ED3               	movwf	211,c	;volatile
 15838                           
 15839                           ;interrupts.c: 27:         lost_flag=1;
 15840   000022  0E00               	movlw	0
 15841   000024  0101               	movlb	1	; () banked
 15842   000026  6F15               	movwf	(_lost_flag+1)& (0+255),b
 15843   000028  0E01               	movlw	1
 15844   00002A  6F14               	movwf	_lost_flag& (0+255),b
 15845   00002C                     
 15846                           ; BSR set to: 1
 15847                           ;interrupts.c: 28:         PIR0bits.TMR0IF=0;
 15848   00002C  010E               	movlb	14	; () banked
 15849   00002E  9B33               	bcf	51,5,b	;volatile
 15850   000030                     i2l227:
 15851                           
 15852                           ; BSR set to: 14
 15853   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15854   000032  0011               	retfie		f
 15855   000034                     __end_of_HighISR:
 15856                           	callstack 0
 15857                           
 15858                           	psect	rparam
 15859   000000                     
 15860                           	psect	temp
 15861   00005F                     btemp:
 15862                           	callstack 0
 15863   00005F                     	ds	1
 15864   000000                     int$flags	set	btemp
 15865   000000                     wtemp8	set	btemp+1
 15866   000000                     ttemp5	set	btemp+1
 15867   000000                     ttemp6	set	btemp+4
 15868   000000                     ttemp7	set	btemp+8
 15869                           
 15870                           	psect	idloc
 15871                           
 15872                           ;Config register IDLOC0 @ 0x200000
 15873                           ;	unspecified, using default values
 15874   200000                     	org	2097152
 15875   200000  0FFF               	dw	4095
 15876                           
 15877                           ;Config register IDLOC1 @ 0x200002
 15878                           ;	unspecified, using default values
 15879   200002                     	org	2097154
 15880   200002  0FFF               	dw	4095
 15881                           
 15882                           ;Config register IDLOC2 @ 0x200004
 15883                           ;	unspecified, using default values
 15884   200004                     	org	2097156
 15885   200004  0FFF               	dw	4095
 15886                           
 15887                           ;Config register IDLOC3 @ 0x200006
 15888                           ;	unspecified, using default values
 15889   200006                     	org	2097158
 15890   200006  0FFF               	dw	4095
 15891                           
 15892                           ;Config register IDLOC4 @ 0x200008
 15893                           ;	unspecified, using default values
 15894   200008                     	org	2097160
 15895   200008  0FFF               	dw	4095
 15896                           
 15897                           ;Config register IDLOC5 @ 0x20000A
 15898                           ;	unspecified, using default values
 15899   20000A                     	org	2097162
 15900   20000A  0FFF               	dw	4095
 15901                           
 15902                           ;Config register IDLOC6 @ 0x20000C
 15903                           ;	unspecified, using default values
 15904   20000C                     	org	2097164
 15905   20000C  0FFF               	dw	4095
 15906                           
 15907                           ;Config register IDLOC7 @ 0x20000E
 15908                           ;	unspecified, using default values
 15909   20000E                     	org	2097166
 15910   20000E  0FFF               	dw	4095
 15911                           
 15912                           	psect	config
 15913                           
 15914                           ;Config register CONFIG1L @ 0x300000
 15915                           ;	External Oscillator mode Selection bits
 15916                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15917                           ;	Power-up default value for COSC bits
 15918                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15919   300000                     	org	3145728
 15920   300000  AA                 	db	170
 15921                           
 15922                           ;Config register CONFIG1H @ 0x300001
 15923                           ;	unspecified, using default values
 15924                           ;	Clock Out Enable bit
 15925                           ;	CLKOUTEN = 0x1, unprogrammed default
 15926                           ;	Clock Switch Enable bit
 15927                           ;	CSWEN = 0x1, unprogrammed default
 15928                           ;	Fail-Safe Clock Monitor Enable bit
 15929                           ;	FCMEN = 0x1, unprogrammed default
 15930   300001                     	org	3145729
 15931   300001  FF                 	db	255
 15932                           
 15933                           ;Config register CONFIG2L @ 0x300002
 15934                           ;	unspecified, using default values
 15935                           ;	Master Clear Enable bit
 15936                           ;	MCLRE = 0x1, unprogrammed default
 15937                           ;	Power-up Timer Enable bit
 15938                           ;	PWRTE = 0x1, unprogrammed default
 15939                           ;	Low-power BOR enable bit
 15940                           ;	LPBOREN = 0x1, unprogrammed default
 15941                           ;	Brown-out Reset Enable bits
 15942                           ;	BOREN = 0x3, unprogrammed default
 15943   300002                     	org	3145730
 15944   300002  FF                 	db	255
 15945                           
 15946                           ;Config register CONFIG2H @ 0x300003
 15947                           ;	unspecified, using default values
 15948                           ;	Brown Out Reset Voltage selection bits
 15949                           ;	BORV = 0x3, unprogrammed default
 15950                           ;	ZCD Disable bit
 15951                           ;	ZCD = 0x1, unprogrammed default
 15952                           ;	PPSLOCK bit One-Way Set Enable bit
 15953                           ;	PPS1WAY = 0x1, unprogrammed default
 15954                           ;	Stack Full/Underflow Reset Enable bit
 15955                           ;	STVREN = 0x1, unprogrammed default
 15956                           ;	Debugger Enable bit
 15957                           ;	DEBUG = 0x1, unprogrammed default
 15958                           ;	Extended Instruction Set Enable bit
 15959                           ;	XINST = 0x1, unprogrammed default
 15960   300003                     	org	3145731
 15961   300003  FF                 	db	255
 15962                           
 15963                           ;Config register CONFIG3L @ 0x300004
 15964                           ;	WDT Period Select bits
 15965                           ;	WDTCPS = 0x1F, unprogrammed default
 15966                           ;	WDT operating mode
 15967                           ;	WDTE = OFF, WDT Disabled
 15968   300004                     	org	3145732
 15969   300004  9F                 	db	159
 15970                           
 15971                           ;Config register CONFIG3H @ 0x300005
 15972                           ;	unspecified, using default values
 15973                           ;	WDT Window Select bits
 15974                           ;	WDTCWS = 0x7, unprogrammed default
 15975                           ;	WDT input clock selector
 15976                           ;	WDTCCS = 0x7, unprogrammed default
 15977   300005                     	org	3145733
 15978   300005  FF                 	db	255
 15979                           
 15980                           ;Config register CONFIG4L @ 0x300006
 15981                           ;	unspecified, using default values
 15982                           ;	Write Protection Block 0
 15983                           ;	WRT0 = 0x1, unprogrammed default
 15984                           ;	Write Protection Block 1
 15985                           ;	WRT1 = 0x1, unprogrammed default
 15986                           ;	Write Protection Block 2
 15987                           ;	WRT2 = 0x1, unprogrammed default
 15988                           ;	Write Protection Block 3
 15989                           ;	WRT3 = 0x1, unprogrammed default
 15990                           ;	Write Protection Block 3
 15991                           ;	WRT4 = 0x1, unprogrammed default
 15992                           ;	Write Protection Block 3
 15993                           ;	WRT5 = 0x1, unprogrammed default
 15994                           ;	Write Protection Block 3
 15995                           ;	WRT6 = 0x1, unprogrammed default
 15996                           ;	Write Protection Block 3
 15997                           ;	WRT7 = 0x1, unprogrammed default
 15998   300006                     	org	3145734
 15999   300006  FF                 	db	255
 16000                           
 16001                           ;Config register CONFIG4H @ 0x300007
 16002                           ;	unspecified, using default values
 16003                           ;	Configuration Register Write Protection bit
 16004                           ;	WRTC = 0x1, unprogrammed default
 16005                           ;	Boot Block Write Protection bit
 16006                           ;	WRTB = 0x1, unprogrammed default
 16007                           ;	Data EEPROM Write Protection bit
 16008                           ;	WRTD = 0x1, unprogrammed default
 16009                           ;	Scanner Enable bit
 16010                           ;	SCANE = 0x1, unprogrammed default
 16011                           ;	Low Voltage Programming Enable bit
 16012                           ;	LVP = 0x1, unprogrammed default
 16013   300007                     	org	3145735
 16014   300007  FF                 	db	255
 16015                           
 16016                           ;Config register CONFIG5L @ 0x300008
 16017                           ;	unspecified, using default values
 16018                           ;	UserNVM Program Memory Code Protection bit
 16019                           ;	CP = 0x1, unprogrammed default
 16020                           ;	DataNVM Memory Code Protection bit
 16021                           ;	CPD = 0x1, unprogrammed default
 16022   300008                     	org	3145736
 16023   300008  FF                 	db	255
 16024                           
 16025                           ;Config register CONFIG5H @ 0x300009
 16026                           ;	unspecified, using default values
 16027   300009                     	org	3145737
 16028   300009  FF                 	db	255
 16029                           
 16030                           ;Config register CONFIG6L @ 0x30000A
 16031                           ;	unspecified, using default values
 16032                           ;	Table Read Protection Block 0
 16033                           ;	EBTR0 = 0x1, unprogrammed default
 16034                           ;	Table Read Protection Block 1
 16035                           ;	EBTR1 = 0x1, unprogrammed default
 16036                           ;	Table Read Protection Block 2
 16037                           ;	EBTR2 = 0x1, unprogrammed default
 16038                           ;	Table Read Protection Block 3
 16039                           ;	EBTR3 = 0x1, unprogrammed default
 16040                           ;	Table Read Protection Block 4
 16041                           ;	EBTR4 = 0x1, unprogrammed default
 16042                           ;	Table Read Protection Block 5
 16043                           ;	EBTR5 = 0x1, unprogrammed default
 16044                           ;	Table Read Protection Block 6
 16045                           ;	EBTR6 = 0x1, unprogrammed default
 16046                           ;	Table Read Protection Block 7
 16047                           ;	EBTR7 = 0x1, unprogrammed default
 16048   30000A                     	org	3145738
 16049   30000A  FF                 	db	255
 16050                           
 16051                           ;Config register CONFIG6H @ 0x30000B
 16052                           ;	unspecified, using default values
 16053                           ;	Boot Block Table Read Protection bit
 16054                           ;	EBTRB = 0x1, unprogrammed default
 16055   30000B                     	org	3145739
 16056   30000B  FF                 	db	255
 16057                           tosu	equ	0xFFF
 16058                           tosh	equ	0xFFE
 16059                           tosl	equ	0xFFD
 16060                           stkptr	equ	0xFFC
 16061                           pclatu	equ	0xFFB
 16062                           pclath	equ	0xFFA
 16063                           pcl	equ	0xFF9
 16064                           tblptru	equ	0xFF8
 16065                           tblptrh	equ	0xFF7
 16066                           tblptrl	equ	0xFF6
 16067                           tablat	equ	0xFF5
 16068                           prodh	equ	0xFF4
 16069                           prodl	equ	0xFF3
 16070                           indf0	equ	0xFEF
 16071                           postinc0	equ	0xFEE
 16072                           postdec0	equ	0xFED
 16073                           preinc0	equ	0xFEC
 16074                           plusw0	equ	0xFEB
 16075                           fsr0h	equ	0xFEA
 16076                           fsr0l	equ	0xFE9
 16077                           wreg	equ	0xFE8
 16078                           indf1	equ	0xFE7
 16079                           postinc1	equ	0xFE6
 16080                           postdec1	equ	0xFE5
 16081                           preinc1	equ	0xFE4
 16082                           plusw1	equ	0xFE3
 16083                           fsr1h	equ	0xFE2
 16084                           fsr1l	equ	0xFE1
 16085                           bsr	equ	0xFE0
 16086                           indf2	equ	0xFDF
 16087                           postinc2	equ	0xFDE
 16088                           postdec2	equ	0xFDD
 16089                           preinc2	equ	0xFDC
 16090                           plusw2	equ	0xFDB
 16091                           fsr2h	equ	0xFDA
 16092                           fsr2l	equ	0xFD9
 16093                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        10
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     152
    BANK1           256    102     220
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseLightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseLightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseOrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseOrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2910$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2826$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2826$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Backhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Backhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    quaterForward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    quaterForward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    homeReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    homeReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _colour_move->_go_Home
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_RedMove
    _go_Home->_ReverseLightBlueMove
    _go_Home->_ReverseOrangeMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _homeReverse->_fullSpeedBack
    _homeReverse->_stop
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _ReverseOrangeMove->_reverseDetect
    _ReverseOrangeMove->_turnLeft45
    _ReverseLightBlueMove->_reverseDetect
    _ReverseLightBlueMove->_turnRight45
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_Backhalfblock
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _Backhalfblock->_fullSpeedBack
    _Backhalfblock->_stop
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _OrangeMove->_quaterForward
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _LightBlueMove->_quaterForward
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _quaterForward->_fullSpeedAhead
    _quaterForward->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0  620936
                                            113 BANK0      2     2      0
                                              0 BANK1    102   102      0
                       _Buttons_init
                     _Colour_decider
                   _Forwardhalfblock
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _color_click_init
                        _colour_move
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9657
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35323
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34968
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34615
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28769
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _colour_move                                          2     0      2  357556
                                             44 COMRAM     2     0      2
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                            _go_Home
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  174719
                                             35 COMRAM     9     5      4
                      _Backhalfblock
                           _BlueMove
                          _GreenMove
                            _RedMove
               _ReverseLightBlueMove
                  _ReverseOrangeMove
                        _ReversePink
                      _ReverseYellow
                        _homeReverse
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _homeReverse                                          6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7202
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _ReverseOrangeMove                                    4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReverseLightBlueMove                                 4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   26645
                                             31 COMRAM     4     0      4
                      _Backhalfblock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _Backhalfblock                                        6     2      4    7810
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _YellowMove                                           4     0      4   25581
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _RetryMove                                            6     2      4   15924
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (2) _PinkMove                                             4     0      4   25581
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _reverseOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   25733
                                             31 COMRAM     4     0      4
                      _quaterForward
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9505
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   25733
                                             31 COMRAM     4     0      4
                      _quaterForward
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9505
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    8874
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _quaterForward                                        6     2      4    7202
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    7050
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3937
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2917
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23353
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3702
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _Buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_init
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _stop
       _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_move
     _BlueMove
       _Backhalfblock
         _fullSpeedBack
           _setMotorPWM
         _stop
       _reverseDetect
         _fullSpeedBack
         _stop
       _turnRight45
         _TurnDelay
         _stop
         _turnRight
           _setMotorPWM
     _GreenMove
       _reverseDetect
       _turnLeft45
         _TurnDelay
         _stop
         _turnLeft
           _setMotorPWM
     _LightBlueMove
       _quaterForward
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _OrangeMove
       _quaterForward
       _reverseDetect
       _turnRight45
     _PinkMove
       _reverseDetect
       _reverseOneBlock
         _fullSpeedBack
         _stop
       _turnLeft45
     _RedMove
       _reverseDetect
       _turnRight45
     _RetryMove
       _fullSpeedAhead
       _reverseDetect
       _stop
     _YellowMove
       _reverseDetect
       _reverseOneBlock
       _turnRight45
     _go_Home
       _Backhalfblock
       _BlueMove
       _GreenMove
       _RedMove
       _ReverseLightBlueMove
         _reverseDetect
         _turnRight45
       _ReverseOrangeMove
         _reverseDetect
         _turnLeft45
       _ReversePink
         _ForwardOneBlock
           _fullSpeedAhead
           _stop
         _reverseDetect
         _turnLeft45
       _ReverseYellow
         _ForwardOneBlock
         _reverseDetect
         _turnRight45
       _homeReverse
         _fullSpeedBack
         _stop
       _stop
       _timed_forward
         _delayed_ms
         _setMotorPWM
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 16 02:06:14 2023

               _color_read_Red 5C88                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5C38                   ___fldiv@sign 0042                _color_read_Blue 5D28  
                           l52 61C2                             l61 5D26                             l70 31DC  
                           l55 5C86                             l80 222A                             l64 5D76  
                           l49 5BE6                             l58 5CD6                             l67 578E  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 434A  
             _color_read_Green 5CD8                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 6218                            l132 612E                            l221 6230  
                          l141 625A                            l150 6224                            l206 6104  
                          l135 6130                            l144 6246                            l153 5F72  
                          l138 6156                            l330 3866                            l147 6250  
                          l430 379A                            l346 3A8A                            l371 617C  
                          l436 37C2                            l508 3F82                            l516 3F82  
                          l188 6200                            l701 4E8A                            l197 6204  
                          l374 623C                            l622 5256                            l606 511A  
                          l614 507C                            l630 4F34                            l711 4368  
                          l704 5A9E                            l641 60BA                            l721 44A4  
                          l713 43BE                            l650 5E62                            l722 44DA  
                          l714 4418                            l707 5AF0                            l723 44F4  
                          l715 4488                            l644 60D4                            l716 4450  
                          l653 5842                            l638 51B8                            l662 58F4  
                          l750 5730                            l647 5E14                            l671 57E8  
                          l592 47E8                            l680 5450                            l656 5DC6  
                          l665 589C                            l753 6088                            l585 52DE  
                          l746 61E2                            l674 5FF0                            l659 594C  
                          l683 5B42                            l668 59A4                            l692 56CE  
                          l756 609E                            l677 602E                            l598 535C  
                          l686 5B94                            l759 61A2                            l695 559C  
                          l689 5668                            l873 467C                            l698 4DD4  
                          l886 494C                 ?_quaterForward 001A                            _abs 5F74  
                          _pad 535E                            _rel 014C                   ?_colour_move 002D  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           l1024 4B10  
                         l1033 6066                           l1018 4FDE                           ?_abs 0013  
                         l1029 4B56                           l1304 2534                           l1056 4A52  
                         l1313 2604                           l1314 25F2                           l1250 54BC  
                         l1341 2EAE                           l1421 4284                           l1414 41EC  
                         l1343 2D0E                           l1503 1836                           l1352 2D54  
                         l4000 23DC                           l1600 40D8                           l1329 5EA8  
                         l1417 4348                           l1257 54C4                           l1354 2DCC  
                         l1346 2CD2                           l4010 2406                           l4002 23E8  
                         l1506 11D0                           l1355 2DBA                           l1611 5602  
                         l1380 29A6                           l4100 26BC                           l4020 245C  
                         l4012 2428                           l4004 23EC                           l1428 42E0  
                         l1508 1016                           l1373 27B0                           l1437 5A4C  
                         l1390 2AD6                           l1382 2A1E                           l4110 26DA  
                         l4102 26C2                           l4030 2496                           l4022 246A  
                         l4014 2438                           l4006 23FA                           l1383 2A0C  
                         l1287 241A                           l1551 34E2                           l4104 26C4  
                         l4040 2502                           l4032 2498                           l4024 2478  
                         l1296 26EA                           l4008 23FC                           l1288 2408  
                         l4200 44FA                           l1640 6266                           l4120 5F10  
                         l1480 3B22                           l1608 55F2                           l5000 165A  
                         l1536 1618                           l1377 2B14                           l1289 23CE  
                         l1473 53D6                           l1481 3B68                           l1617 5C36  
                         l4106 26CA                           l4050 255A                           l4042 2504  
                         l4034 24A2                           l4026 2484                           l4018 244C  
                         l4130 520E                           l4122 51BA                           l4210 455A  
                         l4202 4508                           l4114 5EEE                           l5010 168C  
                         l5002 166A                           l4300 2B88                           l4108 26D8  
                         l4060 2588                           l4044 2514                           l4028 2488  
                         l4036 24A8                           l4124 51DE                           l4132 5226  
                         l4140 52FC                           l5100 4D20                           l4220 45A4  
                         l4212 455E                           l4204 4528                           l4116 5EFA  
                         l1492 3D0A                           l5020 1734                           l5012 169E  
                         l5004 166E                           l1629 4D1E                           l1637 5F30  
                         l1469 5380                           l1573 59FA                           l4310 2BC8  
                         l4302 2B96                           l4062 2596                           l4054 256E  
                         l4070 25B4                           l4038 24CE                           l4046 2524  
                         l4134 523E                           l4126 51F6                           l4142 5308  
                         l4150 507E                           l5110 5AA0                           l5102 5D78  
                         l4230 4614                           l4222 45B2                           l4214 456A  
                         l4206 452C                           l4118 5F0C                           l1478 3B1A  
                         l1646 5EEC                           l5030 1782                           l5022 173C  
                         l5014 16A2                           l5006 1674                           l1591 5FB2  
                         l1583 4C54                           l4400 2E8A                           l4320 2C08  
                         l4312 2BCA                           l4304 2B98                           l4064 259E  
                         l4056 2578                           l4048 254A                           l4072 25C2  
                         l4128 5202                           l4144 5314                           l4136 52E0  
                         l5120 594E                           l4152 50A2                           l4160 50EA  
                         l5112 4DD6                           l5104 5D8C                           l4232 4626  
                         l4224 45C4                           l4216 4588                           l4208 453A  
                         l5040 17F8                           l5032 1792                           l5016 16A8  
                         l5008 167A                           l5024 1740                           l4402 2E8E  
                         l4330 2C38                           l4322 2C10                           l4306 2BA8  
                         l4314 2BD2                           l4082 2614                           l4090 266A  
                         l4074 25C6                           l4066 25A2                           l4058 2586  
                         l4138 52E4                           l4146 532C                           l5210 6110  
                         l5050 6256                           l5122 5962                           l4162 5102  
                         l4154 50BA                           l4170 5028                           l5114 58F6  
                         l5106 5D9A                           l4226 45F2                           l4218 4590  
                         l4234 462C                           l4250 4820                           l4242 47EA  
                         l5042 180E                           l5034 17C2                           l5026 175E  
                         l5018 1700                           l5130 3214                           l4404 2E9C  
                         l4340 2C76                           l4332 2C38                           l4324 2C14  
                         l4316 2BE2                           l4308 2BB8                           l4500 2996  
                         l4420 2706                           l4092 267A                           l4084 2620  
                         l4076 25D4                           l4068 25B2                           l4148 5344  
                         l5212 6116                           l5052 621C                           l5220 61A6  
                         l5124 5978                           l4180 5140                           l4156 50C6  
                         l4172 5034                           l4164 4FE0                           l5116 590A  
                         l5300 5AF2                           l5108 5FB4                           l5060 623E  
                         l4236 463C                           l4228 4612                           l4260 4888  
                         l4252 482E                           l4244 47EE                           l1588 5FAA  
                         l5044 1816                           l5036 17D0                           l5028 177A  
                         l5140 3276                           l5132 3222                           l1597 4194  
                         l4406 2EA2                           l4350 2CC2                           l4342 2C86  
                         l4318 2BF8                           l4510 29D6                           l4502 29A4  
                         l4430 273E                           l4422 2708                           l4094 268A  
                         l4086 262E                           l4078 25EA                           l5214 6118  
                         l5054 6220                           l4190 51A0                           l4182 5158  
                         l4158 50D2                           l5302 566A                           l4166 5004  
                         l4174 504C                           l5118 5920                           l5310 5588  
                         l5070 5F48                           l5062 6242                           l5230 5CCE  
                         l5222 5C38                           l4238 465C                           l4262 4896  
                         l4270 48FC                           l4254 484E                           l4246 47FC  
                         l5038 17E8                           l5150 3322                           l5142 32CC  
                         l5134 3226                           l5126 31DE                           l4408 2EA4  
                         l4360 2D0C                           l4352 2CD0                           l4344 2C96  
                         l4336 2C4C                           l4328 2C28                           l4280 2B22  
                         l4520 2A48                           l4512 2A04                           l4504 29B6  
                         l4440 276A                           l4432 274E                           l4424 2718  
                         l4416 26EC                           l4096 26AA                           l4088 2668  
                         l5320 4212                           l5312 4198                           l5216 611A  
                         l5208 6106                           l5048 6252                           l5056 6248  
                         l4184 5164                           l4192 60A0                           l4176 5064  
                         l4168 501C                           l5304 5B44                           l5080 4E8C  
                         l5072 5F6E                           l5064 5F34                           l5240 5D28  
                         l5224 5C7E                           l5400 5732                           l4272 490C  
                         l4264 48C4                           l4256 486C                           l4248 481C  
                         l4600 4964                           l5152 332A                           l5160 336C  
                         l5136 3236                           l5128 3206                           l4370 2D52  
                         l4362 2D1E                           l4354 2CDC                           l4346 2C9E  
                         l4338 2C66                           l4290 2B62                           l4282 2B30  
                         l4530 2ABE                           l4522 2A72                           l4506 29C4  
                         l4450 27C0                           l4442 277A                           l4434 2754  
                         l4426 2728                           l4418 26F8                           l4098 26AE  
                         l5330 426C                           l5314 41A8                           l5218 611C  
                         l5058 624C                           l4186 5170                           l4178 511C  
                         l4194 60A4                           l5306 5534                           l5082 4EB0  
                         l5090 4EF8                           l5250 34E4                           l5410 3078  
                         l5402 2EB0                           l5074 5F70                           l5066 5F38  
                         l5242 5D6E                           l5234 5CD8                           l4274 492C  
                         l4266 48E4                           l4258 4874                           l4610 49B4  
                         l5170 3422                           l5162 3390                           l5154 3332  
                         l5146 32FC                           l5138 3256                           l4380 2DB2  
                         l4364 2D34                           l4372 2D64                           l4356 2CFA  
                         l4348 2CAE                           l4292 2B64                           l4284 2B32  
                         l4532 2ADA                           l4540 2B00                           l4516 2A2E  
                         l4524 2A76                           l4508 29C8                           l4460 27FA  
                         l4452 27D0                           l4444 278A                           l4436 275A  
                         l4428 2738                           l5340 42D0                           l5332 426E  
                         l5324 4226                           l5316 41B6                           l5420 186E  
                         l3900 46EE                           l4188 5188                           l4196 60B4  
                         l5308 5570                           l5092 4F10                           l5084 4EC8  
                         l5260 3514                           l5252 34F8                           l5412 3110  
                         l5404 2F7C                           l5068 5F40                           l5236 5D1E  
                         l5228 5C88                           l4268 48F6                           l4620 49DE  
                         l4612 49B8                           l4604 4978                           l5172 3442  
                         l5164 33C4                           l5180 34A4                           l5148 330C  
                         l4390 2E20                           l4374 2D72                           l4366 2D3A  
                         l4358 2CFC                           l4286 2B42                           l4294 2B6C  
                         l4278 2B16                           l4542 2B04                           l4534 2AEA  
                         l4526 2A90                           l4518 2A3A                           l4470 284C  
                         l4462 2810                           l4446 279A                           l4438 2768  
                         l5350 4328                           l5342 42EE                           l5334 427A  
                         l5326 422E                           l5318 41FC                           l5510 1FC2  
                         l5422 189E                           l3910 47A8                           l3902 4702  
                         l5078 53D8                           l5094 4F28                           l5086 4ED4  
                         l5270 35EC                           l5262 3542                           l5254 34FA  
                         l5414 3144                           l5406 2FB0                           l5246 6204  
                         l4198 44F6                           l4630 4A06                           l4622 49E8  
                         l4614 49C6                           l4606 49A2                           l4710 414C  
                         l4702 408C                           l6054 334E                           l5158 333A  
                         ?_pad 0011                           l4384 2DDC                           l4392 2E24  
                         l4376 2D76                           l4368 2D44                           l4296 2B7C  
                         l4288 2B52                           l4560 4FB2                           l4552 4F36  
                         l4536 2AF8                           l4528 2AA4                           l4480 2892  
                         l4472 285A                           l4464 281C                           l4456 27E4  
                         l4448 27A0                           l3920 2258                           l3912 222C  
                         l5352 4336                           l5344 42F0                           l5336 42B6  
                         l5328 423A                           l5520 1FDA                           l5440 19F0  
                         l5432 1910                           l5424 18D2                           l5416 1838  
                         l3904 4706                           l5096 5FF2                           l5088 4EE0  
                         l5280 36C2                           l5272 3616                           l5264 356A  
                         l5256 3502                           l5408 3044                           l5600 526A  
                         l5248 6214                           l4800 3B7A                           l4632 4A12  
                         l4624 49F2                           l4608 49A4                           l4712 4174  
                         l4704 40C8                           l4720 5BFC                           l6056 340C  
                         l5168 33F8                           l5184 34B6                           l5360 59B2  
                         l4394 2E3E                           l4386 2DE8                           l4378 2D84  
                         l4298 2B82                           l4562 4FD6                           l4554 4F64  
                         l4570 4A82                           l4538 2AFA                           l4490 2900  
                         l4482 28AC                           l4474 2866                           l4466 2834  
                         l4458 27F0                           l3930 2292                           l3922 2268  
                         l3914 2238                           l4546 5E64                           l5354 4338  
                         l5346 42F4                           l5338 42C2                           l5522 200C  
                         l5530 204A                           l5506 1F4A                           l5442 1A22  
                         l5434 1962                           l5426 1906                           l5418 1862  
                         l3906 4748                           l4730 6130                           l5370 5B9A  
                         l5098 5A4E                           l5282 36EE                           l5274 3642  
                         l5290 379A                           l5266 3596                           l5610 528A  
                         l5602 526C                           l4650 53A0                           l4642 535E  
                         l4802 3B80                           l4810 3C72                           l4634 4A22  
                         l4714 4184                           l4706 40FC                           l4722 5C08  
                         l6058 3496                           l5178 3474                           l5362 59D0  
                         l4396 2E54                           l4388 2DF6                           l4564 4FDC  
                         l4556 4F74                           l4580 4AF0                           l4572 4A92  
                         l4492 292A                           l4484 28BC                           l4476 2876  
                         l4468 2840                           l3940 22C0                           l3932 2298  
                         l3924 2278                           l3916 2246                           l4548 5E74  
                         l5348 4318                           l5532 207C                           l5524 203E  
                         l5508 1F84                           l5516 1FCE                           l5460 1BA2  
                         l5452 1AA6                           l5444 1A28                           l5436 1994  
                         l3860 5452                           l3908 4764                           l4732 6140  
                         l5380 5BD2                           l5372 5BA4                           l4740 6068  
                         l5284 3718                           l5276 366C                           l5268 35C0  
                         l5620 52C6                           l5612 52AE                           l5604 526E  
                         l4652 53A4                           l4644 536C                           l4820 3CDA  
                         l4812 3C8C                           l4804 3C02                           l4636 4A32  
                         l4660 4B58                           l4708 4138                           l4724 5C0C  
                         l4900 10D0                           l5364 59F0                           l5700 5A0E  
                         l4398 2E6E                           l4558 4FA2                           l4582 4AFE  
                         l4574 4AC0                           l4494 2960                           l4486 28D8  
                         l4478 2882                           l3950 22F4                           l3942 22C2  
                         l3934 22AA                           l3926 227A                           l3918 2248  
                         l5534 20AE                           l5462 1BB4                           l5470 1D60  
                         l5454 1ABA                           l5446 1A44                           l5438 199C  
                         l3870 548A                           l3862 545A                           l3854 617E  
                         l5630 61CC                           l5390 5BDC                           l5382 5BD4  
                         l5374 5BB4                           l4750 5DE8                           l4734 5790  
                         l4742 6074                           l5286 3744                           l5278 3698  
                         l5294 37A4                           l5710 3D0C                           l5622 52D0  
                         l5614 52B8                           l5606 5270                           l4654 53C2  
                         l4646 5378                           l4822 3CEA                           l4814 3CAA  
                         l4806 3C08                           l4590 6030                           l4638 4A42  
                         l4662 4B78                           l4726 5C18                           l4718 5BE8  
                         l4902 110E                           l4830 0E54                           l5358 59A6  
                         l5702 5A16                           l4584 4B4E                           l4576 4AD0  
                         l4568 4A54                           l4496 296E                           l4488 28E4  
                         l3960 2330                           l3944 22D2                           l3952 22FC  
                         l3936 22AC                           l3928 2282                           l5560 21F0  
                         l5536 20EC                           l5544 2136                           l5472 1D92  
                         l5480 1DD0                           l5464 1C30                           l5456 1B5A  
                         l5448 1A9A                           l3880 54B6                           l3872 5490  
                         l3864 546C                           l3856 619A                           l5632 61D6  
                         l5392 5BDE                           l5384 5BD6                           l5376 5BBE  
                         l5368 5B96                           l4760 5E4A                           l4752 5DFC  
                         l4736 57A4                           l4744 6084                           l5296 37B8  
                         l5288 376E                           l5800 3F34                           l5720 3D4C  
                         l5712 3D1E                           l5624 52D2                           l5616 52BA  
                         l5608 5286                           l4656 5F74                           l4648 538C  
                         l4816 3CC4                           l4808 3C0E                           l4592 6046  
                         l4664 4BB6                           l4672 4BF6                           l4728 5C1C  
                         l4920 11FC                           l4904 1122                           l4912 119E  
                         l4840 0E9C                           l4832 0E62                           l5704 5A1E  
                         l5640 436A                           l4586 4B54                           l4578 4ADE  
                         l4498 298C                           l3970 2344                           l3962 2334  
                         l3954 230C                           l3946 22E2                           l3938 22B2  
                         l5562 2222                           l5546 2174                           l5538 212A  
                         l5482 1E02                           l5490 1E40                           l5474 1DC4  
                         l5466 1C8C                           l5458 1B6A                           l3874 54A6  
                         l3866 5474                           l5634 61E0                           l5394 5BE0  
                         l5386 5BD8                           l5378 5BC8                           l4762 57EA  
                         l4754 5E16                           l4746 5DC8                           l5298 5604  
                         l4738 57BC                           l4770 58B2                           l5802 3F4C  
                         l5730 3D8A                           l5714 3D32                           l5722 3D5A  
                         l5626 52DC                           l5618 52C4                           l4658 5F8E  
                         l3890 4CA2                           l3882 4C56                           l4818 3CD4  
                         l4594 6056                           l4674 4C08                           l4666 4BDE  
                         l4690 3F84                           l4682 5EAA                           l4930 1240  
                         l4922 1204                           l4914 11D8                           l4906 1156  
                         l4842 0EAC                           l4850 0ED4                           l4834 0E66  
                         l4826 0E3E                           l5706 5A3A                           l5650 43F8  
                         l5642 43C0                           l3980 2358                           l3972 2348  
                         l3964 2338                           l3956 231E                           l3948 22F2  
                         l5548 21B2                           l5492 1E72                           l5484 1E34  
                         l5468 1D08                           l3876 54AE                           l3868 547C  
                         l5628 61C4                           l5396 5BE2                           l5388 5BDA  
                         l4764 57FE                           l4756 5E2A                           l4748 5DDC  
                         l4772 58C8                           l5804 3F60                           l5740 3DCC  
                         l5724 3D6E                           l5716 3D36                           l5580 61FC  
                         l5572 61E4                           l3892 4CD8                           l3884 4C68  
                         l4780 3AD2                           l4668 4BEA                           l4692 3FA4  
                         l4684 5EBA                           l4940 1286                           l4932 1252  
                         l4924 1208                           l4916 11E8                           l4908 115E  
                         l4860 0F1E                           l4852 0EFA                           l4844 0EBC  
                         l4836 0E8A                           l4828 0E44                           l5660 4432  
                         l5652 4410                           l5644 43D8                           l5636 434A  
                         l5900 39AA                           l5820 37C8                           l3982 235C  
                         l3974 234C                           l3966 233C                           l3958 232C  
                         l3990 236C                           l5558 21BE                           l5494 1EA4  
                         l3878 54B0                           l5398 5BE4                           l4766 5816  
                         l4758 5E36                           l5806 3F64                           l5750 3E0E  
                         l5742 3DD0                           l5726 3D82                           l5734 3DA0  
                         l5718 3D3A                           l5582 61FE                           l5574 61EE  
                         l5590 60EC                           l3886 4C7A                           l4790 3B40  
                         l4782 3AF2                           l4774 3A8E                           l4598 494E  
                         l4678 4C4C                           l4694 3FFA                           l4686 559E  
                         l4950 139A                           l4942 12EA                           l4926 121A  
                         l4934 125A                           l4918 11F4                           l4870 0F86  
                         l4862 0F36                           l4854 0F0C                           l4846 0EC8  
                         l4838 0E94                           l5670 4482                           l5662 444A  
                         l5654 4412                           l5646 43E6                           l5638 434C  
                         l5902 39B2                           l5910 3A42                           l5830 37DC  
                         l5822 37CC                           l3992 2370                           l3984 2360  
                         l3976 2350                           l3968 2340                           l5496 1EDE  
                         l3896 467E                           l5592 6226                           l4768 589E  
                         l5808 3F6C                           l5760 3E40                           l5752 3E12  
                         l5736 3DB4                           l5728 3D86                           l5576 61F0  
                         l5584 60D6                           l3888 4C84                           l4792 3B50  
                         l4784 3B0E                           l4776 3AAE                           l4696 400E  
                         l4688 55BC                           l4960 1458                           l4952 13CE  
                         l4944 1342                           l4936 1262                           l4928 1228  
                         l4872 0F98                           l4864 0F40                           l4856 0F10  
                         l4848 0ED0                           l5680 44CC                           l5664 445E  
                         l5656 4426                           l5648 43F4                           l5672 4488  
                         l5912 3A54                           l5904 39D0                           l5840 37FA  
                         l5832 37E8                           l5824 37D0                           l3994 239A  
                         l3986 2364                           l3978 2354                           l5498 1F1C  
                         l3898 469A                           l5594 6158                           l5762 3E54  
                         l5770 3E72                           l5754 3E16                           l5738 3DC8  
                         l5746 3DE6                           l5690 5714                           l5578 61FA  
                         l5586 60DA                           l4794 3B5C                           l4786 3B2A  
                         l4778 3AC2                           l4698 401C                           l4970 152C  
                         l4962 1468                           l4954 1400                           l4946 1376  
                         l4938 1272                           l4874 0F9C                           l4858 0F16  
                         l5682 44DC                           l5674 4496                           l5666 4468  
                         l5658 4430                           l5914 3A58                           l5906 3A26  
                         l5850 381A                           l5842 3802                           l5834 37EC  
                         l5826 37D4                           l5818 37C4                           l5596 6232  
                         l3996 23B6                           l3988 2368                           l5692 5844  
                         l5772 3E86                           l5764 3E58                           l5748 3DFA  
                         l5684 56D0                           l5588 60E8                           l4796 3B64  
                         l4788 3B3A                           l4980 1562                           l4972 1540  
                         l4964 149C                           l4956 1416                           l4948 137C  
                         l4892 1026                           l4876 0FA2                           l4868 0F60  
                         l5676 44A6                           l5668 446A                           l5908 3A32  
                         l5860 384A                           l5852 381E                           l5844 380A  
                         l5836 37F2                           l5828 37D8                           l3998 23C6  
                         l5694 5858                           l5790 3EE8                           l5774 3E9A  
                         l5782 3EB8                           l5766 3E5C                           l5758 3E2C  
                         l5686 56D6                           l5598 5258                           l4798 3B70  
                         l4990 162A                           l4982 156A                           l4966 14F2  
                         l4974 1544                           l4958 1448                           l4894 102C  
                         l4878 0FAA                           l4886 0FC6                           l5678 44BE  
                         l5870 389C                           l5918 3A76                           l5862 384C  
                         l5854 3826                           l5846 3812                           l5838 37F6  
                         l5696 5870                           l5784 3ECC                           l5776 3E9E  
                         l5688 5708                           l4992 1638                           l4984 1576  
                         l4976 1554                           l4968 14F8                           l4896 1060  
                         l4888 0FE0                           l5880 38E2                           l5872 38B0  
                         l5864 3874                           l5856 382E                           l5848 3816  
                         l5786 3EE0                           l5794 3EFE                           l5778 3EA2  
                         l4994 1648                           l4986 15EE                           l4978 155C  
                         l4898 109E                           l5698 59FC                           l5890 3950  
                         l5882 38FA                           l5874 38BC                           l5866 388E  
                         l5858 3836                           l5796 3F12                           l5788 3EE4  
                         l4996 164C                           l4988 160E                           l5892 3964  
                         l5884 3912                           l5876 38DA                           l5868 3894  
                         l5798 3F18                           l4998 1652                           l5894 3980  
                         l5886 392A                           l5878 38DE                           l5896 399A  
                         l5888 3944                           l5898 39A2                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E34  
                         STR_5 0E38                           u3000 4764                           u3001 4760  
                         u3010 2246                           u3011 2242                           u3100 239A  
                         u3020 2258                           u3101 2396                           u3021 2254  
                         u3110 23B2                           u3030 2268                           u3111 23AC  
                         u3031 2264                           u4000 2A04                           u3200 2496  
                         u3120 23B4                           u3040 22AA                   _BAUD4CONbits 000EE9  
                         u4001 2A00                           u3201 2492                           u3041 22A6  
                         u4010 2A1A                           u3210 24CE                           u3130 23DC  
                         u3050 22C0                           u4011 2A16                           u3211 24CA  
                         u3131 23D8                           u3051 22BC                           u4100 4A82  
                         u4020 2A2E                           u3300 25EA                           u3220 2514  
                         u3140 23FA                           u3060 22D2                           u4101 4A7E  
                         u4021 2A2A                           u3301 25E6                           u3221 2510  
                         u3141 23F6                           u3061 22CE                           u4110 4AC0  
                         u4030 2A48                           u3310 2600                           u3230 254A  
                         u3150 241A                           u3070 22E2                           u4111 4ABC  
                         u4031 2A44                           u3311 25FC                           u3231 2546  
                         u3151 2416                           u3071 22DE                           u4120 4ADE  
                         u4040 2A90                           u3320 2614                           u3240 255A  
                         u3160 2428                           u3080 231E                           u5000 3510  
                         u3400 5F30                           u4200 4A02                           u4121 4ADA  
                         u4041 2A8C                           u3321 2610                           u3241 2556  
                         u3161 2424                           u3081 231A                           u5001 350C  
                         u3401 5F2C                           u4201 49FE                           u4130 4AFE  
                         u4050 2ABE                           u3330 262E                           u3250 2586  
                         u3170 2438                           u3090 232C                           u3410 523E  
                         u5010 356A                           u4210 4A22                           _T2PR 000FBC  
                         u4131 4AFA                           u4051 2ABA                           u3331 262A  
                         u3251 2582                           u3171 2434                           u3091 2328  
                         u3411 523A                           u5011 3566                           u4211 4A1E  
                         u4140 4B4E                           u4060 2AF8                           u3340 2668  
                         u3260 2596                           u3180 246A                           u5100 4212  
                         u3420 5256                           u3500 51B8                           u5020 35C0  
                         u4220 4A32                           u4141 4B4A                           u4061 2AF4  
                         u3341 2664                           u3261 2592                           u3181 2466  
                         u5101 420E                           u3421 5252                           u3501 51B4  
                         u5021 35BC                           u4221 4A2E                           u4070 4F64  
                         u3350 267A                           u3270 25B2                           u3190 2478  
                         u5110 4268                           u3430 5344                           u3510 60D4  
                         u5030 3616                           u4230 536C                           u4150 6046  
                         u4310 4C42                           u4071 4F60                           u3351 2676  
                         u3271 25AE                           u3191 2474                           u5111 4264  
                         u3431 5340                           u3511 60D0                           u5031 3612  
                         u4231 5368                           u4151 6042                           u4311 4C3C  
                         u4080 4FA2                           u3360 268A                           u3280 25C2  
                         u5120 42B2                           u5200 1962                           u3440 535C  
                         u5040 366C                           u3520 4508                           u3600 482E  
                         u4240 53C2                           u4160 4964                           u4320 4C44  
                         u4400 40AC                           u4081 4F9E                           u3361 2686  
                         u3281 25BE                           u5121 42AE                           u5201 195E  
                         u3441 5358                           u5041 3668                           u3521 4504  
                         u3601 482A                           u4241 53BE                           u4161 4960  
                         u4305 4C1A                           u4090 4FD6                           u3370 26AA  
                         u3290 25D4                           u5130 42D0                           u5210 19F0  
                         u3450 5102                           u5050 36C2                           u3530 453A  
                         u3610 486C                           u4250 5F8E                           u4170 4998  
                         u4410 40C8                           u4330 5EEC                           u4091 4FD2  
                         u3371 26A6                           u3291 25D0                           u5131 42CC  
                         u5211 19EC                           u3451 50FE                           u5051 36BE  
                         u3531 4536                           u3611 4868                           u4251 5F8A  
                         u4411 40C4                           u4331 5EE8                           u3700 2BB8  
                         u3380 26BC                           u5140 42E0                           u5300 1E34  
                         u5220 1A44                           u3460 511A                           u5060 3718  
                         u3620 4896                           u4500 3AC0                           u4180 49C6  
                         u4260 4B98                           u4420 411C                           u4340 55BC  
                         u3701 2BB4                           u3381 26B8                           u5141 42DC  
                         u5301 1E30                           u5221 1A40                           u3461 5116  
                         u5061 3714                           u3541 4564                           u3621 4892  
                         u4181 49C2                           u4405 40A2                           u4341 55B8  
                         u3710 2BF8                           u3390 26D8                           u5150 42EE  
                         u5310 1E72                           u5230 1A9A                           u3470 5064  
                         u5070 376E                           u3550 4588                           u3630 48C4  
                         u4510 3AD2                           u4190 49DA                           u4270 4BB6  
                         u4430 4138                           u4350 3FCC                           u3711 2BF4  
                         u3391 26D4                           u5151 42EA                           u5311 1E6E  
                         u5231 1A96                           u3471 5060                           u6007 557A  
                         u5071 376A                           u3551 4584                           u3631 48C0  
                         u4511 3ACE                           u4191 49D6                           u4175 498E  
                         u4271 4BB2                           u4431 4134                           u3800 2D84  
                         u3720 2C38                           u5160 4328                           u5080 41A8  
                         u5400 207C                           u5320 1EA4                           u5240 1ABA  
                         u2920 546C                           u3480 507C                           u3560 45B2  
                         u3640 490C                           u4520 3B0E                           u4280 4BDE  
                         u4440 4174                           u4360 3FFA                           u4600 0EAC  
                         u3801 2D80                           u3721 2C34                           u5161 4324  
                         u5081 41A4                           u5401 2078                           u5321 1EA0  
                         u5241 1AB6                           u2921 5468                           u3481 5078  
                         u6017 5914                           u3561 45AE                           u3641 4908  
                         u4521 3B0A                           u4281 4BDA                           u4265 4B8E  
                         u4441 4170                           u4425 4112                           u4361 3FF6  
                         u4601 0EA8                           u3810 2DB2                           u3730 2CAE  
                         u3650 2B30                           u5170 4336                           u5090 41B6  
                         u5410 20AE                           u5330 1EDE                           u5250 1B6A  
                         u2930 548A                           u3490 51A0                           u3570 45F2  
                         u4530 3B3A                           u4290 4C08                           u4370 401C  
                         u4450 5C36                           u4610 0EBC                           u3811 2DAE  
                         u3731 2CAA                           u3651 2B2C                           u5171 4332  
                         u5091 41B2                           u5411 20AA                           u5331 1EDA  
                         u5251 1B66                           u2931 5486                           u3491 519C  
                         u6107 517A                           u6027 593E                           u3571 45EE  
                         u4531 3B36                           u4291 4C04                           u4371 4018  
                         u4355 3FC2                           u4451 5C32                           u4611 0EB8  
                         u3820 2DC8                           u3740 2CD0                           u3660 2B42  
                         u3900 2728                           u5420 20EC                           u5340 1F1C  
                         u5260 1BB4                           u2940 54A6                           u4460 6140  
                         u3580 463C                           u4540 3B50                           u4700 119A  
                         u4620 0EFA                           u5180 59F0                           u5500 43F4  
                         u3821 2DC4                           u3741 2CCC                           u3661 2B3E  
                         u3901 2724                           u5421 20E8                           u5341 1F18  
                         u5261 1BB0                           u2941 54A2                           u4461 613C  
                         u6117 596C                           u6037 5E06                           u3581 4638  
                         u4541 3B4C                           u4701 1196                           u4621 0EF6  
                         u5181 59EC                           u5501 43F0                           u3830 2DDC  
                         u3750 2CFA                           u3670 2B52                           u3910 2768  
                         u5430 212A                           u5350 1F46                           u5270 1D92  
                         u4470 6156                           u3590 47FC                           u2950 4C68  
                         u4550 3C8C                           u4390 4088                           u4710 11D0  
                         u4630 0F0C                           u5510 4426                           u3831 2DD8  
                         u3751 2CF6                           u3671 2B4E                           u3911 2764  
                         u5431 2126                           u5351 1F42                           u5271 1D8E  
                         u5191 1868                           u4471 6152                           u6127 5996  
                         u6047 503E                           u3591 47F8                           u2951 4C64  
                         u4551 3C88                           u4391 4084                           u4711 11CC  
                         u4631 0F08                           u5511 4422                           u3840 2DF6  
                         u3760 2D1E                           u3680 2B96                           u3920 277A  
                         u5440 2174                           u5360 1F84                           u5280 1DC4  
                         u4480 609E                           u5600 3DB4                           u2960 4C7A  
                         u4560 3CAA                           u4800 14F2                           u4720 11E8  
                         u4640 0F86                           u5520 445E                           u3841 2DF2  
                         u3761 2D1A                           u3681 2B92                           u3921 2776  
                         u5441 2170                           u5361 1F80                           u5281 1DC0  
                         u6137 5BAA                           u6057 5E54                           u4481 609A  
                         u5601 3DB0                           u2961 4C76                           u4561 3CA6  
                         u4385 4030                           u4801 14EE                           u4721 11E4  
                         u4641 0F82                           u5521 445A                           u3850 2E3E  
                         u3770 2D34                           u3690 2BA8                           u3930 278A  
                         u5450 21B2                           u5370 1FC2                           u5290 1E02  
                         u5610 3DFA                           u2970 4CA2                           u4570 3CC4  
                         u4490 3ABE                           u4386 403A                           u4810 1540  
                         u4730 121A                           u4650 0F98                           u5530 4496  
                         u3851 2E3A                           u3771 2D30                           u3691 2BA4  
                         u3931 2786                           u5451 21AE                           u5371 1FBE  
                         u5291 1DFE                           u6147 5862                           u6067 50DC  
                         u5611 3DF6                           u2971 4C9E                           u4571 3CC0  
                         u4491 3AB8                           u4387 404A                           u4811 153C  
                         u4731 1216                           u4651 0F94                           u5531 4492  
                         u3860 2E6E                           u3780 2D52                           u3940 27C0  
                         u5460 21F0                           u5380 200C                           u5620 3E40  
                         u2980 4CD8                           u4580 3CD4                           u4900 17F8  
                         u4820 15EE                           u4740 1228                           u4660 1012  
                         u5540 44A4                           u5700 38DA                           u3861 2E6A  
                         u3781 2D4E                           u3941 27BC                           u5461 21EC  
                         u5381 2008                           u6157 588E                           u6077 60AA  
                         u5621 3E3C                           u2981 4CD4                           u4581 3CD0  
                         u4901 17F4                           u4821 15EA                           u4741 1224  
                         u4661 100E                           u5541 44A0                           u5701 38D6  
                         u3870 2E9C                           u3790 2D72                           u3950 27D0  
                         u5470 2222                           u5390 203E                           u2990 469A  
                         u5630 3E86                           u4910 5F5C                           u4830 162A  
                         u4750 1252                           u4670 109E                           u4590 0E62  
                         u5550 44CC                           u5710 38FA                           u3871 2E98  
                         u3791 2D6E                           u3951 27CC                           u5471 221E  
                         u5391 203A                           u2991 4696                           u6167 531E  
                         u6087 5808                           u5631 3E82                           u4911 5F54  
                         u4831 1626                           u4751 124E                           u4671 109A  
                         u4591 0E5E                           u5551 44C8                           u5711 38F6  
                         u3960 294A                           u3880 2706                           u5640 3ECC  
                         u5480 6104                           u4840 1638                           u4760 139A  
                         u4680 10D0                           u5560 44DA                           u5720 399A  
                         u3881 2702                           u6177 5218                           u6097 5834  
                         u5641 3EC8                           u5481 6100                           u4841 1634  
                         u4761 1396                           u4681 10CC                           u5561 44D6  
                         u5721 3996                           u3970 29A4                           u3890 2718  
                         u4930 4F10                           u5650 3F12                           u5570 5708  
                         u4850 168C                           u4770 1400                           u4690 110E  
                         u5490 43E6                           u5730 39D0                           u3971 29A0  
                         u3891 2714                           u4931 4F0C                           u5651 3F0E  
                         u5571 5704                           u4851 1688                           u4771 13FC  
                         u4691 110A                           u5491 43E2                           u5731 39CC  
                         u3980 29C4                           u4940 4F28                           u5660 3F34  
                         u5580 3D1E                           u4860 175E                           u4780 1448  
                         u5740 3A54                           u3981 29C0                           u3965 2940  
                         u4941 4F24                           u5661 3F30                           u5581 3D1A  
                         u4861 175A                           u4781 1444                           u5741 3A50  
                         u3990 29D6                           u5670 3F7E                           u5590 3D6E  
                         u4870 177A                           u4790 1458                           u4950 3206  
                         u5750 3A8A                           u3991 29D2                           u5671 3F7A  
                         u5591 3D6A                           u4871 1776                           u4791 1454  
                         u4951 3202                           u5751 3A86                           u4928 5F5E  
                         u4880 17E2                           u4960 3256                           u4881 17DC  
                         u4961 3252                           u4890 17E4                           u4970 3276  
                         u5690 3874                           u4971 3272                           u5907 44B0  
                         u5691 3870                           u5827 3858                           u4980 338C  
                         u4981 3388                           u5917 44E6                           u5837 3880  
                         u4990 6214                           u5927 4EEA                           u4991 6210  
                         u5847 3936                           u5937 607A                           u5857 4356  
                         u5947 5D92                           u5867 43CA                           u5957 5DB8  
                         u5877 4402                           u5967 58BC                           u5887 443C  
                         u5977 58E6                           u5897 4474                           u5987 57AE  
                         u5997 57DA                  _LightBlueMove 566A                           abs@a 0013  
                         _dbuf 02A0                           _labs 559E                           _main 37C4  
                         _dtoa 3A8E                           _prec 00E9                           _vals 016A  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 52E0                   ?_homeReverse 001A                  ___fpclassifyf 4B58  
                         prodh 000FF4                           prodl 000FF3                           start 0034  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 5CD8                __end_of_HighISR 0034  
       __end_of_color_read_lum 5C88                  _Backhalfblock 5790                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 5FF2  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 5DC8                _RunOneBlockTime 00F2               __end_of_LED_init 617E  
                ___fltol@sign1 0009                __end_of___aodiv 467E                          ?_labs 0001  
              __end_of___fladd 26EC                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 494E                __end_of___fldiv 2EB0                __end_of___flneg 6068  
              __end_of___flmul 2B16                __end_of___flsub 5EAA                __end_of___fltol 4A54  
                  colour_rel@B 0074                    colour_rel@G 0070                          ?_stop 0014  
                  colour_rel@L 0060                    colour_rel@R 006C                __end_of___lwdiv 54C6  
                        i2l227 0030                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 37C4        __end_of_sendCharSerial4 621A  
   __end_of_I2C_2_Master_Start 625C     __end_of_I2C_2_Master_Write 6226                   YellowMove@mL 0020  
                        _flags 00ED                   YellowMove@mR 0022                          _fputc 4C56  
                        _fputs 5EEE                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00F6                          _width 00E7  
                        _putch 6266                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
                ?_Buttons_init 0001                          plusw2 000FDB               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 5A4E  
               ?___fpclassifyf 0001         ??_ReverseLightBlueMove 0024        __end_of_color_read_Blue 5D78  
        _I2C_2_Master_RepStart 623E               __end_of_BlueMove 5452                 ?_Backhalfblock 001A  
                   PinkMove@mL 0020                     PinkMove@mR 0022                ?_color_read_Red 0005  
              ?_color_read_lum 0005                __initialization 54C6        __end_of_turnCalibration 44F6  
              _reverseOneBlock 58F6                   __end_of_labs 5604                   __end_of_main 3A8E  
                 __end_of_dtoa 3D0C                   __end_of_stop 535E                ??_quaterForward 001E  
              _colour_rel$3313 0064                _colour_rel$3314 0068                         ??_labs 0005  
                       ??_main 00D1                         ??_dtoa 0026          __end_of_ReverseYellow 4DD6  
             __end_of_PinkMove 5B96                         ??_stop 0018                  __activetblptr 000003  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                 ??_Buttons_init 0001  
                       _RG6PPS 000E88                         i2l5812 000A                         i2l5814 001A  
                       i2l5816 002C                      ??_HighISR 0001       __end_of_color_click_init 5BE8  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 5604  
             __end_of___xxtofl 434A                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE                  ??_ReversePink 0024  
                       ___flge 4A54                         ___fleq 4F36                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 617E  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 003A  
                    ??___flneg 0005                      ??___flmul 0019                      ??___flsub 0032  
                    ??___fltol 0005                         _efgtoa 0E3E                      ??___lwdiv 000B  
                       _floorf 3F84                         _memcpy 5BE8                         clear_0 550C  
                       clear_1 5518                         clear_2 5524                         _motorL 0161  
                       _motorR 0158                         isa$std 000001                      ??_go_Home 0028  
                       pad@buf 0013                         dtoa@fp 001C                         _strcpy 5EAA  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                ___fpclassifyf@e 0009                ___fpclassifyf@u 000B  
              ___fpclassifyf@x 0001                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C                         putch@c 0001  
              ??_LightBlueMove 0024               __end_of_vfprintf 59FC                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 005F  
             __end_of_turnLeft 511C                     ___flge@ff1 002A                     _YellowMove 5AF2  
                   ___flge@ff2 002E                ??___fpclassifyf 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0032  
                   ___fleq@ff2 0036                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 552A        __end_of_reverseOneBlock 594E  
                   ___flneg@f1 0001       __end_of_color_read_Green 5D28         ?_I2C_2_Master_RepStart 0001  
              ??_Backhalfblock 001E                  ___rparam_used 000001                      ?_LED_init 0001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 6226  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 511C  
                 __pidataBANK0 625C                   __pidataBANK1 6262                  __end_of_fputc 4D20  
                __end_of_fputs 5F32                  __end_of_putch 6268              __end_of_GreenMove 6030  
          __end_of_Timer0_init 61E4            __end_of_ReversePink 4E8C                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14379 00D3  
        __end_of_reverseDetect 5844                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 5844  
                   ??_LED_init 0001                     _getTMR0val 56D0              __end_of_RetryMove 559E  
                    ?_PinkMove 0020              _color_writetoaddr 61A4                     _delayed_ms 6068  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001           __end_of_Buttons_init 623E  
            __end_of_TurnDelay 60D6          __end_of_timed_forward 4F36            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 2EB0  
      __end_of_Interrupts_init 6232         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 61C4                        _RedMove 5FB4             _I2C_2_Master_Start 6252  
                   ??_PinkMove 0024                     _initUSART4 61E4             _I2C_2_Master_Write 621A  
                      __Hparam 0000                        _WayBack 011A                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 61C4                    RetryMove@mL 0020  
                  RetryMove@mR 0022        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4DD6                        ___aodiv 44F6  
                      ___fladd 222C                        ___aomod 47EA                        ___fldiv 2B16  
                      ___flneg 6030                        ___flmul 26EC                        ___flsub 5E64  
                      ___fltol 494E            ?_I2C_2_Master_Start 0001                        ___lwdiv 5452  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 54C6  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 34E4  
                      __ptext0 37C4                        __ptext1 434A                        __ptext2 59FC  
                      __ptext3 59A6                        __ptext4 31DE                        __ptext5 0E3E  
                      __ptext6 5EAA                        __ptext7 5BE8                        __ptext8 559E  
                      __ptext9 3F84                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00F1              color_read_lum@tmp 000A                        main@buf 0172  
                      _sprintf 59FC           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 552A                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                    ?_getTMR0val 0001  
              LightBlueMove@mL 0020                LightBlueMove@mR 0022                ??_fullSpeedBack 0018  
           ??_color_click_init 0005                     _move_count 01DA                    ?_delayed_ms 0001  
            turnCalibration@mL 0020              turnCalibration@mR 0022                     _lost_count 00EB  
            __end_of_vfpfcnvrt 34E4                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F4  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 5258                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013          __end_of_quaterForward 59A6  
            __end_of_turnRight 507E                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                   _consecuitive 0116                    _CCP1CONbits 000FAB  
                   main@colour 01D6                   _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 5E16                 __end_of___flge 4B58                 __end_of___fleq 4FE0  
               _fullSpeedAhead 51BA                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 61A4                 __end_of_efgtoa 1838  
               __end_of_floorf 4196                 __end_of_memcpy 5C38                     floorf@F526 00DF  
     __end_of_Forwardhalfblock 589E                  ??_colour_move 002F                      _GreenMove 5FF2  
               __end_of_strcpy 5EEE            start_initialization 54C6                    __end_of_abs 5FB4  
                  __end_of_pad 53D8                  _TxBufWriteCnt 00EF          __end_of_LightBlueMove 56D0  
                 ??_OrangeMove 0024                   _Buttons_init 6232          __end_of___fpclassifyf 4C56  
                ??_homeReverse 001E                  homeReverse@mL 001A                  homeReverse@mR 001C  
          color_read_Green@tmp 000A   colour_move@recognized_colour 002D          __end_of_Backhalfblock 57EA  
      __end_of_initDCmotorsPWM 52E0                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 5258  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 5534  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F2                    __pdataBANK1 01D8  
              _ForwardOneBlock 589E                       ??_floorf 004F                       ??_memcpy 0007  
              Backhalfblock@mL 001A                Backhalfblock@mR 001C                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 4D20  
                    ___fldiv@a 0036                      ___fldiv@b 0032                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 566A  
                    ___flmul@a 0015                      ___flmul@b 0011                      ___flsub@a 002E  
                    ___flsub@b 002A                      _TurnDelay 60A0                  __pcstackBANK0 0060  
                __pcstackBANK1 0172               ___aodiv@dividend 0001            __end_of_colour_move 3F84  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2969 006F            ReverseOrangeMove@mL 0020  
          ReverseOrangeMove@mR 0022               ___lwdiv@dividend 0007                      _dtoa$2938 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 0020                     ?_RetryMove 0020  
              timed_forward@mL 0014                       ?___aodiv 0001                timed_forward@mR 0016  
                     ?___fladd 0001            __end_of_homeReverse 5DC8                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$3315 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 5B44  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 5790              _I2C_2_Master_Idle 6130              _I2C_2_Master_Init 6106  
            _I2C_2_Master_Read 5F32              _I2C_2_Master_Stop 6248                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00F0             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0005                 colour_rel@vals 004B              _sendStringSerial4 60D6  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001                       _PIE0bits 000E29  
                     _LED_init 6158             ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 58F6  
                 ??_delayed_ms 0003                    turnRight@mL 0014                    turnRight@mR 0016  
                    _lost_flag 0114                       _PIR0bits 000E33                       _PIR4bits 000E37  
                     i2u568_40 001A                       i2u568_41 0016               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 1838  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 31DE  
    __end_of_I2C_2_Master_Idle 6158      __end_of_I2C_2_Master_Init 6130      __end_of_I2C_2_Master_Read 5F74  
            ___wmul@multiplier 0001         ReverseLightBlueMove@mL 0020         ReverseLightBlueMove@mR 0022  
    __end_of_I2C_2_Master_Stop 6252                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024                    _colour_move 3D0C   __end_of_ReverseLightBlueMove 5AF2  
            ??_color_read_Blue 0007             __end_of_getTMR0val 5732                   _TxBufReadCnt 00EE  
                     _BlueMove 53D8                      _turnRight 4FE0             __end_of_delayed_ms 60A0  
              quaterForward@mL 001A                quaterForward@mR 001C                     vfpfcnvrt@c 00A5  
            ??_turnCalibration 0024                      copy_data0 54DA                      copy_data1 54FA  
    __end_of_sendStringSerial4 6106                   ??_colour_rel 004F                  _reverseDetect 57EA  
__end_of_I2C_2_Master_RepStart 6248             color_read_Blue@tmp 000A            __end_of_setMotorPWM 47EA  
                  _homeReverse 5D78                   ??_initUSART4 0001                       _PinkMove 5B44  
                     __Hrparam 0000         __end_of_Colour_decider 222C                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 51BA                    ??_RetryMove 0024           TurnDelay@Turn45Delay 0001  
                  _readColours 5732                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 31DE  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                _timed_forward 4E8C                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 4196                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 6202                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4B58                       __ptext11 494E  
                     __ptext20 44F6                       __ptext12 6030                       __ptext21 60D6  
                     __ptext13 3A8E                       __ptext30 61E4                       __ptext22 6202  
                     __ptext14 535E                       __ptext31 5258                       __ptext23 5732  
                     __ptext15 5EEE                       __ptext40 4DD6                       __ptext32 56D0  
                     __ptext24 5C38                       __ptext16 4C56                       __ptext41 589E  
                     __ptext33 2EB0                       __ptext25 5C88                       __ptext17 6266  
                     __ptext50 5B44                       __ptext42 5A4E                       __ptext34 3D0C  
                     __ptext26 5CD8                       __ptext18 5F74                       __ptext51 58F6  
                     __ptext43 5AA0                       __ptext35 34E4                       __ptext27 5D28  
                     __ptext19 47EA                       __ptext60 511C                       __ptext52 5604  
                     __ptext44 5FB4                       __ptext36 4E8C                       __ptext28 623E  
                     __ptext61 594E                       __ptext53 5DC8                       __ptext45 5FF2  
                     __ptext37 6068                       __ptext29 5F32                       __ptext70 6158  
                     __ptext62 5B96                       __ptext54 4FE0                       __ptext46 53D8  
                     __ptext38 5D78                       __ptext71 6226                       __ptext63 61A4  
                     __ptext55 566A                       __ptext47 5790                       __ptext39 4D20  
                     __ptext80 5E64                       __ptext72 5844                       __ptext64 621A  
                     __ptext56 5E16                       __ptext48 5AF2                       __ptext81 222C  
                     __ptext73 52E0                       __ptext65 6248                       __ptext57 507E  
                     __ptext49 5534                       __ptext82 26EC                       __ptext74 51BA  
                     __ptext66 6252                       __ptext58 60A0                       __ptext83 4A54  
                     __ptext75 467E                       __ptext67 6130                       __ptext59 57EA  
                     __ptext84 4F36                       __ptext76 617E                       __ptext68 6106  
                     __ptext85 2B16                       __ptext77 5452                       __ptext69 61C4  
                     __ptext86 6232                       __ptext78 1838                       __ptext79 4196  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 59A6                       _run_flag 01D8  
                ??_turnRight45 001E                       _turnLeft 507E               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
                   _INTCONbits 000FF2                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 467E                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 00C4               ??_fullSpeedAhead 0018  
            _ReverseOrangeMove 5A4E                      strcpy@src 0003                 getTMR0val@temp 0003  
           ?_ReverseOrangeMove 0020                   ??_turnLeft45 001E           _ReverseLightBlueMove 5AA0  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009            ??_ReverseOrangeMove 0024                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 5B96                       sprintf@f 00C6  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                _quaterForward 594E            __end_of_turnRight45 5E16                    _prev_colour 0118  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5E64                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
    __end_of_ReverseOrangeMove 5AA0                _sendCharSerial4 6202                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012          ?_ReverseLightBlueMove 0020  
