

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 26 19:01:34 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 06/04/2022 GMT
    56                           ; 
    57                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataBANK0
    91   001BE4                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _DataFlag
    95   001BE4  01                 	db	1
    96   000000                     _TX4REG	set	3812
    97   000000                     _RC4STAbits	set	3815
    98   000000                     _SP4BRGH	set	3814
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _ANSELDbits	set	3751
   104   000000                     _SSP2ADD	set	3798
   105   000000                     _SSP2CON1bits	set	3801
   106   000000                     _LATAbits	set	3961
   107   000000                     _LATGbits	set	3967
   108   000000                     _TRISAbits	set	3969
   109   000000                     _TRISGbits	set	3975
   110   000000                     _LATFbits	set	3966
   111   000000                     _INTCONbits	set	4082
   112   000000                     _TRISDbits	set	3972
   113   000000                     _TRISFbits	set	3974
   114   000000                     _RC4REG	set	3811
   115   000000                     _SP4BRGL	set	3813
   116   000000                     _TX4STAbits	set	3816
   117   000000                     _BAUD4CONbits	set	3817
   118   000000                     _SSP2CON2	set	3802
   119   000000                     _SSP2STAT	set	3800
   120   000000                     _SSP2BUF	set	3797
   121   000000                     _PIE2bits	set	3627
   122   000000                     _PIE4bits	set	3629
   123   000000                     _PIR4bits	set	3639
   124   000000                     _RC0PPS	set	3682
   125   000000                     _RD5PPS	set	3695
   126   000000                     _RD6PPS	set	3696
   127                           
   128                           	psect	smallconst
   129   000E00                     __psmallconst:
   130                           	callstack 0
   131   000E00  00                 	db	0
   132   000E01                     STR_1:
   133   000E01  72                 	db	114	;'r'
   134   000E02  65                 	db	101	;'e'
   135   000E03  64                 	db	100	;'d'
   136   000E04  3D                 	db	61	;'='
   137   000E05  25                 	db	37
   138   000E06  64                 	db	100	;'d'
   139   000E07  20                 	db	32
   140   000E08  67                 	db	103	;'g'
   141   000E09  72                 	db	114	;'r'
   142   000E0A  65                 	db	101	;'e'
   143   000E0B  65                 	db	101	;'e'
   144   000E0C  6E                 	db	110	;'n'
   145   000E0D  3D                 	db	61	;'='
   146   000E0E  25                 	db	37
   147   000E0F  64                 	db	100	;'d'
   148   000E10  20                 	db	32
   149   000E11  62                 	db	98	;'b'
   150   000E12  6C                 	db	108	;'l'
   151   000E13  75                 	db	117	;'u'
   152   000E14  65                 	db	101	;'e'
   153   000E15  3D                 	db	61	;'='
   154   000E16  25                 	db	37
   155   000E17  64                 	db	100	;'d'
   156   000E18  20                 	db	32
   157   000E19  6C                 	db	108	;'l'
   158   000E1A  75                 	db	117	;'u'
   159   000E1B  6D                 	db	109	;'m'
   160   000E1C  3D                 	db	61	;'='
   161   000E1D  25                 	db	37
   162   000E1E  64                 	db	100	;'d'
   163   000E1F  0D                 	db	13
   164   000E20  0A                 	db	10
   165   000E21  00                 	db	0
   166   000E22  00                 	db	0	; dummy byte at the end
   167   000000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171   0018DE                     __pcinit:
   172                           	callstack 0
   173   0018DE                     start_initialization:
   174                           	callstack 0
   175   0018DE                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Initialize objects allocated to BANK0 (1 bytes)
   179                           ; load TBLPTR registers with __pidataBANK0
   180   0018DE  0EE4               	movlw	low __pidataBANK0
   181   0018E0  6EF6               	movwf	tblptrl,c
   182   0018E2  0E1B               	movlw	high __pidataBANK0
   183   0018E4  6EF7               	movwf	tblptrh,c
   184   0018E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   185   0018E8  6EF8               	movwf	tblptru,c
   186   0018EA  0009               	tblrd		*+	;fetch initializer
   187   0018EC  CFF5 F0FE          	movff	tablat,__pdataBANK0
   188                           
   189                           ; Clear objects allocated to BANK1 (60 bytes)
   190   0018F0  EE01  F000         	lfsr	0,__pbssBANK1
   191   0018F4  0E3C               	movlw	60
   192   0018F6                     clear_0:
   193   0018F6  6AEE               	clrf	postinc0,c
   194   0018F8  06E8               	decf	wreg,f,c
   195   0018FA  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to BANK0 (77 bytes)
   198   0018FC  EE00  F0B1         	lfsr	0,__pbssBANK0
   199   001900  0E4D               	movlw	77
   200   001902                     clear_1:
   201   001902  6AEE               	clrf	postinc0,c
   202   001904  06E8               	decf	wreg,f,c
   203   001906  E1FD               	bnz	clear_1
   204                           
   205                           ; Clear objects allocated to COMRAM (4 bytes)
   206   001908  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   207   00190A  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   208   00190C  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   209   00190E  6A57               	clrf	__pbssCOMRAM& (0+255),c
   210   001910                     end_of_initialization:
   211                           	callstack 0
   212   001910                     __end_of__initialization:
   213                           	callstack 0
   214   001910  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   001912  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   001914  0E00               	movlw	low (__Lsmallconst shr (0+16))
   217   001916  6EF8               	movwf	tblptru,c
   218   001918  0E0E               	movlw	high __Lsmallconst
   219   00191A  6EF7               	movwf	tblptrh,c
   220   00191C  0100               	movlb	0
   221   00191E  EFD2  F00A         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224   000057                     __pbssCOMRAM:
   225                           	callstack 0
   226   000057                     _TxBufReadCnt:
   227                           	callstack 0
   228   000057                     	ds	1
   229   000058                     _TxBufWriteCnt:
   230                           	callstack 0
   231   000058                     	ds	1
   232   000059                     _RxBufReadCnt:
   233                           	callstack 0
   234   000059                     	ds	1
   235   00005A                     _RxBufWriteCnt:
   236                           	callstack 0
   237   00005A                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240   0000B1                     __pbssBANK0:
   241                           	callstack 0
   242   0000B1                     _EUSART4RXbuf:
   243                           	callstack 0
   244   0000B1                     	ds	20
   245   0000C5                     _rel:
   246                           	callstack 0
   247   0000C5                     	ds	12
   248   0000D1                     _width:
   249                           	callstack 0
   250   0000D1                     	ds	2
   251   0000D3                     _prec:
   252                           	callstack 0
   253   0000D3                     	ds	2
   254   0000D5                     _flags:
   255                           	callstack 0
   256   0000D5                     	ds	1
   257   0000D6                     _dbuf:
   258                           	callstack 0
   259   0000D6                     	ds	32
   260   0000F6                     _vals:
   261                           	callstack 0
   262   0000F6                     	ds	8
   263                           
   264                           	psect	dataBANK0
   265   0000FE                     __pdataBANK0:
   266                           	callstack 0
   267   0000FE                     _DataFlag:
   268                           	callstack 0
   269   0000FE                     	ds	1
   270                           
   271                           	psect	bssBANK1
   272   000100                     __pbssBANK1:
   273                           	callstack 0
   274   000100                     _EUSART4TXbuf:
   275                           	callstack 0
   276   000100                     	ds	60
   277                           
   278                           	psect	cstackBANK0
   279   000060                     __pcstackBANK0:
   280                           	callstack 0
   281   000060                     ?_vfprintf:
   282                           	callstack 0
   283   000060                     vfprintf@fp:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x0
   287   000060                     	ds	2
   288   000062                     vfprintf@fmt:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x2
   292   000062                     	ds	2
   293   000064                     vfprintf@ap:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x4
   297   000064                     	ds	2
   298   000066                     ?_sprintf:
   299                           	callstack 0
   300   000066                     sprintf@s:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x6
   304   000066                     	ds	2
   305   000068                     sprintf@fmt:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x8
   309   000068                     	ds	10
   310   000072                     sprintf@ap:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x12
   314   000072                     	ds	2
   315   000074                     sprintf@f:
   316                           	callstack 0
   317                           
   318                           ; 11 bytes @ 0x14
   319   000074                     	ds	11
   320   00007F                     main@buf:
   321                           	callstack 0
   322                           
   323                           ; 50 bytes @ 0x1F
   324   00007F                     	ds	50
   325                           
   326                           	psect	cstackCOMRAM
   327   000001                     __pcstackCOMRAM:
   328                           	callstack 0
   329   000001                     ??_getCharFromTxBuf:
   330   000001                     putCharToRxBuf@byte:
   331                           	callstack 0
   332   000001                     
   333                           ; 1 bytes @ 0x0
   334   000001                     	ds	2
   335   000003                     ??_HighISR:
   336                           
   337                           ; 1 bytes @ 0x2
   338   000003                     	ds	2
   339   000005                     ??_I2C_2_Master_Idle:
   340   000005                     ?___aodiv:
   341                           	callstack 0
   342   000005                     ?___aomod:
   343                           	callstack 0
   344   000005                     putCharToTxBuf@byte:
   345                           	callstack 0
   346   000005                     fputc@c:
   347                           	callstack 0
   348   000005                     ___aodiv@dividend:
   349                           	callstack 0
   350   000005                     ___aomod@dividend:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0x4
   354   000005                     	ds	1
   355   000006                     ??_I2C_2_Master_Read:
   356   000006                     I2C_2_Master_Write@data_byte:
   357                           	callstack 0
   358   000006                     TxBufferedString@string:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x5
   362   000006                     	ds	1
   363   000007                     color_writetoaddr@value:
   364                           	callstack 0
   365   000007                     I2C_2_Master_Read@ack:
   366                           	callstack 0
   367   000007                     fputc@fp:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x6
   371   000007                     	ds	1
   372   000008                     color_writetoaddr@address:
   373                           	callstack 0
   374   000008                     I2C_2_Master_Read@tmp:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x7
   378   000008                     	ds	1
   379   000009                     ??_fputc:
   380   000009                     ??_color_click_init:
   381   000009                     ?_color_read_lum:
   382                           	callstack 0
   383   000009                     ?_color_read_Red:
   384                           	callstack 0
   385   000009                     ?_color_read_Green:
   386                           	callstack 0
   387   000009                     ?_color_read_Blue:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x8
   391   000009                     	ds	2
   392   00000B                     ??_color_read_lum:
   393   00000B                     ??_color_read_Red:
   394   00000B                     ??_color_read_Green:
   395   00000B                     ??_color_read_Blue:
   396                           
   397                           ; 1 bytes @ 0xA
   398   00000B                     	ds	2
   399   00000D                     ___aodiv@divisor:
   400                           	callstack 0
   401   00000D                     ___aomod@divisor:
   402                           	callstack 0
   403                           
   404                           ; 8 bytes @ 0xC
   405   00000D                     	ds	1
   406   00000E                     color_read_lum@tmp:
   407                           	callstack 0
   408   00000E                     color_read_Red@tmp:
   409                           	callstack 0
   410   00000E                     color_read_Green@tmp:
   411                           	callstack 0
   412   00000E                     color_read_Blue@tmp:
   413                           	callstack 0
   414   00000E                     fputs@s:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0xD
   418   00000E                     	ds	2
   419   000010                     readColours@vals:
   420                           	callstack 0
   421   000010                     fputs@fp:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0xF
   425   000010                     	ds	2
   426   000012                     fputs@c:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x11
   430   000012                     	ds	1
   431   000013                     fputs@i:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x12
   435   000013                     	ds	2
   436   000015                     ___aodiv@counter:
   437                           	callstack 0
   438   000015                     ___aomod@counter:
   439                           	callstack 0
   440   000015                     pad@fp:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x14
   444   000015                     	ds	1
   445   000016                     ___aodiv@sign:
   446                           	callstack 0
   447   000016                     ___aomod@sign:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x15
   451   000016                     	ds	1
   452   000017                     ?_abs:
   453                           	callstack 0
   454   000017                     pad@buf:
   455                           	callstack 0
   456   000017                     abs@a:
   457                           	callstack 0
   458   000017                     ___aodiv@quotient:
   459                           	callstack 0
   460                           
   461                           ; 8 bytes @ 0x16
   462   000017                     	ds	2
   463   000019                     ??_abs:
   464   000019                     pad@p:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x18
   468   000019                     	ds	2
   469   00001B                     ??_pad:
   470                           
   471                           ; 1 bytes @ 0x1A
   472   00001B                     	ds	1
   473   00001C                     pad@i:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x1B
   477   00001C                     	ds	2
   478   00001E                     pad@w:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x1D
   482   00001E                     	ds	2
   483   000020                     dtoa@fp:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x1F
   487   000020                     	ds	2
   488   000022                     dtoa@d:
   489                           	callstack 0
   490                           
   491                           ; 8 bytes @ 0x21
   492   000022                     	ds	8
   493   00002A                     ??_dtoa:
   494                           
   495                           ; 1 bytes @ 0x29
   496   00002A                     	ds	8
   497   000032                     _dtoa$1405:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x31
   501   000032                     	ds	2
   502   000034                     dtoa@p:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x33
   506   000034                     	ds	2
   507   000036                     dtoa@w:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x35
   511   000036                     	ds	2
   512   000038                     dtoa@n:
   513                           	callstack 0
   514                           
   515                           ; 8 bytes @ 0x37
   516   000038                     	ds	8
   517   000040                     dtoa@s:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x3F
   521   000040                     	ds	1
   522   000041                     dtoa@i:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x40
   526   000041                     	ds	2
   527   000043                     vfpfcnvrt@fp:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x42
   531   000043                     	ds	2
   532   000045                     vfpfcnvrt@fmt:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x44
   536   000045                     	ds	2
   537   000047                     vfpfcnvrt@ap:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x46
   541   000047                     	ds	2
   542   000049                     ??_vfpfcnvrt:
   543                           
   544                           ; 1 bytes @ 0x48
   545   000049                     	ds	2
   546   00004B                     vfpfcnvrt@convarg:
   547                           	callstack 0
   548                           
   549                           ; 8 bytes @ 0x4A
   550   00004B                     	ds	8
   551   000053                     vfpfcnvrt@cp:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x52
   555   000053                     	ds	2
   556   000055                     vfprintf@cfmt:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x54
   560   000055                     	ds	2
   561   000057                     
   562                           ; 1 bytes @ 0x56
   563 ;;
   564 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   565 ;;
   566 ;; *************** function _main *****************
   567 ;; Defined at:
   568 ;;		line 25 in file "main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  buf            50   31[BANK0 ] unsigned char [50]
   573 ;;  ADC             2    0        unsigned int 
   574 ;;  frac_part       2    0        unsigned int 
   575 ;;  int_part        2    0        unsigned int 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   586 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   588 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   589 ;;Total ram usage:       50 bytes
   590 ;; Hardware stack levels required when called: 10
   591 ;; This function calls:
   592 ;;		_I2C_2_Master_Init
   593 ;;		_Interrupts_init
   594 ;;		_TxBufferedString
   595 ;;		_color_click_init
   596 ;;		_initUSART4
   597 ;;		_readColours
   598 ;;		_sendTxBuf
   599 ;;		_sprintf
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text0
   606   0015A4                     __ptext0:
   607                           	callstack 0
   608   0015A4                     _main:
   609                           	callstack 21
   610   0015A4                     
   611                           ;main.c: 26:     initUSART4();
   612   0015A4  ECBA  F00D         	call	_initUSART4	;wreg free
   613   0015A8                     
   614                           ;main.c: 27:     Interrupts_init();
   615   0015A8  ECD5  F00D         	call	_Interrupts_init	;wreg free
   616   0015AC                     
   617                           ;main.c: 28:     color_click_init();
   618   0015AC  ECF4  F00C         	call	_color_click_init	;wreg free
   619   0015B0                     
   620                           ;main.c: 29:     I2C_2_Master_Init();
   621   0015B0  EC57  F00D         	call	_I2C_2_Master_Init	;wreg free
   622   0015B4                     l2145:
   623                           
   624                           ;main.c: 36:     {;main.c: 41:     readColours(&vals);
   625   0015B4  0EF6               	movlw	low _vals
   626   0015B6  6E10               	movwf	readColours@vals^0,c
   627   0015B8  0E00               	movlw	high _vals
   628   0015BA  6E11               	movwf	(readColours@vals+1)^0,c
   629   0015BC  EC4F  F00B         	call	_readColours	;wreg free
   630   0015C0                     
   631                           ;main.c: 45:     sprintf(buf,"red=%d green=%d blue=%d lum=%d\r\n",vals.R,vals.G,vals.B,v
      +                          als.L);
   632   0015C0  0E7F               	movlw	low main@buf
   633   0015C2  0100               	movlb	0	; () banked
   634   0015C4  6F66               	movwf	sprintf@s& (0+255),b
   635   0015C6  0E00               	movlw	high main@buf
   636   0015C8  6F67               	movwf	(sprintf@s+1)& (0+255),b
   637   0015CA  0E01               	movlw	low STR_1
   638   0015CC  6F68               	movwf	sprintf@fmt& (0+255),b
   639   0015CE  0E0E               	movlw	high STR_1
   640   0015D0  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   641   0015D2  C0F6  F06A         	movff	_vals,?_sprintf+4
   642   0015D6  C0F7  F06B         	movff	_vals+1,?_sprintf+5
   643   0015DA  C0F8  F06C         	movff	_vals+2,?_sprintf+6
   644   0015DE  C0F9  F06D         	movff	_vals+3,?_sprintf+7
   645   0015E2  C0FA  F06E         	movff	_vals+4,?_sprintf+8
   646   0015E6  C0FB  F06F         	movff	_vals+5,?_sprintf+9
   647   0015EA  C0FC  F070         	movff	_vals+6,?_sprintf+10
   648   0015EE  C0FD  F071         	movff	_vals+7,?_sprintf+11
   649   0015F2  EC7E  F00B         	call	_sprintf	;wreg free
   650   0015F6                     
   651                           ;main.c: 46:     TxBufferedString(buf);
   652   0015F6  0E7F               	movlw	low main@buf
   653   0015F8  6E06               	movwf	TxBufferedString@string^0,c
   654   0015FA  0E00               	movlw	high main@buf
   655   0015FC  6E07               	movwf	(TxBufferedString@string+1)^0,c
   656   0015FE  EC14  F00D         	call	_TxBufferedString	;wreg free
   657                           
   658                           ;main.c: 48:     while (DataFlag){
   659   001602  EF05  F00B         	goto	l2153
   660   001606                     l2151:
   661                           
   662                           ; BSR set to: 0
   663                           ;main.c: 49:         sendTxBuf();
   664   001606  EC42  F00D         	call	_sendTxBuf	;wreg free
   665   00160A                     l2153:
   666                           
   667                           ;main.c: 48:     while (DataFlag){
   668   00160A  0100               	movlb	0	; () banked
   669   00160C  51FE               	movf	_DataFlag& (0+255),w,b	;volatile
   670   00160E  A4D8               	btfss	status,2,c
   671   001610  EF0C  F00B         	goto	u1411
   672   001614  EF0E  F00B         	goto	u1410
   673   001618                     u1411:
   674   001618  EF03  F00B         	goto	l2151
   675   00161C                     u1410:
   676   00161C  EFDA  F00A         	goto	l2145
   677   001620  EF25  F000         	goto	start
   678   001624                     __end_of_main:
   679                           	callstack 0
   680                           
   681 ;; *************** function _sprintf *****************
   682 ;; Defined at:
   683 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  s               2    6[BANK0 ] PTR unsigned char 
   686 ;;		 -> main@buf(50), 
   687 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   688 ;;		 -> STR_1(33), 
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  f              11   20[BANK0 ] struct _IO_FILE
   691 ;;  ap              2   18[BANK0 ] PTR void [1]
   692 ;;		 -> ?_sprintf(2), 
   693 ;;  ret             2    0        int 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  2    6[BANK0 ] int 
   696 ;; Registers used:
   697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   703 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   704 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   706 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;Total ram usage:       25 bytes
   708 ;; Hardware stack levels used: 1
   709 ;; Hardware stack levels required when called: 9
   710 ;; This function calls:
   711 ;;		_vfprintf
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text1
   718   0016FC                     __ptext1:
   719                           	callstack 0
   720   0016FC                     _sprintf:
   721                           	callstack 21
   722   0016FC  0E6A               	movlw	low (?_sprintf+4)
   723   0016FE  0100               	movlb	0	; () banked
   724   001700  6F72               	movwf	sprintf@ap& (0+255),b
   725   001702  0E00               	movlw	high (?_sprintf+4)
   726   001704  6F73               	movwf	(sprintf@ap+1)& (0+255),b
   727   001706  C066  F074         	movff	sprintf@s,sprintf@f
   728   00170A  C067  F075         	movff	sprintf@s+1,sprintf@f+1
   729   00170E                     
   730                           ; BSR set to: 0
   731   00170E  0E00               	movlw	0
   732   001710  6F78               	movwf	(sprintf@f+4)& (0+255),b
   733   001712  0E00               	movlw	0
   734   001714  6F77               	movwf	(sprintf@f+3)& (0+255),b
   735   001716                     
   736                           ; BSR set to: 0
   737   001716  0E00               	movlw	0
   738   001718  6F7E               	movwf	(sprintf@f+10)& (0+255),b
   739   00171A  0E00               	movlw	0
   740   00171C  6F7D               	movwf	(sprintf@f+9)& (0+255),b
   741   00171E                     
   742                           ; BSR set to: 0
   743   00171E  0E74               	movlw	low sprintf@f
   744   001720  6F60               	movwf	vfprintf@fp& (0+255),b
   745   001722  0E00               	movlw	high sprintf@f
   746   001724  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
   747   001726  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
   748   00172A  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
   749   00172E  0E72               	movlw	low sprintf@ap
   750   001730  6F64               	movwf	vfprintf@ap& (0+255),b
   751   001732  0E00               	movlw	high sprintf@ap
   752   001734  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
   753   001736  ECA7  F00B         	call	_vfprintf	;wreg free
   754   00173A  0100               	movlb	0	; () banked
   755   00173C  5177               	movf	(sprintf@f+3)& (0+255),w,b
   756   00173E  2566               	addwf	sprintf@s& (0+255),w,b
   757   001740  6ED9               	movwf	fsr2l,c
   758   001742  5178               	movf	(sprintf@f+4)& (0+255),w,b
   759   001744  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
   760   001746  6EDA               	movwf	fsr2h,c
   761   001748  0E00               	movlw	0
   762   00174A  6EDF               	movwf	indf2,c
   763   00174C                     
   764                           ; BSR set to: 0
   765   00174C  0012               	return		;funcret
   766   00174E                     __end_of_sprintf:
   767                           	callstack 0
   768                           
   769 ;; *************** function _vfprintf *****************
   770 ;; Defined at:
   771 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   774 ;;		 -> sprintf@f(11), 
   775 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   776 ;;		 -> STR_1(33), 
   777 ;;  ap              2    4[BANK0 ] PTR PTR void 
   778 ;;		 -> sprintf@ap(2), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   781 ;;		 -> STR_1(33), 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2    0[BANK0 ] int 
   784 ;; Registers used:
   785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   791 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   794 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   795 ;;Total ram usage:        8 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 8
   798 ;; This function calls:
   799 ;;		_vfpfcnvrt
   800 ;; This function is called by:
   801 ;;		_sprintf
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text2
   806   00174E                     __ptext2:
   807                           	callstack 0
   808   00174E                     _vfprintf:
   809                           	callstack 21
   810   00174E                     
   811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   812   00174E  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   813   001752  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   814                           
   815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   816   001756  EFBB  F00B         	goto	l2119
   817   00175A                     l2117:
   818                           
   819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   820   00175A  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   821   00175E  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   822   001762  0E55               	movlw	low vfprintf@cfmt
   823   001764  6E45               	movwf	vfpfcnvrt@fmt^0,c
   824   001766  0E00               	movlw	high vfprintf@cfmt
   825   001768  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   826   00176A  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   827   00176E  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   828   001772  ECC6  F009         	call	_vfpfcnvrt	;wreg free
   829   001776                     l2119:
   830                           
   831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   832   001776  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   833   00177A  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   834   00177E                     	if	0	;tblptru may be non-zero
   835   00177E                     	endif
   836   00177E                     	if	0	;tblptru may be non-zero
   837   00177E                     	endif
   838   00177E  0008               	tblrd		*
   839   001780  50F5               	movf	tablat,w,c
   840   001782  0900               	iorlw	0
   841   001784  A4D8               	btfss	status,2,c
   842   001786  EFC7  F00B         	goto	u1401
   843   00178A  EFC9  F00B         	goto	u1400
   844   00178E                     u1401:
   845   00178E  EFAD  F00B         	goto	l2117
   846   001792                     u1400:
   847   001792                     
   848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   849   001792  0E00               	movlw	0
   850   001794  0100               	movlb	0	; () banked
   851   001796  6F61               	movwf	(?_vfprintf+1)& (0+255),b
   852   001798  0E00               	movlw	0
   853   00179A  6F60               	movwf	?_vfprintf& (0+255),b
   854   00179C                     
   855                           ; BSR set to: 0
   856   00179C  0012               	return		;funcret
   857   00179E                     __end_of_vfprintf:
   858                           	callstack 0
   859                           
   860 ;; *************** function _vfpfcnvrt *****************
   861 ;; Defined at:
   862 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
   865 ;;		 -> sprintf@f(11), 
   866 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
   867 ;;		 -> vfprintf@cfmt(2), 
   868 ;;  ap              2   70[COMRAM] PTR PTR void 
   869 ;;		 -> sprintf@ap(2), 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  convarg         8   74[COMRAM] struct .
   872 ;;  cp              2   82[COMRAM] PTR unsigned char 
   873 ;;		 -> STR_1(33), 
   874 ;;  i               2    0        int 
   875 ;;  done            2    0        int 
   876 ;;  c               1    0        unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   886 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   887 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   890 ;;Total ram usage:       18 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 7
   893 ;; This function calls:
   894 ;;		_dtoa
   895 ;;		_fputc
   896 ;; This function is called by:
   897 ;;		_vfprintf
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text3
   902   00138C                     __ptext3:
   903                           	callstack 0
   904   00138C                     _vfpfcnvrt:
   905                           	callstack 21
   906   00138C                     
   907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
   908   00138C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   909   001390  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   910   001394  CFDE FFF6          	movff	postinc2,tblptrl
   911   001398  CFDD FFF7          	movff	postdec2,tblptrh
   912   00139C                     	if	0	;tblptru may be non-zero
   913   00139C                     	endif
   914   00139C                     	if	0	;tblptru may be non-zero
   915   00139C                     	endif
   916   00139C  0008               	tblrd		*
   917   00139E  50F5               	movf	tablat,w,c
   918   0013A0  0A25               	xorlw	37
   919   0013A2  A4D8               	btfss	status,2,c
   920   0013A4  EFD6  F009         	goto	u1371
   921   0013A8  EFD8  F009         	goto	u1370
   922   0013AC                     u1371:
   923   0013AC  EF58  F00A         	goto	l2109
   924   0013B0                     u1370:
   925   0013B0                     
   926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   927   0013B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   928   0013B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   929   0013B8  2ADE               	incf	postinc2,f,c
   930   0013BA  0E00               	movlw	0
   931   0013BC  22DD               	addwfc	postdec2,f,c
   932   0013BE                     
   933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   934   0013BE  0E00               	movlw	0
   935   0013C0  0100               	movlb	0	; () banked
   936   0013C2  6FD2               	movwf	(_width+1)& (0+255),b
   937   0013C4  0E00               	movlw	0
   938   0013C6  6FD1               	movwf	_width& (0+255),b
   939   0013C8  C0D1  F0D5         	movff	_width,_flags
   940   0013CC                     
   941                           ; BSR set to: 0
   942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   943   0013CC  69D3               	setf	_prec& (0+255),b
   944   0013CE  69D4               	setf	(_prec+1)& (0+255),b
   945   0013D0                     
   946                           ; BSR set to: 0
   947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
   948   0013D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   949   0013D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   950   0013D8  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
   951   0013DC  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
   952   0013E0                     
   953                           ; BSR set to: 0
   954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   955   0013E0  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   956   0013E4  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   957   0013E8                     	if	0	;tblptru may be non-zero
   958   0013E8                     	endif
   959   0013E8                     	if	0	;tblptru may be non-zero
   960   0013E8                     	endif
   961   0013E8  0008               	tblrd		*
   962   0013EA  50F5               	movf	tablat,w,c
   963   0013EC  0A64               	xorlw	100
   964   0013EE  B4D8               	btfsc	status,2,c
   965   0013F0  EFFC  F009         	goto	u1381
   966   0013F4  EFFE  F009         	goto	u1380
   967   0013F8                     u1381:
   968   0013F8  EF0C  F00A         	goto	l2099
   969   0013FC                     u1380:
   970   0013FC                     
   971                           ; BSR set to: 0
   972   0013FC  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   973   001400  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   974   001404                     	if	0	;tblptru may be non-zero
   975   001404                     	endif
   976   001404                     	if	0	;tblptru may be non-zero
   977   001404                     	endif
   978   001404  0008               	tblrd		*
   979   001406  50F5               	movf	tablat,w,c
   980   001408  0A69               	xorlw	105
   981   00140A  A4D8               	btfss	status,2,c
   982   00140C  EF0A  F00A         	goto	u1391
   983   001410  EF0C  F00A         	goto	u1390
   984   001414                     u1391:
   985   001414  EF4F  F00A         	goto	l2105
   986   001418                     u1390:
   987   001418                     l2099:
   988                           
   989                           ; BSR set to: 0
   990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   991   001418  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   992   00141C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   993   001420  CFDF F049          	movff	indf2,??_vfpfcnvrt
   994   001424  0E02               	movlw	2
   995   001426  26DE               	addwf	postinc2,f,c
   996   001428  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
   997   00142C  0E00               	movlw	0
   998   00142E  22DD               	addwfc	postdec2,f,c
   999   001430  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1000   001434  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1001   001438  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1002   00143C  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1003   001440  0E00               	movlw	0
  1004   001442  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1005   001444  0EFF               	movlw	-1
  1006   001446  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1007   001448  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1008   00144A  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1009   00144C  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1010   00144E  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1011   001450  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1012                           
  1013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1014   001452  0E01               	movlw	1
  1015   001454  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1016   001456  6E49               	movwf	??_vfpfcnvrt^0,c
  1017   001458  0E00               	movlw	0
  1018   00145A  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1019   00145C  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1020   00145E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1021   001462  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1022   001466  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1023   00146A  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1024   00146E                     
  1025                           ; BSR set to: 0
  1026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1027   00146E  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1028   001472  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1029   001476  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1030   00147A  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1031   00147E  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1032   001482  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1033   001486  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1034   00148A  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1035   00148E  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1036   001492  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1037   001496  EC12  F007         	call	_dtoa	;wreg free
  1038   00149A  EF6C  F00A         	goto	l1019
  1039   00149E                     l2105:
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1042   00149E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1043   0014A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1044   0014A6  2ADE               	incf	postinc2,f,c
  1045   0014A8  0E00               	movlw	0
  1046   0014AA  22DD               	addwfc	postdec2,f,c
  1047   0014AC  EF6C  F00A         	goto	l1019
  1048   0014B0                     l2109:
  1049                           
  1050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1051   0014B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1052   0014B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1053   0014B8  CFDE FFF6          	movff	postinc2,tblptrl
  1054   0014BC  CFDD FFF7          	movff	postdec2,tblptrh
  1055   0014C0                     	if	0	;tblptru may be non-zero
  1056   0014C0                     	endif
  1057   0014C0                     	if	0	;tblptru may be non-zero
  1058   0014C0                     	endif
  1059   0014C0  0008               	tblrd		*
  1060   0014C2  50F5               	movf	tablat,w,c
  1061   0014C4  6E05               	movwf	fputc@c^0,c
  1062   0014C6  6A06               	clrf	(fputc@c+1)^0,c
  1063   0014C8  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1064   0014CC  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1065   0014D0  EC6D  F00A         	call	_fputc	;wreg free
  1066   0014D4  EF4F  F00A         	goto	l2105
  1067   0014D8                     l1019:
  1068   0014D8  0012               	return		;funcret
  1069   0014DA                     __end_of_vfpfcnvrt:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _dtoa *****************
  1073 ;; Defined at:
  1074 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1077 ;;		 -> sprintf@f(11), 
  1078 ;;  d               8   33[COMRAM] long long 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  n               8   55[COMRAM] long long 
  1081 ;;  i               2   64[COMRAM] int 
  1082 ;;  w               2   53[COMRAM] int 
  1083 ;;  p               2   51[COMRAM] int 
  1084 ;;  s               1   63[COMRAM] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1094 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1098 ;;Total ram usage:       35 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 6
  1101 ;; This function calls:
  1102 ;;		___aodiv
  1103 ;;		___aomod
  1104 ;;		_abs
  1105 ;;		_pad
  1106 ;; This function is called by:
  1107 ;;		_vfpfcnvrt
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text4
  1112   000E24                     __ptext4:
  1113                           	callstack 0
  1114   000E24                     _dtoa:
  1115                           	callstack 21
  1116   000E24                     
  1117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1118   000E24  C022  F038         	movff	dtoa@d,dtoa@n
  1119   000E28  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1120   000E2C  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1121   000E30  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1122   000E34  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1123   000E38  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1124   000E3C  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1125   000E40  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1126   000E44                     
  1127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1128   000E44  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1129   000E46  EF27  F007         	goto	u1271
  1130   000E4A  EF2A  F007         	goto	u1270
  1131   000E4E                     u1271:
  1132   000E4E  0E01               	movlw	1
  1133   000E50  EF2B  F007         	goto	u1280
  1134   000E54                     u1270:
  1135   000E54  0E00               	movlw	0
  1136   000E56                     u1280:
  1137   000E56  6E40               	movwf	dtoa@s^0,c
  1138   000E58                     
  1139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1140   000E58  5040               	movf	dtoa@s^0,w,c
  1141   000E5A  B4D8               	btfsc	status,2,c
  1142   000E5C  EF32  F007         	goto	u1291
  1143   000E60  EF34  F007         	goto	u1290
  1144   000E64                     u1291:
  1145   000E64  EF44  F007         	goto	l2041
  1146   000E68                     u1290:
  1147   000E68                     
  1148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1149   000E68  1E3F               	comf	(dtoa@n+7)^0,f,c
  1150   000E6A  1E3E               	comf	(dtoa@n+6)^0,f,c
  1151   000E6C  1E3D               	comf	(dtoa@n+5)^0,f,c
  1152   000E6E  1E3C               	comf	(dtoa@n+4)^0,f,c
  1153   000E70  1E3B               	comf	(dtoa@n+3)^0,f,c
  1154   000E72  1E3A               	comf	(dtoa@n+2)^0,f,c
  1155   000E74  1E39               	comf	(dtoa@n+1)^0,f,c
  1156   000E76  6C38               	negf	dtoa@n^0,c
  1157   000E78  0E00               	movlw	0
  1158   000E7A  2239               	addwfc	(dtoa@n+1)^0,f,c
  1159   000E7C  223A               	addwfc	(dtoa@n+2)^0,f,c
  1160   000E7E  223B               	addwfc	(dtoa@n+3)^0,f,c
  1161   000E80  223C               	addwfc	(dtoa@n+4)^0,f,c
  1162   000E82  223D               	addwfc	(dtoa@n+5)^0,f,c
  1163   000E84  223E               	addwfc	(dtoa@n+6)^0,f,c
  1164   000E86  223F               	addwfc	(dtoa@n+7)^0,f,c
  1165   000E88                     l2041:
  1166                           
  1167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1168   000E88  0100               	movlb	0	; () banked
  1169   000E8A  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  1170   000E8C  EF52  F007         	goto	u1300
  1171   000E90  51D4               	movf	(_prec+1)& (0+255),w,b
  1172   000E92  E106               	bnz	u1301
  1173   000E94  05D3               	decf	_prec& (0+255),w,b
  1174   000E96  B0D8               	btfsc	status,0,c
  1175   000E98  EF50  F007         	goto	u1301
  1176   000E9C  EF52  F007         	goto	u1300
  1177   000EA0                     u1301:
  1178   000EA0  EF58  F007         	goto	l998
  1179   000EA4                     u1300:
  1180   000EA4                     
  1181                           ; BSR set to: 0
  1182   000EA4  0E00               	movlw	0
  1183   000EA6  6E35               	movwf	(dtoa@p+1)^0,c
  1184   000EA8  0E01               	movlw	1
  1185   000EAA  6E34               	movwf	dtoa@p^0,c
  1186   000EAC  EF5C  F007         	goto	l1000
  1187   000EB0                     l998:
  1188                           
  1189                           ; BSR set to: 0
  1190   000EB0  C0D3  F034         	movff	_prec,dtoa@p
  1191   000EB4  C0D4  F035         	movff	_prec+1,dtoa@p+1
  1192   000EB8                     l1000:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1196   000EB8  C0D1  F036         	movff	_width,dtoa@w
  1197   000EBC  C0D2  F037         	movff	_width+1,dtoa@w+1
  1198   000EC0                     
  1199                           ; BSR set to: 0
  1200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1201   000EC0  5040               	movf	dtoa@s^0,w,c
  1202   000EC2  B4D8               	btfsc	status,2,c
  1203   000EC4  EF66  F007         	goto	u1311
  1204   000EC8  EF68  F007         	goto	u1310
  1205   000ECC                     u1311:
  1206   000ECC  EF7F  F007         	goto	l1001
  1207   000ED0                     u1310:
  1208   000ED0                     
  1209                           ; BSR set to: 0
  1210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1211   000ED0  0636               	decf	dtoa@w^0,f,c
  1212   000ED2  A0D8               	btfss	status,0,c
  1213   000ED4  0637               	decf	(dtoa@w+1)^0,f,c
  1214   000ED6                     
  1215                           ; BSR set to: 0
  1216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1217   000ED6  5040               	movf	dtoa@s^0,w,c
  1218   000ED8  A4D8               	btfss	status,2,c
  1219   000EDA  EF71  F007         	goto	u1321
  1220   000EDE  EF73  F007         	goto	u1320
  1221   000EE2                     u1321:
  1222   000EE2  EF79  F007         	goto	l2053
  1223   000EE6                     u1320:
  1224   000EE6                     
  1225                           ; BSR set to: 0
  1226   000EE6  0E00               	movlw	0
  1227   000EE8  6E33               	movwf	(_dtoa$1405+1)^0,c
  1228   000EEA  0E2B               	movlw	43
  1229   000EEC  6E32               	movwf	_dtoa$1405^0,c
  1230   000EEE  EF7D  F007         	goto	l2055
  1231   000EF2                     l2053:
  1232                           
  1233                           ; BSR set to: 0
  1234   000EF2  0E00               	movlw	0
  1235   000EF4  6E33               	movwf	(_dtoa$1405+1)^0,c
  1236   000EF6  0E2D               	movlw	45
  1237   000EF8  6E32               	movwf	_dtoa$1405^0,c
  1238   000EFA                     l2055:
  1239                           
  1240                           ; BSR set to: 0
  1241   000EFA  C032  F040         	movff	_dtoa$1405,dtoa@s
  1242   000EFE                     l1001:
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1246   000EFE  0E00               	movlw	0
  1247   000F00  6E42               	movwf	(dtoa@i+1)^0,c
  1248   000F02  0E1F               	movlw	31
  1249   000F04  6E41               	movwf	dtoa@i^0,c
  1250   000F06                     
  1251                           ; BSR set to: 0
  1252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1253   000F06  0E00               	movlw	0
  1254   000F08  6FF5               	movwf	(_dbuf+31)& (0+255),b
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1257   000F0A  EF03  F008         	goto	l2069
  1258   000F0E                     l2059:
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1261   000F0E  0641               	decf	dtoa@i^0,f,c
  1262   000F10  A0D8               	btfss	status,0,c
  1263   000F12  0642               	decf	(dtoa@i+1)^0,f,c
  1264   000F14                     
  1265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1266   000F14  0ED6               	movlw	low _dbuf
  1267   000F16  2441               	addwf	dtoa@i^0,w,c
  1268   000F18  6ED9               	movwf	fsr2l,c
  1269   000F1A  0E00               	movlw	high _dbuf
  1270   000F1C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1271   000F1E  6EDA               	movwf	fsr2h,c
  1272   000F20  C038  F005         	movff	dtoa@n,___aomod@dividend
  1273   000F24  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1274   000F28  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1275   000F2C  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1276   000F30  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1277   000F34  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1278   000F38  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1279   000F3C  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1280   000F40  0E0A               	movlw	10
  1281   000F42  6E0D               	movwf	___aomod@divisor^0,c
  1282   000F44  0E00               	movlw	0
  1283   000F46  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1284   000F48  0E00               	movlw	0
  1285   000F4A  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1286   000F4C  0E00               	movlw	0
  1287   000F4E  6E10               	movwf	(___aomod@divisor+3)^0,c
  1288   000F50  0E00               	movlw	0
  1289   000F52  6E11               	movwf	(___aomod@divisor+4)^0,c
  1290   000F54  0E00               	movlw	0
  1291   000F56  6E12               	movwf	(___aomod@divisor+5)^0,c
  1292   000F58  0E00               	movlw	0
  1293   000F5A  6E13               	movwf	(___aomod@divisor+6)^0,c
  1294   000F5C  0E00               	movlw	0
  1295   000F5E  6E14               	movwf	(___aomod@divisor+7)^0,c
  1296   000F60  EC14  F009         	call	___aomod	;wreg free
  1297   000F64  C005  F02A         	movff	?___aomod,??_dtoa
  1298   000F68  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1299   000F6C  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1300   000F70  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1301   000F74  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1302   000F78  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1303   000F7C  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1304   000F80  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1305   000F84  C02A  F017         	movff	??_dtoa,abs@a
  1306   000F88  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1307   000F8C  ECD4  F00C         	call	_abs	;wreg free
  1308   000F90  5017               	movf	?_abs^0,w,c
  1309   000F92  0F30               	addlw	48
  1310   000F94  6EDF               	movwf	indf2,c
  1311   000F96                     
  1312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1313   000F96  0634               	decf	dtoa@p^0,f,c
  1314   000F98  A0D8               	btfss	status,0,c
  1315   000F9A  0635               	decf	(dtoa@p+1)^0,f,c
  1316   000F9C                     
  1317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1318   000F9C  0636               	decf	dtoa@w^0,f,c
  1319   000F9E  A0D8               	btfss	status,0,c
  1320   000FA0  0637               	decf	(dtoa@w+1)^0,f,c
  1321   000FA2                     
  1322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1323   000FA2  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1324   000FA6  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1325   000FAA  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1326   000FAE  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1327   000FB2  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1328   000FB6  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1329   000FBA  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1330   000FBE  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1331   000FC2  0E0A               	movlw	10
  1332   000FC4  6E0D               	movwf	___aodiv@divisor^0,c
  1333   000FC6  0E00               	movlw	0
  1334   000FC8  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1335   000FCA  0E00               	movlw	0
  1336   000FCC  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1337   000FCE  0E00               	movlw	0
  1338   000FD0  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1339   000FD2  0E00               	movlw	0
  1340   000FD4  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1341   000FD6  0E00               	movlw	0
  1342   000FD8  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1343   000FDA  0E00               	movlw	0
  1344   000FDC  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1345   000FDE  0E00               	movlw	0
  1346   000FE0  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1347   000FE2  EC50  F008         	call	___aodiv	;wreg free
  1348   000FE6  C005  F038         	movff	?___aodiv,dtoa@n
  1349   000FEA  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1350   000FEE  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1351   000FF2  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1352   000FF6  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1353   000FFA  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1354   000FFE  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1355   001002  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1356   001006                     l2069:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1359   001006  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1360   001008  EF0E  F008         	goto	u1331
  1361   00100C  5042               	movf	(dtoa@i+1)^0,w,c
  1362   00100E  E108               	bnz	u1330
  1363   001010  0441               	decf	dtoa@i^0,w,c
  1364   001012  A0D8               	btfss	status,0,c
  1365   001014  EF0E  F008         	goto	u1331
  1366   001018  EF10  F008         	goto	u1330
  1367   00101C                     u1331:
  1368   00101C  EF2C  F008         	goto	l2075
  1369   001020                     u1330:
  1370   001020  5038               	movf	dtoa@n^0,w,c
  1371   001022  1039               	iorwf	(dtoa@n+1)^0,w,c
  1372   001024  103A               	iorwf	(dtoa@n+2)^0,w,c
  1373   001026  103B               	iorwf	(dtoa@n+3)^0,w,c
  1374   001028  103C               	iorwf	(dtoa@n+4)^0,w,c
  1375   00102A  103D               	iorwf	(dtoa@n+5)^0,w,c
  1376   00102C  103E               	iorwf	(dtoa@n+6)^0,w,c
  1377   00102E  103F               	iorwf	(dtoa@n+7)^0,w,c
  1378   001030  A4D8               	btfss	status,2,c
  1379   001032  EF1D  F008         	goto	u1341
  1380   001036  EF1F  F008         	goto	u1340
  1381   00103A                     u1341:
  1382   00103A  EF87  F007         	goto	l2059
  1383   00103E                     u1340:
  1384   00103E  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1385   001040  EF2C  F008         	goto	u1350
  1386   001044  5035               	movf	(dtoa@p+1)^0,w,c
  1387   001046  E106               	bnz	u1351
  1388   001048  0434               	decf	dtoa@p^0,w,c
  1389   00104A  B0D8               	btfsc	status,0,c
  1390   00104C  EF2A  F008         	goto	u1351
  1391   001050  EF2C  F008         	goto	u1350
  1392   001054                     u1351:
  1393   001054  EF87  F007         	goto	l2059
  1394   001058                     u1350:
  1395   001058                     l2075:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1398   001058  5040               	movf	dtoa@s^0,w,c
  1399   00105A  B4D8               	btfsc	status,2,c
  1400   00105C  EF32  F008         	goto	u1361
  1401   001060  EF34  F008         	goto	u1360
  1402   001064                     u1361:
  1403   001064  EF3F  F008         	goto	l2081
  1404   001068                     u1360:
  1405   001068                     
  1406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1407   001068  0641               	decf	dtoa@i^0,f,c
  1408   00106A  A0D8               	btfss	status,0,c
  1409   00106C  0642               	decf	(dtoa@i+1)^0,f,c
  1410   00106E                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1412   00106E  0ED6               	movlw	low _dbuf
  1413   001070  2441               	addwf	dtoa@i^0,w,c
  1414   001072  6ED9               	movwf	fsr2l,c
  1415   001074  0E00               	movlw	high _dbuf
  1416   001076  2042               	addwfc	(dtoa@i+1)^0,w,c
  1417   001078  6EDA               	movwf	fsr2h,c
  1418   00107A  C040  FFDF         	movff	dtoa@s,indf2
  1419   00107E                     l2081:
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1422   00107E  C020  F015         	movff	dtoa@fp,pad@fp
  1423   001082  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1424   001086  0ED6               	movlw	low _dbuf
  1425   001088  2441               	addwf	dtoa@i^0,w,c
  1426   00108A  6E17               	movwf	pad@buf^0,c
  1427   00108C  0E00               	movlw	high _dbuf
  1428   00108E  2042               	addwfc	(dtoa@i+1)^0,w,c
  1429   001090  6E18               	movwf	(pad@buf+1)^0,c
  1430   001092  C036  F019         	movff	dtoa@w,pad@p
  1431   001096  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1432   00109A  EC12  F00B         	call	_pad	;wreg free
  1433   00109E  0012               	return		;funcret
  1434   0010A0                     __end_of_dtoa:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _pad *****************
  1438 ;; Defined at:
  1439 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1442 ;;		 -> sprintf@f(11), 
  1443 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1444 ;;		 -> dbuf(32), 
  1445 ;;  p               2   24[COMRAM] int 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  w               2   29[COMRAM] int 
  1448 ;;  i               2   27[COMRAM] int 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1458 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;Total ram usage:       11 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 5
  1465 ;; This function calls:
  1466 ;;		_fputc
  1467 ;;		_fputs
  1468 ;; This function is called by:
  1469 ;;		_dtoa
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text5
  1474   001624                     __ptext5:
  1475                           	callstack 0
  1476   001624                     _pad:
  1477                           	callstack 21
  1478   001624                     
  1479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1480   001624  BE1A               	btfsc	(pad@p+1)^0,7,c
  1481   001626  EF17  F00B         	goto	u1241
  1482   00162A  EF19  F00B         	goto	u1240
  1483   00162E                     u1241:
  1484   00162E  EF1F  F00B         	goto	l2019
  1485   001632                     u1240:
  1486   001632  C019  F01E         	movff	pad@p,pad@w
  1487   001636  C01A  F01F         	movff	pad@p+1,pad@w+1
  1488   00163A  EF23  F00B         	goto	l989
  1489   00163E                     l2019:
  1490   00163E  0E00               	movlw	0
  1491   001640  6E1F               	movwf	(pad@w+1)^0,c
  1492   001642  0E00               	movlw	0
  1493   001644  6E1E               	movwf	pad@w^0,c
  1494   001646                     l989:
  1495                           
  1496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1497   001646  0E00               	movlw	0
  1498   001648  6E1D               	movwf	(pad@i+1)^0,c
  1499   00164A  0E00               	movlw	0
  1500   00164C  6E1C               	movwf	pad@i^0,c
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1503   00164E  EF35  F00B         	goto	l2025
  1504   001652                     l2021:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1507   001652  0E00               	movlw	0
  1508   001654  6E06               	movwf	(fputc@c+1)^0,c
  1509   001656  0E20               	movlw	32
  1510   001658  6E05               	movwf	fputc@c^0,c
  1511   00165A  C015  F007         	movff	pad@fp,fputc@fp
  1512   00165E  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1513   001662  EC6D  F00A         	call	_fputc	;wreg free
  1514   001666                     
  1515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1516   001666  4A1C               	infsnz	pad@i^0,f,c
  1517   001668  2A1D               	incf	(pad@i+1)^0,f,c
  1518   00166A                     l2025:
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1521   00166A  501E               	movf	pad@w^0,w,c
  1522   00166C  5C1C               	subwf	pad@i^0,w,c
  1523   00166E  501D               	movf	(pad@i+1)^0,w,c
  1524   001670  0A80               	xorlw	128
  1525   001672  6E1B               	movwf	??_pad^0,c
  1526   001674  501F               	movf	(pad@w+1)^0,w,c
  1527   001676  0A80               	xorlw	128
  1528   001678  581B               	subwfb	??_pad^0,w,c
  1529   00167A  A0D8               	btfss	status,0,c
  1530   00167C  EF42  F00B         	goto	u1251
  1531   001680  EF44  F00B         	goto	u1250
  1532   001684                     u1251:
  1533   001684  EF29  F00B         	goto	l2021
  1534   001688                     u1250:
  1535   001688                     
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1537   001688  C017  F00E         	movff	pad@buf,fputs@s
  1538   00168C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1539   001690  C015  F010         	movff	pad@fp,fputs@fp
  1540   001694  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1541   001698  EC91  F00C         	call	_fputs	;wreg free
  1542   00169C  0012               	return		;funcret
  1543   00169E                     __end_of_pad:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function _fputs *****************
  1547 ;; Defined at:
  1548 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1551 ;;		 -> dbuf(32), 
  1552 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1553 ;;		 -> sprintf@f(11), 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  i               2   18[COMRAM] int 
  1556 ;;  c               1   17[COMRAM] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2   13[COMRAM] int 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1566 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;Total ram usage:        7 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 4
  1573 ;; This function calls:
  1574 ;;		_fputc
  1575 ;; This function is called by:
  1576 ;;		_pad
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text6
  1581   001922                     __ptext6:
  1582                           	callstack 0
  1583   001922                     _fputs:
  1584                           	callstack 21
  1585   001922  0E00               	movlw	0
  1586   001924  6E14               	movwf	(fputs@i+1)^0,c
  1587   001926  0E00               	movlw	0
  1588   001928  6E13               	movwf	fputs@i^0,c
  1589   00192A  EFA2  F00C         	goto	l1933
  1590   00192E                     l1929:
  1591   00192E  C012  F005         	movff	fputs@c,fputc@c
  1592   001932  6A06               	clrf	(fputc@c+1)^0,c
  1593   001934  C010  F007         	movff	fputs@fp,fputc@fp
  1594   001938  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1595   00193C  EC6D  F00A         	call	_fputc	;wreg free
  1596   001940  4A13               	infsnz	fputs@i^0,f,c
  1597   001942  2A14               	incf	(fputs@i+1)^0,f,c
  1598   001944                     l1933:
  1599   001944  5013               	movf	fputs@i^0,w,c
  1600   001946  240E               	addwf	fputs@s^0,w,c
  1601   001948  6ED9               	movwf	fsr2l,c
  1602   00194A  5014               	movf	(fputs@i+1)^0,w,c
  1603   00194C  200F               	addwfc	(fputs@s+1)^0,w,c
  1604   00194E  6EDA               	movwf	fsr2h,c
  1605   001950  50DF               	movf	indf2,w,c
  1606   001952  6E12               	movwf	fputs@c^0,c
  1607   001954  5012               	movf	fputs@c^0,w,c
  1608   001956  A4D8               	btfss	status,2,c
  1609   001958  EFB0  F00C         	goto	u1101
  1610   00195C  EFB2  F00C         	goto	u1100
  1611   001960                     u1101:
  1612   001960  EF97  F00C         	goto	l1929
  1613   001964                     u1100:
  1614   001964  0012               	return		;funcret
  1615   001966                     __end_of_fputs:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _fputc *****************
  1619 ;; Defined at:
  1620 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  c               2    4[COMRAM] int 
  1623 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1624 ;;		 -> sprintf@f(11), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2    4[COMRAM] int 
  1629 ;; Registers used:
  1630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1640 ;;Total ram usage:        9 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 3
  1643 ;; This function calls:
  1644 ;;		_putch
  1645 ;; This function is called by:
  1646 ;;		_pad
  1647 ;;		_vfpfcnvrt
  1648 ;;		_fputs
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text7
  1653   0014DA                     __ptext7:
  1654                           	callstack 0
  1655   0014DA                     _fputc:
  1656                           	callstack 24
  1657   0014DA  5007               	movf	fputc@fp^0,w,c
  1658   0014DC  1008               	iorwf	(fputc@fp+1)^0,w,c
  1659   0014DE  B4D8               	btfsc	status,2,c
  1660   0014E0  EF74  F00A         	goto	u1061
  1661   0014E4  EF76  F00A         	goto	u1060
  1662   0014E8                     u1061:
  1663   0014E8  EF7F  F00A         	goto	l1917
  1664   0014EC                     u1060:
  1665   0014EC  5007               	movf	fputc@fp^0,w,c
  1666   0014EE  1008               	iorwf	(fputc@fp+1)^0,w,c
  1667   0014F0  A4D8               	btfss	status,2,c
  1668   0014F2  EF7D  F00A         	goto	u1071
  1669   0014F6  EF7F  F00A         	goto	u1070
  1670   0014FA                     u1071:
  1671   0014FA  EF84  F00A         	goto	l1919
  1672   0014FE                     u1070:
  1673   0014FE                     l1917:
  1674   0014FE  5005               	movf	fputc@c^0,w,c
  1675   001500  ECF1  F00D         	call	_putch
  1676   001504  EFD1  F00A         	goto	l1044
  1677   001508                     l1919:
  1678   001508  EE20 F009          	lfsr	2,9
  1679   00150C  5007               	movf	fputc@fp^0,w,c
  1680   00150E  26D9               	addwf	fsr2l,f,c
  1681   001510  5008               	movf	(fputc@fp+1)^0,w,c
  1682   001512  22DA               	addwfc	fsr2h,f,c
  1683   001514  50DE               	movf	postinc2,w,c
  1684   001516  10DE               	iorwf	postinc2,w,c
  1685   001518  B4D8               	btfsc	status,2,c
  1686   00151A  EF91  F00A         	goto	u1081
  1687   00151E  EF93  F00A         	goto	u1080
  1688   001522                     u1081:
  1689   001522  EFAE  F00A         	goto	l1923
  1690   001526                     u1080:
  1691   001526  EE20 F009          	lfsr	2,9
  1692   00152A  5007               	movf	fputc@fp^0,w,c
  1693   00152C  26D9               	addwf	fsr2l,f,c
  1694   00152E  5008               	movf	(fputc@fp+1)^0,w,c
  1695   001530  22DA               	addwfc	fsr2h,f,c
  1696   001532  EE10 F003          	lfsr	1,3
  1697   001536  5007               	movf	fputc@fp^0,w,c
  1698   001538  26E1               	addwf	fsr1l,f,c
  1699   00153A  5008               	movf	(fputc@fp+1)^0,w,c
  1700   00153C  22E2               	addwfc	fsr1h,f,c
  1701   00153E  50DE               	movf	postinc2,w,c
  1702   001540  5CE6               	subwf	postinc1,w,c
  1703   001542  50E6               	movf	postinc1,w,c
  1704   001544  0A80               	xorlw	128
  1705   001546  6E0D               	movwf	(??_fputc+4)^0,c
  1706   001548  50DE               	movf	postinc2,w,c
  1707   00154A  0A80               	xorlw	128
  1708   00154C  580D               	subwfb	(??_fputc+4)^0,w,c
  1709   00154E  B0D8               	btfsc	status,0,c
  1710   001550  EFAC  F00A         	goto	u1091
  1711   001554  EFAE  F00A         	goto	u1090
  1712   001558                     u1091:
  1713   001558  EFD1  F00A         	goto	l1044
  1714   00155C                     u1090:
  1715   00155C                     l1923:
  1716   00155C  EE20 F003          	lfsr	2,3
  1717   001560  5007               	movf	fputc@fp^0,w,c
  1718   001562  26D9               	addwf	fsr2l,f,c
  1719   001564  5008               	movf	(fputc@fp+1)^0,w,c
  1720   001566  22DA               	addwfc	fsr2h,f,c
  1721   001568  CFDE F009          	movff	postinc2,??_fputc
  1722   00156C  CFDD F00A          	movff	postdec2,??_fputc+1
  1723   001570  C007  FFD9         	movff	fputc@fp,fsr2l
  1724   001574  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1725   001578  CFDE F00B          	movff	postinc2,??_fputc+2
  1726   00157C  CFDD F00C          	movff	postdec2,??_fputc+3
  1727   001580  5009               	movf	??_fputc^0,w,c
  1728   001582  240B               	addwf	(??_fputc+2)^0,w,c
  1729   001584  6ED9               	movwf	fsr2l,c
  1730   001586  500A               	movf	(??_fputc+1)^0,w,c
  1731   001588  200C               	addwfc	(??_fputc+3)^0,w,c
  1732   00158A  6EDA               	movwf	fsr2h,c
  1733   00158C  C005  FFDF         	movff	fputc@c,indf2
  1734   001590  EE20 F003          	lfsr	2,3
  1735   001594  5007               	movf	fputc@fp^0,w,c
  1736   001596  26D9               	addwf	fsr2l,f,c
  1737   001598  5008               	movf	(fputc@fp+1)^0,w,c
  1738   00159A  22DA               	addwfc	fsr2h,f,c
  1739   00159C  2ADE               	incf	postinc2,f,c
  1740   00159E  0E00               	movlw	0
  1741   0015A0  22DD               	addwfc	postdec2,f,c
  1742   0015A2                     l1044:
  1743   0015A2  0012               	return		;funcret
  1744   0015A4                     __end_of_fputc:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _putch *****************
  1748 ;; Defined at:
  1749 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  c               1    wreg     unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  c               1    0[COMRAM] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 2
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_fputc
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text8
  1778   001BE2                     __ptext8:
  1779                           	callstack 0
  1780   001BE2                     _putch:
  1781                           	callstack 24
  1782   001BE2  0012               	return		;funcret
  1783   001BE4                     __end_of_putch:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _abs *****************
  1787 ;; Defined at:
  1788 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  a               2   22[COMRAM] int 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2   22[COMRAM] int 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1806 ;;Total ram usage:        4 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 2
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_dtoa
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text9
  1817   0019A8                     __ptext9:
  1818                           	callstack 0
  1819   0019A8                     _abs:
  1820                           	callstack 24
  1821   0019A8  BE18               	btfsc	(abs@a+1)^0,7,c
  1822   0019AA  EFE1  F00C         	goto	u1260
  1823   0019AE  5018               	movf	(abs@a+1)^0,w,c
  1824   0019B0  E106               	bnz	u1261
  1825   0019B2  0417               	decf	abs@a^0,w,c
  1826   0019B4  B0D8               	btfsc	status,0,c
  1827   0019B6  EFDF  F00C         	goto	u1261
  1828   0019BA  EFE1  F00C         	goto	u1260
  1829   0019BE                     u1261:
  1830   0019BE  EFEF  F00C         	goto	l1029
  1831   0019C2                     u1260:
  1832   0019C2  C017  F019         	movff	abs@a,??_abs
  1833   0019C6  C018  F01A         	movff	abs@a+1,??_abs+1
  1834   0019CA  1E19               	comf	??_abs^0,f,c
  1835   0019CC  1E1A               	comf	(??_abs+1)^0,f,c
  1836   0019CE  4A19               	infsnz	??_abs^0,f,c
  1837   0019D0  2A1A               	incf	(??_abs+1)^0,f,c
  1838   0019D2  C019  F017         	movff	??_abs,?_abs
  1839   0019D6  C01A  F018         	movff	??_abs+1,?_abs+1
  1840   0019DA  EFF3  F00C         	goto	l1032
  1841   0019DE                     l1029:
  1842   0019DE  C017  F017         	movff	abs@a,?_abs
  1843   0019E2  C018  F018         	movff	abs@a+1,?_abs+1
  1844   0019E6                     l1032:
  1845   0019E6  0012               	return		;funcret
  1846   0019E8                     __end_of_abs:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function ___aomod *****************
  1850 ;; Defined at:
  1851 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  dividend        8    4[COMRAM] long long 
  1854 ;;  divisor         8   12[COMRAM] long long 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  sign            1   21[COMRAM] unsigned char 
  1857 ;;  counter         1   20[COMRAM] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  8    4[COMRAM] long long 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1867 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;Total ram usage:       18 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 2
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_dtoa
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text10
  1882   001228                     __ptext10:
  1883                           	callstack 0
  1884   001228                     ___aomod:
  1885                           	callstack 24
  1886   001228  0E00               	movlw	0
  1887   00122A  6E16               	movwf	___aomod@sign^0,c
  1888   00122C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  1889   00122E  EF1D  F009         	goto	u1180
  1890   001232  EF1B  F009         	goto	u1181
  1891   001236                     u1181:
  1892   001236  EF2F  F009         	goto	l1987
  1893   00123A                     u1180:
  1894   00123A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  1895   00123C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  1896   00123E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  1897   001240  1E09               	comf	(___aomod@dividend+4)^0,f,c
  1898   001242  1E08               	comf	(___aomod@dividend+3)^0,f,c
  1899   001244  1E07               	comf	(___aomod@dividend+2)^0,f,c
  1900   001246  1E06               	comf	(___aomod@dividend+1)^0,f,c
  1901   001248  6C05               	negf	___aomod@dividend^0,c
  1902   00124A  0E00               	movlw	0
  1903   00124C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  1904   00124E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  1905   001250  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  1906   001252  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  1907   001254  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  1908   001256  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  1909   001258  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  1910   00125A  0E01               	movlw	1
  1911   00125C  6E16               	movwf	___aomod@sign^0,c
  1912   00125E                     l1987:
  1913   00125E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  1914   001260  EF36  F009         	goto	u1190
  1915   001264  EF34  F009         	goto	u1191
  1916   001268                     u1191:
  1917   001268  EF46  F009         	goto	l1991
  1918   00126C                     u1190:
  1919   00126C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  1920   00126E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  1921   001270  1E12               	comf	(___aomod@divisor+5)^0,f,c
  1922   001272  1E11               	comf	(___aomod@divisor+4)^0,f,c
  1923   001274  1E10               	comf	(___aomod@divisor+3)^0,f,c
  1924   001276  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  1925   001278  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  1926   00127A  6C0D               	negf	___aomod@divisor^0,c
  1927   00127C  0E00               	movlw	0
  1928   00127E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  1929   001280  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  1930   001282  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  1931   001284  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  1932   001286  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  1933   001288  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  1934   00128A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  1935   00128C                     l1991:
  1936   00128C  500D               	movf	___aomod@divisor^0,w,c
  1937   00128E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  1938   001290  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  1939   001292  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  1940   001294  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  1941   001296  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  1942   001298  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  1943   00129A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  1944   00129C  B4D8               	btfsc	status,2,c
  1945   00129E  EF53  F009         	goto	u1201
  1946   0012A2  EF55  F009         	goto	u1200
  1947   0012A6                     u1201:
  1948   0012A6  EF9D  F009         	goto	l2007
  1949   0012AA                     u1200:
  1950   0012AA  0E01               	movlw	1
  1951   0012AC  6E15               	movwf	___aomod@counter^0,c
  1952   0012AE  EF63  F009         	goto	l1997
  1953   0012B2                     l1995:
  1954   0012B2  90D8               	bcf	status,0,c
  1955   0012B4  360D               	rlcf	___aomod@divisor^0,f,c
  1956   0012B6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  1957   0012B8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  1958   0012BA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  1959   0012BC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  1960   0012BE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  1961   0012C0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  1962   0012C2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  1963   0012C4  2A15               	incf	___aomod@counter^0,f,c
  1964   0012C6                     l1997:
  1965   0012C6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  1966   0012C8  EF68  F009         	goto	u1211
  1967   0012CC  EF6A  F009         	goto	u1210
  1968   0012D0                     u1211:
  1969   0012D0  EF59  F009         	goto	l1995
  1970   0012D4                     u1210:
  1971   0012D4                     l1999:
  1972   0012D4  500D               	movf	___aomod@divisor^0,w,c
  1973   0012D6  5C05               	subwf	___aomod@dividend^0,w,c
  1974   0012D8  500E               	movf	(___aomod@divisor+1)^0,w,c
  1975   0012DA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  1976   0012DC  500F               	movf	(___aomod@divisor+2)^0,w,c
  1977   0012DE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  1978   0012E0  5010               	movf	(___aomod@divisor+3)^0,w,c
  1979   0012E2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  1980   0012E4  5011               	movf	(___aomod@divisor+4)^0,w,c
  1981   0012E6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  1982   0012E8  5012               	movf	(___aomod@divisor+5)^0,w,c
  1983   0012EA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  1984   0012EC  5013               	movf	(___aomod@divisor+6)^0,w,c
  1985   0012EE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  1986   0012F0  5014               	movf	(___aomod@divisor+7)^0,w,c
  1987   0012F2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  1988   0012F4  A0D8               	btfss	status,0,c
  1989   0012F6  EF7F  F009         	goto	u1221
  1990   0012FA  EF81  F009         	goto	u1220
  1991   0012FE                     u1221:
  1992   0012FE  EF91  F009         	goto	l2003
  1993   001302                     u1220:
  1994   001302  500D               	movf	___aomod@divisor^0,w,c
  1995   001304  5E05               	subwf	___aomod@dividend^0,f,c
  1996   001306  500E               	movf	(___aomod@divisor+1)^0,w,c
  1997   001308  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  1998   00130A  500F               	movf	(___aomod@divisor+2)^0,w,c
  1999   00130C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2000   00130E  5010               	movf	(___aomod@divisor+3)^0,w,c
  2001   001310  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2002   001312  5011               	movf	(___aomod@divisor+4)^0,w,c
  2003   001314  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2004   001316  5012               	movf	(___aomod@divisor+5)^0,w,c
  2005   001318  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2006   00131A  5013               	movf	(___aomod@divisor+6)^0,w,c
  2007   00131C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2008   00131E  5014               	movf	(___aomod@divisor+7)^0,w,c
  2009   001320  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2010   001322                     l2003:
  2011   001322  90D8               	bcf	status,0,c
  2012   001324  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2013   001326  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2014   001328  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2015   00132A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2016   00132C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2017   00132E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2018   001330  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2019   001332  320D               	rrcf	___aomod@divisor^0,f,c
  2020   001334  2E15               	decfsz	___aomod@counter^0,f,c
  2021   001336  EF6A  F009         	goto	l1999
  2022   00133A                     l2007:
  2023   00133A  5016               	movf	___aomod@sign^0,w,c
  2024   00133C  B4D8               	btfsc	status,2,c
  2025   00133E  EFA3  F009         	goto	u1231
  2026   001342  EFA5  F009         	goto	u1230
  2027   001346                     u1231:
  2028   001346  EFB5  F009         	goto	l2011
  2029   00134A                     u1230:
  2030   00134A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2031   00134C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2032   00134E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2033   001350  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2034   001352  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2035   001354  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2036   001356  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2037   001358  6C05               	negf	___aomod@dividend^0,c
  2038   00135A  0E00               	movlw	0
  2039   00135C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2040   00135E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2041   001360  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2042   001362  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2043   001364  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2044   001366  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2045   001368  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2046   00136A                     l2011:
  2047   00136A  C005  F005         	movff	___aomod@dividend,?___aomod
  2048   00136E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2049   001372  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2050   001376  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2051   00137A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2052   00137E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2053   001382  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2054   001386  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2055   00138A  0012               	return		;funcret
  2056   00138C                     __end_of___aomod:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function ___aodiv *****************
  2060 ;; Defined at:
  2061 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  dividend        8    4[COMRAM] long long 
  2064 ;;  divisor         8   12[COMRAM] long long 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  quotient        8   22[COMRAM] long long 
  2067 ;;  sign            1   21[COMRAM] unsigned char 
  2068 ;;  counter         1   20[COMRAM] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  8    4[COMRAM] long long 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2078 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;Total ram usage:       26 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 2
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_dtoa
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text11
  2093   0010A0                     __ptext11:
  2094                           	callstack 0
  2095   0010A0                     ___aodiv:
  2096                           	callstack 24
  2097   0010A0  0E00               	movlw	0
  2098   0010A2  6E16               	movwf	___aodiv@sign^0,c
  2099   0010A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2100   0010A6  EF59  F008         	goto	u1110
  2101   0010AA  EF57  F008         	goto	u1111
  2102   0010AE                     u1111:
  2103   0010AE  EF6B  F008         	goto	l1943
  2104   0010B2                     u1110:
  2105   0010B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2106   0010B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2107   0010B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2108   0010B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2109   0010BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2110   0010BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2111   0010BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2112   0010C0  6C0D               	negf	___aodiv@divisor^0,c
  2113   0010C2  0E00               	movlw	0
  2114   0010C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2115   0010C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2116   0010C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2117   0010CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2118   0010CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2119   0010CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2120   0010D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2121   0010D2  0E01               	movlw	1
  2122   0010D4  6E16               	movwf	___aodiv@sign^0,c
  2123   0010D6                     l1943:
  2124   0010D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2125   0010D8  EF72  F008         	goto	u1120
  2126   0010DC  EF70  F008         	goto	u1121
  2127   0010E0                     u1121:
  2128   0010E0  EF84  F008         	goto	l1949
  2129   0010E4                     u1120:
  2130   0010E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2131   0010E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2132   0010E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2133   0010EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2134   0010EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2135   0010EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2136   0010F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2137   0010F2  6C05               	negf	___aodiv@dividend^0,c
  2138   0010F4  0E00               	movlw	0
  2139   0010F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2140   0010F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2141   0010FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2142   0010FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2143   0010FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2144   001100  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2145   001102  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2146   001104  0E01               	movlw	1
  2147   001106  1A16               	xorwf	___aodiv@sign^0,f,c
  2148   001108                     l1949:
  2149   001108  EE20  F017         	lfsr	2,___aodiv@quotient
  2150   00110C  0E07               	movlw	7
  2151   00110E                     u1131:
  2152   00110E  6ADE               	clrf	postinc2,c
  2153   001110  06E8               	decf	wreg,f,c
  2154   001112  E2FD               	bc	u1131
  2155   001114  500D               	movf	___aodiv@divisor^0,w,c
  2156   001116  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2157   001118  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2158   00111A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2159   00111C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2160   00111E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2161   001120  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2162   001122  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2163   001124  B4D8               	btfsc	status,2,c
  2164   001126  EF97  F008         	goto	u1141
  2165   00112A  EF99  F008         	goto	u1140
  2166   00112E                     u1141:
  2167   00112E  EFEB  F008         	goto	l1971
  2168   001132                     u1140:
  2169   001132  0E01               	movlw	1
  2170   001134  6E15               	movwf	___aodiv@counter^0,c
  2171   001136  EFA7  F008         	goto	l1957
  2172   00113A                     l1955:
  2173   00113A  90D8               	bcf	status,0,c
  2174   00113C  360D               	rlcf	___aodiv@divisor^0,f,c
  2175   00113E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2176   001140  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2177   001142  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2178   001144  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2179   001146  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2180   001148  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2181   00114A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2182   00114C  2A15               	incf	___aodiv@counter^0,f,c
  2183   00114E                     l1957:
  2184   00114E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2185   001150  EFAC  F008         	goto	u1151
  2186   001154  EFAE  F008         	goto	u1150
  2187   001158                     u1151:
  2188   001158  EF9D  F008         	goto	l1955
  2189   00115C                     u1150:
  2190   00115C                     l1959:
  2191   00115C  90D8               	bcf	status,0,c
  2192   00115E  3617               	rlcf	___aodiv@quotient^0,f,c
  2193   001160  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2194   001162  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2195   001164  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2196   001166  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2197   001168  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2198   00116A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2199   00116C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2200   00116E  500D               	movf	___aodiv@divisor^0,w,c
  2201   001170  5C05               	subwf	___aodiv@dividend^0,w,c
  2202   001172  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2203   001174  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2204   001176  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2205   001178  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2206   00117A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2207   00117C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2208   00117E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2209   001180  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2210   001182  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2211   001184  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2212   001186  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2213   001188  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2214   00118A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2215   00118C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2216   00118E  A0D8               	btfss	status,0,c
  2217   001190  EFCC  F008         	goto	u1161
  2218   001194  EFCE  F008         	goto	u1160
  2219   001198                     u1161:
  2220   001198  EFDF  F008         	goto	l1967
  2221   00119C                     u1160:
  2222   00119C  500D               	movf	___aodiv@divisor^0,w,c
  2223   00119E  5E05               	subwf	___aodiv@dividend^0,f,c
  2224   0011A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2225   0011A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2226   0011A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2227   0011A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2228   0011A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2229   0011AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2230   0011AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2231   0011AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2232   0011B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2233   0011B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2234   0011B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2235   0011B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2236   0011B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2237   0011BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2238   0011BC  8017               	bsf	___aodiv@quotient^0,0,c
  2239   0011BE                     l1967:
  2240   0011BE  90D8               	bcf	status,0,c
  2241   0011C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2242   0011C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2243   0011C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2244   0011C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2245   0011C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2246   0011CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2247   0011CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2248   0011CE  320D               	rrcf	___aodiv@divisor^0,f,c
  2249   0011D0  2E15               	decfsz	___aodiv@counter^0,f,c
  2250   0011D2  EFAE  F008         	goto	l1959
  2251   0011D6                     l1971:
  2252   0011D6  5016               	movf	___aodiv@sign^0,w,c
  2253   0011D8  B4D8               	btfsc	status,2,c
  2254   0011DA  EFF1  F008         	goto	u1171
  2255   0011DE  EFF3  F008         	goto	u1170
  2256   0011E2                     u1171:
  2257   0011E2  EF03  F009         	goto	l1975
  2258   0011E6                     u1170:
  2259   0011E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2260   0011E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2261   0011EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2262   0011EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2263   0011EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2264   0011F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2265   0011F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2266   0011F4  6C17               	negf	___aodiv@quotient^0,c
  2267   0011F6  0E00               	movlw	0
  2268   0011F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2269   0011FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2270   0011FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2271   0011FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2272   001200  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2273   001202  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2274   001204  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2275   001206                     l1975:
  2276   001206  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2277   00120A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2278   00120E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2279   001212  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2280   001216  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2281   00121A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2282   00121E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2283   001222  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2284   001226  0012               	return		;funcret
  2285   001228                     __end_of___aodiv:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _sendTxBuf *****************
  2289 ;; Defined at:
  2290 ;;		line 93 in file "serial.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 3
  2311 ;; This function calls:
  2312 ;;		_isDataInTxBuf
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text12
  2319   001A84                     __ptext12:
  2320                           	callstack 0
  2321   001A84                     _sendTxBuf:
  2322                           	callstack 27
  2323   001A84                     
  2324                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  2325   001A84  ECC9  F00D         	call	_isDataInTxBuf	;wreg free
  2326   001A88  0900               	iorlw	0
  2327   001A8A  B4D8               	btfsc	status,2,c
  2328   001A8C  EF4A  F00D         	goto	u1011
  2329   001A90  EF4C  F00D         	goto	u1010
  2330   001A94                     u1011:
  2331   001A94  EF53  F00D         	goto	l1861
  2332   001A98                     u1010:
  2333   001A98  010E               	movlb	14	; () banked
  2334   001A9A  852D               	bsf	45,2,b	;volatile
  2335   001A9C                     
  2336                           ; BSR set to: 14
  2337                           ;serial.c: 95:     DataFlag =1;}
  2338   001A9C  0E01               	movlw	1
  2339   001A9E  0100               	movlb	0	; () banked
  2340   001AA0  6FFE               	movwf	_DataFlag& (0+255),b	;volatile
  2341   001AA2  EF56  F00D         	goto	l198
  2342   001AA6                     l1861:
  2343                           
  2344                           ;serial.c: 97:         DataFlag=0;}
  2345   001AA6  0E00               	movlw	0
  2346   001AA8  0100               	movlb	0	; () banked
  2347   001AAA  6FFE               	movwf	_DataFlag& (0+255),b	;volatile
  2348   001AAC                     l198:
  2349                           
  2350                           ; BSR set to: 0
  2351   001AAC  0012               	return		;funcret
  2352   001AAE                     __end_of_sendTxBuf:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _isDataInTxBuf *****************
  2356 ;; Defined at:
  2357 ;;		line 80 in file "serial.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      unsigned char 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 2
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_sendTxBuf
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text13
  2386   001B92                     __ptext13:
  2387                           	callstack 0
  2388   001B92                     _isDataInTxBuf:
  2389                           	callstack 27
  2390   001B92                     
  2391                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  2392   001B92  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  2393   001B94  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  2394   001B96  A4D8               	btfss	status,2,c
  2395   001B98  EFD0  F00D         	goto	u951
  2396   001B9C  EFD3  F00D         	goto	u950
  2397   001BA0                     u951:
  2398   001BA0  0E01               	movlw	1
  2399   001BA2  EFD4  F00D         	goto	u960
  2400   001BA6                     u950:
  2401   001BA6  0E00               	movlw	0
  2402   001BA8                     u960:
  2403   001BA8  0012               	return		;funcret
  2404   001BAA                     __end_of_isDataInTxBuf:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _readColours *****************
  2408 ;; Defined at:
  2409 ;;		line 93 in file "color.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  vals            2   15[COMRAM] PTR struct RGB
  2412 ;;		 -> vals(8), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 5
  2431 ;; This function calls:
  2432 ;;		_color_read_Blue
  2433 ;;		_color_read_Green
  2434 ;;		_color_read_Red
  2435 ;;		_color_read_lum
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text14
  2442   00169E                     __ptext14:
  2443                           	callstack 0
  2444   00169E                     _readColours:
  2445                           	callstack 25
  2446   00169E                     
  2447                           ;color.c: 94:     vals ->R = color_read_Red();
  2448   00169E  ECF7  F00B         	call	_color_read_Red	;wreg free
  2449   0016A2  C010  FFD9         	movff	readColours@vals,fsr2l
  2450   0016A6  C011  FFDA         	movff	readColours@vals+1,fsr2h
  2451   0016AA  C009  FFDE         	movff	?_color_read_Red,postinc2
  2452   0016AE  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  2453                           
  2454                           ;color.c: 95:     vals ->B = color_read_Blue();
  2455   0016B2  EC47  F00C         	call	_color_read_Blue	;wreg free
  2456   0016B6  EE20 F004          	lfsr	2,4
  2457   0016BA  5010               	movf	readColours@vals^0,w,c
  2458   0016BC  26D9               	addwf	fsr2l,f,c
  2459   0016BE  5011               	movf	(readColours@vals+1)^0,w,c
  2460   0016C0  22DA               	addwfc	fsr2h,f,c
  2461   0016C2  C009  FFDE         	movff	?_color_read_Blue,postinc2
  2462   0016C6  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  2463                           
  2464                           ;color.c: 96:     vals ->G = color_read_Green();
  2465   0016CA  EC1F  F00C         	call	_color_read_Green	;wreg free
  2466   0016CE  EE20 F002          	lfsr	2,2
  2467   0016D2  5010               	movf	readColours@vals^0,w,c
  2468   0016D4  26D9               	addwf	fsr2l,f,c
  2469   0016D6  5011               	movf	(readColours@vals+1)^0,w,c
  2470   0016D8  22DA               	addwfc	fsr2h,f,c
  2471   0016DA  C009  FFDE         	movff	?_color_read_Green,postinc2
  2472   0016DE  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  2473                           
  2474                           ;color.c: 97:     vals ->L = color_read_lum();
  2475   0016E2  ECCF  F00B         	call	_color_read_lum	;wreg free
  2476   0016E6  EE20 F006          	lfsr	2,6
  2477   0016EA  5010               	movf	readColours@vals^0,w,c
  2478   0016EC  26D9               	addwf	fsr2l,f,c
  2479   0016EE  5011               	movf	(readColours@vals+1)^0,w,c
  2480   0016F0  22DA               	addwfc	fsr2h,f,c
  2481   0016F2  C009  FFDE         	movff	?_color_read_lum,postinc2
  2482   0016F6  C00A  FFDD         	movff	?_color_read_lum+1,postdec2
  2483   0016FA  0012               	return		;funcret
  2484   0016FC                     __end_of_readColours:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _color_read_lum *****************
  2488 ;; Defined at:
  2489 ;;		line 37 in file "color.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  tmp             2   13[COMRAM] unsigned int 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  2    8[COMRAM] unsigned int 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;Total ram usage:        7 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 4
  2510 ;; This function calls:
  2511 ;;		_I2C_2_Master_Read
  2512 ;;		_I2C_2_Master_RepStart
  2513 ;;		_I2C_2_Master_Start
  2514 ;;		_I2C_2_Master_Stop
  2515 ;;		_I2C_2_Master_Write
  2516 ;; This function is called by:
  2517 ;;		_readColours
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text15
  2522   00179E                     __ptext15:
  2523                           	callstack 0
  2524   00179E                     _color_read_lum:
  2525                           	callstack 25
  2526   00179E                     
  2527                           ;color.c: 39:  unsigned int tmp;;color.c: 40:  I2C_2_Master_Start();
  2528   00179E  ECEC  F00D         	call	_I2C_2_Master_Start	;wreg free
  2529                           
  2530                           ;color.c: 41:  I2C_2_Master_Write(0x52 | 0x00);
  2531   0017A2  0E52               	movlw	82
  2532   0017A4  ECDC  F00D         	call	_I2C_2_Master_Write
  2533                           
  2534                           ;color.c: 42:  I2C_2_Master_Write(0xA0 | 0x14);
  2535   0017A8  0EB4               	movlw	180
  2536   0017AA  ECDC  F00D         	call	_I2C_2_Master_Write
  2537                           
  2538                           ;color.c: 43:  I2C_2_Master_RepStart();
  2539   0017AE  ECE2  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2540                           
  2541                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x01);
  2542   0017B2  0E53               	movlw	83
  2543   0017B4  ECDC  F00D         	call	_I2C_2_Master_Write
  2544                           
  2545                           ;color.c: 45:  tmp=I2C_2_Master_Read(1);
  2546   0017B8  0E01               	movlw	1
  2547   0017BA  ECB3  F00C         	call	_I2C_2_Master_Read
  2548   0017BE  6E0B               	movwf	??_color_read_lum^0,c
  2549   0017C0  500B               	movf	??_color_read_lum^0,w,c
  2550   0017C2  6E0E               	movwf	color_read_lum@tmp^0,c
  2551   0017C4  6A0F               	clrf	(color_read_lum@tmp+1)^0,c
  2552                           
  2553                           ;color.c: 46:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2554   0017C6  0E00               	movlw	0
  2555   0017C8  ECB3  F00C         	call	_I2C_2_Master_Read
  2556   0017CC  6E0B               	movwf	??_color_read_lum^0,c
  2557   0017CE  500B               	movf	??_color_read_lum^0,w,c
  2558   0017D0  6E0D               	movwf	(??_color_read_lum+2)^0,c
  2559   0017D2  6A0C               	clrf	(??_color_read_lum+1)^0,c
  2560   0017D4  500E               	movf	color_read_lum@tmp^0,w,c
  2561   0017D6  100C               	iorwf	(??_color_read_lum+1)^0,w,c
  2562   0017D8  6E0E               	movwf	color_read_lum@tmp^0,c
  2563   0017DA  500F               	movf	(color_read_lum@tmp+1)^0,w,c
  2564   0017DC  100D               	iorwf	(??_color_read_lum+2)^0,w,c
  2565   0017DE  6E0F               	movwf	(color_read_lum@tmp+1)^0,c
  2566                           
  2567                           ;color.c: 47:  I2C_2_Master_Stop();
  2568   0017E0  ECE7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2569   0017E4                     
  2570                           ;color.c: 48:  return tmp;
  2571   0017E4  C00E  F009         	movff	color_read_lum@tmp,?_color_read_lum
  2572   0017E8  C00F  F00A         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  2573   0017EC  0012               	return		;funcret
  2574   0017EE                     __end_of_color_read_lum:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function _color_read_Red *****************
  2578 ;; Defined at:
  2579 ;;		line 51 in file "color.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  tmp             2   13[COMRAM] unsigned int 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    8[COMRAM] unsigned int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;Total ram usage:        7 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 4
  2600 ;; This function calls:
  2601 ;;		_I2C_2_Master_Read
  2602 ;;		_I2C_2_Master_RepStart
  2603 ;;		_I2C_2_Master_Start
  2604 ;;		_I2C_2_Master_Stop
  2605 ;;		_I2C_2_Master_Write
  2606 ;; This function is called by:
  2607 ;;		_readColours
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text16
  2612   0017EE                     __ptext16:
  2613                           	callstack 0
  2614   0017EE                     _color_read_Red:
  2615                           	callstack 25
  2616   0017EE                     
  2617                           ;color.c: 53:  unsigned int tmp;;color.c: 54:  I2C_2_Master_Start();
  2618   0017EE  ECEC  F00D         	call	_I2C_2_Master_Start	;wreg free
  2619                           
  2620                           ;color.c: 55:  I2C_2_Master_Write(0x52 | 0x00);
  2621   0017F2  0E52               	movlw	82
  2622   0017F4  ECDC  F00D         	call	_I2C_2_Master_Write
  2623                           
  2624                           ;color.c: 56:  I2C_2_Master_Write(0xA0 | 0x16);
  2625   0017F8  0EB6               	movlw	182
  2626   0017FA  ECDC  F00D         	call	_I2C_2_Master_Write
  2627                           
  2628                           ;color.c: 57:  I2C_2_Master_RepStart();
  2629   0017FE  ECE2  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2630                           
  2631                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x01);
  2632   001802  0E53               	movlw	83
  2633   001804  ECDC  F00D         	call	_I2C_2_Master_Write
  2634                           
  2635                           ;color.c: 59:  tmp=I2C_2_Master_Read(1);
  2636   001808  0E01               	movlw	1
  2637   00180A  ECB3  F00C         	call	_I2C_2_Master_Read
  2638   00180E  6E0B               	movwf	??_color_read_Red^0,c
  2639   001810  500B               	movf	??_color_read_Red^0,w,c
  2640   001812  6E0E               	movwf	color_read_Red@tmp^0,c
  2641   001814  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2642                           
  2643                           ;color.c: 60:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2644   001816  0E00               	movlw	0
  2645   001818  ECB3  F00C         	call	_I2C_2_Master_Read
  2646   00181C  6E0B               	movwf	??_color_read_Red^0,c
  2647   00181E  500B               	movf	??_color_read_Red^0,w,c
  2648   001820  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2649   001822  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2650   001824  500E               	movf	color_read_Red@tmp^0,w,c
  2651   001826  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2652   001828  6E0E               	movwf	color_read_Red@tmp^0,c
  2653   00182A  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2654   00182C  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2655   00182E  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2656                           
  2657                           ;color.c: 61:  I2C_2_Master_Stop();
  2658   001830  ECE7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2659   001834                     
  2660                           ;color.c: 62:  return tmp;
  2661   001834  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2662   001838  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2663   00183C  0012               	return		;funcret
  2664   00183E                     __end_of_color_read_Red:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _color_read_Green *****************
  2668 ;; Defined at:
  2669 ;;		line 64 in file "color.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  tmp             2   13[COMRAM] unsigned int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  2    8[COMRAM] unsigned int 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;Total ram usage:        7 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 4
  2690 ;; This function calls:
  2691 ;;		_I2C_2_Master_Read
  2692 ;;		_I2C_2_Master_RepStart
  2693 ;;		_I2C_2_Master_Start
  2694 ;;		_I2C_2_Master_Stop
  2695 ;;		_I2C_2_Master_Write
  2696 ;; This function is called by:
  2697 ;;		_readColours
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text17
  2702   00183E                     __ptext17:
  2703                           	callstack 0
  2704   00183E                     _color_read_Green:
  2705                           	callstack 25
  2706   00183E                     
  2707                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  2708   00183E  ECEC  F00D         	call	_I2C_2_Master_Start	;wreg free
  2709                           
  2710                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  2711   001842  0E52               	movlw	82
  2712   001844  ECDC  F00D         	call	_I2C_2_Master_Write
  2713                           
  2714                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  2715   001848  0EB6               	movlw	182
  2716   00184A  ECDC  F00D         	call	_I2C_2_Master_Write
  2717                           
  2718                           ;color.c: 70:  I2C_2_Master_RepStart();
  2719   00184E  ECE2  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2720                           
  2721                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  2722   001852  0E53               	movlw	83
  2723   001854  ECDC  F00D         	call	_I2C_2_Master_Write
  2724                           
  2725                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  2726   001858  0E01               	movlw	1
  2727   00185A  ECB3  F00C         	call	_I2C_2_Master_Read
  2728   00185E  6E0B               	movwf	??_color_read_Green^0,c
  2729   001860  500B               	movf	??_color_read_Green^0,w,c
  2730   001862  6E0E               	movwf	color_read_Green@tmp^0,c
  2731   001864  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2732                           
  2733                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2734   001866  0E00               	movlw	0
  2735   001868  ECB3  F00C         	call	_I2C_2_Master_Read
  2736   00186C  6E0B               	movwf	??_color_read_Green^0,c
  2737   00186E  500B               	movf	??_color_read_Green^0,w,c
  2738   001870  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2739   001872  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2740   001874  500E               	movf	color_read_Green@tmp^0,w,c
  2741   001876  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2742   001878  6E0E               	movwf	color_read_Green@tmp^0,c
  2743   00187A  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2744   00187C  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2745   00187E  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2746                           
  2747                           ;color.c: 74:  I2C_2_Master_Stop();
  2748   001880  ECE7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2749   001884                     
  2750                           ;color.c: 75:  return tmp;
  2751   001884  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2752   001888  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2753   00188C  0012               	return		;funcret
  2754   00188E                     __end_of_color_read_Green:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function _color_read_Blue *****************
  2758 ;; Defined at:
  2759 ;;		line 78 in file "color.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  tmp             2   13[COMRAM] unsigned int 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  2    8[COMRAM] unsigned int 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2775 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2776 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;Total ram usage:        7 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 4
  2780 ;; This function calls:
  2781 ;;		_I2C_2_Master_Read
  2782 ;;		_I2C_2_Master_RepStart
  2783 ;;		_I2C_2_Master_Start
  2784 ;;		_I2C_2_Master_Stop
  2785 ;;		_I2C_2_Master_Write
  2786 ;; This function is called by:
  2787 ;;		_readColours
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text18
  2792   00188E                     __ptext18:
  2793                           	callstack 0
  2794   00188E                     _color_read_Blue:
  2795                           	callstack 25
  2796   00188E                     
  2797                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  2798   00188E  ECEC  F00D         	call	_I2C_2_Master_Start	;wreg free
  2799                           
  2800                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  2801   001892  0E52               	movlw	82
  2802   001894  ECDC  F00D         	call	_I2C_2_Master_Write
  2803                           
  2804                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  2805   001898  0EBA               	movlw	186
  2806   00189A  ECDC  F00D         	call	_I2C_2_Master_Write
  2807                           
  2808                           ;color.c: 84:  I2C_2_Master_RepStart();
  2809   00189E  ECE2  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2810                           
  2811                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  2812   0018A2  0E53               	movlw	83
  2813   0018A4  ECDC  F00D         	call	_I2C_2_Master_Write
  2814                           
  2815                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  2816   0018A8  0E01               	movlw	1
  2817   0018AA  ECB3  F00C         	call	_I2C_2_Master_Read
  2818   0018AE  6E0B               	movwf	??_color_read_Blue^0,c
  2819   0018B0  500B               	movf	??_color_read_Blue^0,w,c
  2820   0018B2  6E0E               	movwf	color_read_Blue@tmp^0,c
  2821   0018B4  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  2822                           
  2823                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2824   0018B6  0E00               	movlw	0
  2825   0018B8  ECB3  F00C         	call	_I2C_2_Master_Read
  2826   0018BC  6E0B               	movwf	??_color_read_Blue^0,c
  2827   0018BE  500B               	movf	??_color_read_Blue^0,w,c
  2828   0018C0  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  2829   0018C2  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  2830   0018C4  500E               	movf	color_read_Blue@tmp^0,w,c
  2831   0018C6  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  2832   0018C8  6E0E               	movwf	color_read_Blue@tmp^0,c
  2833   0018CA  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  2834   0018CC  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  2835   0018CE  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  2836                           
  2837                           ;color.c: 88:  I2C_2_Master_Stop();
  2838   0018D0  ECE7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2839   0018D4                     
  2840                           ;color.c: 89:  return tmp;
  2841   0018D4  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  2842   0018D8  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2843   0018DC  0012               	return		;funcret
  2844   0018DE                     __end_of_color_read_Blue:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _I2C_2_Master_RepStart *****************
  2848 ;; Defined at:
  2849 ;;		line 33 in file "i2c.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 3
  2870 ;; This function calls:
  2871 ;;		_I2C_2_Master_Idle
  2872 ;; This function is called by:
  2873 ;;		_color_read_lum
  2874 ;;		_color_read_Red
  2875 ;;		_color_read_Green
  2876 ;;		_color_read_Blue
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text19
  2881   001BC4                     __ptext19:
  2882                           	callstack 0
  2883   001BC4                     _I2C_2_Master_RepStart:
  2884                           	callstack 25
  2885   001BC4                     
  2886                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2887   001BC4  EC96  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2888   001BC8                     
  2889                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2890   001BC8  010E               	movlb	14	; () banked
  2891   001BCA  83DA               	bsf	218,1,b	;volatile
  2892   001BCC                     
  2893                           ; BSR set to: 14
  2894   001BCC  0012               	return		;funcret
  2895   001BCE                     __end_of_I2C_2_Master_RepStart:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _I2C_2_Master_Read *****************
  2899 ;; Defined at:
  2900 ;;		line 51 in file "i2c.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  ack             1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  ack             1    6[COMRAM] unsigned char 
  2905 ;;  tmp             1    7[COMRAM] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      unsigned char 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2919 ;;Total ram usage:        3 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 3
  2922 ;; This function calls:
  2923 ;;		_I2C_2_Master_Idle
  2924 ;; This function is called by:
  2925 ;;		_color_read_lum
  2926 ;;		_color_read_Red
  2927 ;;		_color_read_Green
  2928 ;;		_color_read_Blue
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text20
  2933   001966                     __ptext20:
  2934                           	callstack 0
  2935   001966                     _I2C_2_Master_Read:
  2936                           	callstack 25
  2937                           
  2938                           ; BSR set to: 14
  2939                           ;incstack = 0
  2940                           ;I2C_2_Master_Read@ack stored from wreg
  2941   001966  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  2942   001968                     
  2943                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2944   001968  EC96  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2945   00196C                     
  2946                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2947   00196C  010E               	movlb	14	; () banked
  2948   00196E  87DA               	bsf	218,3,b	;volatile
  2949                           
  2950                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2951   001970  EC96  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2952   001974                     
  2953                           ;i2c.c: 57:   tmp = SSP2BUF;
  2954   001974  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2955                           
  2956                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2957   001978  EC96  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2958   00197C                     
  2959                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2960   00197C  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  2961   00197E  B4D8               	btfsc	status,2,c
  2962   001980  EFC4  F00C         	goto	u891
  2963   001984  EFC8  F00C         	goto	u890
  2964   001988                     u891:
  2965   001988  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2966   00198A  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  2967   00198C  EFC9  F00C         	goto	u908
  2968   001990                     u890:
  2969   001990  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2970   001992                     u908:
  2971   001992  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  2972   001994  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  2973   001996  010E               	movlb	14	; () banked
  2974   001998  51DA               	movf	218,w,b	;volatile
  2975   00199A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2976   00199C  0BDF               	andlw	-33
  2977   00199E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2978   0019A0  6FDA               	movwf	218,b	;volatile
  2979   0019A2                     
  2980                           ; BSR set to: 14
  2981                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2982   0019A2  89DA               	bsf	218,4,b	;volatile
  2983   0019A4                     
  2984                           ; BSR set to: 14
  2985                           ;i2c.c: 61:   return tmp;
  2986   0019A4  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  2987   0019A6                     
  2988                           ; BSR set to: 14
  2989   0019A6  0012               	return		;funcret
  2990   0019A8                     __end_of_I2C_2_Master_Read:
  2991                           	callstack 0
  2992                           
  2993 ;; *************** function _initUSART4 *****************
  2994 ;; Defined at:
  2995 ;;		line 4 in file "serial.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; Hardware stack levels required when called: 2
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text21
  3024   001B74                     __ptext21:
  3025                           	callstack 0
  3026   001B74                     _initUSART4:
  3027                           	callstack 28
  3028   001B74                     
  3029                           ;serial.c: 5:     RC0PPS = 0x12;
  3030   001B74  0E12               	movlw	18
  3031   001B76  010E               	movlb	14	; () banked
  3032   001B78  6F62               	movwf	98,b	;volatile
  3033                           
  3034                           ;serial.c: 6:     RX4PPS = 0x11;
  3035   001B7A  0E11               	movlw	17
  3036   001B7C  6F15               	movwf	21,b	;volatile
  3037   001B7E                     
  3038                           ; BSR set to: 14
  3039                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  3040   001B7E  97E9               	bcf	233,3,b	;volatile
  3041   001B80                     
  3042                           ; BSR set to: 14
  3043                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  3044   001B80  95E8               	bcf	232,2,b	;volatile
  3045                           
  3046                           ;serial.c: 9:     SP4BRGL = 51;
  3047   001B82  0E33               	movlw	51
  3048   001B84  6FE5               	movwf	229,b	;volatile
  3049                           
  3050                           ;serial.c: 10:     SP4BRGH = 0;
  3051   001B86  0E00               	movlw	0
  3052   001B88  6FE6               	movwf	230,b	;volatile
  3053   001B8A                     
  3054                           ; BSR set to: 14
  3055                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  3056   001B8A  89E7               	bsf	231,4,b	;volatile
  3057   001B8C                     
  3058                           ; BSR set to: 14
  3059                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  3060   001B8C  8BE8               	bsf	232,5,b	;volatile
  3061   001B8E                     
  3062                           ; BSR set to: 14
  3063                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  3064   001B8E  8FE7               	bsf	231,7,b	;volatile
  3065   001B90                     
  3066                           ; BSR set to: 14
  3067   001B90  0012               	return		;funcret
  3068   001B92                     __end_of_initUSART4:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _color_click_init *****************
  3072 ;; Defined at:
  3073 ;;		line 5 in file "color.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;Total ram usage:        1 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 5
  3094 ;; This function calls:
  3095 ;;		_I2C_2_Master_Init
  3096 ;;		_color_writetoaddr
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text22
  3103   0019E8                     __ptext22:
  3104                           	callstack 0
  3105   0019E8                     _color_click_init:
  3106                           	callstack 25
  3107   0019E8                     
  3108                           ;color.c: 8:     I2C_2_Master_Init();
  3109   0019E8  EC57  F00D         	call	_I2C_2_Master_Init	;wreg free
  3110   0019EC                     
  3111                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3112   0019EC  0E01               	movlw	1
  3113   0019EE  6E07               	movwf	color_writetoaddr@value^0,c
  3114   0019F0  0E00               	movlw	0
  3115   0019F2  ECAA  F00D         	call	_color_writetoaddr
  3116   0019F6                     
  3117                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3118   0019F6  0E3F               	movlw	63
  3119   0019F8  6E09               	movwf	??_color_click_init^0,c
  3120   0019FA  0E55               	movlw	85
  3121   0019FC                     u1427:
  3122   0019FC  2EE8               	decfsz	wreg,f,c
  3123   0019FE  D7FE               	bra	u1427
  3124   001A00  2E09               	decfsz	??_color_click_init^0,f,c
  3125   001A02  D7FC               	bra	u1427
  3126   001A04  F000               	nop	
  3127   001A06                     
  3128                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3129   001A06  0E03               	movlw	3
  3130   001A08  6E07               	movwf	color_writetoaddr@value^0,c
  3131   001A0A  0E00               	movlw	0
  3132   001A0C  ECAA  F00D         	call	_color_writetoaddr
  3133   001A10                     
  3134                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3135   001A10  0ED5               	movlw	213
  3136   001A12  6E07               	movwf	color_writetoaddr@value^0,c
  3137   001A14  0E01               	movlw	1
  3138   001A16  ECAA  F00D         	call	_color_writetoaddr
  3139   001A1A                     
  3140                           ;color.c: 20:     LATGbits.LATG1=0;
  3141   001A1A  927F               	bcf	127,1,c	;volatile
  3142   001A1C                     
  3143                           ;color.c: 21:     LATAbits.LATA4=0;
  3144   001A1C  9879               	bcf	121,4,c	;volatile
  3145   001A1E                     
  3146                           ;color.c: 22:     LATFbits.LATF7=0;
  3147   001A1E  9E7E               	bcf	126,7,c	;volatile
  3148   001A20                     
  3149                           ;color.c: 23:     TRISGbits.TRISG1=0;
  3150   001A20  9287               	bcf	135,1,c	;volatile
  3151   001A22                     
  3152                           ;color.c: 24:     TRISAbits.TRISA4 = 0;
  3153   001A22  9881               	bcf	129,4,c	;volatile
  3154   001A24                     
  3155                           ;color.c: 25:     TRISFbits.TRISF7 = 0;
  3156   001A24  9E86               	bcf	134,7,c	;volatile
  3157   001A26  0012               	return		;funcret
  3158   001A28                     __end_of_color_click_init:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _color_writetoaddr *****************
  3162 ;; Defined at:
  3163 ;;		line 29 in file "color.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  address         1    wreg     unsigned char 
  3166 ;;  value           1    6[COMRAM] unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  address         1    7[COMRAM] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3178 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;Total ram usage:        2 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 4
  3185 ;; This function calls:
  3186 ;;		_I2C_2_Master_Start
  3187 ;;		_I2C_2_Master_Stop
  3188 ;;		_I2C_2_Master_Write
  3189 ;; This function is called by:
  3190 ;;		_color_click_init
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text23
  3195   001B54                     __ptext23:
  3196                           	callstack 0
  3197   001B54                     _color_writetoaddr:
  3198                           	callstack 25
  3199                           
  3200                           ;incstack = 0
  3201                           ;color_writetoaddr@address stored from wreg
  3202   001B54  6E08               	movwf	color_writetoaddr@address^0,c
  3203   001B56                     
  3204                           ;color.c: 30:     I2C_2_Master_Start();
  3205   001B56  ECEC  F00D         	call	_I2C_2_Master_Start	;wreg free
  3206                           
  3207                           ;color.c: 31:     I2C_2_Master_Write(0x52 | 0x00);
  3208   001B5A  0E52               	movlw	82
  3209   001B5C  ECDC  F00D         	call	_I2C_2_Master_Write
  3210                           
  3211                           ;color.c: 32:     I2C_2_Master_Write(0x80 | address);
  3212   001B60  5008               	movf	color_writetoaddr@address^0,w,c
  3213   001B62  0980               	iorlw	128
  3214   001B64  ECDC  F00D         	call	_I2C_2_Master_Write
  3215                           
  3216                           ;color.c: 33:     I2C_2_Master_Write(value);
  3217   001B68  5007               	movf	color_writetoaddr@value^0,w,c
  3218   001B6A  ECDC  F00D         	call	_I2C_2_Master_Write
  3219                           
  3220                           ;color.c: 34:     I2C_2_Master_Stop();
  3221   001B6E  ECE7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3222   001B72  0012               	return		;funcret
  3223   001B74                     __end_of_color_writetoaddr:
  3224                           	callstack 0
  3225                           
  3226 ;; *************** function _I2C_2_Master_Write *****************
  3227 ;; Defined at:
  3228 ;;		line 45 in file "i2c.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  data_byte       1    wreg     unsigned char 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  data_byte       1    5[COMRAM] unsigned char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;Total ram usage:        1 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; Hardware stack levels required when called: 3
  3249 ;; This function calls:
  3250 ;;		_I2C_2_Master_Idle
  3251 ;; This function is called by:
  3252 ;;		_color_writetoaddr
  3253 ;;		_color_read_lum
  3254 ;;		_color_read_Red
  3255 ;;		_color_read_Green
  3256 ;;		_color_read_Blue
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text24
  3261   001BB8                     __ptext24:
  3262                           	callstack 0
  3263   001BB8                     _I2C_2_Master_Write:
  3264                           	callstack 25
  3265                           
  3266                           ;incstack = 0
  3267                           ;I2C_2_Master_Write@data_byte stored from wreg
  3268   001BB8  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3269   001BBA                     
  3270                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3271   001BBA  EC96  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3272   001BBE                     
  3273                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3274   001BBE  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3275   001BC2  0012               	return		;funcret
  3276   001BC4                     __end_of_I2C_2_Master_Write:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function _I2C_2_Master_Stop *****************
  3280 ;; Defined at:
  3281 ;;		line 39 in file "i2c.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; Hardware stack levels required when called: 3
  3302 ;; This function calls:
  3303 ;;		_I2C_2_Master_Idle
  3304 ;; This function is called by:
  3305 ;;		_color_writetoaddr
  3306 ;;		_color_read_lum
  3307 ;;		_color_read_Red
  3308 ;;		_color_read_Green
  3309 ;;		_color_read_Blue
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text25
  3314   001BCE                     __ptext25:
  3315                           	callstack 0
  3316   001BCE                     _I2C_2_Master_Stop:
  3317                           	callstack 25
  3318   001BCE                     
  3319                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3320   001BCE  EC96  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3321   001BD2                     
  3322                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3323   001BD2  010E               	movlb	14	; () banked
  3324   001BD4  85DA               	bsf	218,2,b	;volatile
  3325   001BD6                     
  3326                           ; BSR set to: 14
  3327   001BD6  0012               	return		;funcret
  3328   001BD8                     __end_of_I2C_2_Master_Stop:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _I2C_2_Master_Start *****************
  3332 ;; Defined at:
  3333 ;;		line 27 in file "i2c.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 3
  3354 ;; This function calls:
  3355 ;;		_I2C_2_Master_Idle
  3356 ;; This function is called by:
  3357 ;;		_color_writetoaddr
  3358 ;;		_color_read_lum
  3359 ;;		_color_read_Red
  3360 ;;		_color_read_Green
  3361 ;;		_color_read_Blue
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text26
  3366   001BD8                     __ptext26:
  3367                           	callstack 0
  3368   001BD8                     _I2C_2_Master_Start:
  3369                           	callstack 25
  3370   001BD8                     
  3371                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3372   001BD8  EC96  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3373   001BDC                     
  3374                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3375   001BDC  010E               	movlb	14	; () banked
  3376   001BDE  81DA               	bsf	218,0,b	;volatile
  3377   001BE0                     
  3378                           ; BSR set to: 14
  3379   001BE0  0012               	return		;funcret
  3380   001BE2                     __end_of_I2C_2_Master_Start:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _I2C_2_Master_Idle *****************
  3384 ;; Defined at:
  3385 ;;		line 22 in file "i2c.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;Total ram usage:        1 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 2
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_I2C_2_Master_Start
  3410 ;;		_I2C_2_Master_RepStart
  3411 ;;		_I2C_2_Master_Stop
  3412 ;;		_I2C_2_Master_Write
  3413 ;;		_I2C_2_Master_Read
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text27
  3418   001B2C                     __ptext27:
  3419                           	callstack 0
  3420   001B2C                     _I2C_2_Master_Idle:
  3421                           	callstack 25
  3422   001B2C                     l90:
  3423   001B2C  010E               	movlb	14	; () banked
  3424   001B2E  B5D8               	btfsc	216,2,b	;volatile
  3425   001B30  EF9C  F00D         	goto	u771
  3426   001B34  EF9E  F00D         	goto	u770
  3427   001B38                     u771:
  3428   001B38  EF96  F00D         	goto	l90
  3429   001B3C                     u770:
  3430   001B3C                     
  3431                           ; BSR set to: 14
  3432   001B3C  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3433   001B40  0E1F               	movlw	31
  3434   001B42  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3435   001B44  A4D8               	btfss	status,2,c
  3436   001B46  EFA7  F00D         	goto	u781
  3437   001B4A  EFA9  F00D         	goto	u780
  3438   001B4E                     u781:
  3439   001B4E  EF96  F00D         	goto	l90
  3440   001B52                     u780:
  3441   001B52                     
  3442                           ; BSR set to: 14
  3443   001B52  0012               	return		;funcret
  3444   001B54                     __end_of_I2C_2_Master_Idle:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _I2C_2_Master_Init *****************
  3448 ;; Defined at:
  3449 ;;		line 4 in file "i2c.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 2
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_color_click_init
  3474 ;;		_main
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text28
  3479   001AAE                     __ptext28:
  3480                           	callstack 0
  3481   001AAE                     _I2C_2_Master_Init:
  3482                           	callstack 27
  3483   001AAE                     
  3484                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3485   001AAE  010E               	movlb	14	; () banked
  3486   001AB0  51D9               	movf	217,w,b	;volatile
  3487   001AB2  0BF0               	andlw	-16
  3488   001AB4  0908               	iorlw	8
  3489   001AB6  6FD9               	movwf	217,b	;volatile
  3490   001AB8                     
  3491                           ; BSR set to: 14
  3492                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3493   001AB8  8BD9               	bsf	217,5,b	;volatile
  3494                           
  3495                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3496   001ABA  0E9F               	movlw	159
  3497   001ABC  6FD6               	movwf	214,b	;volatile
  3498   001ABE                     
  3499                           ; BSR set to: 14
  3500                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3501   001ABE  8A84               	bsf	132,5,c	;volatile
  3502   001AC0                     
  3503                           ; BSR set to: 14
  3504                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3505   001AC0  8C84               	bsf	132,6,c	;volatile
  3506   001AC2                     
  3507                           ; BSR set to: 14
  3508                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3509   001AC2  9BA7               	bcf	167,5,b	;volatile
  3510   001AC4                     
  3511                           ; BSR set to: 14
  3512                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3513   001AC4  9DA7               	bcf	167,6,b	;volatile
  3514                           
  3515                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3516   001AC6  0E1D               	movlw	29
  3517   001AC8  6F1D               	movwf	29,b	;volatile
  3518                           
  3519                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3520   001ACA  0E1E               	movlw	30
  3521   001ACC  6F1C               	movwf	28,b	;volatile
  3522                           
  3523                           ;i2c.c: 18:   RD5PPS=0x1C;
  3524   001ACE  0E1C               	movlw	28
  3525   001AD0  6F6F               	movwf	111,b	;volatile
  3526                           
  3527                           ;i2c.c: 19:   RD6PPS=0x1B;
  3528   001AD2  0E1B               	movlw	27
  3529   001AD4  6F70               	movwf	112,b	;volatile
  3530   001AD6                     
  3531                           ; BSR set to: 14
  3532   001AD6  0012               	return		;funcret
  3533   001AD8                     __end_of_I2C_2_Master_Init:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _TxBufferedString *****************
  3537 ;; Defined at:
  3538 ;;		line 85 in file "serial.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  string          2    5[COMRAM] PTR unsigned char 
  3541 ;;		 -> main@buf(50), 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3557 ;;Total ram usage:        2 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; Hardware stack levels required when called: 3
  3560 ;; This function calls:
  3561 ;;		_putCharToTxBuf
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text29
  3568   001A28                     __ptext29:
  3569                           	callstack 0
  3570   001A28                     _TxBufferedString:
  3571                           	callstack 27
  3572   001A28                     
  3573                           ;serial.c: 86:  while (*string!=0){
  3574   001A28  EF1F  F00D         	goto	l1853
  3575   001A2C                     l1849:
  3576                           
  3577                           ;serial.c: 87:         putCharToTxBuf(*string++);
  3578   001A2C  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  3579   001A30  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3580   001A34  50DF               	movf	indf2,w,c
  3581   001A36  EC6C  F00D         	call	_putCharToTxBuf
  3582   001A3A  4A06               	infsnz	TxBufferedString@string^0,f,c
  3583   001A3C  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  3584   001A3E                     l1853:
  3585                           
  3586                           ;serial.c: 86:  while (*string!=0){
  3587   001A3E  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  3588   001A42  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3589   001A46  50DF               	movf	indf2,w,c
  3590   001A48  A4D8               	btfss	status,2,c
  3591   001A4A  EF29  F00D         	goto	u1001
  3592   001A4E  EF2B  F00D         	goto	u1000
  3593   001A52                     u1001:
  3594   001A52  EF16  F00D         	goto	l1849
  3595   001A56                     u1000:
  3596   001A56  0012               	return		;funcret
  3597   001A58                     __end_of_TxBufferedString:
  3598                           	callstack 0
  3599                           
  3600 ;; *************** function _putCharToTxBuf *****************
  3601 ;; Defined at:
  3602 ;;		line 72 in file "serial.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  byte            1    wreg     unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  byte            1    4[COMRAM] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;Total ram usage:        1 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 2
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_TxBufferedString
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text30
  3631   001AD8                     __ptext30:
  3632                           	callstack 0
  3633   001AD8                     _putCharToTxBuf:
  3634                           	callstack 27
  3635                           
  3636                           ;incstack = 0
  3637                           ;putCharToTxBuf@byte stored from wreg
  3638   001AD8  6E05               	movwf	putCharToTxBuf@byte^0,c
  3639   001ADA                     
  3640                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3641   001ADA  0E3B               	movlw	59
  3642   001ADC  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3643   001ADE  EF73  F00D         	goto	u941
  3644   001AE2  EF75  F00D         	goto	u940
  3645   001AE6                     u941:
  3646   001AE6  EF77  F00D         	goto	l1777
  3647   001AEA                     u940:
  3648   001AEA  0E00               	movlw	0
  3649   001AEC  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  3650   001AEE                     l1777:
  3651                           
  3652                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3653   001AEE  0E00               	movlw	low _EUSART4TXbuf
  3654   001AF0  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3655   001AF2  6ED9               	movwf	fsr2l,c
  3656   001AF4  6ADA               	clrf	fsr2h,c
  3657   001AF6  0E01               	movlw	high _EUSART4TXbuf
  3658   001AF8  22DA               	addwfc	fsr2h,f,c
  3659   001AFA  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  3660   001AFE  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3661   001B00  0012               	return		;funcret
  3662   001B02                     __end_of_putCharToTxBuf:
  3663                           	callstack 0
  3664                           
  3665 ;; *************** function _Interrupts_init *****************
  3666 ;; Defined at:
  3667 ;;		line 10 in file "interrupts.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		None
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 2
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text31
  3696   001BAA                     __ptext31:
  3697                           	callstack 0
  3698   001BAA                     _Interrupts_init:
  3699                           	callstack 28
  3700   001BAA                     
  3701                           ;interrupts.c: 12:     INTCONbits.IPEN=0;
  3702   001BAA  9AF2               	bcf	242,5,c	;volatile
  3703                           
  3704                           ;interrupts.c: 13:     PIE2bits.C1IE=1;
  3705   001BAC  010E               	movlb	14	; () banked
  3706   001BAE  812B               	bsf	43,0,b	;volatile
  3707                           
  3708                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  3709   001BB0  8CF2               	bsf	242,6,c	;volatile
  3710                           
  3711                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  3712   001BB2  8EF2               	bsf	242,7,c	;volatile
  3713                           
  3714                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  3715   001BB4  872D               	bsf	45,3,b	;volatile
  3716   001BB6                     
  3717                           ; BSR set to: 14
  3718   001BB6  0012               	return		;funcret
  3719   001BB8                     __end_of_Interrupts_init:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function _HighISR *****************
  3723 ;; Defined at:
  3724 ;;		line 25 in file "interrupts.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;Total ram usage:        2 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 1
  3745 ;; This function calls:
  3746 ;;		_getCharFromTxBuf
  3747 ;;		_putCharToRxBuf
  3748 ;; This function is called by:
  3749 ;;		Interrupt level 2
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	intcode
  3754   000008                     __pintcode:
  3755                           	callstack 0
  3756   000008                     _HighISR:
  3757                           	callstack 21
  3758                           
  3759                           ; BSR set to: 14
  3760                           ;incstack = 0
  3761   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3762   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3763   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3764   000012                     
  3765                           ;interrupts.c: 27:     if (PIR4bits.TX4IF){
  3766   000012  010E               	movlb	14	; () banked
  3767   000014  A537               	btfss	55,2,b	;volatile
  3768   000016  EF0F  F000         	goto	i2u103_41
  3769   00001A  EF11  F000         	goto	i2u103_40
  3770   00001E                     i2u103_41:
  3771   00001E  EF15  F000         	goto	i2l237
  3772   000022                     i2u103_40:
  3773   000022                     
  3774                           ; BSR set to: 14
  3775                           ;interrupts.c: 28:         TX4REG = getCharFromTxBuf();
  3776   000022  EC2C  F00D         	call	_getCharFromTxBuf	;wreg free
  3777   000026  010E               	movlb	14	; () banked
  3778   000028  6FE4               	movwf	228,b	;volatile
  3779   00002A                     i2l237:
  3780                           
  3781                           ; BSR set to: 14
  3782                           ;interrupts.c: 33:     if (PIR4bits.RC4IF){
  3783   00002A  A737               	btfss	55,3,b	;volatile
  3784   00002C  EF1A  F000         	goto	i2u104_41
  3785   000030  EF1C  F000         	goto	i2u104_40
  3786   000034                     i2u104_41:
  3787   000034  EF1F  F000         	goto	i2l239
  3788   000038                     i2u104_40:
  3789   000038                     
  3790                           ; BSR set to: 14
  3791                           ;interrupts.c: 34:         putCharToRxBuf(RC4REG);
  3792   000038  51E3               	movf	227,w,b	;volatile
  3793   00003A  EC81  F00D         	call	_putCharToRxBuf
  3794   00003E                     i2l239:
  3795   00003E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3796   000042  C003  FFD9         	movff	??_HighISR,fsr2l
  3797   000046  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3798   000048  0011               	retfie		f
  3799   00004A                     __end_of_HighISR:
  3800                           	callstack 0
  3801                           
  3802 ;; *************** function _putCharToRxBuf *****************
  3803 ;; Defined at:
  3804 ;;		line 52 in file "serial.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  byte            1    wreg     unsigned char 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  byte            1    0[COMRAM] unsigned char 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;Total ram usage:        1 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_HighISR
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text33
  3832   001B02                     __ptext33:
  3833                           	callstack 0
  3834   001B02                     _putCharToRxBuf:
  3835                           	callstack 21
  3836                           
  3837                           ;incstack = 0
  3838                           ;putCharToRxBuf@byte stored from wreg
  3839   001B02  6E01               	movwf	putCharToRxBuf@byte^0,c
  3840   001B04                     
  3841                           ;serial.c: 53:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3842   001B04  0E13               	movlw	19
  3843   001B06  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3844   001B08  EF88  F00D         	goto	i2u98_41
  3845   001B0C  EF8A  F00D         	goto	i2u98_40
  3846   001B10                     i2u98_41:
  3847   001B10  EF8C  F00D         	goto	i2l1835
  3848   001B14                     i2u98_40:
  3849   001B14  0E00               	movlw	0
  3850   001B16  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  3851   001B18                     i2l1835:
  3852                           
  3853                           ;serial.c: 54:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3854   001B18  0EB1               	movlw	low _EUSART4RXbuf
  3855   001B1A  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3856   001B1C  6ED9               	movwf	fsr2l,c
  3857   001B1E  6ADA               	clrf	fsr2h,c
  3858   001B20  0E00               	movlw	high _EUSART4RXbuf
  3859   001B22  22DA               	addwfc	fsr2h,f,c
  3860   001B24  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3861   001B28  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3862   001B2A  0012               	return		;funcret
  3863   001B2C                     __end_of_putCharToRxBuf:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _getCharFromTxBuf *****************
  3867 ;; Defined at:
  3868 ;;		line 66 in file "serial.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      unsigned char 
  3875 ;; Registers used:
  3876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;Total ram usage:        2 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_HighISR
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text34
  3896   001A58                     __ptext34:
  3897                           	callstack 0
  3898   001A58                     _getCharFromTxBuf:
  3899                           	callstack 21
  3900   001A58                     
  3901                           ;serial.c: 67:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  3902   001A58  0E3B               	movlw	59
  3903   001A5A  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3904   001A5C  EF32  F00D         	goto	i2u99_41
  3905   001A60  EF34  F00D         	goto	i2u99_40
  3906   001A64                     i2u99_41:
  3907   001A64  EF36  F00D         	goto	i2l1843
  3908   001A68                     i2u99_40:
  3909   001A68  0E00               	movlw	0
  3910   001A6A  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  3911   001A6C                     i2l1843:
  3912                           
  3913                           ;serial.c: 68:     return EUSART4TXbuf[TxBufReadCnt++];
  3914   001A6C  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  3915   001A6E  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  3916   001A70  6E01               	movwf	??_getCharFromTxBuf^0,c
  3917   001A72  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  3918   001A74  0E00               	movlw	low _EUSART4TXbuf
  3919   001A76  2401               	addwf	??_getCharFromTxBuf^0,w,c
  3920   001A78  6ED9               	movwf	fsr2l,c
  3921   001A7A  0E01               	movlw	high _EUSART4TXbuf
  3922   001A7C  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  3923   001A7E  6EDA               	movwf	fsr2h,c
  3924   001A80  50DF               	movf	indf2,w,c
  3925   001A82  0012               	return		;funcret
  3926   001A84                     __end_of_getCharFromTxBuf:
  3927                           	callstack 0
  3928                           
  3929                           	psect	rparam
  3930   000000                     
  3931                           	psect	temp
  3932   00005B                     btemp:
  3933                           	callstack 0
  3934   00005B                     	ds	1
  3935   000000                     int$flags	set	btemp
  3936   000000                     wtemp8	set	btemp+1
  3937   000000                     ttemp5	set	btemp+1
  3938   000000                     ttemp6	set	btemp+4
  3939   000000                     ttemp7	set	btemp+8
  3940                           
  3941                           	psect	idloc
  3942                           
  3943                           ;Config register IDLOC0 @ 0x200000
  3944                           ;	unspecified, using default values
  3945   200000                     	org	2097152
  3946   200000  0FFF               	dw	4095
  3947                           
  3948                           ;Config register IDLOC1 @ 0x200002
  3949                           ;	unspecified, using default values
  3950   200002                     	org	2097154
  3951   200002  0FFF               	dw	4095
  3952                           
  3953                           ;Config register IDLOC2 @ 0x200004
  3954                           ;	unspecified, using default values
  3955   200004                     	org	2097156
  3956   200004  0FFF               	dw	4095
  3957                           
  3958                           ;Config register IDLOC3 @ 0x200006
  3959                           ;	unspecified, using default values
  3960   200006                     	org	2097158
  3961   200006  0FFF               	dw	4095
  3962                           
  3963                           ;Config register IDLOC4 @ 0x200008
  3964                           ;	unspecified, using default values
  3965   200008                     	org	2097160
  3966   200008  0FFF               	dw	4095
  3967                           
  3968                           ;Config register IDLOC5 @ 0x20000A
  3969                           ;	unspecified, using default values
  3970   20000A                     	org	2097162
  3971   20000A  0FFF               	dw	4095
  3972                           
  3973                           ;Config register IDLOC6 @ 0x20000C
  3974                           ;	unspecified, using default values
  3975   20000C                     	org	2097164
  3976   20000C  0FFF               	dw	4095
  3977                           
  3978                           ;Config register IDLOC7 @ 0x20000E
  3979                           ;	unspecified, using default values
  3980   20000E                     	org	2097166
  3981   20000E  0FFF               	dw	4095
  3982                           
  3983                           	psect	config
  3984                           
  3985                           ;Config register CONFIG1L @ 0x300000
  3986                           ;	External Oscillator mode Selection bits
  3987                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3988                           ;	Power-up default value for COSC bits
  3989                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3990   300000                     	org	3145728
  3991   300000  AA                 	db	170
  3992                           
  3993                           ;Config register CONFIG1H @ 0x300001
  3994                           ;	unspecified, using default values
  3995                           ;	Clock Out Enable bit
  3996                           ;	CLKOUTEN = 0x1, unprogrammed default
  3997                           ;	Clock Switch Enable bit
  3998                           ;	CSWEN = 0x1, unprogrammed default
  3999                           ;	Fail-Safe Clock Monitor Enable bit
  4000                           ;	FCMEN = 0x1, unprogrammed default
  4001   300001                     	org	3145729
  4002   300001  FF                 	db	255
  4003                           
  4004                           ;Config register CONFIG2L @ 0x300002
  4005                           ;	unspecified, using default values
  4006                           ;	Master Clear Enable bit
  4007                           ;	MCLRE = 0x1, unprogrammed default
  4008                           ;	Power-up Timer Enable bit
  4009                           ;	PWRTE = 0x1, unprogrammed default
  4010                           ;	Low-power BOR enable bit
  4011                           ;	LPBOREN = 0x1, unprogrammed default
  4012                           ;	Brown-out Reset Enable bits
  4013                           ;	BOREN = 0x3, unprogrammed default
  4014   300002                     	org	3145730
  4015   300002  FF                 	db	255
  4016                           
  4017                           ;Config register CONFIG2H @ 0x300003
  4018                           ;	unspecified, using default values
  4019                           ;	Brown Out Reset Voltage selection bits
  4020                           ;	BORV = 0x3, unprogrammed default
  4021                           ;	ZCD Disable bit
  4022                           ;	ZCD = 0x1, unprogrammed default
  4023                           ;	PPSLOCK bit One-Way Set Enable bit
  4024                           ;	PPS1WAY = 0x1, unprogrammed default
  4025                           ;	Stack Full/Underflow Reset Enable bit
  4026                           ;	STVREN = 0x1, unprogrammed default
  4027                           ;	Debugger Enable bit
  4028                           ;	DEBUG = 0x1, unprogrammed default
  4029                           ;	Extended Instruction Set Enable bit
  4030                           ;	XINST = 0x1, unprogrammed default
  4031   300003                     	org	3145731
  4032   300003  FF                 	db	255
  4033                           
  4034                           ;Config register CONFIG3L @ 0x300004
  4035                           ;	WDT Period Select bits
  4036                           ;	WDTCPS = 0x1F, unprogrammed default
  4037                           ;	WDT operating mode
  4038                           ;	WDTE = OFF, WDT Disabled
  4039   300004                     	org	3145732
  4040   300004  9F                 	db	159
  4041                           
  4042                           ;Config register CONFIG3H @ 0x300005
  4043                           ;	unspecified, using default values
  4044                           ;	WDT Window Select bits
  4045                           ;	WDTCWS = 0x7, unprogrammed default
  4046                           ;	WDT input clock selector
  4047                           ;	WDTCCS = 0x7, unprogrammed default
  4048   300005                     	org	3145733
  4049   300005  FF                 	db	255
  4050                           
  4051                           ;Config register CONFIG4L @ 0x300006
  4052                           ;	unspecified, using default values
  4053                           ;	Write Protection Block 0
  4054                           ;	WRT0 = 0x1, unprogrammed default
  4055                           ;	Write Protection Block 1
  4056                           ;	WRT1 = 0x1, unprogrammed default
  4057                           ;	Write Protection Block 2
  4058                           ;	WRT2 = 0x1, unprogrammed default
  4059                           ;	Write Protection Block 3
  4060                           ;	WRT3 = 0x1, unprogrammed default
  4061                           ;	Write Protection Block 3
  4062                           ;	WRT4 = 0x1, unprogrammed default
  4063                           ;	Write Protection Block 3
  4064                           ;	WRT5 = 0x1, unprogrammed default
  4065                           ;	Write Protection Block 3
  4066                           ;	WRT6 = 0x1, unprogrammed default
  4067                           ;	Write Protection Block 3
  4068                           ;	WRT7 = 0x1, unprogrammed default
  4069   300006                     	org	3145734
  4070   300006  FF                 	db	255
  4071                           
  4072                           ;Config register CONFIG4H @ 0x300007
  4073                           ;	unspecified, using default values
  4074                           ;	Configuration Register Write Protection bit
  4075                           ;	WRTC = 0x1, unprogrammed default
  4076                           ;	Boot Block Write Protection bit
  4077                           ;	WRTB = 0x1, unprogrammed default
  4078                           ;	Data EEPROM Write Protection bit
  4079                           ;	WRTD = 0x1, unprogrammed default
  4080                           ;	Scanner Enable bit
  4081                           ;	SCANE = 0x1, unprogrammed default
  4082                           ;	Low Voltage Programming Enable bit
  4083                           ;	LVP = 0x1, unprogrammed default
  4084   300007                     	org	3145735
  4085   300007  FF                 	db	255
  4086                           
  4087                           ;Config register CONFIG5L @ 0x300008
  4088                           ;	unspecified, using default values
  4089                           ;	UserNVM Program Memory Code Protection bit
  4090                           ;	CP = 0x1, unprogrammed default
  4091                           ;	DataNVM Memory Code Protection bit
  4092                           ;	CPD = 0x1, unprogrammed default
  4093   300008                     	org	3145736
  4094   300008  FF                 	db	255
  4095                           
  4096                           ;Config register CONFIG5H @ 0x300009
  4097                           ;	unspecified, using default values
  4098   300009                     	org	3145737
  4099   300009  FF                 	db	255
  4100                           
  4101                           ;Config register CONFIG6L @ 0x30000A
  4102                           ;	unspecified, using default values
  4103                           ;	Table Read Protection Block 0
  4104                           ;	EBTR0 = 0x1, unprogrammed default
  4105                           ;	Table Read Protection Block 1
  4106                           ;	EBTR1 = 0x1, unprogrammed default
  4107                           ;	Table Read Protection Block 2
  4108                           ;	EBTR2 = 0x1, unprogrammed default
  4109                           ;	Table Read Protection Block 3
  4110                           ;	EBTR3 = 0x1, unprogrammed default
  4111                           ;	Table Read Protection Block 4
  4112                           ;	EBTR4 = 0x1, unprogrammed default
  4113                           ;	Table Read Protection Block 5
  4114                           ;	EBTR5 = 0x1, unprogrammed default
  4115                           ;	Table Read Protection Block 6
  4116                           ;	EBTR6 = 0x1, unprogrammed default
  4117                           ;	Table Read Protection Block 7
  4118                           ;	EBTR7 = 0x1, unprogrammed default
  4119   30000A                     	org	3145738
  4120   30000A  FF                 	db	255
  4121                           
  4122                           ;Config register CONFIG6H @ 0x30000B
  4123                           ;	unspecified, using default values
  4124                           ;	Boot Block Table Read Protection bit
  4125                           ;	EBTRB = 0x1, unprogrammed default
  4126   30000B                     	org	3145739
  4127   30000B  FF                 	db	255
  4128                           tosu	equ	0xFFF
  4129                           tosh	equ	0xFFE
  4130                           tosl	equ	0xFFD
  4131                           stkptr	equ	0xFFC
  4132                           pclatu	equ	0xFFB
  4133                           pclath	equ	0xFFA
  4134                           pcl	equ	0xFF9
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           indf0	equ	0xFEF
  4142                           postinc0	equ	0xFEE
  4143                           postdec0	equ	0xFED
  4144                           preinc0	equ	0xFEC
  4145                           plusw0	equ	0xFEB
  4146                           fsr0h	equ	0xFEA
  4147                           fsr0l	equ	0xFE9
  4148                           wreg	equ	0xFE8
  4149                           indf1	equ	0xFE7
  4150                           postinc1	equ	0xFE6
  4151                           postdec1	equ	0xFE5
  4152                           preinc1	equ	0xFE4
  4153                           plusw1	equ	0xFE3
  4154                           fsr1h	equ	0xFE2
  4155                           fsr1l	equ	0xFE1
  4156                           bsr	equ	0xFE0
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           preinc2	equ	0xFDC
  4161                           plusw2	equ	0xFDB
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        1
    BSS         141
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     81     159
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1377$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1324$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1324$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    8449
                                             31 BANK0     50    50      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7316
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      9F       5       99.4%
BITBIGSFRllhh       8F      0       0      38        0.0%
BITBIGSFRhhl        6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlllllh     36      0       0      42        0.0%
BITBIGSFRllllh      2D      0       0      41        0.0%
BITBIGSFRlllllh     2A      0       0      44        0.0%
BITBIGSFRllllll     26      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      D      0       0      47        0.0%
BITBIGSFRlllllh      C      0       0      43        0.0%
BITBIGSFRlllllh      9      0       0      45        0.0%
BITBIGSFRllhlll      8      0       0      39        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRhlhl        2      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRhlhh        1      0       0      34        0.0%
BITBIGSFRlllh        1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     135      50        0.0%
DATA                 0      0     135       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 26 19:01:34 2023

               _color_read_Red 17EE                 _color_read_lum 179E                _color_read_Blue 188E  
                           l41 17EC                             l50 18DC                             l35 1A26  
                           l44 183C                             l53 16FA                             l38 1B72  
                           l47 188C                             l90 1B2C                             l93 1B52  
                           l87 1AD6                             l96 1BE0                             l99 1BCC  
             _color_read_Green 183E                readColours@vals 0010              ??_Interrupts_init 0005  
                          l102 1BD6                            l105 1BC2                            l108 19A6  
                          l231 1BB6                            l147 1B90                            l403 1226  
                          l184 1B00                            l416 138A                            l193 1A56  
                          l187 1BA8                            l198 1AAC                            l967 174C  
                          l993 169C                            l989 1646                            l998 0EB0  
                          u770 1B3C                            u771 1B38                            u940 1AEA  
                          u780 1B52                            u908 1992                            u941 1AE6  
                          u781 1B4E                            u950 1BA6                            u951 1BA0  
                          u960 1BA8                            u890 1990                            u891 1988  
                          _abs 19A8                            _pad 1624                            _rel 00C5  
                          wreg 000FE8                           l1000 0EB8                           l1001 0EFE  
                         l1012 109E                           l1032 19E6                           l2001 1302  
                         l1025 179C                           l2011 136A                           l2003 1322  
                         l1019 14D8                           ?_abs 0017                           l1044 15A2  
                         l1052 1964                           l2005 1334                           l1029 19DE  
                         l2021 1652                           l2101 146E                           l2007 133A  
                         l2031 19C2                           l1055 1BE2                           l2023 1666  
                         l2015 1624                           l2009 134A                           l2025 166A  
                         l2017 1632                           l2041 0E88                           l2033 0E24  
                         l2105 149E                           l2121 1792                           l2027 1688  
                         l2019 163E                           l2051 0EE6                           l2043 0EA4  
                         l2035 0E44                           l2115 174E                           l2131 171E  
                         l2029 19A8                           l2061 0F14                           l2053 0EF2  
                         l2045 0EC0                           l2037 0E58                           l2109 14B0  
                         l2117 175A                           l2133 173A                           l2125 16FC  
                         l2141 15AC                           l2071 1020                           l2063 0F96  
                         l2055 0EFA                           l2047 0ED0                           l2039 0E68  
                         l2119 1776                           l2127 170E                           l2151 1606  
                         l2143 15B0                           l2081 107E                           l2073 103E  
                         l2065 0F9C                           l2057 0F06                           l2049 0ED6  
                         l2129 1716                           l2153 160A                           l2145 15B4  
                         l2137 15A4                           l2075 1058                           l2067 0FA2  
                         l2059 0F0E                           l2091 13CC                           l2147 15C0  
                         l2139 15A8                           l1621 1B3C                           l1701 19A4  
                         l2077 1068                           l2069 1006                           l2093 13D0  
                         l2085 138C                           l2149 15F6                           l2079 106E  
                         l2095 13E0                           l2087 13B0                           l1801 1A06  
                         l2097 13FC                           l2089 13BE                           l1619 1B2C  
                         l1811 1A20                           l1803 1A10                           l2099 1418  
                         l1741 1AC0                           l1813 1A22                           l1805 1A1A  
                         l1821 1B7E                           l1743 1AC2                           l1735 1AAE  
                         l1815 1A24                           l1807 1A1C                           l1823 1B80  
                         l1751 17E4                           l1745 1AC4                           l1737 1AB8  
                         l1681 1BBE                           l1809 1A1E                           l1825 1B8A  
                         l1761 183E                           l1817 169E                           l1921 1526  
                         l1913 14DA                           l1851 1A3A                           l1739 1ABE  
                         l1675 1BD8                           l1683 1BCE                           l1747 1B56  
                         l1827 1B8C                           l1819 1B74                           l1691 1968  
                         l1763 1884                           l1755 17EE                           l1923 155C  
                         l1915 14EC                           l1931 1940                           l1773 1ADA  
                         l1853 1A3E                           l1677 1BDC                           l1685 1BD2  
                         l1829 1B8E                           l1693 196C                           l1757 1834  
                         l1749 179E                           l1781 1B92                           l1861 1AA6  
                         l1941 10D2                           l1917 14FE                           l1933 1944  
                         l1863 1BAA                           l1775 1AEA                           l1847 1A28  
                         l1679 1BBA                           l1695 1974                           l1687 1BC4  
                         l1767 188E                           l1855 1A84                           l1951 1114  
                         l1943 10D6                           l1935 10A0                           l1919 1508  
                         l1927 1922                           l1777 1AEE                           l1849 1A2C  
                         l1697 197C                           l1689 1BC8                           l1769 18D4  
                         l1857 1A98                           l1961 116E                           l1953 1132  
                         l1945 10E4                           l1937 10A4                           l1929 192E  
                         l1779 1AFE                           l1795 19E8                           l1699 19A2  
                         l1859 1A9C                           l1963 119C                           l1955 113A  
                         l1971 11D6                           l1947 1104                           l1939 10B2  
                         l1797 19EC                           l1973 11E6                           l1965 11BC  
                         l1957 114E                           l1949 1108                           l1981 122C  
                         ?_pad 0015                           l1799 19F6                           l1975 1206  
                         l1967 11BE                           l1959 115C                           l1991 128C  
                         l1983 123A                           l1969 11D0                           l1993 12AA  
                         l1985 125A                           l1995 12B2                           l1987 125E  
                         l1979 1228                           l1997 12C6                           l1989 126C  
                         l1999 12D4                           STR_1 0E01                           u1000 1A56  
                         u1001 1A52                           u1010 1A98                           u1011 1A94  
                         u1100 1964                           u1101 1960                           u1110 10B2  
                         u1111 10AE                           u1120 10E4                           u1200 12AA  
                         u1121 10E0                           u1201 12A6                           u1210 12D4  
                         u1131 110E                           u1211 12D0                           u1140 1132  
                         u1220 1302                           u1060 14EC                           u1300 0EA4  
                         u1141 112E                           u1221 12FE                           u1061 14E8  
                         u1301 0EA0                           u1150 115C                           u1230 134A  
                         u1070 14FE                           u1310 0ED0                           u1151 1158  
                         u1231 1346                           u1071 14FA                           u1311 0ECC  
                         u1160 119C                           u1080 1526                           u1240 1632  
                         u1320 0EE6                           u1400 1792                           u1161 1198  
                         u1081 1522                           u1241 162E                           u1321 0EE2  
                         u1401 178E                           u1170 11E6                           u1090 155C  
                         u1250 1688                           u1330 1020                           u1410 161C  
                         u1171 11E2                           u1091 1558                           u1251 1684  
                         u1331 101C                           u1411 1618                           u1180 123A  
                         u1260 19C2                           u1340 103E                           u1181 1236  
                         u1261 19BE                           u1341 103A                           u1190 126C  
                         u1350 1058                           u1270 0E54                           u1191 1268  
                         u1351 1054                           u1271 0E4E                           u1360 1068  
                         u1280 0E56                   _BAUD4CONbits 000EE9                           u1361 1064  
                         u1290 0E68                           u1370 13B0                           u1427 19FC  
                         u1291 0E64                           u1371 13AC                           u1380 13FC  
                         u1381 13F8                           u1390 1418                           u1391 1414  
                         abs@a 0017                           _dbuf 00D6                           _main 15A4  
                         _dtoa 0E24                           _prec 00D3                           _vals 00F6  
                         pad@i 001C                           pad@p 0019                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001E                           fsr2l 000FD9                           btemp 005B  
                         start 004A         __end_of_color_read_Red 183E                __end_of_HighISR 004A  
       __end_of_color_read_lum 17EE                   ___param_bank 000000                          ??_abs 0019  
                        ??_pad 001B                   ?_readColours 0010                __end_of___aodiv 1228  
                        ?_main 0001                          ?_dtoa 0020                __end_of___aomod 138C  
                        i2l180 1A82                          i2l173 1B2A                          i2l237 002A  
                        i2l239 003E                   vfpfcnvrt@fmt 0045     __end_of_I2C_2_Master_Start 1BE2  
   __end_of_I2C_2_Master_Write 1BC4                          _flags 00D5                          _fputc 14DA  
                        _fputs 1922                          pad@fp 0015                          _width 00D1  
                        _putch 1BE2                          dtoa@d 0022                          dtoa@i 0041  
                        dtoa@n 0038                          dtoa@p 0034                          dtoa@s 0040  
                        dtoa@w 0036                          tablat 000FF5                          ttemp5 005C  
                        ttemp6 005F                          ttemp7 0063                          status 000FD8  
                        wtemp8 005C                __end_of_sprintf 174E        __end_of_color_read_Blue 18DE  
        _I2C_2_Master_RepStart 1BC4             putCharToRxBuf@byte 0001                ?_color_read_Red 0009  
              ?_color_read_lum 0009                __initialization 18DE                   __end_of_main 1624  
                 __end_of_dtoa 10A0             putCharToTxBuf@byte 0005                         ??_main 0057  
                       ??_dtoa 002A                  __activetblptr 000001                         ?_fputc 0005  
                       ?_fputs 000E                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RD5PPS 000E6F                         _RD6PPS 000E70  
                       i2l1831 1B04                         i2l1841 1A68                         i2l1833 1B14  
                       i2l1843 1A6C                         i2l1835 1B18                         i2l1837 1B28  
                       i2l1839 1A58                         i2l1893 0038                         i2l1887 0012  
                       i2l1889 0022                      ??_HighISR 0003       __end_of_color_click_init 1A28  
                       _RX4PPS 000E15                         _TX4REG 000EE4                   vfprintf@cfmt 0055  
             _getCharFromTxBuf 1A58                      ??___aodiv 0015                      ??___aomod 0015  
                       clear_0 18F6                         clear_1 1902                         isa$std 000001  
                       pad@buf 0017                         dtoa@fp 0020                         fputc@c 0005  
            ?_TxBufferedString 0006                         fputs@c 0012                         fputs@i 0013  
                       fputs@s 000E                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             ??_TxBufferedString 0008  
                       putch@c 0001               __end_of_vfprintf 179E                      ??_sprintf 0057  
        __end_of_isDataInTxBuf 1BAA                     __accesstop 0060        __end_of__initialization 1910  
     __end_of_color_read_Green 188E         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0009                _Interrupts_init 1BAA                 __pcstackCOMRAM 0001  
                 __pidataBANK0 1BE4                  __end_of_fputc 15A4                  __end_of_fputs 1966  
                __end_of_putch 1BE4                        ??_fputc 0009                        ??_fputs 0012  
                      ??_putch 0005                     __pbssBANK0 00B1                     __pbssBANK1 0100  
            _color_writetoaddr 1B54             ?_color_writetoaddr 0007            ??_color_writetoaddr 0008  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _SSP2ADD 000ED6  
                      i2u98_40 1B14                        i2u98_41 1B10                        i2u99_40 1A68  
                      i2u99_41 1A64                        _SSP2BUF 000ED5        __end_of_Interrupts_init 1BB8  
       color_writetoaddr@value 0007               ??_color_read_Red 000B                        _HighISR 0008  
             ??_color_read_lum 000B      __end_of_color_writetoaddr 1B74             _I2C_2_Master_Start 1BD8  
                   _initUSART4 1B74             _I2C_2_Master_Write 1BB8                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000E                        ___aodiv 10A0  
                      ___aomod 1228            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0060                   __psmallconst 0E00                        __pcinit 18DE  
                      __ramtop 0E00                        __ptext0 15A4                        __ptext1 16FC  
                      __ptext2 174E                        __ptext3 138C                        __ptext4 0E24  
                      __ptext5 1624                        __ptext6 1922                        __ptext7 14DA  
                      __ptext8 1BE2                        __ptext9 19A8                  _RxBufWriteCnt 005A  
     __end_of_getCharFromTxBuf 1A84              color_read_lum@tmp 000E                        main@buf 007F  
                      _sprintf 16FC           ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006  
         end_of_initialization 1910              __end_of_sendTxBuf 1AAE                        fputc@fp 0007  
                      fputs@fp 0010              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 14DA                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 004B  
                   ??_vfprintf 0055                      _TRISAbits 000F81                      _TRISDbits 000F84  
                    _TRISFbits 000F86                      _TRISGbits 000F87       color_writetoaddr@address 0008  
      ??_I2C_2_Master_RepStart 0006               ?_Interrupts_init 0001                   _EUSART4RXbuf 00B1  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0009                    ?_initUSART4 0001  
           ??_color_read_Green 000B                    vfpfcnvrt@ap 0047                    vfpfcnvrt@cp 0053  
                  vfpfcnvrt@fp 0043            start_initialization 18DE                    __end_of_abs 19E8  
                  __end_of_pad 169E                  _TxBufWriteCnt 0058            color_read_Green@tmp 000E  
                  vfprintf@fmt 0062                  ??_readColours 0012                 _putCharToRxBuf 1B02  
               _putCharToTxBuf 1AD8                    __pdataBANK0 00FE                    __pbssCOMRAM 0057  
                __pcstackBANK0 0060               ___aodiv@dividend 0005                       ?_HighISR 0001  
                    _dtoa$1405 0032         __end_of_putCharToRxBuf 1B2C         __end_of_putCharToTxBuf 1B02  
                    __pintcode 0008                       ?___aodiv 0005                       ?___aomod 0005  
             ___aodiv@quotient 0017         TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007  
         I2C_2_Master_Read@tmp 0008                    __smallconst 0E00            __end_of_readColours 16FC  
            _I2C_2_Master_Idle 1B2C              _I2C_2_Master_Init 1AAE              _I2C_2_Master_Read 1966  
            _I2C_2_Master_Stop 1BCE                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                     ?_sprintf 0066              ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001  
          ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0006                  _isDataInTxBuf 1B92  
                     _LATFbits 000F7E               _TxBufferedString 1A28                       _LATGbits 000F7F  
                    _sendTxBuf 1A84                       _PIE2bits 000E2B                       _PIE4bits 000E2D  
                     i2u103_40 0022                       i2u103_41 001E                       i2u104_40 0038  
                     i2u104_41 0034                       _PIR4bits 000E37                ?_putCharToRxBuf 0001  
              ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 138C      __end_of_I2C_2_Master_Idle 1B54      __end_of_I2C_2_Master_Init 1AD8  
    __end_of_I2C_2_Master_Read 19A8      __end_of_I2C_2_Master_Stop 1BD8                       _DataFlag 00FE  
  I2C_2_Master_Write@data_byte 0006              ??_color_read_Blue 000B                   _TxBufReadCnt 0057  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1BCE             color_read_Blue@tmp 000E  
                   ?_sendTxBuf 0001                   ??_initUSART4 0005                       __Hrparam 0000  
                   vfprintf@ap 0064                       __Lrparam 0000                     vfprintf@fp 0060  
                 __Lsmallconst 0E00                    _readColours 169E                     ?_vfpfcnvrt 0043  
              ___aodiv@divisor 000D                ___aodiv@counter 0015                     _ANSELDbits 000EA7  
                   sprintf@fmt 0068             __end_of_initUSART4 1B92                       __ptext10 1228  
                     __ptext11 10A0                       __ptext20 1966                       __ptext12 1A84  
                     __ptext21 1B74                       __ptext13 1B92                       __ptext30 1AD8  
                     __ptext22 19E8                       __ptext14 169E                       __ptext31 1BAA  
                     __ptext23 1B54                       __ptext15 179E                       __ptext24 1BB8  
                     __ptext16 17EE                       __ptext33 1B02                       __ptext25 1BCE  
                     __ptext17 183E                       __ptext34 1A58                       __ptext26 1BD8  
                     __ptext18 188E                       __ptext27 1B2C                       __ptext19 1BC4  
                     __ptext28 1AAE                       __ptext29 1A28                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005B                       _vfprintf 174E               ___aomod@dividend 0005  
                   _INTCONbits 000FF2                ??_isDataInTxBuf 0005                       intlevel2 0000  
                    sprintf@ap 0072                    ??_sendTxBuf 0005                ___aomod@divisor 000D  
                  ??_vfpfcnvrt 0049                ___aomod@counter 0015               _color_click_init 19E8  
     __end_of_TxBufferedString 1A58                       sprintf@f 0074                       sprintf@s 0066  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0016               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
                 ___aomod@sign 0016  
