

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
<<<<<<< Updated upstream
                                                                                               Sat Mar 11 15:55:22 2023
=======
                                                                                               Sat Mar 11 17:13:54 2023
>>>>>>> Stashed changes

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    96   000000                     
    97                           ; Generated 06/04/2022 GMT
    98                           ; 
    99                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution. Publication is not required when
   113                           ;        this file is used in an embedded application.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
<<<<<<< Updated upstream
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130   000000                     
   131                           	psect	idataBANK0
   132   005BDC                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _high_threshold
   136   005BDC  03E8               	dw	1000
   137                           
   138                           ;initializer for _Turn45Delay
   139   005BDE  00DC               	dw	220
   140                           
   141                           ;initializer for _power
   142   005BE0  001E               	dw	30
   143                           
   144                           ;initializer for _DataFlag
   145   005BE2  01                 	db	1
   146   000000                     _TRISEbits	set	3973
   147   000000                     _TX4REG	set	3812
   148   000000                     _RC4STAbits	set	3815
   149   000000                     _SP4BRGH	set	3814
   150   000000                     _SSP2CON2bits	set	3802
   151   000000                     _RX4PPS	set	3605
   152   000000                     _SSP2CLKPPS	set	3612
   153   000000                     _SSP2DATPPS	set	3613
   154   000000                     _ANSELDbits	set	3751
   155   000000                     _SSP2ADD	set	3798
   156   000000                     _SSP2CON1bits	set	3801
   157   000000                     _LATAbits	set	3961
   158   000000                     _LATFbits	set	3966
   159   000000                     _LATGbits	set	3967
   160   000000                     _TRISAbits	set	3969
   161   000000                     _TRISGbits	set	3975
   162   000000                     _PORTFbits	set	3982
   163   000000                     _CCPR2H	set	4006
   164   000000                     _CCPR1H	set	4010
   165   000000                     _TRISCbits	set	3971
   166   000000                     _TRISDbits	set	3972
   167   000000                     _TRISFbits	set	3974
   168   000000                     _LATDbits	set	3964
   169   000000                     _RC4REG	set	3811
   170   000000                     _SP4BRGL	set	3813
   171   000000                     _TX4STAbits	set	3816
   172   000000                     _BAUD4CONbits	set	3817
   173   000000                     _SSP2CON2	set	3802
   174   000000                     _SSP2STAT	set	3800
   175   000000                     _ANSELFbits	set	3764
   176   000000                     _SSP2BUF	set	3797
   177   000000                     _PIE4bits	set	3629
   178   000000                     _PIR4bits	set	3639
   179   000000                     _RC0PPS	set	3682
   180   000000                     _RD5PPS	set	3695
   181   000000                     _RE2PPS	set	3700
   182   000000                     _RD6PPS	set	3696
   183   000000                     _RC7PPS	set	3689
   184   000000                     _CCPR4H	set	3873
   185   000000                     _CCPR3H	set	3877
   186   000000                     _CCP1CONbits	set	4011
   187   000000                     _CCPTMRS0bits	set	4013
   188   000000                     _T2PR	set	4028
   189   000000                     _T2CONbits	set	4029
   190   000000                     _CCP2CONbits	set	4007
   191   000000                     _CCP3CONbits	set	3878
   192   000000                     _CCP4CONbits	set	3874
   193   000000                     _RE4PPS	set	3702
   194   000000                     _RG6PPS	set	3720
   195   000000                     _T2CLKCONbits	set	4031
   196   000000                     _T2HLTbits	set	4030
   197                           
   198                           	psect	smallconst
   199   000E00                     __psmallconst:
   200                           	callstack 0
   201   000E00  00                 	db	0
   202   000E01                     STR_1:
   203   000E01  72                 	db	114	;'r'
   204   000E02  65                 	db	101	;'e'
   205   000E03  64                 	db	100	;'d'
   206   000E04  3D                 	db	61	;'='
   207   000E05  25                 	db	37
   208   000E06  66                 	db	102	;'f'
   209   000E07  20                 	db	32
   210   000E08  67                 	db	103	;'g'
   211   000E09  72                 	db	114	;'r'
   212   000E0A  65                 	db	101	;'e'
   213   000E0B  65                 	db	101	;'e'
   214   000E0C  6E                 	db	110	;'n'
   215   000E0D  3D                 	db	61	;'='
   216   000E0E  25                 	db	37
   217   000E0F  66                 	db	102	;'f'
   218   000E10  20                 	db	32
   219   000E11  62                 	db	98	;'b'
   220   000E12  6C                 	db	108	;'l'
   221   000E13  75                 	db	117	;'u'
   222   000E14  65                 	db	101	;'e'
   223   000E15  3D                 	db	61	;'='
   224   000E16  25                 	db	37
   225   000E17  66                 	db	102	;'f'
   226   000E18  20                 	db	32
   227   000E19  6C                 	db	108	;'l'
   228   000E1A  75                 	db	117	;'u'
   229   000E1B  6D                 	db	109	;'m'
   230   000E1C  3D                 	db	61	;'='
   231   000E1D  25                 	db	37
   232   000E1E  64                 	db	100	;'d'
   233   000E1F  20                 	db	32
   234   000E20  63                 	db	99	;'c'
   235   000E21  6F                 	db	111	;'o'
   236   000E22  6C                 	db	108	;'l'
   237   000E23  6F                 	db	111	;'o'
   238   000E24  75                 	db	117	;'u'
   239   000E25  72                 	db	114	;'r'
   240   000E26  31                 	db	49	;'1'
   241   000E27  3D                 	db	61	;'='
   242   000E28  25                 	db	37
   243   000E29  64                 	db	100	;'d'
   244   000E2A  20                 	db	32
   245   000E2B  0D                 	db	13
   246   000E2C  0A                 	db	10
   247   000E2D  00                 	db	0
   248   000E2E                     STR_2:
   249   000E2E  72                 	db	114	;'r'
   250   000E2F  65                 	db	101	;'e'
   251   000E30  64                 	db	100	;'d'
   252   000E31  3D                 	db	61	;'='
   253   000E32  25                 	db	37
   254   000E33  64                 	db	100	;'d'
   255   000E34  20                 	db	32
   256   000E35  67                 	db	103	;'g'
   257   000E36  72                 	db	114	;'r'
   258   000E37  65                 	db	101	;'e'
   259   000E38  65                 	db	101	;'e'
   260   000E39  6E                 	db	110	;'n'
   261   000E3A  3D                 	db	61	;'='
   262   000E3B  25                 	db	37
   263   000E3C  64                 	db	100	;'d'
   264   000E3D  20                 	db	32
   265   000E3E  62                 	db	98	;'b'
   266   000E3F  6C                 	db	108	;'l'
   267   000E40  75                 	db	117	;'u'
   268   000E41  65                 	db	101	;'e'
   269   000E42  3D                 	db	61	;'='
   270   000E43  25                 	db	37
   271   000E44  64                 	db	100	;'d'
   272   000E45  20                 	db	32
   273   000E46  6C                 	db	108	;'l'
   274   000E47  75                 	db	117	;'u'
   275   000E48  6D                 	db	109	;'m'
   276   000E49  3D                 	db	61	;'='
   277   000E4A  25                 	db	37
   278   000E4B  64                 	db	100	;'d'
   279   000E4C  20                 	db	32
   280   000E4D  0D                 	db	13
   281   000E4E  0A                 	db	10
   282   000E4F  00                 	db	0
   283   000E50                     STR_3:
   284   000E50  69                 	db	105	;'i'
   285   000E51  6E                 	db	110	;'n'
   286   000E52  66                 	db	102	;'f'
   287   000E53  00                 	db	0
   288   000E54                     STR_6:
   289   000E54  6E                 	db	110	;'n'
   290   000E55  61                 	db	97	;'a'
   291   000E56  6E                 	db	110	;'n'
   292   000E57  00                 	db	0
   293   000E58  00                 	db	0	; dummy byte at the end
   294   000000                     
   295                           ; #config settings
   296                           
   297                           	psect	cinit
   298   0051F0                     __pcinit:
   299                           	callstack 0
   300   0051F0                     start_initialization:
   301                           	callstack 0
   302   0051F0                     __initialization:
   303                           	callstack 0
   304                           
   305                           ; Initialize objects allocated to BANK0 (7 bytes)
   306                           ; load TBLPTR registers with __pidataBANK0
   307   0051F0  0EDC               	movlw	low __pidataBANK0
   308   0051F2  6EF6               	movwf	tblptrl,c
   309   0051F4  0E5B               	movlw	high __pidataBANK0
   310   0051F6  6EF7               	movwf	tblptrh,c
   311   0051F8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   312   0051FA  6EF8               	movwf	tblptru,c
   313   0051FC  EE00  F0F2         	lfsr	0,__pdataBANK0
   314   005200  EE10 F007          	lfsr	1,7
   315   005204                     copy_data0:
   316   005204  0009               	tblrd		*+
   317   005206  CFF5 FFEE          	movff	tablat,postinc0
   318   00520A  50E5               	movf	postdec1,w,c
   319   00520C  50E1               	movf	fsr1l,w,c
   320   00520E  E1FA               	bnz	copy_data0
   321                           
   322                           ; Clear objects allocated to BANK3 (250 bytes)
   323   005210  EE03  F000         	lfsr	0,__pbssBANK3
   324   005214  0EFA               	movlw	250
   325   005216                     clear_0:
   326   005216  6AEE               	clrf	postinc0,c
   327   005218  06E8               	decf	wreg,f,c
   328   00521A  E1FD               	bnz	clear_0
   329                           
   330                           ; Clear objects allocated to BANK2 (60 bytes)
   331   00521C  EE02  F000         	lfsr	0,__pbssBANK2
   332   005220  0E3C               	movlw	60
   333   005222                     clear_1:
   334   005222  6AEE               	clrf	postinc0,c
   335   005224  06E8               	decf	wreg,f,c
   336   005226  E1FD               	bnz	clear_1
   337                           
   338                           ; Clear objects allocated to BANK1 (140 bytes)
   339   005228  EE01  F000         	lfsr	0,__pbssBANK1
   340   00522C  0E8C               	movlw	140
   341   00522E                     clear_2:
   342   00522E  6AEE               	clrf	postinc0,c
   343   005230  06E8               	decf	wreg,f,c
   344   005232  E1FD               	bnz	clear_2
   345                           
   346                           ; Clear objects allocated to BANK0 (31 bytes)
   347   005234  EE00  F0D3         	lfsr	0,__pbssBANK0
   348   005238  0E1F               	movlw	31
   349   00523A                     clear_3:
   350   00523A  6AEE               	clrf	postinc0,c
   351   00523C  06E8               	decf	wreg,f,c
   352   00523E  E1FD               	bnz	clear_3
   353   005240                     end_of_initialization:
   354                           	callstack 0
   355   005240                     __end_of__initialization:
   356                           	callstack 0
   357   005240  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   358   005242  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   359   005244  0100               	movlb	0
   360   005246  EF98  F011         	goto	_main	;jump to C main() function
   361                           
   362                           	psect	bssBANK0
   363   0000D3                     __pbssBANK0:
   364                           	callstack 0
   365   0000D3                     	ds	12
   366   0000DF                     floorf@F526:
   367                           	callstack 0
   368   0000DF                     	ds	4
   369   0000E3                     ___fpclassifyf@F465:
   370                           	callstack 0
   371   0000E3                     	ds	4
   372   0000E7                     _width:
   373                           	callstack 0
   374   0000E7                     	ds	2
   375   0000E9                     _prec:
   376                           	callstack 0
   377   0000E9                     	ds	2
   378   0000EB                     _low_threshold:
   379                           	callstack 0
   380   0000EB                     	ds	2
   381   0000ED                     _flags:
   382                           	callstack 0
   383   0000ED                     	ds	1
   384   0000EE                     _TxBufReadCnt:
   385                           	callstack 0
   386   0000EE                     	ds	1
   387   0000EF                     _TxBufWriteCnt:
   388                           	callstack 0
   389   0000EF                     	ds	1
   390   0000F0                     _RxBufReadCnt:
   391                           	callstack 0
   392   0000F0                     	ds	1
   393   0000F1                     _RxBufWriteCnt:
   394                           	callstack 0
   395   0000F1                     	ds	1
   396                           
   397                           	psect	dataBANK0
   398   0000F2                     __pdataBANK0:
   399                           	callstack 0
   400   0000F2                     _high_threshold:
   401                           	callstack 0
   402   0000F2                     	ds	2
   403   0000F4                     _Turn45Delay:
   404                           	callstack 0
   405   0000F4                     	ds	2
   406   0000F6                     _power:
   407                           	callstack 0
   408   0000F6                     	ds	2
   409   0000F8                     _DataFlag:
   410                           	callstack 0
   411   0000F8                     	ds	1
   412                           
   413                           	psect	bssBANK1
   414   000100                     __pbssBANK1:
   415                           	callstack 0
   416   000100                     _EUSART4RXbuf:
   417                           	callstack 0
   418   000100                     	ds	20
   419   000114                     _move_count:
   420                           	callstack 0
   421   000114                     	ds	2
   422   000116                     _dbuf:
   423                           	callstack 0
   424   000116                     	ds	80
   425   000166                     _rel:
   426                           	callstack 0
   427   000166                     	ds	12
   428   000172                     _motorR:
   429                           	callstack 0
   430   000172                     	ds	9
   431   00017B                     _motorL:
   432                           	callstack 0
   433   00017B                     	ds	9
   434   000184                     _vals:
   435                           	callstack 0
   436   000184                     	ds	8
   437                           
   438                           	psect	bssBANK2
   439   000200                     __pbssBANK2:
   440                           	callstack 0
   441   000200                     _EUSART4TXbuf:
   442                           	callstack 0
   443   000200                     	ds	60
   444                           
   445                           	psect	bssBANK3
   446   000300                     __pbssBANK3:
   447                           	callstack 0
   448   000300                     _WayBack:
   449                           	callstack 0
   450   000300                     	ds	250
   451                           
   452                           	psect	cstackBANK1
   453   00018C                     __pcstackBANK1:
   454                           	callstack 0
   455   00018C                     main@buf:
   456                           	callstack 0
   457                           
   458                           ; 100 bytes @ 0x0
   459   00018C                     	ds	100
   460   0001F0                     main@run_flag:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x64
   464   0001F0                     	ds	2
   465   0001F2                     main@consecuitive:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x66
   469   0001F2                     	ds	2
   470   0001F4                     main@colour:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x68
   474   0001F4                     	ds	2
   475   0001F6                     main@prev_colour:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x6A
   479   0001F6                     	ds	2
   480                           
   481                           	psect	cstackBANK0
   482   000060                     __pcstackBANK0:
   483                           	callstack 0
   484   000060                     efgtoa@fp:
   485                           	callstack 0
   486   000060                     colour_rel@L:
   487                           	callstack 0
   488   000060                     _Colour_decider$2791:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x0
   492   000060                     	ds	2
   493   000062                     efgtoa@f:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x2
   497   000062                     	ds	2
   498   000064                     Colour_decider@Cmax_i:
   499                           	callstack 0
   500   000064                     _colour_rel$2789:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x4
   504   000064                     	ds	2
   505   000066                     efgtoa@c:
   506                           	callstack 0
   507   000066                     Colour_decider@RGB_col:
   508                           	callstack 0
   509                           
   510                           ; 12 bytes @ 0x6
   511   000066                     	ds	1
   512   000067                     ??_efgtoa:
   513                           
   514                           ; 1 bytes @ 0x7
   515   000067                     	ds	1
   516   000068                     _colour_rel$2790:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x8
   520   000068                     	ds	1
   521   000069                     efgtoa@ne:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x9
   525   000069                     	ds	2
   526   00006B                     efgtoa@p:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xB
   530   00006B                     	ds	1
   531   00006C                     colour_rel@R:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0xC
   535   00006C                     	ds	1
   536   00006D                     efgtoa@t:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xD
   540   00006D                     	ds	2
   541   00006F                     _efgtoa$2418:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xF
   545   00006F                     	ds	1
   546   000070                     colour_rel@G:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x10
   550   000070                     	ds	1
   551   000071                     efgtoa@pp:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x11
   555   000071                     	ds	1
   556   000072                     efgtoa@mode:
   557                           	callstack 0
   558   000072                     Colour_decider@Cmax:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x12
   562   000072                     	ds	1
   563   000073                     efgtoa@nmode:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x13
   567   000073                     	ds	1
   568   000074                     efgtoa@d:
   569                           	callstack 0
   570   000074                     colour_rel@B:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x14
   574   000074                     	ds	2
   575   000076                     efgtoa@m:
   576                           	callstack 0
   577   000076                     Colour_decider@Cmin:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x16
   581   000076                     	ds	2
   582   000078                     efgtoa@e:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x18
   586   000078                     	ds	2
   587   00007A                     Colour_decider@i:
   588                           	callstack 0
   589   00007A                     efgtoa@w:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x1A
   593   00007A                     	ds	2
   594   00007C                     Colour_decider@Hue:
   595                           	callstack 0
   596   00007C                     efgtoa@ou:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x1C
   600   00007C                     	ds	4
   601   000080                     efgtoa@i:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x20
   605   000080                     	ds	2
   606   000082                     efgtoa@h:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x22
   610   000082                     	ds	4
   611   000086                     efgtoa@l:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x26
   615   000086                     	ds	4
   616   00008A                     efgtoa@sign:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x2A
   620   00008A                     	ds	1
   621   00008B                     efgtoa@n:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x2B
   625   00008B                     	ds	2
   626   00008D                     efgtoa@g:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x2D
   630   00008D                     	ds	4
   631   000091                     efgtoa@u:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x31
   635   000091                     	ds	4
   636   000095                     vfpfcnvrt@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x35
   640   000095                     	ds	2
   641   000097                     vfpfcnvrt@fmt:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x37
   645   000097                     	ds	2
   646   000099                     vfpfcnvrt@ap:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x39
   650   000099                     	ds	2
   651   00009B                     ??_vfpfcnvrt:
   652                           
   653                           ; 1 bytes @ 0x3B
   654   00009B                     	ds	2
   655   00009D                     vfpfcnvrt@convarg:
   656                           	callstack 0
   657                           
   658                           ; 8 bytes @ 0x3D
   659   00009D                     	ds	8
   660   0000A5                     vfpfcnvrt@c:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x45
   664   0000A5                     	ds	1
   665   0000A6                     vfpfcnvrt@cp:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x46
   669   0000A6                     	ds	2
   670   0000A8                     ?_vfprintf:
   671                           	callstack 0
   672   0000A8                     vfprintf@fp:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x48
   676   0000A8                     	ds	2
   677   0000AA                     vfprintf@fmt:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x4A
   681   0000AA                     	ds	2
   682   0000AC                     vfprintf@ap:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x4C
   686   0000AC                     	ds	2
   687   0000AE                     vfprintf@cfmt:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x4E
   691   0000AE                     	ds	2
   692   0000B0                     ?_sprintf:
   693                           	callstack 0
   694   0000B0                     sprintf@s:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x50
   698   0000B0                     	ds	2
   699   0000B2                     sprintf@fmt:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x52
   703   0000B2                     	ds	18
   704   0000C4                     sprintf@ap:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x64
   708   0000C4                     	ds	2
   709   0000C6                     sprintf@f:
   710                           	callstack 0
   711                           
   712                           ; 11 bytes @ 0x66
   713   0000C6                     	ds	11
   714   0000D1                     ??_main:
   715                           
   716                           ; 1 bytes @ 0x71
   717   0000D1                     	ds	2
   718                           
   719                           	psect	cstackCOMRAM
   720   000001                     __pcstackCOMRAM:
   721                           	callstack 0
   722   000001                     ??_I2C_2_Master_Idle:
   723   000001                     ?___fpclassifyf:
   724                           	callstack 0
   725   000001                     ?___wmul:
   726                           	callstack 0
   727   000001                     ?___fladd:
   728                           	callstack 0
   729   000001                     ?_labs:
   730                           	callstack 0
   731   000001                     ?___flneg:
   732                           	callstack 0
   733   000001                     ?___fltol:
   734                           	callstack 0
   735   000001                     ?___xxtofl:
   736                           	callstack 0
   737   000001                     ?___aodiv:
   738                           	callstack 0
   739   000001                     ?___aomod:
   740                           	callstack 0
   741   000001                     sendCharSerial4@charToSend:
   742                           	callstack 0
   743   000001                     initDCmotorsPWM@PWMperiod:
   744                           	callstack 0
   745   000001                     ___wmul@multiplier:
   746                           	callstack 0
   747   000001                     memcpy@d1:
   748                           	callstack 0
   749   000001                     fputc@c:
   750                           	callstack 0
   751   000001                     strcpy@dest:
   752                           	callstack 0
   753   000001                     ___flneg@f1:
   754                           	callstack 0
   755   000001                     ___fltol@f1:
   756                           	callstack 0
   757   000001                     ___fladd@b:
   758                           	callstack 0
   759   000001                     ___xxtofl@val:
   760                           	callstack 0
   761   000001                     ___fpclassifyf@x:
   762                           	callstack 0
   763   000001                     labs@a:
   764                           	callstack 0
   765   000001                     ___aodiv@dividend:
   766                           	callstack 0
   767   000001                     ___aomod@dividend:
   768                           	callstack 0
   769                           
   770                           ; 8 bytes @ 0x0
   771   000001                     	ds	1
   772   000002                     ??_I2C_2_Master_Read:
   773   000002                     I2C_2_Master_Write@data_byte:
   774                           	callstack 0
   775   000002                     sendStringSerial4@string:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x1
   779   000002                     	ds	1
   780   000003                     color_writetoaddr@value:
   781                           	callstack 0
   782   000003                     I2C_2_Master_Read@ack:
   783                           	callstack 0
   784   000003                     ___wmul@multiplicand:
   785                           	callstack 0
   786   000003                     memcpy@s1:
   787                           	callstack 0
   788   000003                     fputc@fp:
   789                           	callstack 0
   790   000003                     strcpy@src:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x2
   794   000003                     	ds	1
   795   000004                     color_writetoaddr@address:
   796                           	callstack 0
   797   000004                     I2C_2_Master_Read@tmp:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x3
   801   000004                     	ds	1
   802   000005                     ??_fputc:
   803   000005                     ??___fpclassifyf:
   804   000005                     ??_labs:
   805   000005                     ??_color_click_init:
   806   000005                     ??___fltol:
   807   000005                     ??___xxtofl:
   808   000005                     ?_color_read_lum:
   809                           	callstack 0
   810   000005                     ?_color_read_Red:
   811                           	callstack 0
   812   000005                     ?_color_read_Green:
   813                           	callstack 0
   814   000005                     ?_color_read_Blue:
   815                           	callstack 0
   816   000005                     ___wmul@product:
   817                           	callstack 0
   818   000005                     memcpy@n:
   819                           	callstack 0
   820   000005                     strcpy@s:
   821                           	callstack 0
   822   000005                     ___fladd@a:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x4
   826   000005                     	ds	2
   827   000007                     ??_color_read_lum:
   828   000007                     ??_color_read_Red:
   829   000007                     ??_color_read_Green:
   830   000007                     ??_color_read_Blue:
   831   000007                     ?___lwdiv:
   832                           	callstack 0
   833   000007                     ___lwdiv@dividend:
   834                           	callstack 0
   835   000007                     memcpy@d:
   836                           	callstack 0
   837   000007                     strcpy@d:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x6
   841   000007                     	ds	2
   842   000009                     ??___fladd:
   843   000009                     ___fltol@sign1:
   844                           	callstack 0
   845   000009                     ___xxtofl@sign:
   846                           	callstack 0
   847   000009                     ___lwdiv@divisor:
   848                           	callstack 0
   849   000009                     ___fpclassifyf@e:
   850                           	callstack 0
   851   000009                     memcpy@s:
   852                           	callstack 0
   853   000009                     ___aodiv@divisor:
   854                           	callstack 0
   855   000009                     ___aomod@divisor:
   856                           	callstack 0
   857                           
   858                           ; 8 bytes @ 0x8
   859   000009                     	ds	1
   860   00000A                     ___fltol@exp1:
   861                           	callstack 0
   862   00000A                     ___xxtofl@exp:
   863                           	callstack 0
   864   00000A                     color_read_lum@tmp:
   865                           	callstack 0
   866   00000A                     color_read_Red@tmp:
   867                           	callstack 0
   868   00000A                     color_read_Green@tmp:
   869                           	callstack 0
   870   00000A                     color_read_Blue@tmp:
   871                           	callstack 0
   872   00000A                     fputs@s:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x9
   876   00000A                     	ds	1
   877   00000B                     memcpy@tmp:
   878                           	callstack 0
   879   00000B                     ___lwdiv@quotient:
   880                           	callstack 0
   881   00000B                     ___xxtofl@arg:
   882                           	callstack 0
   883   00000B                     ___fpclassifyf@u:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0xA
   887   00000B                     	ds	1
   888   00000C                     readColours@vals:
   889                           	callstack 0
   890   00000C                     fputs@fp:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0xB
   894   00000C                     	ds	1
   895   00000D                     ___lwdiv@counter:
   896                           	callstack 0
   897   00000D                     ___fladd@signs:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0xC
   901   00000D                     	ds	1
   902   00000E                     ___fladd@aexp:
   903                           	callstack 0
   904   00000E                     fputs@c:
   905                           	callstack 0
   906   00000E                     setMotorPWM@m:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0xD
   910   00000E                     	ds	1
   911   00000F                     ___fladd@bexp:
   912                           	callstack 0
   913   00000F                     fputs@i:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0xE
   917   00000F                     	ds	1
   918   000010                     ??_setMotorPWM:
   919   000010                     ___fladd@grs:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0xF
   923   000010                     	ds	1
   924   000011                     ?___flmul:
   925                           	callstack 0
   926   000011                     ___aodiv@counter:
   927                           	callstack 0
   928   000011                     ___aomod@counter:
   929                           	callstack 0
   930   000011                     pad@fp:
   931                           	callstack 0
   932   000011                     ___flmul@b:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x10
   936   000011                     	ds	1
   937   000012                     setMotorPWM@posDuty:
   938                           	callstack 0
   939   000012                     ___aodiv@sign:
   940                           	callstack 0
   941   000012                     ___aomod@sign:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x11
   945   000012                     	ds	1
   946   000013                     ?_abs:
   947                           	callstack 0
   948   000013                     setMotorPWM@negDuty:
   949                           	callstack 0
   950   000013                     pad@buf:
   951                           	callstack 0
   952   000013                     abs@a:
   953                           	callstack 0
   954   000013                     ___aodiv@quotient:
   955                           	callstack 0
   956                           
   957                           ; 8 bytes @ 0x12
   958   000013                     	ds	1
   959   000014                     stop@mL:
   960                           	callstack 0
   961   000014                     turnLeft@mL:
   962                           	callstack 0
   963   000014                     turnRight@mL:
   964                           	callstack 0
   965   000014                     fullSpeedAhead@mL:
   966                           	callstack 0
   967   000014                     fullSpeedBack@mL:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x13
   971   000014                     	ds	1
   972   000015                     ??_abs:
   973   000015                     pad@p:
   974                           	callstack 0
   975   000015                     ___flmul@a:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x14
   979   000015                     	ds	1
   980   000016                     stop@mR:
   981                           	callstack 0
   982   000016                     turnLeft@mR:
   983                           	callstack 0
   984   000016                     turnRight@mR:
   985                           	callstack 0
   986   000016                     fullSpeedAhead@mR:
   987                           	callstack 0
   988   000016                     fullSpeedBack@mR:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x15
   992   000016                     	ds	1
   993   000017                     ??_pad:
   994                           
   995                           ; 1 bytes @ 0x16
   996   000017                     	ds	1
   997   000018                     ??_stop:
   998   000018                     ??_turnLeft:
   999   000018                     ??_turnRight:
  1000   000018                     ??_fullSpeedAhead:
  1001   000018                     ??_fullSpeedBack:
  1002   000018                     pad@i:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x17
  1006   000018                     	ds	1
  1007   000019                     ??___flmul:
  1008                           
  1009                           ; 1 bytes @ 0x18
  1010   000019                     	ds	1
  1011   00001A                     turnRight45@mL:
  1012                           	callstack 0
  1013   00001A                     turnLeft45@mL:
  1014                           	callstack 0
  1015   00001A                     reverseDetect@mL:
  1016                           	callstack 0
  1017   00001A                     reverseOneBlock@mL:
  1018                           	callstack 0
  1019   00001A                     ForwardOneBlock@mL:
  1020                           	callstack 0
  1021   00001A                     Forwardhalfblock@mL:
  1022                           	callstack 0
  1023   00001A                     RetryMove@mL:
  1024                           	callstack 0
  1025   00001A                     pad@w:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x19
  1029   00001A                     	ds	2
  1030   00001C                     turnRight45@mR:
  1031                           	callstack 0
  1032   00001C                     turnLeft45@mR:
  1033                           	callstack 0
  1034   00001C                     reverseDetect@mR:
  1035                           	callstack 0
  1036   00001C                     reverseOneBlock@mR:
  1037                           	callstack 0
  1038   00001C                     ForwardOneBlock@mR:
  1039                           	callstack 0
  1040   00001C                     Forwardhalfblock@mR:
  1041                           	callstack 0
  1042   00001C                     RetryMove@mR:
  1043                           	callstack 0
  1044   00001C                     dtoa@fp:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x1B
  1048   00001C                     	ds	1
  1049   00001D                     ___flmul@sign:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x1C
  1053   00001D                     	ds	1
  1054   00001E                     ??_Forwardhalfblock:
  1055   00001E                     ??_RetryMove:
  1056   00001E                     ??_turnRight45:
  1057   00001E                     ??_turnLeft45:
  1058   00001E                     ??_reverseDetect:
  1059   00001E                     ??_reverseOneBlock:
  1060   00001E                     ??_ForwardOneBlock:
  1061   00001E                     ___flmul@grs:
  1062                           	callstack 0
  1063   00001E                     dtoa@d:
  1064                           	callstack 0
  1065                           
  1066                           ; 8 bytes @ 0x1D
  1067   00001E                     	ds	2
  1068   000020                     RedMove@mL:
  1069                           	callstack 0
  1070   000020                     GreenMove@mL:
  1071                           	callstack 0
  1072   000020                     BlueMove@mL:
  1073                           	callstack 0
  1074   000020                     YellowMove@mL:
  1075                           	callstack 0
  1076   000020                     PinkMove@mL:
  1077                           	callstack 0
  1078   000020                     OrangeMove@mL:
  1079                           	callstack 0
  1080   000020                     LightBlueMove@mL:
  1081                           	callstack 0
  1082   000020                     ReverseYellow@mL:
  1083                           	callstack 0
  1084   000020                     ReversePink@mL:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x1F
  1088   000020                     	ds	2
  1089   000022                     ___flmul@aexp:
  1090                           	callstack 0
  1091   000022                     RedMove@mR:
  1092                           	callstack 0
  1093   000022                     GreenMove@mR:
  1094                           	callstack 0
  1095   000022                     BlueMove@mR:
  1096                           	callstack 0
  1097   000022                     YellowMove@mR:
  1098                           	callstack 0
  1099   000022                     PinkMove@mR:
  1100                           	callstack 0
  1101   000022                     OrangeMove@mR:
  1102                           	callstack 0
  1103   000022                     LightBlueMove@mR:
  1104                           	callstack 0
  1105   000022                     ReverseYellow@mR:
  1106                           	callstack 0
  1107   000022                     ReversePink@mR:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x21
  1111   000022                     	ds	1
  1112   000023                     ___flmul@bexp:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x22
  1116   000023                     	ds	1
  1117   000024                     go_Home@WayBack:
  1118                           	callstack 0
  1119   000024                     ___flmul@prod:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x23
  1123   000024                     	ds	2
  1124   000026                     ??_dtoa:
  1125                           
  1126                           ; 1 bytes @ 0x25
  1127   000026                     	ds	1
  1128   000027                     go_Home@i:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x26
  1132   000027                     	ds	1
  1133   000028                     ___flmul@temp:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x27
  1137   000028                     	ds	2
  1138   00002A                     ?___flsub:
  1139                           	callstack 0
  1140   00002A                     ___flge@ff1:
  1141                           	callstack 0
  1142   00002A                     ___flsub@b:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x29
  1146   00002A                     	ds	4
  1147   00002E                     _dtoa$2387:
  1148                           	callstack 0
  1149   00002E                     ___flge@ff2:
  1150                           	callstack 0
  1151   00002E                     ___flsub@a:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x2D
  1155   00002E                     	ds	2
  1156   000030                     dtoa@p:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x2F
  1160   000030                     	ds	2
  1161   000032                     ??___flge:
  1162   000032                     ?___fldiv:
  1163                           	callstack 0
  1164   000032                     dtoa@w:
  1165                           	callstack 0
  1166   000032                     ___fleq@ff1:
  1167                           	callstack 0
  1168   000032                     ___fldiv@b:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x31
  1172   000032                     	ds	2
  1173   000034                     dtoa@n:
  1174                           	callstack 0
  1175                           
  1176                           ; 8 bytes @ 0x33
  1177   000034                     	ds	2
  1178   000036                     ___fleq@ff2:
  1179                           	callstack 0
  1180   000036                     ___fldiv@a:
  1181                           	callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x35
  1184   000036                     	ds	4
  1185   00003A                     ??___fldiv:
  1186   00003A                     ??___fleq:
  1187                           
  1188                           ; 1 bytes @ 0x39
  1189   00003A                     	ds	2
  1190   00003C                     dtoa@i:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x3B
  1194   00003C                     	ds	2
  1195   00003E                     dtoa@s:
  1196                           	callstack 0
  1197   00003E                     ___fldiv@rem:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x3D
  1201   00003E                     	ds	4
  1202   000042                     ___fldiv@sign:
  1203                           	callstack 0
  1204                           
  1205                           ; 1 bytes @ 0x41
  1206   000042                     	ds	1
  1207   000043                     ___fldiv@new_exp:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x42
  1211   000043                     	ds	2
  1212   000045                     ___fldiv@grs:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x44
  1216   000045                     	ds	4
  1217   000049                     ___fldiv@bexp:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x48
  1221   000049                     	ds	1
  1222   00004A                     ___fldiv@aexp:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x49
  1226   00004A                     	ds	1
  1227   00004B                     ?_Colour_decider:
  1228                           	callstack 0
  1229   00004B                     ?_floorf:
  1230                           	callstack 0
  1231   00004B                     colour_rel@vals:
  1232                           	callstack 0
  1233   00004B                     Colour_decider@vals:
  1234                           	callstack 0
  1235   00004B                     floorf@x:
  1236                           	callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x4A
  1239   00004B                     	ds	2
  1240   00004D                     colour_rel@rel:
  1241                           	callstack 0
  1242   00004D                     Colour_decider@rel:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x4C
  1246   00004D                     	ds	2
  1247   00004F                     ??_floorf:
  1248   00004F                     ??_Colour_decider:
  1249                           
  1250                           ; 1 bytes @ 0x4E
  1251   00004F                     	ds	6
  1252   000055                     floorf@m:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x54
  1256   000055                     	ds	4
  1257   000059                     floorf@e:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x58
  1261   000059                     	ds	2
  1262   00005B                     floorf@u:
  1263                           	callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x5A
  1266   00005B                     	ds	4
  1267   00005F                     
  1268                           ; 1 bytes @ 0x5E
  1269 ;;
  1270 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1271 ;;
  1272 ;; *************** function _main *****************
  1273 ;; Defined at:
  1274 ;;		line 29 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  colour          2  104[BANK1 ] int 
  1279 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1280 ;;  prev_colour     2  106[BANK1 ] int 
  1281 ;;  consecuitive    2  102[BANK1 ] int 
  1282 ;;  run_flag        2  100[BANK1 ] int 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;Total ram usage:      110 bytes
  1297 ;; Hardware stack levels required when called: 9
  1298 ;; This function calls:
  1299 ;;		_BlueMove
  1300 ;;		_Colour_decider
  1301 ;;		_Forwardhalfblock
  1302 ;;		_GreenMove
  1303 ;;		_I2C_2_Master_Init
  1304 ;;		_Interrupts_init
  1305 ;;		_LightBlueMove
  1306 ;;		_OrangeMove
  1307 ;;		_PinkMove
  1308 ;;		_RedMove
  1309 ;;		_RetryMove
  1310 ;;		_YellowMove
  1311 ;;		_color_click_init
  1312 ;;		_colour_rel
  1313 ;;		_go_Home
  1314 ;;		_initDCmotorsPWM
  1315 ;;		_initUSART4
  1316 ;;		_readColours
  1317 ;;		_sendStringSerial4
  1318 ;;		_sprintf
  1319 ;;		_stop
  1320 ;; This function is called by:
  1321 ;;		Startup code after reset
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text0
  1326   002330                     __ptext0:
  1327                           	callstack 0
  1328   002330                     _main:
  1329                           	callstack 22
  1330   002330                     
  1331                           ;main.c: 30:     initUSART4();
  1332   002330  ECBE  F02D         	call	_initUSART4	;wreg free
  1333   002334                     
  1334                           ;main.c: 31:     Interrupts_init();
  1335   002334  ECF3  F02D         	call	_Interrupts_init	;wreg free
  1336   002338                     
  1337                           ;main.c: 32:     color_click_init();
  1338   002338  ECD7  F02A         	call	_color_click_init	;wreg free
  1339   00233C                     
  1340                           ;main.c: 33:     I2C_2_Master_Init();
  1341   00233C  EC72  F02D         	call	_I2C_2_Master_Init	;wreg free
  1342   002340                     
  1343                           ;main.c: 34:     initDCmotorsPWM(200);
  1344   002340  0E00               	movlw	0
  1345   002342  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1346   002344  0EC8               	movlw	200
  1347   002346  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1348   002348  EC28  F027         	call	_initDCmotorsPWM	;wreg free
  1349   00234C                     
  1350                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1351   00234C  9287               	bcf	135,1,c	;volatile
  1352   00234E                     
  1353                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1354   00234E  9881               	bcf	129,4,c	;volatile
  1355   002350                     
  1356                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1357   002350  9E86               	bcf	134,7,c	;volatile
  1358   002352                     
  1359                           ;main.c: 39:     TRISFbits.TRISF2 = 1;
  1360   002352  8486               	bsf	134,2,c	;volatile
  1361   002354                     
  1362                           ;main.c: 40:     ANSELFbits.ANSELF2=0;
  1363   002354  010E               	movlb	14	; () banked
  1364   002356  95B4               	bcf	180,2,b	;volatile
  1365   002358                     
  1366                           ; BSR set to: 14
  1367                           ;main.c: 41:     LATGbits.LATG1=1;
  1368   002358  827F               	bsf	127,1,c	;volatile
  1369   00235A                     
  1370                           ; BSR set to: 14
  1371                           ;main.c: 42:     LATAbits.LATA4=1;
  1372   00235A  8879               	bsf	121,4,c	;volatile
  1373   00235C                     
  1374                           ; BSR set to: 14
  1375                           ;main.c: 43:     LATFbits.LATF7=1;
  1376   00235C  8E7E               	bsf	126,7,c	;volatile
  1377   00235E                     
  1378                           ; BSR set to: 14
  1379                           ;main.c: 47:     motorL.power=0;
  1380   00235E  0E00               	movlw	0
  1381   002360  0101               	movlb	1	; () banked
  1382   002362  6F7B               	movwf	_motorL& (0+255),b
  1383   002364                     
  1384                           ; BSR set to: 1
  1385                           ;main.c: 48:     motorL.direction=1;
  1386   002364  0E01               	movlw	1
  1387   002366  6F7C               	movwf	(_motorL+1)& (0+255),b
  1388   002368                     
  1389                           ; BSR set to: 1
  1390                           ;main.c: 49:     motorL.brakemode=1;
  1391   002368  0E01               	movlw	1
  1392   00236A  6F7D               	movwf	(_motorL+2)& (0+255),b
  1393   00236C                     
  1394                           ; BSR set to: 1
  1395                           ;main.c: 50:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1396   00236C  0EAA               	movlw	170
  1397   00236E  6F80               	movwf	(_motorL+5)& (0+255),b
  1398   002370  0E0F               	movlw	15
  1399   002372  6F81               	movwf	(_motorL+6)& (0+255),b
  1400   002374                     
  1401                           ; BSR set to: 1
  1402                           ;main.c: 51:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1403   002374  0EA6               	movlw	166
  1404   002376  6F82               	movwf	(_motorL+7)& (0+255),b
  1405   002378  0E0F               	movlw	15
  1406   00237A  6F83               	movwf	(_motorL+8)& (0+255),b
  1407   00237C                     
  1408                           ; BSR set to: 1
  1409                           ;main.c: 52:     motorL.PWMperiod=200;
  1410   00237C  0E00               	movlw	0
  1411   00237E  6F7F               	movwf	(_motorL+4)& (0+255),b
  1412   002380  0EC8               	movlw	200
  1413   002382  6F7E               	movwf	(_motorL+3)& (0+255),b
  1414   002384                     
  1415                           ; BSR set to: 1
  1416                           ;main.c: 53:     motorR.power=0;
  1417   002384  0E00               	movlw	0
  1418   002386  6F72               	movwf	_motorR& (0+255),b
  1419   002388                     
  1420                           ; BSR set to: 1
  1421                           ;main.c: 54:     motorR.direction=1;
  1422   002388  0E01               	movlw	1
  1423   00238A  6F73               	movwf	(_motorR+1)& (0+255),b
  1424   00238C                     
  1425                           ; BSR set to: 1
  1426                           ;main.c: 55:     motorR.brakemode=1;
  1427   00238C  0E01               	movlw	1
  1428   00238E  6F74               	movwf	(_motorR+2)& (0+255),b
  1429   002390                     
  1430                           ; BSR set to: 1
  1431                           ;main.c: 56:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1432   002390  0E25               	movlw	37
  1433   002392  6F77               	movwf	(_motorR+5)& (0+255),b
  1434   002394  0E0F               	movlw	15
  1435   002396  6F78               	movwf	(_motorR+6)& (0+255),b
  1436   002398                     
  1437                           ; BSR set to: 1
  1438                           ;main.c: 57:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1439   002398  0E21               	movlw	33
  1440   00239A  6F79               	movwf	(_motorR+7)& (0+255),b
  1441   00239C  0E0F               	movlw	15
  1442   00239E  6F7A               	movwf	(_motorR+8)& (0+255),b
  1443   0023A0                     
  1444                           ; BSR set to: 1
  1445                           ;main.c: 58:     motorR.PWMperiod=200;
  1446   0023A0  0E00               	movlw	0
  1447   0023A2  6F76               	movwf	(_motorR+4)& (0+255),b
  1448   0023A4  0EC8               	movlw	200
  1449   0023A6  6F75               	movwf	(_motorR+3)& (0+255),b
  1450   0023A8                     
  1451                           ; BSR set to: 1
  1452                           ;main.c: 59:     int consecuitive=0;
  1453   0023A8  0E00               	movlw	0
  1454   0023AA  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1455   0023AC  0E00               	movlw	0
  1456   0023AE  6FF2               	movwf	main@consecuitive& (0+255),b
  1457   0023B0                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 60:     int prev_colour =0;
  1460   0023B0  0E00               	movlw	0
  1461   0023B2  6FF7               	movwf	(main@prev_colour+1)& (0+255),b
  1462   0023B4  0E00               	movlw	0
  1463   0023B6  6FF6               	movwf	main@prev_colour& (0+255),b
  1464   0023B8                     
  1465                           ; BSR set to: 1
  1466                           ;main.c: 61:     int run_flag=1;
  1467   0023B8  0E00               	movlw	0
  1468   0023BA  6FF1               	movwf	(main@run_flag+1)& (0+255),b
  1469   0023BC  0E01               	movlw	1
  1470   0023BE  6FF0               	movwf	main@run_flag& (0+255),b
  1471   0023C0                     
  1472                           ; BSR set to: 1
  1473                           ;main.c: 62:     move_count=-1;
  1474   0023C0  6914               	setf	_move_count& (0+255),b	;volatile
  1475   0023C2  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1476   0023C4                     l384:
  1477   0023C4  B48E               	btfsc	142,2,c	;volatile
  1478   0023C6  EFE7  F011         	goto	u5481
  1479   0023CA  EFE9  F011         	goto	u5480
  1480   0023CE                     u5481:
  1481   0023CE  EFE2  F011         	goto	l384
  1482   0023D2                     u5480:
  1483   0023D2                     
  1484                           ;main.c: 64:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1485   0023D2  0E52               	movlw	82
  1486   0023D4  0100               	movlb	0	; () banked
  1487   0023D6  6FD2               	movwf	(??_main+1)& (0+255),b
  1488   0023D8  0E2B               	movlw	43
  1489   0023DA  6FD1               	movwf	??_main& (0+255),b
  1490   0023DC  0E00               	movlw	0
  1491   0023DE                     u5627:
  1492   0023DE  2EE8               	decfsz	wreg,f,c
  1493   0023E0  D7FE               	bra	u5627
  1494   0023E2  2FD1               	decfsz	??_main& (0+255),f,b
  1495   0023E4  D7FC               	bra	u5627
  1496   0023E6  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1497   0023E8  D7FA               	bra	u5627
  1498   0023EA  F000               	nop	
  1499                           
  1500                           ;main.c: 65:     while (run_flag)
  1501   0023EC  EF0F  F014         	goto	l5569
  1502   0023F0                     l5463:
  1503                           
  1504                           ; BSR set to: 1
  1505                           ;main.c: 66:     {;main.c: 67:         Forwardhalfblock(&motorL,&motorR);
  1506   0023F0  0E7B               	movlw	low _motorL
  1507   0023F2  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1508   0023F4  0E01               	movlw	high _motorL
  1509   0023F6  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1510   0023F8  0E72               	movlw	low _motorR
  1511   0023FA  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1512   0023FC  0E01               	movlw	high _motorR
  1513   0023FE  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1514   002400  EC52  F029         	call	_Forwardhalfblock	;wreg free
  1515   002404                     
  1516                           ;main.c: 68:         move_count++;
  1517   002404  0101               	movlb	1	; () banked
  1518   002406  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1519   002408  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1520   00240A                     
  1521                           ; BSR set to: 1
  1522                           ;main.c: 69:         WayBack[move_count]=0;
  1523   00240A  0E00               	movlw	low _WayBack
  1524   00240C  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1525   00240E  6ED9               	movwf	fsr2l,c
  1526   002410  0E03               	movlw	high _WayBack
  1527   002412  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1528   002414  6EDA               	movwf	fsr2h,c
  1529   002416  0E00               	movlw	0
  1530   002418  6EDF               	movwf	indf2,c
  1531   00241A                     
  1532                           ; BSR set to: 1
  1533                           ;main.c: 73:         readColours(&vals);
  1534   00241A  0E84               	movlw	low _vals
  1535   00241C  6E0C               	movwf	readColours@vals^0,c
  1536   00241E  0E01               	movlw	high _vals
  1537   002420  6E0D               	movwf	(readColours@vals+1)^0,c
  1538   002422  ECC9  F028         	call	_readColours	;wreg free
  1539   002426                     
  1540                           ;main.c: 76:         colour_rel(&vals, &rel);
  1541   002426  0E84               	movlw	low _vals
  1542   002428  6E4B               	movwf	colour_rel@vals^0,c
  1543   00242A  0E01               	movlw	high _vals
  1544   00242C  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1545   00242E  0E66               	movlw	low _rel
  1546   002430  6E4D               	movwf	colour_rel@rel^0,c
  1547   002432  0E01               	movlw	high _rel
  1548   002434  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1549   002436  EC5D  F01A         	call	_colour_rel	;wreg free
  1550   00243A                     
  1551                           ;main.c: 79:         if (vals.L>=2200){
  1552   00243A  0101               	movlb	1	; () banked
  1553   00243C  BF8B               	btfsc	(_vals+7)& (0+255),7,b
  1554   00243E  EF2A  F012         	goto	u5491
  1555   002442  0E98               	movlw	152
  1556   002444  5D8A               	subwf	(_vals+6)& (0+255),w,b
  1557   002446  0E08               	movlw	8
  1558   002448  598B               	subwfb	(_vals+7)& (0+255),w,b
  1559   00244A  A0D8               	btfss	status,0,c
  1560   00244C  EF2A  F012         	goto	u5491
  1561   002450  EF2C  F012         	goto	u5490
  1562   002454                     u5491:
  1563   002454  EFEE  F013         	goto	l5565
  1564   002458                     u5490:
  1565   002458                     
  1566                           ; BSR set to: 1
  1567                           ;main.c: 80:             Forwardhalfblock(&motorL,&motorR);
  1568   002458  0E7B               	movlw	low _motorL
  1569   00245A  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1570   00245C  0E01               	movlw	high _motorL
  1571   00245E  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1572   002460  0E72               	movlw	low _motorR
  1573   002462  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1574   002464  0E01               	movlw	high _motorR
  1575   002466  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1576   002468  EC52  F029         	call	_Forwardhalfblock	;wreg free
  1577                           
  1578                           ;main.c: 82:             stop(&motorL, &motorR);
  1579   00246C  0E7B               	movlw	low _motorL
  1580   00246E  6E14               	movwf	stop@mL^0,c
  1581   002470  0E01               	movlw	high _motorL
  1582   002472  6E15               	movwf	(stop@mL+1)^0,c
  1583   002474  0E72               	movlw	low _motorR
  1584   002476  6E16               	movwf	stop@mR^0,c
  1585   002478  0E01               	movlw	high _motorR
  1586   00247A  6E17               	movwf	(stop@mR+1)^0,c
  1587   00247C  ECAD  F027         	call	_stop	;wreg free
  1588   002480                     
  1589                           ;main.c: 83:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1590   002480  0E11               	movlw	17
  1591   002482  0100               	movlb	0	; () banked
  1592   002484  6FD2               	movwf	(??_main+1)& (0+255),b
  1593   002486  0E3C               	movlw	60
  1594   002488  6FD1               	movwf	??_main& (0+255),b
  1595   00248A  0ECB               	movlw	203
  1596   00248C                     u5637:
  1597   00248C  2EE8               	decfsz	wreg,f,c
  1598   00248E  D7FE               	bra	u5637
  1599   002490  2FD1               	decfsz	??_main& (0+255),f,b
  1600   002492  D7FC               	bra	u5637
  1601   002494  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1602   002496  D7FA               	bra	u5637
  1603                           
  1604                           ;main.c: 88:             while (consecuitive<20){
  1605   002498  EF81  F012         	goto	l5491
  1606   00249C                     l5479:
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;main.c: 89:                 int colour = Colour_decider(&vals, &rel);
  1610   00249C  0E84               	movlw	low _vals
  1611   00249E  6E4B               	movwf	Colour_decider@vals^0,c
  1612   0024A0  0E01               	movlw	high _vals
  1613   0024A2  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1614   0024A4  0E66               	movlw	low _rel
  1615   0024A6  6E4D               	movwf	Colour_decider@rel^0,c
  1616   0024A8  0E01               	movlw	high _rel
  1617   0024AA  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1618   0024AC  EC2D  F007         	call	_Colour_decider	;wreg free
  1619   0024B0  C04B  F1F4         	movff	?_Colour_decider,main@colour
  1620   0024B4  C04C  F1F5         	movff	?_Colour_decider+1,main@colour+1
  1621   0024B8                     
  1622                           ;main.c: 90:                 if (colour==prev_colour){
  1623   0024B8  0101               	movlb	1	; () banked
  1624   0024BA  51F6               	movf	main@prev_colour& (0+255),w,b
  1625   0024BC  19F4               	xorwf	main@colour& (0+255),w,b
  1626   0024BE  E107               	bnz	u5501
  1627   0024C0  51F7               	movf	(main@prev_colour+1)& (0+255),w,b
  1628   0024C2  19F5               	xorwf	(main@colour+1)& (0+255),w,b
  1629   0024C4  A4D8               	btfss	status,2,c
  1630   0024C6  EF67  F012         	goto	u5501
  1631   0024CA  EF69  F012         	goto	u5500
  1632   0024CE                     u5501:
  1633   0024CE  EF6D  F012         	goto	l5485
  1634   0024D2                     u5500:
  1635   0024D2                     
  1636                           ; BSR set to: 1
  1637                           ;main.c: 91:                     consecuitive++;
  1638   0024D2  4BF2               	infsnz	main@consecuitive& (0+255),f,b
  1639   0024D4  2BF3               	incf	(main@consecuitive+1)& (0+255),f,b
  1640                           
  1641                           ;main.c: 92:                 }
  1642   0024D6  EF71  F012         	goto	l5487
  1643   0024DA                     l5485:
  1644                           
  1645                           ; BSR set to: 1
  1646                           ;main.c: 94:                     consecuitive=0;
  1647   0024DA  0E00               	movlw	0
  1648   0024DC  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1649   0024DE  0E00               	movlw	0
  1650   0024E0  6FF2               	movwf	main@consecuitive& (0+255),b
  1651   0024E2                     l5487:
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;main.c: 96:                 prev_colour=colour;
  1655   0024E2  C1F4  F1F6         	movff	main@colour,main@prev_colour
  1656   0024E6  C1F5  F1F7         	movff	main@colour+1,main@prev_colour+1
  1657   0024EA                     
  1658                           ; BSR set to: 1
  1659                           ;main.c: 97:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1660   0024EA  0E05               	movlw	5
  1661   0024EC  0100               	movlb	0	; () banked
  1662   0024EE  6FD2               	movwf	(??_main+1)& (0+255),b
  1663   0024F0  0E0F               	movlw	15
  1664   0024F2  6FD1               	movwf	??_main& (0+255),b
  1665   0024F4  0EF1               	movlw	241
  1666   0024F6                     u5647:
  1667   0024F6  2EE8               	decfsz	wreg,f,c
  1668   0024F8  D7FE               	bra	u5647
  1669   0024FA  2FD1               	decfsz	??_main& (0+255),f,b
  1670   0024FC  D7FC               	bra	u5647
  1671   0024FE  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1672   002500  D7FA               	bra	u5647
  1673   002502                     l5491:
  1674                           
  1675                           ;main.c: 88:             while (consecuitive<20){
  1676   002502  0101               	movlb	1	; () banked
  1677   002504  BFF3               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1678   002506  EF8E  F012         	goto	u5511
  1679   00250A  51F3               	movf	(main@consecuitive+1)& (0+255),w,b
  1680   00250C  E109               	bnz	u5510
  1681   00250E  0E14               	movlw	20
  1682   002510  5DF2               	subwf	main@consecuitive& (0+255),w,b
  1683   002512  A0D8               	btfss	status,0,c
  1684   002514  EF8E  F012         	goto	u5511
  1685   002518  EF90  F012         	goto	u5510
  1686   00251C                     u5511:
  1687   00251C  EF4E  F012         	goto	l5479
  1688   002520                     u5510:
  1689   002520                     
  1690                           ; BSR set to: 1
  1691                           ;main.c: 99:             consecuitive=0;
  1692   002520  0E00               	movlw	0
  1693   002522  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1694   002524  0E00               	movlw	0
  1695   002526  6FF2               	movwf	main@consecuitive& (0+255),b
  1696   002528                     
  1697                           ; BSR set to: 1
  1698                           ;main.c: 101:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",r
      +                          el.R, rel.G,rel.B,vals.L, prev_colour);
  1699   002528  0E8C               	movlw	low main@buf
  1700   00252A  0100               	movlb	0	; () banked
  1701   00252C  6FB0               	movwf	sprintf@s& (0+255),b
  1702   00252E  0E01               	movlw	high main@buf
  1703   002530  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1704   002532  0E01               	movlw	low STR_1
  1705   002534  6FB2               	movwf	sprintf@fmt& (0+255),b
  1706   002536  0E0E               	movlw	high STR_1
  1707   002538  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1708   00253A  C166  F0B4         	movff	_rel,?_sprintf+4
  1709   00253E  C167  F0B5         	movff	_rel+1,?_sprintf+5
  1710   002542  C168  F0B6         	movff	_rel+2,?_sprintf+6
  1711   002546  C169  F0B7         	movff	_rel+3,?_sprintf+7
  1712   00254A  C16A  F0B8         	movff	_rel+4,?_sprintf+8
  1713   00254E  C16B  F0B9         	movff	_rel+5,?_sprintf+9
  1714   002552  C16C  F0BA         	movff	_rel+6,?_sprintf+10
  1715   002556  C16D  F0BB         	movff	_rel+7,?_sprintf+11
  1716   00255A  C16E  F0BC         	movff	_rel+8,?_sprintf+12
  1717   00255E  C16F  F0BD         	movff	_rel+9,?_sprintf+13
  1718   002562  C170  F0BE         	movff	_rel+10,?_sprintf+14
  1719   002566  C171  F0BF         	movff	_rel+11,?_sprintf+15
  1720   00256A  C18A  F0C0         	movff	_vals+6,?_sprintf+16
  1721   00256E  C18B  F0C1         	movff	_vals+7,?_sprintf+17
  1722   002572  C1F6  F0C2         	movff	main@prev_colour,?_sprintf+18
  1723   002576  C1F7  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1724   00257A  EC5C  F02A         	call	_sprintf	;wreg free
  1725   00257E                     
  1726                           ;main.c: 102:             sendStringSerial4(buf);
  1727   00257E  0E8C               	movlw	low main@buf
  1728   002580  6E02               	movwf	sendStringSerial4@string^0,c
  1729   002582  0E01               	movlw	high main@buf
  1730   002584  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1731   002586  EC5A  F02D         	call	_sendStringSerial4	;wreg free
  1732   00258A                     
  1733                           ;main.c: 104:             if (prev_colour==1){
  1734   00258A  0101               	movlb	1	; () banked
  1735   00258C  05F6               	decf	main@prev_colour& (0+255),w,b
  1736   00258E  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1737   002590  A4D8               	btfss	status,2,c
  1738   002592  EFCD  F012         	goto	u5521
  1739   002596  EFCF  F012         	goto	u5520
  1740   00259A                     u5521:
  1741   00259A  EFE6  F012         	goto	l5507
  1742   00259E                     u5520:
  1743   00259E                     
  1744                           ; BSR set to: 1
  1745                           ;main.c: 105:                 RedMove(&motorL, &motorR);
  1746   00259E  0E7B               	movlw	low _motorL
  1747   0025A0  6E20               	movwf	RedMove@mL^0,c
  1748   0025A2  0E01               	movlw	high _motorL
  1749   0025A4  6E21               	movwf	(RedMove@mL+1)^0,c
  1750   0025A6  0E72               	movlw	low _motorR
  1751   0025A8  6E22               	movwf	RedMove@mR^0,c
  1752   0025AA  0E01               	movlw	high _motorR
  1753   0025AC  6E23               	movwf	(RedMove@mR+1)^0,c
  1754   0025AE  EC00  F02D         	call	_RedMove	;wreg free
  1755   0025B2                     
  1756                           ;main.c: 106:                 move_count++;
  1757   0025B2  0101               	movlb	1	; () banked
  1758   0025B4  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1759   0025B6  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1760   0025B8                     
  1761                           ; BSR set to: 1
  1762                           ;main.c: 107:                 WayBack[move_count]=1;
  1763   0025B8  0E00               	movlw	low _WayBack
  1764   0025BA  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1765   0025BC  6ED9               	movwf	fsr2l,c
  1766   0025BE  0E03               	movlw	high _WayBack
  1767   0025C0  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1768   0025C2  6EDA               	movwf	fsr2h,c
  1769   0025C4  0E01               	movlw	1
  1770   0025C6  6EDF               	movwf	indf2,c
  1771                           
  1772                           ;main.c: 108:             }
  1773   0025C8  EF0F  F014         	goto	l5569
  1774   0025CC                     l5507:
  1775                           
  1776                           ; BSR set to: 1
  1777   0025CC  0E02               	movlw	2
  1778   0025CE  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1779   0025D0  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1780   0025D2  A4D8               	btfss	status,2,c
  1781   0025D4  EFEE  F012         	goto	u5531
  1782   0025D8  EFF0  F012         	goto	u5530
  1783   0025DC                     u5531:
  1784   0025DC  EF07  F013         	goto	l5515
  1785   0025E0                     u5530:
  1786   0025E0                     
  1787                           ; BSR set to: 1
  1788                           ;main.c: 110:                 OrangeMove(&motorL, &motorR);
  1789   0025E0  0E7B               	movlw	low _motorL
  1790   0025E2  6E20               	movwf	OrangeMove@mL^0,c
  1791   0025E4  0E01               	movlw	high _motorL
  1792   0025E6  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1793   0025E8  0E72               	movlw	low _motorR
  1794   0025EA  6E22               	movwf	OrangeMove@mR^0,c
  1795   0025EC  0E01               	movlw	high _motorR
  1796   0025EE  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1797   0025F0  EC85  F02A         	call	_OrangeMove	;wreg free
  1798   0025F4                     
  1799                           ;main.c: 111:                 move_count++;
  1800   0025F4  0101               	movlb	1	; () banked
  1801   0025F6  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1802   0025F8  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1803   0025FA                     
  1804                           ; BSR set to: 1
  1805                           ;main.c: 112:                 WayBack[move_count]=2;
  1806   0025FA  0E00               	movlw	low _WayBack
  1807   0025FC  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1808   0025FE  6ED9               	movwf	fsr2l,c
  1809   002600  0E03               	movlw	high _WayBack
  1810   002602  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1811   002604  6EDA               	movwf	fsr2h,c
  1812   002606  0E02               	movlw	2
  1813   002608  6EDF               	movwf	indf2,c
  1814                           
  1815                           ;main.c: 113:             }
  1816   00260A  EF0F  F014         	goto	l5569
  1817   00260E                     l5515:
  1818                           
  1819                           ; BSR set to: 1
  1820   00260E  0E03               	movlw	3
  1821   002610  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1822   002612  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1823   002614  A4D8               	btfss	status,2,c
  1824   002616  EF0F  F013         	goto	u5541
  1825   00261A  EF11  F013         	goto	u5540
  1826   00261E                     u5541:
  1827   00261E  EF28  F013         	goto	l5523
  1828   002622                     u5540:
  1829   002622                     
  1830                           ; BSR set to: 1
  1831                           ;main.c: 115:                 YellowMove(&motorL, &motorR);
  1832   002622  0E7B               	movlw	low _motorL
  1833   002624  6E20               	movwf	YellowMove@mL^0,c
  1834   002626  0E01               	movlw	high _motorL
  1835   002628  6E21               	movwf	(YellowMove@mL+1)^0,c
  1836   00262A  0E72               	movlw	low _motorR
  1837   00262C  6E22               	movwf	YellowMove@mR^0,c
  1838   00262E  0E01               	movlw	high _motorR
  1839   002630  6E23               	movwf	(YellowMove@mR+1)^0,c
  1840   002632  EC00  F02B         	call	_YellowMove	;wreg free
  1841   002636                     
  1842                           ;main.c: 116:                 move_count++;
  1843   002636  0101               	movlb	1	; () banked
  1844   002638  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1845   00263A  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1846   00263C                     
  1847                           ; BSR set to: 1
  1848                           ;main.c: 117:                 WayBack[move_count]=3;
  1849   00263C  0E00               	movlw	low _WayBack
  1850   00263E  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1851   002640  6ED9               	movwf	fsr2l,c
  1852   002642  0E03               	movlw	high _WayBack
  1853   002644  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1854   002646  6EDA               	movwf	fsr2h,c
  1855   002648  0E03               	movlw	3
  1856   00264A  6EDF               	movwf	indf2,c
  1857                           
  1858                           ;main.c: 118:             }
  1859   00264C  EF0F  F014         	goto	l5569
  1860   002650                     l5523:
  1861                           
  1862                           ; BSR set to: 1
  1863   002650  0E04               	movlw	4
  1864   002652  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1865   002654  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1866   002656  A4D8               	btfss	status,2,c
  1867   002658  EF30  F013         	goto	u5551
  1868   00265C  EF32  F013         	goto	u5550
  1869   002660                     u5551:
  1870   002660  EF49  F013         	goto	l5531
  1871   002664                     u5550:
  1872   002664                     
  1873                           ; BSR set to: 1
  1874                           ;main.c: 120:                 BlueMove(&motorL, &motorR);
  1875   002664  0E7B               	movlw	low _motorL
  1876   002666  6E20               	movwf	BlueMove@mL^0,c
  1877   002668  0E01               	movlw	high _motorL
  1878   00266A  6E21               	movwf	(BlueMove@mL+1)^0,c
  1879   00266C  0E72               	movlw	low _motorR
  1880   00266E  6E22               	movwf	BlueMove@mR^0,c
  1881   002670  0E01               	movlw	high _motorR
  1882   002672  6E23               	movwf	(BlueMove@mR+1)^0,c
  1883   002674  EC96  F028         	call	_BlueMove	;wreg free
  1884   002678                     
  1885                           ;main.c: 121:                 move_count++;
  1886   002678  0101               	movlb	1	; () banked
  1887   00267A  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1888   00267C  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1889   00267E                     
  1890                           ; BSR set to: 1
  1891                           ;main.c: 122:                 WayBack[move_count]=4;
  1892   00267E  0E00               	movlw	low _WayBack
  1893   002680  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1894   002682  6ED9               	movwf	fsr2l,c
  1895   002684  0E03               	movlw	high _WayBack
  1896   002686  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1897   002688  6EDA               	movwf	fsr2h,c
  1898   00268A  0E04               	movlw	4
  1899   00268C  6EDF               	movwf	indf2,c
  1900                           
  1901                           ;main.c: 123:             }
  1902   00268E  EF0F  F014         	goto	l5569
  1903   002692                     l5531:
  1904                           
  1905                           ; BSR set to: 1
  1906   002692  0E05               	movlw	5
  1907   002694  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1908   002696  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1909   002698  A4D8               	btfss	status,2,c
  1910   00269A  EF51  F013         	goto	u5561
  1911   00269E  EF53  F013         	goto	u5560
  1912   0026A2                     u5561:
  1913   0026A2  EF6A  F013         	goto	l5539
  1914   0026A6                     u5560:
  1915   0026A6                     
  1916                           ; BSR set to: 1
  1917                           ;main.c: 125:                 GreenMove(&motorL, &motorR);
  1918   0026A6  0E7B               	movlw	low _motorL
  1919   0026A8  6E20               	movwf	GreenMove@mL^0,c
  1920   0026AA  0E01               	movlw	high _motorL
  1921   0026AC  6E21               	movwf	(GreenMove@mL+1)^0,c
  1922   0026AE  0E72               	movlw	low _motorR
  1923   0026B0  6E22               	movwf	GreenMove@mR^0,c
  1924   0026B2  0E01               	movlw	high _motorR
  1925   0026B4  6E23               	movwf	(GreenMove@mR+1)^0,c
  1926   0026B6  EC1F  F02D         	call	_GreenMove	;wreg free
  1927   0026BA                     
  1928                           ;main.c: 126:                 move_count++;
  1929   0026BA  0101               	movlb	1	; () banked
  1930   0026BC  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1931   0026BE  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1932   0026C0                     
  1933                           ; BSR set to: 1
  1934                           ;main.c: 127:                 WayBack[move_count]=5;
  1935   0026C0  0E00               	movlw	low _WayBack
  1936   0026C2  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1937   0026C4  6ED9               	movwf	fsr2l,c
  1938   0026C6  0E03               	movlw	high _WayBack
  1939   0026C8  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1940   0026CA  6EDA               	movwf	fsr2h,c
  1941   0026CC  0E05               	movlw	5
  1942   0026CE  6EDF               	movwf	indf2,c
  1943                           
  1944                           ;main.c: 128:             }
  1945   0026D0  EF0F  F014         	goto	l5569
  1946   0026D4                     l5539:
  1947                           
  1948                           ; BSR set to: 1
  1949   0026D4  0E06               	movlw	6
  1950   0026D6  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1951   0026D8  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1952   0026DA  A4D8               	btfss	status,2,c
  1953   0026DC  EF72  F013         	goto	u5571
  1954   0026E0  EF74  F013         	goto	u5570
  1955   0026E4                     u5571:
  1956   0026E4  EF8B  F013         	goto	l5547
  1957   0026E8                     u5570:
  1958   0026E8                     
  1959                           ; BSR set to: 1
  1960                           ;main.c: 130:                 LightBlueMove(&motorL, &motorR);
  1961   0026E8  0E7B               	movlw	low _motorL
  1962   0026EA  6E20               	movwf	LightBlueMove@mL^0,c
  1963   0026EC  0E01               	movlw	high _motorL
  1964   0026EE  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1965   0026F0  0E72               	movlw	low _motorR
  1966   0026F2  6E22               	movwf	LightBlueMove@mR^0,c
  1967   0026F4  0E01               	movlw	high _motorR
  1968   0026F6  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1969   0026F8  ECAE  F02A         	call	_LightBlueMove	;wreg free
  1970   0026FC                     
  1971                           ;main.c: 131:                 move_count++;
  1972   0026FC  0101               	movlb	1	; () banked
  1973   0026FE  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1974   002700  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1975   002702                     
  1976                           ; BSR set to: 1
  1977                           ;main.c: 132:                 WayBack[move_count]=6;
  1978   002702  0E00               	movlw	low _WayBack
  1979   002704  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1980   002706  6ED9               	movwf	fsr2l,c
  1981   002708  0E03               	movlw	high _WayBack
  1982   00270A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1983   00270C  6EDA               	movwf	fsr2h,c
  1984   00270E  0E06               	movlw	6
  1985   002710  6EDF               	movwf	indf2,c
  1986                           
  1987                           ;main.c: 133:             }
  1988   002712  EF0F  F014         	goto	l5569
  1989   002716                     l5547:
  1990                           
  1991                           ; BSR set to: 1
  1992   002716  0E07               	movlw	7
  1993   002718  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1994   00271A  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1995   00271C  A4D8               	btfss	status,2,c
  1996   00271E  EF93  F013         	goto	u5581
  1997   002722  EF95  F013         	goto	u5580
  1998   002726                     u5581:
  1999   002726  EFAC  F013         	goto	l5555
  2000   00272A                     u5580:
  2001   00272A                     
  2002                           ; BSR set to: 1
  2003                           ;main.c: 135:                 PinkMove(&motorL, &motorR);
  2004   00272A  0E7B               	movlw	low _motorL
  2005   00272C  6E20               	movwf	PinkMove@mL^0,c
  2006   00272E  0E01               	movlw	high _motorL
  2007   002730  6E21               	movwf	(PinkMove@mL+1)^0,c
  2008   002732  0E72               	movlw	low _motorR
  2009   002734  6E22               	movwf	PinkMove@mR^0,c
  2010   002736  0E01               	movlw	high _motorR
  2011   002738  6E23               	movwf	(PinkMove@mR+1)^0,c
  2012   00273A  EC29  F02B         	call	_PinkMove	;wreg free
  2013   00273E                     
  2014                           ;main.c: 136:                 move_count++;
  2015   00273E  0101               	movlb	1	; () banked
  2016   002740  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2017   002742  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2018   002744                     
  2019                           ; BSR set to: 1
  2020                           ;main.c: 137:                 WayBack[move_count]=7;
  2021   002744  0E00               	movlw	low _WayBack
  2022   002746  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2023   002748  6ED9               	movwf	fsr2l,c
  2024   00274A  0E03               	movlw	high _WayBack
  2025   00274C  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2026   00274E  6EDA               	movwf	fsr2h,c
  2027   002750  0E07               	movlw	7
  2028   002752  6EDF               	movwf	indf2,c
  2029                           
  2030                           ;main.c: 138:             }
  2031   002754  EF0F  F014         	goto	l5569
  2032   002758                     l5555:
  2033                           
  2034                           ; BSR set to: 1
  2035   002758  0E0A               	movlw	10
  2036   00275A  19F6               	xorwf	main@prev_colour& (0+255),w,b
  2037   00275C  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2038   00275E  A4D8               	btfss	status,2,c
  2039   002760  EFB4  F013         	goto	u5591
  2040   002764  EFB6  F013         	goto	u5590
  2041   002768                     u5591:
  2042   002768  EFC2  F013         	goto	l5559
  2043   00276C                     u5590:
  2044   00276C                     
  2045                           ; BSR set to: 1
  2046                           ;main.c: 140:                 RetryMove(&motorL, &motorR);
  2047   00276C  0E7B               	movlw	low _motorL
  2048   00276E  6E1A               	movwf	RetryMove@mL^0,c
  2049   002770  0E01               	movlw	high _motorL
  2050   002772  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2051   002774  0E72               	movlw	low _motorR
  2052   002776  6E1C               	movwf	RetryMove@mR^0,c
  2053   002778  0E01               	movlw	high _motorR
  2054   00277A  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2055   00277C  EC6C  F027         	call	_RetryMove	;wreg free
  2056                           
  2057                           ;main.c: 141:             }
  2058   002780  EF0F  F014         	goto	l5569
  2059   002784                     l5559:
  2060                           
  2061                           ; BSR set to: 1
  2062   002784  51F6               	movf	main@prev_colour& (0+255),w,b
  2063   002786  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2064   002788  A4D8               	btfss	status,2,c
  2065   00278A  EFC9  F013         	goto	u5601
  2066   00278E  EFCB  F013         	goto	u5600
  2067   002792                     u5601:
  2068   002792  EFEC  F013         	goto	l406
  2069   002796                     u5600:
  2070   002796                     
  2071                           ; BSR set to: 1
  2072                           ;main.c: 143:                 BlueMove(&motorL, &motorR);
  2073   002796  0E7B               	movlw	low _motorL
  2074   002798  6E20               	movwf	BlueMove@mL^0,c
  2075   00279A  0E01               	movlw	high _motorL
  2076   00279C  6E21               	movwf	(BlueMove@mL+1)^0,c
  2077   00279E  0E72               	movlw	low _motorR
  2078   0027A0  6E22               	movwf	BlueMove@mR^0,c
  2079   0027A2  0E01               	movlw	high _motorR
  2080   0027A4  6E23               	movwf	(BlueMove@mR+1)^0,c
  2081   0027A6  EC96  F028         	call	_BlueMove	;wreg free
  2082                           
  2083                           ;main.c: 144:                 go_Home(WayBack);
  2084   0027AA  0E00               	movlw	low _WayBack
  2085   0027AC  6E24               	movwf	go_Home@WayBack^0,c
  2086   0027AE  0E03               	movlw	high _WayBack
  2087   0027B0  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2088   0027B2  ECBF  F01F         	call	_go_Home	;wreg free
  2089                           
  2090                           ;main.c: 145:                 stop(&motorL, &motorR);
  2091   0027B6  0E7B               	movlw	low _motorL
  2092   0027B8  6E14               	movwf	stop@mL^0,c
  2093   0027BA  0E01               	movlw	high _motorL
  2094   0027BC  6E15               	movwf	(stop@mL+1)^0,c
  2095   0027BE  0E72               	movlw	low _motorR
  2096   0027C0  6E16               	movwf	stop@mR^0,c
  2097   0027C2  0E01               	movlw	high _motorR
  2098   0027C4  6E17               	movwf	(stop@mR+1)^0,c
  2099   0027C6  ECAD  F027         	call	_stop	;wreg free
  2100   0027CA                     
  2101                           ;main.c: 146:                 run_flag=0;
  2102   0027CA  0E00               	movlw	0
  2103   0027CC  0101               	movlb	1	; () banked
  2104   0027CE  6FF1               	movwf	(main@run_flag+1)& (0+255),b
  2105   0027D0  0E00               	movlw	0
  2106   0027D2  6FF0               	movwf	main@run_flag& (0+255),b
  2107   0027D4  EF0F  F014         	goto	l5569
  2108   0027D8                     l406:
  2109                           
  2110                           ; BSR set to: 1
  2111   0027D8  EF0F  F014         	goto	l5569
  2112   0027DC                     l5565:
  2113                           
  2114                           ; BSR set to: 1
  2115                           ;main.c: 152:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals
      +                          .G,vals.B,vals.L);
  2116   0027DC  0E8C               	movlw	low main@buf
  2117   0027DE  0100               	movlb	0	; () banked
  2118   0027E0  6FB0               	movwf	sprintf@s& (0+255),b
  2119   0027E2  0E01               	movlw	high main@buf
  2120   0027E4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2121   0027E6  0E2E               	movlw	low STR_2
  2122   0027E8  6FB2               	movwf	sprintf@fmt& (0+255),b
  2123   0027EA  0E0E               	movlw	high STR_2
  2124   0027EC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2125   0027EE  C184  F0B4         	movff	_vals,?_sprintf+4
  2126   0027F2  C185  F0B5         	movff	_vals+1,?_sprintf+5
  2127   0027F6  C186  F0B6         	movff	_vals+2,?_sprintf+6
  2128   0027FA  C187  F0B7         	movff	_vals+3,?_sprintf+7
  2129   0027FE  C188  F0B8         	movff	_vals+4,?_sprintf+8
  2130   002802  C189  F0B9         	movff	_vals+5,?_sprintf+9
  2131   002806  C18A  F0BA         	movff	_vals+6,?_sprintf+10
  2132   00280A  C18B  F0BB         	movff	_vals+7,?_sprintf+11
  2133   00280E  EC5C  F02A         	call	_sprintf	;wreg free
  2134   002812                     
  2135                           ;main.c: 153:             sendStringSerial4(buf);
  2136   002812  0E8C               	movlw	low main@buf
  2137   002814  6E02               	movwf	sendStringSerial4@string^0,c
  2138   002816  0E01               	movlw	high main@buf
  2139   002818  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2140   00281A  EC5A  F02D         	call	_sendStringSerial4	;wreg free
  2141   00281E                     l5569:
  2142                           
  2143                           ;main.c: 65:     while (run_flag)
  2144   00281E  0101               	movlb	1	; () banked
  2145   002820  51F0               	movf	main@run_flag& (0+255),w,b
  2146   002822  11F1               	iorwf	(main@run_flag+1)& (0+255),w,b
  2147   002824  A4D8               	btfss	status,2,c
  2148   002826  EF17  F014         	goto	u5611
  2149   00282A  EF19  F014         	goto	u5610
  2150   00282E                     u5611:
  2151   00282E  EFF8  F011         	goto	l5463
  2152   002832                     u5610:
  2153   002832                     
  2154                           ; BSR set to: 1
  2155   002832  EF07  F000         	goto	start
  2156   002836                     __end_of_main:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _sprintf *****************
  2160 ;; Defined at:
  2161 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2164 ;;		 -> main@buf(100), 
  2165 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2166 ;;		 -> STR_2(34), STR_1(45), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2169 ;;  ap              2  100[BANK0 ] PTR void [1]
  2170 ;;		 -> ?_sprintf(2), 
  2171 ;;  ret             2    0        int 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  2   80[BANK0 ] int 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2181 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;Total ram usage:       33 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 8
  2188 ;; This function calls:
  2189 ;;		_vfprintf
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text1
  2196   0054B8                     __ptext1:
  2197                           	callstack 0
  2198   0054B8                     _sprintf:
  2199                           	callstack 22
  2200   0054B8  0EB4               	movlw	low (?_sprintf+4)
  2201   0054BA  0100               	movlb	0	; () banked
  2202   0054BC  6FC4               	movwf	sprintf@ap& (0+255),b
  2203   0054BE  0E00               	movlw	high (?_sprintf+4)
  2204   0054C0  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2205   0054C2  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2206   0054C6  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2207   0054CA                     
  2208                           ; BSR set to: 0
  2209   0054CA  0E00               	movlw	0
  2210   0054CC  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2211   0054CE  0E00               	movlw	0
  2212   0054D0  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2213   0054D2                     
  2214                           ; BSR set to: 0
  2215   0054D2  0E00               	movlw	0
  2216   0054D4  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2217   0054D6  0E00               	movlw	0
  2218   0054D8  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2219   0054DA                     
  2220                           ; BSR set to: 0
  2221   0054DA  0EC6               	movlw	low sprintf@f
  2222   0054DC  6FA8               	movwf	vfprintf@fp& (0+255),b
  2223   0054DE  0E00               	movlw	high sprintf@f
  2224   0054E0  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2225   0054E2  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2226   0054E6  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2227   0054EA  0EC4               	movlw	low sprintf@ap
  2228   0054EC  6FAC               	movwf	vfprintf@ap& (0+255),b
  2229   0054EE  0E00               	movlw	high sprintf@ap
  2230   0054F0  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2231   0054F2  EC31  F02A         	call	_vfprintf	;wreg free
  2232   0054F6  0100               	movlb	0	; () banked
  2233   0054F8  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2234   0054FA  25B0               	addwf	sprintf@s& (0+255),w,b
  2235   0054FC  6ED9               	movwf	fsr2l,c
  2236   0054FE  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2237   005500  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2238   005502  6EDA               	movwf	fsr2h,c
  2239   005504  0E00               	movlw	0
  2240   005506  6EDF               	movwf	indf2,c
  2241   005508                     
  2242                           ; BSR set to: 0
  2243   005508  0012               	return		;funcret
  2244   00550A                     __end_of_sprintf:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _vfprintf *****************
  2248 ;; Defined at:
  2249 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2252 ;;		 -> sprintf@f(11), 
  2253 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2254 ;;		 -> STR_2(34), STR_1(45), 
  2255 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2256 ;;		 -> sprintf@ap(2), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2259 ;;		 -> STR_2(34), STR_1(45), 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2   72[BANK0 ] int 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2272 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2273 ;;Total ram usage:        8 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 7
  2276 ;; This function calls:
  2277 ;;		_vfpfcnvrt
  2278 ;; This function is called by:
  2279 ;;		_sprintf
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text2
  2284   005462                     __ptext2:
  2285                           	callstack 0
  2286   005462                     _vfprintf:
  2287                           	callstack 22
  2288   005462                     
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
=======
   127                           ; 
   128                           ; Code-generator required, PIC18F67K40 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131   000000                     
   132                           	psect	idataBANK0
   133   005C6E                     __pidataBANK0:
   134                           	callstack 0
   135                           
   136                           ;initializer for _high_threshold
   137   005C6E  03E8               	dw	1000
   138                           
   139                           ;initializer for _DataFlag
   140   005C70  01                 	db	1
   141   000000                     _TRISEbits	set	3973
   142   000000                     _TX4REG	set	3812
   143   000000                     _RC4STAbits	set	3815
   144   000000                     _SP4BRGH	set	3814
   145   000000                     _SSP2CON2bits	set	3802
   146   000000                     _RX4PPS	set	3605
   147   000000                     _SSP2CLKPPS	set	3612
   148   000000                     _SSP2DATPPS	set	3613
   149   000000                     _ANSELDbits	set	3751
   150   000000                     _SSP2ADD	set	3798
   151   000000                     _SSP2CON1bits	set	3801
   152   000000                     _LATAbits	set	3961
   153   000000                     _LATFbits	set	3966
   154   000000                     _LATGbits	set	3967
   155   000000                     _TRISAbits	set	3969
   156   000000                     _TRISGbits	set	3975
   157   000000                     _PORTFbits	set	3982
   158   000000                     _CCPR2H	set	4006
   159   000000                     _CCPR1H	set	4010
   160   000000                     _TRISCbits	set	3971
   161   000000                     _TRISDbits	set	3972
   162   000000                     _TRISFbits	set	3974
   163   000000                     _LATDbits	set	3964
   164   000000                     _RC4REG	set	3811
   165   000000                     _SP4BRGL	set	3813
   166   000000                     _TX4STAbits	set	3816
   167   000000                     _BAUD4CONbits	set	3817
   168   000000                     _SSP2CON2	set	3802
   169   000000                     _SSP2STAT	set	3800
   170   000000                     _ANSELFbits	set	3764
   171   000000                     _SSP2BUF	set	3797
   172   000000                     _PIE4bits	set	3629
   173   000000                     _PIR4bits	set	3639
   174   000000                     _RC0PPS	set	3682
   175   000000                     _RD5PPS	set	3695
   176   000000                     _RE2PPS	set	3700
   177   000000                     _RD6PPS	set	3696
   178   000000                     _RC7PPS	set	3689
   179   000000                     _CCPR4H	set	3873
   180   000000                     _CCPR3H	set	3877
   181   000000                     _CCP1CONbits	set	4011
   182   000000                     _CCPTMRS0bits	set	4013
   183   000000                     _T2PR	set	4028
   184   000000                     _T2CONbits	set	4029
   185   000000                     _TMR0L	set	4051
   186   000000                     _TMR0H	set	4052
   187   000000                     _CCP2CONbits	set	4007
   188   000000                     _CCP3CONbits	set	3878
   189   000000                     _CCP4CONbits	set	3874
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _T0CON0bits	set	4053
   192   000000                     _RE4PPS	set	3702
   193   000000                     _RG6PPS	set	3720
   194   000000                     _T2CLKCONbits	set	4031
   195   000000                     _T2HLTbits	set	4030
   196                           
   197                           	psect	smallconst
   198   000E00                     __psmallconst:
   199                           	callstack 0
   200   000E00  00                 	db	0
   201   000E01                     STR_1:
   202   000E01  72                 	db	114	;'r'
   203   000E02  65                 	db	101	;'e'
   204   000E03  64                 	db	100	;'d'
   205   000E04  3D                 	db	61	;'='
   206   000E05  25                 	db	37
   207   000E06  66                 	db	102	;'f'
   208   000E07  20                 	db	32
   209   000E08  67                 	db	103	;'g'
   210   000E09  72                 	db	114	;'r'
   211   000E0A  65                 	db	101	;'e'
   212   000E0B  65                 	db	101	;'e'
   213   000E0C  6E                 	db	110	;'n'
   214   000E0D  3D                 	db	61	;'='
   215   000E0E  25                 	db	37
   216   000E0F  66                 	db	102	;'f'
   217   000E10  20                 	db	32
   218   000E11  62                 	db	98	;'b'
   219   000E12  6C                 	db	108	;'l'
   220   000E13  75                 	db	117	;'u'
   221   000E14  65                 	db	101	;'e'
   222   000E15  3D                 	db	61	;'='
   223   000E16  25                 	db	37
   224   000E17  66                 	db	102	;'f'
   225   000E18  20                 	db	32
   226   000E19  6C                 	db	108	;'l'
   227   000E1A  75                 	db	117	;'u'
   228   000E1B  6D                 	db	109	;'m'
   229   000E1C  3D                 	db	61	;'='
   230   000E1D  25                 	db	37
   231   000E1E  64                 	db	100	;'d'
   232   000E1F  20                 	db	32
   233   000E20  63                 	db	99	;'c'
   234   000E21  6F                 	db	111	;'o'
   235   000E22  6C                 	db	108	;'l'
   236   000E23  6F                 	db	111	;'o'
   237   000E24  75                 	db	117	;'u'
   238   000E25  72                 	db	114	;'r'
   239   000E26  31                 	db	49	;'1'
   240   000E27  3D                 	db	61	;'='
   241   000E28  25                 	db	37
   242   000E29  64                 	db	100	;'d'
   243   000E2A  20                 	db	32
   244   000E2B  0D                 	db	13
   245   000E2C  0A                 	db	10
   246   000E2D  00                 	db	0
   247   000E2E                     STR_2:
   248   000E2E  72                 	db	114	;'r'
   249   000E2F  65                 	db	101	;'e'
   250   000E30  64                 	db	100	;'d'
   251   000E31  3D                 	db	61	;'='
   252   000E32  25                 	db	37
   253   000E33  64                 	db	100	;'d'
   254   000E34  20                 	db	32
   255   000E35  67                 	db	103	;'g'
   256   000E36  72                 	db	114	;'r'
   257   000E37  65                 	db	101	;'e'
   258   000E38  65                 	db	101	;'e'
   259   000E39  6E                 	db	110	;'n'
   260   000E3A  3D                 	db	61	;'='
   261   000E3B  25                 	db	37
   262   000E3C  64                 	db	100	;'d'
   263   000E3D  20                 	db	32
   264   000E3E  62                 	db	98	;'b'
   265   000E3F  6C                 	db	108	;'l'
   266   000E40  75                 	db	117	;'u'
   267   000E41  65                 	db	101	;'e'
   268   000E42  3D                 	db	61	;'='
   269   000E43  25                 	db	37
   270   000E44  64                 	db	100	;'d'
   271   000E45  20                 	db	32
   272   000E46  6C                 	db	108	;'l'
   273   000E47  75                 	db	117	;'u'
   274   000E48  6D                 	db	109	;'m'
   275   000E49  3D                 	db	61	;'='
   276   000E4A  25                 	db	37
   277   000E4B  64                 	db	100	;'d'
   278   000E4C  20                 	db	32
   279   000E4D  0D                 	db	13
   280   000E4E  0A                 	db	10
   281   000E4F  00                 	db	0
   282   000E50                     STR_3:
   283   000E50  69                 	db	105	;'i'
   284   000E51  6E                 	db	110	;'n'
   285   000E52  66                 	db	102	;'f'
   286   000E53  00                 	db	0
   287   000E54                     STR_6:
   288   000E54  6E                 	db	110	;'n'
   289   000E55  61                 	db	97	;'a'
   290   000E56  6E                 	db	110	;'n'
   291   000E57  00                 	db	0
   292   000E58  00                 	db	0	; dummy byte at the end
   293   000000                     
   294                           ; #config settings
   295                           
   296                           	psect	cinit
   297   005834                     __pcinit:
   298                           	callstack 0
   299   005834                     start_initialization:
   300                           	callstack 0
   301   005834                     __initialization:
   302                           	callstack 0
   303                           
   304                           ; Initialize objects allocated to BANK0 (3 bytes)
   305                           ; load TBLPTR registers with __pidataBANK0
   306   005834  0E6E               	movlw	low __pidataBANK0
   307   005836  6EF6               	movwf	tblptrl,c
   308   005838  0E5C               	movlw	high __pidataBANK0
   309   00583A  6EF7               	movwf	tblptrh,c
   310   00583C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   311   00583E  6EF8               	movwf	tblptru,c
   312   005840  0009               	tblrd		*+	;fetch initializer
   313   005842  CFF5 F0FA          	movff	tablat,__pdataBANK0
   314   005846  0009               	tblrd		*+	;fetch initializer
   315   005848  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   316   00584C  0009               	tblrd		*+	;fetch initializer
   317   00584E  CFF5 F0FC          	movff	tablat,__pdataBANK0+2
   318                           
   319                           ; Clear objects allocated to BANK2 (210 bytes)
   320   005852  EE02  F000         	lfsr	0,__pbssBANK2
   321   005856  0ED2               	movlw	210
   322   005858                     clear_0:
   323   005858  6AEE               	clrf	postinc0,c
   324   00585A  06E8               	decf	wreg,f,c
   325   00585C  E1FD               	bnz	clear_0
   326                           
   327                           ; Clear objects allocated to BANK1 (132 bytes)
   328   00585E  EE01  F000         	lfsr	0,__pbssBANK1
   329   005862  0E84               	movlw	132
   330   005864                     clear_1:
   331   005864  6AEE               	clrf	postinc0,c
   332   005866  06E8               	decf	wreg,f,c
   333   005868  E1FD               	bnz	clear_1
   334                           
   335                           ; Clear objects allocated to BANK0 (39 bytes)
   336   00586A  EE00  F0D3         	lfsr	0,__pbssBANK0
   337   00586E  0E27               	movlw	39
   338   005870                     clear_2:
   339   005870  6AEE               	clrf	postinc0,c
   340   005872  06E8               	decf	wreg,f,c
   341   005874  E1FD               	bnz	clear_2
   342   005876                     end_of_initialization:
   343                           	callstack 0
   344   005876                     __end_of__initialization:
   345                           	callstack 0
   346   005876  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   347   005878  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   348   00587A  0100               	movlb	0
   349   00587C  EF98  F011         	goto	_main	;jump to C main() function
   350                           
   351                           	psect	bssBANK0
   352   0000D3                     __pbssBANK0:
   353                           	callstack 0
   354   0000D3                     _EUSART4RXbuf:
   355                           	callstack 0
   356   0000D3                     	ds	20
   357   0000E7                     floorf@F526:
   358                           	callstack 0
   359   0000E7                     	ds	4
   360   0000EB                     ___fpclassifyf@F465:
   361                           	callstack 0
   362   0000EB                     	ds	4
   363   0000EF                     _width:
   364                           	callstack 0
   365   0000EF                     	ds	2
   366   0000F1                     _prec:
   367                           	callstack 0
   368   0000F1                     	ds	2
   369   0000F3                     _low_threshold:
   370                           	callstack 0
   371   0000F3                     	ds	2
   372   0000F5                     _flags:
   373                           	callstack 0
   374   0000F5                     	ds	1
   375   0000F6                     _TxBufReadCnt:
   376                           	callstack 0
   377   0000F6                     	ds	1
   378   0000F7                     _TxBufWriteCnt:
   379                           	callstack 0
   380   0000F7                     	ds	1
   381   0000F8                     _RxBufReadCnt:
   382                           	callstack 0
   383   0000F8                     	ds	1
   384   0000F9                     _RxBufWriteCnt:
   385                           	callstack 0
   386   0000F9                     	ds	1
   387                           
   388                           	psect	dataBANK0
   389   0000FA                     __pdataBANK0:
   390                           	callstack 0
   391   0000FA                     _high_threshold:
   392                           	callstack 0
   393   0000FA                     	ds	2
   394   0000FC                     _DataFlag:
   395                           	callstack 0
   396   0000FC                     	ds	1
   397                           
   398                           	psect	bssBANK1
   399   000100                     __pbssBANK1:
   400                           	callstack 0
   401   000100                     	ds	12
   402   00010C                     _move_count:
   403                           	callstack 0
   404   00010C                     	ds	2
   405   00010E                     _dbuf:
   406                           	callstack 0
   407   00010E                     	ds	80
   408   00015E                     _rel:
   409                           	callstack 0
   410   00015E                     	ds	12
   411   00016A                     _motorR:
   412                           	callstack 0
   413   00016A                     	ds	9
   414   000173                     _motorL:
   415                           	callstack 0
   416   000173                     	ds	9
   417   00017C                     _vals:
   418                           	callstack 0
   419   00017C                     	ds	8
   420                           
   421                           	psect	bssBANK2
   422   000200                     __pbssBANK2:
   423                           	callstack 0
   424   000200                     _EUSART4TXbuf:
   425                           	callstack 0
   426   000200                     	ds	60
   427   00023C                     _Time_forward:
   428                           	callstack 0
   429   00023C                     	ds	100
   430   0002A0                     _WayBack:
   431                           	callstack 0
   432   0002A0                     	ds	50
   433                           
   434                           	psect	cstackBANK1
   435   000184                     __pcstackBANK1:
   436                           	callstack 0
   437   000184                     main@buf:
   438                           	callstack 0
   439                           
   440                           ; 100 bytes @ 0x0
   441   000184                     	ds	100
   442   0001E8                     main@run_flag:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x64
   446   0001E8                     	ds	2
   447   0001EA                     main@consecuitive:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x66
   451   0001EA                     	ds	2
   452   0001EC                     main@colour:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x68
   456   0001EC                     	ds	2
   457   0001EE                     main@prev_colour:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x6A
   461   0001EE                     	ds	2
   462                           
   463                           	psect	cstackBANK0
   464   000060                     __pcstackBANK0:
   465                           	callstack 0
   466   000060                     efgtoa@fp:
   467                           	callstack 0
   468   000060                     colour_rel@L:
   469                           	callstack 0
   470   000060                     _Colour_decider$2910:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474   000060                     	ds	2
   475   000062                     efgtoa@f:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x2
   479   000062                     	ds	2
   480   000064                     Colour_decider@Cmax_i:
   481                           	callstack 0
   482   000064                     _colour_rel$2908:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x4
   486   000064                     	ds	2
   487   000066                     efgtoa@c:
   488                           	callstack 0
   489   000066                     Colour_decider@RGB_col:
   490                           	callstack 0
   491                           
   492                           ; 12 bytes @ 0x6
   493   000066                     	ds	1
   494   000067                     ??_efgtoa:
   495                           
   496                           ; 1 bytes @ 0x7
   497   000067                     	ds	1
   498   000068                     _colour_rel$2909:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0x8
   502   000068                     	ds	1
   503   000069                     efgtoa@ne:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x9
   507   000069                     	ds	2
   508   00006B                     efgtoa@p:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xB
   512   00006B                     	ds	1
   513   00006C                     colour_rel@R:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0xC
   517   00006C                     	ds	1
   518   00006D                     efgtoa@t:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0xD
   522   00006D                     	ds	2
   523   00006F                     _efgtoa$2539:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0xF
   527   00006F                     	ds	1
   528   000070                     colour_rel@G:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x10
   532   000070                     	ds	1
   533   000071                     efgtoa@pp:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x11
   537   000071                     	ds	1
   538   000072                     efgtoa@mode:
   539                           	callstack 0
   540   000072                     Colour_decider@Cmax:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x12
   544   000072                     	ds	1
   545   000073                     efgtoa@nmode:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x13
   549   000073                     	ds	1
   550   000074                     efgtoa@d:
   551                           	callstack 0
   552   000074                     colour_rel@B:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x14
   556   000074                     	ds	2
   557   000076                     efgtoa@m:
   558                           	callstack 0
   559   000076                     Colour_decider@Cmin:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x16
   563   000076                     	ds	2
   564   000078                     efgtoa@e:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x18
   568   000078                     	ds	2
   569   00007A                     Colour_decider@i:
   570                           	callstack 0
   571   00007A                     efgtoa@w:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x1A
   575   00007A                     	ds	2
   576   00007C                     Colour_decider@Hue:
   577                           	callstack 0
   578   00007C                     efgtoa@ou:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x1C
   582   00007C                     	ds	4
   583   000080                     efgtoa@i:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x20
   587   000080                     	ds	2
   588   000082                     efgtoa@h:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x22
   592   000082                     	ds	4
   593   000086                     efgtoa@l:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x26
   597   000086                     	ds	4
   598   00008A                     efgtoa@sign:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x2A
   602   00008A                     	ds	1
   603   00008B                     efgtoa@n:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x2B
   607   00008B                     	ds	2
   608   00008D                     efgtoa@g:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x2D
   612   00008D                     	ds	4
   613   000091                     efgtoa@u:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x31
   617   000091                     	ds	4
   618   000095                     vfpfcnvrt@fp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x35
   622   000095                     	ds	2
   623   000097                     vfpfcnvrt@fmt:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x37
   627   000097                     	ds	2
   628   000099                     vfpfcnvrt@ap:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x39
   632   000099                     	ds	2
   633   00009B                     ??_vfpfcnvrt:
   634                           
   635                           ; 1 bytes @ 0x3B
   636   00009B                     	ds	2
   637   00009D                     vfpfcnvrt@convarg:
   638                           	callstack 0
   639                           
   640                           ; 8 bytes @ 0x3D
   641   00009D                     	ds	8
   642   0000A5                     vfpfcnvrt@c:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x45
   646   0000A5                     	ds	1
   647   0000A6                     vfpfcnvrt@cp:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x46
   651   0000A6                     	ds	2
   652   0000A8                     ?_vfprintf:
   653                           	callstack 0
   654   0000A8                     vfprintf@fp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x48
   658   0000A8                     	ds	2
   659   0000AA                     vfprintf@fmt:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x4A
   663   0000AA                     	ds	2
   664   0000AC                     vfprintf@ap:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x4C
   668   0000AC                     	ds	2
   669   0000AE                     vfprintf@cfmt:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x4E
   673   0000AE                     	ds	2
   674   0000B0                     ?_sprintf:
   675                           	callstack 0
   676   0000B0                     sprintf@s:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x50
   680   0000B0                     	ds	2
   681   0000B2                     sprintf@fmt:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x52
   685   0000B2                     	ds	18
   686   0000C4                     sprintf@ap:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x64
   690   0000C4                     	ds	2
   691   0000C6                     sprintf@f:
   692                           	callstack 0
   693                           
   694                           ; 11 bytes @ 0x66
   695   0000C6                     	ds	11
   696   0000D1                     ??_main:
   697                           
   698                           ; 1 bytes @ 0x71
   699   0000D1                     	ds	2
   700                           
   701                           	psect	cstackCOMRAM
   702   000001                     __pcstackCOMRAM:
   703                           	callstack 0
   704   000001                     ??_I2C_2_Master_Idle:
   705   000001                     ?___fpclassifyf:
   706                           	callstack 0
   707   000001                     ?___wmul:
   708                           	callstack 0
   709   000001                     ?___fladd:
   710                           	callstack 0
   711   000001                     ?_labs:
   712                           	callstack 0
   713   000001                     ?___flneg:
   714                           	callstack 0
   715   000001                     ?___fltol:
   716                           	callstack 0
   717   000001                     ?___xxtofl:
   718                           	callstack 0
   719   000001                     ?___aodiv:
   720                           	callstack 0
   721   000001                     ?___aomod:
   722                           	callstack 0
   723   000001                     sendCharSerial4@charToSend:
   724                           	callstack 0
   725   000001                     initDCmotorsPWM@PWMperiod:
   726                           	callstack 0
   727   000001                     getTMR0val@moving:
   728                           	callstack 0
   729   000001                     ___wmul@multiplier:
   730                           	callstack 0
   731   000001                     memcpy@d1:
   732                           	callstack 0
   733   000001                     fputc@c:
   734                           	callstack 0
   735   000001                     strcpy@dest:
   736                           	callstack 0
   737   000001                     ___flneg@f1:
   738                           	callstack 0
   739   000001                     ___fltol@f1:
   740                           	callstack 0
   741   000001                     ___fladd@b:
   742                           	callstack 0
   743   000001                     ___xxtofl@val:
   744                           	callstack 0
   745   000001                     ___fpclassifyf@x:
   746                           	callstack 0
   747   000001                     labs@a:
   748                           	callstack 0
   749   000001                     ___aodiv@dividend:
   750                           	callstack 0
   751   000001                     ___aomod@dividend:
   752                           	callstack 0
   753                           
   754                           ; 8 bytes @ 0x0
   755   000001                     	ds	1
   756   000002                     ??_I2C_2_Master_Read:
   757   000002                     I2C_2_Master_Write@data_byte:
   758                           	callstack 0
   759   000002                     sendStringSerial4@string:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x1
   763   000002                     	ds	1
   764   000003                     color_writetoaddr@value:
   765                           	callstack 0
   766   000003                     I2C_2_Master_Read@ack:
   767                           	callstack 0
   768   000003                     ___wmul@multiplicand:
   769                           	callstack 0
   770   000003                     memcpy@s1:
   771                           	callstack 0
   772   000003                     fputc@fp:
   773                           	callstack 0
   774   000003                     strcpy@src:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2
   778   000003                     	ds	1
   779   000004                     color_writetoaddr@address:
   780                           	callstack 0
   781   000004                     I2C_2_Master_Read@tmp:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x3
   785   000004                     	ds	1
   786   000005                     ??_fputc:
   787   000005                     ??___fpclassifyf:
   788   000005                     ??_labs:
   789   000005                     ??_color_click_init:
   790   000005                     ??___fltol:
   791   000005                     ??___xxtofl:
   792   000005                     ?_color_read_lum:
   793                           	callstack 0
   794   000005                     ?_color_read_Red:
   795                           	callstack 0
   796   000005                     ?_color_read_Green:
   797                           	callstack 0
   798   000005                     ?_color_read_Blue:
   799                           	callstack 0
   800   000005                     ___wmul@product:
   801                           	callstack 0
   802   000005                     memcpy@n:
   803                           	callstack 0
   804   000005                     strcpy@s:
   805                           	callstack 0
   806   000005                     ___fladd@a:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x4
   810   000005                     	ds	2
   811   000007                     ??_color_read_lum:
   812   000007                     ??_color_read_Red:
   813   000007                     ??_color_read_Green:
   814   000007                     ??_color_read_Blue:
   815   000007                     ?___lwdiv:
   816                           	callstack 0
   817   000007                     ___lwdiv@dividend:
   818                           	callstack 0
   819   000007                     memcpy@d:
   820                           	callstack 0
   821   000007                     strcpy@d:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x6
   825   000007                     	ds	2
   826   000009                     ??___fladd:
   827   000009                     ___fltol@sign1:
   828                           	callstack 0
   829   000009                     ___xxtofl@sign:
   830                           	callstack 0
   831   000009                     ___lwdiv@divisor:
   832                           	callstack 0
   833   000009                     ___fpclassifyf@e:
   834                           	callstack 0
   835   000009                     memcpy@s:
   836                           	callstack 0
   837   000009                     ___aodiv@divisor:
   838                           	callstack 0
   839   000009                     ___aomod@divisor:
   840                           	callstack 0
   841                           
   842                           ; 8 bytes @ 0x8
   843   000009                     	ds	1
   844   00000A                     ___fltol@exp1:
   845                           	callstack 0
   846   00000A                     ___xxtofl@exp:
   847                           	callstack 0
   848   00000A                     color_read_lum@tmp:
   849                           	callstack 0
   850   00000A                     color_read_Red@tmp:
   851                           	callstack 0
   852   00000A                     color_read_Green@tmp:
   853                           	callstack 0
   854   00000A                     color_read_Blue@tmp:
   855                           	callstack 0
   856   00000A                     fputs@s:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x9
   860   00000A                     	ds	1
   861   00000B                     memcpy@tmp:
   862                           	callstack 0
   863   00000B                     ___lwdiv@quotient:
   864                           	callstack 0
   865   00000B                     ___xxtofl@arg:
   866                           	callstack 0
   867   00000B                     ___fpclassifyf@u:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0xA
   871   00000B                     	ds	1
   872   00000C                     readColours@vals:
   873                           	callstack 0
   874   00000C                     fputs@fp:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0xB
   878   00000C                     	ds	1
   879   00000D                     ___lwdiv@counter:
   880                           	callstack 0
   881   00000D                     ___fladd@signs:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0xC
   885   00000D                     	ds	1
   886   00000E                     ___fladd@aexp:
   887                           	callstack 0
   888   00000E                     fputs@c:
   889                           	callstack 0
   890   00000E                     setMotorPWM@m:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0xD
   894   00000E                     	ds	1
   895   00000F                     ___fladd@bexp:
   896                           	callstack 0
   897   00000F                     fputs@i:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0xE
   901   00000F                     	ds	1
   902   000010                     ??_setMotorPWM:
   903   000010                     ___fladd@grs:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0xF
   907   000010                     	ds	1
   908   000011                     ?___flmul:
   909                           	callstack 0
   910   000011                     ___aodiv@counter:
   911                           	callstack 0
   912   000011                     ___aomod@counter:
   913                           	callstack 0
   914   000011                     pad@fp:
   915                           	callstack 0
   916   000011                     ___flmul@b:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x10
   920   000011                     	ds	1
   921   000012                     setMotorPWM@posDuty:
   922                           	callstack 0
   923   000012                     ___aodiv@sign:
   924                           	callstack 0
   925   000012                     ___aomod@sign:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x11
   929   000012                     	ds	1
   930   000013                     ?_abs:
   931                           	callstack 0
   932   000013                     setMotorPWM@negDuty:
   933                           	callstack 0
   934   000013                     pad@buf:
   935                           	callstack 0
   936   000013                     abs@a:
   937                           	callstack 0
   938   000013                     ___aodiv@quotient:
   939                           	callstack 0
   940                           
   941                           ; 8 bytes @ 0x12
   942   000013                     	ds	1
   943   000014                     stop@mL:
   944                           	callstack 0
   945   000014                     turnLeft@mL:
   946                           	callstack 0
   947   000014                     turnRight@mL:
   948                           	callstack 0
   949   000014                     fullSpeedAhead@mL:
   950                           	callstack 0
   951   000014                     fullSpeedBack@mL:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x13
   955   000014                     	ds	1
   956   000015                     ??_abs:
   957   000015                     pad@p:
   958                           	callstack 0
   959   000015                     ___flmul@a:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x14
   963   000015                     	ds	1
   964   000016                     stop@mR:
   965                           	callstack 0
   966   000016                     turnLeft@mR:
   967                           	callstack 0
   968   000016                     turnRight@mR:
   969                           	callstack 0
   970   000016                     fullSpeedAhead@mR:
   971                           	callstack 0
   972   000016                     fullSpeedBack@mR:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x15
   976   000016                     	ds	1
   977   000017                     ??_pad:
   978                           
   979                           ; 1 bytes @ 0x16
   980   000017                     	ds	1
   981   000018                     ??_fullSpeedAhead:
   982   000018                     ??_stop:
   983   000018                     ??_turnLeft:
   984   000018                     ??_turnRight:
   985   000018                     ??_fullSpeedBack:
   986   000018                     pad@i:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x17
   990   000018                     	ds	1
   991   000019                     ??___flmul:
   992   000019                     turnRight45@mL:
   993                           	callstack 0
   994   000019                     turnLeft45@mL:
   995                           	callstack 0
   996   000019                     reverseDetect@mL:
   997                           	callstack 0
   998   000019                     reverseOneBlock@mL:
   999                           	callstack 0
  1000   000019                     ForwardOneBlock@mL:
  1001                           	callstack 0
  1002   000019                     Forwardhalfblock@mL:
  1003                           	callstack 0
  1004   000019                     RetryMove@mL:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x18
  1008   000019                     	ds	1
  1009   00001A                     pad@w:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x19
  1013   00001A                     	ds	1
  1014   00001B                     turnRight45@mR:
  1015                           	callstack 0
  1016   00001B                     turnLeft45@mR:
  1017                           	callstack 0
  1018   00001B                     reverseDetect@mR:
  1019                           	callstack 0
  1020   00001B                     reverseOneBlock@mR:
  1021                           	callstack 0
  1022   00001B                     ForwardOneBlock@mR:
  1023                           	callstack 0
  1024   00001B                     Forwardhalfblock@mR:
  1025                           	callstack 0
  1026   00001B                     RetryMove@mR:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x1A
  1030   00001B                     	ds	1
  1031   00001C                     dtoa@fp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x1B
  1035   00001C                     	ds	1
  1036   00001D                     ??_Forwardhalfblock:
  1037   00001D                     ??_RetryMove:
  1038   00001D                     ??_turnRight45:
  1039   00001D                     ??_turnLeft45:
  1040   00001D                     ??_reverseDetect:
  1041   00001D                     ??_reverseOneBlock:
  1042   00001D                     ??_ForwardOneBlock:
  1043   00001D                     ___flmul@sign:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x1C
  1047   00001D                     	ds	1
  1048   00001E                     ___flmul@grs:
  1049                           	callstack 0
  1050   00001E                     dtoa@d:
  1051                           	callstack 0
  1052                           
  1053                           ; 8 bytes @ 0x1D
  1054   00001E                     	ds	1
  1055   00001F                     RedMove@mL:
  1056                           	callstack 0
  1057   00001F                     GreenMove@mL:
  1058                           	callstack 0
  1059   00001F                     BlueMove@mL:
  1060                           	callstack 0
  1061   00001F                     YellowMove@mL:
  1062                           	callstack 0
  1063   00001F                     PinkMove@mL:
  1064                           	callstack 0
  1065   00001F                     OrangeMove@mL:
  1066                           	callstack 0
  1067   00001F                     LightBlueMove@mL:
  1068                           	callstack 0
  1069   00001F                     ReverseYellow@mL:
  1070                           	callstack 0
  1071   00001F                     ReversePink@mL:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x1E
  1075   00001F                     	ds	2
  1076   000021                     RedMove@mR:
  1077                           	callstack 0
  1078   000021                     GreenMove@mR:
  1079                           	callstack 0
  1080   000021                     BlueMove@mR:
  1081                           	callstack 0
  1082   000021                     YellowMove@mR:
  1083                           	callstack 0
  1084   000021                     PinkMove@mR:
  1085                           	callstack 0
  1086   000021                     OrangeMove@mR:
  1087                           	callstack 0
  1088   000021                     LightBlueMove@mR:
  1089                           	callstack 0
  1090   000021                     ReverseYellow@mR:
  1091                           	callstack 0
  1092   000021                     ReversePink@mR:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x20
  1096   000021                     	ds	1
  1097   000022                     ___flmul@aexp:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x21
  1101   000022                     	ds	1
  1102   000023                     ___flmul@bexp:
  1103                           	callstack 0
  1104   000023                     go_Home@WayBack:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x22
  1108   000023                     	ds	1
  1109   000024                     ___flmul@prod:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x23
  1113   000024                     	ds	1
  1114   000025                     go_Home@Time_forward:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x24
  1118   000025                     	ds	1
  1119   000026                     ??_dtoa:
  1120                           
  1121                           ; 1 bytes @ 0x25
  1122   000026                     	ds	1
  1123   000027                     ??_go_Home:
  1124                           
  1125                           ; 1 bytes @ 0x26
  1126   000027                     	ds	1
  1127   000028                     ___flmul@temp:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x27
  1131   000028                     	ds	2
  1132   00002A                     ?___flsub:
  1133                           	callstack 0
  1134   00002A                     go_Home@cur_time:
  1135                           	callstack 0
  1136   00002A                     ___flge@ff1:
  1137                           	callstack 0
  1138   00002A                     ___flsub@b:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x29
  1142   00002A                     	ds	2
  1143   00002C                     go_Home@i:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x2B
  1147   00002C                     	ds	2
  1148   00002E                     _dtoa$2508:
  1149                           	callstack 0
  1150   00002E                     ___flge@ff2:
  1151                           	callstack 0
  1152   00002E                     ___flsub@a:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x2D
  1156   00002E                     	ds	2
  1157   000030                     dtoa@p:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x2F
  1161   000030                     	ds	2
  1162   000032                     ??___flge:
  1163   000032                     ?___fldiv:
  1164                           	callstack 0
  1165   000032                     dtoa@w:
  1166                           	callstack 0
  1167   000032                     ___fleq@ff1:
  1168                           	callstack 0
  1169   000032                     ___fldiv@b:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x31
  1173   000032                     	ds	2
  1174   000034                     dtoa@n:
  1175                           	callstack 0
  1176                           
  1177                           ; 8 bytes @ 0x33
  1178   000034                     	ds	2
  1179   000036                     ___fleq@ff2:
  1180                           	callstack 0
  1181   000036                     ___fldiv@a:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x35
  1185   000036                     	ds	4
  1186   00003A                     ??___fldiv:
  1187   00003A                     ??___fleq:
  1188                           
  1189                           ; 1 bytes @ 0x39
  1190   00003A                     	ds	2
  1191   00003C                     dtoa@i:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x3B
  1195   00003C                     	ds	2
  1196   00003E                     dtoa@s:
  1197                           	callstack 0
  1198   00003E                     ___fldiv@rem:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x3D
  1202   00003E                     	ds	4
  1203   000042                     ___fldiv@sign:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x41
  1207   000042                     	ds	1
  1208   000043                     ___fldiv@new_exp:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x42
  1212   000043                     	ds	2
  1213   000045                     ___fldiv@grs:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x44
  1217   000045                     	ds	4
  1218   000049                     ___fldiv@bexp:
  1219                           	callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x48
  1222   000049                     	ds	1
  1223   00004A                     ___fldiv@aexp:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x49
  1227   00004A                     	ds	1
  1228   00004B                     ?_Colour_decider:
  1229                           	callstack 0
  1230   00004B                     ?_floorf:
  1231                           	callstack 0
  1232   00004B                     colour_rel@vals:
  1233                           	callstack 0
  1234   00004B                     Colour_decider@vals:
  1235                           	callstack 0
  1236   00004B                     floorf@x:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x4A
  1240   00004B                     	ds	2
  1241   00004D                     colour_rel@rel:
  1242                           	callstack 0
  1243   00004D                     Colour_decider@rel:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x4C
  1247   00004D                     	ds	2
  1248   00004F                     ??_floorf:
  1249   00004F                     ??_Colour_decider:
  1250                           
  1251                           ; 1 bytes @ 0x4E
  1252   00004F                     	ds	6
  1253   000055                     floorf@m:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x54
  1257   000055                     	ds	4
  1258   000059                     floorf@e:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x58
  1262   000059                     	ds	2
  1263   00005B                     floorf@u:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x5A
  1267   00005B                     	ds	4
  1268   00005F                     
  1269                           ; 1 bytes @ 0x5E
  1270 ;;
  1271 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1272 ;;
  1273 ;; *************** function _main *****************
  1274 ;; Defined at:
  1275 ;;		line 30 in file "main.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  colour          2  104[BANK1 ] int 
  1280 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1281 ;;  prev_colour     2  106[BANK1 ] int 
  1282 ;;  consecuitive    2  102[BANK1 ] int 
  1283 ;;  run_flag        2  100[BANK1 ] int 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;Total ram usage:      110 bytes
  1298 ;; Hardware stack levels required when called: 9
  1299 ;; This function calls:
  1300 ;;		_BlueMove
  1301 ;;		_Colour_decider
  1302 ;;		_Forwardhalfblock
  1303 ;;		_GreenMove
  1304 ;;		_I2C_2_Master_Init
  1305 ;;		_Interrupts_init
  1306 ;;		_LightBlueMove
  1307 ;;		_OrangeMove
  1308 ;;		_PinkMove
  1309 ;;		_RedMove
  1310 ;;		_RetryMove
  1311 ;;		_Timer0_init
  1312 ;;		_YellowMove
  1313 ;;		_color_click_init
  1314 ;;		_colour_rel
  1315 ;;		_fullSpeedAhead
  1316 ;;		_getTMR0val
  1317 ;;		_go_Home
  1318 ;;		_initDCmotorsPWM
  1319 ;;		_initUSART4
  1320 ;;		_readColours
  1321 ;;		_sendStringSerial4
  1322 ;;		_sprintf
  1323 ;;		_stop
  1324 ;; This function is called by:
  1325 ;;		Startup code after reset
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text0
  1330   002330                     __ptext0:
  1331                           	callstack 0
  1332   002330                     _main:
  1333                           	callstack 22
  1334   002330                     
  1335                           ;main.c: 31:     initUSART4();
  1336   002330  EC07  F02E         	call	_initUSART4	;wreg free
  1337   002334                     
  1338                           ;main.c: 32:     Interrupts_init();
  1339   002334  EC3A  F02E         	call	_Interrupts_init	;wreg free
  1340   002338                     
  1341                           ;main.c: 33:     color_click_init();
  1342   002338  ECD7  F02A         	call	_color_click_init	;wreg free
  1343   00233C                     
  1344                           ;main.c: 34:     I2C_2_Master_Init();
  1345   00233C  EC98  F02D         	call	_I2C_2_Master_Init	;wreg free
  1346   002340                     
  1347                           ;main.c: 35:     Timer0_init();
  1348   002340  ECF7  F02D         	call	_Timer0_init	;wreg free
  1349   002344                     
  1350                           ;main.c: 36:     initDCmotorsPWM(200);
  1351   002344  0E00               	movlw	0
  1352   002346  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1353   002348  0EC8               	movlw	200
  1354   00234A  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1355   00234C  EC57  F027         	call	_initDCmotorsPWM	;wreg free
  1356   002350                     
  1357                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1358   002350  9287               	bcf	135,1,c	;volatile
  1359   002352                     
  1360                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1361   002352  9881               	bcf	129,4,c	;volatile
  1362   002354                     
  1363                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1364   002354  9E86               	bcf	134,7,c	;volatile
  1365   002356                     
  1366                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1367   002356  8486               	bsf	134,2,c	;volatile
  1368   002358                     
  1369                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1370   002358  010E               	movlb	14	; () banked
  1371   00235A  95B4               	bcf	180,2,b	;volatile
  1372   00235C                     
  1373                           ; BSR set to: 14
  1374                           ;main.c: 43:     LATGbits.LATG1=1;
  1375   00235C  827F               	bsf	127,1,c	;volatile
  1376   00235E                     
  1377                           ; BSR set to: 14
  1378                           ;main.c: 44:     LATAbits.LATA4=1;
  1379   00235E  8879               	bsf	121,4,c	;volatile
  1380   002360                     
  1381                           ; BSR set to: 14
  1382                           ;main.c: 45:     LATFbits.LATF7=1;
  1383   002360  8E7E               	bsf	126,7,c	;volatile
  1384   002362                     
  1385                           ; BSR set to: 14
  1386                           ;main.c: 49:     motorL.power=0;
  1387   002362  0E00               	movlw	0
  1388   002364  0101               	movlb	1	; () banked
  1389   002366  6F73               	movwf	_motorL& (0+255),b
  1390   002368                     
  1391                           ; BSR set to: 1
  1392                           ;main.c: 50:     motorL.direction=1;
  1393   002368  0E01               	movlw	1
  1394   00236A  6F74               	movwf	(_motorL+1)& (0+255),b
  1395   00236C                     
  1396                           ; BSR set to: 1
  1397                           ;main.c: 51:     motorL.brakemode=1;
  1398   00236C  0E01               	movlw	1
  1399   00236E  6F75               	movwf	(_motorL+2)& (0+255),b
  1400   002370                     
  1401                           ; BSR set to: 1
  1402                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1403   002370  0EAA               	movlw	170
  1404   002372  6F78               	movwf	(_motorL+5)& (0+255),b
  1405   002374  0E0F               	movlw	15
  1406   002376  6F79               	movwf	(_motorL+6)& (0+255),b
  1407   002378                     
  1408                           ; BSR set to: 1
  1409                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1410   002378  0EA6               	movlw	166
  1411   00237A  6F7A               	movwf	(_motorL+7)& (0+255),b
  1412   00237C  0E0F               	movlw	15
  1413   00237E  6F7B               	movwf	(_motorL+8)& (0+255),b
  1414   002380                     
  1415                           ; BSR set to: 1
  1416                           ;main.c: 54:     motorL.PWMperiod=200;
  1417   002380  0E00               	movlw	0
  1418   002382  6F77               	movwf	(_motorL+4)& (0+255),b
  1419   002384  0EC8               	movlw	200
  1420   002386  6F76               	movwf	(_motorL+3)& (0+255),b
  1421   002388                     
  1422                           ; BSR set to: 1
  1423                           ;main.c: 55:     motorR.power=0;
  1424   002388  0E00               	movlw	0
  1425   00238A  6F6A               	movwf	_motorR& (0+255),b
  1426   00238C                     
  1427                           ; BSR set to: 1
  1428                           ;main.c: 56:     motorR.direction=1;
  1429   00238C  0E01               	movlw	1
  1430   00238E  6F6B               	movwf	(_motorR+1)& (0+255),b
  1431   002390                     
  1432                           ; BSR set to: 1
  1433                           ;main.c: 57:     motorR.brakemode=1;
  1434   002390  0E01               	movlw	1
  1435   002392  6F6C               	movwf	(_motorR+2)& (0+255),b
  1436   002394                     
  1437                           ; BSR set to: 1
  1438                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1439   002394  0E25               	movlw	37
  1440   002396  6F6F               	movwf	(_motorR+5)& (0+255),b
  1441   002398  0E0F               	movlw	15
  1442   00239A  6F70               	movwf	(_motorR+6)& (0+255),b
  1443   00239C                     
  1444                           ; BSR set to: 1
  1445                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1446   00239C  0E21               	movlw	33
  1447   00239E  6F71               	movwf	(_motorR+7)& (0+255),b
  1448   0023A0  0E0F               	movlw	15
  1449   0023A2  6F72               	movwf	(_motorR+8)& (0+255),b
  1450   0023A4                     
  1451                           ; BSR set to: 1
  1452                           ;main.c: 60:     motorR.PWMperiod=200;
  1453   0023A4  0E00               	movlw	0
  1454   0023A6  6F6E               	movwf	(_motorR+4)& (0+255),b
  1455   0023A8  0EC8               	movlw	200
  1456   0023AA  6F6D               	movwf	(_motorR+3)& (0+255),b
  1457   0023AC                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 61:     int consecuitive=0;
  1460   0023AC  0E00               	movlw	0
  1461   0023AE  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1462   0023B0  0E00               	movlw	0
  1463   0023B2  6FEA               	movwf	main@consecuitive& (0+255),b
  1464   0023B4                     
  1465                           ; BSR set to: 1
  1466                           ;main.c: 62:     int prev_colour =0;
  1467   0023B4  0E00               	movlw	0
  1468   0023B6  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1469   0023B8  0E00               	movlw	0
  1470   0023BA  6FEE               	movwf	main@prev_colour& (0+255),b
  1471   0023BC                     
  1472                           ; BSR set to: 1
  1473                           ;main.c: 63:     int run_flag=1;
  1474   0023BC  0E00               	movlw	0
  1475   0023BE  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1476   0023C0  0E01               	movlw	1
  1477   0023C2  6FE8               	movwf	main@run_flag& (0+255),b
  1478   0023C4                     
  1479                           ; BSR set to: 1
  1480                           ;main.c: 64:     move_count=-1;
  1481   0023C4  690C               	setf	_move_count& (0+255),b	;volatile
  1482   0023C6  690D               	setf	(_move_count+1)& (0+255),b	;volatile
  1483   0023C8                     l388:
  1484   0023C8  B48E               	btfsc	142,2,c	;volatile
  1485   0023CA  EFE9  F011         	goto	u5501
  1486   0023CE  EFEB  F011         	goto	u5500
  1487   0023D2                     u5501:
  1488   0023D2  EFE4  F011         	goto	l388
  1489   0023D6                     u5500:
  1490   0023D6                     
  1491                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1492   0023D6  0E52               	movlw	82
  1493   0023D8  0100               	movlb	0	; () banked
  1494   0023DA  6FD2               	movwf	(??_main+1)& (0+255),b
  1495   0023DC  0E2B               	movlw	43
  1496   0023DE  6FD1               	movwf	??_main& (0+255),b
  1497   0023E0  0E00               	movlw	0
  1498   0023E2                     u5647:
  1499   0023E2  2EE8               	decfsz	wreg,f,c
  1500   0023E4  D7FE               	bra	u5647
  1501   0023E6  2FD1               	decfsz	??_main& (0+255),f,b
  1502   0023E8  D7FC               	bra	u5647
  1503   0023EA  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1504   0023EC  D7FA               	bra	u5647
  1505   0023EE  F000               	nop	
  1506                           
  1507                           ;main.c: 67:     while (run_flag)
  1508   0023F0  EF1E  F014         	goto	l5688
  1509   0023F4                     l5566:
  1510                           
  1511                           ; BSR set to: 1
  1512                           ;main.c: 68:     {;main.c: 70:         fullSpeedAhead(&motorL,&motorR);
  1513   0023F4  0E73               	movlw	low _motorL
  1514   0023F6  6E14               	movwf	fullSpeedAhead@mL^0,c
  1515   0023F8  0E01               	movlw	high _motorL
  1516   0023FA  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1517   0023FC  0E6A               	movlw	low _motorR
  1518   0023FE  6E16               	movwf	fullSpeedAhead@mR^0,c
  1519   002400  0E01               	movlw	high _motorR
  1520   002402  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1521   002404  EC76  F026         	call	_fullSpeedAhead	;wreg free
  1522   002408                     
  1523                           ;main.c: 75:         readColours(&vals);
  1524   002408  0E7C               	movlw	low _vals
  1525   00240A  6E0C               	movwf	readColours@vals^0,c
  1526   00240C  0E01               	movlw	high _vals
  1527   00240E  6E0D               	movwf	(readColours@vals+1)^0,c
  1528   002410  ECF4  F028         	call	_readColours	;wreg free
  1529   002414                     
  1530                           ;main.c: 78:         colour_rel(&vals, &rel);
  1531   002414  0E7C               	movlw	low _vals
  1532   002416  6E4B               	movwf	colour_rel@vals^0,c
  1533   002418  0E01               	movlw	high _vals
  1534   00241A  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1535   00241C  0E5E               	movlw	low _rel
  1536   00241E  6E4D               	movwf	colour_rel@rel^0,c
  1537   002420  0E01               	movlw	high _rel
  1538   002422  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1539   002424  EC6C  F01A         	call	_colour_rel	;wreg free
  1540   002428                     
  1541                           ;main.c: 81:         if (vals.L>=500){
  1542   002428  0101               	movlb	1	; () banked
  1543   00242A  BF83               	btfsc	(_vals+7)& (0+255),7,b
  1544   00242C  EF21  F012         	goto	u5511
  1545   002430  0EF4               	movlw	244
  1546   002432  5D82               	subwf	(_vals+6)& (0+255),w,b
  1547   002434  0E01               	movlw	1
  1548   002436  5983               	subwfb	(_vals+7)& (0+255),w,b
  1549   002438  A0D8               	btfss	status,0,c
  1550   00243A  EF21  F012         	goto	u5511
  1551   00243E  EF23  F012         	goto	u5510
  1552   002442                     u5511:
  1553   002442  EFFD  F013         	goto	l5684
  1554   002446                     u5510:
  1555   002446                     
  1556                           ; BSR set to: 1
  1557                           ;main.c: 82:             Forwardhalfblock(&motorL,&motorR);
  1558   002446  0E73               	movlw	low _motorL
  1559   002448  6E19               	movwf	Forwardhalfblock@mL^0,c
  1560   00244A  0E01               	movlw	high _motorL
  1561   00244C  6E1A               	movwf	(Forwardhalfblock@mL+1)^0,c
  1562   00244E  0E6A               	movlw	low _motorR
  1563   002450  6E1B               	movwf	Forwardhalfblock@mR^0,c
  1564   002452  0E01               	movlw	high _motorR
  1565   002454  6E1C               	movwf	(Forwardhalfblock@mR+1)^0,c
  1566   002456  EC50  F029         	call	_Forwardhalfblock	;wreg free
  1567                           
  1568                           ;main.c: 84:             stop(&motorL, &motorR);
  1569   00245A  0E73               	movlw	low _motorL
  1570   00245C  6E14               	movwf	stop@mL^0,c
  1571   00245E  0E01               	movlw	high _motorL
  1572   002460  6E15               	movwf	(stop@mL+1)^0,c
  1573   002462  0E6A               	movlw	low _motorR
  1574   002464  6E16               	movwf	stop@mR^0,c
  1575   002466  0E01               	movlw	high _motorR
  1576   002468  6E17               	movwf	(stop@mR+1)^0,c
  1577   00246A  EC19  F028         	call	_stop	;wreg free
  1578   00246E                     
  1579                           ;main.c: 85:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1580   00246E  0E11               	movlw	17
  1581   002470  0100               	movlb	0	; () banked
  1582   002472  6FD2               	movwf	(??_main+1)& (0+255),b
  1583   002474  0E3C               	movlw	60
  1584   002476  6FD1               	movwf	??_main& (0+255),b
  1585   002478  0ECB               	movlw	203
  1586   00247A                     u5657:
  1587   00247A  2EE8               	decfsz	wreg,f,c
  1588   00247C  D7FE               	bra	u5657
  1589   00247E  2FD1               	decfsz	??_main& (0+255),f,b
  1590   002480  D7FC               	bra	u5657
  1591   002482  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1592   002484  D7FA               	bra	u5657
  1593   002486                     
  1594                           ;main.c: 90:             move_count++;
  1595   002486  0101               	movlb	1	; () banked
  1596   002488  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1597   00248A  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1598   00248C                     
  1599                           ; BSR set to: 1
  1600                           ;main.c: 91:             getTMR0val();
  1601   00248C  ECC1  F02D         	call	_getTMR0val	;wreg free
  1602                           
  1603                           ;main.c: 92:             while (consecuitive<20){
  1604   002490  EF7D  F012         	goto	l5594
  1605   002494                     l5582:
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;main.c: 93:                 int colour = Colour_decider(&vals, &rel);
  1609   002494  0E7C               	movlw	low _vals
  1610   002496  6E4B               	movwf	Colour_decider@vals^0,c
  1611   002498  0E01               	movlw	high _vals
  1612   00249A  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1613   00249C  0E5E               	movlw	low _rel
  1614   00249E  6E4D               	movwf	Colour_decider@rel^0,c
  1615   0024A0  0E01               	movlw	high _rel
  1616   0024A2  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1617   0024A4  EC2D  F007         	call	_Colour_decider	;wreg free
  1618   0024A8  C04B  F1EC         	movff	?_Colour_decider,main@colour
  1619   0024AC  C04C  F1ED         	movff	?_Colour_decider+1,main@colour+1
  1620   0024B0                     
  1621                           ;main.c: 94:                 if (colour==prev_colour){
  1622   0024B0  0101               	movlb	1	; () banked
  1623   0024B2  51EE               	movf	main@prev_colour& (0+255),w,b
  1624   0024B4  19EC               	xorwf	main@colour& (0+255),w,b
  1625   0024B6  E107               	bnz	u5521
  1626   0024B8  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1627   0024BA  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1628   0024BC  A4D8               	btfss	status,2,c
  1629   0024BE  EF63  F012         	goto	u5521
  1630   0024C2  EF65  F012         	goto	u5520
  1631   0024C6                     u5521:
  1632   0024C6  EF69  F012         	goto	l5588
  1633   0024CA                     u5520:
  1634   0024CA                     
  1635                           ; BSR set to: 1
  1636                           ;main.c: 95:                     consecuitive++;
  1637   0024CA  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1638   0024CC  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1639                           
  1640                           ;main.c: 96:                 }
  1641   0024CE  EF6D  F012         	goto	l5590
  1642   0024D2                     l5588:
  1643                           
  1644                           ; BSR set to: 1
  1645                           ;main.c: 98:                     consecuitive=0;
  1646   0024D2  0E00               	movlw	0
  1647   0024D4  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1648   0024D6  0E00               	movlw	0
  1649   0024D8  6FEA               	movwf	main@consecuitive& (0+255),b
  1650   0024DA                     l5590:
  1651                           
  1652                           ; BSR set to: 1
  1653                           ;main.c: 100:                 prev_colour=colour;
  1654   0024DA  C1EC  F1EE         	movff	main@colour,main@prev_colour
  1655   0024DE  C1ED  F1EF         	movff	main@colour+1,main@prev_colour+1
  1656   0024E2                     
  1657                           ; BSR set to: 1
  1658                           ;main.c: 101:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1659   0024E2  0E05               	movlw	5
  1660   0024E4  0100               	movlb	0	; () banked
  1661   0024E6  6FD2               	movwf	(??_main+1)& (0+255),b
  1662   0024E8  0E0F               	movlw	15
  1663   0024EA  6FD1               	movwf	??_main& (0+255),b
  1664   0024EC  0EF1               	movlw	241
  1665   0024EE                     u5667:
  1666   0024EE  2EE8               	decfsz	wreg,f,c
  1667   0024F0  D7FE               	bra	u5667
  1668   0024F2  2FD1               	decfsz	??_main& (0+255),f,b
  1669   0024F4  D7FC               	bra	u5667
  1670   0024F6  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1671   0024F8  D7FA               	bra	u5667
  1672   0024FA                     l5594:
  1673                           
  1674                           ;main.c: 92:             while (consecuitive<20){
  1675   0024FA  0101               	movlb	1	; () banked
  1676   0024FC  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1677   0024FE  EF8A  F012         	goto	u5531
  1678   002502  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1679   002504  E109               	bnz	u5530
  1680   002506  0E14               	movlw	20
  1681   002508  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1682   00250A  A0D8               	btfss	status,0,c
  1683   00250C  EF8A  F012         	goto	u5531
  1684   002510  EF8C  F012         	goto	u5530
  1685   002514                     u5531:
  1686   002514  EF4A  F012         	goto	l5582
  1687   002518                     u5530:
  1688   002518                     
  1689                           ; BSR set to: 1
  1690                           ;main.c: 103:             consecuitive=0;
  1691   002518  0E00               	movlw	0
  1692   00251A  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1693   00251C  0E00               	movlw	0
  1694   00251E  6FEA               	movwf	main@consecuitive& (0+255),b
  1695   002520                     
  1696                           ; BSR set to: 1
  1697                           ;main.c: 106:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",r
      +                          el.R, rel.G,rel.B,vals.L, prev_colour);
  1698   002520  0E84               	movlw	low main@buf
  1699   002522  0100               	movlb	0	; () banked
  1700   002524  6FB0               	movwf	sprintf@s& (0+255),b
  1701   002526  0E01               	movlw	high main@buf
  1702   002528  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1703   00252A  0E01               	movlw	low STR_1
  1704   00252C  6FB2               	movwf	sprintf@fmt& (0+255),b
  1705   00252E  0E0E               	movlw	high STR_1
  1706   002530  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1707   002532  C15E  F0B4         	movff	_rel,?_sprintf+4
  1708   002536  C15F  F0B5         	movff	_rel+1,?_sprintf+5
  1709   00253A  C160  F0B6         	movff	_rel+2,?_sprintf+6
  1710   00253E  C161  F0B7         	movff	_rel+3,?_sprintf+7
  1711   002542  C162  F0B8         	movff	_rel+4,?_sprintf+8
  1712   002546  C163  F0B9         	movff	_rel+5,?_sprintf+9
  1713   00254A  C164  F0BA         	movff	_rel+6,?_sprintf+10
  1714   00254E  C165  F0BB         	movff	_rel+7,?_sprintf+11
  1715   002552  C166  F0BC         	movff	_rel+8,?_sprintf+12
  1716   002556  C167  F0BD         	movff	_rel+9,?_sprintf+13
  1717   00255A  C168  F0BE         	movff	_rel+10,?_sprintf+14
  1718   00255E  C169  F0BF         	movff	_rel+11,?_sprintf+15
  1719   002562  C182  F0C0         	movff	_vals+6,?_sprintf+16
  1720   002566  C183  F0C1         	movff	_vals+7,?_sprintf+17
  1721   00256A  C1EE  F0C2         	movff	main@prev_colour,?_sprintf+18
  1722   00256E  C1EF  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1723   002572  EC5C  F02A         	call	_sprintf	;wreg free
  1724   002576                     
  1725                           ;main.c: 107:             sendStringSerial4(buf);
  1726   002576  0E84               	movlw	low main@buf
  1727   002578  6E02               	movwf	sendStringSerial4@string^0,c
  1728   00257A  0E01               	movlw	high main@buf
  1729   00257C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1730   00257E  EC80  F02D         	call	_sendStringSerial4	;wreg free
  1731   002582                     
  1732                           ;main.c: 109:             if (prev_colour==1){
  1733   002582  0101               	movlb	1	; () banked
  1734   002584  05EE               	decf	main@prev_colour& (0+255),w,b
  1735   002586  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1736   002588  A4D8               	btfss	status,2,c
  1737   00258A  EFC9  F012         	goto	u5541
  1738   00258E  EFCB  F012         	goto	u5540
  1739   002592                     u5541:
  1740   002592  EFE4  F012         	goto	l5612
  1741   002596                     u5540:
  1742   002596                     
  1743                           ; BSR set to: 1
  1744                           ;main.c: 110:                 RedMove(&motorL, &motorR);
  1745   002596  0E73               	movlw	low _motorL
  1746   002598  6E1F               	movwf	RedMove@mL^0,c
  1747   00259A  0E01               	movlw	high _motorL
  1748   00259C  6E20               	movwf	(RedMove@mL+1)^0,c
  1749   00259E  0E6A               	movlw	low _motorR
  1750   0025A0  6E21               	movwf	RedMove@mR^0,c
  1751   0025A2  0E01               	movlw	high _motorR
  1752   0025A4  6E22               	movwf	(RedMove@mR+1)^0,c
  1753   0025A6  EC26  F02D         	call	_RedMove	;wreg free
  1754   0025AA                     
  1755                           ;main.c: 111:                 TMR0H=0;
  1756   0025AA  0E00               	movlw	0
  1757   0025AC  6ED4               	movwf	212,c	;volatile
  1758   0025AE                     
  1759                           ;main.c: 112:                 TMR0L=0;
  1760   0025AE  0E00               	movlw	0
  1761   0025B0  6ED3               	movwf	211,c	;volatile
  1762   0025B2                     
  1763                           ;main.c: 113:                 WayBack[move_count]=1;
  1764   0025B2  0EA0               	movlw	low _WayBack
  1765   0025B4  0101               	movlb	1	; () banked
  1766   0025B6  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1767   0025B8  6ED9               	movwf	fsr2l,c
  1768   0025BA  0E02               	movlw	high _WayBack
  1769   0025BC  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1770   0025BE  6EDA               	movwf	fsr2h,c
  1771   0025C0  0E01               	movlw	1
  1772   0025C2  6EDF               	movwf	indf2,c
  1773                           
  1774                           ;main.c: 114:             }
  1775   0025C4  EF1E  F014         	goto	l5688
  1776   0025C8                     l5612:
  1777                           
  1778                           ; BSR set to: 1
  1779   0025C8  0E02               	movlw	2
  1780   0025CA  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1781   0025CC  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1782   0025CE  A4D8               	btfss	status,2,c
  1783   0025D0  EFEC  F012         	goto	u5551
  1784   0025D4  EFEE  F012         	goto	u5550
  1785   0025D8                     u5551:
  1786   0025D8  EF07  F013         	goto	l5622
  1787   0025DC                     u5550:
  1788   0025DC                     
  1789                           ; BSR set to: 1
  1790                           ;main.c: 116:                 OrangeMove(&motorL, &motorR);
  1791   0025DC  0E73               	movlw	low _motorL
  1792   0025DE  6E1F               	movwf	OrangeMove@mL^0,c
  1793   0025E0  0E01               	movlw	high _motorL
  1794   0025E2  6E20               	movwf	(OrangeMove@mL+1)^0,c
  1795   0025E4  0E6A               	movlw	low _motorR
  1796   0025E6  6E21               	movwf	OrangeMove@mR^0,c
  1797   0025E8  0E01               	movlw	high _motorR
  1798   0025EA  6E22               	movwf	(OrangeMove@mR+1)^0,c
  1799   0025EC  EC85  F02A         	call	_OrangeMove	;wreg free
  1800   0025F0                     
  1801                           ;main.c: 117:                 TMR0H=0;
  1802   0025F0  0E00               	movlw	0
  1803   0025F2  6ED4               	movwf	212,c	;volatile
  1804   0025F4                     
  1805                           ;main.c: 118:                 TMR0L=0;
  1806   0025F4  0E00               	movlw	0
  1807   0025F6  6ED3               	movwf	211,c	;volatile
  1808   0025F8                     
  1809                           ;main.c: 119:                 WayBack[move_count]=2;
  1810   0025F8  0EA0               	movlw	low _WayBack
  1811   0025FA  0101               	movlb	1	; () banked
  1812   0025FC  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1813   0025FE  6ED9               	movwf	fsr2l,c
  1814   002600  0E02               	movlw	high _WayBack
  1815   002602  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1816   002604  6EDA               	movwf	fsr2h,c
  1817   002606  0E02               	movlw	2
  1818   002608  6EDF               	movwf	indf2,c
  1819                           
  1820                           ;main.c: 120:             }
  1821   00260A  EF1E  F014         	goto	l5688
  1822   00260E                     l5622:
  1823                           
  1824                           ; BSR set to: 1
  1825   00260E  0E03               	movlw	3
  1826   002610  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1827   002612  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1828   002614  A4D8               	btfss	status,2,c
  1829   002616  EF0F  F013         	goto	u5561
  1830   00261A  EF11  F013         	goto	u5560
  1831   00261E                     u5561:
  1832   00261E  EF2A  F013         	goto	l5632
  1833   002622                     u5560:
  1834   002622                     
  1835                           ; BSR set to: 1
  1836                           ;main.c: 122:                 YellowMove(&motorL, &motorR);
  1837   002622  0E73               	movlw	low _motorL
  1838   002624  6E1F               	movwf	YellowMove@mL^0,c
  1839   002626  0E01               	movlw	high _motorL
  1840   002628  6E20               	movwf	(YellowMove@mL+1)^0,c
  1841   00262A  0E6A               	movlw	low _motorR
  1842   00262C  6E21               	movwf	YellowMove@mR^0,c
  1843   00262E  0E01               	movlw	high _motorR
  1844   002630  6E22               	movwf	(YellowMove@mR+1)^0,c
  1845   002632  EC00  F02B         	call	_YellowMove	;wreg free
  1846   002636                     
  1847                           ;main.c: 123:                 TMR0H=0;
  1848   002636  0E00               	movlw	0
  1849   002638  6ED4               	movwf	212,c	;volatile
  1850   00263A                     
  1851                           ;main.c: 124:                 TMR0L=0;
  1852   00263A  0E00               	movlw	0
  1853   00263C  6ED3               	movwf	211,c	;volatile
  1854   00263E                     
  1855                           ;main.c: 125:                 WayBack[move_count]=3;
  1856   00263E  0EA0               	movlw	low _WayBack
  1857   002640  0101               	movlb	1	; () banked
  1858   002642  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1859   002644  6ED9               	movwf	fsr2l,c
  1860   002646  0E02               	movlw	high _WayBack
  1861   002648  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1862   00264A  6EDA               	movwf	fsr2h,c
  1863   00264C  0E03               	movlw	3
  1864   00264E  6EDF               	movwf	indf2,c
  1865                           
  1866                           ;main.c: 126:             }
  1867   002650  EF1E  F014         	goto	l5688
  1868   002654                     l5632:
  1869                           
  1870                           ; BSR set to: 1
  1871   002654  0E04               	movlw	4
  1872   002656  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1873   002658  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1874   00265A  A4D8               	btfss	status,2,c
  1875   00265C  EF32  F013         	goto	u5571
  1876   002660  EF34  F013         	goto	u5570
  1877   002664                     u5571:
  1878   002664  EF4D  F013         	goto	l5642
  1879   002668                     u5570:
  1880   002668                     
  1881                           ; BSR set to: 1
  1882                           ;main.c: 128:                 BlueMove(&motorL, &motorR);
  1883   002668  0E73               	movlw	low _motorL
  1884   00266A  6E1F               	movwf	BlueMove@mL^0,c
  1885   00266C  0E01               	movlw	high _motorL
  1886   00266E  6E20               	movwf	(BlueMove@mL+1)^0,c
  1887   002670  0E6A               	movlw	low _motorR
  1888   002672  6E21               	movwf	BlueMove@mR^0,c
  1889   002674  0E01               	movlw	high _motorR
  1890   002676  6E22               	movwf	(BlueMove@mR+1)^0,c
  1891   002678  ECC1  F028         	call	_BlueMove	;wreg free
  1892   00267C                     
  1893                           ;main.c: 129:                 TMR0H=0;
  1894   00267C  0E00               	movlw	0
  1895   00267E  6ED4               	movwf	212,c	;volatile
  1896   002680                     
  1897                           ;main.c: 130:                 TMR0L=0;
  1898   002680  0E00               	movlw	0
  1899   002682  6ED3               	movwf	211,c	;volatile
  1900   002684                     
  1901                           ;main.c: 131:                 WayBack[move_count]=4;
  1902   002684  0EA0               	movlw	low _WayBack
  1903   002686  0101               	movlb	1	; () banked
  1904   002688  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1905   00268A  6ED9               	movwf	fsr2l,c
  1906   00268C  0E02               	movlw	high _WayBack
  1907   00268E  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1908   002690  6EDA               	movwf	fsr2h,c
  1909   002692  0E04               	movlw	4
  1910   002694  6EDF               	movwf	indf2,c
  1911                           
  1912                           ;main.c: 132:             }
  1913   002696  EF1E  F014         	goto	l5688
  1914   00269A                     l5642:
  1915                           
  1916                           ; BSR set to: 1
  1917   00269A  0E05               	movlw	5
  1918   00269C  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1919   00269E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1920   0026A0  A4D8               	btfss	status,2,c
  1921   0026A2  EF55  F013         	goto	u5581
  1922   0026A6  EF57  F013         	goto	u5580
  1923   0026AA                     u5581:
  1924   0026AA  EF70  F013         	goto	l5652
  1925   0026AE                     u5580:
  1926   0026AE                     
  1927                           ; BSR set to: 1
  1928                           ;main.c: 134:                 GreenMove(&motorL, &motorR);
  1929   0026AE  0E73               	movlw	low _motorL
  1930   0026B0  6E1F               	movwf	GreenMove@mL^0,c
  1931   0026B2  0E01               	movlw	high _motorL
  1932   0026B4  6E20               	movwf	(GreenMove@mL+1)^0,c
  1933   0026B6  0E6A               	movlw	low _motorR
  1934   0026B8  6E21               	movwf	GreenMove@mR^0,c
  1935   0026BA  0E01               	movlw	high _motorR
  1936   0026BC  6E22               	movwf	(GreenMove@mR+1)^0,c
  1937   0026BE  EC45  F02D         	call	_GreenMove	;wreg free
  1938   0026C2                     
  1939                           ;main.c: 135:                 TMR0H=0;
  1940   0026C2  0E00               	movlw	0
  1941   0026C4  6ED4               	movwf	212,c	;volatile
  1942   0026C6                     
  1943                           ;main.c: 136:                 TMR0L=0;
  1944   0026C6  0E00               	movlw	0
  1945   0026C8  6ED3               	movwf	211,c	;volatile
  1946   0026CA                     
  1947                           ;main.c: 137:                 WayBack[move_count]=5;
  1948   0026CA  0EA0               	movlw	low _WayBack
  1949   0026CC  0101               	movlb	1	; () banked
  1950   0026CE  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1951   0026D0  6ED9               	movwf	fsr2l,c
  1952   0026D2  0E02               	movlw	high _WayBack
  1953   0026D4  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1954   0026D6  6EDA               	movwf	fsr2h,c
  1955   0026D8  0E05               	movlw	5
  1956   0026DA  6EDF               	movwf	indf2,c
  1957                           
  1958                           ;main.c: 138:             }
  1959   0026DC  EF1E  F014         	goto	l5688
  1960   0026E0                     l5652:
  1961                           
  1962                           ; BSR set to: 1
  1963   0026E0  0E06               	movlw	6
  1964   0026E2  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1965   0026E4  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1966   0026E6  A4D8               	btfss	status,2,c
  1967   0026E8  EF78  F013         	goto	u5591
  1968   0026EC  EF7A  F013         	goto	u5590
  1969   0026F0                     u5591:
  1970   0026F0  EF93  F013         	goto	l5662
  1971   0026F4                     u5590:
  1972   0026F4                     
  1973                           ; BSR set to: 1
  1974                           ;main.c: 140:                 LightBlueMove(&motorL, &motorR);
  1975   0026F4  0E73               	movlw	low _motorL
  1976   0026F6  6E1F               	movwf	LightBlueMove@mL^0,c
  1977   0026F8  0E01               	movlw	high _motorL
  1978   0026FA  6E20               	movwf	(LightBlueMove@mL+1)^0,c
  1979   0026FC  0E6A               	movlw	low _motorR
  1980   0026FE  6E21               	movwf	LightBlueMove@mR^0,c
  1981   002700  0E01               	movlw	high _motorR
  1982   002702  6E22               	movwf	(LightBlueMove@mR+1)^0,c
  1983   002704  ECAE  F02A         	call	_LightBlueMove	;wreg free
  1984   002708                     
  1985                           ;main.c: 141:                 TMR0H=0;
  1986   002708  0E00               	movlw	0
  1987   00270A  6ED4               	movwf	212,c	;volatile
  1988   00270C                     
  1989                           ;main.c: 142:                 TMR0L=0;
  1990   00270C  0E00               	movlw	0
  1991   00270E  6ED3               	movwf	211,c	;volatile
  1992   002710                     
  1993                           ;main.c: 143:                 WayBack[move_count]=6;
  1994   002710  0EA0               	movlw	low _WayBack
  1995   002712  0101               	movlb	1	; () banked
  1996   002714  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1997   002716  6ED9               	movwf	fsr2l,c
  1998   002718  0E02               	movlw	high _WayBack
  1999   00271A  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2000   00271C  6EDA               	movwf	fsr2h,c
  2001   00271E  0E06               	movlw	6
  2002   002720  6EDF               	movwf	indf2,c
  2003                           
  2004                           ;main.c: 144:             }
  2005   002722  EF1E  F014         	goto	l5688
  2006   002726                     l5662:
  2007                           
  2008                           ; BSR set to: 1
  2009   002726  0E07               	movlw	7
  2010   002728  19EE               	xorwf	main@prev_colour& (0+255),w,b
  2011   00272A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2012   00272C  A4D8               	btfss	status,2,c
  2013   00272E  EF9B  F013         	goto	u5601
  2014   002732  EF9D  F013         	goto	u5600
  2015   002736                     u5601:
  2016   002736  EFB6  F013         	goto	l5672
  2017   00273A                     u5600:
  2018   00273A                     
  2019                           ; BSR set to: 1
  2020                           ;main.c: 146:                 PinkMove(&motorL, &motorR);
  2021   00273A  0E73               	movlw	low _motorL
  2022   00273C  6E1F               	movwf	PinkMove@mL^0,c
  2023   00273E  0E01               	movlw	high _motorL
  2024   002740  6E20               	movwf	(PinkMove@mL+1)^0,c
  2025   002742  0E6A               	movlw	low _motorR
  2026   002744  6E21               	movwf	PinkMove@mR^0,c
  2027   002746  0E01               	movlw	high _motorR
  2028   002748  6E22               	movwf	(PinkMove@mR+1)^0,c
  2029   00274A  EC29  F02B         	call	_PinkMove	;wreg free
  2030   00274E                     
  2031                           ;main.c: 147:                 TMR0H=0;
  2032   00274E  0E00               	movlw	0
  2033   002750  6ED4               	movwf	212,c	;volatile
  2034   002752                     
  2035                           ;main.c: 148:                 TMR0L=0;
  2036   002752  0E00               	movlw	0
  2037   002754  6ED3               	movwf	211,c	;volatile
  2038   002756                     
  2039                           ;main.c: 149:                 WayBack[move_count]=7;
  2040   002756  0EA0               	movlw	low _WayBack
  2041   002758  0101               	movlb	1	; () banked
  2042   00275A  250C               	addwf	_move_count& (0+255),w,b	;volatile
  2043   00275C  6ED9               	movwf	fsr2l,c
  2044   00275E  0E02               	movlw	high _WayBack
  2045   002760  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2046   002762  6EDA               	movwf	fsr2h,c
  2047   002764  0E07               	movlw	7
  2048   002766  6EDF               	movwf	indf2,c
  2049                           
  2050                           ;main.c: 150:             }
  2051   002768  EF1E  F014         	goto	l5688
  2052   00276C                     l5672:
  2053                           
  2054                           ; BSR set to: 1
  2055   00276C  0E0A               	movlw	10
  2056   00276E  19EE               	xorwf	main@prev_colour& (0+255),w,b
  2057   002770  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2058   002772  A4D8               	btfss	status,2,c
  2059   002774  EFBE  F013         	goto	u5611
  2060   002778  EFC0  F013         	goto	u5610
  2061   00277C                     u5611:
  2062   00277C  EFCC  F013         	goto	l5676
  2063   002780                     u5610:
  2064   002780                     
  2065                           ; BSR set to: 1
  2066                           ;main.c: 152:                 RetryMove(&motorL, &motorR);
  2067   002780  0E73               	movlw	low _motorL
  2068   002782  6E19               	movwf	RetryMove@mL^0,c
  2069   002784  0E01               	movlw	high _motorL
  2070   002786  6E1A               	movwf	(RetryMove@mL+1)^0,c
  2071   002788  0E6A               	movlw	low _motorR
  2072   00278A  6E1B               	movwf	RetryMove@mR^0,c
  2073   00278C  0E01               	movlw	high _motorR
  2074   00278E  6E1C               	movwf	(RetryMove@mR+1)^0,c
  2075   002790  EC9B  F027         	call	_RetryMove	;wreg free
  2076                           
  2077                           ;main.c: 153:             }
  2078   002794  EF1E  F014         	goto	l5688
  2079   002798                     l5676:
  2080                           
  2081                           ; BSR set to: 1
  2082   002798  51EE               	movf	main@prev_colour& (0+255),w,b
  2083   00279A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2084   00279C  A4D8               	btfss	status,2,c
  2085   00279E  EFD3  F013         	goto	u5621
  2086   0027A2  EFD5  F013         	goto	u5620
  2087   0027A6                     u5621:
  2088   0027A6  EFFB  F013         	goto	l410
  2089   0027AA                     u5620:
  2090   0027AA                     
  2091                           ; BSR set to: 1
  2092                           ;main.c: 155:                 BlueMove(&motorL, &motorR);
  2093   0027AA  0E73               	movlw	low _motorL
  2094   0027AC  6E1F               	movwf	BlueMove@mL^0,c
  2095   0027AE  0E01               	movlw	high _motorL
  2096   0027B0  6E20               	movwf	(BlueMove@mL+1)^0,c
  2097   0027B2  0E6A               	movlw	low _motorR
  2098   0027B4  6E21               	movwf	BlueMove@mR^0,c
  2099   0027B6  0E01               	movlw	high _motorR
  2100   0027B8  6E22               	movwf	(BlueMove@mR+1)^0,c
  2101   0027BA  ECC1  F028         	call	_BlueMove	;wreg free
  2102   0027BE                     
  2103                           ;main.c: 156:                 T0CON0bits.T0EN=0;
  2104   0027BE  9ED5               	bcf	213,7,c	;volatile
  2105                           
  2106                           ;main.c: 157:                 go_Home(WayBack, Time_forward);
  2107   0027C0  0EA0               	movlw	low _WayBack
  2108   0027C2  6E23               	movwf	go_Home@WayBack^0,c
  2109   0027C4  0E02               	movlw	high _WayBack
  2110   0027C6  6E24               	movwf	(go_Home@WayBack+1)^0,c
  2111   0027C8  0E3C               	movlw	low _Time_forward
  2112   0027CA  6E25               	movwf	go_Home@Time_forward^0,c
  2113   0027CC  0E02               	movlw	high _Time_forward
  2114   0027CE  6E26               	movwf	(go_Home@Time_forward+1)^0,c
  2115   0027D0  ECC5  F01E         	call	_go_Home	;wreg free
  2116                           
  2117                           ;main.c: 158:                 stop(&motorL, &motorR);
  2118   0027D4  0E73               	movlw	low _motorL
  2119   0027D6  6E14               	movwf	stop@mL^0,c
  2120   0027D8  0E01               	movlw	high _motorL
  2121   0027DA  6E15               	movwf	(stop@mL+1)^0,c
  2122   0027DC  0E6A               	movlw	low _motorR
  2123   0027DE  6E16               	movwf	stop@mR^0,c
  2124   0027E0  0E01               	movlw	high _motorR
  2125   0027E2  6E17               	movwf	(stop@mR+1)^0,c
  2126   0027E4  EC19  F028         	call	_stop	;wreg free
  2127   0027E8                     
  2128                           ;main.c: 159:                 run_flag=0;
  2129   0027E8  0E00               	movlw	0
  2130   0027EA  0101               	movlb	1	; () banked
  2131   0027EC  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  2132   0027EE  0E00               	movlw	0
  2133   0027F0  6FE8               	movwf	main@run_flag& (0+255),b
  2134   0027F2  EF1E  F014         	goto	l5688
  2135   0027F6                     l410:
  2136                           
  2137                           ; BSR set to: 1
  2138   0027F6  EF1E  F014         	goto	l5688
  2139   0027FA                     l5684:
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;main.c: 165:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals
      +                          .G,vals.B,vals.L);
  2143   0027FA  0E84               	movlw	low main@buf
  2144   0027FC  0100               	movlb	0	; () banked
  2145   0027FE  6FB0               	movwf	sprintf@s& (0+255),b
  2146   002800  0E01               	movlw	high main@buf
  2147   002802  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2148   002804  0E2E               	movlw	low STR_2
  2149   002806  6FB2               	movwf	sprintf@fmt& (0+255),b
  2150   002808  0E0E               	movlw	high STR_2
  2151   00280A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2152   00280C  C17C  F0B4         	movff	_vals,?_sprintf+4
  2153   002810  C17D  F0B5         	movff	_vals+1,?_sprintf+5
  2154   002814  C17E  F0B6         	movff	_vals+2,?_sprintf+6
  2155   002818  C17F  F0B7         	movff	_vals+3,?_sprintf+7
  2156   00281C  C180  F0B8         	movff	_vals+4,?_sprintf+8
  2157   002820  C181  F0B9         	movff	_vals+5,?_sprintf+9
  2158   002824  C182  F0BA         	movff	_vals+6,?_sprintf+10
  2159   002828  C183  F0BB         	movff	_vals+7,?_sprintf+11
  2160   00282C  EC5C  F02A         	call	_sprintf	;wreg free
  2161   002830                     
  2162                           ;main.c: 166:             sendStringSerial4(buf);
  2163   002830  0E84               	movlw	low main@buf
  2164   002832  6E02               	movwf	sendStringSerial4@string^0,c
  2165   002834  0E01               	movlw	high main@buf
  2166   002836  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2167   002838  EC80  F02D         	call	_sendStringSerial4	;wreg free
  2168   00283C                     l5688:
  2169                           
  2170                           ;main.c: 67:     while (run_flag)
  2171   00283C  0101               	movlb	1	; () banked
  2172   00283E  51E8               	movf	main@run_flag& (0+255),w,b
  2173   002840  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  2174   002842  A4D8               	btfss	status,2,c
  2175   002844  EF26  F014         	goto	u5631
  2176   002848  EF28  F014         	goto	u5630
  2177   00284C                     u5631:
  2178   00284C  EFFA  F011         	goto	l5566
  2179   002850                     u5630:
  2180   002850                     
  2181                           ; BSR set to: 1
  2182   002850  EF07  F000         	goto	start
  2183   002854                     __end_of_main:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _sprintf *****************
  2187 ;; Defined at:
  2188 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2191 ;;		 -> main@buf(100), 
  2192 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2193 ;;		 -> STR_2(34), STR_1(45), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2196 ;;  ap              2  100[BANK0 ] PTR void [1]
  2197 ;;		 -> ?_sprintf(2), 
  2198 ;;  ret             2    0        int 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  2   80[BANK0 ] int 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2208 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;Total ram usage:       33 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 8
  2215 ;; This function calls:
  2216 ;;		_vfprintf
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text1
  2223   0054B8                     __ptext1:
  2224                           	callstack 0
  2225   0054B8                     _sprintf:
  2226                           	callstack 22
  2227   0054B8  0EB4               	movlw	low (?_sprintf+4)
  2228   0054BA  0100               	movlb	0	; () banked
  2229   0054BC  6FC4               	movwf	sprintf@ap& (0+255),b
  2230   0054BE  0E00               	movlw	high (?_sprintf+4)
  2231   0054C0  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2232   0054C2  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2233   0054C6  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2234   0054CA                     
  2235                           ; BSR set to: 0
  2236   0054CA  0E00               	movlw	0
  2237   0054CC  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2238   0054CE  0E00               	movlw	0
  2239   0054D0  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2240   0054D2                     
  2241                           ; BSR set to: 0
  2242   0054D2  0E00               	movlw	0
  2243   0054D4  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2244   0054D6  0E00               	movlw	0
  2245   0054D8  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2246   0054DA                     
  2247                           ; BSR set to: 0
  2248   0054DA  0EC6               	movlw	low sprintf@f
  2249   0054DC  6FA8               	movwf	vfprintf@fp& (0+255),b
  2250   0054DE  0E00               	movlw	high sprintf@f
  2251   0054E0  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2252   0054E2  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2253   0054E6  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2254   0054EA  0EC4               	movlw	low sprintf@ap
  2255   0054EC  6FAC               	movwf	vfprintf@ap& (0+255),b
  2256   0054EE  0E00               	movlw	high sprintf@ap
  2257   0054F0  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2258   0054F2  EC31  F02A         	call	_vfprintf	;wreg free
  2259   0054F6  0100               	movlb	0	; () banked
  2260   0054F8  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2261   0054FA  25B0               	addwf	sprintf@s& (0+255),w,b
  2262   0054FC  6ED9               	movwf	fsr2l,c
  2263   0054FE  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2264   005500  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2265   005502  6EDA               	movwf	fsr2h,c
  2266   005504  0E00               	movlw	0
  2267   005506  6EDF               	movwf	indf2,c
  2268   005508                     
  2269                           ; BSR set to: 0
  2270   005508  0012               	return		;funcret
  2271   00550A                     __end_of_sprintf:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _vfprintf *****************
  2275 ;; Defined at:
  2276 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2279 ;;		 -> sprintf@f(11), 
  2280 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2281 ;;		 -> STR_2(34), STR_1(45), 
  2282 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2283 ;;		 -> sprintf@ap(2), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2286 ;;		 -> STR_2(34), STR_1(45), 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2   72[BANK0 ] int 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;Total ram usage:        8 bytes
  2301 ;; Hardware stack levels used: 1
  2302 ;; Hardware stack levels required when called: 7
  2303 ;; This function calls:
  2304 ;;		_vfpfcnvrt
  2305 ;; This function is called by:
  2306 ;;		_sprintf
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text2
  2311   005462                     __ptext2:
  2312                           	callstack 0
  2313   005462                     _vfprintf:
  2314                           	callstack 22
  2315   005462                     
  2316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
>>>>>>> Stashed changes
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
<<<<<<< Updated upstream
  2290   005462  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2291   005466  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2294   00546A  EF46  F02A         	goto	l4991
  2295   00546E                     l4989:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2298   00546E  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2299   005472  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2300   005476  0EAE               	movlw	low vfprintf@cfmt
  2301   005478  0100               	movlb	0	; () banked
  2302   00547A  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2303   00547C  0E00               	movlw	high vfprintf@cfmt
  2304   00547E  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2305   005480  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2306   005484  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2307   005488  ECF4  F01B         	call	_vfpfcnvrt	;wreg free
  2308   00548C                     l4991:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2311   00548C  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2312   005490  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2313   005494                     	if	0	;tblptru may be non-zero
  2314   005494                     	endif
  2315   005494                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2316   005494  0E00               	movlw	low (__mediumconst shr (0+16))
  2317   005496  6EF8               	movwf	tblptru,c
  2318   005498                     	endif
  2319   005498  0008               	tblrd		*
  2320   00549A  50F5               	movf	tablat,w,c
  2321   00549C  0900               	iorlw	0
  2322   00549E  A4D8               	btfss	status,2,c
  2323   0054A0  EF54  F02A         	goto	u4961
  2324   0054A4  EF56  F02A         	goto	u4960
  2325   0054A8                     u4961:
  2326   0054A8  EF37  F02A         	goto	l4989
  2327   0054AC                     u4960:
  2328   0054AC                     
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2330   0054AC  0E00               	movlw	0
  2331   0054AE  0100               	movlb	0	; () banked
  2332   0054B0  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2333   0054B2  0E00               	movlw	0
  2334   0054B4  6FA8               	movwf	?_vfprintf& (0+255),b
  2335   0054B6                     
  2336                           ; BSR set to: 0
  2337   0054B6  0012               	return		;funcret
  2338   0054B8                     __end_of_vfprintf:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _vfpfcnvrt *****************
  2342 ;; Defined at:
  2343 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2346 ;;		 -> sprintf@f(11), 
  2347 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2348 ;;		 -> vfprintf@cfmt(2), 
  2349 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2350 ;;		 -> sprintf@ap(2), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  convarg         8   61[BANK0 ] struct .
  2353 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2354 ;;		 -> STR_2(34), STR_1(45), 
  2355 ;;  i               2    0        int 
  2356 ;;  done            2    0        int 
  2357 ;;  c               1   69[BANK0 ] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2367 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;Total ram usage:       19 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 6
  2374 ;; This function calls:
  2375 ;;		_dtoa
  2376 ;;		_efgtoa
  2377 ;;		_fputc
  2378 ;; This function is called by:
  2379 ;;		_vfprintf
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text3
  2384   0037E8                     __ptext3:
  2385                           	callstack 0
  2386   0037E8                     _vfpfcnvrt:
  2387                           	callstack 22
  2388   0037E8                     
  2389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
=======
  2317   005462  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2318   005466  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2321   00546A  EF46  F02A         	goto	l5066
  2322   00546E                     l5064:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2325   00546E  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2326   005472  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2327   005476  0EAE               	movlw	low vfprintf@cfmt
  2328   005478  0100               	movlb	0	; () banked
  2329   00547A  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2330   00547C  0E00               	movlw	high vfprintf@cfmt
  2331   00547E  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2332   005480  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2333   005484  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2334   005488  EC03  F01C         	call	_vfpfcnvrt	;wreg free
  2335   00548C                     l5066:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2338   00548C  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2339   005490  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2340   005494                     	if	0	;tblptru may be non-zero
  2341   005494                     	endif
  2342   005494                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2343   005494  0E00               	movlw	low (__mediumconst shr (0+16))
  2344   005496  6EF8               	movwf	tblptru,c
  2345   005498                     	endif
  2346   005498  0008               	tblrd		*
  2347   00549A  50F5               	movf	tablat,w,c
  2348   00549C  0900               	iorlw	0
  2349   00549E  A4D8               	btfss	status,2,c
  2350   0054A0  EF54  F02A         	goto	u4971
  2351   0054A4  EF56  F02A         	goto	u4970
  2352   0054A8                     u4971:
  2353   0054A8  EF37  F02A         	goto	l5064
  2354   0054AC                     u4970:
  2355   0054AC                     
  2356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2357   0054AC  0E00               	movlw	0
  2358   0054AE  0100               	movlb	0	; () banked
  2359   0054B0  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2360   0054B2  0E00               	movlw	0
  2361   0054B4  6FA8               	movwf	?_vfprintf& (0+255),b
  2362   0054B6                     
  2363                           ; BSR set to: 0
  2364   0054B6  0012               	return		;funcret
  2365   0054B8                     __end_of_vfprintf:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _vfpfcnvrt *****************
  2369 ;; Defined at:
  2370 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2373 ;;		 -> sprintf@f(11), 
  2374 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2375 ;;		 -> vfprintf@cfmt(2), 
  2376 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2377 ;;		 -> sprintf@ap(2), 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  convarg         8   61[BANK0 ] struct .
  2380 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2381 ;;		 -> STR_2(34), STR_1(45), 
  2382 ;;  i               2    0        int 
  2383 ;;  done            2    0        int 
  2384 ;;  c               1   69[BANK0 ] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2394 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2398 ;;Total ram usage:       19 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 6
  2401 ;; This function calls:
  2402 ;;		_dtoa
  2403 ;;		_efgtoa
  2404 ;;		_fputc
  2405 ;; This function is called by:
  2406 ;;		_vfprintf
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text3
  2411   003806                     __ptext3:
  2412                           	callstack 0
  2413   003806                     _vfpfcnvrt:
  2414                           	callstack 22
  2415   003806                     
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
>>>>>>> Stashed changes
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
<<<<<<< Updated upstream
  2390   0037E8  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2391   0037EC  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2392   0037F0  CFDE FFF6          	movff	postinc2,tblptrl
  2393   0037F4  CFDD FFF7          	movff	postdec2,tblptrh
  2394   0037F8                     	if	0	;tblptru may be non-zero
  2395   0037F8                     	endif
  2396   0037F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2397   0037F8  0E00               	movlw	low (__mediumconst shr (0+16))
  2398   0037FA  6EF8               	movwf	tblptru,c
  2399   0037FC                     	endif
  2400   0037FC  0008               	tblrd		*
  2401   0037FE  50F5               	movf	tablat,w,c
  2402   003800  0A25               	xorlw	37
  2403   003802  A4D8               	btfss	status,2,c
  2404   003804  EF06  F01C         	goto	u4811
  2405   003808  EF08  F01C         	goto	u4810
  2406   00380C                     u4811:
  2407   00380C  EF60  F01D         	goto	l4849
  2408   003810                     u4810:
  2409   003810                     
  2410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2411   003810  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2412   003814  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2413   003818  2ADE               	incf	postinc2,f,c
  2414   00381A  0E00               	movlw	0
  2415   00381C  22DD               	addwfc	postdec2,f,c
  2416   00381E                     
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2418   00381E  0E00               	movlw	0
  2419   003820  0100               	movlb	0	; () banked
  2420   003822  6FE8               	movwf	(_width+1)& (0+255),b
  2421   003824  0E00               	movlw	0
  2422   003826  6FE7               	movwf	_width& (0+255),b
  2423   003828  C0E7  F0ED         	movff	_width,_flags
  2424   00382C                     
  2425                           ; BSR set to: 0
  2426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2427   00382C  69E9               	setf	_prec& (0+255),b
  2428   00382E  69EA               	setf	(_prec+1)& (0+255),b
  2429   003830                     
  2430                           ; BSR set to: 0
  2431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2432   003830  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2433   003834  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2434   003838  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2435   00383C  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2436   003840                     
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2439   003840  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2440   003844  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2441   003848                     	if	0	;tblptru may be non-zero
  2442   003848                     	endif
  2443   003848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2444   003848  0E00               	movlw	low (__mediumconst shr (0+16))
  2445   00384A  6EF8               	movwf	tblptru,c
  2446   00384C                     	endif
  2447   00384C  0008               	tblrd		*
  2448   00384E  50F5               	movf	tablat,w,c
  2449   003850  0A64               	xorlw	100
  2450   003852  B4D8               	btfsc	status,2,c
  2451   003854  EF2E  F01C         	goto	u4821
  2452   003858  EF30  F01C         	goto	u4820
  2453   00385C                     u4821:
  2454   00385C  EF40  F01C         	goto	l4805
  2455   003860                     u4820:
  2456   003860                     
  2457                           ; BSR set to: 0
  2458   003860  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2459   003864  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2460   003868                     	if	0	;tblptru may be non-zero
  2461   003868                     	endif
  2462   003868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2463   003868  0E00               	movlw	low (__mediumconst shr (0+16))
  2464   00386A  6EF8               	movwf	tblptru,c
  2465   00386C                     	endif
  2466   00386C  0008               	tblrd		*
  2467   00386E  50F5               	movf	tablat,w,c
  2468   003870  0A69               	xorlw	105
  2469   003872  A4D8               	btfss	status,2,c
  2470   003874  EF3E  F01C         	goto	u4831
  2471   003878  EF40  F01C         	goto	u4830
  2472   00387C                     u4831:
  2473   00387C  EF83  F01C         	goto	l4811
  2474   003880                     u4830:
  2475   003880                     l4805:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2479   003880  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2480   003884  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2481   003888  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2482   00388C  0E02               	movlw	2
  2483   00388E  26DE               	addwf	postinc2,f,c
  2484   003890  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2485   003894  0E00               	movlw	0
  2486   003896  22DD               	addwfc	postdec2,f,c
  2487   003898  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2488   00389C  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2489   0038A0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2490   0038A4  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2491   0038A8  0E00               	movlw	0
  2492   0038AA  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2493   0038AC  0EFF               	movlw	-1
  2494   0038AE  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2495   0038B0  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2496   0038B2  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2497   0038B4  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2498   0038B6  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2499   0038B8  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2502   0038BA  0E01               	movlw	1
  2503   0038BC  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2504   0038BE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2505   0038C0  0E00               	movlw	0
  2506   0038C2  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2507   0038C4  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2508   0038C6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2509   0038CA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2510   0038CE  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2511   0038D2  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2512   0038D6                     
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2515   0038D6  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2516   0038DA  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2517   0038DE  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2518   0038E2  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2519   0038E6  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2520   0038EA  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2521   0038EE  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2522   0038F2  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2523   0038F6  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2524   0038FA  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2525   0038FE  EC77  F01D         	call	_dtoa	;wreg free
  2526   003902  EF76  F01D         	goto	l1406
  2527   003906                     l4811:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2531   003906  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2532   00390A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2533   00390E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2534   003912  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2535   003916                     
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2538   003916  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2539   00391A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2540   00391E                     	if	0	;tblptru may be non-zero
  2541   00391E                     	endif
  2542   00391E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2543   00391E  0E00               	movlw	low (__mediumconst shr (0+16))
  2544   003920  6EF8               	movwf	tblptru,c
  2545   003922                     	endif
  2546   003922  0008               	tblrd		*
  2547   003924  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2550   003928  EFA2  F01C         	goto	l4823
  2551   00392C                     l4815:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2555   00392C  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2556   00392E  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2559   003930  EFBB  F01C         	goto	l4825
  2560   003934                     l4817:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2564   003934  0E6C               	movlw	108
  2565   003936  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2568   003938  EFBB  F01C         	goto	l4825
  2569   00393C                     l4819:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2573   00393C  0E00               	movlw	0
  2574   00393E  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2577   003940  EFBB  F01C         	goto	l4825
  2578   003944                     l4823:
  2579                           
  2580                           ; BSR set to: 0
  2581   003944  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2582   003946  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2583   003948  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2584                           
  2585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2586                           ; Switch size 1, requested type "simple"
  2587                           ; Number of cases is 1, Range of values is 0 to 0
  2588                           ; switch strategies available:
  2589                           ; Name         Instructions Cycles
  2590                           ; simple_byte            4     3 (average)
  2591                           ;	Chosen strategy is simple_byte
  2592   00394A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2593   00394C  0A00               	xorlw	0	; case 0
  2594   00394E  B4D8               	btfsc	status,2,c
  2595   003950  EFAC  F01C         	goto	l5667
  2596   003954  EF9E  F01C         	goto	l4819
  2597   003958                     l5667:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ; Switch size 1, requested type "simple"
  2601                           ; Number of cases is 3, Range of values is 76 to 108
  2602                           ; switch strategies available:
  2603                           ; Name         Instructions Cycles
  2604                           ; simple_byte           10     6 (average)
  2605                           ;	Chosen strategy is simple_byte
  2606   003958  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2607   00395A  0A4C               	xorlw	76	; case 76
  2608   00395C  B4D8               	btfsc	status,2,c
  2609   00395E  EF96  F01C         	goto	l4815
  2610   003962  0A2A               	xorlw	42	; case 102
  2611   003964  B4D8               	btfsc	status,2,c
  2612   003966  EF9A  F01C         	goto	l4817
  2613   00396A  0A0A               	xorlw	10	; case 108
  2614   00396C  B4D8               	btfsc	status,2,c
  2615   00396E  EF96  F01C         	goto	l4815
  2616   003972  EF9E  F01C         	goto	l4819
  2617   003976                     l4825:
  2618                           
  2619                           ; BSR set to: 0
  2620   003976  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2621   00397A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2622   00397E                     	if	0	;tblptru may be non-zero
  2623   00397E                     	endif
  2624   00397E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2625   00397E  0E00               	movlw	low (__mediumconst shr (0+16))
  2626   003980  6EF8               	movwf	tblptru,c
  2627   003982                     	endif
  2628   003982  0008               	tblrd		*
  2629   003984  50F5               	movf	tablat,w,c
  2630   003986  0A66               	xorlw	102
  2631   003988  A4D8               	btfss	status,2,c
  2632   00398A  EFC9  F01C         	goto	u4841
  2633   00398E  EFCB  F01C         	goto	u4840
  2634   003992                     u4841:
  2635   003992  EF57  F01D         	goto	l4845
  2636   003996                     u4840:
  2637   003996  EF01  F01D         	goto	l4833
  2638   00399A                     l4827:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2642   00399A  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2643   00399E  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2644   0039A2  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2645   0039A6  0E04               	movlw	4
  2646   0039A8  26DE               	addwf	postinc2,f,c
  2647   0039AA  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2648   0039AE  0E00               	movlw	0
  2649   0039B0  22DD               	addwfc	postdec2,f,c
  2650   0039B2  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2651   0039B6  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2652   0039BA  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2653   0039BE  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2654   0039C2  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2655   0039C6  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2658   0039CA  EF16  F01D         	goto	l4835
  2659   0039CE                     l4829:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2663   0039CE  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2664   0039D2  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2665   0039D6  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2666   0039DA  0E04               	movlw	4
  2667   0039DC  26DE               	addwf	postinc2,f,c
  2668   0039DE  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2669   0039E2  0E00               	movlw	0
  2670   0039E4  22DD               	addwfc	postdec2,f,c
  2671   0039E6  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2672   0039EA  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2673   0039EE  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2674   0039F2  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2675   0039F6  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2676   0039FA  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2679   0039FE  EF16  F01D         	goto	l4835
  2680   003A02                     l4833:
  2681                           
  2682                           ; BSR set to: 0
  2683   003A02  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2684   003A04  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2685   003A06  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2686                           
  2687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2688                           ; Switch size 1, requested type "simple"
  2689                           ; Number of cases is 1, Range of values is 0 to 0
  2690                           ; switch strategies available:
  2691                           ; Name         Instructions Cycles
  2692                           ; simple_byte            4     3 (average)
  2693                           ;	Chosen strategy is simple_byte
  2694   003A08  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2695   003A0A  0A00               	xorlw	0	; case 0
  2696   003A0C  B4D8               	btfsc	status,2,c
  2697   003A0E  EF0B  F01D         	goto	l5669
  2698   003A12  EF16  F01D         	goto	l4835
  2699   003A16                     l5669:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 2, Range of values is 76 to 108
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte            7     4 (average)
  2707                           ;	Chosen strategy is simple_byte
  2708   003A16  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2709   003A18  0A4C               	xorlw	76	; case 76
  2710   003A1A  B4D8               	btfsc	status,2,c
  2711   003A1C  EFE7  F01C         	goto	l4829
  2712   003A20  0A20               	xorlw	32	; case 108
  2713   003A22  B4D8               	btfsc	status,2,c
  2714   003A24  EFCD  F01C         	goto	l4827
  2715   003A28  EF16  F01D         	goto	l4835
  2716   003A2C                     l4835:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2720   003A2C  0E01               	movlw	1
  2721   003A2E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2722   003A30  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2723   003A32  0E00               	movlw	0
  2724   003A34  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2725   003A36  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2726   003A38  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2727   003A3C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2728   003A40  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2729   003A44  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2732   003A48  EF3F  F01D         	goto	l4843
  2733   003A4C                     l4837:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2737   003A4C  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2738   003A50  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2739   003A54  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2740   003A58  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2741   003A5C  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2742   003A60  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2743   003A64  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2744   003A68  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2745   003A6C                     	if	0	;tblptru may be non-zero
  2746   003A6C                     	endif
  2747   003A6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2748   003A6C  0E00               	movlw	low (__mediumconst shr (0+16))
  2749   003A6E  6EF8               	movwf	tblptru,c
  2750   003A70                     	endif
  2751   003A70  0008               	tblrd		*
  2752   003A72  CFF5 F066          	movff	tablat,efgtoa@c
  2753   003A76  EC9B  F00C         	call	_efgtoa	;wreg free
  2754   003A7A  EF76  F01D         	goto	l1406
  2755   003A7E                     l4843:
  2756                           
  2757                           ; BSR set to: 0
  2758   003A7E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2759   003A82  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2760   003A86                     	if	0	;tblptru may be non-zero
  2761   003A86                     	endif
  2762   003A86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2763   003A86  0E00               	movlw	low (__mediumconst shr (0+16))
  2764   003A88  6EF8               	movwf	tblptru,c
  2765   003A8A                     	endif
  2766   003A8A  0008               	tblrd		*
  2767   003A8C  50F5               	movf	tablat,w,c
  2768   003A8E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2769   003A90  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2770                           
  2771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2772                           ; Switch size 1, requested type "simple"
  2773                           ; Number of cases is 1, Range of values is 0 to 0
  2774                           ; switch strategies available:
  2775                           ; Name         Instructions Cycles
  2776                           ; simple_byte            4     3 (average)
  2777                           ;	Chosen strategy is simple_byte
  2778   003A92  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2779   003A94  0A00               	xorlw	0	; case 0
  2780   003A96  B4D8               	btfsc	status,2,c
  2781   003A98  EF50  F01D         	goto	l5671
  2782   003A9C  EF57  F01D         	goto	l4845
  2783   003AA0                     l5671:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ; Switch size 1, requested type "simple"
  2787                           ; Number of cases is 1, Range of values is 102 to 102
  2788                           ; switch strategies available:
  2789                           ; Name         Instructions Cycles
  2790                           ; simple_byte            4     3 (average)
  2791                           ;	Chosen strategy is simple_byte
  2792   003AA0  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2793   003AA2  0A66               	xorlw	102	; case 102
  2794   003AA4  B4D8               	btfsc	status,2,c
  2795   003AA6  EF26  F01D         	goto	l4837
  2796   003AAA  EF57  F01D         	goto	l4845
  2797   003AAE                     l4845:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2800   003AAE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2801   003AB2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2802   003AB6  2ADE               	incf	postinc2,f,c
  2803   003AB8  0E00               	movlw	0
  2804   003ABA  22DD               	addwfc	postdec2,f,c
  2805   003ABC  EF76  F01D         	goto	l1406
  2806   003AC0                     l4849:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2809   003AC0  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2810   003AC4  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2811   003AC8  CFDE FFF6          	movff	postinc2,tblptrl
  2812   003ACC  CFDD FFF7          	movff	postdec2,tblptrh
  2813   003AD0                     	if	0	;tblptru may be non-zero
  2814   003AD0                     	endif
  2815   003AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2816   003AD0  0E00               	movlw	low (__mediumconst shr (0+16))
  2817   003AD2  6EF8               	movwf	tblptru,c
  2818   003AD4                     	endif
  2819   003AD4  0008               	tblrd		*
  2820   003AD6  50F5               	movf	tablat,w,c
  2821   003AD8  6E01               	movwf	fputc@c^0,c
  2822   003ADA  6A02               	clrf	(fputc@c+1)^0,c
  2823   003ADC  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2824   003AE0  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2825   003AE4  EC32  F025         	call	_fputc	;wreg free
  2826   003AE8  EF57  F01D         	goto	l4845
  2827   003AEC                     l1406:
  2828   003AEC  0012               	return		;funcret
  2829   003AEE                     __end_of_vfpfcnvrt:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _efgtoa *****************
  2833 ;; Defined at:
  2834 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2837 ;;		 -> sprintf@f(11), 
  2838 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2839 ;;  c               1    6[BANK0 ] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  u               4   49[BANK0 ] struct flui
  2842 ;;  g               4   45[BANK0 ] struct flui
  2843 ;;  l               4   38[BANK0 ] struct flui
  2844 ;;  h               4   34[BANK0 ] struct flui
  2845 ;;  ou              4   28[BANK0 ] struct flui
  2846 ;;  n               2   43[BANK0 ] int 
  2847 ;;  i               2   32[BANK0 ] int 
  2848 ;;  w               2   26[BANK0 ] int 
  2849 ;;  e               2   24[BANK0 ] int 
  2850 ;;  m               2   22[BANK0 ] int 
  2851 ;;  d               2   20[BANK0 ] int 
  2852 ;;  t               2   13[BANK0 ] int 
  2853 ;;  p               2   11[BANK0 ] int 
  2854 ;;  ne              2    9[BANK0 ] int 
  2855 ;;  sign            1   42[BANK0 ] unsigned char 
  2856 ;;  nmode           1   19[BANK0 ] unsigned char 
  2857 ;;  mode            1   18[BANK0 ] unsigned char 
  2858 ;;  pp              1   17[BANK0 ] unsigned char 
  2859 ;;  esign           1    0        unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2869 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;Total ram usage:       53 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 5
  2876 ;; This function calls:
  2877 ;;		___fladd
  2878 ;;		___fldiv
  2879 ;;		___fleq
  2880 ;;		___flge
  2881 ;;		___flmul
  2882 ;;		___flneg
  2883 ;;		___flsub
  2884 ;;		___fltol
  2885 ;;		___fpclassifyf
  2886 ;;		_floorf
  2887 ;;		_labs
  2888 ;;		_memcpy
  2889 ;;		_pad
  2890 ;;		_strcpy
  2891 ;; This function is called by:
  2892 ;;		_vfpfcnvrt
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text4
  2897   001936                     __ptext4:
  2898                           	callstack 0
  2899   001936                     _efgtoa:
  2900                           	callstack 22
  2901   001936                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
=======
  2417   003806  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418   00380A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419   00380E  CFDE FFF6          	movff	postinc2,tblptrl
  2420   003812  CFDD FFF7          	movff	postdec2,tblptrh
  2421   003816                     	if	0	;tblptru may be non-zero
  2422   003816                     	endif
  2423   003816                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2424   003816  0E00               	movlw	low (__mediumconst shr (0+16))
  2425   003818  6EF8               	movwf	tblptru,c
  2426   00381A                     	endif
  2427   00381A  0008               	tblrd		*
  2428   00381C  50F5               	movf	tablat,w,c
  2429   00381E  0A25               	xorlw	37
  2430   003820  A4D8               	btfss	status,2,c
  2431   003822  EF15  F01C         	goto	u4821
  2432   003826  EF17  F01C         	goto	u4820
  2433   00382A                     u4821:
  2434   00382A  EF6F  F01D         	goto	l4924
  2435   00382E                     u4820:
  2436   00382E                     
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2438   00382E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2439   003832  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2440   003836  2ADE               	incf	postinc2,f,c
  2441   003838  0E00               	movlw	0
  2442   00383A  22DD               	addwfc	postdec2,f,c
  2443   00383C                     
  2444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2445   00383C  0E00               	movlw	0
  2446   00383E  0100               	movlb	0	; () banked
  2447   003840  6FF0               	movwf	(_width+1)& (0+255),b
  2448   003842  0E00               	movlw	0
  2449   003844  6FEF               	movwf	_width& (0+255),b
  2450   003846  C0EF  F0F5         	movff	_width,_flags
  2451   00384A                     
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2454   00384A  69F1               	setf	_prec& (0+255),b
  2455   00384C  69F2               	setf	(_prec+1)& (0+255),b
  2456   00384E                     
  2457                           ; BSR set to: 0
  2458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2459   00384E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2460   003852  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2461   003856  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2462   00385A  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2463   00385E                     
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2466   00385E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2467   003862  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2468   003866                     	if	0	;tblptru may be non-zero
  2469   003866                     	endif
  2470   003866                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2471   003866  0E00               	movlw	low (__mediumconst shr (0+16))
  2472   003868  6EF8               	movwf	tblptru,c
  2473   00386A                     	endif
  2474   00386A  0008               	tblrd		*
  2475   00386C  50F5               	movf	tablat,w,c
  2476   00386E  0A64               	xorlw	100
  2477   003870  B4D8               	btfsc	status,2,c
  2478   003872  EF3D  F01C         	goto	u4831
  2479   003876  EF3F  F01C         	goto	u4830
  2480   00387A                     u4831:
  2481   00387A  EF4F  F01C         	goto	l4880
  2482   00387E                     u4830:
  2483   00387E                     
  2484                           ; BSR set to: 0
  2485   00387E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2486   003882  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2487   003886                     	if	0	;tblptru may be non-zero
  2488   003886                     	endif
  2489   003886                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2490   003886  0E00               	movlw	low (__mediumconst shr (0+16))
  2491   003888  6EF8               	movwf	tblptru,c
  2492   00388A                     	endif
  2493   00388A  0008               	tblrd		*
  2494   00388C  50F5               	movf	tablat,w,c
  2495   00388E  0A69               	xorlw	105
  2496   003890  A4D8               	btfss	status,2,c
  2497   003892  EF4D  F01C         	goto	u4841
  2498   003896  EF4F  F01C         	goto	u4840
  2499   00389A                     u4841:
  2500   00389A  EF92  F01C         	goto	l4886
  2501   00389E                     u4840:
  2502   00389E                     l4880:
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2506   00389E  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2507   0038A2  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2508   0038A6  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2509   0038AA  0E02               	movlw	2
  2510   0038AC  26DE               	addwf	postinc2,f,c
  2511   0038AE  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2512   0038B2  0E00               	movlw	0
  2513   0038B4  22DD               	addwfc	postdec2,f,c
  2514   0038B6  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2515   0038BA  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2516   0038BE  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2517   0038C2  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2518   0038C6  0E00               	movlw	0
  2519   0038C8  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2520   0038CA  0EFF               	movlw	-1
  2521   0038CC  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2522   0038CE  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2523   0038D0  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2524   0038D2  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2525   0038D4  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2526   0038D6  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2529   0038D8  0E01               	movlw	1
  2530   0038DA  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2531   0038DC  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2532   0038DE  0E00               	movlw	0
  2533   0038E0  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2534   0038E2  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2535   0038E4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2536   0038E8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2537   0038EC  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2538   0038F0  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2539   0038F4                     
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2542   0038F4  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2543   0038F8  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2544   0038FC  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2545   003900  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2546   003904  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2547   003908  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2548   00390C  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2549   003910  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2550   003914  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2551   003918  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2552   00391C  EC86  F01D         	call	_dtoa	;wreg free
  2553   003920  EF85  F01D         	goto	l1437
  2554   003924                     l4886:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2558   003924  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2559   003928  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2560   00392C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2561   003930  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2562   003934                     
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2565   003934  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2566   003938  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2567   00393C                     	if	0	;tblptru may be non-zero
  2568   00393C                     	endif
  2569   00393C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2570   00393C  0E00               	movlw	low (__mediumconst shr (0+16))
  2571   00393E  6EF8               	movwf	tblptru,c
  2572   003940                     	endif
  2573   003940  0008               	tblrd		*
  2574   003942  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2577   003946  EFB1  F01C         	goto	l4898
  2578   00394A                     l4890:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2582   00394A  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2583   00394C  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2586   00394E  EFCA  F01C         	goto	l4900
  2587   003952                     l4892:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2591   003952  0E6C               	movlw	108
  2592   003954  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2595   003956  EFCA  F01C         	goto	l4900
  2596   00395A                     l4894:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2600   00395A  0E00               	movlw	0
  2601   00395C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2604   00395E  EFCA  F01C         	goto	l4900
  2605   003962                     l4898:
  2606                           
  2607                           ; BSR set to: 0
  2608   003962  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2609   003964  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2610   003966  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2611                           
  2612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2613                           ; Switch size 1, requested type "simple"
  2614                           ; Number of cases is 1, Range of values is 0 to 0
  2615                           ; switch strategies available:
  2616                           ; Name         Instructions Cycles
  2617                           ; simple_byte            4     3 (average)
  2618                           ;	Chosen strategy is simple_byte
  2619   003968  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2620   00396A  0A00               	xorlw	0	; case 0
  2621   00396C  B4D8               	btfsc	status,2,c
  2622   00396E  EFBB  F01C         	goto	l5786
  2623   003972  EFAD  F01C         	goto	l4894
  2624   003976                     l5786:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ; Switch size 1, requested type "simple"
  2628                           ; Number of cases is 3, Range of values is 76 to 108
  2629                           ; switch strategies available:
  2630                           ; Name         Instructions Cycles
  2631                           ; simple_byte           10     6 (average)
  2632                           ;	Chosen strategy is simple_byte
  2633   003976  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2634   003978  0A4C               	xorlw	76	; case 76
  2635   00397A  B4D8               	btfsc	status,2,c
  2636   00397C  EFA5  F01C         	goto	l4890
  2637   003980  0A2A               	xorlw	42	; case 102
  2638   003982  B4D8               	btfsc	status,2,c
  2639   003984  EFA9  F01C         	goto	l4892
  2640   003988  0A0A               	xorlw	10	; case 108
  2641   00398A  B4D8               	btfsc	status,2,c
  2642   00398C  EFA5  F01C         	goto	l4890
  2643   003990  EFAD  F01C         	goto	l4894
  2644   003994                     l4900:
  2645                           
  2646                           ; BSR set to: 0
  2647   003994  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2648   003998  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2649   00399C                     	if	0	;tblptru may be non-zero
  2650   00399C                     	endif
  2651   00399C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2652   00399C  0E00               	movlw	low (__mediumconst shr (0+16))
  2653   00399E  6EF8               	movwf	tblptru,c
  2654   0039A0                     	endif
  2655   0039A0  0008               	tblrd		*
  2656   0039A2  50F5               	movf	tablat,w,c
  2657   0039A4  0A66               	xorlw	102
  2658   0039A6  A4D8               	btfss	status,2,c
  2659   0039A8  EFD8  F01C         	goto	u4851
  2660   0039AC  EFDA  F01C         	goto	u4850
  2661   0039B0                     u4851:
  2662   0039B0  EF66  F01D         	goto	l4920
  2663   0039B4                     u4850:
  2664   0039B4  EF10  F01D         	goto	l4908
  2665   0039B8                     l4902:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2669   0039B8  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2670   0039BC  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2671   0039C0  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2672   0039C4  0E04               	movlw	4
  2673   0039C6  26DE               	addwf	postinc2,f,c
  2674   0039C8  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2675   0039CC  0E00               	movlw	0
  2676   0039CE  22DD               	addwfc	postdec2,f,c
  2677   0039D0  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2678   0039D4  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2679   0039D8  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2680   0039DC  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2681   0039E0  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2682   0039E4  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2685   0039E8  EF25  F01D         	goto	l4910
  2686   0039EC                     l4904:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2690   0039EC  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2691   0039F0  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2692   0039F4  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2693   0039F8  0E04               	movlw	4
  2694   0039FA  26DE               	addwf	postinc2,f,c
  2695   0039FC  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2696   003A00  0E00               	movlw	0
  2697   003A02  22DD               	addwfc	postdec2,f,c
  2698   003A04  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2699   003A08  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2700   003A0C  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2701   003A10  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2702   003A14  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2703   003A18  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2706   003A1C  EF25  F01D         	goto	l4910
  2707   003A20                     l4908:
  2708                           
  2709                           ; BSR set to: 0
  2710   003A20  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2711   003A22  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2712   003A24  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2713                           
  2714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2715                           ; Switch size 1, requested type "simple"
  2716                           ; Number of cases is 1, Range of values is 0 to 0
  2717                           ; switch strategies available:
  2718                           ; Name         Instructions Cycles
  2719                           ; simple_byte            4     3 (average)
  2720                           ;	Chosen strategy is simple_byte
  2721   003A26  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2722   003A28  0A00               	xorlw	0	; case 0
  2723   003A2A  B4D8               	btfsc	status,2,c
  2724   003A2C  EF1A  F01D         	goto	l5788
  2725   003A30  EF25  F01D         	goto	l4910
  2726   003A34                     l5788:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ; Switch size 1, requested type "simple"
  2730                           ; Number of cases is 2, Range of values is 76 to 108
  2731                           ; switch strategies available:
  2732                           ; Name         Instructions Cycles
  2733                           ; simple_byte            7     4 (average)
  2734                           ;	Chosen strategy is simple_byte
  2735   003A34  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2736   003A36  0A4C               	xorlw	76	; case 76
  2737   003A38  B4D8               	btfsc	status,2,c
  2738   003A3A  EFF6  F01C         	goto	l4904
  2739   003A3E  0A20               	xorlw	32	; case 108
  2740   003A40  B4D8               	btfsc	status,2,c
  2741   003A42  EFDC  F01C         	goto	l4902
  2742   003A46  EF25  F01D         	goto	l4910
  2743   003A4A                     l4910:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2747   003A4A  0E01               	movlw	1
  2748   003A4C  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2749   003A4E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2750   003A50  0E00               	movlw	0
  2751   003A52  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2752   003A54  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2753   003A56  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2754   003A5A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2755   003A5E  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2756   003A62  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2759   003A66  EF4E  F01D         	goto	l4918
  2760   003A6A                     l4912:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2764   003A6A  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2765   003A6E  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2766   003A72  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2767   003A76  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2768   003A7A  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2769   003A7E  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2770   003A82  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2771   003A86  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2772   003A8A                     	if	0	;tblptru may be non-zero
  2773   003A8A                     	endif
  2774   003A8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2775   003A8A  0E00               	movlw	low (__mediumconst shr (0+16))
  2776   003A8C  6EF8               	movwf	tblptru,c
  2777   003A8E                     	endif
  2778   003A8E  0008               	tblrd		*
  2779   003A90  CFF5 F066          	movff	tablat,efgtoa@c
  2780   003A94  EC9B  F00C         	call	_efgtoa	;wreg free
  2781   003A98  EF85  F01D         	goto	l1437
  2782   003A9C                     l4918:
  2783                           
  2784                           ; BSR set to: 0
  2785   003A9C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2786   003AA0  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2787   003AA4                     	if	0	;tblptru may be non-zero
  2788   003AA4                     	endif
  2789   003AA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2790   003AA4  0E00               	movlw	low (__mediumconst shr (0+16))
  2791   003AA6  6EF8               	movwf	tblptru,c
  2792   003AA8                     	endif
  2793   003AA8  0008               	tblrd		*
  2794   003AAA  50F5               	movf	tablat,w,c
  2795   003AAC  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2796   003AAE  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2797                           
  2798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2799                           ; Switch size 1, requested type "simple"
  2800                           ; Number of cases is 1, Range of values is 0 to 0
  2801                           ; switch strategies available:
  2802                           ; Name         Instructions Cycles
  2803                           ; simple_byte            4     3 (average)
  2804                           ;	Chosen strategy is simple_byte
  2805   003AB0  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2806   003AB2  0A00               	xorlw	0	; case 0
  2807   003AB4  B4D8               	btfsc	status,2,c
  2808   003AB6  EF5F  F01D         	goto	l5790
  2809   003ABA  EF66  F01D         	goto	l4920
  2810   003ABE                     l5790:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ; Switch size 1, requested type "simple"
  2814                           ; Number of cases is 1, Range of values is 102 to 102
  2815                           ; switch strategies available:
  2816                           ; Name         Instructions Cycles
  2817                           ; simple_byte            4     3 (average)
  2818                           ;	Chosen strategy is simple_byte
  2819   003ABE  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2820   003AC0  0A66               	xorlw	102	; case 102
  2821   003AC2  B4D8               	btfsc	status,2,c
  2822   003AC4  EF35  F01D         	goto	l4912
  2823   003AC8  EF66  F01D         	goto	l4920
  2824   003ACC                     l4920:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2827   003ACC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2828   003AD0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2829   003AD4  2ADE               	incf	postinc2,f,c
  2830   003AD6  0E00               	movlw	0
  2831   003AD8  22DD               	addwfc	postdec2,f,c
  2832   003ADA  EF85  F01D         	goto	l1437
  2833   003ADE                     l4924:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2836   003ADE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2837   003AE2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2838   003AE6  CFDE FFF6          	movff	postinc2,tblptrl
  2839   003AEA  CFDD FFF7          	movff	postdec2,tblptrh
  2840   003AEE                     	if	0	;tblptru may be non-zero
  2841   003AEE                     	endif
  2842   003AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2843   003AEE  0E00               	movlw	low (__mediumconst shr (0+16))
  2844   003AF0  6EF8               	movwf	tblptru,c
  2845   003AF2                     	endif
  2846   003AF2  0008               	tblrd		*
  2847   003AF4  50F5               	movf	tablat,w,c
  2848   003AF6  6E01               	movwf	fputc@c^0,c
  2849   003AF8  6A02               	clrf	(fputc@c+1)^0,c
  2850   003AFA  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2851   003AFE  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2852   003B02  EC71  F025         	call	_fputc	;wreg free
  2853   003B06  EF66  F01D         	goto	l4920
  2854   003B0A                     l1437:
  2855   003B0A  0012               	return		;funcret
  2856   003B0C                     __end_of_vfpfcnvrt:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _efgtoa *****************
  2860 ;; Defined at:
  2861 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2864 ;;		 -> sprintf@f(11), 
  2865 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2866 ;;  c               1    6[BANK0 ] unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  u               4   49[BANK0 ] struct flui
  2869 ;;  g               4   45[BANK0 ] struct flui
  2870 ;;  l               4   38[BANK0 ] struct flui
  2871 ;;  h               4   34[BANK0 ] struct flui
  2872 ;;  ou              4   28[BANK0 ] struct flui
  2873 ;;  n               2   43[BANK0 ] int 
  2874 ;;  i               2   32[BANK0 ] int 
  2875 ;;  w               2   26[BANK0 ] int 
  2876 ;;  e               2   24[BANK0 ] int 
  2877 ;;  m               2   22[BANK0 ] int 
  2878 ;;  d               2   20[BANK0 ] int 
  2879 ;;  t               2   13[BANK0 ] int 
  2880 ;;  p               2   11[BANK0 ] int 
  2881 ;;  ne              2    9[BANK0 ] int 
  2882 ;;  sign            1   42[BANK0 ] unsigned char 
  2883 ;;  nmode           1   19[BANK0 ] unsigned char 
  2884 ;;  mode            1   18[BANK0 ] unsigned char 
  2885 ;;  pp              1   17[BANK0 ] unsigned char 
  2886 ;;  esign           1    0        unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2896 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2897 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2899 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;Total ram usage:       53 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 5
  2903 ;; This function calls:
  2904 ;;		___fladd
  2905 ;;		___fldiv
  2906 ;;		___fleq
  2907 ;;		___flge
  2908 ;;		___flmul
  2909 ;;		___flneg
  2910 ;;		___flsub
  2911 ;;		___fltol
  2912 ;;		___fpclassifyf
  2913 ;;		_floorf
  2914 ;;		_labs
  2915 ;;		_memcpy
  2916 ;;		_pad
  2917 ;;		_strcpy
  2918 ;; This function is called by:
  2919 ;;		_vfpfcnvrt
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text4
  2924   001936                     __ptext4:
  2925                           	callstack 0
  2926   001936                     _efgtoa:
  2927                           	callstack 22
  2928   001936                     
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
>>>>>>> Stashed changes
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
<<<<<<< Updated upstream
  2903   001936  0E00               	movlw	0
  2904   001938  0100               	movlb	0	; () banked
  2905   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  2906   00193C                     
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2909   00193C  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2910   001940  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2911   001944  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2912   001948  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2913   00194C                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2916   00194C  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2917   00194E  EFAD  F00C         	goto	u4470
  2918   001952  EFAB  F00C         	goto	u4471
  2919   001956                     u4471:
  2920   001956  EFC1  F00C         	goto	l4525
  2921   00195A                     u4470:
  2922   00195A                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2925   00195A  0E01               	movlw	1
  2926   00195C  6F8A               	movwf	efgtoa@sign& (0+255),b
  2927   00195E                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2930   00195E  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2931   001962  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2932   001966  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2933   00196A  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2934   00196E  EC3E  F02D         	call	___flneg	;wreg free
  2935   001972  C001  F08D         	movff	?___flneg,efgtoa@g
  2936   001976  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2937   00197A  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2938   00197E  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2939   001982                     l4525:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2942   001982  0E00               	movlw	0
  2943   001984  0100               	movlb	0	; () banked
  2944   001986  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2945   001988  0E00               	movlw	0
  2946   00198A  6F8B               	movwf	efgtoa@n& (0+255),b
  2947   00198C                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2950   00198C  C0E7  F07A         	movff	_width,efgtoa@w
  2951   001990  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2952   001994                     
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2955   001994  518A               	movf	efgtoa@sign& (0+255),w,b
  2956   001996  B4D8               	btfsc	status,2,c
  2957   001998  EFD0  F00C         	goto	u4481
  2958   00199C  EFD2  F00C         	goto	u4480
  2959   0019A0                     u4481:
  2960   0019A0  EFE6  F00C         	goto	l4539
  2961   0019A4                     u4480:
  2962   0019A4                     
  2963                           ; BSR set to: 0
  2964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2965   0019A4  518A               	movf	efgtoa@sign& (0+255),w,b
  2966   0019A6  A4D8               	btfss	status,2,c
  2967   0019A8  EFD8  F00C         	goto	u4491
  2968   0019AC  EFDA  F00C         	goto	u4490
  2969   0019B0                     u4491:
  2970   0019B0  EFE0  F00C         	goto	l4535
  2971   0019B4                     u4490:
  2972   0019B4                     
  2973                           ; BSR set to: 0
  2974   0019B4  0E00               	movlw	0
  2975   0019B6  6F70               	movwf	(_efgtoa$2418+1)& (0+255),b
  2976   0019B8  0E2B               	movlw	43
  2977   0019BA  6F6F               	movwf	_efgtoa$2418& (0+255),b
  2978   0019BC  EFE4  F00C         	goto	l4537
  2979   0019C0                     l4535:
  2980                           
  2981                           ; BSR set to: 0
  2982   0019C0  0E00               	movlw	0
  2983   0019C2  6F70               	movwf	(_efgtoa$2418+1)& (0+255),b
  2984   0019C4  0E2D               	movlw	45
  2985   0019C6  6F6F               	movwf	_efgtoa$2418& (0+255),b
  2986   0019C8                     l4537:
  2987                           
  2988                           ; BSR set to: 0
  2989   0019C8  C06F  F08A         	movff	_efgtoa$2418,efgtoa@sign
  2990   0019CC                     l4539:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2994   0019CC  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2995   0019D0  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2996   0019D4  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2997   0019D8  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2998   0019DC  ECB3  F024         	call	___fpclassifyf	;wreg free
  2999   0019E0  0401               	decf	?___fpclassifyf^0,w,c
  3000   0019E2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3001   0019E4  A4D8               	btfss	status,2,c
  3002   0019E6  EFF7  F00C         	goto	u4501
  3003   0019EA  EFF9  F00C         	goto	u4500
  3004   0019EE                     u4501:
  3005   0019EE  EF2C  F00D         	goto	l4557
  3006   0019F2                     u4500:
  3007   0019F2                     
  3008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3009   0019F2  0100               	movlb	0	; () banked
  3010   0019F4  518A               	movf	efgtoa@sign& (0+255),w,b
  3011   0019F6  B4D8               	btfsc	status,2,c
  3012   0019F8  EF00  F00D         	goto	u4511
  3013   0019FC  EF02  F00D         	goto	u4510
  3014   001A00                     u4511:
  3015   001A00  EF0B  F00D         	goto	l4549
  3016   001A04                     u4510:
  3017   001A04                     
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3020   001A04  C08A  F116         	movff	efgtoa@sign,_dbuf
  3021   001A08                     
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3024   001A08  077A               	decf	efgtoa@w& (0+255),f,b
  3025   001A0A  A0D8               	btfss	status,0,c
  3026   001A0C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3027   001A0E                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3030   001A0E  0E00               	movlw	0
  3031   001A10  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3032   001A12  0E01               	movlw	1
  3033   001A14  6F8B               	movwf	efgtoa@n& (0+255),b
  3034   001A16                     l4549:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3038   001A16  0E16               	movlw	low _dbuf
  3039   001A18  258B               	addwf	efgtoa@n& (0+255),w,b
  3040   001A1A  6E01               	movwf	strcpy@dest^0,c
  3041   001A1C  0E01               	movlw	high _dbuf
  3042   001A1E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3043   001A20  6E02               	movwf	(strcpy@dest+1)^0,c
  3044   001A22  0E50               	movlw	low STR_3
  3045   001A24  6E03               	movwf	strcpy@src^0,c
  3046   001A26  0E0E               	movlw	high STR_3
  3047   001A28  6E04               	movwf	(strcpy@src+1)^0,c
  3048   001A2A  EC3D  F02C         	call	_strcpy	;wreg free
  3049   001A2E                     l4551:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3052   001A2E  0100               	movlb	0	; () banked
  3053   001A30  0EFD               	movlw	253
  3054   001A32  277A               	addwf	efgtoa@w& (0+255),f,b
  3055   001A34  0EFF               	movlw	255
  3056   001A36  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3057   001A38                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3060   001A38  C060  F011         	movff	efgtoa@fp,pad@fp
  3061   001A3C  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3062   001A40  0E16               	movlw	low _dbuf
  3063   001A42  6E13               	movwf	pad@buf^0,c
  3064   001A44  0E01               	movlw	high _dbuf
  3065   001A46  6E14               	movwf	(pad@buf+1)^0,c
  3066   001A48  C07A  F015         	movff	efgtoa@w,pad@p
  3067   001A4C  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3068   001A50  ECEC  F027         	call	_pad	;wreg free
  3069   001A54  EF97  F011         	goto	l1358
  3070   001A58                     l4557:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3073   001A58  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3074   001A5C  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3075   001A60  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3076   001A64  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3077   001A68  ECB3  F024         	call	___fpclassifyf	;wreg free
  3078   001A6C  5001               	movf	?___fpclassifyf^0,w,c
  3079   001A6E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3080   001A70  A4D8               	btfss	status,2,c
  3081   001A72  EF3D  F00D         	goto	u4521
  3082   001A76  EF3F  F00D         	goto	u4520
  3083   001A7A                     u4521:
  3084   001A7A  EF5F  F00D         	goto	l4575
  3085   001A7E                     u4520:
  3086   001A7E                     
  3087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3088   001A7E  0100               	movlb	0	; () banked
  3089   001A80  518A               	movf	efgtoa@sign& (0+255),w,b
  3090   001A82  B4D8               	btfsc	status,2,c
  3091   001A84  EF46  F00D         	goto	u4531
  3092   001A88  EF48  F00D         	goto	u4530
  3093   001A8C                     u4531:
  3094   001A8C  EF51  F00D         	goto	l4567
  3095   001A90                     u4530:
  3096   001A90                     
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3099   001A90  C08A  F116         	movff	efgtoa@sign,_dbuf
  3100   001A94                     
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3103   001A94  077A               	decf	efgtoa@w& (0+255),f,b
  3104   001A96  A0D8               	btfss	status,0,c
  3105   001A98  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3106   001A9A                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3109   001A9A  0E00               	movlw	0
  3110   001A9C  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3111   001A9E  0E01               	movlw	1
  3112   001AA0  6F8B               	movwf	efgtoa@n& (0+255),b
  3113   001AA2                     l4567:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3117   001AA2  0E16               	movlw	low _dbuf
  3118   001AA4  258B               	addwf	efgtoa@n& (0+255),w,b
  3119   001AA6  6E01               	movwf	strcpy@dest^0,c
  3120   001AA8  0E01               	movlw	high _dbuf
  3121   001AAA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3122   001AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  3123   001AAE  0E54               	movlw	low STR_6
  3124   001AB0  6E03               	movwf	strcpy@src^0,c
  3125   001AB2  0E0E               	movlw	high STR_6
  3126   001AB4  6E04               	movwf	(strcpy@src+1)^0,c
  3127   001AB6  EC3D  F02C         	call	_strcpy	;wreg free
  3128   001ABA  EF17  F00D         	goto	l4551
  3129   001ABE                     l4575:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3132   001ABE  0E00               	movlw	0
  3133   001AC0  0100               	movlb	0	; () banked
  3134   001AC2  6F91               	movwf	efgtoa@u& (0+255),b
  3135   001AC4  0E00               	movlw	0
  3136   001AC6  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3137   001AC8  0E80               	movlw	128
  3138   001ACA  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3139   001ACC  0E3F               	movlw	63
  3140   001ACE  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3143   001AD0  0E00               	movlw	0
  3144   001AD2  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3145   001AD4  0E00               	movlw	0
  3146   001AD6  6F78               	movwf	efgtoa@e& (0+255),b
  3147   001AD8                     
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3150   001AD8  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3151   001ADC  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3152   001AE0  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3153   001AE4  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3154   001AE8  0E00               	movlw	0
  3155   001AEA  6E36               	movwf	___fleq@ff2^0,c
  3156   001AEC  0E00               	movlw	0
  3157   001AEE  6E37               	movwf	(___fleq@ff2+1)^0,c
  3158   001AF0  0E00               	movlw	0
  3159   001AF2  6E38               	movwf	(___fleq@ff2+2)^0,c
  3160   001AF4  0E00               	movlw	0
  3161   001AF6  6E39               	movwf	(___fleq@ff2+3)^0,c
  3162   001AF8  EC97  F025         	call	___fleq	;wreg free
  3163   001AFC  B0D8               	btfsc	status,0,c
  3164   001AFE  EF83  F00D         	goto	u4541
  3165   001B02  EF85  F00D         	goto	u4540
  3166   001B06                     u4541:
  3167   001B06  EF64  F00E         	goto	l1361
  3168   001B0A                     u4540:
  3169   001B0A  EF92  F00D         	goto	l4583
  3170   001B0E                     l1363:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3173   001B0E  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3174   001B12  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3175   001B16  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3176   001B1A  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3177   001B1E                     
  3178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3179   001B1E  0100               	movlb	0	; () banked
  3180   001B20  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3181   001B22  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3182   001B24                     l4583:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3185   001B24  C091  F011         	movff	efgtoa@u,___flmul@b
  3186   001B28  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3187   001B2C  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3188   001B30  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3189   001B34  0E00               	movlw	0
  3190   001B36  6E15               	movwf	___flmul@a^0,c
  3191   001B38  0E00               	movlw	0
  3192   001B3A  6E16               	movwf	(___flmul@a+1)^0,c
  3193   001B3C  0E20               	movlw	32
  3194   001B3E  6E17               	movwf	(___flmul@a+2)^0,c
  3195   001B40  0E41               	movlw	65
  3196   001B42  6E18               	movwf	(___flmul@a+3)^0,c
  3197   001B44  EC7B  F016         	call	___flmul	;wreg free
  3198   001B48  C011  F07C         	movff	?___flmul,efgtoa@ou
  3199   001B4C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3200   001B50  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3201   001B54  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3202   001B58  0100               	movlb	0	; () banked
  3203   001B5A  517C               	movf	efgtoa@ou& (0+255),w,b
  3204   001B5C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3205   001B5E  6E01               	movwf	labs@a^0,c
  3206   001B60  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3207   001B62  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3208   001B64  6E02               	movwf	(labs@a+1)^0,c
  3209   001B66  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3210   001B68  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3211   001B6A  6E03               	movwf	(labs@a+2)^0,c
  3212   001B6C  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3213   001B6E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3214   001B70  6E04               	movwf	(labs@a+3)^0,c
  3215   001B72  EC63  F028         	call	_labs	;wreg free
  3216   001B76  BE04               	btfsc	(?_labs+3)^0,7,c
  3217   001B78  EFC9  F00D         	goto	u4551
  3218   001B7C  5004               	movf	(?_labs+3)^0,w,c
  3219   001B7E  1003               	iorwf	(?_labs+2)^0,w,c
  3220   001B80  1002               	iorwf	(?_labs+1)^0,w,c
  3221   001B82  E109               	bnz	u4550
  3222   001B84  0E02               	movlw	2
  3223   001B86  5C01               	subwf	?_labs^0,w,c
  3224   001B88  A0D8               	btfss	status,0,c
  3225   001B8A  EFC9  F00D         	goto	u4551
  3226   001B8E  EFCB  F00D         	goto	u4550
  3227   001B92                     u4551:
  3228   001B92  EF87  F00D         	goto	l1363
  3229   001B96                     u4550:
  3230   001B96  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3231   001B9A  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3232   001B9E  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3233   001BA2  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3234   001BA6  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3235   001BAA  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3236   001BAE  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3237   001BB2  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3238   001BB6  EC31  F024         	call	___flge	;wreg free
  3239   001BBA  A0D8               	btfss	status,0,c
  3240   001BBC  EFE2  F00D         	goto	u4561
  3241   001BC0  EFE4  F00D         	goto	u4560
  3242   001BC4                     u4561:
  3243   001BC4  EF87  F00D         	goto	l1363
  3244   001BC8                     u4560:
  3245   001BC8                     
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3247   001BC8  0100               	movlb	0	; () banked
  3248   001BCA  5191               	movf	efgtoa@u& (0+255),w,b
  3249   001BCC  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3250   001BCE  6E01               	movwf	labs@a^0,c
  3251   001BD0  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3252   001BD2  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3253   001BD4  6E02               	movwf	(labs@a+1)^0,c
  3254   001BD6  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3255   001BD8  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3256   001BDA  6E03               	movwf	(labs@a+2)^0,c
  3257   001BDC  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3258   001BDE  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3259   001BE0  6E04               	movwf	(labs@a+3)^0,c
  3260   001BE2  EC63  F028         	call	_labs	;wreg free
  3261   001BE6  BE04               	btfsc	(?_labs+3)^0,7,c
  3262   001BE8  EF03  F00E         	goto	u4570
  3263   001BEC  5004               	movf	(?_labs+3)^0,w,c
  3264   001BEE  1003               	iorwf	(?_labs+2)^0,w,c
  3265   001BF0  1002               	iorwf	(?_labs+1)^0,w,c
  3266   001BF2  E107               	bnz	u4571
  3267   001BF4  0E02               	movlw	2
  3268   001BF6  5C01               	subwf	?_labs^0,w,c
  3269   001BF8  B0D8               	btfsc	status,0,c
  3270   001BFA  EF01  F00E         	goto	u4571
  3271   001BFE  EF03  F00E         	goto	u4570
  3272   001C02                     u4571:
  3273   001C02  EF4B  F00E         	goto	l4601
  3274   001C06                     u4570:
  3275   001C06                     l4591:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3278   001C06  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3279   001C0A  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3280   001C0E  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3281   001C12  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3284   001C16  EF64  F00E         	goto	l1361
  3285   001C1A                     l4593:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3288   001C1A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3289   001C1E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3290   001C22  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3291   001C26  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3292   001C2A  0E00               	movlw	0
  3293   001C2C  6E36               	movwf	___fldiv@a^0,c
  3294   001C2E  0E00               	movlw	0
  3295   001C30  6E37               	movwf	(___fldiv@a+1)^0,c
  3296   001C32  0E20               	movlw	32
  3297   001C34  6E38               	movwf	(___fldiv@a+2)^0,c
  3298   001C36  0E41               	movlw	65
  3299   001C38  6E39               	movwf	(___fldiv@a+3)^0,c
  3300   001C3A  EC90  F018         	call	___fldiv	;wreg free
  3301   001C3E  C032  F091         	movff	?___fldiv,efgtoa@u
  3302   001C42  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3303   001C46  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3304   001C4A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3305   001C4E                     
  3306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3307   001C4E  0100               	movlb	0	; () banked
  3308   001C50  0778               	decf	efgtoa@e& (0+255),f,b
  3309   001C52  A0D8               	btfss	status,0,c
  3310   001C54  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3311   001C56                     
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3314   001C56  5191               	movf	efgtoa@u& (0+255),w,b
  3315   001C58  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3316   001C5A  6E01               	movwf	labs@a^0,c
  3317   001C5C  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3318   001C5E  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3319   001C60  6E02               	movwf	(labs@a+1)^0,c
  3320   001C62  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3321   001C64  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3322   001C66  6E03               	movwf	(labs@a+2)^0,c
  3323   001C68  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3324   001C6A  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3325   001C6C  6E04               	movwf	(labs@a+3)^0,c
  3326   001C6E  EC63  F028         	call	_labs	;wreg free
  3327   001C72  BE04               	btfsc	(?_labs+3)^0,7,c
  3328   001C74  EF49  F00E         	goto	u4580
  3329   001C78  5004               	movf	(?_labs+3)^0,w,c
  3330   001C7A  1003               	iorwf	(?_labs+2)^0,w,c
  3331   001C7C  1002               	iorwf	(?_labs+1)^0,w,c
  3332   001C7E  E107               	bnz	u4581
  3333   001C80  0E02               	movlw	2
  3334   001C82  5C01               	subwf	?_labs^0,w,c
  3335   001C84  B0D8               	btfsc	status,0,c
  3336   001C86  EF47  F00E         	goto	u4581
  3337   001C8A  EF49  F00E         	goto	u4580
  3338   001C8E                     u4581:
  3339   001C8E  EF4B  F00E         	goto	l4601
  3340   001C92                     u4580:
  3341   001C92  EF03  F00E         	goto	l4591
  3342   001C96                     l4601:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3345   001C96  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3346   001C9A  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3347   001C9E  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3348   001CA2  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3349   001CA6  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3350   001CAA  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3351   001CAE  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3352   001CB2  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3353   001CB6  EC31  F024         	call	___flge	;wreg free
  3354   001CBA  A0D8               	btfss	status,0,c
  3355   001CBC  EF62  F00E         	goto	u4591
  3356   001CC0  EF64  F00E         	goto	u4590
  3357   001CC4                     u4591:
  3358   001CC4  EF0D  F00E         	goto	l4593
  3359   001CC8                     u4590:
  3360   001CC8                     l1361:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3363   001CC8  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3366   001CCC  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3367   001CD0                     
  3368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3369   001CD0  0100               	movlb	0	; () banked
  3370   001CD2  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3371   001CD4  EF6E  F00E         	goto	u4601
  3372   001CD8  EF70  F00E         	goto	u4600
  3373   001CDC                     u4601:
  3374   001CDC  EF76  F00E         	goto	l4607
  3375   001CE0                     u4600:
  3376   001CE0                     
  3377                           ; BSR set to: 0
  3378   001CE0  C0E9  F06B         	movff	_prec,efgtoa@p
  3379   001CE4  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3380   001CE8  EF7A  F00E         	goto	l4609
  3381   001CEC                     l4607:
  3382                           
  3383                           ; BSR set to: 0
  3384   001CEC  0E00               	movlw	0
  3385   001CEE  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3386   001CF0  0E06               	movlw	6
  3387   001CF2  6F6B               	movwf	efgtoa@p& (0+255),b
  3388   001CF4                     l4609:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3392   001CF4  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3393   001CF8  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3394   001CFC                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3397   001CFC  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3398   001CFE  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3399   001D00                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3402   001D00  0E66               	movlw	102
  3403   001D02  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3404   001D04  A4D8               	btfss	status,2,c
  3405   001D06  EF87  F00E         	goto	u4611
  3406   001D0A  EF89  F00E         	goto	u4610
  3407   001D0E                     u4611:
  3408   001D0E  EFA9  F00E         	goto	l4623
  3409   001D12                     u4610:
  3410   001D12                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3413   001D12  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3414   001D14  EF90  F00E         	goto	u4620
  3415   001D18  EF8E  F00E         	goto	u4621
  3416   001D1C                     u4621:
  3417   001D1C  EF9C  F00E         	goto	l4619
  3418   001D20                     u4620:
  3419   001D20                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3422   001D20  0E00               	movlw	0
  3423   001D22  6F91               	movwf	efgtoa@u& (0+255),b
  3424   001D24  0E00               	movlw	0
  3425   001D26  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3426   001D28  0E80               	movlw	128
  3427   001D2A  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3428   001D2C  0E3F               	movlw	63
  3429   001D2E  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3432   001D30  0E00               	movlw	0
  3433   001D32  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3434   001D34  0E00               	movlw	0
  3435   001D36  6F78               	movwf	efgtoa@e& (0+255),b
  3436   001D38                     l4619:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3440   001D38  0E67               	movlw	103
  3441   001D3A  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3442   001D3C  B4D8               	btfsc	status,2,c
  3443   001D3E  EFA3  F00E         	goto	u4631
  3444   001D42  EFA5  F00E         	goto	u4630
  3445   001D46                     u4631:
  3446   001D46  EFA9  F00E         	goto	l4623
  3447   001D4A                     u4630:
  3448   001D4A                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3451   001D4A  5178               	movf	efgtoa@e& (0+255),w,b
  3452   001D4C  2776               	addwf	efgtoa@m& (0+255),f,b
  3453   001D4E  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3454   001D50  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3455   001D52                     l4623:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3459   001D52  0E00               	movlw	0
  3460   001D54  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3461   001D56  0E00               	movlw	0
  3462   001D58  6F80               	movwf	efgtoa@i& (0+255),b
  3463   001D5A                     
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3466   001D5A  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3467   001D5E  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3468   001D62  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3469   001D66  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3470   001D6A                     
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3473   001D6A  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3474   001D6E  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3475   001D72  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3476   001D76  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3479   001D7A  EF3A  F00F         	goto	l4637
  3480   001D7E                     l4629:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3484   001D7E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3485   001D82  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3486   001D86  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3487   001D8A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3488   001D8E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3489   001D92  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3490   001D96  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3491   001D9A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3492   001D9E  EC90  F018         	call	___fldiv	;wreg free
  3493   001DA2  C032  F04B         	movff	?___fldiv,floorf@x
  3494   001DA6  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3495   001DAA  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3496   001DAE  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3497   001DB2  ECB6  F01E         	call	_floorf	;wreg free
  3498   001DB6  C04B  F086         	movff	?_floorf,efgtoa@l
  3499   001DBA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3500   001DBE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3501   001DC2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3504   001DC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3505   001DCA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3506   001DCE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3507   001DD2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3508   001DD6  ECAE  F023         	call	___fltol	;wreg free
  3509   001DDA  C001  F074         	movff	?___fltol,efgtoa@d
  3510   001DDE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3511   001DE2                     
  3512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3513   001DE2  C082  F02A         	movff	efgtoa@h,___flsub@b
  3514   001DE6  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3515   001DEA  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3516   001DEE  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3517   001DF2  C086  F015         	movff	efgtoa@l,___flmul@a
  3518   001DF6  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3519   001DFA  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3520   001DFE  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3521   001E02  C091  F011         	movff	efgtoa@u,___flmul@b
  3522   001E06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3523   001E0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3524   001E0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3525   001E12  EC7B  F016         	call	___flmul	;wreg free
  3526   001E16  C011  F02E         	movff	?___flmul,___flsub@a
  3527   001E1A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3528   001E1E  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3529   001E22  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3530   001E26  EC1A  F02C         	call	___flsub	;wreg free
  3531   001E2A  C02A  F082         	movff	?___flsub,efgtoa@h
  3532   001E2E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3533   001E32  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3534   001E36  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3535   001E3A                     
  3536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3537   001E3A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3538   001E3E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3539   001E42  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3540   001E46  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3541   001E4A  0E00               	movlw	0
  3542   001E4C  6E36               	movwf	___fldiv@a^0,c
  3543   001E4E  0E00               	movlw	0
  3544   001E50  6E37               	movwf	(___fldiv@a+1)^0,c
  3545   001E52  0E20               	movlw	32
  3546   001E54  6E38               	movwf	(___fldiv@a+2)^0,c
  3547   001E56  0E41               	movlw	65
  3548   001E58  6E39               	movwf	(___fldiv@a+3)^0,c
  3549   001E5A  EC90  F018         	call	___fldiv	;wreg free
  3550   001E5E  C032  F091         	movff	?___fldiv,efgtoa@u
  3551   001E62  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3552   001E66  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3553   001E6A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3554   001E6E                     
  3555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3556   001E6E  0100               	movlb	0	; () banked
  3557   001E70  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3558   001E72  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3559   001E74                     l4637:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3563   001E74  5176               	movf	efgtoa@m& (0+255),w,b
  3564   001E76  5D80               	subwf	efgtoa@i& (0+255),w,b
  3565   001E78  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3566   001E7A  0A80               	xorlw	128
  3567   001E7C  6F67               	movwf	??_efgtoa& (0+255),b
  3568   001E7E  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3569   001E80  0A80               	xorlw	128
  3570   001E82  5967               	subwfb	??_efgtoa& (0+255),w,b
  3571   001E84  A0D8               	btfss	status,0,c
  3572   001E86  EF47  F00F         	goto	u4641
  3573   001E8A  EF49  F00F         	goto	u4640
  3574   001E8E                     u4641:
  3575   001E8E  EFBF  F00E         	goto	l4629
  3576   001E92                     u4640:
  3577   001E92                     
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3580   001E92  C091  F011         	movff	efgtoa@u,___flmul@b
  3581   001E96  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3582   001E9A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3583   001E9E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3584   001EA2  0E00               	movlw	0
  3585   001EA4  6E15               	movwf	___flmul@a^0,c
  3586   001EA6  0E00               	movlw	0
  3587   001EA8  6E16               	movwf	(___flmul@a+1)^0,c
  3588   001EAA  0EA0               	movlw	160
  3589   001EAC  6E17               	movwf	(___flmul@a+2)^0,c
  3590   001EAE  0E40               	movlw	64
  3591   001EB0  6E18               	movwf	(___flmul@a+3)^0,c
  3592   001EB2  EC7B  F016         	call	___flmul	;wreg free
  3593   001EB6  C011  F086         	movff	?___flmul,efgtoa@l
  3594   001EBA  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3595   001EBE  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3596   001EC2  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3597   001EC6                     
  3598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3599   001EC6  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3600   001ECA  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3601   001ECE  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3602   001ED2  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3603   001ED6  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3604   001EDA  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3605   001EDE  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3606   001EE2  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3607   001EE6  EC31  F024         	call	___flge	;wreg free
  3608   001EEA  B0D8               	btfsc	status,0,c
  3609   001EEC  EF7A  F00F         	goto	u4651
  3610   001EF0  EF7C  F00F         	goto	u4650
  3611   001EF4                     u4651:
  3612   001EF4  EF87  F00F         	goto	l4645
  3613   001EF8                     u4650:
  3614   001EF8                     
  3615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3616   001EF8  0E00               	movlw	0
  3617   001EFA  0100               	movlb	0	; () banked
  3618   001EFC  6F86               	movwf	efgtoa@l& (0+255),b
  3619   001EFE  0E00               	movlw	0
  3620   001F00  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3621   001F02  0E00               	movlw	0
  3622   001F04  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3623   001F06  0E00               	movlw	0
  3624   001F08  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3627   001F0A  EFB0  F00F         	goto	l4651
  3628   001F0E                     l4645:
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3631   001F0E  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3632   001F12  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3633   001F16  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3634   001F1A  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3635   001F1E  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3636   001F22  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3637   001F26  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3638   001F2A  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3639   001F2E  EC97  F025         	call	___fleq	;wreg free
  3640   001F32  A0D8               	btfss	status,0,c
  3641   001F34  EF9E  F00F         	goto	u4661
  3642   001F38  EFA0  F00F         	goto	u4660
  3643   001F3C                     u4661:
  3644   001F3C  EFB0  F00F         	goto	l4651
  3645   001F40                     u4660:
  3646   001F40  0100               	movlb	0	; () banked
  3647   001F42  B174               	btfsc	efgtoa@d& (0+255),0,b
  3648   001F44  EFA6  F00F         	goto	u4671
  3649   001F48  EFA8  F00F         	goto	u4670
  3650   001F4C                     u4671:
  3651   001F4C  EFB0  F00F         	goto	l4651
  3652   001F50                     u4670:
  3653   001F50                     
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3656   001F50  0E00               	movlw	0
  3657   001F52  6F86               	movwf	efgtoa@l& (0+255),b
  3658   001F54  0E00               	movlw	0
  3659   001F56  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3660   001F58  0E00               	movlw	0
  3661   001F5A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3662   001F5C  0E00               	movlw	0
  3663   001F5E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3664   001F60                     l4651:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3667   001F60  C08D  F001         	movff	efgtoa@g,___fladd@b
  3668   001F64  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3669   001F68  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3670   001F6C  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3671   001F70  C086  F005         	movff	efgtoa@l,___fladd@a
  3672   001F74  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3673   001F78  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3674   001F7C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3675   001F80  EC1B  F014         	call	___fladd	;wreg free
  3676   001F84  C001  F082         	movff	?___fladd,efgtoa@h
  3677   001F88  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3678   001F8C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3679   001F90  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3680   001F94                     
  3681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3682   001F94  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3683   001F98  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3684   001F9C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3685   001FA0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3686   001FA4  0E00               	movlw	0
  3687   001FA6  6E15               	movwf	___flmul@a^0,c
  3688   001FA8  0E00               	movlw	0
  3689   001FAA  6E16               	movwf	(___flmul@a+1)^0,c
  3690   001FAC  0E20               	movlw	32
  3691   001FAE  6E17               	movwf	(___flmul@a+2)^0,c
  3692   001FB0  0E41               	movlw	65
  3693   001FB2  6E18               	movwf	(___flmul@a+3)^0,c
  3694   001FB4  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3695   001FB8  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3696   001FBC  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3697   001FC0  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3698   001FC4  EC7B  F016         	call	___flmul	;wreg free
  3699   001FC8  C011  F02E         	movff	?___flmul,___flge@ff2
  3700   001FCC  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3701   001FD0  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3702   001FD4  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3703   001FD8  EC31  F024         	call	___flge	;wreg free
  3704   001FDC  A0D8               	btfss	status,0,c
  3705   001FDE  EFF3  F00F         	goto	u4681
  3706   001FE2  EFF5  F00F         	goto	u4680
  3707   001FE6                     u4681:
  3708   001FE6  EF1E  F010         	goto	l4663
  3709   001FEA                     u4680:
  3710   001FEA                     
  3711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3712   001FEA  0100               	movlb	0	; () banked
  3713   001FEC  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3714   001FEE  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3715   001FF0                     
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3718   001FF0  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3719   001FF4  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3720   001FF8  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3721   001FFC  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3722   002000  0E00               	movlw	0
  3723   002002  6E15               	movwf	___flmul@a^0,c
  3724   002004  0E00               	movlw	0
  3725   002006  6E16               	movwf	(___flmul@a+1)^0,c
  3726   002008  0E20               	movlw	32
  3727   00200A  6E17               	movwf	(___flmul@a+2)^0,c
  3728   00200C  0E41               	movlw	65
  3729   00200E  6E18               	movwf	(___flmul@a+3)^0,c
  3730   002010  EC7B  F016         	call	___flmul	;wreg free
  3731   002014  C011  F07C         	movff	?___flmul,efgtoa@ou
  3732   002018  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3733   00201C  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3734   002020  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3735   002024                     
  3736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3737   002024  0E66               	movlw	102
  3738   002026  0100               	movlb	0	; () banked
  3739   002028  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3740   00202A  A4D8               	btfss	status,2,c
  3741   00202C  EF1A  F010         	goto	u4691
  3742   002030  EF1C  F010         	goto	u4690
  3743   002034                     u4691:
  3744   002034  EF1E  F010         	goto	l4663
  3745   002038                     u4690:
  3746   002038                     
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3749   002038  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3750   00203A  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3751   00203C                     l4663:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3754   00203C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3755   002040  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3756   002044  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3757   002048  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3758   00204C                     
  3759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3760   00204C  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3761   002050  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3762   002054                     
  3763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3764   002054  0E00               	movlw	0
  3765   002056  0100               	movlb	0	; () banked
  3766   002058  6F71               	movwf	efgtoa@pp& (0+255),b
  3767   00205A                     
  3768                           ; BSR set to: 0
  3769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3770   00205A  0E00               	movlw	0
  3771   00205C  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3772   00205E  0E00               	movlw	0
  3773   002060  6F6D               	movwf	efgtoa@t& (0+255),b
  3774   002062                     
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3777   002062  0E00               	movlw	0
  3778   002064  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3779   002066  0E00               	movlw	0
  3780   002068  6F80               	movwf	efgtoa@i& (0+255),b
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3783   00206A  EF1C  F011         	goto	l4713
  3784   00206E                     l4673:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3788   00206E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3789   002072  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3790   002076  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3791   00207A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3792   00207E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3793   002082  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3794   002086  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3795   00208A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3796   00208E  EC90  F018         	call	___fldiv	;wreg free
  3797   002092  C032  F04B         	movff	?___fldiv,floorf@x
  3798   002096  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3799   00209A  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3800   00209E  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3801   0020A2  ECB6  F01E         	call	_floorf	;wreg free
  3802   0020A6  C04B  F086         	movff	?_floorf,efgtoa@l
  3803   0020AA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3804   0020AE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3805   0020B2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3806                           
  3807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3808   0020B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3809   0020BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3810   0020BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3811   0020C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3812   0020C6  ECAE  F023         	call	___fltol	;wreg free
  3813   0020CA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3814   0020CC  EF73  F010         	goto	u4700
  3815   0020D0  5002               	movf	(?___fltol+1)^0,w,c
  3816   0020D2  E107               	bnz	u4701
  3817   0020D4  0E0A               	movlw	10
  3818   0020D6  5C01               	subwf	?___fltol^0,w,c
  3819   0020D8  B0D8               	btfsc	status,0,c
  3820   0020DA  EF71  F010         	goto	u4701
  3821   0020DE  EF73  F010         	goto	u4700
  3822   0020E2                     u4701:
  3823   0020E2  EF83  F010         	goto	l4677
  3824   0020E6                     u4700:
  3825   0020E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3826   0020EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3827   0020EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3828   0020F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3829   0020F6  ECAE  F023         	call	___fltol	;wreg free
  3830   0020FA  C001  F074         	movff	?___fltol,efgtoa@d
  3831   0020FE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3832   002102  EF88  F010         	goto	l1391
  3833   002106                     l4677:
  3834   002106  0E00               	movlw	0
  3835   002108  0100               	movlb	0	; () banked
  3836   00210A  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3837   00210C  0E09               	movlw	9
  3838   00210E  6F74               	movwf	efgtoa@d& (0+255),b
  3839   002110                     l1391:
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3842   002110  0100               	movlb	0	; () banked
  3843   002112  5171               	movf	efgtoa@pp& (0+255),w,b
  3844   002114  A4D8               	btfss	status,2,c
  3845   002116  EF8F  F010         	goto	u4711
  3846   00211A  EF91  F010         	goto	u4710
  3847   00211E                     u4711:
  3848   00211E  EFB9  F010         	goto	l4697
  3849   002122                     u4710:
  3850   002122                     
  3851                           ; BSR set to: 0
  3852   002122  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3853   002124  EF98  F010         	goto	u4720
  3854   002128  EF96  F010         	goto	u4721
  3855   00212C                     u4721:
  3856   00212C  EFB9  F010         	goto	l4697
  3857   002130                     u4720:
  3858   002130                     
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3861   002130  0E16               	movlw	low _dbuf
  3862   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  3863   002134  6ED9               	movwf	fsr2l,c
  3864   002136  0E01               	movlw	high _dbuf
  3865   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3866   00213A  6EDA               	movwf	fsr2h,c
  3867   00213C  0E2E               	movlw	46
  3868   00213E  6EDF               	movwf	indf2,c
  3869   002140                     
  3870                           ; BSR set to: 0
  3871   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3872   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3873   002144                     
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3876   002144  077A               	decf	efgtoa@w& (0+255),f,b
  3877   002146  A0D8               	btfss	status,0,c
  3878   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3879   00214A                     
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3882   00214A  0E01               	movlw	1
  3883   00214C  6F71               	movwf	efgtoa@pp& (0+255),b
  3884   00214E  EFB9  F010         	goto	l4697
  3885   002152                     l4689:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3889   002152  0E16               	movlw	low _dbuf
  3890   002154  258B               	addwf	efgtoa@n& (0+255),w,b
  3891   002156  6ED9               	movwf	fsr2l,c
  3892   002158  0E01               	movlw	high _dbuf
  3893   00215A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3894   00215C  6EDA               	movwf	fsr2h,c
  3895   00215E  0E30               	movlw	48
  3896   002160  6EDF               	movwf	indf2,c
  3897   002162                     
  3898                           ; BSR set to: 0
  3899   002162  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3900   002164  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3901   002166                     
  3902                           ; BSR set to: 0
  3903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3904   002166  077A               	decf	efgtoa@w& (0+255),f,b
  3905   002168  A0D8               	btfss	status,0,c
  3906   00216A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3907   00216C                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3910   00216C  076D               	decf	efgtoa@t& (0+255),f,b
  3911   00216E  A0D8               	btfss	status,0,c
  3912   002170  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3913   002172                     l4697:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3917   002172  516D               	movf	efgtoa@t& (0+255),w,b
  3918   002174  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3919   002176  A4D8               	btfss	status,2,c
  3920   002178  EFC0  F010         	goto	u4731
  3921   00217C  EFC2  F010         	goto	u4730
  3922   002180                     u4731:
  3923   002180  EFA9  F010         	goto	l4689
  3924   002184                     u4730:
  3925   002184                     
  3926                           ; BSR set to: 0
  3927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3928   002184  0E16               	movlw	low _dbuf
  3929   002186  258B               	addwf	efgtoa@n& (0+255),w,b
  3930   002188  6ED9               	movwf	fsr2l,c
  3931   00218A  0E01               	movlw	high _dbuf
  3932   00218C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3933   00218E  6EDA               	movwf	fsr2h,c
  3934   002190  5174               	movf	efgtoa@d& (0+255),w,b
  3935   002192  0F30               	addlw	48
  3936   002194  6EDF               	movwf	indf2,c
  3937   002196                     
  3938                           ; BSR set to: 0
  3939   002196  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3940   002198  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3941   00219A                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3944   00219A  077A               	decf	efgtoa@w& (0+255),f,b
  3945   00219C  A0D8               	btfss	status,0,c
  3946   00219E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3947   0021A0                     
  3948                           ; BSR set to: 0
  3949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3950   0021A0  C082  F02A         	movff	efgtoa@h,___flsub@b
  3951   0021A4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3952   0021A8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3953   0021AC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3954   0021B0  C086  F015         	movff	efgtoa@l,___flmul@a
  3955   0021B4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3956   0021B8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3957   0021BC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3958   0021C0  C091  F011         	movff	efgtoa@u,___flmul@b
  3959   0021C4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3960   0021C8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3961   0021CC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3962   0021D0  EC7B  F016         	call	___flmul	;wreg free
  3963   0021D4  C011  F02E         	movff	?___flmul,___flsub@a
  3964   0021D8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3965   0021DC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3966   0021E0  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3967   0021E4  EC1A  F02C         	call	___flsub	;wreg free
  3968   0021E8  C02A  F082         	movff	?___flsub,efgtoa@h
  3969   0021EC  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3970   0021F0  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3971   0021F4  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3972   0021F8                     
  3973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3974   0021F8  C091  F032         	movff	efgtoa@u,___fldiv@b
  3975   0021FC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3976   002200  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3977   002204  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3978   002208  0E00               	movlw	0
  3979   00220A  6E36               	movwf	___fldiv@a^0,c
  3980   00220C  0E00               	movlw	0
  3981   00220E  6E37               	movwf	(___fldiv@a+1)^0,c
  3982   002210  0E20               	movlw	32
  3983   002212  6E38               	movwf	(___fldiv@a+2)^0,c
  3984   002214  0E41               	movlw	65
  3985   002216  6E39               	movwf	(___fldiv@a+3)^0,c
  3986   002218  EC90  F018         	call	___fldiv	;wreg free
  3987   00221C  C032  F091         	movff	?___fldiv,efgtoa@u
  3988   002220  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3989   002224  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3990   002228  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3991   00222C                     
  3992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3993   00222C  0100               	movlb	0	; () banked
  3994   00222E  0769               	decf	efgtoa@ne& (0+255),f,b
  3995   002230  A0D8               	btfss	status,0,c
  3996   002232  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  3997   002234                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4000   002234  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4001   002236  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4002   002238                     l4713:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4006   002238  5176               	movf	efgtoa@m& (0+255),w,b
  4007   00223A  5D80               	subwf	efgtoa@i& (0+255),w,b
  4008   00223C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4009   00223E  0A80               	xorlw	128
  4010   002240  6F67               	movwf	??_efgtoa& (0+255),b
  4011   002242  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4012   002244  0A80               	xorlw	128
  4013   002246  5967               	subwfb	??_efgtoa& (0+255),w,b
  4014   002248  B0D8               	btfsc	status,0,c
  4015   00224A  EF29  F011         	goto	u4741
  4016   00224E  EF2B  F011         	goto	u4740
  4017   002252                     u4741:
  4018   002252  EF39  F011         	goto	l4717
  4019   002256                     u4740:
  4020   002256                     
  4021                           ; BSR set to: 0
  4022   002256  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4023   002258  EF37  F011         	goto	u4751
  4024   00225C  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4025   00225E  E109               	bnz	u4750
  4026   002260  0E4B               	movlw	75
  4027   002262  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4028   002264  A0D8               	btfss	status,0,c
  4029   002266  EF37  F011         	goto	u4751
  4030   00226A  EF39  F011         	goto	u4750
  4031   00226E                     u4751:
  4032   00226E  EF37  F010         	goto	l4673
  4033   002272                     u4750:
  4034   002272                     l4717:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4038   002272  0E00               	movlw	0
  4039   002274  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4040   002276  0E4F               	movlw	79
  4041   002278  6F80               	movwf	efgtoa@i& (0+255),b
  4042   00227A                     
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4045   00227A  0E16               	movlw	low _dbuf
  4046   00227C  2580               	addwf	efgtoa@i& (0+255),w,b
  4047   00227E  6ED9               	movwf	fsr2l,c
  4048   002280  0E01               	movlw	high _dbuf
  4049   002282  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4050   002284  6EDA               	movwf	fsr2h,c
  4051   002286  0E00               	movlw	0
  4052   002288  6EDF               	movwf	indf2,c
  4053   00228A                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4056   00228A  0E16               	movlw	low _dbuf
  4057   00228C  6F67               	movwf	??_efgtoa& (0+255),b
  4058   00228E  0E01               	movlw	high _dbuf
  4059   002290  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4060   002292  518B               	movf	efgtoa@n& (0+255),w,b
  4061   002294  5F67               	subwf	??_efgtoa& (0+255),f,b
  4062   002296  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4063   002298  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4064   00229A  5180               	movf	efgtoa@i& (0+255),w,b
  4065   00229C  2567               	addwf	??_efgtoa& (0+255),w,b
  4066   00229E  6E01               	movwf	memcpy@d1^0,c
  4067   0022A0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4068   0022A2  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4069   0022A4  6E02               	movwf	(memcpy@d1+1)^0,c
  4070   0022A6  0E16               	movlw	low _dbuf
  4071   0022A8  6E03               	movwf	memcpy@s1^0,c
  4072   0022AA  0E01               	movlw	high _dbuf
  4073   0022AC  6E04               	movwf	(memcpy@s1+1)^0,c
  4074   0022AE  C08B  F005         	movff	efgtoa@n,memcpy@n
  4075   0022B2  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4076   0022B6  EC52  F02B         	call	_memcpy	;wreg free
  4077   0022BA                     
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4079   0022BA  0100               	movlb	0	; () banked
  4080   0022BC  518B               	movf	efgtoa@n& (0+255),w,b
  4081   0022BE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4082   0022C0  6F8B               	movwf	efgtoa@n& (0+255),b
  4083   0022C2  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4084   0022C4  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4085   0022C6  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4086   0022C8                     
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4089   0022C8  518A               	movf	efgtoa@sign& (0+255),w,b
  4090   0022CA  A4D8               	btfss	status,2,c
  4091   0022CC  EF6A  F011         	goto	u4761
  4092   0022D0  EF6D  F011         	goto	u4760
  4093   0022D4                     u4761:
  4094   0022D4  0E01               	movlw	1
  4095   0022D6  EF6E  F011         	goto	u4770
  4096   0022DA                     u4760:
  4097   0022DA  0E00               	movlw	0
  4098   0022DC                     u4770:
  4099   0022DC  6F80               	movwf	efgtoa@i& (0+255),b
  4100   0022DE  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4101   0022E0                     
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4104   0022E0  518A               	movf	efgtoa@sign& (0+255),w,b
  4105   0022E2  B4D8               	btfsc	status,2,c
  4106   0022E4  EF76  F011         	goto	u4781
  4107   0022E8  EF78  F011         	goto	u4780
  4108   0022EC                     u4781:
  4109   0022EC  EF83  F011         	goto	l4731
  4110   0022F0                     u4780:
  4111   0022F0                     
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4114   0022F0  078B               	decf	efgtoa@n& (0+255),f,b
  4115   0022F2  A0D8               	btfss	status,0,c
  4116   0022F4  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4117   0022F6  0E16               	movlw	low _dbuf
  4118   0022F8  258B               	addwf	efgtoa@n& (0+255),w,b
  4119   0022FA  6ED9               	movwf	fsr2l,c
  4120   0022FC  0E01               	movlw	high _dbuf
  4121   0022FE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4122   002300  6EDA               	movwf	fsr2h,c
  4123   002302  C08A  FFDF         	movff	efgtoa@sign,indf2
  4124   002306                     l4731:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4128   002306  5180               	movf	efgtoa@i& (0+255),w,b
  4129   002308  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4130   00230A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4131   00230C  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4132   00230E                     
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4135   00230E  C060  F011         	movff	efgtoa@fp,pad@fp
  4136   002312  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4137   002316  0E16               	movlw	low _dbuf
  4138   002318  258B               	addwf	efgtoa@n& (0+255),w,b
  4139   00231A  6E13               	movwf	pad@buf^0,c
  4140   00231C  0E01               	movlw	high _dbuf
  4141   00231E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4142   002320  6E14               	movwf	(pad@buf+1)^0,c
  4143   002322  C07A  F015         	movff	efgtoa@w,pad@p
  4144   002326  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4145   00232A  ECEC  F027         	call	_pad	;wreg free
  4146   00232E                     l1358:
  4147   00232E  0012               	return		;funcret
  4148   002330                     __end_of_efgtoa:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function _strcpy *****************
  4152 ;; Defined at:
  4153 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4156 ;;		 -> dbuf(80), 
  4157 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4158 ;;		 -> STR_6(4), STR_3(4), 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  d               2    6[COMRAM] PTR unsigned char 
  4161 ;;		 -> dbuf(80), 
  4162 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4163 ;;		 -> STR_6(4), STR_3(4), 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2    0[COMRAM] PTR unsigned char 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;Total ram usage:        8 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_efgtoa
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text5
  4188   00587A                     __ptext5:
  4189                           	callstack 0
  4190   00587A                     _strcpy:
  4191                           	callstack 25
  4192   00587A  C003  F005         	movff	strcpy@src,strcpy@s
  4193   00587E  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4194   005882  C001  F007         	movff	strcpy@dest,strcpy@d
  4195   005886  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4196   00588A                     l4343:
  4197   00588A  C005  FFF6         	movff	strcpy@s,tblptrl
  4198   00588E  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4199   005892  4A05               	infsnz	strcpy@s^0,f,c
  4200   005894  2A06               	incf	(strcpy@s+1)^0,f,c
  4201   005896                     	if	0	;tblptru may be non-zero
  4202   005896                     	endif
  4203   005896                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4204   005896  0E00               	movlw	low (__mediumconst shr (0+16))
  4205   005898  6EF8               	movwf	tblptru,c
  4206   00589A                     	endif
  4207   00589A  C007  FFD9         	movff	strcpy@d,fsr2l
  4208   00589E  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4209   0058A2  4A07               	infsnz	strcpy@d^0,f,c
  4210   0058A4  2A08               	incf	(strcpy@d+1)^0,f,c
  4211   0058A6  0008               	tblrd		*
  4212   0058A8  CFF5 FFDF          	movff	tablat,indf2
  4213   0058AC  50DF               	movf	indf2,w,c
  4214   0058AE  A4D8               	btfss	status,2,c
  4215   0058B0  EF5C  F02C         	goto	u4121
  4216   0058B4  EF5E  F02C         	goto	u4120
  4217   0058B8                     u4121:
  4218   0058B8  EF45  F02C         	goto	l4343
  4219   0058BC                     u4120:
  4220   0058BC  0012               	return		;funcret
  4221   0058BE                     __end_of_strcpy:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _memcpy *****************
  4225 ;; Defined at:
  4226 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  d1              2    0[COMRAM] PTR void 
  4229 ;;		 -> dbuf(80), 
  4230 ;;  s1              2    2[COMRAM] PTR const void 
  4231 ;;		 -> dbuf(80), 
  4232 ;;  n               2    4[COMRAM] unsigned int 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4235 ;;		 -> dbuf(80), 
  4236 ;;  d               2    6[COMRAM] PTR unsigned char 
  4237 ;;		 -> dbuf(80), 
  4238 ;;  tmp             1   10[COMRAM] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2    0[COMRAM] PTR void 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4248 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;Total ram usage:       11 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_efgtoa
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text6
  4263   0056A4                     __ptext6:
  4264                           	callstack 0
  4265   0056A4                     _memcpy:
  4266                           	callstack 25
  4267   0056A4  C003  F009         	movff	memcpy@s1,memcpy@s
  4268   0056A8  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4269   0056AC  C001  F007         	movff	memcpy@d1,memcpy@d
  4270   0056B0  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4271   0056B4  EF6C  F02B         	goto	l4387
  4272   0056B8                     l4379:
  4273   0056B8  C009  FFD9         	movff	memcpy@s,fsr2l
  4274   0056BC  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4275   0056C0  50DF               	movf	indf2,w,c
  4276   0056C2  6E0B               	movwf	memcpy@tmp^0,c
  4277   0056C4  4A09               	infsnz	memcpy@s^0,f,c
  4278   0056C6  2A0A               	incf	(memcpy@s+1)^0,f,c
  4279   0056C8  C007  FFD9         	movff	memcpy@d,fsr2l
  4280   0056CC  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4281   0056D0  C00B  FFDF         	movff	memcpy@tmp,indf2
  4282   0056D4  4A07               	infsnz	memcpy@d^0,f,c
  4283   0056D6  2A08               	incf	(memcpy@d+1)^0,f,c
  4284   0056D8                     l4387:
  4285   0056D8  0605               	decf	memcpy@n^0,f,c
  4286   0056DA  A0D8               	btfss	status,0,c
  4287   0056DC  0606               	decf	(memcpy@n+1)^0,f,c
  4288   0056DE  2805               	incf	memcpy@n^0,w,c
  4289   0056E0  E106               	bnz	u4241
  4290   0056E2  2806               	incf	(memcpy@n+1)^0,w,c
  4291   0056E4  A4D8               	btfss	status,2,c
  4292   0056E6  EF77  F02B         	goto	u4241
  4293   0056EA  EF79  F02B         	goto	u4240
  4294   0056EE                     u4241:
  4295   0056EE  EF5C  F02B         	goto	l4379
  4296   0056F2                     u4240:
  4297   0056F2  0012               	return		;funcret
  4298   0056F4                     __end_of_memcpy:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _labs *****************
  4302 ;; Defined at:
  4303 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  a               4    0[COMRAM] long 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  4    0[COMRAM] long 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;Total ram usage:        8 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_efgtoa
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text7
  4332   0050C6                     __ptext7:
  4333                           	callstack 0
  4334   0050C6                     _labs:
  4335                           	callstack 25
  4336   0050C6  BE04               	btfsc	(labs@a+3)^0,7,c
  4337   0050C8  EF72  F028         	goto	u4130
  4338   0050CC  5004               	movf	(labs@a+3)^0,w,c
  4339   0050CE  1003               	iorwf	(labs@a+2)^0,w,c
  4340   0050D0  1002               	iorwf	(labs@a+1)^0,w,c
  4341   0050D2  E106               	bnz	u4131
  4342   0050D4  0401               	decf	labs@a^0,w,c
  4343   0050D6  B0D8               	btfsc	status,0,c
  4344   0050D8  EF70  F028         	goto	u4131
  4345   0050DC  EF72  F028         	goto	u4130
  4346   0050E0                     u4131:
  4347   0050E0  EF8D  F028         	goto	l1463
  4348   0050E4                     u4130:
  4349   0050E4  C001  F005         	movff	labs@a,??_labs
  4350   0050E8  C002  F006         	movff	labs@a+1,??_labs+1
  4351   0050EC  C003  F007         	movff	labs@a+2,??_labs+2
  4352   0050F0  C004  F008         	movff	labs@a+3,??_labs+3
  4353   0050F4  1E05               	comf	??_labs^0,f,c
  4354   0050F6  1E06               	comf	(??_labs+1)^0,f,c
  4355   0050F8  1E07               	comf	(??_labs+2)^0,f,c
  4356   0050FA  1E08               	comf	(??_labs+3)^0,f,c
  4357   0050FC  2A05               	incf	??_labs^0,f,c
  4358   0050FE  0E00               	movlw	0
  4359   005100  2206               	addwfc	(??_labs+1)^0,f,c
  4360   005102  2207               	addwfc	(??_labs+2)^0,f,c
  4361   005104  2208               	addwfc	(??_labs+3)^0,f,c
  4362   005106  C005  F001         	movff	??_labs,?_labs
  4363   00510A  C006  F002         	movff	??_labs+1,?_labs+1
  4364   00510E  C007  F003         	movff	??_labs+2,?_labs+2
  4365   005112  C008  F004         	movff	??_labs+3,?_labs+3
  4366   005116  EF95  F028         	goto	l1466
  4367   00511A                     l1463:
  4368   00511A  C001  F001         	movff	labs@a,?_labs
  4369   00511E  C002  F002         	movff	labs@a+1,?_labs+1
  4370   005122  C003  F003         	movff	labs@a+2,?_labs+2
  4371   005126  C004  F004         	movff	labs@a+3,?_labs+3
  4372   00512A                     l1466:
  4373   00512A  0012               	return		;funcret
  4374   00512C                     __end_of_labs:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _floorf *****************
  4378 ;; Defined at:
  4379 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  x               4   74[COMRAM] float 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  u               4   90[COMRAM] struct .
  4384 ;;  m               4   84[COMRAM] unsigned long 
  4385 ;;  e               2   88[COMRAM] int 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  4   74[COMRAM] float 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;Total ram usage:       20 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_efgtoa
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text8
  4410   003D6C                     __ptext8:
  4411                           	callstack 0
  4412   003D6C                     _floorf:
  4413                           	callstack 25
  4414   003D6C  C0DF  F05B         	movff	floorf@F526,floorf@u
  4415   003D70  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4416   003D74  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4417   003D78  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4418   003D7C  C04B  F05B         	movff	floorf@x,floorf@u
  4419   003D80  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4420   003D84  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4421   003D88  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4422   003D8C  0E81               	movlw	129
  4423   003D8E  6E4F               	movwf	??_floorf^0,c
  4424   003D90  0EFF               	movlw	255
  4425   003D92  6E50               	movwf	(??_floorf+1)^0,c
  4426   003D94  C05B  F051         	movff	floorf@u,??_floorf+2
  4427   003D98  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4428   003D9C  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4429   003DA0  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4430   003DA4  0E18               	movlw	24
  4431   003DA6  EFDA  F01E         	goto	u4140
  4432   003DAA                     u4145:
  4433   003DAA  90D8               	bcf	status,0,c
  4434   003DAC  3254               	rrcf	(??_floorf+5)^0,f,c
  4435   003DAE  3253               	rrcf	(??_floorf+4)^0,f,c
  4436   003DB0  3252               	rrcf	(??_floorf+3)^0,f,c
  4437   003DB2  3251               	rrcf	(??_floorf+2)^0,f,c
  4438   003DB4                     u4140:
  4439   003DB4  2EE8               	decfsz	wreg,f,c
  4440   003DB6  EFD5  F01E         	goto	u4145
  4441   003DBA  5051               	movf	(??_floorf+2)^0,w,c
  4442   003DBC  244F               	addwf	??_floorf^0,w,c
  4443   003DBE  6E59               	movwf	floorf@e^0,c
  4444   003DC0  0E00               	movlw	0
  4445   003DC2  2050               	addwfc	(??_floorf+1)^0,w,c
  4446   003DC4  6E5A               	movwf	(floorf@e+1)^0,c
  4447   003DC6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4448   003DC8  EFEF  F01E         	goto	u4151
  4449   003DCC  505A               	movf	(floorf@e+1)^0,w,c
  4450   003DCE  E109               	bnz	u4150
  4451   003DD0  0E17               	movlw	23
  4452   003DD2  5C59               	subwf	floorf@e^0,w,c
  4453   003DD4  A0D8               	btfss	status,0,c
  4454   003DD6  EFEF  F01E         	goto	u4151
  4455   003DDA  EFF1  F01E         	goto	u4150
  4456   003DDE                     u4151:
  4457   003DDE  EFFB  F01E         	goto	l4355
  4458   003DE2                     u4150:
  4459   003DE2                     l4353:
  4460   003DE2  C04B  F04B         	movff	floorf@x,?_floorf
  4461   003DE6  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4462   003DEA  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4463   003DEE  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4464   003DF2  EFBE  F01F         	goto	l1452
  4465   003DF6                     l4355:
  4466   003DF6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4467   003DF8  EF00  F01F         	goto	u4161
  4468   003DFC  EF02  F01F         	goto	u4160
  4469   003E00                     u4161:
  4470   003E00  EF72  F01F         	goto	l4365
  4471   003E04                     u4160:
  4472   003E04  C059  F04F         	movff	floorf@e,??_floorf
  4473   003E08  0EFF               	movlw	255
  4474   003E0A  6E50               	movwf	(??_floorf+1)^0,c
  4475   003E0C  0EFF               	movlw	255
  4476   003E0E  6E51               	movwf	(??_floorf+2)^0,c
  4477   003E10  0E7F               	movlw	127
  4478   003E12  6E52               	movwf	(??_floorf+3)^0,c
  4479   003E14  0E00               	movlw	0
  4480   003E16  6E53               	movwf	(??_floorf+4)^0,c
  4481   003E18                     u4175:
  4482   003E18  664F               	tstfsz	??_floorf^0,c
  4483   003E1A  EF11  F01F         	goto	u4176
  4484   003E1E  EF19  F01F         	goto	u4177
  4485   003E22                     u4176:
  4486   003E22  3453               	rlcf	(??_floorf+4)^0,w,c
  4487   003E24  3253               	rrcf	(??_floorf+4)^0,f,c
  4488   003E26  3252               	rrcf	(??_floorf+3)^0,f,c
  4489   003E28  3251               	rrcf	(??_floorf+2)^0,f,c
  4490   003E2A  3250               	rrcf	(??_floorf+1)^0,f,c
  4491   003E2C  2E4F               	decfsz	??_floorf^0,f,c
  4492   003E2E  EF0C  F01F         	goto	u4175
  4493   003E32                     u4177:
  4494   003E32  C050  F055         	movff	??_floorf+1,floorf@m
  4495   003E36  C051  F056         	movff	??_floorf+2,floorf@m+1
  4496   003E3A  C052  F057         	movff	??_floorf+3,floorf@m+2
  4497   003E3E  C053  F058         	movff	??_floorf+4,floorf@m+3
  4498   003E42  5055               	movf	floorf@m^0,w,c
  4499   003E44  145B               	andwf	floorf@u^0,w,c
  4500   003E46  6E4F               	movwf	??_floorf^0,c
  4501   003E48  5056               	movf	(floorf@m+1)^0,w,c
  4502   003E4A  145C               	andwf	(floorf@u+1)^0,w,c
  4503   003E4C  6E50               	movwf	(??_floorf+1)^0,c
  4504   003E4E  5057               	movf	(floorf@m+2)^0,w,c
  4505   003E50  145D               	andwf	(floorf@u+2)^0,w,c
  4506   003E52  6E51               	movwf	(??_floorf+2)^0,c
  4507   003E54  5058               	movf	(floorf@m+3)^0,w,c
  4508   003E56  145E               	andwf	(floorf@u+3)^0,w,c
  4509   003E58  6E52               	movwf	(??_floorf+3)^0,c
  4510   003E5A  504F               	movf	??_floorf^0,w,c
  4511   003E5C  1050               	iorwf	(??_floorf+1)^0,w,c
  4512   003E5E  1051               	iorwf	(??_floorf+2)^0,w,c
  4513   003E60  1052               	iorwf	(??_floorf+3)^0,w,c
  4514   003E62  A4D8               	btfss	status,2,c
  4515   003E64  EF36  F01F         	goto	u4181
  4516   003E68  EF38  F01F         	goto	u4180
  4517   003E6C                     u4181:
  4518   003E6C  EF3A  F01F         	goto	l4361
  4519   003E70                     u4180:
  4520   003E70  EFF1  F01E         	goto	l4353
  4521   003E74                     l4361:
  4522   003E74  C05B  F04F         	movff	floorf@u,??_floorf
  4523   003E78  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4524   003E7C  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4525   003E80  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4526   003E84  0E20               	movlw	32
  4527   003E86  EF4A  F01F         	goto	u4190
  4528   003E8A                     u4195:
  4529   003E8A  90D8               	bcf	status,0,c
  4530   003E8C  3252               	rrcf	(??_floorf+3)^0,f,c
  4531   003E8E  3251               	rrcf	(??_floorf+2)^0,f,c
  4532   003E90  3250               	rrcf	(??_floorf+1)^0,f,c
  4533   003E92  324F               	rrcf	??_floorf^0,f,c
  4534   003E94                     u4190:
  4535   003E94  2EE8               	decfsz	wreg,f,c
  4536   003E96  EF45  F01F         	goto	u4195
  4537   003E9A  504F               	movf	??_floorf^0,w,c
  4538   003E9C  1050               	iorwf	(??_floorf+1)^0,w,c
  4539   003E9E  1051               	iorwf	(??_floorf+2)^0,w,c
  4540   003EA0  1052               	iorwf	(??_floorf+3)^0,w,c
  4541   003EA2  B4D8               	btfsc	status,2,c
  4542   003EA4  EF56  F01F         	goto	u4201
  4543   003EA8  EF58  F01F         	goto	u4200
  4544   003EAC                     u4201:
  4545   003EAC  EF60  F01F         	goto	l1455
  4546   003EB0                     u4200:
  4547   003EB0  5055               	movf	floorf@m^0,w,c
  4548   003EB2  265B               	addwf	floorf@u^0,f,c
  4549   003EB4  5056               	movf	(floorf@m+1)^0,w,c
  4550   003EB6  225C               	addwfc	(floorf@u+1)^0,f,c
  4551   003EB8  5057               	movf	(floorf@m+2)^0,w,c
  4552   003EBA  225D               	addwfc	(floorf@u+2)^0,f,c
  4553   003EBC  5058               	movf	(floorf@m+3)^0,w,c
  4554   003EBE  225E               	addwfc	(floorf@u+3)^0,f,c
  4555   003EC0                     l1455:
  4556   003EC0  1C55               	comf	floorf@m^0,w,c
  4557   003EC2  6E4F               	movwf	??_floorf^0,c
  4558   003EC4  1C56               	comf	(floorf@m+1)^0,w,c
  4559   003EC6  6E50               	movwf	(??_floorf+1)^0,c
  4560   003EC8  1C57               	comf	(floorf@m+2)^0,w,c
  4561   003ECA  6E51               	movwf	(??_floorf+2)^0,c
  4562   003ECC  1C58               	comf	(floorf@m+3)^0,w,c
  4563   003ECE  6E52               	movwf	(??_floorf+3)^0,c
  4564   003ED0  504F               	movf	??_floorf^0,w,c
  4565   003ED2  165B               	andwf	floorf@u^0,f,c
  4566   003ED4  5050               	movf	(??_floorf+1)^0,w,c
  4567   003ED6  165C               	andwf	(floorf@u+1)^0,f,c
  4568   003ED8  5051               	movf	(??_floorf+2)^0,w,c
  4569   003EDA  165D               	andwf	(floorf@u+2)^0,f,c
  4570   003EDC  5052               	movf	(??_floorf+3)^0,w,c
  4571   003EDE  165E               	andwf	(floorf@u+3)^0,f,c
  4572   003EE0  EFB6  F01F         	goto	l4373
  4573   003EE4                     l4365:
  4574   003EE4  C05B  F04F         	movff	floorf@u,??_floorf
  4575   003EE8  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4576   003EEC  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4577   003EF0  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4578   003EF4  0E20               	movlw	32
  4579   003EF6  EF82  F01F         	goto	u4210
  4580   003EFA                     u4215:
  4581   003EFA  90D8               	bcf	status,0,c
  4582   003EFC  3252               	rrcf	(??_floorf+3)^0,f,c
  4583   003EFE  3251               	rrcf	(??_floorf+2)^0,f,c
  4584   003F00  3250               	rrcf	(??_floorf+1)^0,f,c
  4585   003F02  324F               	rrcf	??_floorf^0,f,c
  4586   003F04                     u4210:
  4587   003F04  2EE8               	decfsz	wreg,f,c
  4588   003F06  EF7D  F01F         	goto	u4215
  4589   003F0A  504F               	movf	??_floorf^0,w,c
  4590   003F0C  1050               	iorwf	(??_floorf+1)^0,w,c
  4591   003F0E  1051               	iorwf	(??_floorf+2)^0,w,c
  4592   003F10  1052               	iorwf	(??_floorf+3)^0,w,c
  4593   003F12  A4D8               	btfss	status,2,c
  4594   003F14  EF8E  F01F         	goto	u4221
  4595   003F18  EF90  F01F         	goto	u4220
  4596   003F1C                     u4221:
  4597   003F1C  EF9A  F01F         	goto	l4369
  4598   003F20                     u4220:
  4599   003F20  0E00               	movlw	0
  4600   003F22  6E5B               	movwf	floorf@u^0,c
  4601   003F24  0E00               	movlw	0
  4602   003F26  6E5C               	movwf	(floorf@u+1)^0,c
  4603   003F28  0E00               	movlw	0
  4604   003F2A  6E5D               	movwf	(floorf@u+2)^0,c
  4605   003F2C  0E00               	movlw	0
  4606   003F2E  6E5E               	movwf	(floorf@u+3)^0,c
  4607   003F30  EFB6  F01F         	goto	l4373
  4608   003F34                     l4369:
  4609   003F34  90D8               	bcf	status,0,c
  4610   003F36  345B               	rlcf	floorf@u^0,w,c
  4611   003F38  6E4F               	movwf	??_floorf^0,c
  4612   003F3A  345C               	rlcf	(floorf@u+1)^0,w,c
  4613   003F3C  6E50               	movwf	(??_floorf+1)^0,c
  4614   003F3E  345D               	rlcf	(floorf@u+2)^0,w,c
  4615   003F40  6E51               	movwf	(??_floorf+2)^0,c
  4616   003F42  345E               	rlcf	(floorf@u+3)^0,w,c
  4617   003F44  6E52               	movwf	(??_floorf+3)^0,c
  4618   003F46  504F               	movf	??_floorf^0,w,c
  4619   003F48  1050               	iorwf	(??_floorf+1)^0,w,c
  4620   003F4A  1051               	iorwf	(??_floorf+2)^0,w,c
  4621   003F4C  1052               	iorwf	(??_floorf+3)^0,w,c
  4622   003F4E  B4D8               	btfsc	status,2,c
  4623   003F50  EFAC  F01F         	goto	u4231
  4624   003F54  EFAE  F01F         	goto	u4230
  4625   003F58                     u4231:
  4626   003F58  EFB6  F01F         	goto	l4373
  4627   003F5C                     u4230:
  4628   003F5C  0E00               	movlw	0
  4629   003F5E  6E5B               	movwf	floorf@u^0,c
  4630   003F60  0E00               	movlw	0
  4631   003F62  6E5C               	movwf	(floorf@u+1)^0,c
  4632   003F64  0E80               	movlw	128
  4633   003F66  6E5D               	movwf	(floorf@u+2)^0,c
  4634   003F68  0EBF               	movlw	191
  4635   003F6A  6E5E               	movwf	(floorf@u+3)^0,c
  4636   003F6C                     l4373:
  4637   003F6C  C05B  F04B         	movff	floorf@u,?_floorf
  4638   003F70  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4639   003F74  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4640   003F78  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4641   003F7C                     l1452:
  4642   003F7C  0012               	return		;funcret
  4643   003F7E                     __end_of_floorf:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function ___fpclassifyf *****************
  4647 ;; Defined at:
  4648 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  x               4    0[COMRAM] float 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  u               4   10[COMRAM] struct .
  4653 ;;  e               2    8[COMRAM] int 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  2    0[COMRAM] int 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4666 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4667 ;;Total ram usage:       14 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_efgtoa
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text9
  4678   004966                     __ptext9:
  4679                           	callstack 0
  4680   004966                     ___fpclassifyf:
  4681                           	callstack 25
  4682   004966  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4683   00496A  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4684   00496E  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4685   004972  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4686   004976  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4687   00497A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4688   00497E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4689   004982  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4690   004986  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4691   00498A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4692   00498E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4693   004992  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4694   004996  0E18               	movlw	24
  4695   004998  EFD3  F024         	goto	u4050
  4696   00499C                     u4055:
  4697   00499C  90D8               	bcf	status,0,c
  4698   00499E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4699   0049A0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4700   0049A2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4701   0049A4  3205               	rrcf	??___fpclassifyf^0,f,c
  4702   0049A6                     u4050:
  4703   0049A6  2EE8               	decfsz	wreg,f,c
  4704   0049A8  EFCE  F024         	goto	u4055
  4705   0049AC  5005               	movf	??___fpclassifyf^0,w,c
  4706   0049AE  6E09               	movwf	___fpclassifyf@e^0,c
  4707   0049B0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4708   0049B2  5009               	movf	___fpclassifyf@e^0,w,c
  4709   0049B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4710   0049B6  A4D8               	btfss	status,2,c
  4711   0049B8  EFE0  F024         	goto	u4061
  4712   0049BC  EFE2  F024         	goto	u4060
  4713   0049C0                     u4061:
  4714   0049C0  EF02  F025         	goto	l4331
  4715   0049C4                     u4060:
  4716   0049C4  90D8               	bcf	status,0,c
  4717   0049C6  340B               	rlcf	___fpclassifyf@u^0,w,c
  4718   0049C8  6E05               	movwf	??___fpclassifyf^0,c
  4719   0049CA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4720   0049CC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4721   0049CE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4722   0049D0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4723   0049D2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4724   0049D4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4725   0049D6  5005               	movf	??___fpclassifyf^0,w,c
  4726   0049D8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4727   0049DA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4728   0049DC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4729   0049DE  A4D8               	btfss	status,2,c
  4730   0049E0  EFF4  F024         	goto	u4071
  4731   0049E4  EFF6  F024         	goto	u4070
  4732   0049E8                     u4071:
  4733   0049E8  EFFC  F024         	goto	l4327
  4734   0049EC                     u4070:
  4735   0049EC  0E00               	movlw	0
  4736   0049EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4737   0049F0  0E02               	movlw	2
  4738   0049F2  6E01               	movwf	?___fpclassifyf^0,c
  4739   0049F4  EF31  F025         	goto	l1438
  4740   0049F8                     l4327:
  4741   0049F8  0E00               	movlw	0
  4742   0049FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4743   0049FC  0E03               	movlw	3
  4744   0049FE  6E01               	movwf	?___fpclassifyf^0,c
  4745   004A00  EF31  F025         	goto	l1438
  4746   004A04                     l4331:
  4747   004A04  2809               	incf	___fpclassifyf@e^0,w,c
  4748   004A06  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4749   004A08  A4D8               	btfss	status,2,c
  4750   004A0A  EF09  F025         	goto	u4081
  4751   004A0E  EF0B  F025         	goto	u4080
  4752   004A12                     u4081:
  4753   004A12  EF2D  F025         	goto	l4337
  4754   004A16                     u4080:
  4755   004A16  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4756   004A1A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4757   004A1E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4758   004A22  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4759   004A26  0E09               	movlw	9
  4760   004A28                     u4095:
  4761   004A28  90D8               	bcf	status,0,c
  4762   004A2A  3605               	rlcf	??___fpclassifyf^0,f,c
  4763   004A2C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4764   004A2E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4765   004A30  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4766   004A32  2EE8               	decfsz	wreg,f,c
  4767   004A34  EF14  F025         	goto	u4095
  4768   004A38  5005               	movf	??___fpclassifyf^0,w,c
  4769   004A3A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4770   004A3C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4771   004A3E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4772   004A40  B4D8               	btfsc	status,2,c
  4773   004A42  EF25  F025         	goto	u4101
  4774   004A46  EF28  F025         	goto	u4100
  4775   004A4A                     u4101:
  4776   004A4A  0E01               	movlw	1
  4777   004A4C  EF29  F025         	goto	u4110
  4778   004A50                     u4100:
  4779   004A50  0E00               	movlw	0
  4780   004A52                     u4110:
  4781   004A52  6E01               	movwf	?___fpclassifyf^0,c
  4782   004A54  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4783   004A56  EF31  F025         	goto	l1438
  4784   004A5A                     l4337:
  4785   004A5A  0E00               	movlw	0
  4786   004A5C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4787   004A5E  0E04               	movlw	4
  4788   004A60  6E01               	movwf	?___fpclassifyf^0,c
  4789   004A62                     l1438:
  4790   004A62  0012               	return		;funcret
  4791   004A64                     __end_of___fpclassifyf:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function ___fltol *****************
  4795 ;; Defined at:
  4796 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  f1              4    0[COMRAM] int 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  exp1            1    9[COMRAM] unsigned char 
  4801 ;;  sign1           1    8[COMRAM] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  4    0[COMRAM] long 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;Total ram usage:       10 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_turnRight45
  4822 ;;		_turnLeft45
  4823 ;;		_efgtoa
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text10
  4828   00475C                     __ptext10:
  4829                           	callstack 0
  4830   00475C                     ___fltol:
  4831                           	callstack 25
  4832   00475C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4833   00475E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4834   004760  6E0A               	movwf	___fltol@exp1^0,c
  4835   004762  500A               	movf	___fltol@exp1^0,w,c
  4836   004764  A4D8               	btfss	status,2,c
  4837   004766  EFB7  F023         	goto	u3951
  4838   00476A  EFB9  F023         	goto	u3950
  4839   00476E                     u3951:
  4840   00476E  EFC3  F023         	goto	l4263
  4841   004772                     u3950:
  4842   004772                     l4259:
  4843   004772  0E00               	movlw	0
  4844   004774  6E01               	movwf	?___fltol^0,c
  4845   004776  0E00               	movlw	0
  4846   004778  6E02               	movwf	(?___fltol+1)^0,c
  4847   00477A  0E00               	movlw	0
  4848   00477C  6E03               	movwf	(?___fltol+2)^0,c
  4849   00477E  0E00               	movlw	0
  4850   004780  6E04               	movwf	(?___fltol+3)^0,c
  4851   004782  EF30  F024         	goto	l911
  4852   004786                     l4263:
  4853   004786  C001  F005         	movff	___fltol@f1,??___fltol
  4854   00478A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4855   00478E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4856   004792  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4857   004796  0E20               	movlw	32
  4858   004798  EFD3  F023         	goto	u3960
  4859   00479C                     u3965:
  4860   00479C  90D8               	bcf	status,0,c
  4861   00479E  3208               	rrcf	(??___fltol+3)^0,f,c
  4862   0047A0  3207               	rrcf	(??___fltol+2)^0,f,c
  4863   0047A2  3206               	rrcf	(??___fltol+1)^0,f,c
  4864   0047A4  3205               	rrcf	??___fltol^0,f,c
  4865   0047A6                     u3960:
  4866   0047A6  2EE8               	decfsz	wreg,f,c
  4867   0047A8  EFCE  F023         	goto	u3965
  4868   0047AC  5005               	movf	??___fltol^0,w,c
  4869   0047AE  6E09               	movwf	___fltol@sign1^0,c
  4870   0047B0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4871   0047B2  0EFF               	movlw	255
  4872   0047B4  1601               	andwf	___fltol@f1^0,f,c
  4873   0047B6  0EFF               	movlw	255
  4874   0047B8  1602               	andwf	(___fltol@f1+1)^0,f,c
  4875   0047BA  0EFF               	movlw	255
  4876   0047BC  1603               	andwf	(___fltol@f1+2)^0,f,c
  4877   0047BE  0E00               	movlw	0
  4878   0047C0  1604               	andwf	(___fltol@f1+3)^0,f,c
  4879   0047C2  0E96               	movlw	150
  4880   0047C4  5E0A               	subwf	___fltol@exp1^0,f,c
  4881   0047C6  BE0A               	btfsc	___fltol@exp1^0,7,c
  4882   0047C8  EFEA  F023         	goto	u3970
  4883   0047CC  EFE8  F023         	goto	u3971
  4884   0047D0                     u3971:
  4885   0047D0  EF00  F024         	goto	l4283
  4886   0047D4                     u3970:
  4887   0047D4  500A               	movf	___fltol@exp1^0,w,c
  4888   0047D6  0A80               	xorlw	128
  4889   0047D8  0F97               	addlw	151
  4890   0047DA  B0D8               	btfsc	status,0,c
  4891   0047DC  EFF2  F023         	goto	u3981
  4892   0047E0  EFF4  F023         	goto	u3980
  4893   0047E4                     u3981:
  4894   0047E4  EFF6  F023         	goto	l4279
  4895   0047E8                     u3980:
  4896   0047E8  EFB9  F023         	goto	l4259
  4897   0047EC                     l4279:
  4898   0047EC  90D8               	bcf	status,0,c
  4899   0047EE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4900   0047F0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4901   0047F2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4902   0047F4  3201               	rrcf	___fltol@f1^0,f,c
  4903   0047F6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4904   0047F8  EFF6  F023         	goto	l4279
  4905   0047FC  EF18  F024         	goto	l4293
  4906   004800                     l4283:
  4907   004800  0E1F               	movlw	31
  4908   004802  640A               	cpfsgt	___fltol@exp1^0,c
  4909   004804  EF06  F024         	goto	u3991
  4910   004808  EF08  F024         	goto	u3990
  4911   00480C                     u3991:
  4912   00480C  EF10  F024         	goto	l4291
  4913   004810                     u3990:
  4914   004810  EFB9  F023         	goto	l4259
  4915   004814                     l4289:
  4916   004814  90D8               	bcf	status,0,c
  4917   004816  3601               	rlcf	___fltol@f1^0,f,c
  4918   004818  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4919   00481A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4920   00481C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4921   00481E  060A               	decf	___fltol@exp1^0,f,c
  4922   004820                     l4291:
  4923   004820  500A               	movf	___fltol@exp1^0,w,c
  4924   004822  A4D8               	btfss	status,2,c
  4925   004824  EF16  F024         	goto	u4001
  4926   004828  EF18  F024         	goto	u4000
  4927   00482C                     u4001:
  4928   00482C  EF0A  F024         	goto	l4289
  4929   004830                     u4000:
  4930   004830                     l4293:
  4931   004830  5009               	movf	___fltol@sign1^0,w,c
  4932   004832  B4D8               	btfsc	status,2,c
  4933   004834  EF1E  F024         	goto	u4011
  4934   004838  EF20  F024         	goto	u4010
  4935   00483C                     u4011:
  4936   00483C  EF28  F024         	goto	l4297
  4937   004840                     u4010:
  4938   004840  1E04               	comf	(___fltol@f1+3)^0,f,c
  4939   004842  1E03               	comf	(___fltol@f1+2)^0,f,c
  4940   004844  1E02               	comf	(___fltol@f1+1)^0,f,c
  4941   004846  6C01               	negf	___fltol@f1^0,c
  4942   004848  0E00               	movlw	0
  4943   00484A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4944   00484C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4945   00484E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4946   004850                     l4297:
  4947   004850  C001  F001         	movff	___fltol@f1,?___fltol
  4948   004854  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4949   004858  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4950   00485C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4951   004860                     l911:
  4952   004860  0012               	return		;funcret
  4953   004862                     __end_of___fltol:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function ___flneg *****************
  4957 ;; Defined at:
  4958 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  f1              4    0[COMRAM] long 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  4    0[COMRAM] long 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, status,0
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;Total ram usage:        4 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_efgtoa
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text11
  4987   005A7C                     __ptext11:
  4988                           	callstack 0
  4989   005A7C                     ___flneg:
  4990                           	callstack 25
  4991   005A7C  5001               	movf	___flneg@f1^0,w,c
  4992   005A7E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4993   005A80  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4994   005A82  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4995   005A84  B4D8               	btfsc	status,2,c
  4996   005A86  EF47  F02D         	goto	u3941
  4997   005A8A  EF49  F02D         	goto	u3940
  4998   005A8E                     u3941:
  4999   005A8E  EF51  F02D         	goto	l4253
  5000   005A92                     u3940:
  5001   005A92  0E00               	movlw	0
  5002   005A94  1A01               	xorwf	___flneg@f1^0,f,c
  5003   005A96  0E00               	movlw	0
  5004   005A98  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5005   005A9A  0E00               	movlw	0
  5006   005A9C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5007   005A9E  0E80               	movlw	128
  5008   005AA0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5009   005AA2                     l4253:
  5010   005AA2  C001  F001         	movff	___flneg@f1,?___flneg
  5011   005AA6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5012   005AAA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5013   005AAE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5014   005AB2  0012               	return		;funcret
  5015   005AB4                     __end_of___flneg:
  5016                           	callstack 0
  5017                           
  5018 ;; *************** function _dtoa *****************
  5019 ;; Defined at:
  5020 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5023 ;;		 -> sprintf@f(11), 
  5024 ;;  d               8   29[COMRAM] long long 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  n               8   51[COMRAM] long long 
  5027 ;;  i               2   59[COMRAM] int 
  5028 ;;  w               2   49[COMRAM] int 
  5029 ;;  p               2   47[COMRAM] int 
  5030 ;;  s               1   61[COMRAM] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5040 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;Total ram usage:       35 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 5
  5047 ;; This function calls:
  5048 ;;		___aodiv
  5049 ;;		___aomod
  5050 ;;		_abs
  5051 ;;		_pad
  5052 ;; This function is called by:
  5053 ;;		_vfpfcnvrt
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text12
  5058   003AEE                     __ptext12:
  5059                           	callstack 0
  5060   003AEE                     _dtoa:
  5061                           	callstack 22
  5062   003AEE                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
=======
  2930   001936  0E00               	movlw	0
  2931   001938  0100               	movlb	0	; () banked
  2932   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  2933   00193C                     
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2936   00193C  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2937   001940  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2938   001944  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2939   001948  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2940   00194C                     
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2943   00194C  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2944   00194E  EFAD  F00C         	goto	u4480
  2945   001952  EFAB  F00C         	goto	u4481
  2946   001956                     u4481:
  2947   001956  EFC1  F00C         	goto	l4600
  2948   00195A                     u4480:
  2949   00195A                     
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2952   00195A  0E01               	movlw	1
  2953   00195C  6F8A               	movwf	efgtoa@sign& (0+255),b
  2954   00195E                     
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2957   00195E  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2958   001962  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2959   001966  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2960   00196A  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2961   00196E  EC64  F02D         	call	___flneg	;wreg free
  2962   001972  C001  F08D         	movff	?___flneg,efgtoa@g
  2963   001976  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2964   00197A  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2965   00197E  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2966   001982                     l4600:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2969   001982  0E00               	movlw	0
  2970   001984  0100               	movlb	0	; () banked
  2971   001986  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2972   001988  0E00               	movlw	0
  2973   00198A  6F8B               	movwf	efgtoa@n& (0+255),b
  2974   00198C                     
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2977   00198C  C0EF  F07A         	movff	_width,efgtoa@w
  2978   001990  C0F0  F07B         	movff	_width+1,efgtoa@w+1
  2979   001994                     
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2982   001994  518A               	movf	efgtoa@sign& (0+255),w,b
  2983   001996  B4D8               	btfsc	status,2,c
  2984   001998  EFD0  F00C         	goto	u4491
  2985   00199C  EFD2  F00C         	goto	u4490
  2986   0019A0                     u4491:
  2987   0019A0  EFE6  F00C         	goto	l4614
  2988   0019A4                     u4490:
  2989   0019A4                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2992   0019A4  518A               	movf	efgtoa@sign& (0+255),w,b
  2993   0019A6  A4D8               	btfss	status,2,c
  2994   0019A8  EFD8  F00C         	goto	u4501
  2995   0019AC  EFDA  F00C         	goto	u4500
  2996   0019B0                     u4501:
  2997   0019B0  EFE0  F00C         	goto	l4610
  2998   0019B4                     u4500:
  2999   0019B4                     
  3000                           ; BSR set to: 0
  3001   0019B4  0E00               	movlw	0
  3002   0019B6  6F70               	movwf	(_efgtoa$2539+1)& (0+255),b
  3003   0019B8  0E2B               	movlw	43
  3004   0019BA  6F6F               	movwf	_efgtoa$2539& (0+255),b
  3005   0019BC  EFE4  F00C         	goto	l4612
  3006   0019C0                     l4610:
  3007                           
  3008                           ; BSR set to: 0
  3009   0019C0  0E00               	movlw	0
  3010   0019C2  6F70               	movwf	(_efgtoa$2539+1)& (0+255),b
  3011   0019C4  0E2D               	movlw	45
  3012   0019C6  6F6F               	movwf	_efgtoa$2539& (0+255),b
  3013   0019C8                     l4612:
  3014                           
  3015                           ; BSR set to: 0
  3016   0019C8  C06F  F08A         	movff	_efgtoa$2539,efgtoa@sign
  3017   0019CC                     l4614:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3021   0019CC  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3022   0019D0  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3023   0019D4  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3024   0019D8  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3025   0019DC  ECF2  F024         	call	___fpclassifyf	;wreg free
  3026   0019E0  0401               	decf	?___fpclassifyf^0,w,c
  3027   0019E2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3028   0019E4  A4D8               	btfss	status,2,c
  3029   0019E6  EFF7  F00C         	goto	u4511
  3030   0019EA  EFF9  F00C         	goto	u4510
  3031   0019EE                     u4511:
  3032   0019EE  EF2C  F00D         	goto	l4632
  3033   0019F2                     u4510:
  3034   0019F2                     
  3035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3036   0019F2  0100               	movlb	0	; () banked
  3037   0019F4  518A               	movf	efgtoa@sign& (0+255),w,b
  3038   0019F6  B4D8               	btfsc	status,2,c
  3039   0019F8  EF00  F00D         	goto	u4521
  3040   0019FC  EF02  F00D         	goto	u4520
  3041   001A00                     u4521:
  3042   001A00  EF0B  F00D         	goto	l4624
  3043   001A04                     u4520:
  3044   001A04                     
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3047   001A04  C08A  F10E         	movff	efgtoa@sign,_dbuf
  3048   001A08                     
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3051   001A08  077A               	decf	efgtoa@w& (0+255),f,b
  3052   001A0A  A0D8               	btfss	status,0,c
  3053   001A0C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3054   001A0E                     
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3057   001A0E  0E00               	movlw	0
  3058   001A10  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3059   001A12  0E01               	movlw	1
  3060   001A14  6F8B               	movwf	efgtoa@n& (0+255),b
  3061   001A16                     l4624:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3065   001A16  0E0E               	movlw	low _dbuf
  3066   001A18  258B               	addwf	efgtoa@n& (0+255),w,b
  3067   001A1A  6E01               	movwf	strcpy@dest^0,c
  3068   001A1C  0E01               	movlw	high _dbuf
  3069   001A1E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3070   001A20  6E02               	movwf	(strcpy@dest+1)^0,c
  3071   001A22  0E50               	movlw	low STR_3
  3072   001A24  6E03               	movwf	strcpy@src^0,c
  3073   001A26  0E0E               	movlw	high STR_3
  3074   001A28  6E04               	movwf	(strcpy@src+1)^0,c
  3075   001A2A  EC63  F02C         	call	_strcpy	;wreg free
  3076   001A2E                     l4626:
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3079   001A2E  0100               	movlb	0	; () banked
  3080   001A30  0EFD               	movlw	253
  3081   001A32  277A               	addwf	efgtoa@w& (0+255),f,b
  3082   001A34  0EFF               	movlw	255
  3083   001A36  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3084   001A38                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3087   001A38  C060  F011         	movff	efgtoa@fp,pad@fp
  3088   001A3C  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3089   001A40  0E0E               	movlw	low _dbuf
  3090   001A42  6E13               	movwf	pad@buf^0,c
  3091   001A44  0E01               	movlw	high _dbuf
  3092   001A46  6E14               	movwf	(pad@buf+1)^0,c
  3093   001A48  C07A  F015         	movff	efgtoa@w,pad@p
  3094   001A4C  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3095   001A50  ECDC  F027         	call	_pad	;wreg free
  3096   001A54  EF97  F011         	goto	l1389
  3097   001A58                     l4632:
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3100   001A58  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3101   001A5C  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3102   001A60  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3103   001A64  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3104   001A68  ECF2  F024         	call	___fpclassifyf	;wreg free
  3105   001A6C  5001               	movf	?___fpclassifyf^0,w,c
  3106   001A6E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3107   001A70  A4D8               	btfss	status,2,c
  3108   001A72  EF3D  F00D         	goto	u4531
  3109   001A76  EF3F  F00D         	goto	u4530
  3110   001A7A                     u4531:
  3111   001A7A  EF5F  F00D         	goto	l4650
  3112   001A7E                     u4530:
  3113   001A7E                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3115   001A7E  0100               	movlb	0	; () banked
  3116   001A80  518A               	movf	efgtoa@sign& (0+255),w,b
  3117   001A82  B4D8               	btfsc	status,2,c
  3118   001A84  EF46  F00D         	goto	u4541
  3119   001A88  EF48  F00D         	goto	u4540
  3120   001A8C                     u4541:
  3121   001A8C  EF51  F00D         	goto	l4642
  3122   001A90                     u4540:
  3123   001A90                     
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3126   001A90  C08A  F10E         	movff	efgtoa@sign,_dbuf
  3127   001A94                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3130   001A94  077A               	decf	efgtoa@w& (0+255),f,b
  3131   001A96  A0D8               	btfss	status,0,c
  3132   001A98  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3133   001A9A                     
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3136   001A9A  0E00               	movlw	0
  3137   001A9C  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3138   001A9E  0E01               	movlw	1
  3139   001AA0  6F8B               	movwf	efgtoa@n& (0+255),b
  3140   001AA2                     l4642:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3144   001AA2  0E0E               	movlw	low _dbuf
  3145   001AA4  258B               	addwf	efgtoa@n& (0+255),w,b
  3146   001AA6  6E01               	movwf	strcpy@dest^0,c
  3147   001AA8  0E01               	movlw	high _dbuf
  3148   001AAA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3149   001AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  3150   001AAE  0E54               	movlw	low STR_6
  3151   001AB0  6E03               	movwf	strcpy@src^0,c
  3152   001AB2  0E0E               	movlw	high STR_6
  3153   001AB4  6E04               	movwf	(strcpy@src+1)^0,c
  3154   001AB6  EC63  F02C         	call	_strcpy	;wreg free
  3155   001ABA  EF17  F00D         	goto	l4626
  3156   001ABE                     l4650:
  3157                           
  3158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3159   001ABE  0E00               	movlw	0
  3160   001AC0  0100               	movlb	0	; () banked
  3161   001AC2  6F91               	movwf	efgtoa@u& (0+255),b
  3162   001AC4  0E00               	movlw	0
  3163   001AC6  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3164   001AC8  0E80               	movlw	128
  3165   001ACA  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3166   001ACC  0E3F               	movlw	63
  3167   001ACE  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3170   001AD0  0E00               	movlw	0
  3171   001AD2  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3172   001AD4  0E00               	movlw	0
  3173   001AD6  6F78               	movwf	efgtoa@e& (0+255),b
  3174   001AD8                     
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3177   001AD8  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3178   001ADC  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3179   001AE0  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3180   001AE4  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3181   001AE8  0E00               	movlw	0
  3182   001AEA  6E36               	movwf	___fleq@ff2^0,c
  3183   001AEC  0E00               	movlw	0
  3184   001AEE  6E37               	movwf	(___fleq@ff2+1)^0,c
  3185   001AF0  0E00               	movlw	0
  3186   001AF2  6E38               	movwf	(___fleq@ff2+2)^0,c
  3187   001AF4  0E00               	movlw	0
  3188   001AF6  6E39               	movwf	(___fleq@ff2+3)^0,c
  3189   001AF8  ECD6  F025         	call	___fleq	;wreg free
  3190   001AFC  B0D8               	btfsc	status,0,c
  3191   001AFE  EF83  F00D         	goto	u4551
  3192   001B02  EF85  F00D         	goto	u4550
  3193   001B06                     u4551:
  3194   001B06  EF64  F00E         	goto	l1392
  3195   001B0A                     u4550:
  3196   001B0A  EF92  F00D         	goto	l4658
  3197   001B0E                     l1394:
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3200   001B0E  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3201   001B12  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3202   001B16  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3203   001B1A  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3204   001B1E                     
  3205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3206   001B1E  0100               	movlb	0	; () banked
  3207   001B20  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3208   001B22  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3209   001B24                     l4658:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3212   001B24  C091  F011         	movff	efgtoa@u,___flmul@b
  3213   001B28  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3214   001B2C  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3215   001B30  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3216   001B34  0E00               	movlw	0
  3217   001B36  6E15               	movwf	___flmul@a^0,c
  3218   001B38  0E00               	movlw	0
  3219   001B3A  6E16               	movwf	(___flmul@a+1)^0,c
  3220   001B3C  0E20               	movlw	32
  3221   001B3E  6E17               	movwf	(___flmul@a+2)^0,c
  3222   001B40  0E41               	movlw	65
  3223   001B42  6E18               	movwf	(___flmul@a+3)^0,c
  3224   001B44  EC8A  F016         	call	___flmul	;wreg free
  3225   001B48  C011  F07C         	movff	?___flmul,efgtoa@ou
  3226   001B4C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3227   001B50  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3228   001B54  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3229   001B58  0100               	movlb	0	; () banked
  3230   001B5A  517C               	movf	efgtoa@ou& (0+255),w,b
  3231   001B5C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3232   001B5E  6E01               	movwf	labs@a^0,c
  3233   001B60  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3234   001B62  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3235   001B64  6E02               	movwf	(labs@a+1)^0,c
  3236   001B66  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3237   001B68  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3238   001B6A  6E03               	movwf	(labs@a+2)^0,c
  3239   001B6C  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3240   001B6E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3241   001B70  6E04               	movwf	(labs@a+3)^0,c
  3242   001B72  EC8E  F028         	call	_labs	;wreg free
  3243   001B76  BE04               	btfsc	(?_labs+3)^0,7,c
  3244   001B78  EFC9  F00D         	goto	u4561
  3245   001B7C  5004               	movf	(?_labs+3)^0,w,c
  3246   001B7E  1003               	iorwf	(?_labs+2)^0,w,c
  3247   001B80  1002               	iorwf	(?_labs+1)^0,w,c
  3248   001B82  E109               	bnz	u4560
  3249   001B84  0E02               	movlw	2
  3250   001B86  5C01               	subwf	?_labs^0,w,c
  3251   001B88  A0D8               	btfss	status,0,c
  3252   001B8A  EFC9  F00D         	goto	u4561
  3253   001B8E  EFCB  F00D         	goto	u4560
  3254   001B92                     u4561:
  3255   001B92  EF87  F00D         	goto	l1394
  3256   001B96                     u4560:
  3257   001B96  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3258   001B9A  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3259   001B9E  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3260   001BA2  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3261   001BA6  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3262   001BAA  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3263   001BAE  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3264   001BB2  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3265   001BB6  EC70  F024         	call	___flge	;wreg free
  3266   001BBA  A0D8               	btfss	status,0,c
  3267   001BBC  EFE2  F00D         	goto	u4571
  3268   001BC0  EFE4  F00D         	goto	u4570
  3269   001BC4                     u4571:
  3270   001BC4  EF87  F00D         	goto	l1394
  3271   001BC8                     u4570:
  3272   001BC8                     
  3273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3274   001BC8  0100               	movlb	0	; () banked
  3275   001BCA  5191               	movf	efgtoa@u& (0+255),w,b
  3276   001BCC  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3277   001BCE  6E01               	movwf	labs@a^0,c
  3278   001BD0  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3279   001BD2  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3280   001BD4  6E02               	movwf	(labs@a+1)^0,c
  3281   001BD6  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3282   001BD8  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3283   001BDA  6E03               	movwf	(labs@a+2)^0,c
  3284   001BDC  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3285   001BDE  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3286   001BE0  6E04               	movwf	(labs@a+3)^0,c
  3287   001BE2  EC8E  F028         	call	_labs	;wreg free
  3288   001BE6  BE04               	btfsc	(?_labs+3)^0,7,c
  3289   001BE8  EF03  F00E         	goto	u4580
  3290   001BEC  5004               	movf	(?_labs+3)^0,w,c
  3291   001BEE  1003               	iorwf	(?_labs+2)^0,w,c
  3292   001BF0  1002               	iorwf	(?_labs+1)^0,w,c
  3293   001BF2  E107               	bnz	u4581
  3294   001BF4  0E02               	movlw	2
  3295   001BF6  5C01               	subwf	?_labs^0,w,c
  3296   001BF8  B0D8               	btfsc	status,0,c
  3297   001BFA  EF01  F00E         	goto	u4581
  3298   001BFE  EF03  F00E         	goto	u4580
  3299   001C02                     u4581:
  3300   001C02  EF4B  F00E         	goto	l4676
  3301   001C06                     u4580:
  3302   001C06                     l4666:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3305   001C06  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3306   001C0A  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3307   001C0E  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3308   001C12  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3311   001C16  EF64  F00E         	goto	l1392
  3312   001C1A                     l4668:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3315   001C1A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3316   001C1E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3317   001C22  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3318   001C26  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3319   001C2A  0E00               	movlw	0
  3320   001C2C  6E36               	movwf	___fldiv@a^0,c
  3321   001C2E  0E00               	movlw	0
  3322   001C30  6E37               	movwf	(___fldiv@a+1)^0,c
  3323   001C32  0E20               	movlw	32
  3324   001C34  6E38               	movwf	(___fldiv@a+2)^0,c
  3325   001C36  0E41               	movlw	65
  3326   001C38  6E39               	movwf	(___fldiv@a+3)^0,c
  3327   001C3A  EC9F  F018         	call	___fldiv	;wreg free
  3328   001C3E  C032  F091         	movff	?___fldiv,efgtoa@u
  3329   001C42  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3330   001C46  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3331   001C4A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3332   001C4E                     
  3333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3334   001C4E  0100               	movlb	0	; () banked
  3335   001C50  0778               	decf	efgtoa@e& (0+255),f,b
  3336   001C52  A0D8               	btfss	status,0,c
  3337   001C54  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3338   001C56                     
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3341   001C56  5191               	movf	efgtoa@u& (0+255),w,b
  3342   001C58  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3343   001C5A  6E01               	movwf	labs@a^0,c
  3344   001C5C  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3345   001C5E  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3346   001C60  6E02               	movwf	(labs@a+1)^0,c
  3347   001C62  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3348   001C64  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3349   001C66  6E03               	movwf	(labs@a+2)^0,c
  3350   001C68  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3351   001C6A  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3352   001C6C  6E04               	movwf	(labs@a+3)^0,c
  3353   001C6E  EC8E  F028         	call	_labs	;wreg free
  3354   001C72  BE04               	btfsc	(?_labs+3)^0,7,c
  3355   001C74  EF49  F00E         	goto	u4590
  3356   001C78  5004               	movf	(?_labs+3)^0,w,c
  3357   001C7A  1003               	iorwf	(?_labs+2)^0,w,c
  3358   001C7C  1002               	iorwf	(?_labs+1)^0,w,c
  3359   001C7E  E107               	bnz	u4591
  3360   001C80  0E02               	movlw	2
  3361   001C82  5C01               	subwf	?_labs^0,w,c
  3362   001C84  B0D8               	btfsc	status,0,c
  3363   001C86  EF47  F00E         	goto	u4591
  3364   001C8A  EF49  F00E         	goto	u4590
  3365   001C8E                     u4591:
  3366   001C8E  EF4B  F00E         	goto	l4676
  3367   001C92                     u4590:
  3368   001C92  EF03  F00E         	goto	l4666
  3369   001C96                     l4676:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3372   001C96  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3373   001C9A  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3374   001C9E  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3375   001CA2  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3376   001CA6  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3377   001CAA  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3378   001CAE  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3379   001CB2  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3380   001CB6  EC70  F024         	call	___flge	;wreg free
  3381   001CBA  A0D8               	btfss	status,0,c
  3382   001CBC  EF62  F00E         	goto	u4601
  3383   001CC0  EF64  F00E         	goto	u4600
  3384   001CC4                     u4601:
  3385   001CC4  EF0D  F00E         	goto	l4668
  3386   001CC8                     u4600:
  3387   001CC8                     l1392:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3390   001CC8  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3393   001CCC  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3394   001CD0                     
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3396   001CD0  0100               	movlb	0	; () banked
  3397   001CD2  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  3398   001CD4  EF6E  F00E         	goto	u4611
  3399   001CD8  EF70  F00E         	goto	u4610
  3400   001CDC                     u4611:
  3401   001CDC  EF76  F00E         	goto	l4682
  3402   001CE0                     u4610:
  3403   001CE0                     
  3404                           ; BSR set to: 0
  3405   001CE0  C0F1  F06B         	movff	_prec,efgtoa@p
  3406   001CE4  C0F2  F06C         	movff	_prec+1,efgtoa@p+1
  3407   001CE8  EF7A  F00E         	goto	l4684
  3408   001CEC                     l4682:
  3409                           
  3410                           ; BSR set to: 0
  3411   001CEC  0E00               	movlw	0
  3412   001CEE  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3413   001CF0  0E06               	movlw	6
  3414   001CF2  6F6B               	movwf	efgtoa@p& (0+255),b
  3415   001CF4                     l4684:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3419   001CF4  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3420   001CF8  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3421   001CFC                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3424   001CFC  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3425   001CFE  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3426   001D00                     
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3429   001D00  0E66               	movlw	102
  3430   001D02  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3431   001D04  A4D8               	btfss	status,2,c
  3432   001D06  EF87  F00E         	goto	u4621
  3433   001D0A  EF89  F00E         	goto	u4620
  3434   001D0E                     u4621:
  3435   001D0E  EFA9  F00E         	goto	l4698
  3436   001D12                     u4620:
  3437   001D12                     
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3440   001D12  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3441   001D14  EF90  F00E         	goto	u4630
  3442   001D18  EF8E  F00E         	goto	u4631
  3443   001D1C                     u4631:
  3444   001D1C  EF9C  F00E         	goto	l4694
  3445   001D20                     u4630:
  3446   001D20                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3449   001D20  0E00               	movlw	0
  3450   001D22  6F91               	movwf	efgtoa@u& (0+255),b
  3451   001D24  0E00               	movlw	0
  3452   001D26  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3453   001D28  0E80               	movlw	128
  3454   001D2A  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3455   001D2C  0E3F               	movlw	63
  3456   001D2E  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3457                           
  3458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3459   001D30  0E00               	movlw	0
  3460   001D32  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3461   001D34  0E00               	movlw	0
  3462   001D36  6F78               	movwf	efgtoa@e& (0+255),b
  3463   001D38                     l4694:
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3467   001D38  0E67               	movlw	103
  3468   001D3A  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3469   001D3C  B4D8               	btfsc	status,2,c
  3470   001D3E  EFA3  F00E         	goto	u4641
  3471   001D42  EFA5  F00E         	goto	u4640
  3472   001D46                     u4641:
  3473   001D46  EFA9  F00E         	goto	l4698
  3474   001D4A                     u4640:
  3475   001D4A                     
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3478   001D4A  5178               	movf	efgtoa@e& (0+255),w,b
  3479   001D4C  2776               	addwf	efgtoa@m& (0+255),f,b
  3480   001D4E  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3481   001D50  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3482   001D52                     l4698:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3486   001D52  0E00               	movlw	0
  3487   001D54  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3488   001D56  0E00               	movlw	0
  3489   001D58  6F80               	movwf	efgtoa@i& (0+255),b
  3490   001D5A                     
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3493   001D5A  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3494   001D5E  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3495   001D62  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3496   001D66  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3497   001D6A                     
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3500   001D6A  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3501   001D6E  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3502   001D72  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3503   001D76  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3506   001D7A  EF3A  F00F         	goto	l4712
  3507   001D7E                     l4704:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3511   001D7E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3512   001D82  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3513   001D86  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3514   001D8A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3515   001D8E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3516   001D92  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3517   001D96  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3518   001D9A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3519   001D9E  EC9F  F018         	call	___fldiv	;wreg free
  3520   001DA2  C032  F04B         	movff	?___fldiv,floorf@x
  3521   001DA6  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3522   001DAA  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3523   001DAE  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3524   001DB2  ECDE  F01F         	call	_floorf	;wreg free
  3525   001DB6  C04B  F086         	movff	?_floorf,efgtoa@l
  3526   001DBA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3527   001DBE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3528   001DC2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3529                           
  3530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3531   001DC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3532   001DCA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3533   001DCE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3534   001DD2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3535   001DD6  ECED  F023         	call	___fltol	;wreg free
  3536   001DDA  C001  F074         	movff	?___fltol,efgtoa@d
  3537   001DDE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3538   001DE2                     
  3539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3540   001DE2  C082  F02A         	movff	efgtoa@h,___flsub@b
  3541   001DE6  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3542   001DEA  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3543   001DEE  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3544   001DF2  C086  F015         	movff	efgtoa@l,___flmul@a
  3545   001DF6  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3546   001DFA  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3547   001DFE  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3548   001E02  C091  F011         	movff	efgtoa@u,___flmul@b
  3549   001E06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3550   001E0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3551   001E0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3552   001E12  EC8A  F016         	call	___flmul	;wreg free
  3553   001E16  C011  F02E         	movff	?___flmul,___flsub@a
  3554   001E1A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3555   001E1E  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3556   001E22  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3557   001E26  EC40  F02C         	call	___flsub	;wreg free
  3558   001E2A  C02A  F082         	movff	?___flsub,efgtoa@h
  3559   001E2E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3560   001E32  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3561   001E36  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3562   001E3A                     
  3563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3564   001E3A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3565   001E3E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3566   001E42  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3567   001E46  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3568   001E4A  0E00               	movlw	0
  3569   001E4C  6E36               	movwf	___fldiv@a^0,c
  3570   001E4E  0E00               	movlw	0
  3571   001E50  6E37               	movwf	(___fldiv@a+1)^0,c
  3572   001E52  0E20               	movlw	32
  3573   001E54  6E38               	movwf	(___fldiv@a+2)^0,c
  3574   001E56  0E41               	movlw	65
  3575   001E58  6E39               	movwf	(___fldiv@a+3)^0,c
  3576   001E5A  EC9F  F018         	call	___fldiv	;wreg free
  3577   001E5E  C032  F091         	movff	?___fldiv,efgtoa@u
  3578   001E62  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3579   001E66  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3580   001E6A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3581   001E6E                     
  3582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3583   001E6E  0100               	movlb	0	; () banked
  3584   001E70  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3585   001E72  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3586   001E74                     l4712:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3590   001E74  5176               	movf	efgtoa@m& (0+255),w,b
  3591   001E76  5D80               	subwf	efgtoa@i& (0+255),w,b
  3592   001E78  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3593   001E7A  0A80               	xorlw	128
  3594   001E7C  6F67               	movwf	??_efgtoa& (0+255),b
  3595   001E7E  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3596   001E80  0A80               	xorlw	128
  3597   001E82  5967               	subwfb	??_efgtoa& (0+255),w,b
  3598   001E84  A0D8               	btfss	status,0,c
  3599   001E86  EF47  F00F         	goto	u4651
  3600   001E8A  EF49  F00F         	goto	u4650
  3601   001E8E                     u4651:
  3602   001E8E  EFBF  F00E         	goto	l4704
  3603   001E92                     u4650:
  3604   001E92                     
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3607   001E92  C091  F011         	movff	efgtoa@u,___flmul@b
  3608   001E96  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3609   001E9A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3610   001E9E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3611   001EA2  0E00               	movlw	0
  3612   001EA4  6E15               	movwf	___flmul@a^0,c
  3613   001EA6  0E00               	movlw	0
  3614   001EA8  6E16               	movwf	(___flmul@a+1)^0,c
  3615   001EAA  0EA0               	movlw	160
  3616   001EAC  6E17               	movwf	(___flmul@a+2)^0,c
  3617   001EAE  0E40               	movlw	64
  3618   001EB0  6E18               	movwf	(___flmul@a+3)^0,c
  3619   001EB2  EC8A  F016         	call	___flmul	;wreg free
  3620   001EB6  C011  F086         	movff	?___flmul,efgtoa@l
  3621   001EBA  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3622   001EBE  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3623   001EC2  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3624   001EC6                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3626   001EC6  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3627   001ECA  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3628   001ECE  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3629   001ED2  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3630   001ED6  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3631   001EDA  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3632   001EDE  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3633   001EE2  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3634   001EE6  EC70  F024         	call	___flge	;wreg free
  3635   001EEA  B0D8               	btfsc	status,0,c
  3636   001EEC  EF7A  F00F         	goto	u4661
  3637   001EF0  EF7C  F00F         	goto	u4660
  3638   001EF4                     u4661:
  3639   001EF4  EF87  F00F         	goto	l4720
  3640   001EF8                     u4660:
  3641   001EF8                     
  3642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3643   001EF8  0E00               	movlw	0
  3644   001EFA  0100               	movlb	0	; () banked
  3645   001EFC  6F86               	movwf	efgtoa@l& (0+255),b
  3646   001EFE  0E00               	movlw	0
  3647   001F00  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3648   001F02  0E00               	movlw	0
  3649   001F04  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3650   001F06  0E00               	movlw	0
  3651   001F08  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3654   001F0A  EFB0  F00F         	goto	l4726
  3655   001F0E                     l4720:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3658   001F0E  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3659   001F12  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3660   001F16  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3661   001F1A  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3662   001F1E  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3663   001F22  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3664   001F26  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3665   001F2A  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3666   001F2E  ECD6  F025         	call	___fleq	;wreg free
  3667   001F32  A0D8               	btfss	status,0,c
  3668   001F34  EF9E  F00F         	goto	u4671
  3669   001F38  EFA0  F00F         	goto	u4670
  3670   001F3C                     u4671:
  3671   001F3C  EFB0  F00F         	goto	l4726
  3672   001F40                     u4670:
  3673   001F40  0100               	movlb	0	; () banked
  3674   001F42  B174               	btfsc	efgtoa@d& (0+255),0,b
  3675   001F44  EFA6  F00F         	goto	u4681
  3676   001F48  EFA8  F00F         	goto	u4680
  3677   001F4C                     u4681:
  3678   001F4C  EFB0  F00F         	goto	l4726
  3679   001F50                     u4680:
  3680   001F50                     
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3683   001F50  0E00               	movlw	0
  3684   001F52  6F86               	movwf	efgtoa@l& (0+255),b
  3685   001F54  0E00               	movlw	0
  3686   001F56  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3687   001F58  0E00               	movlw	0
  3688   001F5A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3689   001F5C  0E00               	movlw	0
  3690   001F5E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3691   001F60                     l4726:
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3694   001F60  C08D  F001         	movff	efgtoa@g,___fladd@b
  3695   001F64  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3696   001F68  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3697   001F6C  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3698   001F70  C086  F005         	movff	efgtoa@l,___fladd@a
  3699   001F74  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3700   001F78  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3701   001F7C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3702   001F80  EC2A  F014         	call	___fladd	;wreg free
  3703   001F84  C001  F082         	movff	?___fladd,efgtoa@h
  3704   001F88  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3705   001F8C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3706   001F90  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3707   001F94                     
  3708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3709   001F94  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3710   001F98  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3711   001F9C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3712   001FA0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3713   001FA4  0E00               	movlw	0
  3714   001FA6  6E15               	movwf	___flmul@a^0,c
  3715   001FA8  0E00               	movlw	0
  3716   001FAA  6E16               	movwf	(___flmul@a+1)^0,c
  3717   001FAC  0E20               	movlw	32
  3718   001FAE  6E17               	movwf	(___flmul@a+2)^0,c
  3719   001FB0  0E41               	movlw	65
  3720   001FB2  6E18               	movwf	(___flmul@a+3)^0,c
  3721   001FB4  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3722   001FB8  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3723   001FBC  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3724   001FC0  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3725   001FC4  EC8A  F016         	call	___flmul	;wreg free
  3726   001FC8  C011  F02E         	movff	?___flmul,___flge@ff2
  3727   001FCC  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3728   001FD0  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3729   001FD4  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3730   001FD8  EC70  F024         	call	___flge	;wreg free
  3731   001FDC  A0D8               	btfss	status,0,c
  3732   001FDE  EFF3  F00F         	goto	u4691
  3733   001FE2  EFF5  F00F         	goto	u4690
  3734   001FE6                     u4691:
  3735   001FE6  EF1E  F010         	goto	l4738
  3736   001FEA                     u4690:
  3737   001FEA                     
  3738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3739   001FEA  0100               	movlb	0	; () banked
  3740   001FEC  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3741   001FEE  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3742   001FF0                     
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3745   001FF0  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3746   001FF4  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3747   001FF8  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3748   001FFC  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3749   002000  0E00               	movlw	0
  3750   002002  6E15               	movwf	___flmul@a^0,c
  3751   002004  0E00               	movlw	0
  3752   002006  6E16               	movwf	(___flmul@a+1)^0,c
  3753   002008  0E20               	movlw	32
  3754   00200A  6E17               	movwf	(___flmul@a+2)^0,c
  3755   00200C  0E41               	movlw	65
  3756   00200E  6E18               	movwf	(___flmul@a+3)^0,c
  3757   002010  EC8A  F016         	call	___flmul	;wreg free
  3758   002014  C011  F07C         	movff	?___flmul,efgtoa@ou
  3759   002018  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3760   00201C  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3761   002020  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3762   002024                     
  3763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3764   002024  0E66               	movlw	102
  3765   002026  0100               	movlb	0	; () banked
  3766   002028  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3767   00202A  A4D8               	btfss	status,2,c
  3768   00202C  EF1A  F010         	goto	u4701
  3769   002030  EF1C  F010         	goto	u4700
  3770   002034                     u4701:
  3771   002034  EF1E  F010         	goto	l4738
  3772   002038                     u4700:
  3773   002038                     
  3774                           ; BSR set to: 0
  3775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3776   002038  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3777   00203A  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3778   00203C                     l4738:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3781   00203C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3782   002040  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3783   002044  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3784   002048  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3785   00204C                     
  3786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3787   00204C  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3788   002050  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3789   002054                     
  3790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3791   002054  0E00               	movlw	0
  3792   002056  0100               	movlb	0	; () banked
  3793   002058  6F71               	movwf	efgtoa@pp& (0+255),b
  3794   00205A                     
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3797   00205A  0E00               	movlw	0
  3798   00205C  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3799   00205E  0E00               	movlw	0
  3800   002060  6F6D               	movwf	efgtoa@t& (0+255),b
  3801   002062                     
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3804   002062  0E00               	movlw	0
  3805   002064  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3806   002066  0E00               	movlw	0
  3807   002068  6F80               	movwf	efgtoa@i& (0+255),b
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3810   00206A  EF1C  F011         	goto	l4788
  3811   00206E                     l4748:
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3815   00206E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3816   002072  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3817   002076  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3818   00207A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3819   00207E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3820   002082  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3821   002086  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3822   00208A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3823   00208E  EC9F  F018         	call	___fldiv	;wreg free
  3824   002092  C032  F04B         	movff	?___fldiv,floorf@x
  3825   002096  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3826   00209A  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3827   00209E  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3828   0020A2  ECDE  F01F         	call	_floorf	;wreg free
  3829   0020A6  C04B  F086         	movff	?_floorf,efgtoa@l
  3830   0020AA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3831   0020AE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3832   0020B2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3833                           
  3834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3835   0020B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3836   0020BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3837   0020BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3838   0020C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3839   0020C6  ECED  F023         	call	___fltol	;wreg free
  3840   0020CA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3841   0020CC  EF73  F010         	goto	u4710
  3842   0020D0  5002               	movf	(?___fltol+1)^0,w,c
  3843   0020D2  E107               	bnz	u4711
  3844   0020D4  0E0A               	movlw	10
  3845   0020D6  5C01               	subwf	?___fltol^0,w,c
  3846   0020D8  B0D8               	btfsc	status,0,c
  3847   0020DA  EF71  F010         	goto	u4711
  3848   0020DE  EF73  F010         	goto	u4710
  3849   0020E2                     u4711:
  3850   0020E2  EF83  F010         	goto	l4752
  3851   0020E6                     u4710:
  3852   0020E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3853   0020EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3854   0020EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3855   0020F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3856   0020F6  ECED  F023         	call	___fltol	;wreg free
  3857   0020FA  C001  F074         	movff	?___fltol,efgtoa@d
  3858   0020FE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3859   002102  EF88  F010         	goto	l1422
  3860   002106                     l4752:
  3861   002106  0E00               	movlw	0
  3862   002108  0100               	movlb	0	; () banked
  3863   00210A  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3864   00210C  0E09               	movlw	9
  3865   00210E  6F74               	movwf	efgtoa@d& (0+255),b
  3866   002110                     l1422:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3869   002110  0100               	movlb	0	; () banked
  3870   002112  5171               	movf	efgtoa@pp& (0+255),w,b
  3871   002114  A4D8               	btfss	status,2,c
  3872   002116  EF8F  F010         	goto	u4721
  3873   00211A  EF91  F010         	goto	u4720
  3874   00211E                     u4721:
  3875   00211E  EFB9  F010         	goto	l4772
  3876   002122                     u4720:
  3877   002122                     
  3878                           ; BSR set to: 0
  3879   002122  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3880   002124  EF98  F010         	goto	u4730
  3881   002128  EF96  F010         	goto	u4731
  3882   00212C                     u4731:
  3883   00212C  EFB9  F010         	goto	l4772
  3884   002130                     u4730:
  3885   002130                     
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3888   002130  0E0E               	movlw	low _dbuf
  3889   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  3890   002134  6ED9               	movwf	fsr2l,c
  3891   002136  0E01               	movlw	high _dbuf
  3892   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3893   00213A  6EDA               	movwf	fsr2h,c
  3894   00213C  0E2E               	movlw	46
  3895   00213E  6EDF               	movwf	indf2,c
  3896   002140                     
  3897                           ; BSR set to: 0
  3898   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3899   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3900   002144                     
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3903   002144  077A               	decf	efgtoa@w& (0+255),f,b
  3904   002146  A0D8               	btfss	status,0,c
  3905   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3906   00214A                     
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3909   00214A  0E01               	movlw	1
  3910   00214C  6F71               	movwf	efgtoa@pp& (0+255),b
  3911   00214E  EFB9  F010         	goto	l4772
  3912   002152                     l4764:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3916   002152  0E0E               	movlw	low _dbuf
  3917   002154  258B               	addwf	efgtoa@n& (0+255),w,b
  3918   002156  6ED9               	movwf	fsr2l,c
  3919   002158  0E01               	movlw	high _dbuf
  3920   00215A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3921   00215C  6EDA               	movwf	fsr2h,c
  3922   00215E  0E30               	movlw	48
  3923   002160  6EDF               	movwf	indf2,c
  3924   002162                     
  3925                           ; BSR set to: 0
  3926   002162  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3927   002164  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3928   002166                     
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3931   002166  077A               	decf	efgtoa@w& (0+255),f,b
  3932   002168  A0D8               	btfss	status,0,c
  3933   00216A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3934   00216C                     
  3935                           ; BSR set to: 0
  3936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3937   00216C  076D               	decf	efgtoa@t& (0+255),f,b
  3938   00216E  A0D8               	btfss	status,0,c
  3939   002170  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3940   002172                     l4772:
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3944   002172  516D               	movf	efgtoa@t& (0+255),w,b
  3945   002174  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3946   002176  A4D8               	btfss	status,2,c
  3947   002178  EFC0  F010         	goto	u4741
  3948   00217C  EFC2  F010         	goto	u4740
  3949   002180                     u4741:
  3950   002180  EFA9  F010         	goto	l4764
  3951   002184                     u4740:
  3952   002184                     
  3953                           ; BSR set to: 0
  3954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3955   002184  0E0E               	movlw	low _dbuf
  3956   002186  258B               	addwf	efgtoa@n& (0+255),w,b
  3957   002188  6ED9               	movwf	fsr2l,c
  3958   00218A  0E01               	movlw	high _dbuf
  3959   00218C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3960   00218E  6EDA               	movwf	fsr2h,c
  3961   002190  5174               	movf	efgtoa@d& (0+255),w,b
  3962   002192  0F30               	addlw	48
  3963   002194  6EDF               	movwf	indf2,c
  3964   002196                     
  3965                           ; BSR set to: 0
  3966   002196  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3967   002198  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3968   00219A                     
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3971   00219A  077A               	decf	efgtoa@w& (0+255),f,b
  3972   00219C  A0D8               	btfss	status,0,c
  3973   00219E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3974   0021A0                     
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3977   0021A0  C082  F02A         	movff	efgtoa@h,___flsub@b
  3978   0021A4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3979   0021A8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3980   0021AC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3981   0021B0  C086  F015         	movff	efgtoa@l,___flmul@a
  3982   0021B4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3983   0021B8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3984   0021BC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3985   0021C0  C091  F011         	movff	efgtoa@u,___flmul@b
  3986   0021C4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3987   0021C8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3988   0021CC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3989   0021D0  EC8A  F016         	call	___flmul	;wreg free
  3990   0021D4  C011  F02E         	movff	?___flmul,___flsub@a
  3991   0021D8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3992   0021DC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3993   0021E0  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3994   0021E4  EC40  F02C         	call	___flsub	;wreg free
  3995   0021E8  C02A  F082         	movff	?___flsub,efgtoa@h
  3996   0021EC  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3997   0021F0  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3998   0021F4  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3999   0021F8                     
  4000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4001   0021F8  C091  F032         	movff	efgtoa@u,___fldiv@b
  4002   0021FC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4003   002200  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4004   002204  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4005   002208  0E00               	movlw	0
  4006   00220A  6E36               	movwf	___fldiv@a^0,c
  4007   00220C  0E00               	movlw	0
  4008   00220E  6E37               	movwf	(___fldiv@a+1)^0,c
  4009   002210  0E20               	movlw	32
  4010   002212  6E38               	movwf	(___fldiv@a+2)^0,c
  4011   002214  0E41               	movlw	65
  4012   002216  6E39               	movwf	(___fldiv@a+3)^0,c
  4013   002218  EC9F  F018         	call	___fldiv	;wreg free
  4014   00221C  C032  F091         	movff	?___fldiv,efgtoa@u
  4015   002220  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4016   002224  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4017   002228  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4018   00222C                     
  4019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4020   00222C  0100               	movlb	0	; () banked
  4021   00222E  0769               	decf	efgtoa@ne& (0+255),f,b
  4022   002230  A0D8               	btfss	status,0,c
  4023   002232  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4024   002234                     
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4027   002234  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4028   002236  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4029   002238                     l4788:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4033   002238  5176               	movf	efgtoa@m& (0+255),w,b
  4034   00223A  5D80               	subwf	efgtoa@i& (0+255),w,b
  4035   00223C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4036   00223E  0A80               	xorlw	128
  4037   002240  6F67               	movwf	??_efgtoa& (0+255),b
  4038   002242  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4039   002244  0A80               	xorlw	128
  4040   002246  5967               	subwfb	??_efgtoa& (0+255),w,b
  4041   002248  B0D8               	btfsc	status,0,c
  4042   00224A  EF29  F011         	goto	u4751
  4043   00224E  EF2B  F011         	goto	u4750
  4044   002252                     u4751:
  4045   002252  EF39  F011         	goto	l4792
  4046   002256                     u4750:
  4047   002256                     
  4048                           ; BSR set to: 0
  4049   002256  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4050   002258  EF37  F011         	goto	u4761
  4051   00225C  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4052   00225E  E109               	bnz	u4760
  4053   002260  0E4B               	movlw	75
  4054   002262  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4055   002264  A0D8               	btfss	status,0,c
  4056   002266  EF37  F011         	goto	u4761
  4057   00226A  EF39  F011         	goto	u4760
  4058   00226E                     u4761:
  4059   00226E  EF37  F010         	goto	l4748
  4060   002272                     u4760:
  4061   002272                     l4792:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4065   002272  0E00               	movlw	0
  4066   002274  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4067   002276  0E4F               	movlw	79
  4068   002278  6F80               	movwf	efgtoa@i& (0+255),b
  4069   00227A                     
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4072   00227A  0E0E               	movlw	low _dbuf
  4073   00227C  2580               	addwf	efgtoa@i& (0+255),w,b
  4074   00227E  6ED9               	movwf	fsr2l,c
  4075   002280  0E01               	movlw	high _dbuf
  4076   002282  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4077   002284  6EDA               	movwf	fsr2h,c
  4078   002286  0E00               	movlw	0
  4079   002288  6EDF               	movwf	indf2,c
  4080   00228A                     
  4081                           ; BSR set to: 0
  4082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4083   00228A  0E0E               	movlw	low _dbuf
  4084   00228C  6F67               	movwf	??_efgtoa& (0+255),b
  4085   00228E  0E01               	movlw	high _dbuf
  4086   002290  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4087   002292  518B               	movf	efgtoa@n& (0+255),w,b
  4088   002294  5F67               	subwf	??_efgtoa& (0+255),f,b
  4089   002296  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4090   002298  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4091   00229A  5180               	movf	efgtoa@i& (0+255),w,b
  4092   00229C  2567               	addwf	??_efgtoa& (0+255),w,b
  4093   00229E  6E01               	movwf	memcpy@d1^0,c
  4094   0022A0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4095   0022A2  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4096   0022A4  6E02               	movwf	(memcpy@d1+1)^0,c
  4097   0022A6  0E0E               	movlw	low _dbuf
  4098   0022A8  6E03               	movwf	memcpy@s1^0,c
  4099   0022AA  0E01               	movlw	high _dbuf
  4100   0022AC  6E04               	movwf	(memcpy@s1+1)^0,c
  4101   0022AE  C08B  F005         	movff	efgtoa@n,memcpy@n
  4102   0022B2  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4103   0022B6  EC52  F02B         	call	_memcpy	;wreg free
  4104   0022BA                     
  4105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4106   0022BA  0100               	movlb	0	; () banked
  4107   0022BC  518B               	movf	efgtoa@n& (0+255),w,b
  4108   0022BE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4109   0022C0  6F8B               	movwf	efgtoa@n& (0+255),b
  4110   0022C2  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4111   0022C4  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4112   0022C6  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4113   0022C8                     
  4114                           ; BSR set to: 0
  4115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4116   0022C8  518A               	movf	efgtoa@sign& (0+255),w,b
  4117   0022CA  A4D8               	btfss	status,2,c
  4118   0022CC  EF6A  F011         	goto	u4771
  4119   0022D0  EF6D  F011         	goto	u4770
  4120   0022D4                     u4771:
  4121   0022D4  0E01               	movlw	1
  4122   0022D6  EF6E  F011         	goto	u4780
  4123   0022DA                     u4770:
  4124   0022DA  0E00               	movlw	0
  4125   0022DC                     u4780:
  4126   0022DC  6F80               	movwf	efgtoa@i& (0+255),b
  4127   0022DE  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4128   0022E0                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4131   0022E0  518A               	movf	efgtoa@sign& (0+255),w,b
  4132   0022E2  B4D8               	btfsc	status,2,c
  4133   0022E4  EF76  F011         	goto	u4791
  4134   0022E8  EF78  F011         	goto	u4790
  4135   0022EC                     u4791:
  4136   0022EC  EF83  F011         	goto	l4806
  4137   0022F0                     u4790:
  4138   0022F0                     
  4139                           ; BSR set to: 0
  4140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4141   0022F0  078B               	decf	efgtoa@n& (0+255),f,b
  4142   0022F2  A0D8               	btfss	status,0,c
  4143   0022F4  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4144   0022F6  0E0E               	movlw	low _dbuf
  4145   0022F8  258B               	addwf	efgtoa@n& (0+255),w,b
  4146   0022FA  6ED9               	movwf	fsr2l,c
  4147   0022FC  0E01               	movlw	high _dbuf
  4148   0022FE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4149   002300  6EDA               	movwf	fsr2h,c
  4150   002302  C08A  FFDF         	movff	efgtoa@sign,indf2
  4151   002306                     l4806:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4155   002306  5180               	movf	efgtoa@i& (0+255),w,b
  4156   002308  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4157   00230A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4158   00230C  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4159   00230E                     
  4160                           ; BSR set to: 0
  4161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4162   00230E  C060  F011         	movff	efgtoa@fp,pad@fp
  4163   002312  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4164   002316  0E0E               	movlw	low _dbuf
  4165   002318  258B               	addwf	efgtoa@n& (0+255),w,b
  4166   00231A  6E13               	movwf	pad@buf^0,c
  4167   00231C  0E01               	movlw	high _dbuf
  4168   00231E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4169   002320  6E14               	movwf	(pad@buf+1)^0,c
  4170   002322  C07A  F015         	movff	efgtoa@w,pad@p
  4171   002326  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4172   00232A  ECDC  F027         	call	_pad	;wreg free
  4173   00232E                     l1389:
  4174   00232E  0012               	return		;funcret
  4175   002330                     __end_of_efgtoa:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _strcpy *****************
  4179 ;; Defined at:
  4180 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4183 ;;		 -> dbuf(80), 
  4184 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4185 ;;		 -> STR_6(4), STR_3(4), 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  d               2    6[COMRAM] PTR unsigned char 
  4188 ;;		 -> dbuf(80), 
  4189 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4190 ;;		 -> STR_6(4), STR_3(4), 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  2    0[COMRAM] PTR unsigned char 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4201 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;Total ram usage:        8 bytes
  4205 ;; Hardware stack levels used: 1
  4206 ;; Hardware stack levels required when called: 1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_efgtoa
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text5
  4215   0058C6                     __ptext5:
  4216                           	callstack 0
  4217   0058C6                     _strcpy:
  4218                           	callstack 25
  4219   0058C6  C003  F005         	movff	strcpy@src,strcpy@s
  4220   0058CA  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4221   0058CE  C001  F007         	movff	strcpy@dest,strcpy@d
  4222   0058D2  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4223   0058D6                     l4418:
  4224   0058D6  C005  FFF6         	movff	strcpy@s,tblptrl
  4225   0058DA  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4226   0058DE  4A05               	infsnz	strcpy@s^0,f,c
  4227   0058E0  2A06               	incf	(strcpy@s+1)^0,f,c
  4228   0058E2                     	if	0	;tblptru may be non-zero
  4229   0058E2                     	endif
  4230   0058E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4231   0058E2  0E00               	movlw	low (__mediumconst shr (0+16))
  4232   0058E4  6EF8               	movwf	tblptru,c
  4233   0058E6                     	endif
  4234   0058E6  C007  FFD9         	movff	strcpy@d,fsr2l
  4235   0058EA  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4236   0058EE  4A07               	infsnz	strcpy@d^0,f,c
  4237   0058F0  2A08               	incf	(strcpy@d+1)^0,f,c
  4238   0058F2  0008               	tblrd		*
  4239   0058F4  CFF5 FFDF          	movff	tablat,indf2
  4240   0058F8  50DF               	movf	indf2,w,c
  4241   0058FA  A4D8               	btfss	status,2,c
  4242   0058FC  EF82  F02C         	goto	u4131
  4243   005900  EF84  F02C         	goto	u4130
  4244   005904                     u4131:
  4245   005904  EF6B  F02C         	goto	l4418
  4246   005908                     u4130:
  4247   005908  0012               	return		;funcret
  4248   00590A                     __end_of_strcpy:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _memcpy *****************
  4252 ;; Defined at:
  4253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  d1              2    0[COMRAM] PTR void 
  4256 ;;		 -> dbuf(80), 
  4257 ;;  s1              2    2[COMRAM] PTR const void 
  4258 ;;		 -> dbuf(80), 
  4259 ;;  n               2    4[COMRAM] unsigned int 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4262 ;;		 -> dbuf(80), 
  4263 ;;  d               2    6[COMRAM] PTR unsigned char 
  4264 ;;		 -> dbuf(80), 
  4265 ;;  tmp             1   10[COMRAM] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2    0[COMRAM] PTR void 
  4268 ;; Registers used:
  4269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4275 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;Total ram usage:       11 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_efgtoa
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text6
  4290   0056A4                     __ptext6:
  4291                           	callstack 0
  4292   0056A4                     _memcpy:
  4293                           	callstack 25
  4294   0056A4  C003  F009         	movff	memcpy@s1,memcpy@s
  4295   0056A8  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4296   0056AC  C001  F007         	movff	memcpy@d1,memcpy@d
  4297   0056B0  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4298   0056B4  EF6C  F02B         	goto	l4462
  4299   0056B8                     l4454:
  4300   0056B8  C009  FFD9         	movff	memcpy@s,fsr2l
  4301   0056BC  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4302   0056C0  50DF               	movf	indf2,w,c
  4303   0056C2  6E0B               	movwf	memcpy@tmp^0,c
  4304   0056C4  4A09               	infsnz	memcpy@s^0,f,c
  4305   0056C6  2A0A               	incf	(memcpy@s+1)^0,f,c
  4306   0056C8  C007  FFD9         	movff	memcpy@d,fsr2l
  4307   0056CC  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4308   0056D0  C00B  FFDF         	movff	memcpy@tmp,indf2
  4309   0056D4  4A07               	infsnz	memcpy@d^0,f,c
  4310   0056D6  2A08               	incf	(memcpy@d+1)^0,f,c
  4311   0056D8                     l4462:
  4312   0056D8  0605               	decf	memcpy@n^0,f,c
  4313   0056DA  A0D8               	btfss	status,0,c
  4314   0056DC  0606               	decf	(memcpy@n+1)^0,f,c
  4315   0056DE  2805               	incf	memcpy@n^0,w,c
  4316   0056E0  E106               	bnz	u4251
  4317   0056E2  2806               	incf	(memcpy@n+1)^0,w,c
  4318   0056E4  A4D8               	btfss	status,2,c
  4319   0056E6  EF77  F02B         	goto	u4251
  4320   0056EA  EF79  F02B         	goto	u4250
  4321   0056EE                     u4251:
  4322   0056EE  EF5C  F02B         	goto	l4454
  4323   0056F2                     u4250:
  4324   0056F2  0012               	return		;funcret
  4325   0056F4                     __end_of_memcpy:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function _labs *****************
  4329 ;; Defined at:
  4330 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  a               4    0[COMRAM] long 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  4    0[COMRAM] long 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;Total ram usage:        8 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 1
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_efgtoa
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text7
  4359   00511C                     __ptext7:
  4360                           	callstack 0
  4361   00511C                     _labs:
  4362                           	callstack 25
  4363   00511C  BE04               	btfsc	(labs@a+3)^0,7,c
  4364   00511E  EF9D  F028         	goto	u4140
  4365   005122  5004               	movf	(labs@a+3)^0,w,c
  4366   005124  1003               	iorwf	(labs@a+2)^0,w,c
  4367   005126  1002               	iorwf	(labs@a+1)^0,w,c
  4368   005128  E106               	bnz	u4141
  4369   00512A  0401               	decf	labs@a^0,w,c
  4370   00512C  B0D8               	btfsc	status,0,c
  4371   00512E  EF9B  F028         	goto	u4141
  4372   005132  EF9D  F028         	goto	u4140
  4373   005136                     u4141:
  4374   005136  EFB8  F028         	goto	l1494
  4375   00513A                     u4140:
  4376   00513A  C001  F005         	movff	labs@a,??_labs
  4377   00513E  C002  F006         	movff	labs@a+1,??_labs+1
  4378   005142  C003  F007         	movff	labs@a+2,??_labs+2
  4379   005146  C004  F008         	movff	labs@a+3,??_labs+3
  4380   00514A  1E05               	comf	??_labs^0,f,c
  4381   00514C  1E06               	comf	(??_labs+1)^0,f,c
  4382   00514E  1E07               	comf	(??_labs+2)^0,f,c
  4383   005150  1E08               	comf	(??_labs+3)^0,f,c
  4384   005152  2A05               	incf	??_labs^0,f,c
  4385   005154  0E00               	movlw	0
  4386   005156  2206               	addwfc	(??_labs+1)^0,f,c
  4387   005158  2207               	addwfc	(??_labs+2)^0,f,c
  4388   00515A  2208               	addwfc	(??_labs+3)^0,f,c
  4389   00515C  C005  F001         	movff	??_labs,?_labs
  4390   005160  C006  F002         	movff	??_labs+1,?_labs+1
  4391   005164  C007  F003         	movff	??_labs+2,?_labs+2
  4392   005168  C008  F004         	movff	??_labs+3,?_labs+3
  4393   00516C  EFC0  F028         	goto	l1497
  4394   005170                     l1494:
  4395   005170  C001  F001         	movff	labs@a,?_labs
  4396   005174  C002  F002         	movff	labs@a+1,?_labs+1
  4397   005178  C003  F003         	movff	labs@a+2,?_labs+2
  4398   00517C  C004  F004         	movff	labs@a+3,?_labs+3
  4399   005180                     l1497:
  4400   005180  0012               	return		;funcret
  4401   005182                     __end_of_labs:
  4402                           	callstack 0
  4403                           
  4404 ;; *************** function _floorf *****************
  4405 ;; Defined at:
  4406 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  x               4   74[COMRAM] float 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  u               4   90[COMRAM] struct .
  4411 ;;  m               4   84[COMRAM] unsigned long 
  4412 ;;  e               2   88[COMRAM] int 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  4   74[COMRAM] float 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;Total ram usage:       20 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; Hardware stack levels required when called: 1
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_efgtoa
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text8
  4437   003FBC                     __ptext8:
  4438                           	callstack 0
  4439   003FBC                     _floorf:
  4440                           	callstack 25
  4441   003FBC  C0E7  F05B         	movff	floorf@F526,floorf@u
  4442   003FC0  C0E8  F05C         	movff	floorf@F526+1,floorf@u+1
  4443   003FC4  C0E9  F05D         	movff	floorf@F526+2,floorf@u+2
  4444   003FC8  C0EA  F05E         	movff	floorf@F526+3,floorf@u+3
  4445   003FCC  C04B  F05B         	movff	floorf@x,floorf@u
  4446   003FD0  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4447   003FD4  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4448   003FD8  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4449   003FDC  0E81               	movlw	129
  4450   003FDE  6E4F               	movwf	??_floorf^0,c
  4451   003FE0  0EFF               	movlw	255
  4452   003FE2  6E50               	movwf	(??_floorf+1)^0,c
  4453   003FE4  C05B  F051         	movff	floorf@u,??_floorf+2
  4454   003FE8  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4455   003FEC  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4456   003FF0  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4457   003FF4  0E18               	movlw	24
  4458   003FF6  EF02  F020         	goto	u4150
  4459   003FFA                     u4155:
  4460   003FFA  90D8               	bcf	status,0,c
  4461   003FFC  3254               	rrcf	(??_floorf+5)^0,f,c
  4462   003FFE  3253               	rrcf	(??_floorf+4)^0,f,c
  4463   004000  3252               	rrcf	(??_floorf+3)^0,f,c
  4464   004002  3251               	rrcf	(??_floorf+2)^0,f,c
  4465   004004                     u4150:
  4466   004004  2EE8               	decfsz	wreg,f,c
  4467   004006  EFFD  F01F         	goto	u4155
  4468   00400A  5051               	movf	(??_floorf+2)^0,w,c
  4469   00400C  244F               	addwf	??_floorf^0,w,c
  4470   00400E  6E59               	movwf	floorf@e^0,c
  4471   004010  0E00               	movlw	0
  4472   004012  2050               	addwfc	(??_floorf+1)^0,w,c
  4473   004014  6E5A               	movwf	(floorf@e+1)^0,c
  4474   004016  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4475   004018  EF17  F020         	goto	u4161
  4476   00401C  505A               	movf	(floorf@e+1)^0,w,c
  4477   00401E  E109               	bnz	u4160
  4478   004020  0E17               	movlw	23
  4479   004022  5C59               	subwf	floorf@e^0,w,c
  4480   004024  A0D8               	btfss	status,0,c
  4481   004026  EF17  F020         	goto	u4161
  4482   00402A  EF19  F020         	goto	u4160
  4483   00402E                     u4161:
  4484   00402E  EF23  F020         	goto	l4430
  4485   004032                     u4160:
  4486   004032                     l4428:
  4487   004032  C04B  F04B         	movff	floorf@x,?_floorf
  4488   004036  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4489   00403A  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4490   00403E  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4491   004042  EFE6  F020         	goto	l1483
  4492   004046                     l4430:
  4493   004046  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4494   004048  EF28  F020         	goto	u4171
  4495   00404C  EF2A  F020         	goto	u4170
  4496   004050                     u4171:
  4497   004050  EF9A  F020         	goto	l4440
  4498   004054                     u4170:
  4499   004054  C059  F04F         	movff	floorf@e,??_floorf
  4500   004058  0EFF               	movlw	255
  4501   00405A  6E50               	movwf	(??_floorf+1)^0,c
  4502   00405C  0EFF               	movlw	255
  4503   00405E  6E51               	movwf	(??_floorf+2)^0,c
  4504   004060  0E7F               	movlw	127
  4505   004062  6E52               	movwf	(??_floorf+3)^0,c
  4506   004064  0E00               	movlw	0
  4507   004066  6E53               	movwf	(??_floorf+4)^0,c
  4508   004068                     u4185:
  4509   004068  664F               	tstfsz	??_floorf^0,c
  4510   00406A  EF39  F020         	goto	u4186
  4511   00406E  EF41  F020         	goto	u4187
  4512   004072                     u4186:
  4513   004072  3453               	rlcf	(??_floorf+4)^0,w,c
  4514   004074  3253               	rrcf	(??_floorf+4)^0,f,c
  4515   004076  3252               	rrcf	(??_floorf+3)^0,f,c
  4516   004078  3251               	rrcf	(??_floorf+2)^0,f,c
  4517   00407A  3250               	rrcf	(??_floorf+1)^0,f,c
  4518   00407C  2E4F               	decfsz	??_floorf^0,f,c
  4519   00407E  EF34  F020         	goto	u4185
  4520   004082                     u4187:
  4521   004082  C050  F055         	movff	??_floorf+1,floorf@m
  4522   004086  C051  F056         	movff	??_floorf+2,floorf@m+1
  4523   00408A  C052  F057         	movff	??_floorf+3,floorf@m+2
  4524   00408E  C053  F058         	movff	??_floorf+4,floorf@m+3
  4525   004092  5055               	movf	floorf@m^0,w,c
  4526   004094  145B               	andwf	floorf@u^0,w,c
  4527   004096  6E4F               	movwf	??_floorf^0,c
  4528   004098  5056               	movf	(floorf@m+1)^0,w,c
  4529   00409A  145C               	andwf	(floorf@u+1)^0,w,c
  4530   00409C  6E50               	movwf	(??_floorf+1)^0,c
  4531   00409E  5057               	movf	(floorf@m+2)^0,w,c
  4532   0040A0  145D               	andwf	(floorf@u+2)^0,w,c
  4533   0040A2  6E51               	movwf	(??_floorf+2)^0,c
  4534   0040A4  5058               	movf	(floorf@m+3)^0,w,c
  4535   0040A6  145E               	andwf	(floorf@u+3)^0,w,c
  4536   0040A8  6E52               	movwf	(??_floorf+3)^0,c
  4537   0040AA  504F               	movf	??_floorf^0,w,c
  4538   0040AC  1050               	iorwf	(??_floorf+1)^0,w,c
  4539   0040AE  1051               	iorwf	(??_floorf+2)^0,w,c
  4540   0040B0  1052               	iorwf	(??_floorf+3)^0,w,c
  4541   0040B2  A4D8               	btfss	status,2,c
  4542   0040B4  EF5E  F020         	goto	u4191
  4543   0040B8  EF60  F020         	goto	u4190
  4544   0040BC                     u4191:
  4545   0040BC  EF62  F020         	goto	l4436
  4546   0040C0                     u4190:
  4547   0040C0  EF19  F020         	goto	l4428
  4548   0040C4                     l4436:
  4549   0040C4  C05B  F04F         	movff	floorf@u,??_floorf
  4550   0040C8  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4551   0040CC  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4552   0040D0  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4553   0040D4  0E20               	movlw	32
  4554   0040D6  EF72  F020         	goto	u4200
  4555   0040DA                     u4205:
  4556   0040DA  90D8               	bcf	status,0,c
  4557   0040DC  3252               	rrcf	(??_floorf+3)^0,f,c
  4558   0040DE  3251               	rrcf	(??_floorf+2)^0,f,c
  4559   0040E0  3250               	rrcf	(??_floorf+1)^0,f,c
  4560   0040E2  324F               	rrcf	??_floorf^0,f,c
  4561   0040E4                     u4200:
  4562   0040E4  2EE8               	decfsz	wreg,f,c
  4563   0040E6  EF6D  F020         	goto	u4205
  4564   0040EA  504F               	movf	??_floorf^0,w,c
  4565   0040EC  1050               	iorwf	(??_floorf+1)^0,w,c
  4566   0040EE  1051               	iorwf	(??_floorf+2)^0,w,c
  4567   0040F0  1052               	iorwf	(??_floorf+3)^0,w,c
  4568   0040F2  B4D8               	btfsc	status,2,c
  4569   0040F4  EF7E  F020         	goto	u4211
  4570   0040F8  EF80  F020         	goto	u4210
  4571   0040FC                     u4211:
  4572   0040FC  EF88  F020         	goto	l1486
  4573   004100                     u4210:
  4574   004100  5055               	movf	floorf@m^0,w,c
  4575   004102  265B               	addwf	floorf@u^0,f,c
  4576   004104  5056               	movf	(floorf@m+1)^0,w,c
  4577   004106  225C               	addwfc	(floorf@u+1)^0,f,c
  4578   004108  5057               	movf	(floorf@m+2)^0,w,c
  4579   00410A  225D               	addwfc	(floorf@u+2)^0,f,c
  4580   00410C  5058               	movf	(floorf@m+3)^0,w,c
  4581   00410E  225E               	addwfc	(floorf@u+3)^0,f,c
  4582   004110                     l1486:
  4583   004110  1C55               	comf	floorf@m^0,w,c
  4584   004112  6E4F               	movwf	??_floorf^0,c
  4585   004114  1C56               	comf	(floorf@m+1)^0,w,c
  4586   004116  6E50               	movwf	(??_floorf+1)^0,c
  4587   004118  1C57               	comf	(floorf@m+2)^0,w,c
  4588   00411A  6E51               	movwf	(??_floorf+2)^0,c
  4589   00411C  1C58               	comf	(floorf@m+3)^0,w,c
  4590   00411E  6E52               	movwf	(??_floorf+3)^0,c
  4591   004120  504F               	movf	??_floorf^0,w,c
  4592   004122  165B               	andwf	floorf@u^0,f,c
  4593   004124  5050               	movf	(??_floorf+1)^0,w,c
  4594   004126  165C               	andwf	(floorf@u+1)^0,f,c
  4595   004128  5051               	movf	(??_floorf+2)^0,w,c
  4596   00412A  165D               	andwf	(floorf@u+2)^0,f,c
  4597   00412C  5052               	movf	(??_floorf+3)^0,w,c
  4598   00412E  165E               	andwf	(floorf@u+3)^0,f,c
  4599   004130  EFDE  F020         	goto	l4448
  4600   004134                     l4440:
  4601   004134  C05B  F04F         	movff	floorf@u,??_floorf
  4602   004138  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4603   00413C  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4604   004140  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4605   004144  0E20               	movlw	32
  4606   004146  EFAA  F020         	goto	u4220
  4607   00414A                     u4225:
  4608   00414A  90D8               	bcf	status,0,c
  4609   00414C  3252               	rrcf	(??_floorf+3)^0,f,c
  4610   00414E  3251               	rrcf	(??_floorf+2)^0,f,c
  4611   004150  3250               	rrcf	(??_floorf+1)^0,f,c
  4612   004152  324F               	rrcf	??_floorf^0,f,c
  4613   004154                     u4220:
  4614   004154  2EE8               	decfsz	wreg,f,c
  4615   004156  EFA5  F020         	goto	u4225
  4616   00415A  504F               	movf	??_floorf^0,w,c
  4617   00415C  1050               	iorwf	(??_floorf+1)^0,w,c
  4618   00415E  1051               	iorwf	(??_floorf+2)^0,w,c
  4619   004160  1052               	iorwf	(??_floorf+3)^0,w,c
  4620   004162  A4D8               	btfss	status,2,c
  4621   004164  EFB6  F020         	goto	u4231
  4622   004168  EFB8  F020         	goto	u4230
  4623   00416C                     u4231:
  4624   00416C  EFC2  F020         	goto	l4444
  4625   004170                     u4230:
  4626   004170  0E00               	movlw	0
  4627   004172  6E5B               	movwf	floorf@u^0,c
  4628   004174  0E00               	movlw	0
  4629   004176  6E5C               	movwf	(floorf@u+1)^0,c
  4630   004178  0E00               	movlw	0
  4631   00417A  6E5D               	movwf	(floorf@u+2)^0,c
  4632   00417C  0E00               	movlw	0
  4633   00417E  6E5E               	movwf	(floorf@u+3)^0,c
  4634   004180  EFDE  F020         	goto	l4448
  4635   004184                     l4444:
  4636   004184  90D8               	bcf	status,0,c
  4637   004186  345B               	rlcf	floorf@u^0,w,c
  4638   004188  6E4F               	movwf	??_floorf^0,c
  4639   00418A  345C               	rlcf	(floorf@u+1)^0,w,c
  4640   00418C  6E50               	movwf	(??_floorf+1)^0,c
  4641   00418E  345D               	rlcf	(floorf@u+2)^0,w,c
  4642   004190  6E51               	movwf	(??_floorf+2)^0,c
  4643   004192  345E               	rlcf	(floorf@u+3)^0,w,c
  4644   004194  6E52               	movwf	(??_floorf+3)^0,c
  4645   004196  504F               	movf	??_floorf^0,w,c
  4646   004198  1050               	iorwf	(??_floorf+1)^0,w,c
  4647   00419A  1051               	iorwf	(??_floorf+2)^0,w,c
  4648   00419C  1052               	iorwf	(??_floorf+3)^0,w,c
  4649   00419E  B4D8               	btfsc	status,2,c
  4650   0041A0  EFD4  F020         	goto	u4241
  4651   0041A4  EFD6  F020         	goto	u4240
  4652   0041A8                     u4241:
  4653   0041A8  EFDE  F020         	goto	l4448
  4654   0041AC                     u4240:
  4655   0041AC  0E00               	movlw	0
  4656   0041AE  6E5B               	movwf	floorf@u^0,c
  4657   0041B0  0E00               	movlw	0
  4658   0041B2  6E5C               	movwf	(floorf@u+1)^0,c
  4659   0041B4  0E80               	movlw	128
  4660   0041B6  6E5D               	movwf	(floorf@u+2)^0,c
  4661   0041B8  0EBF               	movlw	191
  4662   0041BA  6E5E               	movwf	(floorf@u+3)^0,c
  4663   0041BC                     l4448:
  4664   0041BC  C05B  F04B         	movff	floorf@u,?_floorf
  4665   0041C0  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4666   0041C4  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4667   0041C8  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4668   0041CC                     l1483:
  4669   0041CC  0012               	return		;funcret
  4670   0041CE                     __end_of_floorf:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function ___fpclassifyf *****************
  4674 ;; Defined at:
  4675 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  x               4    0[COMRAM] float 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  u               4   10[COMRAM] struct .
  4680 ;;  e               2    8[COMRAM] int 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  2    0[COMRAM] int 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;Total ram usage:       14 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_efgtoa
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text9
  4705   0049E4                     __ptext9:
  4706                           	callstack 0
  4707   0049E4                     ___fpclassifyf:
  4708                           	callstack 25
  4709   0049E4  C0EB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4710   0049E8  C0EC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4711   0049EC  C0ED  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4712   0049F0  C0EE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4713   0049F4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4714   0049F8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4715   0049FC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4716   004A00  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4717   004A04  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4718   004A08  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4719   004A0C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4720   004A10  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4721   004A14  0E18               	movlw	24
  4722   004A16  EF12  F025         	goto	u4060
  4723   004A1A                     u4065:
  4724   004A1A  90D8               	bcf	status,0,c
  4725   004A1C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4726   004A1E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4727   004A20  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4728   004A22  3205               	rrcf	??___fpclassifyf^0,f,c
  4729   004A24                     u4060:
  4730   004A24  2EE8               	decfsz	wreg,f,c
  4731   004A26  EF0D  F025         	goto	u4065
  4732   004A2A  5005               	movf	??___fpclassifyf^0,w,c
  4733   004A2C  6E09               	movwf	___fpclassifyf@e^0,c
  4734   004A2E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4735   004A30  5009               	movf	___fpclassifyf@e^0,w,c
  4736   004A32  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4737   004A34  A4D8               	btfss	status,2,c
  4738   004A36  EF1F  F025         	goto	u4071
  4739   004A3A  EF21  F025         	goto	u4070
  4740   004A3E                     u4071:
  4741   004A3E  EF41  F025         	goto	l4406
  4742   004A42                     u4070:
  4743   004A42  90D8               	bcf	status,0,c
  4744   004A44  340B               	rlcf	___fpclassifyf@u^0,w,c
  4745   004A46  6E05               	movwf	??___fpclassifyf^0,c
  4746   004A48  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4747   004A4A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4748   004A4C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4749   004A4E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4750   004A50  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4751   004A52  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4752   004A54  5005               	movf	??___fpclassifyf^0,w,c
  4753   004A56  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4754   004A58  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4755   004A5A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4756   004A5C  A4D8               	btfss	status,2,c
  4757   004A5E  EF33  F025         	goto	u4081
  4758   004A62  EF35  F025         	goto	u4080
  4759   004A66                     u4081:
  4760   004A66  EF3B  F025         	goto	l4402
  4761   004A6A                     u4080:
  4762   004A6A  0E00               	movlw	0
  4763   004A6C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4764   004A6E  0E02               	movlw	2
  4765   004A70  6E01               	movwf	?___fpclassifyf^0,c
  4766   004A72  EF70  F025         	goto	l1469
  4767   004A76                     l4402:
  4768   004A76  0E00               	movlw	0
  4769   004A78  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4770   004A7A  0E03               	movlw	3
  4771   004A7C  6E01               	movwf	?___fpclassifyf^0,c
  4772   004A7E  EF70  F025         	goto	l1469
  4773   004A82                     l4406:
  4774   004A82  2809               	incf	___fpclassifyf@e^0,w,c
  4775   004A84  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4776   004A86  A4D8               	btfss	status,2,c
  4777   004A88  EF48  F025         	goto	u4091
  4778   004A8C  EF4A  F025         	goto	u4090
  4779   004A90                     u4091:
  4780   004A90  EF6C  F025         	goto	l4412
  4781   004A94                     u4090:
  4782   004A94  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4783   004A98  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4784   004A9C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4785   004AA0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4786   004AA4  0E09               	movlw	9
  4787   004AA6                     u4105:
  4788   004AA6  90D8               	bcf	status,0,c
  4789   004AA8  3605               	rlcf	??___fpclassifyf^0,f,c
  4790   004AAA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4791   004AAC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4792   004AAE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4793   004AB0  2EE8               	decfsz	wreg,f,c
  4794   004AB2  EF53  F025         	goto	u4105
  4795   004AB6  5005               	movf	??___fpclassifyf^0,w,c
  4796   004AB8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4797   004ABA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4798   004ABC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4799   004ABE  B4D8               	btfsc	status,2,c
  4800   004AC0  EF64  F025         	goto	u4111
  4801   004AC4  EF67  F025         	goto	u4110
  4802   004AC8                     u4111:
  4803   004AC8  0E01               	movlw	1
  4804   004ACA  EF68  F025         	goto	u4120
  4805   004ACE                     u4110:
  4806   004ACE  0E00               	movlw	0
  4807   004AD0                     u4120:
  4808   004AD0  6E01               	movwf	?___fpclassifyf^0,c
  4809   004AD2  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4810   004AD4  EF70  F025         	goto	l1469
  4811   004AD8                     l4412:
  4812   004AD8  0E00               	movlw	0
  4813   004ADA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4814   004ADC  0E04               	movlw	4
  4815   004ADE  6E01               	movwf	?___fpclassifyf^0,c
  4816   004AE0                     l1469:
  4817   004AE0  0012               	return		;funcret
  4818   004AE2                     __end_of___fpclassifyf:
  4819                           	callstack 0
  4820                           
  4821 ;; *************** function ___fltol *****************
  4822 ;; Defined at:
  4823 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  f1              4    0[COMRAM] int 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  exp1            1    9[COMRAM] unsigned char 
  4828 ;;  sign1           1    8[COMRAM] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  4    0[COMRAM] long 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4841 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;Total ram usage:       10 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_efgtoa
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text10
  4853   0047DA                     __ptext10:
  4854                           	callstack 0
  4855   0047DA                     ___fltol:
  4856                           	callstack 25
  4857   0047DA  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4858   0047DC  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4859   0047DE  6E0A               	movwf	___fltol@exp1^0,c
  4860   0047E0  500A               	movf	___fltol@exp1^0,w,c
  4861   0047E2  A4D8               	btfss	status,2,c
  4862   0047E4  EFF6  F023         	goto	u3961
  4863   0047E8  EFF8  F023         	goto	u3960
  4864   0047EC                     u3961:
  4865   0047EC  EF02  F024         	goto	l4338
  4866   0047F0                     u3960:
  4867   0047F0                     l4334:
  4868   0047F0  0E00               	movlw	0
  4869   0047F2  6E01               	movwf	?___fltol^0,c
  4870   0047F4  0E00               	movlw	0
  4871   0047F6  6E02               	movwf	(?___fltol+1)^0,c
  4872   0047F8  0E00               	movlw	0
  4873   0047FA  6E03               	movwf	(?___fltol+2)^0,c
  4874   0047FC  0E00               	movlw	0
  4875   0047FE  6E04               	movwf	(?___fltol+3)^0,c
  4876   004800  EF6F  F024         	goto	l942
  4877   004804                     l4338:
  4878   004804  C001  F005         	movff	___fltol@f1,??___fltol
  4879   004808  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4880   00480C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4881   004810  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4882   004814  0E20               	movlw	32
  4883   004816  EF12  F024         	goto	u3970
  4884   00481A                     u3975:
  4885   00481A  90D8               	bcf	status,0,c
  4886   00481C  3208               	rrcf	(??___fltol+3)^0,f,c
  4887   00481E  3207               	rrcf	(??___fltol+2)^0,f,c
  4888   004820  3206               	rrcf	(??___fltol+1)^0,f,c
  4889   004822  3205               	rrcf	??___fltol^0,f,c
  4890   004824                     u3970:
  4891   004824  2EE8               	decfsz	wreg,f,c
  4892   004826  EF0D  F024         	goto	u3975
  4893   00482A  5005               	movf	??___fltol^0,w,c
  4894   00482C  6E09               	movwf	___fltol@sign1^0,c
  4895   00482E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4896   004830  0EFF               	movlw	255
  4897   004832  1601               	andwf	___fltol@f1^0,f,c
  4898   004834  0EFF               	movlw	255
  4899   004836  1602               	andwf	(___fltol@f1+1)^0,f,c
  4900   004838  0EFF               	movlw	255
  4901   00483A  1603               	andwf	(___fltol@f1+2)^0,f,c
  4902   00483C  0E00               	movlw	0
  4903   00483E  1604               	andwf	(___fltol@f1+3)^0,f,c
  4904   004840  0E96               	movlw	150
  4905   004842  5E0A               	subwf	___fltol@exp1^0,f,c
  4906   004844  BE0A               	btfsc	___fltol@exp1^0,7,c
  4907   004846  EF29  F024         	goto	u3980
  4908   00484A  EF27  F024         	goto	u3981
  4909   00484E                     u3981:
  4910   00484E  EF3F  F024         	goto	l4358
  4911   004852                     u3980:
  4912   004852  500A               	movf	___fltol@exp1^0,w,c
  4913   004854  0A80               	xorlw	128
  4914   004856  0F97               	addlw	151
  4915   004858  B0D8               	btfsc	status,0,c
  4916   00485A  EF31  F024         	goto	u3991
  4917   00485E  EF33  F024         	goto	u3990
  4918   004862                     u3991:
  4919   004862  EF35  F024         	goto	l4354
  4920   004866                     u3990:
  4921   004866  EFF8  F023         	goto	l4334
  4922   00486A                     l4354:
  4923   00486A  90D8               	bcf	status,0,c
  4924   00486C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4925   00486E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4926   004870  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4927   004872  3201               	rrcf	___fltol@f1^0,f,c
  4928   004874  3E0A               	incfsz	___fltol@exp1^0,f,c
  4929   004876  EF35  F024         	goto	l4354
  4930   00487A  EF57  F024         	goto	l4368
  4931   00487E                     l4358:
  4932   00487E  0E1F               	movlw	31
  4933   004880  640A               	cpfsgt	___fltol@exp1^0,c
  4934   004882  EF45  F024         	goto	u4001
  4935   004886  EF47  F024         	goto	u4000
  4936   00488A                     u4001:
  4937   00488A  EF4F  F024         	goto	l4366
  4938   00488E                     u4000:
  4939   00488E  EFF8  F023         	goto	l4334
  4940   004892                     l4364:
  4941   004892  90D8               	bcf	status,0,c
  4942   004894  3601               	rlcf	___fltol@f1^0,f,c
  4943   004896  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4944   004898  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4945   00489A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4946   00489C  060A               	decf	___fltol@exp1^0,f,c
  4947   00489E                     l4366:
  4948   00489E  500A               	movf	___fltol@exp1^0,w,c
  4949   0048A0  A4D8               	btfss	status,2,c
  4950   0048A2  EF55  F024         	goto	u4011
  4951   0048A6  EF57  F024         	goto	u4010
  4952   0048AA                     u4011:
  4953   0048AA  EF49  F024         	goto	l4364
  4954   0048AE                     u4010:
  4955   0048AE                     l4368:
  4956   0048AE  5009               	movf	___fltol@sign1^0,w,c
  4957   0048B0  B4D8               	btfsc	status,2,c
  4958   0048B2  EF5D  F024         	goto	u4021
  4959   0048B6  EF5F  F024         	goto	u4020
  4960   0048BA                     u4021:
  4961   0048BA  EF67  F024         	goto	l4372
  4962   0048BE                     u4020:
  4963   0048BE  1E04               	comf	(___fltol@f1+3)^0,f,c
  4964   0048C0  1E03               	comf	(___fltol@f1+2)^0,f,c
  4965   0048C2  1E02               	comf	(___fltol@f1+1)^0,f,c
  4966   0048C4  6C01               	negf	___fltol@f1^0,c
  4967   0048C6  0E00               	movlw	0
  4968   0048C8  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4969   0048CA  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4970   0048CC  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4971   0048CE                     l4372:
  4972   0048CE  C001  F001         	movff	___fltol@f1,?___fltol
  4973   0048D2  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4974   0048D6  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4975   0048DA  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4976   0048DE                     l942:
  4977   0048DE  0012               	return		;funcret
  4978   0048E0                     __end_of___fltol:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function ___flneg *****************
  4982 ;; Defined at:
  4983 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  f1              4    0[COMRAM] long 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  4    0[COMRAM] long 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;Total ram usage:        4 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_efgtoa
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text11
  5012   005AC8                     __ptext11:
  5013                           	callstack 0
  5014   005AC8                     ___flneg:
  5015                           	callstack 25
  5016   005AC8  5001               	movf	___flneg@f1^0,w,c
  5017   005ACA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5018   005ACC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5019   005ACE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5020   005AD0  B4D8               	btfsc	status,2,c
  5021   005AD2  EF6D  F02D         	goto	u3951
  5022   005AD6  EF6F  F02D         	goto	u3950
  5023   005ADA                     u3951:
  5024   005ADA  EF77  F02D         	goto	l4328
  5025   005ADE                     u3950:
  5026   005ADE  0E00               	movlw	0
  5027   005AE0  1A01               	xorwf	___flneg@f1^0,f,c
  5028   005AE2  0E00               	movlw	0
  5029   005AE4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5030   005AE6  0E00               	movlw	0
  5031   005AE8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5032   005AEA  0E80               	movlw	128
  5033   005AEC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5034   005AEE                     l4328:
  5035   005AEE  C001  F001         	movff	___flneg@f1,?___flneg
  5036   005AF2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5037   005AF6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5038   005AFA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5039   005AFE  0012               	return		;funcret
  5040   005B00                     __end_of___flneg:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function _dtoa *****************
  5044 ;; Defined at:
  5045 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5048 ;;		 -> sprintf@f(11), 
  5049 ;;  d               8   29[COMRAM] long long 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  n               8   51[COMRAM] long long 
  5052 ;;  i               2   59[COMRAM] int 
  5053 ;;  w               2   49[COMRAM] int 
  5054 ;;  p               2   47[COMRAM] int 
  5055 ;;  s               1   61[COMRAM] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5065 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5066 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5067 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;Total ram usage:       35 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; Hardware stack levels required when called: 5
  5072 ;; This function calls:
  5073 ;;		___aodiv
  5074 ;;		___aomod
  5075 ;;		_abs
  5076 ;;		_pad
  5077 ;; This function is called by:
  5078 ;;		_vfpfcnvrt
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           	psect	text12
  5083   003B0C                     __ptext12:
  5084                           	callstack 0
  5085   003B0C                     _dtoa:
  5086                           	callstack 22
  5087   003B0C                     
  5088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
>>>>>>> Stashed changes
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
<<<<<<< Updated upstream
  5064   003AEE  C01E  F034         	movff	dtoa@d,dtoa@n
  5065   003AF2  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5066   003AF6  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5067   003AFA  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5068   003AFE  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5069   003B02  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5070   003B06  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5071   003B0A  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5072   003B0E                     
  5073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5074   003B0E  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5075   003B10  EF8C  F01D         	goto	u4371
  5076   003B14  EF8F  F01D         	goto	u4370
  5077   003B18                     u4371:
  5078   003B18  0E01               	movlw	1
  5079   003B1A  EF90  F01D         	goto	u4380
  5080   003B1E                     u4370:
  5081   003B1E  0E00               	movlw	0
  5082   003B20                     u4380:
  5083   003B20  6E3E               	movwf	dtoa@s^0,c
  5084   003B22                     
  5085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5086   003B22  503E               	movf	dtoa@s^0,w,c
  5087   003B24  B4D8               	btfsc	status,2,c
  5088   003B26  EF97  F01D         	goto	u4391
  5089   003B2A  EF99  F01D         	goto	u4390
  5090   003B2E                     u4391:
  5091   003B2E  EFA9  F01D         	goto	l4471
  5092   003B32                     u4390:
  5093   003B32                     
  5094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5095   003B32  1E3B               	comf	(dtoa@n+7)^0,f,c
  5096   003B34  1E3A               	comf	(dtoa@n+6)^0,f,c
  5097   003B36  1E39               	comf	(dtoa@n+5)^0,f,c
  5098   003B38  1E38               	comf	(dtoa@n+4)^0,f,c
  5099   003B3A  1E37               	comf	(dtoa@n+3)^0,f,c
  5100   003B3C  1E36               	comf	(dtoa@n+2)^0,f,c
  5101   003B3E  1E35               	comf	(dtoa@n+1)^0,f,c
  5102   003B40  6C34               	negf	dtoa@n^0,c
  5103   003B42  0E00               	movlw	0
  5104   003B44  2235               	addwfc	(dtoa@n+1)^0,f,c
  5105   003B46  2236               	addwfc	(dtoa@n+2)^0,f,c
  5106   003B48  2237               	addwfc	(dtoa@n+3)^0,f,c
  5107   003B4A  2238               	addwfc	(dtoa@n+4)^0,f,c
  5108   003B4C  2239               	addwfc	(dtoa@n+5)^0,f,c
  5109   003B4E  223A               	addwfc	(dtoa@n+6)^0,f,c
  5110   003B50  223B               	addwfc	(dtoa@n+7)^0,f,c
  5111   003B52                     l4471:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5114   003B52  0100               	movlb	0	; () banked
  5115   003B54  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5116   003B56  EFB7  F01D         	goto	u4400
  5117   003B5A  51EA               	movf	(_prec+1)& (0+255),w,b
  5118   003B5C  E106               	bnz	u4401
  5119   003B5E  05E9               	decf	_prec& (0+255),w,b
  5120   003B60  B0D8               	btfsc	status,0,c
  5121   003B62  EFB5  F01D         	goto	u4401
  5122   003B66  EFB7  F01D         	goto	u4400
  5123   003B6A                     u4401:
  5124   003B6A  EFBD  F01D         	goto	l1333
  5125   003B6E                     u4400:
  5126   003B6E                     
  5127                           ; BSR set to: 0
  5128   003B6E  0E00               	movlw	0
  5129   003B70  6E31               	movwf	(dtoa@p+1)^0,c
  5130   003B72  0E01               	movlw	1
  5131   003B74  6E30               	movwf	dtoa@p^0,c
  5132   003B76  EFC1  F01D         	goto	l1335
  5133   003B7A                     l1333:
  5134                           
  5135                           ; BSR set to: 0
  5136   003B7A  C0E9  F030         	movff	_prec,dtoa@p
  5137   003B7E  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5138   003B82                     l1335:
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5142   003B82  C0E7  F032         	movff	_width,dtoa@w
  5143   003B86  C0E8  F033         	movff	_width+1,dtoa@w+1
  5144   003B8A                     
  5145                           ; BSR set to: 0
  5146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5147   003B8A  503E               	movf	dtoa@s^0,w,c
  5148   003B8C  B4D8               	btfsc	status,2,c
  5149   003B8E  EFCB  F01D         	goto	u4411
  5150   003B92  EFCD  F01D         	goto	u4410
  5151   003B96                     u4411:
  5152   003B96  EFE4  F01D         	goto	l1336
  5153   003B9A                     u4410:
  5154   003B9A                     
  5155                           ; BSR set to: 0
  5156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5157   003B9A  0632               	decf	dtoa@w^0,f,c
  5158   003B9C  A0D8               	btfss	status,0,c
  5159   003B9E  0633               	decf	(dtoa@w+1)^0,f,c
  5160   003BA0                     
  5161                           ; BSR set to: 0
  5162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5163   003BA0  503E               	movf	dtoa@s^0,w,c
  5164   003BA2  A4D8               	btfss	status,2,c
  5165   003BA4  EFD6  F01D         	goto	u4421
  5166   003BA8  EFD8  F01D         	goto	u4420
  5167   003BAC                     u4421:
  5168   003BAC  EFDE  F01D         	goto	l4483
  5169   003BB0                     u4420:
  5170   003BB0                     
  5171                           ; BSR set to: 0
  5172   003BB0  0E00               	movlw	0
  5173   003BB2  6E2F               	movwf	(_dtoa$2387+1)^0,c
  5174   003BB4  0E2B               	movlw	43
  5175   003BB6  6E2E               	movwf	_dtoa$2387^0,c
  5176   003BB8  EFE2  F01D         	goto	l4485
  5177   003BBC                     l4483:
  5178                           
  5179                           ; BSR set to: 0
  5180   003BBC  0E00               	movlw	0
  5181   003BBE  6E2F               	movwf	(_dtoa$2387+1)^0,c
  5182   003BC0  0E2D               	movlw	45
  5183   003BC2  6E2E               	movwf	_dtoa$2387^0,c
  5184   003BC4                     l4485:
  5185                           
  5186                           ; BSR set to: 0
  5187   003BC4  C02E  F03E         	movff	_dtoa$2387,dtoa@s
  5188   003BC8                     l1336:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5192   003BC8  0E00               	movlw	0
  5193   003BCA  6E3D               	movwf	(dtoa@i+1)^0,c
  5194   003BCC  0E4F               	movlw	79
  5195   003BCE  6E3C               	movwf	dtoa@i^0,c
  5196   003BD0                     
  5197                           ; BSR set to: 0
  5198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5199   003BD0  0E00               	movlw	0
  5200   003BD2  0101               	movlb	1	; () banked
  5201   003BD4  6F65               	movwf	(_dbuf+79)& (0+255),b
  5202                           
  5203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5204   003BD6  EF69  F01E         	goto	l4499
  5205   003BDA                     l4489:
  5206                           
  5207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5208   003BDA  063C               	decf	dtoa@i^0,f,c
  5209   003BDC  A0D8               	btfss	status,0,c
  5210   003BDE  063D               	decf	(dtoa@i+1)^0,f,c
  5211   003BE0                     
  5212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5213   003BE0  0E16               	movlw	low _dbuf
  5214   003BE2  243C               	addwf	dtoa@i^0,w,c
  5215   003BE4  6ED9               	movwf	fsr2l,c
  5216   003BE6  0E01               	movlw	high _dbuf
  5217   003BE8  203D               	addwfc	(dtoa@i+1)^0,w,c
  5218   003BEA  6EDA               	movwf	fsr2h,c
  5219   003BEC  C034  F001         	movff	dtoa@n,___aomod@dividend
  5220   003BF0  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5221   003BF4  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5222   003BF8  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5223   003BFC  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5224   003C00  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5225   003C04  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5226   003C08  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5227   003C0C  0E0A               	movlw	10
  5228   003C0E  6E09               	movwf	___aomod@divisor^0,c
  5229   003C10  0E00               	movlw	0
  5230   003C12  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5231   003C14  0E00               	movlw	0
  5232   003C16  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5233   003C18  0E00               	movlw	0
  5234   003C1A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5235   003C1C  0E00               	movlw	0
  5236   003C1E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5237   003C20  0E00               	movlw	0
  5238   003C22  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5239   003C24  0E00               	movlw	0
  5240   003C26  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5241   003C28  0E00               	movlw	0
  5242   003C2A  6E10               	movwf	(___aomod@divisor+7)^0,c
  5243   003C2C  ECFC  F022         	call	___aomod	;wreg free
  5244   003C30  C001  F026         	movff	?___aomod,??_dtoa
  5245   003C34  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5246   003C38  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5247   003C3C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5248   003C40  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5249   003C44  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5250   003C48  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5251   003C4C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5252   003C50  C026  F013         	movff	??_dtoa,abs@a
  5253   003C54  C027  F014         	movff	??_dtoa+1,abs@a+1
  5254   003C58  ECA2  F02C         	call	_abs	;wreg free
  5255   003C5C  5013               	movf	?_abs^0,w,c
  5256   003C5E  0F30               	addlw	48
  5257   003C60  6EDF               	movwf	indf2,c
  5258   003C62                     
  5259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5260   003C62  0630               	decf	dtoa@p^0,f,c
  5261   003C64  A0D8               	btfss	status,0,c
  5262   003C66  0631               	decf	(dtoa@p+1)^0,f,c
  5263   003C68                     
  5264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5265   003C68  0632               	decf	dtoa@w^0,f,c
  5266   003C6A  A0D8               	btfss	status,0,c
  5267   003C6C  0633               	decf	(dtoa@w+1)^0,f,c
  5268   003C6E                     
  5269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5270   003C6E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5271   003C72  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5272   003C76  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5273   003C7A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5274   003C7E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5275   003C82  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5276   003C86  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5277   003C8A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5278   003C8E  0E0A               	movlw	10
  5279   003C90  6E09               	movwf	___aodiv@divisor^0,c
  5280   003C92  0E00               	movlw	0
  5281   003C94  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5282   003C96  0E00               	movlw	0
  5283   003C98  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5284   003C9A  0E00               	movlw	0
  5285   003C9C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5286   003C9E  0E00               	movlw	0
  5287   003CA0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5288   003CA2  0E00               	movlw	0
  5289   003CA4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5290   003CA6  0E00               	movlw	0
  5291   003CA8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5292   003CAA  0E00               	movlw	0
  5293   003CAC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5294   003CAE  EC82  F021         	call	___aodiv	;wreg free
  5295   003CB2  C001  F034         	movff	?___aodiv,dtoa@n
  5296   003CB6  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5297   003CBA  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5298   003CBE  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5299   003CC2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5300   003CC6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5301   003CCA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5302   003CCE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5303   003CD2                     l4499:
  5304                           
  5305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5306   003CD2  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5307   003CD4  EF74  F01E         	goto	u4431
  5308   003CD8  503D               	movf	(dtoa@i+1)^0,w,c
  5309   003CDA  E108               	bnz	u4430
  5310   003CDC  043C               	decf	dtoa@i^0,w,c
  5311   003CDE  A0D8               	btfss	status,0,c
  5312   003CE0  EF74  F01E         	goto	u4431
  5313   003CE4  EF76  F01E         	goto	u4430
  5314   003CE8                     u4431:
  5315   003CE8  EF92  F01E         	goto	l4505
  5316   003CEC                     u4430:
  5317   003CEC  5034               	movf	dtoa@n^0,w,c
  5318   003CEE  1035               	iorwf	(dtoa@n+1)^0,w,c
  5319   003CF0  1036               	iorwf	(dtoa@n+2)^0,w,c
  5320   003CF2  1037               	iorwf	(dtoa@n+3)^0,w,c
  5321   003CF4  1038               	iorwf	(dtoa@n+4)^0,w,c
  5322   003CF6  1039               	iorwf	(dtoa@n+5)^0,w,c
  5323   003CF8  103A               	iorwf	(dtoa@n+6)^0,w,c
  5324   003CFA  103B               	iorwf	(dtoa@n+7)^0,w,c
  5325   003CFC  A4D8               	btfss	status,2,c
  5326   003CFE  EF83  F01E         	goto	u4441
  5327   003D02  EF85  F01E         	goto	u4440
  5328   003D06                     u4441:
  5329   003D06  EFED  F01D         	goto	l4489
  5330   003D0A                     u4440:
  5331   003D0A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5332   003D0C  EF92  F01E         	goto	u4450
  5333   003D10  5031               	movf	(dtoa@p+1)^0,w,c
  5334   003D12  E106               	bnz	u4451
  5335   003D14  0430               	decf	dtoa@p^0,w,c
  5336   003D16  B0D8               	btfsc	status,0,c
  5337   003D18  EF90  F01E         	goto	u4451
  5338   003D1C  EF92  F01E         	goto	u4450
  5339   003D20                     u4451:
  5340   003D20  EFED  F01D         	goto	l4489
  5341   003D24                     u4450:
  5342   003D24                     l4505:
  5343                           
  5344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5345   003D24  503E               	movf	dtoa@s^0,w,c
  5346   003D26  B4D8               	btfsc	status,2,c
  5347   003D28  EF98  F01E         	goto	u4461
  5348   003D2C  EF9A  F01E         	goto	u4460
  5349   003D30                     u4461:
  5350   003D30  EFA5  F01E         	goto	l4511
  5351   003D34                     u4460:
  5352   003D34                     
  5353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5354   003D34  063C               	decf	dtoa@i^0,f,c
  5355   003D36  A0D8               	btfss	status,0,c
  5356   003D38  063D               	decf	(dtoa@i+1)^0,f,c
  5357   003D3A                     
  5358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5359   003D3A  0E16               	movlw	low _dbuf
  5360   003D3C  243C               	addwf	dtoa@i^0,w,c
  5361   003D3E  6ED9               	movwf	fsr2l,c
  5362   003D40  0E01               	movlw	high _dbuf
  5363   003D42  203D               	addwfc	(dtoa@i+1)^0,w,c
  5364   003D44  6EDA               	movwf	fsr2h,c
  5365   003D46  C03E  FFDF         	movff	dtoa@s,indf2
  5366   003D4A                     l4511:
  5367                           
  5368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5369   003D4A  C01C  F011         	movff	dtoa@fp,pad@fp
  5370   003D4E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5371   003D52  0E16               	movlw	low _dbuf
  5372   003D54  243C               	addwf	dtoa@i^0,w,c
  5373   003D56  6E13               	movwf	pad@buf^0,c
  5374   003D58  0E01               	movlw	high _dbuf
  5375   003D5A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5376   003D5C  6E14               	movwf	(pad@buf+1)^0,c
  5377   003D5E  C032  F015         	movff	dtoa@w,pad@p
  5378   003D62  C033  F016         	movff	dtoa@w+1,pad@p+1
  5379   003D66  ECEC  F027         	call	_pad	;wreg free
  5380   003D6A  0012               	return		;funcret
  5381   003D6C                     __end_of_dtoa:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function _pad *****************
  5385 ;; Defined at:
  5386 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5389 ;;		 -> sprintf@f(11), 
  5390 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5391 ;;		 -> dbuf(80), 
  5392 ;;  p               2   20[COMRAM] int 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  w               2   25[COMRAM] int 
  5395 ;;  i               2   23[COMRAM] int 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5405 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5408 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;Total ram usage:       11 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; Hardware stack levels required when called: 4
  5412 ;; This function calls:
  5413 ;;		_fputc
  5414 ;;		_fputs
  5415 ;; This function is called by:
  5416 ;;		_dtoa
  5417 ;;		_efgtoa
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text13
  5422   004FD8                     __ptext13:
  5423                           	callstack 0
  5424   004FD8                     _pad:
  5425                           	callstack 22
  5426   004FD8                     
  5427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
=======
  5089   003B0C  C01E  F034         	movff	dtoa@d,dtoa@n
  5090   003B10  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5091   003B14  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5092   003B18  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5093   003B1C  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5094   003B20  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5095   003B24  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5096   003B28  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5097   003B2C                     
  5098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5099   003B2C  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5100   003B2E  EF9B  F01D         	goto	u4381
  5101   003B32  EF9E  F01D         	goto	u4380
  5102   003B36                     u4381:
  5103   003B36  0E01               	movlw	1
  5104   003B38  EF9F  F01D         	goto	u4390
  5105   003B3C                     u4380:
  5106   003B3C  0E00               	movlw	0
  5107   003B3E                     u4390:
  5108   003B3E  6E3E               	movwf	dtoa@s^0,c
  5109   003B40                     
  5110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5111   003B40  503E               	movf	dtoa@s^0,w,c
  5112   003B42  B4D8               	btfsc	status,2,c
  5113   003B44  EFA6  F01D         	goto	u4401
  5114   003B48  EFA8  F01D         	goto	u4400
  5115   003B4C                     u4401:
  5116   003B4C  EFB8  F01D         	goto	l4546
  5117   003B50                     u4400:
  5118   003B50                     
  5119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5120   003B50  1E3B               	comf	(dtoa@n+7)^0,f,c
  5121   003B52  1E3A               	comf	(dtoa@n+6)^0,f,c
  5122   003B54  1E39               	comf	(dtoa@n+5)^0,f,c
  5123   003B56  1E38               	comf	(dtoa@n+4)^0,f,c
  5124   003B58  1E37               	comf	(dtoa@n+3)^0,f,c
  5125   003B5A  1E36               	comf	(dtoa@n+2)^0,f,c
  5126   003B5C  1E35               	comf	(dtoa@n+1)^0,f,c
  5127   003B5E  6C34               	negf	dtoa@n^0,c
  5128   003B60  0E00               	movlw	0
  5129   003B62  2235               	addwfc	(dtoa@n+1)^0,f,c
  5130   003B64  2236               	addwfc	(dtoa@n+2)^0,f,c
  5131   003B66  2237               	addwfc	(dtoa@n+3)^0,f,c
  5132   003B68  2238               	addwfc	(dtoa@n+4)^0,f,c
  5133   003B6A  2239               	addwfc	(dtoa@n+5)^0,f,c
  5134   003B6C  223A               	addwfc	(dtoa@n+6)^0,f,c
  5135   003B6E  223B               	addwfc	(dtoa@n+7)^0,f,c
  5136   003B70                     l4546:
  5137                           
  5138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5139   003B70  0100               	movlb	0	; () banked
  5140   003B72  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  5141   003B74  EFC6  F01D         	goto	u4410
  5142   003B78  51F2               	movf	(_prec+1)& (0+255),w,b
  5143   003B7A  E106               	bnz	u4411
  5144   003B7C  05F1               	decf	_prec& (0+255),w,b
  5145   003B7E  B0D8               	btfsc	status,0,c
  5146   003B80  EFC4  F01D         	goto	u4411
  5147   003B84  EFC6  F01D         	goto	u4410
  5148   003B88                     u4411:
  5149   003B88  EFCC  F01D         	goto	l1364
  5150   003B8C                     u4410:
  5151   003B8C                     
  5152                           ; BSR set to: 0
  5153   003B8C  0E00               	movlw	0
  5154   003B8E  6E31               	movwf	(dtoa@p+1)^0,c
  5155   003B90  0E01               	movlw	1
  5156   003B92  6E30               	movwf	dtoa@p^0,c
  5157   003B94  EFD0  F01D         	goto	l1366
  5158   003B98                     l1364:
  5159                           
  5160                           ; BSR set to: 0
  5161   003B98  C0F1  F030         	movff	_prec,dtoa@p
  5162   003B9C  C0F2  F031         	movff	_prec+1,dtoa@p+1
  5163   003BA0                     l1366:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5167   003BA0  C0EF  F032         	movff	_width,dtoa@w
  5168   003BA4  C0F0  F033         	movff	_width+1,dtoa@w+1
  5169   003BA8                     
  5170                           ; BSR set to: 0
  5171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5172   003BA8  503E               	movf	dtoa@s^0,w,c
  5173   003BAA  B4D8               	btfsc	status,2,c
  5174   003BAC  EFDA  F01D         	goto	u4421
  5175   003BB0  EFDC  F01D         	goto	u4420
  5176   003BB4                     u4421:
  5177   003BB4  EFF3  F01D         	goto	l1367
  5178   003BB8                     u4420:
  5179   003BB8                     
  5180                           ; BSR set to: 0
  5181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5182   003BB8  0632               	decf	dtoa@w^0,f,c
  5183   003BBA  A0D8               	btfss	status,0,c
  5184   003BBC  0633               	decf	(dtoa@w+1)^0,f,c
  5185   003BBE                     
  5186                           ; BSR set to: 0
  5187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5188   003BBE  503E               	movf	dtoa@s^0,w,c
  5189   003BC0  A4D8               	btfss	status,2,c
  5190   003BC2  EFE5  F01D         	goto	u4431
  5191   003BC6  EFE7  F01D         	goto	u4430
  5192   003BCA                     u4431:
  5193   003BCA  EFED  F01D         	goto	l4558
  5194   003BCE                     u4430:
  5195   003BCE                     
  5196                           ; BSR set to: 0
  5197   003BCE  0E00               	movlw	0
  5198   003BD0  6E2F               	movwf	(_dtoa$2508+1)^0,c
  5199   003BD2  0E2B               	movlw	43
  5200   003BD4  6E2E               	movwf	_dtoa$2508^0,c
  5201   003BD6  EFF1  F01D         	goto	l4560
  5202   003BDA                     l4558:
  5203                           
  5204                           ; BSR set to: 0
  5205   003BDA  0E00               	movlw	0
  5206   003BDC  6E2F               	movwf	(_dtoa$2508+1)^0,c
  5207   003BDE  0E2D               	movlw	45
  5208   003BE0  6E2E               	movwf	_dtoa$2508^0,c
  5209   003BE2                     l4560:
  5210                           
  5211                           ; BSR set to: 0
  5212   003BE2  C02E  F03E         	movff	_dtoa$2508,dtoa@s
  5213   003BE6                     l1367:
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5217   003BE6  0E00               	movlw	0
  5218   003BE8  6E3D               	movwf	(dtoa@i+1)^0,c
  5219   003BEA  0E4F               	movlw	79
  5220   003BEC  6E3C               	movwf	dtoa@i^0,c
  5221   003BEE                     
  5222                           ; BSR set to: 0
  5223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5224   003BEE  0E00               	movlw	0
  5225   003BF0  0101               	movlb	1	; () banked
  5226   003BF2  6F5D               	movwf	(_dbuf+79)& (0+255),b
  5227                           
  5228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5229   003BF4  EF78  F01E         	goto	l4574
  5230   003BF8                     l4564:
  5231                           
  5232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5233   003BF8  063C               	decf	dtoa@i^0,f,c
  5234   003BFA  A0D8               	btfss	status,0,c
  5235   003BFC  063D               	decf	(dtoa@i+1)^0,f,c
  5236   003BFE                     
  5237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5238   003BFE  0E0E               	movlw	low _dbuf
  5239   003C00  243C               	addwf	dtoa@i^0,w,c
  5240   003C02  6ED9               	movwf	fsr2l,c
  5241   003C04  0E01               	movlw	high _dbuf
  5242   003C06  203D               	addwfc	(dtoa@i+1)^0,w,c
  5243   003C08  6EDA               	movwf	fsr2h,c
  5244   003C0A  C034  F001         	movff	dtoa@n,___aomod@dividend
  5245   003C0E  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5246   003C12  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5247   003C16  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5248   003C1A  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5249   003C1E  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5250   003C22  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5251   003C26  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5252   003C2A  0E0A               	movlw	10
  5253   003C2C  6E09               	movwf	___aomod@divisor^0,c
  5254   003C2E  0E00               	movlw	0
  5255   003C30  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5256   003C32  0E00               	movlw	0
  5257   003C34  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5258   003C36  0E00               	movlw	0
  5259   003C38  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5260   003C3A  0E00               	movlw	0
  5261   003C3C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5262   003C3E  0E00               	movlw	0
  5263   003C40  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5264   003C42  0E00               	movlw	0
  5265   003C44  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5266   003C46  0E00               	movlw	0
  5267   003C48  6E10               	movwf	(___aomod@divisor+7)^0,c
  5268   003C4A  EC3B  F023         	call	___aomod	;wreg free
  5269   003C4E  C001  F026         	movff	?___aomod,??_dtoa
  5270   003C52  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5271   003C56  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5272   003C5A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5273   003C5E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5274   003C62  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5275   003C66  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5276   003C6A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5277   003C6E  C026  F013         	movff	??_dtoa,abs@a
  5278   003C72  C027  F014         	movff	??_dtoa+1,abs@a+1
  5279   003C76  ECC8  F02C         	call	_abs	;wreg free
  5280   003C7A  5013               	movf	?_abs^0,w,c
  5281   003C7C  0F30               	addlw	48
  5282   003C7E  6EDF               	movwf	indf2,c
  5283   003C80                     
  5284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5285   003C80  0630               	decf	dtoa@p^0,f,c
  5286   003C82  A0D8               	btfss	status,0,c
  5287   003C84  0631               	decf	(dtoa@p+1)^0,f,c
  5288   003C86                     
  5289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5290   003C86  0632               	decf	dtoa@w^0,f,c
  5291   003C88  A0D8               	btfss	status,0,c
  5292   003C8A  0633               	decf	(dtoa@w+1)^0,f,c
  5293   003C8C                     
  5294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5295   003C8C  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5296   003C90  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5297   003C94  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5298   003C98  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5299   003C9C  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5300   003CA0  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5301   003CA4  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5302   003CA8  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5303   003CAC  0E0A               	movlw	10
  5304   003CAE  6E09               	movwf	___aodiv@divisor^0,c
  5305   003CB0  0E00               	movlw	0
  5306   003CB2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5307   003CB4  0E00               	movlw	0
  5308   003CB6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5309   003CB8  0E00               	movlw	0
  5310   003CBA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5311   003CBC  0E00               	movlw	0
  5312   003CBE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5313   003CC0  0E00               	movlw	0
  5314   003CC2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5315   003CC4  0E00               	movlw	0
  5316   003CC6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5317   003CC8  0E00               	movlw	0
  5318   003CCA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5319   003CCC  ECC1  F021         	call	___aodiv	;wreg free
  5320   003CD0  C001  F034         	movff	?___aodiv,dtoa@n
  5321   003CD4  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5322   003CD8  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5323   003CDC  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5324   003CE0  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5325   003CE4  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5326   003CE8  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5327   003CEC  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5328   003CF0                     l4574:
  5329                           
  5330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5331   003CF0  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5332   003CF2  EF83  F01E         	goto	u4441
  5333   003CF6  503D               	movf	(dtoa@i+1)^0,w,c
  5334   003CF8  E108               	bnz	u4440
  5335   003CFA  043C               	decf	dtoa@i^0,w,c
  5336   003CFC  A0D8               	btfss	status,0,c
  5337   003CFE  EF83  F01E         	goto	u4441
  5338   003D02  EF85  F01E         	goto	u4440
  5339   003D06                     u4441:
  5340   003D06  EFA1  F01E         	goto	l4580
  5341   003D0A                     u4440:
  5342   003D0A  5034               	movf	dtoa@n^0,w,c
  5343   003D0C  1035               	iorwf	(dtoa@n+1)^0,w,c
  5344   003D0E  1036               	iorwf	(dtoa@n+2)^0,w,c
  5345   003D10  1037               	iorwf	(dtoa@n+3)^0,w,c
  5346   003D12  1038               	iorwf	(dtoa@n+4)^0,w,c
  5347   003D14  1039               	iorwf	(dtoa@n+5)^0,w,c
  5348   003D16  103A               	iorwf	(dtoa@n+6)^0,w,c
  5349   003D18  103B               	iorwf	(dtoa@n+7)^0,w,c
  5350   003D1A  A4D8               	btfss	status,2,c
  5351   003D1C  EF92  F01E         	goto	u4451
  5352   003D20  EF94  F01E         	goto	u4450
  5353   003D24                     u4451:
  5354   003D24  EFFC  F01D         	goto	l4564
  5355   003D28                     u4450:
  5356   003D28  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5357   003D2A  EFA1  F01E         	goto	u4460
  5358   003D2E  5031               	movf	(dtoa@p+1)^0,w,c
  5359   003D30  E106               	bnz	u4461
  5360   003D32  0430               	decf	dtoa@p^0,w,c
  5361   003D34  B0D8               	btfsc	status,0,c
  5362   003D36  EF9F  F01E         	goto	u4461
  5363   003D3A  EFA1  F01E         	goto	u4460
  5364   003D3E                     u4461:
  5365   003D3E  EFFC  F01D         	goto	l4564
  5366   003D42                     u4460:
  5367   003D42                     l4580:
  5368                           
  5369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5370   003D42  503E               	movf	dtoa@s^0,w,c
  5371   003D44  B4D8               	btfsc	status,2,c
  5372   003D46  EFA7  F01E         	goto	u4471
  5373   003D4A  EFA9  F01E         	goto	u4470
  5374   003D4E                     u4471:
  5375   003D4E  EFB4  F01E         	goto	l4586
  5376   003D52                     u4470:
  5377   003D52                     
  5378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5379   003D52  063C               	decf	dtoa@i^0,f,c
  5380   003D54  A0D8               	btfss	status,0,c
  5381   003D56  063D               	decf	(dtoa@i+1)^0,f,c
  5382   003D58                     
  5383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5384   003D58  0E0E               	movlw	low _dbuf
  5385   003D5A  243C               	addwf	dtoa@i^0,w,c
  5386   003D5C  6ED9               	movwf	fsr2l,c
  5387   003D5E  0E01               	movlw	high _dbuf
  5388   003D60  203D               	addwfc	(dtoa@i+1)^0,w,c
  5389   003D62  6EDA               	movwf	fsr2h,c
  5390   003D64  C03E  FFDF         	movff	dtoa@s,indf2
  5391   003D68                     l4586:
  5392                           
  5393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5394   003D68  C01C  F011         	movff	dtoa@fp,pad@fp
  5395   003D6C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5396   003D70  0E0E               	movlw	low _dbuf
  5397   003D72  243C               	addwf	dtoa@i^0,w,c
  5398   003D74  6E13               	movwf	pad@buf^0,c
  5399   003D76  0E01               	movlw	high _dbuf
  5400   003D78  203D               	addwfc	(dtoa@i+1)^0,w,c
  5401   003D7A  6E14               	movwf	(pad@buf+1)^0,c
  5402   003D7C  C032  F015         	movff	dtoa@w,pad@p
  5403   003D80  C033  F016         	movff	dtoa@w+1,pad@p+1
  5404   003D84  ECDC  F027         	call	_pad	;wreg free
  5405   003D88  0012               	return		;funcret
  5406   003D8A                     __end_of_dtoa:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function _pad *****************
  5410 ;; Defined at:
  5411 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5414 ;;		 -> sprintf@f(11), 
  5415 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5416 ;;		 -> dbuf(80), 
  5417 ;;  p               2   20[COMRAM] int 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  w               2   25[COMRAM] int 
  5420 ;;  i               2   23[COMRAM] int 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5430 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5433 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5434 ;;Total ram usage:       11 bytes
  5435 ;; Hardware stack levels used: 1
  5436 ;; Hardware stack levels required when called: 4
  5437 ;; This function calls:
  5438 ;;		_fputc
  5439 ;;		_fputs
  5440 ;; This function is called by:
  5441 ;;		_dtoa
  5442 ;;		_efgtoa
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text13
  5447   004FB8                     __ptext13:
  5448                           	callstack 0
  5449   004FB8                     _pad:
  5450                           	callstack 22
  5451   004FB8                     
  5452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
>>>>>>> Stashed changes
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
<<<<<<< Updated upstream
  5428   004FD8  BE16               	btfsc	(pad@p+1)^0,7,c
  5429   004FDA  EFF1  F027         	goto	u4021
  5430   004FDE  EFF3  F027         	goto	u4020
  5431   004FE2                     u4021:
  5432   004FE2  EFF9  F027         	goto	l4305
  5433   004FE6                     u4020:
  5434   004FE6  C015  F01A         	movff	pad@p,pad@w
  5435   004FEA  C016  F01B         	movff	pad@p+1,pad@w+1
  5436   004FEE  EFFD  F027         	goto	l1324
  5437   004FF2                     l4305:
  5438   004FF2  0E00               	movlw	0
  5439   004FF4  6E1B               	movwf	(pad@w+1)^0,c
  5440   004FF6  0E00               	movlw	0
  5441   004FF8  6E1A               	movwf	pad@w^0,c
  5442   004FFA                     l1324:
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5445   004FFA  0E00               	movlw	0
  5446   004FFC  6E19               	movwf	(pad@i+1)^0,c
  5447   004FFE  0E00               	movlw	0
  5448   005000  6E18               	movwf	pad@i^0,c
  5449                           
  5450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5451   005002  EF0F  F028         	goto	l4311
  5452   005006                     l4307:
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5455   005006  0E00               	movlw	0
  5456   005008  6E02               	movwf	(fputc@c+1)^0,c
  5457   00500A  0E20               	movlw	32
  5458   00500C  6E01               	movwf	fputc@c^0,c
  5459   00500E  C011  F003         	movff	pad@fp,fputc@fp
  5460   005012  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5461   005016  EC32  F025         	call	_fputc	;wreg free
  5462   00501A                     
  5463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5464   00501A  4A18               	infsnz	pad@i^0,f,c
  5465   00501C  2A19               	incf	(pad@i+1)^0,f,c
  5466   00501E                     l4311:
  5467                           
  5468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5469   00501E  501A               	movf	pad@w^0,w,c
  5470   005020  5C18               	subwf	pad@i^0,w,c
  5471   005022  5019               	movf	(pad@i+1)^0,w,c
  5472   005024  0A80               	xorlw	128
  5473   005026  6E17               	movwf	??_pad^0,c
  5474   005028  501B               	movf	(pad@w+1)^0,w,c
  5475   00502A  0A80               	xorlw	128
  5476   00502C  5817               	subwfb	??_pad^0,w,c
  5477   00502E  A0D8               	btfss	status,0,c
  5478   005030  EF1C  F028         	goto	u4031
  5479   005034  EF1E  F028         	goto	u4030
  5480   005038                     u4031:
  5481   005038  EF03  F028         	goto	l4307
  5482   00503C                     u4030:
  5483   00503C                     
  5484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5485   00503C  C013  F00A         	movff	pad@buf,fputs@s
  5486   005040  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5487   005044  C011  F00C         	movff	pad@fp,fputs@fp
  5488   005048  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5489   00504C  EC5F  F02C         	call	_fputs	;wreg free
  5490   005050  0012               	return		;funcret
  5491   005052                     __end_of_pad:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _fputs *****************
  5495 ;; Defined at:
  5496 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5499 ;;		 -> dbuf(80), 
  5500 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5501 ;;		 -> sprintf@f(11), 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  i               2   14[COMRAM] int 
  5504 ;;  c               1   13[COMRAM] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  2    9[COMRAM] int 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5517 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;Total ram usage:        7 bytes
  5519 ;; Hardware stack levels used: 1
  5520 ;; Hardware stack levels required when called: 3
  5521 ;; This function calls:
  5522 ;;		_fputc
  5523 ;; This function is called by:
  5524 ;;		_pad
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text14
  5529   0058BE                     __ptext14:
  5530                           	callstack 0
  5531   0058BE                     _fputs:
  5532                           	callstack 22
  5533   0058BE  0E00               	movlw	0
  5534   0058C0  6E10               	movwf	(fputs@i+1)^0,c
  5535   0058C2  0E00               	movlw	0
  5536   0058C4  6E0F               	movwf	fputs@i^0,c
  5537   0058C6  EF70  F02C         	goto	l3839
  5538   0058CA                     l3835:
  5539   0058CA  C00E  F001         	movff	fputs@c,fputc@c
  5540   0058CE  6A02               	clrf	(fputc@c+1)^0,c
  5541   0058D0  C00C  F003         	movff	fputs@fp,fputc@fp
  5542   0058D4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5543   0058D8  EC32  F025         	call	_fputc	;wreg free
  5544   0058DC  4A0F               	infsnz	fputs@i^0,f,c
  5545   0058DE  2A10               	incf	(fputs@i+1)^0,f,c
  5546   0058E0                     l3839:
  5547   0058E0  500F               	movf	fputs@i^0,w,c
  5548   0058E2  240A               	addwf	fputs@s^0,w,c
  5549   0058E4  6ED9               	movwf	fsr2l,c
  5550   0058E6  5010               	movf	(fputs@i+1)^0,w,c
  5551   0058E8  200B               	addwfc	(fputs@s+1)^0,w,c
  5552   0058EA  6EDA               	movwf	fsr2h,c
  5553   0058EC  50DF               	movf	indf2,w,c
  5554   0058EE  6E0E               	movwf	fputs@c^0,c
  5555   0058F0  500E               	movf	fputs@c^0,w,c
  5556   0058F2  A4D8               	btfss	status,2,c
  5557   0058F4  EF7E  F02C         	goto	u3281
  5558   0058F8  EF80  F02C         	goto	u3280
  5559   0058FC                     u3281:
  5560   0058FC  EF65  F02C         	goto	l3835
  5561   005900                     u3280:
  5562   005900  0012               	return		;funcret
  5563   005902                     __end_of_fputs:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _fputc *****************
  5567 ;; Defined at:
  5568 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  c               2    0[COMRAM] int 
  5571 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5572 ;;		 -> sprintf@f(11), 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  2    0[COMRAM] int 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;Total ram usage:        9 bytes
  5589 ;; Hardware stack levels used: 1
  5590 ;; Hardware stack levels required when called: 2
  5591 ;; This function calls:
  5592 ;;		_putch
  5593 ;; This function is called by:
  5594 ;;		_pad
  5595 ;;		_vfpfcnvrt
  5596 ;;		_fputs
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text15
  5601   004A64                     __ptext15:
  5602                           	callstack 0
  5603   004A64                     _fputc:
  5604                           	callstack 25
  5605   004A64  5003               	movf	fputc@fp^0,w,c
  5606   004A66  1004               	iorwf	(fputc@fp+1)^0,w,c
  5607   004A68  B4D8               	btfsc	status,2,c
  5608   004A6A  EF39  F025         	goto	u2821
  5609   004A6E  EF3B  F025         	goto	u2820
  5610   004A72                     u2821:
  5611   004A72  EF44  F025         	goto	l3593
  5612   004A76                     u2820:
  5613   004A76  5003               	movf	fputc@fp^0,w,c
  5614   004A78  1004               	iorwf	(fputc@fp+1)^0,w,c
  5615   004A7A  A4D8               	btfss	status,2,c
  5616   004A7C  EF42  F025         	goto	u2831
  5617   004A80  EF44  F025         	goto	u2830
  5618   004A84                     u2831:
  5619   004A84  EF49  F025         	goto	l3595
  5620   004A88                     u2830:
  5621   004A88                     l3593:
  5622   004A88  5001               	movf	fputc@c^0,w,c
  5623   004A8A  ECF2  F02D         	call	_putch
  5624   004A8E  EF96  F025         	goto	l1484
  5625   004A92                     l3595:
  5626   004A92  EE20 F009          	lfsr	2,9
  5627   004A96  5003               	movf	fputc@fp^0,w,c
  5628   004A98  26D9               	addwf	fsr2l,f,c
  5629   004A9A  5004               	movf	(fputc@fp+1)^0,w,c
  5630   004A9C  22DA               	addwfc	fsr2h,f,c
  5631   004A9E  50DE               	movf	postinc2,w,c
  5632   004AA0  10DE               	iorwf	postinc2,w,c
  5633   004AA2  B4D8               	btfsc	status,2,c
  5634   004AA4  EF56  F025         	goto	u2841
  5635   004AA8  EF58  F025         	goto	u2840
  5636   004AAC                     u2841:
  5637   004AAC  EF73  F025         	goto	l3599
  5638   004AB0                     u2840:
  5639   004AB0  EE20 F009          	lfsr	2,9
  5640   004AB4  5003               	movf	fputc@fp^0,w,c
  5641   004AB6  26D9               	addwf	fsr2l,f,c
  5642   004AB8  5004               	movf	(fputc@fp+1)^0,w,c
  5643   004ABA  22DA               	addwfc	fsr2h,f,c
  5644   004ABC  EE10 F003          	lfsr	1,3
  5645   004AC0  5003               	movf	fputc@fp^0,w,c
  5646   004AC2  26E1               	addwf	fsr1l,f,c
  5647   004AC4  5004               	movf	(fputc@fp+1)^0,w,c
  5648   004AC6  22E2               	addwfc	fsr1h,f,c
  5649   004AC8  50DE               	movf	postinc2,w,c
  5650   004ACA  5CE6               	subwf	postinc1,w,c
  5651   004ACC  50E6               	movf	postinc1,w,c
  5652   004ACE  0A80               	xorlw	128
  5653   004AD0  6E09               	movwf	(??_fputc+4)^0,c
  5654   004AD2  50DE               	movf	postinc2,w,c
  5655   004AD4  0A80               	xorlw	128
  5656   004AD6  5809               	subwfb	(??_fputc+4)^0,w,c
  5657   004AD8  B0D8               	btfsc	status,0,c
  5658   004ADA  EF71  F025         	goto	u2851
  5659   004ADE  EF73  F025         	goto	u2850
  5660   004AE2                     u2851:
  5661   004AE2  EF96  F025         	goto	l1484
  5662   004AE6                     u2850:
  5663   004AE6                     l3599:
  5664   004AE6  EE20 F003          	lfsr	2,3
  5665   004AEA  5003               	movf	fputc@fp^0,w,c
  5666   004AEC  26D9               	addwf	fsr2l,f,c
  5667   004AEE  5004               	movf	(fputc@fp+1)^0,w,c
  5668   004AF0  22DA               	addwfc	fsr2h,f,c
  5669   004AF2  CFDE F005          	movff	postinc2,??_fputc
  5670   004AF6  CFDD F006          	movff	postdec2,??_fputc+1
  5671   004AFA  C003  FFD9         	movff	fputc@fp,fsr2l
  5672   004AFE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5673   004B02  CFDE F007          	movff	postinc2,??_fputc+2
  5674   004B06  CFDD F008          	movff	postdec2,??_fputc+3
  5675   004B0A  5005               	movf	??_fputc^0,w,c
  5676   004B0C  2407               	addwf	(??_fputc+2)^0,w,c
  5677   004B0E  6ED9               	movwf	fsr2l,c
  5678   004B10  5006               	movf	(??_fputc+1)^0,w,c
  5679   004B12  2008               	addwfc	(??_fputc+3)^0,w,c
  5680   004B14  6EDA               	movwf	fsr2h,c
  5681   004B16  C001  FFDF         	movff	fputc@c,indf2
  5682   004B1A  EE20 F003          	lfsr	2,3
  5683   004B1E  5003               	movf	fputc@fp^0,w,c
  5684   004B20  26D9               	addwf	fsr2l,f,c
  5685   004B22  5004               	movf	(fputc@fp+1)^0,w,c
  5686   004B24  22DA               	addwfc	fsr2h,f,c
  5687   004B26  2ADE               	incf	postinc2,f,c
  5688   004B28  0E00               	movlw	0
  5689   004B2A  22DD               	addwfc	postdec2,f,c
  5690   004B2C                     l1484:
  5691   004B2C  0012               	return		;funcret
  5692   004B2E                     __end_of_fputc:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function _putch *****************
  5696 ;; Defined at:
  5697 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  c               1    wreg     unsigned char 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  c               1    0[COMRAM] unsigned char 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used: 1
  5717 ;; Hardware stack levels required when called: 1
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_fputc
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text16
  5726   005BE4                     __ptext16:
  5727                           	callstack 0
  5728   005BE4                     _putch:
  5729                           	callstack 25
  5730   005BE4  0012               	return		;funcret
  5731   005BE6                     __end_of_putch:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function _abs *****************
  5735 ;; Defined at:
  5736 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  a               2   18[COMRAM] int 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  2   18[COMRAM] int 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;Total ram usage:        4 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_dtoa
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text17
  5765   005944                     __ptext17:
  5766                           	callstack 0
  5767   005944                     _abs:
  5768                           	callstack 25
  5769   005944  BE14               	btfsc	(abs@a+1)^0,7,c
  5770   005946  EFAF  F02C         	goto	u4040
  5771   00594A  5014               	movf	(abs@a+1)^0,w,c
  5772   00594C  E106               	bnz	u4041
  5773   00594E  0413               	decf	abs@a^0,w,c
  5774   005950  B0D8               	btfsc	status,0,c
  5775   005952  EFAD  F02C         	goto	u4041
  5776   005956  EFAF  F02C         	goto	u4040
  5777   00595A                     u4041:
  5778   00595A  EFBD  F02C         	goto	l1443
  5779   00595E                     u4040:
  5780   00595E  C013  F015         	movff	abs@a,??_abs
  5781   005962  C014  F016         	movff	abs@a+1,??_abs+1
  5782   005966  1E15               	comf	??_abs^0,f,c
  5783   005968  1E16               	comf	(??_abs+1)^0,f,c
  5784   00596A  4A15               	infsnz	??_abs^0,f,c
  5785   00596C  2A16               	incf	(??_abs+1)^0,f,c
  5786   00596E  C015  F013         	movff	??_abs,?_abs
  5787   005972  C016  F014         	movff	??_abs+1,?_abs+1
  5788   005976  EFC1  F02C         	goto	l1446
  5789   00597A                     l1443:
  5790   00597A  C013  F013         	movff	abs@a,?_abs
  5791   00597E  C014  F014         	movff	abs@a+1,?_abs+1
  5792   005982                     l1446:
  5793   005982  0012               	return		;funcret
  5794   005984                     __end_of_abs:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function ___aomod *****************
  5798 ;; Defined at:
  5799 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  dividend        8    0[COMRAM] long long 
  5802 ;;  divisor         8    8[COMRAM] long long 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  sign            1   17[COMRAM] unsigned char 
  5805 ;;  counter         1   16[COMRAM] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  8    0[COMRAM] long long 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5815 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;Total ram usage:       18 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 1
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_dtoa
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text18
  5830   0045F8                     __ptext18:
  5831                           	callstack 0
  5832   0045F8                     ___aomod:
  5833                           	callstack 25
  5834   0045F8  0E00               	movlw	0
  5835   0045FA  6E12               	movwf	___aomod@sign^0,c
  5836   0045FC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5837   0045FE  EF05  F023         	goto	u3380
  5838   004602  EF03  F023         	goto	u3381
  5839   004606                     u3381:
  5840   004606  EF17  F023         	goto	l3909
  5841   00460A                     u3380:
  5842   00460A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5843   00460C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5844   00460E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5845   004610  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5846   004612  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5847   004614  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5848   004616  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5849   004618  6C01               	negf	___aomod@dividend^0,c
  5850   00461A  0E00               	movlw	0
  5851   00461C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5852   00461E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5853   004620  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5854   004622  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5855   004624  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5856   004626  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5857   004628  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5858   00462A  0E01               	movlw	1
  5859   00462C  6E12               	movwf	___aomod@sign^0,c
  5860   00462E                     l3909:
  5861   00462E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5862   004630  EF1E  F023         	goto	u3390
  5863   004634  EF1C  F023         	goto	u3391
  5864   004638                     u3391:
  5865   004638  EF2E  F023         	goto	l3913
  5866   00463C                     u3390:
  5867   00463C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5868   00463E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5869   004640  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5870   004642  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5871   004644  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5872   004646  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5873   004648  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5874   00464A  6C09               	negf	___aomod@divisor^0,c
  5875   00464C  0E00               	movlw	0
  5876   00464E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5877   004650  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5878   004652  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5879   004654  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5880   004656  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5881   004658  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5882   00465A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5883   00465C                     l3913:
  5884   00465C  5009               	movf	___aomod@divisor^0,w,c
  5885   00465E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5886   004660  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5887   004662  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5888   004664  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5889   004666  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5890   004668  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5891   00466A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5892   00466C  B4D8               	btfsc	status,2,c
  5893   00466E  EF3B  F023         	goto	u3401
  5894   004672  EF3D  F023         	goto	u3400
  5895   004676                     u3401:
  5896   004676  EF85  F023         	goto	l3929
  5897   00467A                     u3400:
  5898   00467A  0E01               	movlw	1
  5899   00467C  6E11               	movwf	___aomod@counter^0,c
  5900   00467E  EF4B  F023         	goto	l3919
  5901   004682                     l3917:
  5902   004682  90D8               	bcf	status,0,c
  5903   004684  3609               	rlcf	___aomod@divisor^0,f,c
  5904   004686  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5905   004688  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5906   00468A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5907   00468C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5908   00468E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5909   004690  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5910   004692  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5911   004694  2A11               	incf	___aomod@counter^0,f,c
  5912   004696                     l3919:
  5913   004696  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5914   004698  EF50  F023         	goto	u3411
  5915   00469C  EF52  F023         	goto	u3410
  5916   0046A0                     u3411:
  5917   0046A0  EF41  F023         	goto	l3917
  5918   0046A4                     u3410:
  5919   0046A4                     l3921:
  5920   0046A4  5009               	movf	___aomod@divisor^0,w,c
  5921   0046A6  5C01               	subwf	___aomod@dividend^0,w,c
  5922   0046A8  500A               	movf	(___aomod@divisor+1)^0,w,c
  5923   0046AA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5924   0046AC  500B               	movf	(___aomod@divisor+2)^0,w,c
  5925   0046AE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5926   0046B0  500C               	movf	(___aomod@divisor+3)^0,w,c
  5927   0046B2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5928   0046B4  500D               	movf	(___aomod@divisor+4)^0,w,c
  5929   0046B6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5930   0046B8  500E               	movf	(___aomod@divisor+5)^0,w,c
  5931   0046BA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5932   0046BC  500F               	movf	(___aomod@divisor+6)^0,w,c
  5933   0046BE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5934   0046C0  5010               	movf	(___aomod@divisor+7)^0,w,c
  5935   0046C2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5936   0046C4  A0D8               	btfss	status,0,c
  5937   0046C6  EF67  F023         	goto	u3421
  5938   0046CA  EF69  F023         	goto	u3420
  5939   0046CE                     u3421:
  5940   0046CE  EF79  F023         	goto	l3925
  5941   0046D2                     u3420:
  5942   0046D2  5009               	movf	___aomod@divisor^0,w,c
  5943   0046D4  5E01               	subwf	___aomod@dividend^0,f,c
  5944   0046D6  500A               	movf	(___aomod@divisor+1)^0,w,c
  5945   0046D8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5946   0046DA  500B               	movf	(___aomod@divisor+2)^0,w,c
  5947   0046DC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5948   0046DE  500C               	movf	(___aomod@divisor+3)^0,w,c
  5949   0046E0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5950   0046E2  500D               	movf	(___aomod@divisor+4)^0,w,c
  5951   0046E4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5952   0046E6  500E               	movf	(___aomod@divisor+5)^0,w,c
  5953   0046E8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5954   0046EA  500F               	movf	(___aomod@divisor+6)^0,w,c
  5955   0046EC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5956   0046EE  5010               	movf	(___aomod@divisor+7)^0,w,c
  5957   0046F0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5958   0046F2                     l3925:
  5959   0046F2  90D8               	bcf	status,0,c
  5960   0046F4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5961   0046F6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5962   0046F8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5963   0046FA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5964   0046FC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5965   0046FE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5966   004700  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5967   004702  3209               	rrcf	___aomod@divisor^0,f,c
  5968   004704  2E11               	decfsz	___aomod@counter^0,f,c
  5969   004706  EF52  F023         	goto	l3921
  5970   00470A                     l3929:
  5971   00470A  5012               	movf	___aomod@sign^0,w,c
  5972   00470C  B4D8               	btfsc	status,2,c
  5973   00470E  EF8B  F023         	goto	u3431
  5974   004712  EF8D  F023         	goto	u3430
  5975   004716                     u3431:
  5976   004716  EF9D  F023         	goto	l3933
  5977   00471A                     u3430:
  5978   00471A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5979   00471C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5980   00471E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5981   004720  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5982   004722  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5983   004724  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5984   004726  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5985   004728  6C01               	negf	___aomod@dividend^0,c
  5986   00472A  0E00               	movlw	0
  5987   00472C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5988   00472E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5989   004730  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5990   004732  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5991   004734  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5992   004736  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5993   004738  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5994   00473A                     l3933:
  5995   00473A  C001  F001         	movff	___aomod@dividend,?___aomod
  5996   00473E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5997   004742  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5998   004746  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5999   00474A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6000   00474E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6001   004752  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6002   004756  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6003   00475A  0012               	return		;funcret
  6004   00475C                     __end_of___aomod:
  6005                           	callstack 0
  6006                           
  6007 ;; *************** function ___aodiv *****************
  6008 ;; Defined at:
  6009 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  dividend        8    0[COMRAM] long long 
  6012 ;;  divisor         8    8[COMRAM] long long 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  quotient        8   18[COMRAM] long long 
  6015 ;;  sign            1   17[COMRAM] unsigned char 
  6016 ;;  counter         1   16[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  8    0[COMRAM] long long 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6026 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;Total ram usage:       26 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 1
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_dtoa
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text19
  6041   004304                     __ptext19:
  6042                           	callstack 0
  6043   004304                     ___aodiv:
  6044                           	callstack 25
  6045   004304  0E00               	movlw	0
  6046   004306  6E12               	movwf	___aodiv@sign^0,c
  6047   004308  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6048   00430A  EF8B  F021         	goto	u3310
  6049   00430E  EF89  F021         	goto	u3311
  6050   004312                     u3311:
  6051   004312  EF9D  F021         	goto	l3865
  6052   004316                     u3310:
  6053   004316  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6054   004318  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6055   00431A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6056   00431C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6057   00431E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6058   004320  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6059   004322  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6060   004324  6C09               	negf	___aodiv@divisor^0,c
  6061   004326  0E00               	movlw	0
  6062   004328  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6063   00432A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6064   00432C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6065   00432E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6066   004330  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6067   004332  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6068   004334  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6069   004336  0E01               	movlw	1
  6070   004338  6E12               	movwf	___aodiv@sign^0,c
  6071   00433A                     l3865:
  6072   00433A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6073   00433C  EFA4  F021         	goto	u3320
  6074   004340  EFA2  F021         	goto	u3321
  6075   004344                     u3321:
  6076   004344  EFB6  F021         	goto	l3871
  6077   004348                     u3320:
  6078   004348  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6079   00434A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6080   00434C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6081   00434E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6082   004350  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6083   004352  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6084   004354  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6085   004356  6C01               	negf	___aodiv@dividend^0,c
  6086   004358  0E00               	movlw	0
  6087   00435A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6088   00435C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6089   00435E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6090   004360  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6091   004362  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6092   004364  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6093   004366  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6094   004368  0E01               	movlw	1
  6095   00436A  1A12               	xorwf	___aodiv@sign^0,f,c
  6096   00436C                     l3871:
  6097   00436C  EE20  F013         	lfsr	2,___aodiv@quotient
  6098   004370  0E07               	movlw	7
  6099   004372                     u3331:
  6100   004372  6ADE               	clrf	postinc2,c
  6101   004374  06E8               	decf	wreg,f,c
  6102   004376  E2FD               	bc	u3331
  6103   004378  5009               	movf	___aodiv@divisor^0,w,c
  6104   00437A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6105   00437C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6106   00437E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6107   004380  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6108   004382  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6109   004384  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6110   004386  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6111   004388  B4D8               	btfsc	status,2,c
  6112   00438A  EFC9  F021         	goto	u3341
  6113   00438E  EFCB  F021         	goto	u3340
  6114   004392                     u3341:
  6115   004392  EF1D  F022         	goto	l3893
  6116   004396                     u3340:
  6117   004396  0E01               	movlw	1
  6118   004398  6E11               	movwf	___aodiv@counter^0,c
  6119   00439A  EFD9  F021         	goto	l3879
  6120   00439E                     l3877:
  6121   00439E  90D8               	bcf	status,0,c
  6122   0043A0  3609               	rlcf	___aodiv@divisor^0,f,c
  6123   0043A2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6124   0043A4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6125   0043A6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6126   0043A8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6127   0043AA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6128   0043AC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6129   0043AE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6130   0043B0  2A11               	incf	___aodiv@counter^0,f,c
  6131   0043B2                     l3879:
  6132   0043B2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6133   0043B4  EFDE  F021         	goto	u3351
  6134   0043B8  EFE0  F021         	goto	u3350
  6135   0043BC                     u3351:
  6136   0043BC  EFCF  F021         	goto	l3877
  6137   0043C0                     u3350:
  6138   0043C0                     l3881:
  6139   0043C0  90D8               	bcf	status,0,c
  6140   0043C2  3613               	rlcf	___aodiv@quotient^0,f,c
  6141   0043C4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6142   0043C6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6143   0043C8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6144   0043CA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6145   0043CC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6146   0043CE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6147   0043D0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6148   0043D2  5009               	movf	___aodiv@divisor^0,w,c
  6149   0043D4  5C01               	subwf	___aodiv@dividend^0,w,c
  6150   0043D6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6151   0043D8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6152   0043DA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6153   0043DC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6154   0043DE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6155   0043E0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6156   0043E2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6157   0043E4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6158   0043E6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6159   0043E8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6160   0043EA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6161   0043EC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6162   0043EE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6163   0043F0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6164   0043F2  A0D8               	btfss	status,0,c
  6165   0043F4  EFFE  F021         	goto	u3361
  6166   0043F8  EF00  F022         	goto	u3360
  6167   0043FC                     u3361:
  6168   0043FC  EF11  F022         	goto	l3889
  6169   004400                     u3360:
  6170   004400  5009               	movf	___aodiv@divisor^0,w,c
  6171   004402  5E01               	subwf	___aodiv@dividend^0,f,c
  6172   004404  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6173   004406  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6174   004408  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6175   00440A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6176   00440C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6177   00440E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6178   004410  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6179   004412  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6180   004414  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6181   004416  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6182   004418  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6183   00441A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6184   00441C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6185   00441E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6186   004420  8013               	bsf	___aodiv@quotient^0,0,c
  6187   004422                     l3889:
  6188   004422  90D8               	bcf	status,0,c
  6189   004424  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6190   004426  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6191   004428  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6192   00442A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6193   00442C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6194   00442E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6195   004430  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6196   004432  3209               	rrcf	___aodiv@divisor^0,f,c
  6197   004434  2E11               	decfsz	___aodiv@counter^0,f,c
  6198   004436  EFE0  F021         	goto	l3881
  6199   00443A                     l3893:
  6200   00443A  5012               	movf	___aodiv@sign^0,w,c
  6201   00443C  B4D8               	btfsc	status,2,c
  6202   00443E  EF23  F022         	goto	u3371
  6203   004442  EF25  F022         	goto	u3370
  6204   004446                     u3371:
  6205   004446  EF35  F022         	goto	l3897
  6206   00444A                     u3370:
  6207   00444A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6208   00444C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6209   00444E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6210   004450  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6211   004452  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6212   004454  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6213   004456  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6214   004458  6C13               	negf	___aodiv@quotient^0,c
  6215   00445A  0E00               	movlw	0
  6216   00445C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6217   00445E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6218   004460  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6219   004462  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6220   004464  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6221   004466  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6222   004468  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6223   00446A                     l3897:
  6224   00446A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6225   00446E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6226   004472  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6227   004476  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6228   00447A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6229   00447E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6230   004482  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6231   004486  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6232   00448A  0012               	return		;funcret
  6233   00448C                     __end_of___aodiv:
  6234                           	callstack 0
  6235                           
  6236 ;; *************** function _sendStringSerial4 *****************
  6237 ;; Defined at:
  6238 ;;		line 33 in file "serial.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  string          2    1[COMRAM] PTR unsigned char 
  6241 ;;		 -> main@buf(100), 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6257 ;;Total ram usage:        2 bytes
  6258 ;; Hardware stack levels used: 1
  6259 ;; Hardware stack levels required when called: 2
  6260 ;; This function calls:
  6261 ;;		_sendCharSerial4
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text20
  6268   005AB4                     __ptext20:
  6269                           	callstack 0
  6270   005AB4                     _sendStringSerial4:
  6271                           	callstack 28
  6272   005AB4                     
  6273                           ;serial.c: 34:     while (*string!=0){
  6274   005AB4  EF65  F02D         	goto	l5247
  6275   005AB8                     l5243:
  6276                           
  6277                           ;serial.c: 35:         sendCharSerial4(*string++);
  6278   005AB8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6279   005ABC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6280   005AC0  50DF               	movf	indf2,w,c
  6281   005AC2  ECCD  F02D         	call	_sendCharSerial4
  6282   005AC6  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6283   005AC8  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6284   005ACA                     l5247:
  6285                           
  6286                           ;serial.c: 34:     while (*string!=0){
  6287   005ACA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6288   005ACE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6289   005AD2  50DF               	movf	indf2,w,c
  6290   005AD4  A4D8               	btfss	status,2,c
  6291   005AD6  EF6F  F02D         	goto	u5301
  6292   005ADA  EF71  F02D         	goto	u5300
  6293   005ADE                     u5301:
  6294   005ADE  EF5C  F02D         	goto	l5243
  6295   005AE2                     u5300:
  6296   005AE2  0012               	return		;funcret
  6297   005AE4                     __end_of_sendStringSerial4:
  6298                           	callstack 0
  6299                           
  6300 ;; *************** function _sendCharSerial4 *****************
  6301 ;; Defined at:
  6302 ;;		line 26 in file "serial.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  charToSend      1    wreg     unsigned char 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  charToSend      1    0[COMRAM] unsigned char 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;Total ram usage:        1 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 1
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_sendStringSerial4
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text21
  6331   005B9A                     __ptext21:
  6332                           	callstack 0
  6333   005B9A                     _sendCharSerial4:
  6334                           	callstack 28
  6335                           
  6336                           ;incstack = 0
  6337                           ;sendCharSerial4@charToSend stored from wreg
  6338   005B9A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6339   005B9C                     l207:
  6340   005B9C  010E               	movlb	14	; () banked
  6341   005B9E  A537               	btfss	55,2,b	;volatile
  6342   005BA0  EFD4  F02D         	goto	u4851
  6343   005BA4  EFD6  F02D         	goto	u4850
  6344   005BA8                     u4851:
  6345   005BA8  EFCE  F02D         	goto	l207
  6346   005BAC                     u4850:
  6347   005BAC                     
  6348                           ; BSR set to: 14
  6349                           ;serial.c: 28:     TX4REG = charToSend;
  6350   005BAC  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6351   005BB0                     
  6352                           ; BSR set to: 14
  6353   005BB0  0012               	return		;funcret
  6354   005BB2                     __end_of_sendCharSerial4:
  6355                           	callstack 0
  6356                           
  6357 ;; *************** function _readColours *****************
  6358 ;; Defined at:
  6359 ;;		line 105 in file "color.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  vals            2   11[COMRAM] PTR struct RGB
  6362 ;;		 -> vals(8), 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  1    wreg      void 
  6367 ;; Registers used:
  6368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;Total ram usage:        2 bytes
  6379 ;; Hardware stack levels used: 1
  6380 ;; Hardware stack levels required when called: 4
  6381 ;; This function calls:
  6382 ;;		_color_read_Blue
  6383 ;;		_color_read_Green
  6384 ;;		_color_read_Red
  6385 ;;		_color_read_lum
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text22
  6392   005192                     __ptext22:
  6393                           	callstack 0
  6394   005192                     _readColours:
  6395                           	callstack 26
  6396   005192                     
  6397                           ;color.c: 107:     vals ->R = color_read_Red();
  6398   005192  ECA2  F02B         	call	_color_read_Red	;wreg free
  6399   005196  C00C  FFD9         	movff	readColours@vals,fsr2l
  6400   00519A  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6401   00519E  C005  FFDE         	movff	?_color_read_Red,postinc2
  6402   0051A2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6403                           
  6404                           ;color.c: 108:     vals ->B = color_read_Blue();
  6405   0051A6  ECF2  F02B         	call	_color_read_Blue	;wreg free
  6406   0051AA  EE20 F004          	lfsr	2,4
  6407   0051AE  500C               	movf	readColours@vals^0,w,c
  6408   0051B0  26D9               	addwf	fsr2l,f,c
  6409   0051B2  500D               	movf	(readColours@vals+1)^0,w,c
  6410   0051B4  22DA               	addwfc	fsr2h,f,c
  6411   0051B6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6412   0051BA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6413                           
  6414                           ;color.c: 109:     vals ->G = color_read_Green();
  6415   0051BE  ECCA  F02B         	call	_color_read_Green	;wreg free
  6416   0051C2  EE20 F002          	lfsr	2,2
  6417   0051C6  500C               	movf	readColours@vals^0,w,c
  6418   0051C8  26D9               	addwf	fsr2l,f,c
  6419   0051CA  500D               	movf	(readColours@vals+1)^0,w,c
  6420   0051CC  22DA               	addwfc	fsr2h,f,c
  6421   0051CE  C005  FFDE         	movff	?_color_read_Green,postinc2
  6422   0051D2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6423                           
  6424                           ;color.c: 110:     vals ->L = color_read_lum();
  6425   0051D6  EC7A  F02B         	call	_color_read_lum	;wreg free
  6426   0051DA  EE20 F006          	lfsr	2,6
  6427   0051DE  500C               	movf	readColours@vals^0,w,c
  6428   0051E0  26D9               	addwf	fsr2l,f,c
  6429   0051E2  500D               	movf	(readColours@vals+1)^0,w,c
  6430   0051E4  22DA               	addwfc	fsr2h,f,c
  6431   0051E6  C005  FFDE         	movff	?_color_read_lum,postinc2
  6432   0051EA  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6433   0051EE  0012               	return		;funcret
  6434   0051F0                     __end_of_readColours:
  6435                           	callstack 0
  6436                           
  6437 ;; *************** function _color_read_lum *****************
  6438 ;; Defined at:
  6439 ;;		line 49 in file "color.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  tmp             2    9[COMRAM] unsigned int 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2    4[COMRAM] unsigned int 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;Total ram usage:        7 bytes
  6458 ;; Hardware stack levels used: 1
  6459 ;; Hardware stack levels required when called: 3
  6460 ;; This function calls:
  6461 ;;		_I2C_2_Master_Read
  6462 ;;		_I2C_2_Master_RepStart
  6463 ;;		_I2C_2_Master_Start
  6464 ;;		_I2C_2_Master_Stop
  6465 ;;		_I2C_2_Master_Write
  6466 ;; This function is called by:
  6467 ;;		_readColours
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text23
  6472   0056F4                     __ptext23:
  6473                           	callstack 0
  6474   0056F4                     _color_read_lum:
  6475                           	callstack 26
  6476   0056F4                     
  6477                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6478   0056F4  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  6479                           
  6480                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6481   0056F8  0E52               	movlw	82
  6482   0056FA  ECD9  F02D         	call	_I2C_2_Master_Write
  6483                           
  6484                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6485   0056FE  0EB4               	movlw	180
  6486   005700  ECD9  F02D         	call	_I2C_2_Master_Write
  6487                           
  6488                           ;color.c: 55:  I2C_2_Master_RepStart();
  6489   005704  ECDF  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6490                           
  6491                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6492   005708  0E53               	movlw	83
  6493   00570A  ECD9  F02D         	call	_I2C_2_Master_Write
  6494                           
  6495                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6496   00570E  0E01               	movlw	1
  6497   005710  EC81  F02C         	call	_I2C_2_Master_Read
  6498   005714  6E07               	movwf	??_color_read_lum^0,c
  6499   005716  5007               	movf	??_color_read_lum^0,w,c
  6500   005718  6E0A               	movwf	color_read_lum@tmp^0,c
  6501   00571A  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6502                           
  6503                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6504   00571C  0E00               	movlw	0
  6505   00571E  EC81  F02C         	call	_I2C_2_Master_Read
  6506   005722  6E07               	movwf	??_color_read_lum^0,c
  6507   005724  5007               	movf	??_color_read_lum^0,w,c
  6508   005726  6E09               	movwf	(??_color_read_lum+2)^0,c
  6509   005728  6A08               	clrf	(??_color_read_lum+1)^0,c
  6510   00572A  500A               	movf	color_read_lum@tmp^0,w,c
  6511   00572C  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6512   00572E  6E0A               	movwf	color_read_lum@tmp^0,c
  6513   005730  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6514   005732  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6515   005734  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6516                           
  6517                           ;color.c: 59:  I2C_2_Master_Stop();
  6518   005736  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6519   00573A                     
  6520                           ;color.c: 60:  return tmp;
  6521   00573A  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6522   00573E  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6523   005742  0012               	return		;funcret
  6524   005744                     __end_of_color_read_lum:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function _color_read_Red *****************
  6528 ;; Defined at:
  6529 ;;		line 63 in file "color.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  tmp             2    9[COMRAM] unsigned int 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2    4[COMRAM] unsigned int 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;Total ram usage:        7 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; Hardware stack levels required when called: 3
  6550 ;; This function calls:
  6551 ;;		_I2C_2_Master_Read
  6552 ;;		_I2C_2_Master_RepStart
  6553 ;;		_I2C_2_Master_Start
  6554 ;;		_I2C_2_Master_Stop
  6555 ;;		_I2C_2_Master_Write
  6556 ;; This function is called by:
  6557 ;;		_readColours
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text24
  6562   005744                     __ptext24:
  6563                           	callstack 0
  6564   005744                     _color_read_Red:
  6565                           	callstack 26
  6566   005744                     
  6567                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6568   005744  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  6569                           
  6570                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6571   005748  0E52               	movlw	82
  6572   00574A  ECD9  F02D         	call	_I2C_2_Master_Write
  6573                           
  6574                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6575   00574E  0EB6               	movlw	182
  6576   005750  ECD9  F02D         	call	_I2C_2_Master_Write
  6577                           
  6578                           ;color.c: 69:  I2C_2_Master_RepStart();
  6579   005754  ECDF  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6580                           
  6581                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6582   005758  0E53               	movlw	83
  6583   00575A  ECD9  F02D         	call	_I2C_2_Master_Write
  6584                           
  6585                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  6586   00575E  0E01               	movlw	1
  6587   005760  EC81  F02C         	call	_I2C_2_Master_Read
  6588   005764  6E07               	movwf	??_color_read_Red^0,c
  6589   005766  5007               	movf	??_color_read_Red^0,w,c
  6590   005768  6E0A               	movwf	color_read_Red@tmp^0,c
  6591   00576A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6592                           
  6593                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6594   00576C  0E00               	movlw	0
  6595   00576E  EC81  F02C         	call	_I2C_2_Master_Read
  6596   005772  6E07               	movwf	??_color_read_Red^0,c
  6597   005774  5007               	movf	??_color_read_Red^0,w,c
  6598   005776  6E09               	movwf	(??_color_read_Red+2)^0,c
  6599   005778  6A08               	clrf	(??_color_read_Red+1)^0,c
  6600   00577A  500A               	movf	color_read_Red@tmp^0,w,c
  6601   00577C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6602   00577E  6E0A               	movwf	color_read_Red@tmp^0,c
  6603   005780  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6604   005782  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6605   005784  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6606                           
  6607                           ;color.c: 73:  I2C_2_Master_Stop();
  6608   005786  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6609   00578A                     
  6610                           ;color.c: 74:  return tmp;
  6611   00578A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6612   00578E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6613   005792  0012               	return		;funcret
  6614   005794                     __end_of_color_read_Red:
  6615                           	callstack 0
  6616                           
  6617 ;; *************** function _color_read_Green *****************
  6618 ;; Defined at:
  6619 ;;		line 76 in file "color.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  tmp             2    9[COMRAM] unsigned int 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  2    4[COMRAM] unsigned int 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;Total ram usage:        7 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 3
  6640 ;; This function calls:
  6641 ;;		_I2C_2_Master_Read
  6642 ;;		_I2C_2_Master_RepStart
  6643 ;;		_I2C_2_Master_Start
  6644 ;;		_I2C_2_Master_Stop
  6645 ;;		_I2C_2_Master_Write
  6646 ;; This function is called by:
  6647 ;;		_readColours
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text25
  6652   005794                     __ptext25:
  6653                           	callstack 0
  6654   005794                     _color_read_Green:
  6655                           	callstack 26
  6656   005794                     
  6657                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6658   005794  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  6659                           
  6660                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6661   005798  0E52               	movlw	82
  6662   00579A  ECD9  F02D         	call	_I2C_2_Master_Write
  6663                           
  6664                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  6665   00579E  0EB8               	movlw	184
  6666   0057A0  ECD9  F02D         	call	_I2C_2_Master_Write
  6667                           
  6668                           ;color.c: 82:  I2C_2_Master_RepStart();
  6669   0057A4  ECDF  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6670                           
  6671                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6672   0057A8  0E53               	movlw	83
  6673   0057AA  ECD9  F02D         	call	_I2C_2_Master_Write
  6674                           
  6675                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6676   0057AE  0E01               	movlw	1
  6677   0057B0  EC81  F02C         	call	_I2C_2_Master_Read
  6678   0057B4  6E07               	movwf	??_color_read_Green^0,c
  6679   0057B6  5007               	movf	??_color_read_Green^0,w,c
  6680   0057B8  6E0A               	movwf	color_read_Green@tmp^0,c
  6681   0057BA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6682                           
  6683                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6684   0057BC  0E00               	movlw	0
  6685   0057BE  EC81  F02C         	call	_I2C_2_Master_Read
  6686   0057C2  6E07               	movwf	??_color_read_Green^0,c
  6687   0057C4  5007               	movf	??_color_read_Green^0,w,c
  6688   0057C6  6E09               	movwf	(??_color_read_Green+2)^0,c
  6689   0057C8  6A08               	clrf	(??_color_read_Green+1)^0,c
  6690   0057CA  500A               	movf	color_read_Green@tmp^0,w,c
  6691   0057CC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6692   0057CE  6E0A               	movwf	color_read_Green@tmp^0,c
  6693   0057D0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6694   0057D2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6695   0057D4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6696                           
  6697                           ;color.c: 86:  I2C_2_Master_Stop();
  6698   0057D6  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6699   0057DA                     
  6700                           ;color.c: 87:  return tmp;
  6701   0057DA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6702   0057DE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6703   0057E2  0012               	return		;funcret
  6704   0057E4                     __end_of_color_read_Green:
  6705                           	callstack 0
  6706                           
  6707 ;; *************** function _color_read_Blue *****************
  6708 ;; Defined at:
  6709 ;;		line 90 in file "color.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;		None
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  tmp             2    9[COMRAM] unsigned int 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  2    4[COMRAM] unsigned int 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0, cstack
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;Total ram usage:        7 bytes
  6728 ;; Hardware stack levels used: 1
  6729 ;; Hardware stack levels required when called: 3
  6730 ;; This function calls:
  6731 ;;		_I2C_2_Master_Read
  6732 ;;		_I2C_2_Master_RepStart
  6733 ;;		_I2C_2_Master_Start
  6734 ;;		_I2C_2_Master_Stop
  6735 ;;		_I2C_2_Master_Write
  6736 ;; This function is called by:
  6737 ;;		_readColours
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text26
  6742   0057E4                     __ptext26:
  6743                           	callstack 0
  6744   0057E4                     _color_read_Blue:
  6745                           	callstack 26
  6746   0057E4                     
  6747                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  6748   0057E4  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  6749                           
  6750                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  6751   0057E8  0E52               	movlw	82
  6752   0057EA  ECD9  F02D         	call	_I2C_2_Master_Write
  6753                           
  6754                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  6755   0057EE  0EBA               	movlw	186
  6756   0057F0  ECD9  F02D         	call	_I2C_2_Master_Write
  6757                           
  6758                           ;color.c: 96:  I2C_2_Master_RepStart();
  6759   0057F4  ECDF  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6760                           
  6761                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  6762   0057F8  0E53               	movlw	83
  6763   0057FA  ECD9  F02D         	call	_I2C_2_Master_Write
  6764                           
  6765                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  6766   0057FE  0E01               	movlw	1
  6767   005800  EC81  F02C         	call	_I2C_2_Master_Read
  6768   005804  6E07               	movwf	??_color_read_Blue^0,c
  6769   005806  5007               	movf	??_color_read_Blue^0,w,c
  6770   005808  6E0A               	movwf	color_read_Blue@tmp^0,c
  6771   00580A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6772                           
  6773                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6774   00580C  0E00               	movlw	0
  6775   00580E  EC81  F02C         	call	_I2C_2_Master_Read
  6776   005812  6E07               	movwf	??_color_read_Blue^0,c
  6777   005814  5007               	movf	??_color_read_Blue^0,w,c
  6778   005816  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6779   005818  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6780   00581A  500A               	movf	color_read_Blue@tmp^0,w,c
  6781   00581C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6782   00581E  6E0A               	movwf	color_read_Blue@tmp^0,c
  6783   005820  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6784   005822  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6785   005824  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6786                           
  6787                           ;color.c: 100:  I2C_2_Master_Stop();
  6788   005826  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6789   00582A                     
  6790                           ;color.c: 101:  return tmp;
  6791   00582A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6792   00582E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6793   005832  0012               	return		;funcret
  6794   005834                     __end_of_color_read_Blue:
  6795                           	callstack 0
  6796                           
  6797 ;; *************** function _I2C_2_Master_RepStart *****************
  6798 ;; Defined at:
  6799 ;;		line 33 in file "i2c.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0, cstack
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;Total ram usage:        0 bytes
  6818 ;; Hardware stack levels used: 1
  6819 ;; Hardware stack levels required when called: 2
  6820 ;; This function calls:
  6821 ;;		_I2C_2_Master_Idle
  6822 ;; This function is called by:
  6823 ;;		_color_read_lum
  6824 ;;		_color_read_Red
  6825 ;;		_color_read_Green
  6826 ;;		_color_read_Blue
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text27
  6831   005BBE                     __ptext27:
  6832                           	callstack 0
  6833   005BBE                     _I2C_2_Master_RepStart:
  6834                           	callstack 26
  6835   005BBE                     
  6836                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6837   005BBE  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6838   005BC2                     
  6839                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6840   005BC2  010E               	movlb	14	; () banked
  6841   005BC4  83DA               	bsf	218,1,b	;volatile
  6842   005BC6                     
  6843                           ; BSR set to: 14
  6844   005BC6  0012               	return		;funcret
  6845   005BC8                     __end_of_I2C_2_Master_RepStart:
  6846                           	callstack 0
  6847                           
  6848 ;; *************** function _I2C_2_Master_Read *****************
  6849 ;; Defined at:
  6850 ;;		line 51 in file "i2c.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  ack             1    wreg     unsigned char 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  ack             1    2[COMRAM] unsigned char 
  6855 ;;  tmp             1    3[COMRAM] unsigned char 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      unsigned char 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;Total ram usage:        3 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; Hardware stack levels required when called: 2
  6872 ;; This function calls:
  6873 ;;		_I2C_2_Master_Idle
  6874 ;; This function is called by:
  6875 ;;		_color_read_lum
  6876 ;;		_color_read_Red
  6877 ;;		_color_read_Green
  6878 ;;		_color_read_Blue
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text28
  6883   005902                     __ptext28:
  6884                           	callstack 0
  6885   005902                     _I2C_2_Master_Read:
  6886                           	callstack 26
  6887                           
  6888                           ; BSR set to: 14
  6889                           ;incstack = 0
  6890                           ;I2C_2_Master_Read@ack stored from wreg
  6891   005902  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6892   005904                     
  6893                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6894   005904  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6895   005908                     
  6896                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6897   005908  010E               	movlb	14	; () banked
  6898   00590A  87DA               	bsf	218,3,b	;volatile
  6899                           
  6900                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6901   00590C  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6902   005910                     
  6903                           ;i2c.c: 57:   tmp = SSP2BUF;
  6904   005910  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6905                           
  6906                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6907   005914  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6908   005918                     
  6909                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6910   005918  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6911   00591A  B4D8               	btfsc	status,2,c
  6912   00591C  EF92  F02C         	goto	u4791
  6913   005920  EF96  F02C         	goto	u4790
  6914   005924                     u4791:
  6915   005924  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6916   005926  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6917   005928  EF97  F02C         	goto	u4808
  6918   00592C                     u4790:
  6919   00592C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6920   00592E                     u4808:
  6921   00592E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6922   005930  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6923   005932  010E               	movlb	14	; () banked
  6924   005934  51DA               	movf	218,w,b	;volatile
  6925   005936  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6926   005938  0BDF               	andlw	-33
  6927   00593A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6928   00593C  6FDA               	movwf	218,b	;volatile
  6929   00593E                     
  6930                           ; BSR set to: 14
  6931                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6932   00593E  89DA               	bsf	218,4,b	;volatile
  6933   005940                     
  6934                           ; BSR set to: 14
  6935                           ;i2c.c: 61:   return tmp;
  6936   005940  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6937   005942                     
  6938                           ; BSR set to: 14
  6939   005942  0012               	return		;funcret
  6940   005944                     __end_of_I2C_2_Master_Read:
  6941                           	callstack 0
  6942                           
  6943 ;; *************** function _initUSART4 *****************
  6944 ;; Defined at:
  6945 ;;		line 4 in file "serial.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;		None
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  1    wreg      void 
  6952 ;; Registers used:
  6953 ;;		wreg, status,2
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;Total ram usage:        0 bytes
  6964 ;; Hardware stack levels used: 1
  6965 ;; Hardware stack levels required when called: 1
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_main
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text29
  6974   005B7C                     __ptext29:
  6975                           	callstack 0
  6976   005B7C                     _initUSART4:
  6977                           	callstack 29
  6978   005B7C                     
  6979                           ;serial.c: 5:     RC0PPS = 0x12;
  6980   005B7C  0E12               	movlw	18
  6981   005B7E  010E               	movlb	14	; () banked
  6982   005B80  6F62               	movwf	98,b	;volatile
  6983                           
  6984                           ;serial.c: 6:     RX4PPS = 0x11;
  6985   005B82  0E11               	movlw	17
  6986   005B84  6F15               	movwf	21,b	;volatile
  6987   005B86                     
  6988                           ; BSR set to: 14
  6989                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  6990   005B86  97E9               	bcf	233,3,b	;volatile
  6991   005B88                     
  6992                           ; BSR set to: 14
  6993                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  6994   005B88  95E8               	bcf	232,2,b	;volatile
  6995                           
  6996                           ;serial.c: 9:     SP4BRGL = 51;
  6997   005B8A  0E33               	movlw	51
  6998   005B8C  6FE5               	movwf	229,b	;volatile
  6999                           
  7000                           ;serial.c: 10:     SP4BRGH = 0;
  7001   005B8E  0E00               	movlw	0
  7002   005B90  6FE6               	movwf	230,b	;volatile
  7003   005B92                     
  7004                           ; BSR set to: 14
  7005                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7006   005B92  89E7               	bsf	231,4,b	;volatile
  7007   005B94                     
  7008                           ; BSR set to: 14
  7009                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7010   005B94  8BE8               	bsf	232,5,b	;volatile
  7011   005B96                     
  7012                           ; BSR set to: 14
  7013                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7014   005B96  8FE7               	bsf	231,7,b	;volatile
  7015   005B98                     
  7016                           ; BSR set to: 14
  7017   005B98  0012               	return		;funcret
  7018   005B9A                     __end_of_initUSART4:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _initDCmotorsPWM *****************
  7022 ;; Defined at:
  7023 ;;		line 5 in file "dc_motor.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;Total ram usage:        2 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_main
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text30
  7052   004E50                     __ptext30:
  7053                           	callstack 0
  7054   004E50                     _initDCmotorsPWM:
  7055                           	callstack 29
  7056   004E50                     
  7057                           ;dc_motor.c: 9:     RE2PPS=0x05;
  7058   004E50  0E05               	movlw	5
  7059   004E52  010E               	movlb	14	; () banked
  7060   004E54  6F74               	movwf	116,b	;volatile
  7061                           
  7062                           ;dc_motor.c: 10:     RE4PPS=0x06;
  7063   004E56  0E06               	movlw	6
  7064   004E58  6F76               	movwf	118,b	;volatile
  7065                           
  7066                           ;dc_motor.c: 11:     RC7PPS=0x07;
  7067   004E5A  0E07               	movlw	7
  7068   004E5C  6F69               	movwf	105,b	;volatile
  7069                           
  7070                           ;dc_motor.c: 12:     RG6PPS=0x08;
  7071   004E5E  0E08               	movlw	8
  7072   004E60  6F88               	movwf	136,b	;volatile
  7073   004E62                     
  7074                           ; BSR set to: 14
  7075                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  7076   004E62  9485               	bcf	133,2,c	;volatile
  7077   004E64                     
  7078                           ; BSR set to: 14
  7079                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  7080   004E64  9885               	bcf	133,4,c	;volatile
  7081   004E66                     
  7082                           ; BSR set to: 14
  7083                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  7084   004E66  9E83               	bcf	131,7,c	;volatile
  7085   004E68                     
  7086                           ; BSR set to: 14
  7087                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  7088   004E68  9C87               	bcf	135,6,c	;volatile
  7089                           
  7090                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  7091   004E6A  50BD               	movf	189,w,c	;volatile
  7092   004E6C  0B8F               	andlw	-113
  7093   004E6E  0930               	iorlw	48
  7094   004E70  6EBD               	movwf	189,c	;volatile
  7095                           
  7096                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  7097   004E72  0EE0               	movlw	-32
  7098   004E74  16BE               	andwf	190,f,c	;volatile
  7099                           
  7100                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  7101   004E76  50BF               	movf	191,w,c	;volatile
  7102   004E78  0BF0               	andlw	-16
  7103   004E7A  0901               	iorlw	1
  7104   004E7C  6EBF               	movwf	191,c	;volatile
  7105   004E7E                     
  7106                           ; BSR set to: 14
  7107                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  7108   004E7E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7109   004E82                     
  7110                           ; BSR set to: 14
  7111                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  7112   004E82  8EBD               	bsf	189,7,c	;volatile
  7113                           
  7114                           ;dc_motor.c: 33:     CCPR1H=0;
  7115   004E84  0E00               	movlw	0
  7116   004E86  6EAA               	movwf	170,c	;volatile
  7117                           
  7118                           ;dc_motor.c: 34:     CCPR2H=0;
  7119   004E88  0E00               	movlw	0
  7120   004E8A  6EA6               	movwf	166,c	;volatile
  7121                           
  7122                           ;dc_motor.c: 35:     CCPR3H=0;
  7123   004E8C  0E00               	movlw	0
  7124   004E8E  010F               	movlb	15	; () banked
  7125   004E90  6F25               	movwf	37,b	;volatile
  7126                           
  7127                           ;dc_motor.c: 36:     CCPR4H=0;
  7128   004E92  0E00               	movlw	0
  7129   004E94  6F21               	movwf	33,b	;volatile
  7130                           
  7131                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  7132   004E96  0EFC               	movlw	-4
  7133   004E98  16AD               	andwf	173,f,c	;volatile
  7134                           
  7135                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  7136   004E9A  0EF3               	movlw	-13
  7137   004E9C  16AD               	andwf	173,f,c	;volatile
  7138                           
  7139                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  7140   004E9E  0ECF               	movlw	-49
  7141   004EA0  16AD               	andwf	173,f,c	;volatile
  7142                           
  7143                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  7144   004EA2  0E3F               	movlw	-193
  7145   004EA4  16AD               	andwf	173,f,c	;volatile
  7146   004EA6                     
  7147                           ; BSR set to: 15
  7148                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  7149   004EA6  88AB               	bsf	171,4,c	;volatile
  7150                           
  7151                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  7152   004EA8  50AB               	movf	171,w,c	;volatile
  7153   004EAA  0BF0               	andlw	-16
  7154   004EAC  090C               	iorlw	12
  7155   004EAE  6EAB               	movwf	171,c	;volatile
  7156   004EB0                     
  7157                           ; BSR set to: 15
  7158                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  7159   004EB0  8EAB               	bsf	171,7,c	;volatile
  7160   004EB2                     
  7161                           ; BSR set to: 15
  7162                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  7163   004EB2  88A7               	bsf	167,4,c	;volatile
  7164                           
  7165                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  7166   004EB4  50A7               	movf	167,w,c	;volatile
  7167   004EB6  0BF0               	andlw	-16
  7168   004EB8  090C               	iorlw	12
  7169   004EBA  6EA7               	movwf	167,c	;volatile
  7170   004EBC                     
  7171                           ; BSR set to: 15
  7172                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  7173   004EBC  8EA7               	bsf	167,7,c	;volatile
  7174   004EBE                     
  7175                           ; BSR set to: 15
  7176                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  7177   004EBE  8926               	bsf	38,4,b	;volatile
  7178                           
  7179                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  7180   004EC0  5126               	movf	38,w,b	;volatile
  7181   004EC2  0BF0               	andlw	-16
  7182   004EC4  090C               	iorlw	12
  7183   004EC6  6F26               	movwf	38,b	;volatile
  7184   004EC8                     
  7185                           ; BSR set to: 15
  7186                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  7187   004EC8  8F26               	bsf	38,7,b	;volatile
  7188   004ECA                     
  7189                           ; BSR set to: 15
  7190                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  7191   004ECA  8922               	bsf	34,4,b	;volatile
  7192                           
  7193                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  7194   004ECC  5122               	movf	34,w,b	;volatile
  7195   004ECE  0BF0               	andlw	-16
  7196   004ED0  090C               	iorlw	12
  7197   004ED2  6F22               	movwf	34,b	;volatile
  7198   004ED4                     
  7199                           ; BSR set to: 15
  7200                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  7201   004ED4  8F22               	bsf	34,7,b	;volatile
  7202   004ED6                     
  7203                           ; BSR set to: 15
  7204   004ED6  0012               	return		;funcret
  7205   004ED8                     __end_of_initDCmotorsPWM:
  7206                           	callstack 0
  7207                           
  7208 ;; *************** function _go_Home *****************
  7209 ;; Defined at:
  7210 ;;		line 3 in file "Memory.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7213 ;;		 -> WayBack(250), 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  i               2   38[COMRAM] int 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      void 
  7218 ;; Registers used:
  7219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7228 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7229 ;;Total ram usage:        5 bytes
  7230 ;; Hardware stack levels used: 1
  7231 ;; Hardware stack levels required when called: 6
  7232 ;; This function calls:
  7233 ;;		_BlueMove
  7234 ;;		_Forwardhalfblock
  7235 ;;		_GreenMove
  7236 ;;		_LightBlueMove
  7237 ;;		_OrangeMove
  7238 ;;		_RedMove
  7239 ;;		_ReversePink
  7240 ;;		_ReverseYellow
  7241 ;; This function is called by:
  7242 ;;		_main
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text31
  7247   003F7E                     __ptext31:
  7248                           	callstack 0
  7249   003F7E                     _go_Home:
  7250                           	callstack 24
  7251   003F7E                     
  7252                           ;Memory.c: 4:     int i;;Memory.c: 5:     for (i = move_count; i >= 0; i--){
  7253   003F7E  C114  F027         	movff	_move_count,go_Home@i	;volatile
  7254   003F82  C115  F028         	movff	_move_count+1,go_Home@i+1	;volatile
  7255   003F86                     l5319:
  7256   003F86  BE28               	btfsc	(go_Home@i+1)^0,7,c
  7257   003F88  EFCA  F01F         	goto	u5340
  7258   003F8C  EFC8  F01F         	goto	u5341
  7259   003F90                     u5341:
  7260   003F90  EFCC  F01F         	goto	l5323
  7261   003F94                     u5340:
  7262   003F94  EFA7  F020         	goto	l611
  7263   003F98                     l5323:
  7264                           
  7265                           ;Memory.c: 6:         if (WayBack[i]==0){
  7266   003F98  5027               	movf	go_Home@i^0,w,c
  7267   003F9A  2424               	addwf	go_Home@WayBack^0,w,c
  7268   003F9C  6ED9               	movwf	fsr2l,c
  7269   003F9E  5028               	movf	(go_Home@i+1)^0,w,c
  7270   003FA0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7271   003FA2  6EDA               	movwf	fsr2h,c
  7272   003FA4  50DF               	movf	indf2,w,c
  7273   003FA6  A4D8               	btfss	status,2,c
  7274   003FA8  EFD8  F01F         	goto	u5351
  7275   003FAC  EFDA  F01F         	goto	u5350
  7276   003FB0                     u5351:
  7277   003FB0  EFE6  F01F         	goto	l5327
  7278   003FB4                     u5350:
  7279   003FB4                     
  7280                           ;Memory.c: 7:             Forwardhalfblock(&motorL,&motorR);
  7281   003FB4  0E7B               	movlw	low _motorL
  7282   003FB6  6E1A               	movwf	Forwardhalfblock@mL^0,c
  7283   003FB8  0E01               	movlw	high _motorL
  7284   003FBA  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  7285   003FBC  0E72               	movlw	low _motorR
  7286   003FBE  6E1C               	movwf	Forwardhalfblock@mR^0,c
  7287   003FC0  0E01               	movlw	high _motorR
  7288   003FC2  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  7289   003FC4  EC52  F029         	call	_Forwardhalfblock	;wreg free
  7290                           
  7291                           ;Memory.c: 8:         }
  7292   003FC8  EFA2  F020         	goto	l5355
  7293   003FCC                     l5327:
  7294   003FCC  5027               	movf	go_Home@i^0,w,c
  7295   003FCE  2424               	addwf	go_Home@WayBack^0,w,c
  7296   003FD0  6ED9               	movwf	fsr2l,c
  7297   003FD2  5028               	movf	(go_Home@i+1)^0,w,c
  7298   003FD4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7299   003FD6  6EDA               	movwf	fsr2h,c
  7300   003FD8  04DE               	decf	postinc2,w,c
  7301   003FDA  A4D8               	btfss	status,2,c
  7302   003FDC  EFF2  F01F         	goto	u5361
  7303   003FE0  EFF4  F01F         	goto	u5360
  7304   003FE4                     u5361:
  7305   003FE4  EF00  F020         	goto	l5331
  7306   003FE8                     u5360:
  7307   003FE8                     
  7308                           ;Memory.c: 10:             GreenMove(&motorL, &motorR);
  7309   003FE8  0E7B               	movlw	low _motorL
  7310   003FEA  6E20               	movwf	GreenMove@mL^0,c
  7311   003FEC  0E01               	movlw	high _motorL
  7312   003FEE  6E21               	movwf	(GreenMove@mL+1)^0,c
  7313   003FF0  0E72               	movlw	low _motorR
  7314   003FF2  6E22               	movwf	GreenMove@mR^0,c
  7315   003FF4  0E01               	movlw	high _motorR
  7316   003FF6  6E23               	movwf	(GreenMove@mR+1)^0,c
  7317   003FF8  EC1F  F02D         	call	_GreenMove	;wreg free
  7318                           
  7319                           ;Memory.c: 11:         }
  7320   003FFC  EFA2  F020         	goto	l5355
  7321   004000                     l5331:
  7322   004000  5027               	movf	go_Home@i^0,w,c
  7323   004002  2424               	addwf	go_Home@WayBack^0,w,c
  7324   004004  6ED9               	movwf	fsr2l,c
  7325   004006  5028               	movf	(go_Home@i+1)^0,w,c
  7326   004008  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7327   00400A  6EDA               	movwf	fsr2h,c
  7328   00400C  0E02               	movlw	2
  7329   00400E  18DE               	xorwf	postinc2,w,c
  7330   004010  A4D8               	btfss	status,2,c
  7331   004012  EF0D  F020         	goto	u5371
  7332   004016  EF0F  F020         	goto	u5370
  7333   00401A                     u5371:
  7334   00401A  EF1B  F020         	goto	l5335
  7335   00401E                     u5370:
  7336   00401E                     
  7337                           ;Memory.c: 13:             LightBlueMove(&motorL, &motorR);
  7338   00401E  0E7B               	movlw	low _motorL
  7339   004020  6E20               	movwf	LightBlueMove@mL^0,c
  7340   004022  0E01               	movlw	high _motorL
  7341   004024  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7342   004026  0E72               	movlw	low _motorR
  7343   004028  6E22               	movwf	LightBlueMove@mR^0,c
  7344   00402A  0E01               	movlw	high _motorR
  7345   00402C  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7346   00402E  ECAE  F02A         	call	_LightBlueMove	;wreg free
  7347                           
  7348                           ;Memory.c: 14:         }
  7349   004032  EFA2  F020         	goto	l5355
  7350   004036                     l5335:
  7351   004036  5027               	movf	go_Home@i^0,w,c
  7352   004038  2424               	addwf	go_Home@WayBack^0,w,c
  7353   00403A  6ED9               	movwf	fsr2l,c
  7354   00403C  5028               	movf	(go_Home@i+1)^0,w,c
  7355   00403E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7356   004040  6EDA               	movwf	fsr2h,c
  7357   004042  0E03               	movlw	3
  7358   004044  18DE               	xorwf	postinc2,w,c
  7359   004046  A4D8               	btfss	status,2,c
  7360   004048  EF28  F020         	goto	u5381
  7361   00404C  EF2A  F020         	goto	u5380
  7362   004050                     u5381:
  7363   004050  EF36  F020         	goto	l5339
  7364   004054                     u5380:
  7365   004054                     
  7366                           ;Memory.c: 16:             ReverseYellow(&motorL, &motorR);
  7367   004054  0E7B               	movlw	low _motorL
  7368   004056  6E20               	movwf	ReverseYellow@mL^0,c
  7369   004058  0E01               	movlw	high _motorL
  7370   00405A  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7371   00405C  0E72               	movlw	low _motorR
  7372   00405E  6E22               	movwf	ReverseYellow@mR^0,c
  7373   004060  0E01               	movlw	high _motorR
  7374   004062  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7375   004064  ECC2  F02C         	call	_ReverseYellow	;wreg free
  7376                           
  7377                           ;Memory.c: 17:         }
  7378   004068  EFA2  F020         	goto	l5355
  7379   00406C                     l5339:
  7380   00406C  5027               	movf	go_Home@i^0,w,c
  7381   00406E  2424               	addwf	go_Home@WayBack^0,w,c
  7382   004070  6ED9               	movwf	fsr2l,c
  7383   004072  5028               	movf	(go_Home@i+1)^0,w,c
  7384   004074  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7385   004076  6EDA               	movwf	fsr2h,c
  7386   004078  0E04               	movlw	4
  7387   00407A  18DE               	xorwf	postinc2,w,c
  7388   00407C  A4D8               	btfss	status,2,c
  7389   00407E  EF43  F020         	goto	u5391
  7390   004082  EF45  F020         	goto	u5390
  7391   004086                     u5391:
  7392   004086  EF51  F020         	goto	l5343
  7393   00408A                     u5390:
  7394   00408A                     
  7395                           ;Memory.c: 19:             BlueMove(&motorL, &motorR);
  7396   00408A  0E7B               	movlw	low _motorL
  7397   00408C  6E20               	movwf	BlueMove@mL^0,c
  7398   00408E  0E01               	movlw	high _motorL
  7399   004090  6E21               	movwf	(BlueMove@mL+1)^0,c
  7400   004092  0E72               	movlw	low _motorR
  7401   004094  6E22               	movwf	BlueMove@mR^0,c
  7402   004096  0E01               	movlw	high _motorR
  7403   004098  6E23               	movwf	(BlueMove@mR+1)^0,c
  7404   00409A  EC96  F028         	call	_BlueMove	;wreg free
  7405                           
  7406                           ;Memory.c: 20:         }
  7407   00409E  EFA2  F020         	goto	l5355
  7408   0040A2                     l5343:
  7409   0040A2  5027               	movf	go_Home@i^0,w,c
  7410   0040A4  2424               	addwf	go_Home@WayBack^0,w,c
  7411   0040A6  6ED9               	movwf	fsr2l,c
  7412   0040A8  5028               	movf	(go_Home@i+1)^0,w,c
  7413   0040AA  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7414   0040AC  6EDA               	movwf	fsr2h,c
  7415   0040AE  0E05               	movlw	5
  7416   0040B0  18DE               	xorwf	postinc2,w,c
  7417   0040B2  A4D8               	btfss	status,2,c
  7418   0040B4  EF5E  F020         	goto	u5401
  7419   0040B8  EF60  F020         	goto	u5400
  7420   0040BC                     u5401:
  7421   0040BC  EF6C  F020         	goto	l5347
  7422   0040C0                     u5400:
  7423   0040C0                     
  7424                           ;Memory.c: 22:             RedMove(&motorL, &motorR);
  7425   0040C0  0E7B               	movlw	low _motorL
  7426   0040C2  6E20               	movwf	RedMove@mL^0,c
  7427   0040C4  0E01               	movlw	high _motorL
  7428   0040C6  6E21               	movwf	(RedMove@mL+1)^0,c
  7429   0040C8  0E72               	movlw	low _motorR
  7430   0040CA  6E22               	movwf	RedMove@mR^0,c
  7431   0040CC  0E01               	movlw	high _motorR
  7432   0040CE  6E23               	movwf	(RedMove@mR+1)^0,c
  7433   0040D0  EC00  F02D         	call	_RedMove	;wreg free
  7434                           
  7435                           ;Memory.c: 23:         }
  7436   0040D4  EFA2  F020         	goto	l5355
  7437   0040D8                     l5347:
  7438   0040D8  5027               	movf	go_Home@i^0,w,c
  7439   0040DA  2424               	addwf	go_Home@WayBack^0,w,c
  7440   0040DC  6ED9               	movwf	fsr2l,c
  7441   0040DE  5028               	movf	(go_Home@i+1)^0,w,c
  7442   0040E0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7443   0040E2  6EDA               	movwf	fsr2h,c
  7444   0040E4  0E06               	movlw	6
  7445   0040E6  18DE               	xorwf	postinc2,w,c
  7446   0040E8  A4D8               	btfss	status,2,c
  7447   0040EA  EF79  F020         	goto	u5411
  7448   0040EE  EF7B  F020         	goto	u5410
  7449   0040F2                     u5411:
  7450   0040F2  EF87  F020         	goto	l5351
  7451   0040F6                     u5410:
  7452   0040F6                     
  7453                           ;Memory.c: 25:             OrangeMove(&motorL, &motorR);
  7454   0040F6  0E7B               	movlw	low _motorL
  7455   0040F8  6E20               	movwf	OrangeMove@mL^0,c
  7456   0040FA  0E01               	movlw	high _motorL
  7457   0040FC  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7458   0040FE  0E72               	movlw	low _motorR
  7459   004100  6E22               	movwf	OrangeMove@mR^0,c
  7460   004102  0E01               	movlw	high _motorR
  7461   004104  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7462   004106  EC85  F02A         	call	_OrangeMove	;wreg free
  7463                           
  7464                           ;Memory.c: 26:         }
  7465   00410A  EFA2  F020         	goto	l5355
  7466   00410E                     l5351:
  7467   00410E  5027               	movf	go_Home@i^0,w,c
  7468   004110  2424               	addwf	go_Home@WayBack^0,w,c
  7469   004112  6ED9               	movwf	fsr2l,c
  7470   004114  5028               	movf	(go_Home@i+1)^0,w,c
  7471   004116  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7472   004118  6EDA               	movwf	fsr2h,c
  7473   00411A  0E07               	movlw	7
  7474   00411C  18DE               	xorwf	postinc2,w,c
  7475   00411E  A4D8               	btfss	status,2,c
  7476   004120  EF94  F020         	goto	u5421
  7477   004124  EF96  F020         	goto	u5420
  7478   004128                     u5421:
  7479   004128  EFA2  F020         	goto	l605
  7480   00412C                     u5420:
  7481   00412C                     
  7482                           ;Memory.c: 28:             ReversePink(&motorL, &motorR);
  7483   00412C  0E7B               	movlw	low _motorL
  7484   00412E  6E20               	movwf	ReversePink@mL^0,c
  7485   004130  0E01               	movlw	high _motorL
  7486   004132  6E21               	movwf	(ReversePink@mL+1)^0,c
  7487   004134  0E72               	movlw	low _motorR
  7488   004136  6E22               	movwf	ReversePink@mR^0,c
  7489   004138  0E01               	movlw	high _motorR
  7490   00413A  6E23               	movwf	(ReversePink@mR+1)^0,c
  7491   00413C  ECE1  F02C         	call	_ReversePink	;wreg free
  7492   004140  EFA2  F020         	goto	l5355
  7493   004144                     l605:
  7494   004144                     l5355:
  7495                           
  7496                           ;Memory.c: 32:   }
  7497   004144  0627               	decf	go_Home@i^0,f,c
  7498   004146  A0D8               	btfss	status,0,c
  7499   004148  0628               	decf	(go_Home@i+1)^0,f,c
  7500   00414A  EFC3  F01F         	goto	l5319
  7501   00414E                     l611:
  7502   00414E  0012               	return		;funcret
  7503   004150                     __end_of_go_Home:
  7504                           	callstack 0
  7505                           
  7506 ;; *************** function _ReverseYellow *****************
  7507 ;; Defined at:
  7508 ;;		line 304 in file "dc_motor.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7511 ;;		 -> motorL(9), 
  7512 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7513 ;;		 -> motorR(9), 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;Total ram usage:        4 bytes
  7530 ;; Hardware stack levels used: 1
  7531 ;; Hardware stack levels required when called: 5
  7532 ;; This function calls:
  7533 ;;		_ForwardOneBlock
  7534 ;;		_turnLeft45
  7535 ;; This function is called by:
  7536 ;;		_go_Home
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text32
  7541   005984                     __ptext32:
  7542                           	callstack 0
  7543   005984                     _ReverseYellow:
  7544                           	callstack 24
  7545   005984                     
  7546                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  7547   005984  0E7B               	movlw	low _motorL
  7548   005986  6E1A               	movwf	turnLeft45@mL^0,c
  7549   005988  0E01               	movlw	high _motorL
  7550   00598A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7551   00598C  0E72               	movlw	low _motorR
  7552   00598E  6E1C               	movwf	turnLeft45@mR^0,c
  7553   005990  0E01               	movlw	high _motorR
  7554   005992  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7555   005994  EC05  F02A         	call	_turnLeft45	;wreg free
  7556                           
  7557                           ;dc_motor.c: 306:     turnLeft45(&motorL, &motorR);
  7558   005998  0E7B               	movlw	low _motorL
  7559   00599A  6E1A               	movwf	turnLeft45@mL^0,c
  7560   00599C  0E01               	movlw	high _motorL
  7561   00599E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7562   0059A0  0E72               	movlw	low _motorR
  7563   0059A2  6E1C               	movwf	turnLeft45@mR^0,c
  7564   0059A4  0E01               	movlw	high _motorR
  7565   0059A6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7566   0059A8  EC05  F02A         	call	_turnLeft45	;wreg free
  7567                           
  7568                           ;dc_motor.c: 307:     ForwardOneBlock(&motorL, &motorR);
  7569   0059AC  0E7B               	movlw	low _motorL
  7570   0059AE  6E1A               	movwf	ForwardOneBlock@mL^0,c
  7571   0059B0  0E01               	movlw	high _motorL
  7572   0059B2  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  7573   0059B4  0E72               	movlw	low _motorR
  7574   0059B6  6E1C               	movwf	ForwardOneBlock@mR^0,c
  7575   0059B8  0E01               	movlw	high _motorR
  7576   0059BA  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  7577   0059BC  EC25  F029         	call	_ForwardOneBlock	;wreg free
  7578   0059C0  0012               	return		;funcret
  7579   0059C2                     __end_of_ReverseYellow:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _ReversePink *****************
  7583 ;; Defined at:
  7584 ;;		line 309 in file "dc_motor.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7587 ;;		 -> motorL(9), 
  7588 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7589 ;;		 -> motorR(9), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;Total ram usage:        4 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 5
  7608 ;; This function calls:
  7609 ;;		_ForwardOneBlock
  7610 ;;		_turnRight45
  7611 ;; This function is called by:
  7612 ;;		_go_Home
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text33
  7617   0059C2                     __ptext33:
  7618                           	callstack 0
  7619   0059C2                     _ReversePink:
  7620                           	callstack 24
  7621   0059C2                     
  7622                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  7623   0059C2  0E7B               	movlw	low _motorL
  7624   0059C4  6E1A               	movwf	turnRight45@mL^0,c
  7625   0059C6  0E01               	movlw	high _motorL
  7626   0059C8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7627   0059CA  0E72               	movlw	low _motorR
  7628   0059CC  6E1C               	movwf	turnRight45@mR^0,c
  7629   0059CE  0E01               	movlw	high _motorR
  7630   0059D0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7631   0059D2  ECD9  F029         	call	_turnRight45	;wreg free
  7632                           
  7633                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  7634   0059D6  0E7B               	movlw	low _motorL
  7635   0059D8  6E1A               	movwf	turnRight45@mL^0,c
  7636   0059DA  0E01               	movlw	high _motorL
  7637   0059DC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7638   0059DE  0E72               	movlw	low _motorR
  7639   0059E0  6E1C               	movwf	turnRight45@mR^0,c
  7640   0059E2  0E01               	movlw	high _motorR
  7641   0059E4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7642   0059E6  ECD9  F029         	call	_turnRight45	;wreg free
  7643                           
  7644                           ;dc_motor.c: 312:     ForwardOneBlock(&motorL, &motorR);
  7645   0059EA  0E7B               	movlw	low _motorL
  7646   0059EC  6E1A               	movwf	ForwardOneBlock@mL^0,c
  7647   0059EE  0E01               	movlw	high _motorL
  7648   0059F0  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  7649   0059F2  0E72               	movlw	low _motorR
  7650   0059F4  6E1C               	movwf	ForwardOneBlock@mR^0,c
  7651   0059F6  0E01               	movlw	high _motorR
  7652   0059F8  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  7653   0059FA  EC25  F029         	call	_ForwardOneBlock	;wreg free
  7654   0059FE  0012               	return		;funcret
  7655   005A00                     __end_of_ReversePink:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _ForwardOneBlock *****************
  7659 ;; Defined at:
  7660 ;;		line 208 in file "dc_motor.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7663 ;;		 -> motorL(9), 
  7664 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7665 ;;		 -> motorR(9), 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;Total ram usage:        6 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; Hardware stack levels required when called: 4
  7684 ;; This function calls:
  7685 ;;		_fullSpeedAhead
  7686 ;;		_stop
  7687 ;; This function is called by:
  7688 ;;		_ReverseYellow
  7689 ;;		_ReversePink
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           	psect	text34
  7694   00524A                     __ptext34:
  7695                           	callstack 0
  7696   00524A                     _ForwardOneBlock:
  7697                           	callstack 24
  7698   00524A                     
  7699                           ;dc_motor.c: 209:     fullSpeedAhead(mL,mR);
  7700   00524A  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  7701   00524E  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  7702   005252  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  7703   005256  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  7704   00525A  EC3B  F026         	call	_fullSpeedAhead	;wreg free
  7705   00525E                     
  7706                           ;dc_motor.c: 210:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7707   00525E  0E52               	movlw	82
  7708   005260  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  7709   005262  0E2B               	movlw	43
  7710   005264  6E1E               	movwf	??_ForwardOneBlock^0,c
  7711   005266  0E00               	movlw	0
  7712   005268                     u5657:
  7713   005268  2EE8               	decfsz	wreg,f,c
  7714   00526A  D7FE               	bra	u5657
  7715   00526C  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  7716   00526E  D7FC               	bra	u5657
  7717   005270  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7718   005272  D7FA               	bra	u5657
  7719   005274  D000               	nop2	
  7720   005276                     
  7721                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7722   005276  0E7B               	movlw	low _motorL
  7723   005278  6E14               	movwf	stop@mL^0,c
  7724   00527A  0E01               	movlw	high _motorL
  7725   00527C  6E15               	movwf	(stop@mL+1)^0,c
  7726   00527E  0E72               	movlw	low _motorR
  7727   005280  6E16               	movwf	stop@mR^0,c
  7728   005282  0E01               	movlw	high _motorR
  7729   005284  6E17               	movwf	(stop@mR+1)^0,c
  7730   005286  ECAD  F027         	call	_stop	;wreg free
  7731                           
  7732                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7733   00528A  0E52               	movlw	82
  7734   00528C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  7735   00528E  0E2B               	movlw	43
  7736   005290  6E1E               	movwf	??_ForwardOneBlock^0,c
  7737   005292  0E00               	movlw	0
  7738   005294                     u5667:
  7739   005294  2EE8               	decfsz	wreg,f,c
  7740   005296  D7FE               	bra	u5667
  7741   005298  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  7742   00529A  D7FC               	bra	u5667
  7743   00529C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7744   00529E  D7FA               	bra	u5667
  7745   0052A0  D000               	nop2	
  7746   0052A2  0012               	return		;funcret
  7747   0052A4                     __end_of_ForwardOneBlock:
  7748                           	callstack 0
  7749                           
  7750 ;; *************** function _RedMove *****************
  7751 ;; Defined at:
  7752 ;;		line 232 in file "dc_motor.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7755 ;;		 -> motorL(9), 
  7756 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7757 ;;		 -> motorR(9), 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;Total ram usage:        4 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; Hardware stack levels required when called: 5
  7776 ;; This function calls:
  7777 ;;		_reverseDetect
  7778 ;;		_turnRight45
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;;		_go_Home
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text35
  7786   005A00                     __ptext35:
  7787                           	callstack 0
  7788   005A00                     _RedMove:
  7789                           	callstack 24
  7790   005A00                     
  7791                           ;dc_motor.c: 233:     reverseDetect(&motorL, &motorR);
  7792   005A00  0E7B               	movlw	low _motorL
  7793   005A02  6E1A               	movwf	reverseDetect@mL^0,c
  7794   005A04  0E01               	movlw	high _motorL
  7795   005A06  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7796   005A08  0E72               	movlw	low _motorR
  7797   005A0A  6E1C               	movwf	reverseDetect@mR^0,c
  7798   005A0C  0E01               	movlw	high _motorR
  7799   005A0E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7800   005A10  ECAC  F029         	call	_reverseDetect	;wreg free
  7801                           
  7802                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  7803   005A14  0E7B               	movlw	low _motorL
  7804   005A16  6E1A               	movwf	turnRight45@mL^0,c
  7805   005A18  0E01               	movlw	high _motorL
  7806   005A1A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7807   005A1C  0E72               	movlw	low _motorR
  7808   005A1E  6E1C               	movwf	turnRight45@mR^0,c
  7809   005A20  0E01               	movlw	high _motorR
  7810   005A22  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7811   005A24  ECD9  F029         	call	_turnRight45	;wreg free
  7812                           
  7813                           ;dc_motor.c: 236:     turnRight45(&motorL, &motorR);
  7814   005A28  0E7B               	movlw	low _motorL
  7815   005A2A  6E1A               	movwf	turnRight45@mL^0,c
  7816   005A2C  0E01               	movlw	high _motorL
  7817   005A2E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7818   005A30  0E72               	movlw	low _motorR
  7819   005A32  6E1C               	movwf	turnRight45@mR^0,c
  7820   005A34  0E01               	movlw	high _motorR
  7821   005A36  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7822   005A38  ECD9  F029         	call	_turnRight45	;wreg free
  7823   005A3C  0012               	return		;funcret
  7824   005A3E                     __end_of_RedMove:
  7825                           	callstack 0
  7826                           
  7827 ;; *************** function _OrangeMove *****************
  7828 ;; Defined at:
  7829 ;;		line 278 in file "dc_motor.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7832 ;;		 -> motorL(9), 
  7833 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7834 ;;		 -> motorR(9), 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7850 ;;Total ram usage:        4 bytes
  7851 ;; Hardware stack levels used: 1
  7852 ;; Hardware stack levels required when called: 5
  7853 ;; This function calls:
  7854 ;;		_reverseDetect
  7855 ;;		_turnRight45
  7856 ;; This function is called by:
  7857 ;;		_main
  7858 ;;		_go_Home
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text36
  7863   00550A                     __ptext36:
  7864                           	callstack 0
  7865   00550A                     _OrangeMove:
  7866                           	callstack 24
  7867   00550A                     
  7868                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  7869   00550A  0E7B               	movlw	low _motorL
  7870   00550C  6E1A               	movwf	reverseDetect@mL^0,c
  7871   00550E  0E01               	movlw	high _motorL
  7872   005510  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7873   005512  0E72               	movlw	low _motorR
  7874   005514  6E1C               	movwf	reverseDetect@mR^0,c
  7875   005516  0E01               	movlw	high _motorR
  7876   005518  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7877   00551A  ECAC  F029         	call	_reverseDetect	;wreg free
  7878                           
  7879                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  7880   00551E  0E7B               	movlw	low _motorL
  7881   005520  6E1A               	movwf	turnRight45@mL^0,c
  7882   005522  0E01               	movlw	high _motorL
  7883   005524  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7884   005526  0E72               	movlw	low _motorR
  7885   005528  6E1C               	movwf	turnRight45@mR^0,c
  7886   00552A  0E01               	movlw	high _motorR
  7887   00552C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7888   00552E  ECD9  F029         	call	_turnRight45	;wreg free
  7889                           
  7890                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  7891   005532  0E7B               	movlw	low _motorL
  7892   005534  6E1A               	movwf	turnRight45@mL^0,c
  7893   005536  0E01               	movlw	high _motorL
  7894   005538  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7895   00553A  0E72               	movlw	low _motorR
  7896   00553C  6E1C               	movwf	turnRight45@mR^0,c
  7897   00553E  0E01               	movlw	high _motorR
  7898   005540  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7899   005542  ECD9  F029         	call	_turnRight45	;wreg free
  7900                           
  7901                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  7902   005546  0E7B               	movlw	low _motorL
  7903   005548  6E1A               	movwf	turnRight45@mL^0,c
  7904   00554A  0E01               	movlw	high _motorL
  7905   00554C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7906   00554E  0E72               	movlw	low _motorR
  7907   005550  6E1C               	movwf	turnRight45@mR^0,c
  7908   005552  0E01               	movlw	high _motorR
  7909   005554  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7910   005556  ECD9  F029         	call	_turnRight45	;wreg free
  7911   00555A  0012               	return		;funcret
  7912   00555C                     __end_of_OrangeMove:
  7913                           	callstack 0
  7914                           
  7915 ;; *************** function _LightBlueMove *****************
  7916 ;; Defined at:
  7917 ;;		line 287 in file "dc_motor.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7920 ;;		 -> motorL(9), 
  7921 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7922 ;;		 -> motorR(9), 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;		None
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;Total ram usage:        4 bytes
  7939 ;; Hardware stack levels used: 1
  7940 ;; Hardware stack levels required when called: 5
  7941 ;; This function calls:
  7942 ;;		_reverseDetect
  7943 ;;		_turnLeft45
  7944 ;; This function is called by:
  7945 ;;		_main
  7946 ;;		_go_Home
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text37
  7951   00555C                     __ptext37:
  7952                           	callstack 0
  7953   00555C                     _LightBlueMove:
  7954                           	callstack 24
  7955   00555C                     
  7956                           ;dc_motor.c: 288:     reverseDetect(&motorL, &motorR);
  7957   00555C  0E7B               	movlw	low _motorL
  7958   00555E  6E1A               	movwf	reverseDetect@mL^0,c
  7959   005560  0E01               	movlw	high _motorL
  7960   005562  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7961   005564  0E72               	movlw	low _motorR
  7962   005566  6E1C               	movwf	reverseDetect@mR^0,c
  7963   005568  0E01               	movlw	high _motorR
  7964   00556A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7965   00556C  ECAC  F029         	call	_reverseDetect	;wreg free
  7966                           
  7967                           ;dc_motor.c: 290:     turnLeft45(&motorL, &motorR);
  7968   005570  0E7B               	movlw	low _motorL
  7969   005572  6E1A               	movwf	turnLeft45@mL^0,c
  7970   005574  0E01               	movlw	high _motorL
  7971   005576  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7972   005578  0E72               	movlw	low _motorR
  7973   00557A  6E1C               	movwf	turnLeft45@mR^0,c
  7974   00557C  0E01               	movlw	high _motorR
  7975   00557E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7976   005580  EC05  F02A         	call	_turnLeft45	;wreg free
  7977                           
  7978                           ;dc_motor.c: 291:     turnLeft45(&motorL, &motorR);
  7979   005584  0E7B               	movlw	low _motorL
  7980   005586  6E1A               	movwf	turnLeft45@mL^0,c
  7981   005588  0E01               	movlw	high _motorL
  7982   00558A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7983   00558C  0E72               	movlw	low _motorR
  7984   00558E  6E1C               	movwf	turnLeft45@mR^0,c
  7985   005590  0E01               	movlw	high _motorR
  7986   005592  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7987   005594  EC05  F02A         	call	_turnLeft45	;wreg free
  7988                           
  7989                           ;dc_motor.c: 292:     turnLeft45(&motorL, &motorR);
  7990   005598  0E7B               	movlw	low _motorL
  7991   00559A  6E1A               	movwf	turnLeft45@mL^0,c
  7992   00559C  0E01               	movlw	high _motorL
  7993   00559E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7994   0055A0  0E72               	movlw	low _motorR
  7995   0055A2  6E1C               	movwf	turnLeft45@mR^0,c
  7996   0055A4  0E01               	movlw	high _motorR
  7997   0055A6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7998   0055A8  EC05  F02A         	call	_turnLeft45	;wreg free
  7999   0055AC  0012               	return		;funcret
  8000   0055AE                     __end_of_LightBlueMove:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function _GreenMove *****************
  8004 ;; Defined at:
  8005 ;;		line 240 in file "dc_motor.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8008 ;;		 -> motorL(9), 
  8009 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8010 ;;		 -> motorR(9), 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;		None
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      void 
  8015 ;; Registers used:
  8016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8026 ;;Total ram usage:        4 bytes
  8027 ;; Hardware stack levels used: 1
  8028 ;; Hardware stack levels required when called: 5
  8029 ;; This function calls:
  8030 ;;		_reverseDetect
  8031 ;;		_turnLeft45
  8032 ;; This function is called by:
  8033 ;;		_main
  8034 ;;		_go_Home
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text38
  8039   005A3E                     __ptext38:
  8040                           	callstack 0
  8041   005A3E                     _GreenMove:
  8042                           	callstack 24
  8043   005A3E                     
  8044                           ;dc_motor.c: 241:     reverseDetect(&motorL, &motorR);
  8045   005A3E  0E7B               	movlw	low _motorL
  8046   005A40  6E1A               	movwf	reverseDetect@mL^0,c
  8047   005A42  0E01               	movlw	high _motorL
  8048   005A44  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8049   005A46  0E72               	movlw	low _motorR
  8050   005A48  6E1C               	movwf	reverseDetect@mR^0,c
  8051   005A4A  0E01               	movlw	high _motorR
  8052   005A4C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8053   005A4E  ECAC  F029         	call	_reverseDetect	;wreg free
  8054                           
  8055                           ;dc_motor.c: 243:     turnLeft45(&motorL, &motorR);
  8056   005A52  0E7B               	movlw	low _motorL
  8057   005A54  6E1A               	movwf	turnLeft45@mL^0,c
  8058   005A56  0E01               	movlw	high _motorL
  8059   005A58  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8060   005A5A  0E72               	movlw	low _motorR
  8061   005A5C  6E1C               	movwf	turnLeft45@mR^0,c
  8062   005A5E  0E01               	movlw	high _motorR
  8063   005A60  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8064   005A62  EC05  F02A         	call	_turnLeft45	;wreg free
  8065                           
  8066                           ;dc_motor.c: 244:     turnLeft45(&motorL, &motorR);
  8067   005A66  0E7B               	movlw	low _motorL
  8068   005A68  6E1A               	movwf	turnLeft45@mL^0,c
  8069   005A6A  0E01               	movlw	high _motorL
  8070   005A6C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8071   005A6E  0E72               	movlw	low _motorR
  8072   005A70  6E1C               	movwf	turnLeft45@mR^0,c
  8073   005A72  0E01               	movlw	high _motorR
  8074   005A74  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8075   005A76  EC05  F02A         	call	_turnLeft45	;wreg free
  8076   005A7A  0012               	return		;funcret
  8077   005A7C                     __end_of_GreenMove:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function _Forwardhalfblock *****************
  8081 ;; Defined at:
  8082 ;;		line 215 in file "dc_motor.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8085 ;;		 -> motorL(9), 
  8086 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8087 ;;		 -> motorR(9), 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;		None
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  1    wreg      void 
  8092 ;; Registers used:
  8093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8102 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8103 ;;Total ram usage:        6 bytes
  8104 ;; Hardware stack levels used: 1
  8105 ;; Hardware stack levels required when called: 4
  8106 ;; This function calls:
  8107 ;;		_fullSpeedAhead
  8108 ;;		_stop
  8109 ;; This function is called by:
  8110 ;;		_main
  8111 ;;		_go_Home
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text39
  8116   0052A4                     __ptext39:
  8117                           	callstack 0
  8118   0052A4                     _Forwardhalfblock:
  8119                           	callstack 25
  8120   0052A4                     
  8121                           ;dc_motor.c: 216:     fullSpeedAhead(mL,mR);
  8122   0052A4  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8123   0052A8  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8124   0052AC  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8125   0052B0  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8126   0052B4  EC3B  F026         	call	_fullSpeedAhead	;wreg free
  8127   0052B8                     
  8128                           ;dc_motor.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8129   0052B8  0E29               	movlw	41
  8130   0052BA  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8131   0052BC  0E96               	movlw	150
  8132   0052BE  6E1E               	movwf	??_Forwardhalfblock^0,c
  8133   0052C0  0E7F               	movlw	127
  8134   0052C2                     u5677:
  8135   0052C2  2EE8               	decfsz	wreg,f,c
  8136   0052C4  D7FE               	bra	u5677
  8137   0052C6  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8138   0052C8  D7FC               	bra	u5677
  8139   0052CA  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8140   0052CC  D7FA               	bra	u5677
  8141   0052CE  F000               	nop	
  8142   0052D0                     
  8143                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  8144   0052D0  0E7B               	movlw	low _motorL
  8145   0052D2  6E14               	movwf	stop@mL^0,c
  8146   0052D4  0E01               	movlw	high _motorL
  8147   0052D6  6E15               	movwf	(stop@mL+1)^0,c
  8148   0052D8  0E72               	movlw	low _motorR
  8149   0052DA  6E16               	movwf	stop@mR^0,c
  8150   0052DC  0E01               	movlw	high _motorR
  8151   0052DE  6E17               	movwf	(stop@mR+1)^0,c
  8152   0052E0  ECAD  F027         	call	_stop	;wreg free
  8153                           
  8154                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8155   0052E4  0E52               	movlw	82
  8156   0052E6  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8157   0052E8  0E2B               	movlw	43
  8158   0052EA  6E1E               	movwf	??_Forwardhalfblock^0,c
  8159   0052EC  0E00               	movlw	0
  8160   0052EE                     u5687:
  8161   0052EE  2EE8               	decfsz	wreg,f,c
  8162   0052F0  D7FE               	bra	u5687
  8163   0052F2  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8164   0052F4  D7FC               	bra	u5687
  8165   0052F6  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8166   0052F8  D7FA               	bra	u5687
  8167   0052FA  D000               	nop2	
  8168   0052FC  0012               	return		;funcret
  8169   0052FE                     __end_of_Forwardhalfblock:
  8170                           	callstack 0
  8171                           
  8172 ;; *************** function _BlueMove *****************
  8173 ;; Defined at:
  8174 ;;		line 248 in file "dc_motor.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8177 ;;		 -> motorL(9), 
  8178 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8179 ;;		 -> motorR(9), 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8195 ;;Total ram usage:        4 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; Hardware stack levels required when called: 5
  8198 ;; This function calls:
  8199 ;;		_reverseDetect
  8200 ;;		_turnRight45
  8201 ;; This function is called by:
  8202 ;;		_main
  8203 ;;		_go_Home
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text40
  8208   00512C                     __ptext40:
  8209                           	callstack 0
  8210   00512C                     _BlueMove:
  8211                           	callstack 24
  8212   00512C                     
  8213                           ;dc_motor.c: 249:     reverseDetect(&motorL, &motorR);
  8214   00512C  0E7B               	movlw	low _motorL
  8215   00512E  6E1A               	movwf	reverseDetect@mL^0,c
  8216   005130  0E01               	movlw	high _motorL
  8217   005132  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8218   005134  0E72               	movlw	low _motorR
  8219   005136  6E1C               	movwf	reverseDetect@mR^0,c
  8220   005138  0E01               	movlw	high _motorR
  8221   00513A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8222   00513C  ECAC  F029         	call	_reverseDetect	;wreg free
  8223                           
  8224                           ;dc_motor.c: 251:     turnRight45(&motorL, &motorR);
  8225   005140  0E7B               	movlw	low _motorL
  8226   005142  6E1A               	movwf	turnRight45@mL^0,c
  8227   005144  0E01               	movlw	high _motorL
  8228   005146  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8229   005148  0E72               	movlw	low _motorR
  8230   00514A  6E1C               	movwf	turnRight45@mR^0,c
  8231   00514C  0E01               	movlw	high _motorR
  8232   00514E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8233   005150  ECD9  F029         	call	_turnRight45	;wreg free
  8234                           
  8235                           ;dc_motor.c: 252:     turnRight45(&motorL, &motorR);
  8236   005154  0E7B               	movlw	low _motorL
  8237   005156  6E1A               	movwf	turnRight45@mL^0,c
  8238   005158  0E01               	movlw	high _motorL
  8239   00515A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8240   00515C  0E72               	movlw	low _motorR
  8241   00515E  6E1C               	movwf	turnRight45@mR^0,c
  8242   005160  0E01               	movlw	high _motorR
  8243   005162  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8244   005164  ECD9  F029         	call	_turnRight45	;wreg free
  8245                           
  8246                           ;dc_motor.c: 253:     turnRight45(&motorL, &motorR);
  8247   005168  0E7B               	movlw	low _motorL
  8248   00516A  6E1A               	movwf	turnRight45@mL^0,c
  8249   00516C  0E01               	movlw	high _motorL
  8250   00516E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8251   005170  0E72               	movlw	low _motorR
  8252   005172  6E1C               	movwf	turnRight45@mR^0,c
  8253   005174  0E01               	movlw	high _motorR
  8254   005176  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8255   005178  ECD9  F029         	call	_turnRight45	;wreg free
  8256                           
  8257                           ;dc_motor.c: 254:     turnRight45(&motorL, &motorR);
  8258   00517C  0E7B               	movlw	low _motorL
  8259   00517E  6E1A               	movwf	turnRight45@mL^0,c
  8260   005180  0E01               	movlw	high _motorL
  8261   005182  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8262   005184  0E72               	movlw	low _motorR
  8263   005186  6E1C               	movwf	turnRight45@mR^0,c
  8264   005188  0E01               	movlw	high _motorR
  8265   00518A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8266   00518C  ECD9  F029         	call	_turnRight45	;wreg free
  8267   005190  0012               	return		;funcret
  8268   005192                     __end_of_BlueMove:
  8269                           	callstack 0
  8270                           
  8271 ;; *************** function _colour_rel *****************
  8272 ;; Defined at:
  8273 ;;		line 114 in file "color.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  vals            2   74[COMRAM] PTR struct RGB
  8276 ;;		 -> vals(8), 
  8277 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8278 ;;		 -> rel(12), 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  B               4   20[BANK0 ] float 
  8281 ;;  G               4   16[BANK0 ] float 
  8282 ;;  R               4   12[BANK0 ] float 
  8283 ;;  L               4    0[BANK0 ] float 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;Total ram usage:       28 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; Hardware stack levels required when called: 2
  8300 ;; This function calls:
  8301 ;;		___fladd
  8302 ;;		___fldiv
  8303 ;;		___xxtofl
  8304 ;; This function is called by:
  8305 ;;		_main
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text41
  8310   0034BA                     __ptext41:
  8311                           	callstack 0
  8312   0034BA                     _colour_rel:
  8313                           	callstack 28
  8314   0034BA                     
  8315                           ;color.c: 115:     float R = vals->R;
  8316   0034BA  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  8317   0034BE  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  8318   0034C2  CFDE F001          	movff	postinc2,___xxtofl@val
  8319   0034C6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8320   0034CA  0E00               	movlw	0
  8321   0034CC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8322   0034CE  0EFF               	movlw	-1
  8323   0034D0  6E03               	movwf	(___xxtofl@val+2)^0,c
  8324   0034D2  6E04               	movwf	(___xxtofl@val+3)^0,c
  8325   0034D4  0E01               	movlw	1
  8326   0034D6  ECA8  F020         	call	___xxtofl
  8327   0034DA  C001  F06C         	movff	?___xxtofl,colour_rel@R
  8328   0034DE  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  8329   0034E2  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  8330   0034E6  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  8331                           
  8332                           ;color.c: 116:     float G = vals->G;
  8333   0034EA  EE20 F002          	lfsr	2,2
  8334   0034EE  504B               	movf	colour_rel@vals^0,w,c
  8335   0034F0  26D9               	addwf	fsr2l,f,c
  8336   0034F2  504C               	movf	(colour_rel@vals+1)^0,w,c
  8337   0034F4  22DA               	addwfc	fsr2h,f,c
  8338   0034F6  CFDE F001          	movff	postinc2,___xxtofl@val
  8339   0034FA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8340   0034FE  0E00               	movlw	0
  8341   003500  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8342   003502  0EFF               	movlw	-1
  8343   003504  6E03               	movwf	(___xxtofl@val+2)^0,c
  8344   003506  6E04               	movwf	(___xxtofl@val+3)^0,c
  8345   003508  0E01               	movlw	1
  8346   00350A  ECA8  F020         	call	___xxtofl
  8347   00350E  C001  F070         	movff	?___xxtofl,colour_rel@G
  8348   003512  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  8349   003516  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  8350   00351A  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  8351                           
  8352                           ;color.c: 117:     float B = vals->B;
  8353   00351E  EE20 F004          	lfsr	2,4
  8354   003522  504B               	movf	colour_rel@vals^0,w,c
  8355   003524  26D9               	addwf	fsr2l,f,c
  8356   003526  504C               	movf	(colour_rel@vals+1)^0,w,c
  8357   003528  22DA               	addwfc	fsr2h,f,c
  8358   00352A  CFDE F001          	movff	postinc2,___xxtofl@val
  8359   00352E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8360   003532  0E00               	movlw	0
  8361   003534  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8362   003536  0EFF               	movlw	-1
  8363   003538  6E03               	movwf	(___xxtofl@val+2)^0,c
  8364   00353A  6E04               	movwf	(___xxtofl@val+3)^0,c
  8365   00353C  0E01               	movlw	1
  8366   00353E  ECA8  F020         	call	___xxtofl
  8367   003542  C001  F074         	movff	?___xxtofl,colour_rel@B
  8368   003546  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  8369   00354A  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  8370   00354E  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  8371                           
  8372                           ;color.c: 118:     float L = vals->L;
  8373   003552  EE20 F006          	lfsr	2,6
  8374   003556  504B               	movf	colour_rel@vals^0,w,c
  8375   003558  26D9               	addwf	fsr2l,f,c
  8376   00355A  504C               	movf	(colour_rel@vals+1)^0,w,c
  8377   00355C  22DA               	addwfc	fsr2h,f,c
  8378   00355E  CFDE F001          	movff	postinc2,___xxtofl@val
  8379   003562  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8380   003566  0E00               	movlw	0
  8381   003568  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8382   00356A  0EFF               	movlw	-1
  8383   00356C  6E03               	movwf	(___xxtofl@val+2)^0,c
  8384   00356E  6E04               	movwf	(___xxtofl@val+3)^0,c
  8385   003570  0E01               	movlw	1
  8386   003572  ECA8  F020         	call	___xxtofl
  8387   003576  C001  F060         	movff	?___xxtofl,colour_rel@L
  8388   00357A  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  8389   00357E  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  8390   003582  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  8391   003586                     
  8392                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8393   003586  C070  F005         	movff	colour_rel@G,___fladd@a
  8394   00358A  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8395   00358E  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8396   003592  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8397   003596  C06C  F001         	movff	colour_rel@R,___fladd@b
  8398   00359A  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8399   00359E  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8400   0035A2  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8401   0035A6  EC1B  F014         	call	___fladd	;wreg free
  8402   0035AA  C001  F064         	movff	?___fladd,_colour_rel$2789
  8403   0035AE  C002  F065         	movff	?___fladd+1,_colour_rel$2789+1
  8404   0035B2  C003  F066         	movff	?___fladd+2,_colour_rel$2789+2
  8405   0035B6  C004  F067         	movff	?___fladd+3,_colour_rel$2789+3
  8406   0035BA                     
  8407                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8408   0035BA  C074  F005         	movff	colour_rel@B,___fladd@a
  8409   0035BE  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8410   0035C2  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8411   0035C6  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8412   0035CA  C064  F001         	movff	_colour_rel$2789,___fladd@b
  8413   0035CE  C065  F002         	movff	_colour_rel$2789+1,___fladd@b+1
  8414   0035D2  C066  F003         	movff	_colour_rel$2789+2,___fladd@b+2
  8415   0035D6  C067  F004         	movff	_colour_rel$2789+3,___fladd@b+3
  8416   0035DA  EC1B  F014         	call	___fladd	;wreg free
  8417   0035DE  C001  F068         	movff	?___fladd,_colour_rel$2790
  8418   0035E2  C002  F069         	movff	?___fladd+1,_colour_rel$2790+1
  8419   0035E6  C003  F06A         	movff	?___fladd+2,_colour_rel$2790+2
  8420   0035EA  C004  F06B         	movff	?___fladd+3,_colour_rel$2790+3
  8421                           
  8422                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8423   0035EE  C06C  F032         	movff	colour_rel@R,___fldiv@b
  8424   0035F2  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  8425   0035F6  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  8426   0035FA  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  8427   0035FE  C060  F005         	movff	colour_rel@L,___fladd@a
  8428   003602  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8429   003606  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8430   00360A  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8431   00360E  C068  F001         	movff	_colour_rel$2790,___fladd@b
  8432   003612  C069  F002         	movff	_colour_rel$2790+1,___fladd@b+1
  8433   003616  C06A  F003         	movff	_colour_rel$2790+2,___fladd@b+2
  8434   00361A  C06B  F004         	movff	_colour_rel$2790+3,___fladd@b+3
  8435   00361E  EC1B  F014         	call	___fladd	;wreg free
  8436   003622  C001  F036         	movff	?___fladd,___fldiv@a
  8437   003626  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8438   00362A  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8439   00362E  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8440   003632  EC90  F018         	call	___fldiv	;wreg free
  8441   003636  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  8442   00363A  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  8443   00363E  C032  FFDE         	movff	?___fldiv,postinc2
  8444   003642  C033  FFDE         	movff	?___fldiv+1,postinc2
  8445   003646  C034  FFDE         	movff	?___fldiv+2,postinc2
  8446   00364A  C035  FFDE         	movff	?___fldiv+3,postinc2
  8447   00364E                     
  8448                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8449   00364E  C070  F005         	movff	colour_rel@G,___fladd@a
  8450   003652  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8451   003656  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8452   00365A  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8453   00365E  C06C  F001         	movff	colour_rel@R,___fladd@b
  8454   003662  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8455   003666  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8456   00366A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8457   00366E  EC1B  F014         	call	___fladd	;wreg free
  8458   003672  C001  F064         	movff	?___fladd,_colour_rel$2789
  8459   003676  C002  F065         	movff	?___fladd+1,_colour_rel$2789+1
  8460   00367A  C003  F066         	movff	?___fladd+2,_colour_rel$2789+2
  8461   00367E  C004  F067         	movff	?___fladd+3,_colour_rel$2789+3
  8462   003682                     
  8463                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8464   003682  C074  F005         	movff	colour_rel@B,___fladd@a
  8465   003686  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8466   00368A  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8467   00368E  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8468   003692  C064  F001         	movff	_colour_rel$2789,___fladd@b
  8469   003696  C065  F002         	movff	_colour_rel$2789+1,___fladd@b+1
  8470   00369A  C066  F003         	movff	_colour_rel$2789+2,___fladd@b+2
  8471   00369E  C067  F004         	movff	_colour_rel$2789+3,___fladd@b+3
  8472   0036A2  EC1B  F014         	call	___fladd	;wreg free
  8473   0036A6  C001  F068         	movff	?___fladd,_colour_rel$2790
  8474   0036AA  C002  F069         	movff	?___fladd+1,_colour_rel$2790+1
  8475   0036AE  C003  F06A         	movff	?___fladd+2,_colour_rel$2790+2
  8476   0036B2  C004  F06B         	movff	?___fladd+3,_colour_rel$2790+3
  8477                           
  8478                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8479   0036B6  C074  F032         	movff	colour_rel@B,___fldiv@b
  8480   0036BA  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  8481   0036BE  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  8482   0036C2  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  8483   0036C6  C060  F005         	movff	colour_rel@L,___fladd@a
  8484   0036CA  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8485   0036CE  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8486   0036D2  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8487   0036D6  C068  F001         	movff	_colour_rel$2790,___fladd@b
  8488   0036DA  C069  F002         	movff	_colour_rel$2790+1,___fladd@b+1
  8489   0036DE  C06A  F003         	movff	_colour_rel$2790+2,___fladd@b+2
  8490   0036E2  C06B  F004         	movff	_colour_rel$2790+3,___fladd@b+3
  8491   0036E6  EC1B  F014         	call	___fladd	;wreg free
  8492   0036EA  C001  F036         	movff	?___fladd,___fldiv@a
  8493   0036EE  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8494   0036F2  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8495   0036F6  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8496   0036FA  EC90  F018         	call	___fldiv	;wreg free
  8497   0036FE  EE20 F008          	lfsr	2,8
  8498   003702  504D               	movf	colour_rel@rel^0,w,c
  8499   003704  26D9               	addwf	fsr2l,f,c
  8500   003706  504E               	movf	(colour_rel@rel+1)^0,w,c
  8501   003708  22DA               	addwfc	fsr2h,f,c
  8502   00370A  C032  FFDE         	movff	?___fldiv,postinc2
  8503   00370E  C033  FFDE         	movff	?___fldiv+1,postinc2
  8504   003712  C034  FFDE         	movff	?___fldiv+2,postinc2
  8505   003716  C035  FFDE         	movff	?___fldiv+3,postinc2
  8506   00371A                     
  8507                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8508   00371A  C070  F005         	movff	colour_rel@G,___fladd@a
  8509   00371E  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8510   003722  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8511   003726  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8512   00372A  C06C  F001         	movff	colour_rel@R,___fladd@b
  8513   00372E  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8514   003732  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8515   003736  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8516   00373A  EC1B  F014         	call	___fladd	;wreg free
  8517   00373E  C001  F064         	movff	?___fladd,_colour_rel$2789
  8518   003742  C002  F065         	movff	?___fladd+1,_colour_rel$2789+1
  8519   003746  C003  F066         	movff	?___fladd+2,_colour_rel$2789+2
  8520   00374A  C004  F067         	movff	?___fladd+3,_colour_rel$2789+3
  8521   00374E                     
  8522                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8523   00374E  C074  F005         	movff	colour_rel@B,___fladd@a
  8524   003752  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8525   003756  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8526   00375A  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8527   00375E  C064  F001         	movff	_colour_rel$2789,___fladd@b
  8528   003762  C065  F002         	movff	_colour_rel$2789+1,___fladd@b+1
  8529   003766  C066  F003         	movff	_colour_rel$2789+2,___fladd@b+2
  8530   00376A  C067  F004         	movff	_colour_rel$2789+3,___fladd@b+3
  8531   00376E  EC1B  F014         	call	___fladd	;wreg free
  8532   003772  C001  F068         	movff	?___fladd,_colour_rel$2790
  8533   003776  C002  F069         	movff	?___fladd+1,_colour_rel$2790+1
  8534   00377A  C003  F06A         	movff	?___fladd+2,_colour_rel$2790+2
  8535   00377E  C004  F06B         	movff	?___fladd+3,_colour_rel$2790+3
  8536                           
  8537                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8538   003782  C070  F032         	movff	colour_rel@G,___fldiv@b
  8539   003786  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  8540   00378A  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  8541   00378E  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  8542   003792  C060  F005         	movff	colour_rel@L,___fladd@a
  8543   003796  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8544   00379A  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8545   00379E  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8546   0037A2  C068  F001         	movff	_colour_rel$2790,___fladd@b
  8547   0037A6  C069  F002         	movff	_colour_rel$2790+1,___fladd@b+1
  8548   0037AA  C06A  F003         	movff	_colour_rel$2790+2,___fladd@b+2
  8549   0037AE  C06B  F004         	movff	_colour_rel$2790+3,___fladd@b+3
  8550   0037B2  EC1B  F014         	call	___fladd	;wreg free
  8551   0037B6  C001  F036         	movff	?___fladd,___fldiv@a
  8552   0037BA  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8553   0037BE  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8554   0037C2  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8555   0037C6  EC90  F018         	call	___fldiv	;wreg free
  8556   0037CA  EE20 F004          	lfsr	2,4
  8557   0037CE  504D               	movf	colour_rel@rel^0,w,c
  8558   0037D0  26D9               	addwf	fsr2l,f,c
  8559   0037D2  504E               	movf	(colour_rel@rel+1)^0,w,c
  8560   0037D4  22DA               	addwfc	fsr2h,f,c
  8561   0037D6  C032  FFDE         	movff	?___fldiv,postinc2
  8562   0037DA  C033  FFDE         	movff	?___fldiv+1,postinc2
  8563   0037DE  C034  FFDE         	movff	?___fldiv+2,postinc2
  8564   0037E2  C035  FFDE         	movff	?___fldiv+3,postinc2
  8565   0037E6  0012               	return		;funcret
  8566   0037E8                     __end_of_colour_rel:
  8567                           	callstack 0
  8568                           
  8569 ;; *************** function _color_click_init *****************
  8570 ;; Defined at:
  8571 ;;		line 7 in file "color.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;Total ram usage:        1 bytes
  8590 ;; Hardware stack levels used: 1
  8591 ;; Hardware stack levels required when called: 4
  8592 ;; This function calls:
  8593 ;;		_I2C_2_Master_Init
  8594 ;;		_color_writetoaddr
  8595 ;; This function is called by:
  8596 ;;		_main
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text42
  8601   0055AE                     __ptext42:
  8602                           	callstack 0
  8603   0055AE                     _color_click_init:
  8604                           	callstack 26
  8605   0055AE                     
  8606                           ;color.c: 10:     I2C_2_Master_Init();
  8607   0055AE  EC72  F02D         	call	_I2C_2_Master_Init	;wreg free
  8608   0055B2                     
  8609                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  8610   0055B2  0E01               	movlw	1
  8611   0055B4  6E03               	movwf	color_writetoaddr@value^0,c
  8612   0055B6  0E00               	movlw	0
  8613   0055B8  ECAE  F02D         	call	_color_writetoaddr
  8614   0055BC                     
  8615                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8616   0055BC  0E3F               	movlw	63
  8617   0055BE  6E05               	movwf	??_color_click_init^0,c
  8618   0055C0  0E55               	movlw	85
  8619   0055C2                     u5697:
  8620   0055C2  2EE8               	decfsz	wreg,f,c
  8621   0055C4  D7FE               	bra	u5697
  8622   0055C6  2E05               	decfsz	??_color_click_init^0,f,c
  8623   0055C8  D7FC               	bra	u5697
  8624   0055CA  F000               	nop	
  8625   0055CC                     
  8626                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8627   0055CC  0E03               	movlw	3
  8628   0055CE  6E03               	movwf	color_writetoaddr@value^0,c
  8629   0055D0  0E00               	movlw	0
  8630   0055D2  ECAE  F02D         	call	_color_writetoaddr
  8631   0055D6                     
  8632                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  8633   0055D6  0ED5               	movlw	213
  8634   0055D8  6E03               	movwf	color_writetoaddr@value^0,c
  8635   0055DA  0E01               	movlw	1
  8636   0055DC  ECAE  F02D         	call	_color_writetoaddr
  8637   0055E0                     
  8638                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  8639   0055E0  0E00               	movlw	0
  8640   0055E2  6E03               	movwf	color_writetoaddr@value^0,c
  8641   0055E4  0E0F               	movlw	15
  8642   0055E6  ECAE  F02D         	call	_color_writetoaddr
  8643   0055EA                     
  8644                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  8645   0055EA  9287               	bcf	135,1,c	;volatile
  8646   0055EC                     
  8647                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  8648   0055EC  9881               	bcf	129,4,c	;volatile
  8649   0055EE                     
  8650                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  8651   0055EE  9E86               	bcf	134,7,c	;volatile
  8652   0055F0                     
  8653                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  8654   0055F0  9684               	bcf	132,3,c	;volatile
  8655   0055F2                     
  8656                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  8657   0055F2  9884               	bcf	132,4,c	;volatile
  8658   0055F4                     
  8659                           ;color.c: 28:     LATGbits.LATG1=0;
  8660   0055F4  927F               	bcf	127,1,c	;volatile
  8661   0055F6                     
  8662                           ;color.c: 29:     LATFbits.LATF7=0;
  8663   0055F6  9E7E               	bcf	126,7,c	;volatile
  8664   0055F8                     
  8665                           ;color.c: 30:     LATAbits.LATA4=0;
  8666   0055F8  9879               	bcf	121,4,c	;volatile
  8667   0055FA                     
  8668                           ;color.c: 32:     LATDbits.LATD3=0;
  8669   0055FA  967C               	bcf	124,3,c	;volatile
  8670   0055FC                     
  8671                           ;color.c: 33:     LATDbits.LATD4=0;
  8672   0055FC  987C               	bcf	124,4,c	;volatile
  8673   0055FE  0012               	return		;funcret
  8674   005600                     __end_of_color_click_init:
  8675                           	callstack 0
  8676                           
  8677 ;; *************** function _color_writetoaddr *****************
  8678 ;; Defined at:
  8679 ;;		line 41 in file "color.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  address         1    wreg     unsigned char 
  8682 ;;  value           1    2[COMRAM] unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  address         1    3[COMRAM] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8694 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;Total ram usage:        2 bytes
  8699 ;; Hardware stack levels used: 1
  8700 ;; Hardware stack levels required when called: 3
  8701 ;; This function calls:
  8702 ;;		_I2C_2_Master_Start
  8703 ;;		_I2C_2_Master_Stop
  8704 ;;		_I2C_2_Master_Write
  8705 ;; This function is called by:
  8706 ;;		_color_click_init
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text43
  8711   005B5C                     __ptext43:
  8712                           	callstack 0
  8713   005B5C                     _color_writetoaddr:
  8714                           	callstack 26
  8715                           
  8716                           ;incstack = 0
  8717                           ;color_writetoaddr@address stored from wreg
  8718   005B5C  6E04               	movwf	color_writetoaddr@address^0,c
  8719   005B5E                     
  8720                           ;color.c: 42:     I2C_2_Master_Start();
  8721   005B5E  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  8722                           
  8723                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  8724   005B62  0E52               	movlw	82
  8725   005B64  ECD9  F02D         	call	_I2C_2_Master_Write
  8726                           
  8727                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  8728   005B68  5004               	movf	color_writetoaddr@address^0,w,c
  8729   005B6A  0980               	iorlw	128
  8730   005B6C  ECD9  F02D         	call	_I2C_2_Master_Write
  8731                           
  8732                           ;color.c: 45:     I2C_2_Master_Write(value);
  8733   005B70  5003               	movf	color_writetoaddr@value^0,w,c
  8734   005B72  ECD9  F02D         	call	_I2C_2_Master_Write
  8735                           
  8736                           ;color.c: 46:     I2C_2_Master_Stop();
  8737   005B76  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  8738   005B7A  0012               	return		;funcret
  8739   005B7C                     __end_of_color_writetoaddr:
  8740                           	callstack 0
  8741                           
  8742 ;; *************** function _I2C_2_Master_Write *****************
  8743 ;; Defined at:
  8744 ;;		line 45 in file "i2c.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  data_byte       1    wreg     unsigned char 
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;  data_byte       1    1[COMRAM] unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      void 
  8751 ;; Registers used:
  8752 ;;		wreg, status,2, status,0, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8762 ;;Total ram usage:        1 bytes
  8763 ;; Hardware stack levels used: 1
  8764 ;; Hardware stack levels required when called: 2
  8765 ;; This function calls:
  8766 ;;		_I2C_2_Master_Idle
  8767 ;; This function is called by:
  8768 ;;		_color_writetoaddr
  8769 ;;		_color_read_lum
  8770 ;;		_color_read_Red
  8771 ;;		_color_read_Green
  8772 ;;		_color_read_Blue
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           
  8776                           	psect	text44
  8777   005BB2                     __ptext44:
  8778                           	callstack 0
  8779   005BB2                     _I2C_2_Master_Write:
  8780                           	callstack 26
  8781                           
  8782                           ;incstack = 0
  8783                           ;I2C_2_Master_Write@data_byte stored from wreg
  8784   005BB2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8785   005BB4                     
  8786                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8787   005BB4  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8788   005BB8                     
  8789                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8790   005BB8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8791   005BBC  0012               	return		;funcret
  8792   005BBE                     __end_of_I2C_2_Master_Write:
  8793                           	callstack 0
  8794                           
  8795 ;; *************** function _I2C_2_Master_Stop *****************
  8796 ;; Defined at:
  8797 ;;		line 39 in file "i2c.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;Total ram usage:        0 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; Hardware stack levels required when called: 2
  8818 ;; This function calls:
  8819 ;;		_I2C_2_Master_Idle
  8820 ;; This function is called by:
  8821 ;;		_color_writetoaddr
  8822 ;;		_color_read_lum
  8823 ;;		_color_read_Red
  8824 ;;		_color_read_Green
  8825 ;;		_color_read_Blue
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text45
  8830   005BC8                     __ptext45:
  8831                           	callstack 0
  8832   005BC8                     _I2C_2_Master_Stop:
  8833                           	callstack 26
  8834   005BC8                     
  8835                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8836   005BC8  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8837   005BCC                     
  8838                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8839   005BCC  010E               	movlb	14	; () banked
  8840   005BCE  85DA               	bsf	218,2,b	;volatile
  8841   005BD0                     
  8842                           ; BSR set to: 14
  8843   005BD0  0012               	return		;funcret
  8844   005BD2                     __end_of_I2C_2_Master_Stop:
  8845                           	callstack 0
  8846                           
  8847 ;; *************** function _I2C_2_Master_Start *****************
  8848 ;; Defined at:
  8849 ;;		line 27 in file "i2c.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		wreg, status,2, status,0, cstack
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used: 1
  8869 ;; Hardware stack levels required when called: 2
  8870 ;; This function calls:
  8871 ;;		_I2C_2_Master_Idle
  8872 ;; This function is called by:
  8873 ;;		_color_writetoaddr
  8874 ;;		_color_read_lum
  8875 ;;		_color_read_Red
  8876 ;;		_color_read_Green
  8877 ;;		_color_read_Blue
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text46
  8882   005BD2                     __ptext46:
  8883                           	callstack 0
  8884   005BD2                     _I2C_2_Master_Start:
  8885                           	callstack 26
  8886   005BD2                     
  8887                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8888   005BD2  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8889   005BD6                     
  8890                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8891   005BD6  010E               	movlb	14	; () banked
  8892   005BD8  81DA               	bsf	218,0,b	;volatile
  8893   005BDA                     
  8894                           ; BSR set to: 14
  8895   005BDA  0012               	return		;funcret
  8896   005BDC                     __end_of_I2C_2_Master_Start:
  8897                           	callstack 0
  8898                           
  8899 ;; *************** function _I2C_2_Master_Idle *****************
  8900 ;; Defined at:
  8901 ;;		line 22 in file "i2c.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;		None
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;		None
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      void 
  8908 ;; Registers used:
  8909 ;;		wreg, status,2, status,0
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;Total ram usage:        1 bytes
  8920 ;; Hardware stack levels used: 1
  8921 ;; Hardware stack levels required when called: 1
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_I2C_2_Master_Start
  8926 ;;		_I2C_2_Master_RepStart
  8927 ;;		_I2C_2_Master_Stop
  8928 ;;		_I2C_2_Master_Write
  8929 ;;		_I2C_2_Master_Read
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text47
  8934   005B0E                     __ptext47:
  8935                           	callstack 0
  8936   005B0E                     _I2C_2_Master_Idle:
  8937                           	callstack 26
  8938   005B0E                     l141:
  8939   005B0E  010E               	movlb	14	; () banked
  8940   005B10  B5D8               	btfsc	216,2,b	;volatile
  8941   005B12  EF8D  F02D         	goto	u4251
  8942   005B16  EF8F  F02D         	goto	u4250
  8943   005B1A                     u4251:
  8944   005B1A  EF87  F02D         	goto	l141
  8945   005B1E                     u4250:
  8946   005B1E                     
  8947                           ; BSR set to: 14
  8948   005B1E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8949   005B22  0E1F               	movlw	31
  8950   005B24  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8951   005B26  A4D8               	btfss	status,2,c
  8952   005B28  EF98  F02D         	goto	u4261
  8953   005B2C  EF9A  F02D         	goto	u4260
  8954   005B30                     u4261:
  8955   005B30  EF87  F02D         	goto	l141
  8956   005B34                     u4260:
  8957   005B34                     
  8958                           ; BSR set to: 14
  8959   005B34  0012               	return		;funcret
  8960   005B36                     __end_of_I2C_2_Master_Idle:
  8961                           	callstack 0
  8962                           
  8963 ;; *************** function _I2C_2_Master_Init *****************
  8964 ;; Defined at:
  8965 ;;		line 4 in file "i2c.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;		None
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;		None
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8983 ;;Total ram usage:        0 bytes
  8984 ;; Hardware stack levels used: 1
  8985 ;; Hardware stack levels required when called: 1
  8986 ;; This function calls:
  8987 ;;		Nothing
  8988 ;; This function is called by:
  8989 ;;		_color_click_init
  8990 ;;		_main
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           	psect	text48
  8995   005AE4                     __ptext48:
  8996                           	callstack 0
  8997   005AE4                     _I2C_2_Master_Init:
  8998                           	callstack 28
  8999   005AE4                     
  9000                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9001   005AE4  010E               	movlb	14	; () banked
  9002   005AE6  51D9               	movf	217,w,b	;volatile
  9003   005AE8  0BF0               	andlw	-16
  9004   005AEA  0908               	iorlw	8
  9005   005AEC  6FD9               	movwf	217,b	;volatile
  9006   005AEE                     
  9007                           ; BSR set to: 14
  9008                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9009   005AEE  8BD9               	bsf	217,5,b	;volatile
  9010                           
  9011                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9012   005AF0  0E9F               	movlw	159
  9013   005AF2  6FD6               	movwf	214,b	;volatile
  9014   005AF4                     
  9015                           ; BSR set to: 14
  9016                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9017   005AF4  8A84               	bsf	132,5,c	;volatile
  9018   005AF6                     
  9019                           ; BSR set to: 14
  9020                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9021   005AF6  8C84               	bsf	132,6,c	;volatile
  9022   005AF8                     
  9023                           ; BSR set to: 14
  9024                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9025   005AF8  9BA7               	bcf	167,5,b	;volatile
  9026   005AFA                     
  9027                           ; BSR set to: 14
  9028                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9029   005AFA  9DA7               	bcf	167,6,b	;volatile
  9030                           
  9031                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9032   005AFC  0E1D               	movlw	29
  9033   005AFE  6F1D               	movwf	29,b	;volatile
  9034                           
  9035                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9036   005B00  0E1E               	movlw	30
  9037   005B02  6F1C               	movwf	28,b	;volatile
  9038                           
  9039                           ;i2c.c: 18:   RD5PPS=0x1C;
  9040   005B04  0E1C               	movlw	28
  9041   005B06  6F6F               	movwf	111,b	;volatile
  9042                           
  9043                           ;i2c.c: 19:   RD6PPS=0x1B;
  9044   005B08  0E1B               	movlw	27
  9045   005B0A  6F70               	movwf	112,b	;volatile
  9046   005B0C                     
  9047                           ; BSR set to: 14
  9048   005B0C  0012               	return		;funcret
  9049   005B0E                     __end_of_I2C_2_Master_Init:
  9050                           	callstack 0
  9051                           
  9052 ;; *************** function _YellowMove *****************
  9053 ;; Defined at:
  9054 ;;		line 258 in file "dc_motor.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9057 ;;		 -> motorL(9), 
  9058 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9059 ;;		 -> motorR(9), 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used: 1
  9077 ;; Hardware stack levels required when called: 5
  9078 ;; This function calls:
  9079 ;;		_reverseDetect
  9080 ;;		_reverseOneBlock
  9081 ;;		_turnRight45
  9082 ;; This function is called by:
  9083 ;;		_main
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text49
  9088   005600                     __ptext49:
  9089                           	callstack 0
  9090   005600                     _YellowMove:
  9091                           	callstack 25
  9092   005600                     
  9093                           ;dc_motor.c: 259:     reverseDetect(&motorL, &motorR);
  9094   005600  0E7B               	movlw	low _motorL
  9095   005602  6E1A               	movwf	reverseDetect@mL^0,c
  9096   005604  0E01               	movlw	high _motorL
  9097   005606  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9098   005608  0E72               	movlw	low _motorR
  9099   00560A  6E1C               	movwf	reverseDetect@mR^0,c
  9100   00560C  0E01               	movlw	high _motorR
  9101   00560E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9102   005610  ECAC  F029         	call	_reverseDetect	;wreg free
  9103                           
  9104                           ;dc_motor.c: 261:     reverseOneBlock(&motorL, &motorR);
  9105   005614  0E7B               	movlw	low _motorL
  9106   005616  6E1A               	movwf	reverseOneBlock@mL^0,c
  9107   005618  0E01               	movlw	high _motorL
  9108   00561A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9109   00561C  0E72               	movlw	low _motorR
  9110   00561E  6E1C               	movwf	reverseOneBlock@mR^0,c
  9111   005620  0E01               	movlw	high _motorR
  9112   005622  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9113   005624  EC7F  F029         	call	_reverseOneBlock	;wreg free
  9114                           
  9115                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  9116   005628  0E7B               	movlw	low _motorL
  9117   00562A  6E1A               	movwf	turnRight45@mL^0,c
  9118   00562C  0E01               	movlw	high _motorL
  9119   00562E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9120   005630  0E72               	movlw	low _motorR
  9121   005632  6E1C               	movwf	turnRight45@mR^0,c
  9122   005634  0E01               	movlw	high _motorR
  9123   005636  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9124   005638  ECD9  F029         	call	_turnRight45	;wreg free
  9125                           
  9126                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  9127   00563C  0E7B               	movlw	low _motorL
  9128   00563E  6E1A               	movwf	turnRight45@mL^0,c
  9129   005640  0E01               	movlw	high _motorL
  9130   005642  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9131   005644  0E72               	movlw	low _motorR
  9132   005646  6E1C               	movwf	turnRight45@mR^0,c
  9133   005648  0E01               	movlw	high _motorR
  9134   00564A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9135   00564C  ECD9  F029         	call	_turnRight45	;wreg free
  9136   005650  0012               	return		;funcret
  9137   005652                     __end_of_YellowMove:
  9138                           	callstack 0
  9139                           
  9140 ;; *************** function _turnRight45 *****************
  9141 ;; Defined at:
  9142 ;;		line 181 in file "dc_motor.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9145 ;;		 -> motorL(9), 
  9146 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9147 ;;		 -> motorR(9), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      void 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9163 ;;Total ram usage:        6 bytes
  9164 ;; Hardware stack levels used: 1
  9165 ;; Hardware stack levels required when called: 4
  9166 ;; This function calls:
  9167 ;;		_stop
  9168 ;;		_turnRight
  9169 ;; This function is called by:
  9170 ;;		_RedMove
  9171 ;;		_BlueMove
  9172 ;;		_YellowMove
  9173 ;;		_OrangeMove
  9174 ;;		_ReversePink
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text50
  9179   0053B2                     __ptext50:
  9180                           	callstack 0
  9181   0053B2                     _turnRight45:
  9182                           	callstack 24
  9183   0053B2                     
  9184                           ;dc_motor.c: 182:     turnRight(mL,mR);
  9185   0053B2  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  9186   0053B6  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9187   0053BA  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  9188   0053BE  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9189   0053C2  ECEC  F025         	call	_turnRight	;wreg free
  9190   0053C6                     
  9191                           ;dc_motor.c: 183:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  9192   0053C6  0E12               	movlw	18
  9193   0053C8  6E1F               	movwf	(??_turnRight45+1)^0,c
  9194   0053CA  0EDC               	movlw	220
  9195   0053CC  6E1E               	movwf	??_turnRight45^0,c
  9196   0053CE  0E60               	movlw	96
  9197   0053D0                     u5707:
  9198   0053D0  2EE8               	decfsz	wreg,f,c
  9199   0053D2  D7FE               	bra	u5707
  9200   0053D4  2E1E               	decfsz	??_turnRight45^0,f,c
  9201   0053D6  D7FC               	bra	u5707
  9202   0053D8  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9203   0053DA  D7FA               	bra	u5707
  9204   0053DC                     
  9205                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  9206   0053DC  0E7B               	movlw	low _motorL
  9207   0053DE  6E14               	movwf	stop@mL^0,c
  9208   0053E0  0E01               	movlw	high _motorL
  9209   0053E2  6E15               	movwf	(stop@mL+1)^0,c
  9210   0053E4  0E72               	movlw	low _motorR
  9211   0053E6  6E16               	movwf	stop@mR^0,c
  9212   0053E8  0E01               	movlw	high _motorR
  9213   0053EA  6E17               	movwf	(stop@mR+1)^0,c
  9214   0053EC  ECAD  F027         	call	_stop	;wreg free
  9215                           
  9216                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9217   0053F0  0E52               	movlw	82
  9218   0053F2  6E1F               	movwf	(??_turnRight45+1)^0,c
  9219   0053F4  0E2B               	movlw	43
  9220   0053F6  6E1E               	movwf	??_turnRight45^0,c
  9221   0053F8  0E00               	movlw	0
  9222   0053FA                     u5717:
  9223   0053FA  2EE8               	decfsz	wreg,f,c
  9224   0053FC  D7FE               	bra	u5717
  9225   0053FE  2E1E               	decfsz	??_turnRight45^0,f,c
  9226   005400  D7FC               	bra	u5717
  9227   005402  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9228   005404  D7FA               	bra	u5717
  9229   005406  D000               	nop2	
  9230   005408  0012               	return		;funcret
  9231   00540A                     __end_of_turnRight45:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function _turnRight *****************
  9235 ;; Defined at:
  9236 ;;		line 128 in file "dc_motor.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9239 ;;		 -> motorL(9), 
  9240 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9241 ;;		 -> motorR(9), 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;Total ram usage:        6 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 3
  9260 ;; This function calls:
  9261 ;;		_setMotorPWM
  9262 ;; This function is called by:
  9263 ;;		_turnRight45
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text51
  9268   004BD8                     __ptext51:
  9269                           	callstack 0
  9270   004BD8                     _turnRight:
  9271                           	callstack 24
  9272   004BD8                     
  9273                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  9274   004BD8  EE20 F001          	lfsr	2,1
  9275   004BDC  5014               	movf	turnRight@mL^0,w,c
  9276   004BDE  26D9               	addwf	fsr2l,f,c
  9277   004BE0  5015               	movf	(turnRight@mL+1)^0,w,c
  9278   004BE2  22DA               	addwfc	fsr2h,f,c
  9279   004BE4  0E01               	movlw	1
  9280   004BE6  6EDF               	movwf	indf2,c
  9281                           
  9282                           ;dc_motor.c: 131:     mR->direction =0;
  9283   004BE8  EE20 F001          	lfsr	2,1
  9284   004BEC  5016               	movf	turnRight@mR^0,w,c
  9285   004BEE  26D9               	addwf	fsr2l,f,c
  9286   004BF0  5017               	movf	(turnRight@mR+1)^0,w,c
  9287   004BF2  22DA               	addwfc	fsr2h,f,c
  9288   004BF4  0E00               	movlw	0
  9289   004BF6  6EDF               	movwf	indf2,c
  9290                           
  9291                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  9292   004BF8  EF22  F026         	goto	l4431
  9293   004BFC                     l4423:
  9294                           
  9295                           ;dc_motor.c: 135:         mL->power+=10;
  9296   004BFC  C014  FFD9         	movff	turnRight@mL,fsr2l
  9297   004C00  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9298   004C04  0E0A               	movlw	10
  9299   004C06  26DF               	addwf	indf2,f,c
  9300                           
  9301                           ;dc_motor.c: 136:         mR->power+=10;
  9302   004C08  C016  FFD9         	movff	turnRight@mR,fsr2l
  9303   004C0C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9304   004C10  0E0A               	movlw	10
  9305   004C12  26DF               	addwf	indf2,f,c
  9306   004C14                     
  9307                           ;dc_motor.c: 138:         setMotorPWM(mL);
  9308   004C14  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9309   004C18  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9310   004C1C  EC46  F022         	call	_setMotorPWM	;wreg free
  9311   004C20                     
  9312                           ;dc_motor.c: 139:         setMotorPWM(mR);
  9313   004C20  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9314   004C24  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9315   004C28  EC46  F022         	call	_setMotorPWM	;wreg free
  9316   004C2C                     
  9317                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9318   004C2C  0E02               	movlw	2
  9319   004C2E  6E19               	movwf	(??_turnRight+1)^0,c
  9320   004C30  0EA0               	movlw	160
  9321   004C32  6E18               	movwf	??_turnRight^0,c
  9322   004C34  0E92               	movlw	146
  9323   004C36                     u5727:
  9324   004C36  2EE8               	decfsz	wreg,f,c
  9325   004C38  D7FE               	bra	u5727
  9326   004C3A  2E18               	decfsz	??_turnRight^0,f,c
  9327   004C3C  D7FC               	bra	u5727
  9328   004C3E  2E19               	decfsz	(??_turnRight+1)^0,f,c
  9329   004C40  D7FA               	bra	u5727
  9330   004C42  D000               	nop2	
  9331   004C44                     l4431:
  9332   004C44  C014  FFD9         	movff	turnRight@mL,fsr2l
  9333   004C48  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9334   004C4C  0E1E               	movlw	30
  9335   004C4E  60DF               	cpfslt	indf2,c
  9336   004C50  EF2C  F026         	goto	u4311
  9337   004C54  EF2E  F026         	goto	u4310
  9338   004C58                     u4311:
  9339   004C58  EF3A  F026         	goto	l496
  9340   004C5C                     u4310:
  9341   004C5C  C016  FFD9         	movff	turnRight@mR,fsr2l
  9342   004C60  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9343   004C64  0E1D               	movlw	29
  9344   004C66  64DF               	cpfsgt	indf2,c
  9345   004C68  EF38  F026         	goto	u4321
  9346   004C6C  EF3A  F026         	goto	u4320
  9347   004C70                     u4321:
  9348   004C70  EFFE  F025         	goto	l4423
  9349   004C74                     u4320:
  9350   004C74                     l496:
  9351   004C74  0012               	return		;funcret
  9352   004C76                     __end_of_turnRight:
  9353                           	callstack 0
  9354                           
  9355 ;; *************** function _RetryMove *****************
  9356 ;; Defined at:
  9357 ;;		line 295 in file "dc_motor.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9360 ;;		 -> motorL(9), 
  9361 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9362 ;;		 -> motorR(9), 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      void 
  9367 ;; Registers used:
  9368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9377 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9378 ;;Total ram usage:        6 bytes
  9379 ;; Hardware stack levels used: 1
  9380 ;; Hardware stack levels required when called: 4
  9381 ;; This function calls:
  9382 ;;		_fullSpeedAhead
  9383 ;;		_fullSpeedBack
  9384 ;;		_stop
  9385 ;; This function is called by:
  9386 ;;		_main
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           	psect	text52
  9391   004ED8                     __ptext52:
  9392                           	callstack 0
  9393   004ED8                     _RetryMove:
  9394                           	callstack 26
  9395   004ED8                     
  9396                           ;dc_motor.c: 296:     fullSpeedBack(mL,mR);
  9397   004ED8  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  9398   004EDC  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  9399   004EE0  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  9400   004EE4  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  9401   004EE8  ECD9  F026         	call	_fullSpeedBack	;wreg free
  9402   004EEC                     
  9403                           ;dc_motor.c: 297:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9404   004EEC  0E29               	movlw	41
  9405   004EEE  6E1F               	movwf	(??_RetryMove+1)^0,c
  9406   004EF0  0E96               	movlw	150
  9407   004EF2  6E1E               	movwf	??_RetryMove^0,c
  9408   004EF4  0E7F               	movlw	127
  9409   004EF6                     u5737:
  9410   004EF6  2EE8               	decfsz	wreg,f,c
  9411   004EF8  D7FE               	bra	u5737
  9412   004EFA  2E1E               	decfsz	??_RetryMove^0,f,c
  9413   004EFC  D7FC               	bra	u5737
  9414   004EFE  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  9415   004F00  D7FA               	bra	u5737
  9416   004F02  F000               	nop	
  9417   004F04                     
  9418                           ;dc_motor.c: 298:     stop(&motorL, &motorR);
  9419   004F04  0E7B               	movlw	low _motorL
  9420   004F06  6E14               	movwf	stop@mL^0,c
  9421   004F08  0E01               	movlw	high _motorL
  9422   004F0A  6E15               	movwf	(stop@mL+1)^0,c
  9423   004F0C  0E72               	movlw	low _motorR
  9424   004F0E  6E16               	movwf	stop@mR^0,c
  9425   004F10  0E01               	movlw	high _motorR
  9426   004F12  6E17               	movwf	(stop@mR+1)^0,c
  9427   004F14  ECAD  F027         	call	_stop	;wreg free
  9428   004F18                     
  9429                           ;dc_motor.c: 299:     fullSpeedAhead(mL,mR);
  9430   004F18  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9431   004F1C  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9432   004F20  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9433   004F24  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9434   004F28  EC3B  F026         	call	_fullSpeedAhead	;wreg free
  9435   004F2C                     
  9436                           ;dc_motor.c: 300:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9437   004F2C  0E29               	movlw	41
  9438   004F2E  6E1F               	movwf	(??_RetryMove+1)^0,c
  9439   004F30  0E96               	movlw	150
  9440   004F32  6E1E               	movwf	??_RetryMove^0,c
  9441   004F34  0E7F               	movlw	127
  9442   004F36                     u5747:
  9443   004F36  2EE8               	decfsz	wreg,f,c
  9444   004F38  D7FE               	bra	u5747
  9445   004F3A  2E1E               	decfsz	??_RetryMove^0,f,c
  9446   004F3C  D7FC               	bra	u5747
  9447   004F3E  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  9448   004F40  D7FA               	bra	u5747
  9449   004F42  F000               	nop	
  9450                           
  9451                           ;dc_motor.c: 301:     stop(&motorL, &motorR);
  9452   004F44  0E7B               	movlw	low _motorL
  9453   004F46  6E14               	movwf	stop@mL^0,c
  9454   004F48  0E01               	movlw	high _motorL
  9455   004F4A  6E15               	movwf	(stop@mL+1)^0,c
  9456   004F4C  0E72               	movlw	low _motorR
  9457   004F4E  6E16               	movwf	stop@mR^0,c
  9458   004F50  0E01               	movlw	high _motorR
  9459   004F52  6E17               	movwf	(stop@mR+1)^0,c
  9460   004F54  ECAD  F027         	call	_stop	;wreg free
  9461   004F58  0012               	return		;funcret
  9462   004F5A                     __end_of_RetryMove:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function _fullSpeedAhead *****************
  9466 ;; Defined at:
  9467 ;;		line 146 in file "dc_motor.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9470 ;;		 -> motorL(9), 
  9471 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9472 ;;		 -> motorR(9), 
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;		None
  9475 ;; Return value:  Size  Location     Type
  9476 ;;                  1    wreg      void 
  9477 ;; Registers used:
  9478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9479 ;; Tracked objects:
  9480 ;;		On entry : 0/0
  9481 ;;		On exit  : 0/0
  9482 ;;		Unchanged: 0/0
  9483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9488 ;;Total ram usage:        6 bytes
  9489 ;; Hardware stack levels used: 1
  9490 ;; Hardware stack levels required when called: 3
  9491 ;; This function calls:
  9492 ;;		_setMotorPWM
  9493 ;; This function is called by:
  9494 ;;		_ForwardOneBlock
  9495 ;;		_Forwardhalfblock
  9496 ;;		_RetryMove
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text53
  9501   004C76                     __ptext53:
  9502                           	callstack 0
  9503   004C76                     _fullSpeedAhead:
  9504                           	callstack 24
  9505   004C76                     
  9506                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  9507   004C76  EE20 F001          	lfsr	2,1
  9508   004C7A  5014               	movf	fullSpeedAhead@mL^0,w,c
  9509   004C7C  26D9               	addwf	fsr2l,f,c
  9510   004C7E  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  9511   004C80  22DA               	addwfc	fsr2h,f,c
  9512   004C82  0E01               	movlw	1
  9513   004C84  6EDF               	movwf	indf2,c
  9514                           
  9515                           ;dc_motor.c: 150:     mR->direction =1;
  9516   004C86  EE20 F001          	lfsr	2,1
  9517   004C8A  5016               	movf	fullSpeedAhead@mR^0,w,c
  9518   004C8C  26D9               	addwf	fsr2l,f,c
  9519   004C8E  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  9520   004C90  22DA               	addwfc	fsr2h,f,c
  9521   004C92  0E01               	movlw	1
  9522   004C94  6EDF               	movwf	indf2,c
  9523                           
  9524                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  9525   004C96  EF71  F026         	goto	l4445
  9526   004C9A                     l4437:
  9527                           
  9528                           ;dc_motor.c: 153:         mL->power+=10;
  9529   004C9A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9530   004C9E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9531   004CA2  0E0A               	movlw	10
  9532   004CA4  26DF               	addwf	indf2,f,c
  9533                           
  9534                           ;dc_motor.c: 154:         mR->power+=10;
  9535   004CA6  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9536   004CAA  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9537   004CAE  0E0A               	movlw	10
  9538   004CB0  26DF               	addwf	indf2,f,c
  9539   004CB2                     
  9540                           ;dc_motor.c: 156:         setMotorPWM(mL);
  9541   004CB2  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  9542   004CB6  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  9543   004CBA  EC46  F022         	call	_setMotorPWM	;wreg free
  9544   004CBE                     
  9545                           ;dc_motor.c: 157:         setMotorPWM(mR);
  9546   004CBE  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  9547   004CC2  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  9548   004CC6  EC46  F022         	call	_setMotorPWM	;wreg free
  9549   004CCA                     
  9550                           ;dc_motor.c: 159:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9551   004CCA  0E02               	movlw	2
  9552   004CCC  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  9553   004CCE  0EA0               	movlw	160
  9554   004CD0  6E18               	movwf	??_fullSpeedAhead^0,c
  9555   004CD2  0E92               	movlw	146
  9556   004CD4                     u5757:
  9557   004CD4  2EE8               	decfsz	wreg,f,c
  9558   004CD6  D7FE               	bra	u5757
  9559   004CD8  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  9560   004CDA  D7FC               	bra	u5757
  9561   004CDC  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  9562   004CDE  D7FA               	bra	u5757
  9563   004CE0  D000               	nop2	
  9564   004CE2                     l4445:
  9565   004CE2  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9566   004CE6  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9567   004CEA  0E1E               	movlw	30
  9568   004CEC  60DF               	cpfslt	indf2,c
  9569   004CEE  EF7B  F026         	goto	u4331
  9570   004CF2  EF7D  F026         	goto	u4330
  9571   004CF6                     u4331:
  9572   004CF6  EF89  F026         	goto	l504
  9573   004CFA                     u4330:
  9574   004CFA  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9575   004CFE  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9576   004D02  0E1D               	movlw	29
  9577   004D04  64DF               	cpfsgt	indf2,c
  9578   004D06  EF87  F026         	goto	u4341
  9579   004D0A  EF89  F026         	goto	u4340
  9580   004D0E                     u4341:
  9581   004D0E  EF4D  F026         	goto	l4437
  9582   004D12                     u4340:
  9583   004D12                     l504:
  9584   004D12  0012               	return		;funcret
  9585   004D14                     __end_of_fullSpeedAhead:
  9586                           	callstack 0
  9587                           
  9588 ;; *************** function _PinkMove *****************
  9589 ;; Defined at:
  9590 ;;		line 268 in file "dc_motor.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9593 ;;		 -> motorL(9), 
  9594 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9595 ;;		 -> motorR(9), 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  1    wreg      void 
  9600 ;; Registers used:
  9601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  5453   004FB8  BE16               	btfsc	(pad@p+1)^0,7,c
  5454   004FBA  EFE1  F027         	goto	u4031
  5455   004FBE  EFE3  F027         	goto	u4030
  5456   004FC2                     u4031:
  5457   004FC2  EFE9  F027         	goto	l4380
  5458   004FC6                     u4030:
  5459   004FC6  C015  F01A         	movff	pad@p,pad@w
  5460   004FCA  C016  F01B         	movff	pad@p+1,pad@w+1
  5461   004FCE  EFED  F027         	goto	l1355
  5462   004FD2                     l4380:
  5463   004FD2  0E00               	movlw	0
  5464   004FD4  6E1B               	movwf	(pad@w+1)^0,c
  5465   004FD6  0E00               	movlw	0
  5466   004FD8  6E1A               	movwf	pad@w^0,c
  5467   004FDA                     l1355:
  5468                           
  5469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5470   004FDA  0E00               	movlw	0
  5471   004FDC  6E19               	movwf	(pad@i+1)^0,c
  5472   004FDE  0E00               	movlw	0
  5473   004FE0  6E18               	movwf	pad@i^0,c
  5474                           
  5475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5476   004FE2  EFFF  F027         	goto	l4386
  5477   004FE6                     l4382:
  5478                           
  5479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5480   004FE6  0E00               	movlw	0
  5481   004FE8  6E02               	movwf	(fputc@c+1)^0,c
  5482   004FEA  0E20               	movlw	32
  5483   004FEC  6E01               	movwf	fputc@c^0,c
  5484   004FEE  C011  F003         	movff	pad@fp,fputc@fp
  5485   004FF2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5486   004FF6  EC71  F025         	call	_fputc	;wreg free
  5487   004FFA                     
  5488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5489   004FFA  4A18               	infsnz	pad@i^0,f,c
  5490   004FFC  2A19               	incf	(pad@i+1)^0,f,c
  5491   004FFE                     l4386:
  5492                           
  5493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5494   004FFE  501A               	movf	pad@w^0,w,c
  5495   005000  5C18               	subwf	pad@i^0,w,c
  5496   005002  5019               	movf	(pad@i+1)^0,w,c
  5497   005004  0A80               	xorlw	128
  5498   005006  6E17               	movwf	??_pad^0,c
  5499   005008  501B               	movf	(pad@w+1)^0,w,c
  5500   00500A  0A80               	xorlw	128
  5501   00500C  5817               	subwfb	??_pad^0,w,c
  5502   00500E  A0D8               	btfss	status,0,c
  5503   005010  EF0C  F028         	goto	u4041
  5504   005014  EF0E  F028         	goto	u4040
  5505   005018                     u4041:
  5506   005018  EFF3  F027         	goto	l4382
  5507   00501C                     u4040:
  5508   00501C                     
  5509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5510   00501C  C013  F00A         	movff	pad@buf,fputs@s
  5511   005020  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5512   005024  C011  F00C         	movff	pad@fp,fputs@fp
  5513   005028  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5514   00502C  EC85  F02C         	call	_fputs	;wreg free
  5515   005030  0012               	return		;funcret
  5516   005032                     __end_of_pad:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function _fputs *****************
  5520 ;; Defined at:
  5521 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5524 ;;		 -> dbuf(80), 
  5525 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5526 ;;		 -> sprintf@f(11), 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  i               2   14[COMRAM] int 
  5529 ;;  c               1   13[COMRAM] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  2    9[COMRAM] int 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;Total ram usage:        7 bytes
  5544 ;; Hardware stack levels used: 1
  5545 ;; Hardware stack levels required when called: 3
  5546 ;; This function calls:
  5547 ;;		_fputc
  5548 ;; This function is called by:
  5549 ;;		_pad
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text14
  5554   00590A                     __ptext14:
  5555                           	callstack 0
  5556   00590A                     _fputs:
  5557                           	callstack 22
  5558   00590A  0E00               	movlw	0
  5559   00590C  6E10               	movwf	(fputs@i+1)^0,c
  5560   00590E  0E00               	movlw	0
  5561   005910  6E0F               	movwf	fputs@i^0,c
  5562   005912  EF96  F02C         	goto	l3914
  5563   005916                     l3910:
  5564   005916  C00E  F001         	movff	fputs@c,fputc@c
  5565   00591A  6A02               	clrf	(fputc@c+1)^0,c
  5566   00591C  C00C  F003         	movff	fputs@fp,fputc@fp
  5567   005920  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5568   005924  EC71  F025         	call	_fputc	;wreg free
  5569   005928  4A0F               	infsnz	fputs@i^0,f,c
  5570   00592A  2A10               	incf	(fputs@i+1)^0,f,c
  5571   00592C                     l3914:
  5572   00592C  500F               	movf	fputs@i^0,w,c
  5573   00592E  240A               	addwf	fputs@s^0,w,c
  5574   005930  6ED9               	movwf	fsr2l,c
  5575   005932  5010               	movf	(fputs@i+1)^0,w,c
  5576   005934  200B               	addwfc	(fputs@s+1)^0,w,c
  5577   005936  6EDA               	movwf	fsr2h,c
  5578   005938  50DF               	movf	indf2,w,c
  5579   00593A  6E0E               	movwf	fputs@c^0,c
  5580   00593C  500E               	movf	fputs@c^0,w,c
  5581   00593E  A4D8               	btfss	status,2,c
  5582   005940  EFA4  F02C         	goto	u3291
  5583   005944  EFA6  F02C         	goto	u3290
  5584   005948                     u3291:
  5585   005948  EF8B  F02C         	goto	l3910
  5586   00594C                     u3290:
  5587   00594C  0012               	return		;funcret
  5588   00594E                     __end_of_fputs:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function _fputc *****************
  5592 ;; Defined at:
  5593 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  c               2    0[COMRAM] int 
  5596 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5597 ;;		 -> sprintf@f(11), 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  2    0[COMRAM] int 
  5602 ;; Registers used:
  5603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5611 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5612 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5613 ;;Total ram usage:        9 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 2
  5616 ;; This function calls:
  5617 ;;		_putch
  5618 ;; This function is called by:
  5619 ;;		_pad
  5620 ;;		_vfpfcnvrt
  5621 ;;		_fputs
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text15
  5626   004AE2                     __ptext15:
  5627                           	callstack 0
  5628   004AE2                     _fputc:
  5629                           	callstack 25
  5630   004AE2  5003               	movf	fputc@fp^0,w,c
  5631   004AE4  1004               	iorwf	(fputc@fp+1)^0,w,c
  5632   004AE6  B4D8               	btfsc	status,2,c
  5633   004AE8  EF78  F025         	goto	u2831
  5634   004AEC  EF7A  F025         	goto	u2830
  5635   004AF0                     u2831:
  5636   004AF0  EF83  F025         	goto	l3668
  5637   004AF4                     u2830:
  5638   004AF4  5003               	movf	fputc@fp^0,w,c
  5639   004AF6  1004               	iorwf	(fputc@fp+1)^0,w,c
  5640   004AF8  A4D8               	btfss	status,2,c
  5641   004AFA  EF81  F025         	goto	u2841
  5642   004AFE  EF83  F025         	goto	u2840
  5643   004B02                     u2841:
  5644   004B02  EF88  F025         	goto	l3670
  5645   004B06                     u2840:
  5646   004B06                     l3668:
  5647   004B06  5001               	movf	fputc@c^0,w,c
  5648   004B08  EC39  F02E         	call	_putch
  5649   004B0C  EFD5  F025         	goto	l1515
  5650   004B10                     l3670:
  5651   004B10  EE20 F009          	lfsr	2,9
  5652   004B14  5003               	movf	fputc@fp^0,w,c
  5653   004B16  26D9               	addwf	fsr2l,f,c
  5654   004B18  5004               	movf	(fputc@fp+1)^0,w,c
  5655   004B1A  22DA               	addwfc	fsr2h,f,c
  5656   004B1C  50DE               	movf	postinc2,w,c
  5657   004B1E  10DE               	iorwf	postinc2,w,c
  5658   004B20  B4D8               	btfsc	status,2,c
  5659   004B22  EF95  F025         	goto	u2851
  5660   004B26  EF97  F025         	goto	u2850
  5661   004B2A                     u2851:
  5662   004B2A  EFB2  F025         	goto	l3674
  5663   004B2E                     u2850:
  5664   004B2E  EE20 F009          	lfsr	2,9
  5665   004B32  5003               	movf	fputc@fp^0,w,c
  5666   004B34  26D9               	addwf	fsr2l,f,c
  5667   004B36  5004               	movf	(fputc@fp+1)^0,w,c
  5668   004B38  22DA               	addwfc	fsr2h,f,c
  5669   004B3A  EE10 F003          	lfsr	1,3
  5670   004B3E  5003               	movf	fputc@fp^0,w,c
  5671   004B40  26E1               	addwf	fsr1l,f,c
  5672   004B42  5004               	movf	(fputc@fp+1)^0,w,c
  5673   004B44  22E2               	addwfc	fsr1h,f,c
  5674   004B46  50DE               	movf	postinc2,w,c
  5675   004B48  5CE6               	subwf	postinc1,w,c
  5676   004B4A  50E6               	movf	postinc1,w,c
  5677   004B4C  0A80               	xorlw	128
  5678   004B4E  6E09               	movwf	(??_fputc+4)^0,c
  5679   004B50  50DE               	movf	postinc2,w,c
  5680   004B52  0A80               	xorlw	128
  5681   004B54  5809               	subwfb	(??_fputc+4)^0,w,c
  5682   004B56  B0D8               	btfsc	status,0,c
  5683   004B58  EFB0  F025         	goto	u2861
  5684   004B5C  EFB2  F025         	goto	u2860
  5685   004B60                     u2861:
  5686   004B60  EFD5  F025         	goto	l1515
  5687   004B64                     u2860:
  5688   004B64                     l3674:
  5689   004B64  EE20 F003          	lfsr	2,3
  5690   004B68  5003               	movf	fputc@fp^0,w,c
  5691   004B6A  26D9               	addwf	fsr2l,f,c
  5692   004B6C  5004               	movf	(fputc@fp+1)^0,w,c
  5693   004B6E  22DA               	addwfc	fsr2h,f,c
  5694   004B70  CFDE F005          	movff	postinc2,??_fputc
  5695   004B74  CFDD F006          	movff	postdec2,??_fputc+1
  5696   004B78  C003  FFD9         	movff	fputc@fp,fsr2l
  5697   004B7C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5698   004B80  CFDE F007          	movff	postinc2,??_fputc+2
  5699   004B84  CFDD F008          	movff	postdec2,??_fputc+3
  5700   004B88  5005               	movf	??_fputc^0,w,c
  5701   004B8A  2407               	addwf	(??_fputc+2)^0,w,c
  5702   004B8C  6ED9               	movwf	fsr2l,c
  5703   004B8E  5006               	movf	(??_fputc+1)^0,w,c
  5704   004B90  2008               	addwfc	(??_fputc+3)^0,w,c
  5705   004B92  6EDA               	movwf	fsr2h,c
  5706   004B94  C001  FFDF         	movff	fputc@c,indf2
  5707   004B98  EE20 F003          	lfsr	2,3
  5708   004B9C  5003               	movf	fputc@fp^0,w,c
  5709   004B9E  26D9               	addwf	fsr2l,f,c
  5710   004BA0  5004               	movf	(fputc@fp+1)^0,w,c
  5711   004BA2  22DA               	addwfc	fsr2h,f,c
  5712   004BA4  2ADE               	incf	postinc2,f,c
  5713   004BA6  0E00               	movlw	0
  5714   004BA8  22DD               	addwfc	postdec2,f,c
  5715   004BAA                     l1515:
  5716   004BAA  0012               	return		;funcret
  5717   004BAC                     __end_of_fputc:
  5718                           	callstack 0
  5719                           
  5720 ;; *************** function _putch *****************
  5721 ;; Defined at:
  5722 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  c               1    wreg     unsigned char 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  c               1    0[COMRAM] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5740 ;;Total ram usage:        0 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 1
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_fputc
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text16
  5751   005C72                     __ptext16:
  5752                           	callstack 0
  5753   005C72                     _putch:
  5754                           	callstack 25
  5755   005C72  0012               	return		;funcret
  5756   005C74                     __end_of_putch:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function _abs *****************
  5760 ;; Defined at:
  5761 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  a               2   18[COMRAM] int 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  2   18[COMRAM] int 
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;Total ram usage:        4 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; Hardware stack levels required when called: 1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_dtoa
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text17
  5790   005990                     __ptext17:
  5791                           	callstack 0
  5792   005990                     _abs:
  5793                           	callstack 25
  5794   005990  BE14               	btfsc	(abs@a+1)^0,7,c
  5795   005992  EFD5  F02C         	goto	u4050
  5796   005996  5014               	movf	(abs@a+1)^0,w,c
  5797   005998  E106               	bnz	u4051
  5798   00599A  0413               	decf	abs@a^0,w,c
  5799   00599C  B0D8               	btfsc	status,0,c
  5800   00599E  EFD3  F02C         	goto	u4051
  5801   0059A2  EFD5  F02C         	goto	u4050
  5802   0059A6                     u4051:
  5803   0059A6  EFE3  F02C         	goto	l1474
  5804   0059AA                     u4050:
  5805   0059AA  C013  F015         	movff	abs@a,??_abs
  5806   0059AE  C014  F016         	movff	abs@a+1,??_abs+1
  5807   0059B2  1E15               	comf	??_abs^0,f,c
  5808   0059B4  1E16               	comf	(??_abs+1)^0,f,c
  5809   0059B6  4A15               	infsnz	??_abs^0,f,c
  5810   0059B8  2A16               	incf	(??_abs+1)^0,f,c
  5811   0059BA  C015  F013         	movff	??_abs,?_abs
  5812   0059BE  C016  F014         	movff	??_abs+1,?_abs+1
  5813   0059C2  EFE7  F02C         	goto	l1477
  5814   0059C6                     l1474:
  5815   0059C6  C013  F013         	movff	abs@a,?_abs
  5816   0059CA  C014  F014         	movff	abs@a+1,?_abs+1
  5817   0059CE                     l1477:
  5818   0059CE  0012               	return		;funcret
  5819   0059D0                     __end_of_abs:
  5820                           	callstack 0
  5821                           
  5822 ;; *************** function ___aomod *****************
  5823 ;; Defined at:
  5824 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  dividend        8    0[COMRAM] long long 
  5827 ;;  divisor         8    8[COMRAM] long long 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  sign            1   17[COMRAM] unsigned char 
  5830 ;;  counter         1   16[COMRAM] unsigned char 
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  8    0[COMRAM] long long 
  5833 ;; Registers used:
  5834 ;;		wreg, status,2, status,0
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5840 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;Total ram usage:       18 bytes
  5845 ;; Hardware stack levels used: 1
  5846 ;; Hardware stack levels required when called: 1
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_dtoa
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text18
  5855   004676                     __ptext18:
  5856                           	callstack 0
  5857   004676                     ___aomod:
  5858                           	callstack 25
  5859   004676  0E00               	movlw	0
  5860   004678  6E12               	movwf	___aomod@sign^0,c
  5861   00467A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5862   00467C  EF44  F023         	goto	u3390
  5863   004680  EF42  F023         	goto	u3391
  5864   004684                     u3391:
  5865   004684  EF56  F023         	goto	l3984
  5866   004688                     u3390:
  5867   004688  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5868   00468A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5869   00468C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5870   00468E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5871   004690  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5872   004692  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5873   004694  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5874   004696  6C01               	negf	___aomod@dividend^0,c
  5875   004698  0E00               	movlw	0
  5876   00469A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5877   00469C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5878   00469E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5879   0046A0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5880   0046A2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5881   0046A4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5882   0046A6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5883   0046A8  0E01               	movlw	1
  5884   0046AA  6E12               	movwf	___aomod@sign^0,c
  5885   0046AC                     l3984:
  5886   0046AC  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5887   0046AE  EF5D  F023         	goto	u3400
  5888   0046B2  EF5B  F023         	goto	u3401
  5889   0046B6                     u3401:
  5890   0046B6  EF6D  F023         	goto	l3988
  5891   0046BA                     u3400:
  5892   0046BA  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5893   0046BC  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5894   0046BE  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5895   0046C0  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5896   0046C2  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5897   0046C4  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5898   0046C6  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5899   0046C8  6C09               	negf	___aomod@divisor^0,c
  5900   0046CA  0E00               	movlw	0
  5901   0046CC  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5902   0046CE  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5903   0046D0  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5904   0046D2  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5905   0046D4  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5906   0046D6  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5907   0046D8  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5908   0046DA                     l3988:
  5909   0046DA  5009               	movf	___aomod@divisor^0,w,c
  5910   0046DC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5911   0046DE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5912   0046E0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5913   0046E2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5914   0046E4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5915   0046E6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5916   0046E8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5917   0046EA  B4D8               	btfsc	status,2,c
  5918   0046EC  EF7A  F023         	goto	u3411
  5919   0046F0  EF7C  F023         	goto	u3410
  5920   0046F4                     u3411:
  5921   0046F4  EFC4  F023         	goto	l4004
  5922   0046F8                     u3410:
  5923   0046F8  0E01               	movlw	1
  5924   0046FA  6E11               	movwf	___aomod@counter^0,c
  5925   0046FC  EF8A  F023         	goto	l3994
  5926   004700                     l3992:
  5927   004700  90D8               	bcf	status,0,c
  5928   004702  3609               	rlcf	___aomod@divisor^0,f,c
  5929   004704  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5930   004706  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5931   004708  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5932   00470A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5933   00470C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5934   00470E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5935   004710  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5936   004712  2A11               	incf	___aomod@counter^0,f,c
  5937   004714                     l3994:
  5938   004714  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5939   004716  EF8F  F023         	goto	u3421
  5940   00471A  EF91  F023         	goto	u3420
  5941   00471E                     u3421:
  5942   00471E  EF80  F023         	goto	l3992
  5943   004722                     u3420:
  5944   004722                     l3996:
  5945   004722  5009               	movf	___aomod@divisor^0,w,c
  5946   004724  5C01               	subwf	___aomod@dividend^0,w,c
  5947   004726  500A               	movf	(___aomod@divisor+1)^0,w,c
  5948   004728  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5949   00472A  500B               	movf	(___aomod@divisor+2)^0,w,c
  5950   00472C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5951   00472E  500C               	movf	(___aomod@divisor+3)^0,w,c
  5952   004730  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5953   004732  500D               	movf	(___aomod@divisor+4)^0,w,c
  5954   004734  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5955   004736  500E               	movf	(___aomod@divisor+5)^0,w,c
  5956   004738  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5957   00473A  500F               	movf	(___aomod@divisor+6)^0,w,c
  5958   00473C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5959   00473E  5010               	movf	(___aomod@divisor+7)^0,w,c
  5960   004740  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5961   004742  A0D8               	btfss	status,0,c
  5962   004744  EFA6  F023         	goto	u3431
  5963   004748  EFA8  F023         	goto	u3430
  5964   00474C                     u3431:
  5965   00474C  EFB8  F023         	goto	l4000
  5966   004750                     u3430:
  5967   004750  5009               	movf	___aomod@divisor^0,w,c
  5968   004752  5E01               	subwf	___aomod@dividend^0,f,c
  5969   004754  500A               	movf	(___aomod@divisor+1)^0,w,c
  5970   004756  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5971   004758  500B               	movf	(___aomod@divisor+2)^0,w,c
  5972   00475A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5973   00475C  500C               	movf	(___aomod@divisor+3)^0,w,c
  5974   00475E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5975   004760  500D               	movf	(___aomod@divisor+4)^0,w,c
  5976   004762  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5977   004764  500E               	movf	(___aomod@divisor+5)^0,w,c
  5978   004766  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5979   004768  500F               	movf	(___aomod@divisor+6)^0,w,c
  5980   00476A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5981   00476C  5010               	movf	(___aomod@divisor+7)^0,w,c
  5982   00476E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5983   004770                     l4000:
  5984   004770  90D8               	bcf	status,0,c
  5985   004772  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5986   004774  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5987   004776  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5988   004778  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5989   00477A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5990   00477C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5991   00477E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5992   004780  3209               	rrcf	___aomod@divisor^0,f,c
  5993   004782  2E11               	decfsz	___aomod@counter^0,f,c
  5994   004784  EF91  F023         	goto	l3996
  5995   004788                     l4004:
  5996   004788  5012               	movf	___aomod@sign^0,w,c
  5997   00478A  B4D8               	btfsc	status,2,c
  5998   00478C  EFCA  F023         	goto	u3441
  5999   004790  EFCC  F023         	goto	u3440
  6000   004794                     u3441:
  6001   004794  EFDC  F023         	goto	l4008
  6002   004798                     u3440:
  6003   004798  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6004   00479A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6005   00479C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6006   00479E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6007   0047A0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6008   0047A2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6009   0047A4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6010   0047A6  6C01               	negf	___aomod@dividend^0,c
  6011   0047A8  0E00               	movlw	0
  6012   0047AA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6013   0047AC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6014   0047AE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6015   0047B0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6016   0047B2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6017   0047B4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6018   0047B6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6019   0047B8                     l4008:
  6020   0047B8  C001  F001         	movff	___aomod@dividend,?___aomod
  6021   0047BC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6022   0047C0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6023   0047C4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6024   0047C8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6025   0047CC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6026   0047D0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6027   0047D4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6028   0047D8  0012               	return		;funcret
  6029   0047DA                     __end_of___aomod:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function ___aodiv *****************
  6033 ;; Defined at:
  6034 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  dividend        8    0[COMRAM] long long 
  6037 ;;  divisor         8    8[COMRAM] long long 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  quotient        8   18[COMRAM] long long 
  6040 ;;  sign            1   17[COMRAM] unsigned char 
  6041 ;;  counter         1   16[COMRAM] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  8    0[COMRAM] long long 
  6044 ;; Registers used:
  6045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6051 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;Total ram usage:       26 bytes
  6056 ;; Hardware stack levels used: 1
  6057 ;; Hardware stack levels required when called: 1
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_dtoa
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text19
  6066   004382                     __ptext19:
  6067                           	callstack 0
  6068   004382                     ___aodiv:
  6069                           	callstack 25
  6070   004382  0E00               	movlw	0
  6071   004384  6E12               	movwf	___aodiv@sign^0,c
  6072   004386  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6073   004388  EFCA  F021         	goto	u3320
  6074   00438C  EFC8  F021         	goto	u3321
  6075   004390                     u3321:
  6076   004390  EFDC  F021         	goto	l3940
  6077   004394                     u3320:
  6078   004394  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6079   004396  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6080   004398  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6081   00439A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6082   00439C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6083   00439E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6084   0043A0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6085   0043A2  6C09               	negf	___aodiv@divisor^0,c
  6086   0043A4  0E00               	movlw	0
  6087   0043A6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6088   0043A8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6089   0043AA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6090   0043AC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6091   0043AE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6092   0043B0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6093   0043B2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6094   0043B4  0E01               	movlw	1
  6095   0043B6  6E12               	movwf	___aodiv@sign^0,c
  6096   0043B8                     l3940:
  6097   0043B8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6098   0043BA  EFE3  F021         	goto	u3330
  6099   0043BE  EFE1  F021         	goto	u3331
  6100   0043C2                     u3331:
  6101   0043C2  EFF5  F021         	goto	l3946
  6102   0043C6                     u3330:
  6103   0043C6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6104   0043C8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6105   0043CA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6106   0043CC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6107   0043CE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6108   0043D0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6109   0043D2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6110   0043D4  6C01               	negf	___aodiv@dividend^0,c
  6111   0043D6  0E00               	movlw	0
  6112   0043D8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6113   0043DA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6114   0043DC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6115   0043DE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6116   0043E0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6117   0043E2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6118   0043E4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6119   0043E6  0E01               	movlw	1
  6120   0043E8  1A12               	xorwf	___aodiv@sign^0,f,c
  6121   0043EA                     l3946:
  6122   0043EA  EE20  F013         	lfsr	2,___aodiv@quotient
  6123   0043EE  0E07               	movlw	7
  6124   0043F0                     u3341:
  6125   0043F0  6ADE               	clrf	postinc2,c
  6126   0043F2  06E8               	decf	wreg,f,c
  6127   0043F4  E2FD               	bc	u3341
  6128   0043F6  5009               	movf	___aodiv@divisor^0,w,c
  6129   0043F8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6130   0043FA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6131   0043FC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6132   0043FE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6133   004400  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6134   004402  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6135   004404  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6136   004406  B4D8               	btfsc	status,2,c
  6137   004408  EF08  F022         	goto	u3351
  6138   00440C  EF0A  F022         	goto	u3350
  6139   004410                     u3351:
  6140   004410  EF5C  F022         	goto	l3968
  6141   004414                     u3350:
  6142   004414  0E01               	movlw	1
  6143   004416  6E11               	movwf	___aodiv@counter^0,c
  6144   004418  EF18  F022         	goto	l3954
  6145   00441C                     l3952:
  6146   00441C  90D8               	bcf	status,0,c
  6147   00441E  3609               	rlcf	___aodiv@divisor^0,f,c
  6148   004420  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6149   004422  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6150   004424  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6151   004426  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6152   004428  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6153   00442A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6154   00442C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6155   00442E  2A11               	incf	___aodiv@counter^0,f,c
  6156   004430                     l3954:
  6157   004430  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6158   004432  EF1D  F022         	goto	u3361
  6159   004436  EF1F  F022         	goto	u3360
  6160   00443A                     u3361:
  6161   00443A  EF0E  F022         	goto	l3952
  6162   00443E                     u3360:
  6163   00443E                     l3956:
  6164   00443E  90D8               	bcf	status,0,c
  6165   004440  3613               	rlcf	___aodiv@quotient^0,f,c
  6166   004442  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6167   004444  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6168   004446  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6169   004448  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6170   00444A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6171   00444C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6172   00444E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6173   004450  5009               	movf	___aodiv@divisor^0,w,c
  6174   004452  5C01               	subwf	___aodiv@dividend^0,w,c
  6175   004454  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6176   004456  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6177   004458  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6178   00445A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6179   00445C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6180   00445E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6181   004460  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6182   004462  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6183   004464  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6184   004466  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6185   004468  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6186   00446A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6187   00446C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6188   00446E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6189   004470  A0D8               	btfss	status,0,c
  6190   004472  EF3D  F022         	goto	u3371
  6191   004476  EF3F  F022         	goto	u3370
  6192   00447A                     u3371:
  6193   00447A  EF50  F022         	goto	l3964
  6194   00447E                     u3370:
  6195   00447E  5009               	movf	___aodiv@divisor^0,w,c
  6196   004480  5E01               	subwf	___aodiv@dividend^0,f,c
  6197   004482  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6198   004484  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6199   004486  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6200   004488  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6201   00448A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6202   00448C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6203   00448E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6204   004490  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6205   004492  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6206   004494  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6207   004496  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6208   004498  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6209   00449A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6210   00449C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6211   00449E  8013               	bsf	___aodiv@quotient^0,0,c
  6212   0044A0                     l3964:
  6213   0044A0  90D8               	bcf	status,0,c
  6214   0044A2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6215   0044A4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6216   0044A6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6217   0044A8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6218   0044AA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6219   0044AC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6220   0044AE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6221   0044B0  3209               	rrcf	___aodiv@divisor^0,f,c
  6222   0044B2  2E11               	decfsz	___aodiv@counter^0,f,c
  6223   0044B4  EF1F  F022         	goto	l3956
  6224   0044B8                     l3968:
  6225   0044B8  5012               	movf	___aodiv@sign^0,w,c
  6226   0044BA  B4D8               	btfsc	status,2,c
  6227   0044BC  EF62  F022         	goto	u3381
  6228   0044C0  EF64  F022         	goto	u3380
  6229   0044C4                     u3381:
  6230   0044C4  EF74  F022         	goto	l3972
  6231   0044C8                     u3380:
  6232   0044C8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6233   0044CA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6234   0044CC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6235   0044CE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6236   0044D0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6237   0044D2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6238   0044D4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6239   0044D6  6C13               	negf	___aodiv@quotient^0,c
  6240   0044D8  0E00               	movlw	0
  6241   0044DA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6242   0044DC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6243   0044DE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6244   0044E0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6245   0044E2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6246   0044E4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6247   0044E6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6248   0044E8                     l3972:
  6249   0044E8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6250   0044EC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6251   0044F0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6252   0044F4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6253   0044F8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6254   0044FC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6255   004500  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6256   004504  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6257   004508  0012               	return		;funcret
  6258   00450A                     __end_of___aodiv:
  6259                           	callstack 0
  6260                           
  6261 ;; *************** function _sendStringSerial4 *****************
  6262 ;; Defined at:
  6263 ;;		line 33 in file "serial.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  string          2    1[COMRAM] PTR unsigned char 
  6266 ;;		 -> main@buf(100), 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      void 
  6271 ;; Registers used:
  6272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6282 ;;Total ram usage:        2 bytes
  6283 ;; Hardware stack levels used: 1
  6284 ;; Hardware stack levels required when called: 2
  6285 ;; This function calls:
  6286 ;;		_sendCharSerial4
  6287 ;; This function is called by:
  6288 ;;		_main
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text20
  6293   005B00                     __ptext20:
  6294                           	callstack 0
  6295   005B00                     _sendStringSerial4:
  6296                           	callstack 28
  6297   005B00                     
  6298                           ;serial.c: 34:     while (*string!=0){
  6299   005B00  EF8B  F02D         	goto	l5322
  6300   005B04                     l5318:
  6301                           
  6302                           ;serial.c: 35:         sendCharSerial4(*string++);
  6303   005B04  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6304   005B08  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6305   005B0C  50DF               	movf	indf2,w,c
  6306   005B0E  EC16  F02E         	call	_sendCharSerial4
  6307   005B12  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6308   005B14  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6309   005B16                     l5322:
  6310                           
  6311                           ;serial.c: 34:     while (*string!=0){
  6312   005B16  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6313   005B1A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6314   005B1E  50DF               	movf	indf2,w,c
  6315   005B20  A4D8               	btfss	status,2,c
  6316   005B22  EF95  F02D         	goto	u5311
  6317   005B26  EF97  F02D         	goto	u5310
  6318   005B2A                     u5311:
  6319   005B2A  EF82  F02D         	goto	l5318
  6320   005B2E                     u5310:
  6321   005B2E  0012               	return		;funcret
  6322   005B30                     __end_of_sendStringSerial4:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function _sendCharSerial4 *****************
  6326 ;; Defined at:
  6327 ;;		line 26 in file "serial.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  charToSend      1    wreg     unsigned char 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  charToSend      1    0[COMRAM] unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6345 ;;Total ram usage:        1 bytes
  6346 ;; Hardware stack levels used: 1
  6347 ;; Hardware stack levels required when called: 1
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_sendStringSerial4
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text21
  6356   005C2C                     __ptext21:
  6357                           	callstack 0
  6358   005C2C                     _sendCharSerial4:
  6359                           	callstack 28
  6360                           
  6361                           ;incstack = 0
  6362                           ;sendCharSerial4@charToSend stored from wreg
  6363   005C2C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6364   005C2E                     l203:
  6365   005C2E  010E               	movlb	14	; () banked
  6366   005C30  A537               	btfss	55,2,b	;volatile
  6367   005C32  EF1D  F02E         	goto	u4861
  6368   005C36  EF1F  F02E         	goto	u4860
  6369   005C3A                     u4861:
  6370   005C3A  EF17  F02E         	goto	l203
  6371   005C3E                     u4860:
  6372   005C3E                     
  6373                           ; BSR set to: 14
  6374                           ;serial.c: 28:     TX4REG = charToSend;
  6375   005C3E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6376   005C42                     
  6377                           ; BSR set to: 14
  6378   005C42  0012               	return		;funcret
  6379   005C44                     __end_of_sendCharSerial4:
  6380                           	callstack 0
  6381                           
  6382 ;; *************** function _readColours *****************
  6383 ;; Defined at:
  6384 ;;		line 105 in file "color.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  vals            2   11[COMRAM] PTR struct RGB
  6387 ;;		 -> vals(8), 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;Total ram usage:        2 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; Hardware stack levels required when called: 4
  6406 ;; This function calls:
  6407 ;;		_color_read_Blue
  6408 ;;		_color_read_Green
  6409 ;;		_color_read_Red
  6410 ;;		_color_read_lum
  6411 ;; This function is called by:
  6412 ;;		_main
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text22
  6417   0051E8                     __ptext22:
  6418                           	callstack 0
  6419   0051E8                     _readColours:
  6420                           	callstack 26
  6421   0051E8                     
  6422                           ;color.c: 107:     vals ->R = color_read_Red();
  6423   0051E8  ECA2  F02B         	call	_color_read_Red	;wreg free
  6424   0051EC  C00C  FFD9         	movff	readColours@vals,fsr2l
  6425   0051F0  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6426   0051F4  C005  FFDE         	movff	?_color_read_Red,postinc2
  6427   0051F8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6428                           
  6429                           ;color.c: 108:     vals ->B = color_read_Blue();
  6430   0051FC  ECF2  F02B         	call	_color_read_Blue	;wreg free
  6431   005200  EE20 F004          	lfsr	2,4
  6432   005204  500C               	movf	readColours@vals^0,w,c
  6433   005206  26D9               	addwf	fsr2l,f,c
  6434   005208  500D               	movf	(readColours@vals+1)^0,w,c
  6435   00520A  22DA               	addwfc	fsr2h,f,c
  6436   00520C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6437   005210  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6438                           
  6439                           ;color.c: 109:     vals ->G = color_read_Green();
  6440   005214  ECCA  F02B         	call	_color_read_Green	;wreg free
  6441   005218  EE20 F002          	lfsr	2,2
  6442   00521C  500C               	movf	readColours@vals^0,w,c
  6443   00521E  26D9               	addwf	fsr2l,f,c
  6444   005220  500D               	movf	(readColours@vals+1)^0,w,c
  6445   005222  22DA               	addwfc	fsr2h,f,c
  6446   005224  C005  FFDE         	movff	?_color_read_Green,postinc2
  6447   005228  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6448                           
  6449                           ;color.c: 110:     vals ->L = color_read_lum();
  6450   00522C  EC7A  F02B         	call	_color_read_lum	;wreg free
  6451   005230  EE20 F006          	lfsr	2,6
  6452   005234  500C               	movf	readColours@vals^0,w,c
  6453   005236  26D9               	addwf	fsr2l,f,c
  6454   005238  500D               	movf	(readColours@vals+1)^0,w,c
  6455   00523A  22DA               	addwfc	fsr2h,f,c
  6456   00523C  C005  FFDE         	movff	?_color_read_lum,postinc2
  6457   005240  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6458   005244  0012               	return		;funcret
  6459   005246                     __end_of_readColours:
  6460                           	callstack 0
  6461                           
  6462 ;; *************** function _color_read_lum *****************
  6463 ;; Defined at:
  6464 ;;		line 49 in file "color.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  tmp             2    9[COMRAM] unsigned int 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  2    4[COMRAM] unsigned int 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6480 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6482 ;;Total ram usage:        7 bytes
  6483 ;; Hardware stack levels used: 1
  6484 ;; Hardware stack levels required when called: 3
  6485 ;; This function calls:
  6486 ;;		_I2C_2_Master_Read
  6487 ;;		_I2C_2_Master_RepStart
  6488 ;;		_I2C_2_Master_Start
  6489 ;;		_I2C_2_Master_Stop
  6490 ;;		_I2C_2_Master_Write
  6491 ;; This function is called by:
  6492 ;;		_readColours
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text23
  6497   0056F4                     __ptext23:
  6498                           	callstack 0
  6499   0056F4                     _color_read_lum:
  6500                           	callstack 26
  6501   0056F4                     
  6502                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6503   0056F4  EC32  F02E         	call	_I2C_2_Master_Start	;wreg free
  6504                           
  6505                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6506   0056F8  0E52               	movlw	82
  6507   0056FA  EC22  F02E         	call	_I2C_2_Master_Write
  6508                           
  6509                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6510   0056FE  0EB4               	movlw	180
  6511   005700  EC22  F02E         	call	_I2C_2_Master_Write
  6512                           
  6513                           ;color.c: 55:  I2C_2_Master_RepStart();
  6514   005704  EC28  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6515                           
  6516                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6517   005708  0E53               	movlw	83
  6518   00570A  EC22  F02E         	call	_I2C_2_Master_Write
  6519                           
  6520                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6521   00570E  0E01               	movlw	1
  6522   005710  ECA7  F02C         	call	_I2C_2_Master_Read
  6523   005714  6E07               	movwf	??_color_read_lum^0,c
  6524   005716  5007               	movf	??_color_read_lum^0,w,c
  6525   005718  6E0A               	movwf	color_read_lum@tmp^0,c
  6526   00571A  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6527                           
  6528                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6529   00571C  0E00               	movlw	0
  6530   00571E  ECA7  F02C         	call	_I2C_2_Master_Read
  6531   005722  6E07               	movwf	??_color_read_lum^0,c
  6532   005724  5007               	movf	??_color_read_lum^0,w,c
  6533   005726  6E09               	movwf	(??_color_read_lum+2)^0,c
  6534   005728  6A08               	clrf	(??_color_read_lum+1)^0,c
  6535   00572A  500A               	movf	color_read_lum@tmp^0,w,c
  6536   00572C  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6537   00572E  6E0A               	movwf	color_read_lum@tmp^0,c
  6538   005730  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6539   005732  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6540   005734  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6541                           
  6542                           ;color.c: 59:  I2C_2_Master_Stop();
  6543   005736  EC2D  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6544   00573A                     
  6545                           ;color.c: 60:  return tmp;
  6546   00573A  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6547   00573E  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6548   005742  0012               	return		;funcret
  6549   005744                     __end_of_color_read_lum:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _color_read_Red *****************
  6553 ;; Defined at:
  6554 ;;		line 63 in file "color.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  tmp             2    9[COMRAM] unsigned int 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  2    4[COMRAM] unsigned int 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6570 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6571 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;Total ram usage:        7 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 3
  6575 ;; This function calls:
  6576 ;;		_I2C_2_Master_Read
  6577 ;;		_I2C_2_Master_RepStart
  6578 ;;		_I2C_2_Master_Start
  6579 ;;		_I2C_2_Master_Stop
  6580 ;;		_I2C_2_Master_Write
  6581 ;; This function is called by:
  6582 ;;		_readColours
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text24
  6587   005744                     __ptext24:
  6588                           	callstack 0
  6589   005744                     _color_read_Red:
  6590                           	callstack 26
  6591   005744                     
  6592                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6593   005744  EC32  F02E         	call	_I2C_2_Master_Start	;wreg free
  6594                           
  6595                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6596   005748  0E52               	movlw	82
  6597   00574A  EC22  F02E         	call	_I2C_2_Master_Write
  6598                           
  6599                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6600   00574E  0EB6               	movlw	182
  6601   005750  EC22  F02E         	call	_I2C_2_Master_Write
  6602                           
  6603                           ;color.c: 69:  I2C_2_Master_RepStart();
  6604   005754  EC28  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6605                           
  6606                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6607   005758  0E53               	movlw	83
  6608   00575A  EC22  F02E         	call	_I2C_2_Master_Write
  6609                           
  6610                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  6611   00575E  0E01               	movlw	1
  6612   005760  ECA7  F02C         	call	_I2C_2_Master_Read
  6613   005764  6E07               	movwf	??_color_read_Red^0,c
  6614   005766  5007               	movf	??_color_read_Red^0,w,c
  6615   005768  6E0A               	movwf	color_read_Red@tmp^0,c
  6616   00576A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6617                           
  6618                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6619   00576C  0E00               	movlw	0
  6620   00576E  ECA7  F02C         	call	_I2C_2_Master_Read
  6621   005772  6E07               	movwf	??_color_read_Red^0,c
  6622   005774  5007               	movf	??_color_read_Red^0,w,c
  6623   005776  6E09               	movwf	(??_color_read_Red+2)^0,c
  6624   005778  6A08               	clrf	(??_color_read_Red+1)^0,c
  6625   00577A  500A               	movf	color_read_Red@tmp^0,w,c
  6626   00577C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6627   00577E  6E0A               	movwf	color_read_Red@tmp^0,c
  6628   005780  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6629   005782  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6630   005784  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6631                           
  6632                           ;color.c: 73:  I2C_2_Master_Stop();
  6633   005786  EC2D  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6634   00578A                     
  6635                           ;color.c: 74:  return tmp;
  6636   00578A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6637   00578E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6638   005792  0012               	return		;funcret
  6639   005794                     __end_of_color_read_Red:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _color_read_Green *****************
  6643 ;; Defined at:
  6644 ;;		line 76 in file "color.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  tmp             2    9[COMRAM] unsigned int 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  2    4[COMRAM] unsigned int 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;Total ram usage:        7 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; Hardware stack levels required when called: 3
  6665 ;; This function calls:
  6666 ;;		_I2C_2_Master_Read
  6667 ;;		_I2C_2_Master_RepStart
  6668 ;;		_I2C_2_Master_Start
  6669 ;;		_I2C_2_Master_Stop
  6670 ;;		_I2C_2_Master_Write
  6671 ;; This function is called by:
  6672 ;;		_readColours
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text25
  6677   005794                     __ptext25:
  6678                           	callstack 0
  6679   005794                     _color_read_Green:
  6680                           	callstack 26
  6681   005794                     
  6682                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6683   005794  EC32  F02E         	call	_I2C_2_Master_Start	;wreg free
  6684                           
  6685                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6686   005798  0E52               	movlw	82
  6687   00579A  EC22  F02E         	call	_I2C_2_Master_Write
  6688                           
  6689                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  6690   00579E  0EB8               	movlw	184
  6691   0057A0  EC22  F02E         	call	_I2C_2_Master_Write
  6692                           
  6693                           ;color.c: 82:  I2C_2_Master_RepStart();
  6694   0057A4  EC28  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6695                           
  6696                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6697   0057A8  0E53               	movlw	83
  6698   0057AA  EC22  F02E         	call	_I2C_2_Master_Write
  6699                           
  6700                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6701   0057AE  0E01               	movlw	1
  6702   0057B0  ECA7  F02C         	call	_I2C_2_Master_Read
  6703   0057B4  6E07               	movwf	??_color_read_Green^0,c
  6704   0057B6  5007               	movf	??_color_read_Green^0,w,c
  6705   0057B8  6E0A               	movwf	color_read_Green@tmp^0,c
  6706   0057BA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6707                           
  6708                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6709   0057BC  0E00               	movlw	0
  6710   0057BE  ECA7  F02C         	call	_I2C_2_Master_Read
  6711   0057C2  6E07               	movwf	??_color_read_Green^0,c
  6712   0057C4  5007               	movf	??_color_read_Green^0,w,c
  6713   0057C6  6E09               	movwf	(??_color_read_Green+2)^0,c
  6714   0057C8  6A08               	clrf	(??_color_read_Green+1)^0,c
  6715   0057CA  500A               	movf	color_read_Green@tmp^0,w,c
  6716   0057CC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6717   0057CE  6E0A               	movwf	color_read_Green@tmp^0,c
  6718   0057D0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6719   0057D2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6720   0057D4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6721                           
  6722                           ;color.c: 86:  I2C_2_Master_Stop();
  6723   0057D6  EC2D  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6724   0057DA                     
  6725                           ;color.c: 87:  return tmp;
  6726   0057DA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6727   0057DE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6728   0057E2  0012               	return		;funcret
  6729   0057E4                     __end_of_color_read_Green:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _color_read_Blue *****************
  6733 ;; Defined at:
  6734 ;;		line 90 in file "color.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;		None
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  tmp             2    9[COMRAM] unsigned int 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  2    4[COMRAM] unsigned int 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;Total ram usage:        7 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; Hardware stack levels required when called: 3
  6755 ;; This function calls:
  6756 ;;		_I2C_2_Master_Read
  6757 ;;		_I2C_2_Master_RepStart
  6758 ;;		_I2C_2_Master_Start
  6759 ;;		_I2C_2_Master_Stop
  6760 ;;		_I2C_2_Master_Write
  6761 ;; This function is called by:
  6762 ;;		_readColours
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text26
  6767   0057E4                     __ptext26:
  6768                           	callstack 0
  6769   0057E4                     _color_read_Blue:
  6770                           	callstack 26
  6771   0057E4                     
  6772                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  6773   0057E4  EC32  F02E         	call	_I2C_2_Master_Start	;wreg free
  6774                           
  6775                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  6776   0057E8  0E52               	movlw	82
  6777   0057EA  EC22  F02E         	call	_I2C_2_Master_Write
  6778                           
  6779                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  6780   0057EE  0EBA               	movlw	186
  6781   0057F0  EC22  F02E         	call	_I2C_2_Master_Write
  6782                           
  6783                           ;color.c: 96:  I2C_2_Master_RepStart();
  6784   0057F4  EC28  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6785                           
  6786                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  6787   0057F8  0E53               	movlw	83
  6788   0057FA  EC22  F02E         	call	_I2C_2_Master_Write
  6789                           
  6790                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  6791   0057FE  0E01               	movlw	1
  6792   005800  ECA7  F02C         	call	_I2C_2_Master_Read
  6793   005804  6E07               	movwf	??_color_read_Blue^0,c
  6794   005806  5007               	movf	??_color_read_Blue^0,w,c
  6795   005808  6E0A               	movwf	color_read_Blue@tmp^0,c
  6796   00580A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6797                           
  6798                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6799   00580C  0E00               	movlw	0
  6800   00580E  ECA7  F02C         	call	_I2C_2_Master_Read
  6801   005812  6E07               	movwf	??_color_read_Blue^0,c
  6802   005814  5007               	movf	??_color_read_Blue^0,w,c
  6803   005816  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6804   005818  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6805   00581A  500A               	movf	color_read_Blue@tmp^0,w,c
  6806   00581C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6807   00581E  6E0A               	movwf	color_read_Blue@tmp^0,c
  6808   005820  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6809   005822  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6810   005824  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6811                           
  6812                           ;color.c: 100:  I2C_2_Master_Stop();
  6813   005826  EC2D  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6814   00582A                     
  6815                           ;color.c: 101:  return tmp;
  6816   00582A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6817   00582E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6818   005832  0012               	return		;funcret
  6819   005834                     __end_of_color_read_Blue:
  6820                           	callstack 0
  6821                           
  6822 ;; *************** function _I2C_2_Master_RepStart *****************
  6823 ;; Defined at:
  6824 ;;		line 33 in file "i2c.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;		None
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1    wreg      void 
  6831 ;; Registers used:
  6832 ;;		wreg, status,2, status,0, cstack
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6842 ;;Total ram usage:        0 bytes
  6843 ;; Hardware stack levels used: 1
  6844 ;; Hardware stack levels required when called: 2
  6845 ;; This function calls:
  6846 ;;		_I2C_2_Master_Idle
  6847 ;; This function is called by:
  6848 ;;		_color_read_lum
  6849 ;;		_color_read_Red
  6850 ;;		_color_read_Green
  6851 ;;		_color_read_Blue
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text27
  6856   005C50                     __ptext27:
  6857                           	callstack 0
  6858   005C50                     _I2C_2_Master_RepStart:
  6859                           	callstack 26
  6860   005C50                     
  6861                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6862   005C50  ECAD  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6863   005C54                     
  6864                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6865   005C54  010E               	movlb	14	; () banked
  6866   005C56  83DA               	bsf	218,1,b	;volatile
  6867   005C58                     
  6868                           ; BSR set to: 14
  6869   005C58  0012               	return		;funcret
  6870   005C5A                     __end_of_I2C_2_Master_RepStart:
  6871                           	callstack 0
  6872                           
  6873 ;; *************** function _I2C_2_Master_Read *****************
  6874 ;; Defined at:
  6875 ;;		line 51 in file "i2c.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  ack             1    wreg     unsigned char 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;  ack             1    2[COMRAM] unsigned char 
  6880 ;;  tmp             1    3[COMRAM] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  1    wreg      unsigned char 
  6883 ;; Registers used:
  6884 ;;		wreg, status,2, status,0, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6894 ;;Total ram usage:        3 bytes
  6895 ;; Hardware stack levels used: 1
  6896 ;; Hardware stack levels required when called: 2
  6897 ;; This function calls:
  6898 ;;		_I2C_2_Master_Idle
  6899 ;; This function is called by:
  6900 ;;		_color_read_lum
  6901 ;;		_color_read_Red
  6902 ;;		_color_read_Green
  6903 ;;		_color_read_Blue
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text28
  6908   00594E                     __ptext28:
  6909                           	callstack 0
  6910   00594E                     _I2C_2_Master_Read:
  6911                           	callstack 26
  6912                           
  6913                           ; BSR set to: 14
  6914                           ;incstack = 0
  6915                           ;I2C_2_Master_Read@ack stored from wreg
  6916   00594E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6917   005950                     
  6918                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6919   005950  ECAD  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6920   005954                     
  6921                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6922   005954  010E               	movlb	14	; () banked
  6923   005956  87DA               	bsf	218,3,b	;volatile
  6924                           
  6925                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6926   005958  ECAD  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6927   00595C                     
  6928                           ;i2c.c: 57:   tmp = SSP2BUF;
  6929   00595C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6930                           
  6931                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6932   005960  ECAD  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6933   005964                     
  6934                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6935   005964  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6936   005966  B4D8               	btfsc	status,2,c
  6937   005968  EFB8  F02C         	goto	u4801
  6938   00596C  EFBC  F02C         	goto	u4800
  6939   005970                     u4801:
  6940   005970  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6941   005972  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6942   005974  EFBD  F02C         	goto	u4818
  6943   005978                     u4800:
  6944   005978  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6945   00597A                     u4818:
  6946   00597A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6947   00597C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6948   00597E  010E               	movlb	14	; () banked
  6949   005980  51DA               	movf	218,w,b	;volatile
  6950   005982  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6951   005984  0BDF               	andlw	-33
  6952   005986  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6953   005988  6FDA               	movwf	218,b	;volatile
  6954   00598A                     
  6955                           ; BSR set to: 14
  6956                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6957   00598A  89DA               	bsf	218,4,b	;volatile
  6958   00598C                     
  6959                           ; BSR set to: 14
  6960                           ;i2c.c: 61:   return tmp;
  6961   00598C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6962   00598E                     
  6963                           ; BSR set to: 14
  6964   00598E  0012               	return		;funcret
  6965   005990                     __end_of_I2C_2_Master_Read:
  6966                           	callstack 0
  6967                           
  6968 ;; *************** function _initUSART4 *****************
  6969 ;; Defined at:
  6970 ;;		line 4 in file "serial.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, status,2
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6988 ;;Total ram usage:        0 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; Hardware stack levels required when called: 1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_main
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text29
  6999   005C0E                     __ptext29:
  7000                           	callstack 0
  7001   005C0E                     _initUSART4:
  7002                           	callstack 29
  7003   005C0E                     
  7004                           ;serial.c: 5:     RC0PPS = 0x12;
  7005   005C0E  0E12               	movlw	18
  7006   005C10  010E               	movlb	14	; () banked
  7007   005C12  6F62               	movwf	98,b	;volatile
  7008                           
  7009                           ;serial.c: 6:     RX4PPS = 0x11;
  7010   005C14  0E11               	movlw	17
  7011   005C16  6F15               	movwf	21,b	;volatile
  7012   005C18                     
  7013                           ; BSR set to: 14
  7014                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7015   005C18  97E9               	bcf	233,3,b	;volatile
  7016   005C1A                     
  7017                           ; BSR set to: 14
  7018                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7019   005C1A  95E8               	bcf	232,2,b	;volatile
  7020                           
  7021                           ;serial.c: 9:     SP4BRGL = 51;
  7022   005C1C  0E33               	movlw	51
  7023   005C1E  6FE5               	movwf	229,b	;volatile
  7024                           
  7025                           ;serial.c: 10:     SP4BRGH = 0;
  7026   005C20  0E00               	movlw	0
  7027   005C22  6FE6               	movwf	230,b	;volatile
  7028   005C24                     
  7029                           ; BSR set to: 14
  7030                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7031   005C24  89E7               	bsf	231,4,b	;volatile
  7032   005C26                     
  7033                           ; BSR set to: 14
  7034                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7035   005C26  8BE8               	bsf	232,5,b	;volatile
  7036   005C28                     
  7037                           ; BSR set to: 14
  7038                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7039   005C28  8FE7               	bsf	231,7,b	;volatile
  7040   005C2A                     
  7041                           ; BSR set to: 14
  7042   005C2A  0012               	return		;funcret
  7043   005C2C                     __end_of_initUSART4:
  7044                           	callstack 0
  7045                           
  7046 ;; *************** function _initDCmotorsPWM *****************
  7047 ;; Defined at:
  7048 ;;		line 5 in file "dc_motor.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      void 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;Total ram usage:        2 bytes
  7067 ;; Hardware stack levels used: 1
  7068 ;; Hardware stack levels required when called: 1
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_main
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text30
  7077   004EAE                     __ptext30:
  7078                           	callstack 0
  7079   004EAE                     _initDCmotorsPWM:
  7080                           	callstack 29
  7081   004EAE                     
  7082                           ;dc_motor.c: 9:     RE2PPS=0x05;
  7083   004EAE  0E05               	movlw	5
  7084   004EB0  010E               	movlb	14	; () banked
  7085   004EB2  6F74               	movwf	116,b	;volatile
  7086                           
  7087                           ;dc_motor.c: 10:     RE4PPS=0x06;
  7088   004EB4  0E06               	movlw	6
  7089   004EB6  6F76               	movwf	118,b	;volatile
  7090                           
  7091                           ;dc_motor.c: 11:     RC7PPS=0x07;
  7092   004EB8  0E07               	movlw	7
  7093   004EBA  6F69               	movwf	105,b	;volatile
  7094                           
  7095                           ;dc_motor.c: 12:     RG6PPS=0x08;
  7096   004EBC  0E08               	movlw	8
  7097   004EBE  6F88               	movwf	136,b	;volatile
  7098   004EC0                     
  7099                           ; BSR set to: 14
  7100                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  7101   004EC0  9485               	bcf	133,2,c	;volatile
  7102   004EC2                     
  7103                           ; BSR set to: 14
  7104                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  7105   004EC2  9885               	bcf	133,4,c	;volatile
  7106   004EC4                     
  7107                           ; BSR set to: 14
  7108                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  7109   004EC4  9E83               	bcf	131,7,c	;volatile
  7110   004EC6                     
  7111                           ; BSR set to: 14
  7112                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  7113   004EC6  9C87               	bcf	135,6,c	;volatile
  7114                           
  7115                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  7116   004EC8  50BD               	movf	189,w,c	;volatile
  7117   004ECA  0B8F               	andlw	-113
  7118   004ECC  0930               	iorlw	48
  7119   004ECE  6EBD               	movwf	189,c	;volatile
  7120                           
  7121                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  7122   004ED0  0EE0               	movlw	-32
  7123   004ED2  16BE               	andwf	190,f,c	;volatile
  7124                           
  7125                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  7126   004ED4  50BF               	movf	191,w,c	;volatile
  7127   004ED6  0BF0               	andlw	-16
  7128   004ED8  0901               	iorlw	1
  7129   004EDA  6EBF               	movwf	191,c	;volatile
  7130   004EDC                     
  7131                           ; BSR set to: 14
  7132                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  7133   004EDC  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7134   004EE0                     
  7135                           ; BSR set to: 14
  7136                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  7137   004EE0  8EBD               	bsf	189,7,c	;volatile
  7138                           
  7139                           ;dc_motor.c: 33:     CCPR1H=0;
  7140   004EE2  0E00               	movlw	0
  7141   004EE4  6EAA               	movwf	170,c	;volatile
  7142                           
  7143                           ;dc_motor.c: 34:     CCPR2H=0;
  7144   004EE6  0E00               	movlw	0
  7145   004EE8  6EA6               	movwf	166,c	;volatile
  7146                           
  7147                           ;dc_motor.c: 35:     CCPR3H=0;
  7148   004EEA  0E00               	movlw	0
  7149   004EEC  010F               	movlb	15	; () banked
  7150   004EEE  6F25               	movwf	37,b	;volatile
  7151                           
  7152                           ;dc_motor.c: 36:     CCPR4H=0;
  7153   004EF0  0E00               	movlw	0
  7154   004EF2  6F21               	movwf	33,b	;volatile
  7155                           
  7156                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  7157   004EF4  0EFC               	movlw	-4
  7158   004EF6  16AD               	andwf	173,f,c	;volatile
  7159                           
  7160                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  7161   004EF8  0EF3               	movlw	-13
  7162   004EFA  16AD               	andwf	173,f,c	;volatile
  7163                           
  7164                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  7165   004EFC  0ECF               	movlw	-49
  7166   004EFE  16AD               	andwf	173,f,c	;volatile
  7167                           
  7168                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  7169   004F00  0E3F               	movlw	-193
  7170   004F02  16AD               	andwf	173,f,c	;volatile
  7171   004F04                     
  7172                           ; BSR set to: 15
  7173                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  7174   004F04  88AB               	bsf	171,4,c	;volatile
  7175                           
  7176                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  7177   004F06  50AB               	movf	171,w,c	;volatile
  7178   004F08  0BF0               	andlw	-16
  7179   004F0A  090C               	iorlw	12
  7180   004F0C  6EAB               	movwf	171,c	;volatile
  7181   004F0E                     
  7182                           ; BSR set to: 15
  7183                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  7184   004F0E  8EAB               	bsf	171,7,c	;volatile
  7185   004F10                     
  7186                           ; BSR set to: 15
  7187                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  7188   004F10  88A7               	bsf	167,4,c	;volatile
  7189                           
  7190                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  7191   004F12  50A7               	movf	167,w,c	;volatile
  7192   004F14  0BF0               	andlw	-16
  7193   004F16  090C               	iorlw	12
  7194   004F18  6EA7               	movwf	167,c	;volatile
  7195   004F1A                     
  7196                           ; BSR set to: 15
  7197                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  7198   004F1A  8EA7               	bsf	167,7,c	;volatile
  7199   004F1C                     
  7200                           ; BSR set to: 15
  7201                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  7202   004F1C  8926               	bsf	38,4,b	;volatile
  7203                           
  7204                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  7205   004F1E  5126               	movf	38,w,b	;volatile
  7206   004F20  0BF0               	andlw	-16
  7207   004F22  090C               	iorlw	12
  7208   004F24  6F26               	movwf	38,b	;volatile
  7209   004F26                     
  7210                           ; BSR set to: 15
  7211                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  7212   004F26  8F26               	bsf	38,7,b	;volatile
  7213   004F28                     
  7214                           ; BSR set to: 15
  7215                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  7216   004F28  8922               	bsf	34,4,b	;volatile
  7217                           
  7218                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  7219   004F2A  5122               	movf	34,w,b	;volatile
  7220   004F2C  0BF0               	andlw	-16
  7221   004F2E  090C               	iorlw	12
  7222   004F30  6F22               	movwf	34,b	;volatile
  7223   004F32                     
  7224                           ; BSR set to: 15
  7225                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  7226   004F32  8F22               	bsf	34,7,b	;volatile
  7227   004F34                     
  7228                           ; BSR set to: 15
  7229   004F34  0012               	return		;funcret
  7230   004F36                     __end_of_initDCmotorsPWM:
  7231                           	callstack 0
  7232                           
  7233 ;; *************** function _go_Home *****************
  7234 ;; Defined at:
  7235 ;;		line 4 in file "Memory.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  WayBack         2   34[COMRAM] PTR unsigned char 
  7238 ;;		 -> WayBack(50), 
  7239 ;;  Time_forward    2   36[COMRAM] PTR int 
  7240 ;;		 -> Time_forward(100), 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  cur_time        2   41[COMRAM] int 
  7243 ;;  time_temp       2    0        unsigned int 
  7244 ;;  i               2   43[COMRAM] int 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7255 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;Total ram usage:       11 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 6
  7261 ;; This function calls:
  7262 ;;		_BlueMove
  7263 ;;		_Forwardhalfblock
  7264 ;;		_GreenMove
  7265 ;;		_LightBlueMove
  7266 ;;		_OrangeMove
  7267 ;;		_RedMove
  7268 ;;		_ReversePink
  7269 ;;		_ReverseYellow
  7270 ;;		_fullSpeedAhead
  7271 ;; This function is called by:
  7272 ;;		_main
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	text31
  7277   003D8A                     __ptext31:
  7278                           	callstack 0
  7279   003D8A                     _go_Home:
  7280                           	callstack 24
  7281   003D8A                     
  7282                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  7283   003D8A  C10C  F02C         	movff	_move_count,go_Home@i	;volatile
  7284   003D8E  C10D  F02D         	movff	_move_count+1,go_Home@i+1	;volatile
  7285   003D92                     l5408:
  7286   003D92  BE2D               	btfsc	(go_Home@i+1)^0,7,c
  7287   003D94  EFD0  F01E         	goto	u5350
  7288   003D98  EFCE  F01E         	goto	u5351
  7289   003D9C                     u5351:
  7290   003D9C  EFD2  F01E         	goto	l5412
  7291   003DA0                     u5350:
  7292   003DA0  EFDD  F01F         	goto	l618
  7293   003DA4                     l5412:
  7294                           
  7295                           ;Memory.c: 7:         TMR0H=0;
  7296   003DA4  0E00               	movlw	0
  7297   003DA6  6ED4               	movwf	212,c	;volatile
  7298                           
  7299                           ;Memory.c: 8:         TMR0L=0;
  7300   003DA8  0E00               	movlw	0
  7301   003DAA  6ED3               	movwf	211,c	;volatile
  7302   003DAC  50D3               	movf	211,w,c	;volatile
  7303                           
  7304                           ;Memory.c: 10:         int cur_time=TMR0H<<8;
  7305   003DAE  50D4               	movf	212,w,c	;volatile
  7306   003DB0  6E2B               	movwf	(go_Home@cur_time+1)^0,c
  7307   003DB2  6A2A               	clrf	go_Home@cur_time^0,c
  7308                           
  7309                           ;Memory.c: 11:         while (cur_time<Time_forward[i]){
  7310   003DB4  EFEA  F01E         	goto	l5422
  7311   003DB8                     l5416:
  7312                           
  7313                           ;Memory.c: 12:             fullSpeedAhead(&motorL,&motorR);
  7314   003DB8  0E73               	movlw	low _motorL
  7315   003DBA  6E14               	movwf	fullSpeedAhead@mL^0,c
  7316   003DBC  0E01               	movlw	high _motorL
  7317   003DBE  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  7318   003DC0  0E6A               	movlw	low _motorR
  7319   003DC2  6E16               	movwf	fullSpeedAhead@mR^0,c
  7320   003DC4  0E01               	movlw	high _motorR
  7321   003DC6  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  7322   003DC8  EC76  F026         	call	_fullSpeedAhead	;wreg free
  7323   003DCC  50D3               	movf	211,w,c	;volatile
  7324   003DCE                     
  7325                           ;Memory.c: 14:             cur_time=TMR0H<<8;
  7326   003DCE  50D4               	movf	212,w,c	;volatile
  7327   003DD0  6E2B               	movwf	(go_Home@cur_time+1)^0,c
  7328   003DD2  6A2A               	clrf	go_Home@cur_time^0,c
  7329   003DD4                     l5422:
  7330                           
  7331                           ;Memory.c: 11:         while (cur_time<Time_forward[i]){
  7332   003DD4  90D8               	bcf	status,0,c
  7333   003DD6  342C               	rlcf	go_Home@i^0,w,c
  7334   003DD8  6ED9               	movwf	fsr2l,c
  7335   003DDA  342D               	rlcf	(go_Home@i+1)^0,w,c
  7336   003DDC  6EDA               	movwf	fsr2h,c
  7337   003DDE  5025               	movf	go_Home@Time_forward^0,w,c
  7338   003DE0  26D9               	addwf	fsr2l,f,c
  7339   003DE2  5026               	movf	(go_Home@Time_forward+1)^0,w,c
  7340   003DE4  22DA               	addwfc	fsr2h,f,c
  7341   003DE6  50DE               	movf	postinc2,w,c
  7342   003DE8  5C2A               	subwf	go_Home@cur_time^0,w,c
  7343   003DEA  502B               	movf	(go_Home@cur_time+1)^0,w,c
  7344   003DEC  0A80               	xorlw	128
  7345   003DEE  6E29               	movwf	(??_go_Home+2)^0,c
  7346   003DF0  50DE               	movf	postinc2,w,c
  7347   003DF2  0A80               	xorlw	128
  7348   003DF4  5829               	subwfb	(??_go_Home+2)^0,w,c
  7349   003DF6  A0D8               	btfss	status,0,c
  7350   003DF8  EF00  F01F         	goto	u5361
  7351   003DFC  EF02  F01F         	goto	u5360
  7352   003E00                     u5361:
  7353   003E00  EFDC  F01E         	goto	l5416
  7354   003E04                     u5360:
  7355   003E04                     
  7356                           ;Memory.c: 17:         if (WayBack[i]==0){
  7357   003E04  502C               	movf	go_Home@i^0,w,c
  7358   003E06  2423               	addwf	go_Home@WayBack^0,w,c
  7359   003E08  6ED9               	movwf	fsr2l,c
  7360   003E0A  502D               	movf	(go_Home@i+1)^0,w,c
  7361   003E0C  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7362   003E0E  6EDA               	movwf	fsr2h,c
  7363   003E10  50DF               	movf	indf2,w,c
  7364   003E12  A4D8               	btfss	status,2,c
  7365   003E14  EF0E  F01F         	goto	u5371
  7366   003E18  EF10  F01F         	goto	u5370
  7367   003E1C                     u5371:
  7368   003E1C  EF1C  F01F         	goto	l5428
  7369   003E20                     u5370:
  7370   003E20                     
  7371                           ;Memory.c: 18:             Forwardhalfblock(&motorL,&motorR);
  7372   003E20  0E73               	movlw	low _motorL
  7373   003E22  6E19               	movwf	Forwardhalfblock@mL^0,c
  7374   003E24  0E01               	movlw	high _motorL
  7375   003E26  6E1A               	movwf	(Forwardhalfblock@mL+1)^0,c
  7376   003E28  0E6A               	movlw	low _motorR
  7377   003E2A  6E1B               	movwf	Forwardhalfblock@mR^0,c
  7378   003E2C  0E01               	movlw	high _motorR
  7379   003E2E  6E1C               	movwf	(Forwardhalfblock@mR+1)^0,c
  7380   003E30  EC50  F029         	call	_Forwardhalfblock	;wreg free
  7381                           
  7382                           ;Memory.c: 19:         }
  7383   003E34  EFD8  F01F         	goto	l5456
  7384   003E38                     l5428:
  7385   003E38  502C               	movf	go_Home@i^0,w,c
  7386   003E3A  2423               	addwf	go_Home@WayBack^0,w,c
  7387   003E3C  6ED9               	movwf	fsr2l,c
  7388   003E3E  502D               	movf	(go_Home@i+1)^0,w,c
  7389   003E40  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7390   003E42  6EDA               	movwf	fsr2h,c
  7391   003E44  04DE               	decf	postinc2,w,c
  7392   003E46  A4D8               	btfss	status,2,c
  7393   003E48  EF28  F01F         	goto	u5381
  7394   003E4C  EF2A  F01F         	goto	u5380
  7395   003E50                     u5381:
  7396   003E50  EF36  F01F         	goto	l5432
  7397   003E54                     u5380:
  7398   003E54                     
  7399                           ;Memory.c: 21:             GreenMove(&motorL, &motorR);
  7400   003E54  0E73               	movlw	low _motorL
  7401   003E56  6E1F               	movwf	GreenMove@mL^0,c
  7402   003E58  0E01               	movlw	high _motorL
  7403   003E5A  6E20               	movwf	(GreenMove@mL+1)^0,c
  7404   003E5C  0E6A               	movlw	low _motorR
  7405   003E5E  6E21               	movwf	GreenMove@mR^0,c
  7406   003E60  0E01               	movlw	high _motorR
  7407   003E62  6E22               	movwf	(GreenMove@mR+1)^0,c
  7408   003E64  EC45  F02D         	call	_GreenMove	;wreg free
  7409                           
  7410                           ;Memory.c: 22:         }
  7411   003E68  EFD8  F01F         	goto	l5456
  7412   003E6C                     l5432:
  7413   003E6C  502C               	movf	go_Home@i^0,w,c
  7414   003E6E  2423               	addwf	go_Home@WayBack^0,w,c
  7415   003E70  6ED9               	movwf	fsr2l,c
  7416   003E72  502D               	movf	(go_Home@i+1)^0,w,c
  7417   003E74  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7418   003E76  6EDA               	movwf	fsr2h,c
  7419   003E78  0E02               	movlw	2
  7420   003E7A  18DE               	xorwf	postinc2,w,c
  7421   003E7C  A4D8               	btfss	status,2,c
  7422   003E7E  EF43  F01F         	goto	u5391
  7423   003E82  EF45  F01F         	goto	u5390
  7424   003E86                     u5391:
  7425   003E86  EF51  F01F         	goto	l5436
  7426   003E8A                     u5390:
  7427   003E8A                     
  7428                           ;Memory.c: 24:             LightBlueMove(&motorL, &motorR);
  7429   003E8A  0E73               	movlw	low _motorL
  7430   003E8C  6E1F               	movwf	LightBlueMove@mL^0,c
  7431   003E8E  0E01               	movlw	high _motorL
  7432   003E90  6E20               	movwf	(LightBlueMove@mL+1)^0,c
  7433   003E92  0E6A               	movlw	low _motorR
  7434   003E94  6E21               	movwf	LightBlueMove@mR^0,c
  7435   003E96  0E01               	movlw	high _motorR
  7436   003E98  6E22               	movwf	(LightBlueMove@mR+1)^0,c
  7437   003E9A  ECAE  F02A         	call	_LightBlueMove	;wreg free
  7438                           
  7439                           ;Memory.c: 25:         }
  7440   003E9E  EFD8  F01F         	goto	l5456
  7441   003EA2                     l5436:
  7442   003EA2  502C               	movf	go_Home@i^0,w,c
  7443   003EA4  2423               	addwf	go_Home@WayBack^0,w,c
  7444   003EA6  6ED9               	movwf	fsr2l,c
  7445   003EA8  502D               	movf	(go_Home@i+1)^0,w,c
  7446   003EAA  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7447   003EAC  6EDA               	movwf	fsr2h,c
  7448   003EAE  0E03               	movlw	3
  7449   003EB0  18DE               	xorwf	postinc2,w,c
  7450   003EB2  A4D8               	btfss	status,2,c
  7451   003EB4  EF5E  F01F         	goto	u5401
  7452   003EB8  EF60  F01F         	goto	u5400
  7453   003EBC                     u5401:
  7454   003EBC  EF6C  F01F         	goto	l5440
  7455   003EC0                     u5400:
  7456   003EC0                     
  7457                           ;Memory.c: 27:             ReverseYellow(&motorL, &motorR);
  7458   003EC0  0E73               	movlw	low _motorL
  7459   003EC2  6E1F               	movwf	ReverseYellow@mL^0,c
  7460   003EC4  0E01               	movlw	high _motorL
  7461   003EC6  6E20               	movwf	(ReverseYellow@mL+1)^0,c
  7462   003EC8  0E6A               	movlw	low _motorR
  7463   003ECA  6E21               	movwf	ReverseYellow@mR^0,c
  7464   003ECC  0E01               	movlw	high _motorR
  7465   003ECE  6E22               	movwf	(ReverseYellow@mR+1)^0,c
  7466   003ED0  ECE8  F02C         	call	_ReverseYellow	;wreg free
  7467                           
  7468                           ;Memory.c: 28:         }
  7469   003ED4  EFD8  F01F         	goto	l5456
  7470   003ED8                     l5440:
  7471   003ED8  502C               	movf	go_Home@i^0,w,c
  7472   003EDA  2423               	addwf	go_Home@WayBack^0,w,c
  7473   003EDC  6ED9               	movwf	fsr2l,c
  7474   003EDE  502D               	movf	(go_Home@i+1)^0,w,c
  7475   003EE0  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7476   003EE2  6EDA               	movwf	fsr2h,c
  7477   003EE4  0E04               	movlw	4
  7478   003EE6  18DE               	xorwf	postinc2,w,c
  7479   003EE8  A4D8               	btfss	status,2,c
  7480   003EEA  EF79  F01F         	goto	u5411
  7481   003EEE  EF7B  F01F         	goto	u5410
  7482   003EF2                     u5411:
  7483   003EF2  EF87  F01F         	goto	l5444
  7484   003EF6                     u5410:
  7485   003EF6                     
  7486                           ;Memory.c: 30:             BlueMove(&motorL, &motorR);
  7487   003EF6  0E73               	movlw	low _motorL
  7488   003EF8  6E1F               	movwf	BlueMove@mL^0,c
  7489   003EFA  0E01               	movlw	high _motorL
  7490   003EFC  6E20               	movwf	(BlueMove@mL+1)^0,c
  7491   003EFE  0E6A               	movlw	low _motorR
  7492   003F00  6E21               	movwf	BlueMove@mR^0,c
  7493   003F02  0E01               	movlw	high _motorR
  7494   003F04  6E22               	movwf	(BlueMove@mR+1)^0,c
  7495   003F06  ECC1  F028         	call	_BlueMove	;wreg free
  7496                           
  7497                           ;Memory.c: 31:         }
  7498   003F0A  EFD8  F01F         	goto	l5456
  7499   003F0E                     l5444:
  7500   003F0E  502C               	movf	go_Home@i^0,w,c
  7501   003F10  2423               	addwf	go_Home@WayBack^0,w,c
  7502   003F12  6ED9               	movwf	fsr2l,c
  7503   003F14  502D               	movf	(go_Home@i+1)^0,w,c
  7504   003F16  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7505   003F18  6EDA               	movwf	fsr2h,c
  7506   003F1A  0E05               	movlw	5
  7507   003F1C  18DE               	xorwf	postinc2,w,c
  7508   003F1E  A4D8               	btfss	status,2,c
  7509   003F20  EF94  F01F         	goto	u5421
  7510   003F24  EF96  F01F         	goto	u5420
  7511   003F28                     u5421:
  7512   003F28  EFA2  F01F         	goto	l5448
  7513   003F2C                     u5420:
  7514   003F2C                     
  7515                           ;Memory.c: 33:             RedMove(&motorL, &motorR);
  7516   003F2C  0E73               	movlw	low _motorL
  7517   003F2E  6E1F               	movwf	RedMove@mL^0,c
  7518   003F30  0E01               	movlw	high _motorL
  7519   003F32  6E20               	movwf	(RedMove@mL+1)^0,c
  7520   003F34  0E6A               	movlw	low _motorR
  7521   003F36  6E21               	movwf	RedMove@mR^0,c
  7522   003F38  0E01               	movlw	high _motorR
  7523   003F3A  6E22               	movwf	(RedMove@mR+1)^0,c
  7524   003F3C  EC26  F02D         	call	_RedMove	;wreg free
  7525                           
  7526                           ;Memory.c: 34:         }
  7527   003F40  EFD8  F01F         	goto	l5456
  7528   003F44                     l5448:
  7529   003F44  502C               	movf	go_Home@i^0,w,c
  7530   003F46  2423               	addwf	go_Home@WayBack^0,w,c
  7531   003F48  6ED9               	movwf	fsr2l,c
  7532   003F4A  502D               	movf	(go_Home@i+1)^0,w,c
  7533   003F4C  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7534   003F4E  6EDA               	movwf	fsr2h,c
  7535   003F50  0E06               	movlw	6
  7536   003F52  18DE               	xorwf	postinc2,w,c
  7537   003F54  A4D8               	btfss	status,2,c
  7538   003F56  EFAF  F01F         	goto	u5431
  7539   003F5A  EFB1  F01F         	goto	u5430
  7540   003F5E                     u5431:
  7541   003F5E  EFBD  F01F         	goto	l5452
  7542   003F62                     u5430:
  7543   003F62                     
  7544                           ;Memory.c: 36:             OrangeMove(&motorL, &motorR);
  7545   003F62  0E73               	movlw	low _motorL
  7546   003F64  6E1F               	movwf	OrangeMove@mL^0,c
  7547   003F66  0E01               	movlw	high _motorL
  7548   003F68  6E20               	movwf	(OrangeMove@mL+1)^0,c
  7549   003F6A  0E6A               	movlw	low _motorR
  7550   003F6C  6E21               	movwf	OrangeMove@mR^0,c
  7551   003F6E  0E01               	movlw	high _motorR
  7552   003F70  6E22               	movwf	(OrangeMove@mR+1)^0,c
  7553   003F72  EC85  F02A         	call	_OrangeMove	;wreg free
  7554                           
  7555                           ;Memory.c: 37:         }
  7556   003F76  EFD8  F01F         	goto	l5456
  7557   003F7A                     l5452:
  7558   003F7A  502C               	movf	go_Home@i^0,w,c
  7559   003F7C  2423               	addwf	go_Home@WayBack^0,w,c
  7560   003F7E  6ED9               	movwf	fsr2l,c
  7561   003F80  502D               	movf	(go_Home@i+1)^0,w,c
  7562   003F82  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7563   003F84  6EDA               	movwf	fsr2h,c
  7564   003F86  0E07               	movlw	7
  7565   003F88  18DE               	xorwf	postinc2,w,c
  7566   003F8A  A4D8               	btfss	status,2,c
  7567   003F8C  EFCA  F01F         	goto	u5441
  7568   003F90  EFCC  F01F         	goto	u5440
  7569   003F94                     u5441:
  7570   003F94  EFD8  F01F         	goto	l612
  7571   003F98                     u5440:
  7572   003F98                     
  7573                           ;Memory.c: 39:             ReversePink(&motorL, &motorR);
  7574   003F98  0E73               	movlw	low _motorL
  7575   003F9A  6E1F               	movwf	ReversePink@mL^0,c
  7576   003F9C  0E01               	movlw	high _motorL
  7577   003F9E  6E20               	movwf	(ReversePink@mL+1)^0,c
  7578   003FA0  0E6A               	movlw	low _motorR
  7579   003FA2  6E21               	movwf	ReversePink@mR^0,c
  7580   003FA4  0E01               	movlw	high _motorR
  7581   003FA6  6E22               	movwf	(ReversePink@mR+1)^0,c
  7582   003FA8  EC07  F02D         	call	_ReversePink	;wreg free
  7583   003FAC  EFD8  F01F         	goto	l5456
  7584   003FB0                     l612:
  7585   003FB0                     l5456:
  7586                           
  7587                           ;Memory.c: 43:   }
  7588   003FB0  062C               	decf	go_Home@i^0,f,c
  7589   003FB2  A0D8               	btfss	status,0,c
  7590   003FB4  062D               	decf	(go_Home@i+1)^0,f,c
  7591   003FB6  EFC9  F01E         	goto	l5408
  7592   003FBA                     l618:
  7593   003FBA  0012               	return		;funcret
  7594   003FBC                     __end_of_go_Home:
  7595                           	callstack 0
  7596                           
  7597 ;; *************** function _ReverseYellow *****************
  7598 ;; Defined at:
  7599 ;;		line 304 in file "dc_motor.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7602 ;;		 -> motorL(9), 
  7603 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7604 ;;		 -> motorR(9), 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;Total ram usage:        4 bytes
  7621 ;; Hardware stack levels used: 1
  7622 ;; Hardware stack levels required when called: 5
  7623 ;; This function calls:
  7624 ;;		_ForwardOneBlock
  7625 ;;		_turnLeft45
  7626 ;; This function is called by:
  7627 ;;		_go_Home
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text32
  7632   0059D0                     __ptext32:
  7633                           	callstack 0
  7634   0059D0                     _ReverseYellow:
  7635                           	callstack 24
  7636   0059D0                     
  7637                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  7638   0059D0  0E73               	movlw	low _motorL
  7639   0059D2  6E19               	movwf	turnLeft45@mL^0,c
  7640   0059D4  0E01               	movlw	high _motorL
  7641   0059D6  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7642   0059D8  0E6A               	movlw	low _motorR
  7643   0059DA  6E1B               	movwf	turnLeft45@mR^0,c
  7644   0059DC  0E01               	movlw	high _motorR
  7645   0059DE  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7646   0059E0  ECAA  F029         	call	_turnLeft45	;wreg free
  7647                           
  7648                           ;dc_motor.c: 306:     turnLeft45(&motorL, &motorR);
  7649   0059E4  0E73               	movlw	low _motorL
  7650   0059E6  6E19               	movwf	turnLeft45@mL^0,c
  7651   0059E8  0E01               	movlw	high _motorL
  7652   0059EA  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7653   0059EC  0E6A               	movlw	low _motorR
  7654   0059EE  6E1B               	movwf	turnLeft45@mR^0,c
  7655   0059F0  0E01               	movlw	high _motorR
  7656   0059F2  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7657   0059F4  ECAA  F029         	call	_turnLeft45	;wreg free
  7658                           
  7659                           ;dc_motor.c: 307:     ForwardOneBlock(&motorL, &motorR);
  7660   0059F8  0E73               	movlw	low _motorL
  7661   0059FA  6E19               	movwf	ForwardOneBlock@mL^0,c
  7662   0059FC  0E01               	movlw	high _motorL
  7663   0059FE  6E1A               	movwf	(ForwardOneBlock@mL+1)^0,c
  7664   005A00  0E6A               	movlw	low _motorR
  7665   005A02  6E1B               	movwf	ForwardOneBlock@mR^0,c
  7666   005A04  0E01               	movlw	high _motorR
  7667   005A06  6E1C               	movwf	(ForwardOneBlock@mR+1)^0,c
  7668   005A08  EC23  F029         	call	_ForwardOneBlock	;wreg free
  7669   005A0C  0012               	return		;funcret
  7670   005A0E                     __end_of_ReverseYellow:
  7671                           	callstack 0
  7672                           
  7673 ;; *************** function _ReversePink *****************
  7674 ;; Defined at:
  7675 ;;		line 309 in file "dc_motor.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7678 ;;		 -> motorL(9), 
  7679 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7680 ;;		 -> motorR(9), 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;		None
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      void 
  7685 ;; Registers used:
  7686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7696 ;;Total ram usage:        4 bytes
  7697 ;; Hardware stack levels used: 1
  7698 ;; Hardware stack levels required when called: 5
  7699 ;; This function calls:
  7700 ;;		_ForwardOneBlock
  7701 ;;		_turnRight45
  7702 ;; This function is called by:
  7703 ;;		_go_Home
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text33
  7708   005A0E                     __ptext33:
  7709                           	callstack 0
  7710   005A0E                     _ReversePink:
  7711                           	callstack 24
  7712   005A0E                     
  7713                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  7714   005A0E  0E73               	movlw	low _motorL
  7715   005A10  6E19               	movwf	turnRight45@mL^0,c
  7716   005A12  0E01               	movlw	high _motorL
  7717   005A14  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7718   005A16  0E6A               	movlw	low _motorR
  7719   005A18  6E1B               	movwf	turnRight45@mR^0,c
  7720   005A1A  0E01               	movlw	high _motorR
  7721   005A1C  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7722   005A1E  EC7D  F029         	call	_turnRight45	;wreg free
  7723                           
  7724                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  7725   005A22  0E73               	movlw	low _motorL
  7726   005A24  6E19               	movwf	turnRight45@mL^0,c
  7727   005A26  0E01               	movlw	high _motorL
  7728   005A28  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7729   005A2A  0E6A               	movlw	low _motorR
  7730   005A2C  6E1B               	movwf	turnRight45@mR^0,c
  7731   005A2E  0E01               	movlw	high _motorR
  7732   005A30  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7733   005A32  EC7D  F029         	call	_turnRight45	;wreg free
  7734                           
  7735                           ;dc_motor.c: 312:     ForwardOneBlock(&motorL, &motorR);
  7736   005A36  0E73               	movlw	low _motorL
  7737   005A38  6E19               	movwf	ForwardOneBlock@mL^0,c
  7738   005A3A  0E01               	movlw	high _motorL
  7739   005A3C  6E1A               	movwf	(ForwardOneBlock@mL+1)^0,c
  7740   005A3E  0E6A               	movlw	low _motorR
  7741   005A40  6E1B               	movwf	ForwardOneBlock@mR^0,c
  7742   005A42  0E01               	movlw	high _motorR
  7743   005A44  6E1C               	movwf	(ForwardOneBlock@mR+1)^0,c
  7744   005A46  EC23  F029         	call	_ForwardOneBlock	;wreg free
  7745   005A4A  0012               	return		;funcret
  7746   005A4C                     __end_of_ReversePink:
  7747                           	callstack 0
  7748                           
  7749 ;; *************** function _ForwardOneBlock *****************
  7750 ;; Defined at:
  7751 ;;		line 208 in file "dc_motor.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  7754 ;;		 -> motorL(9), 
  7755 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  7756 ;;		 -> motorR(9), 
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      void 
  7761 ;; Registers used:
  7762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;Total ram usage:        6 bytes
  7773 ;; Hardware stack levels used: 1
  7774 ;; Hardware stack levels required when called: 4
  7775 ;; This function calls:
  7776 ;;		_fullSpeedAhead
  7777 ;;		_stop
  7778 ;; This function is called by:
  7779 ;;		_ReverseYellow
  7780 ;;		_ReversePink
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           	psect	text34
  7785   005246                     __ptext34:
  7786                           	callstack 0
  7787   005246                     _ForwardOneBlock:
  7788                           	callstack 24
  7789   005246                     
  7790                           ;dc_motor.c: 209:     fullSpeedAhead(mL,mR);
  7791   005246  C019  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  7792   00524A  C01A  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  7793   00524E  C01B  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  7794   005252  C01C  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  7795   005256  EC76  F026         	call	_fullSpeedAhead	;wreg free
  7796   00525A                     
  7797                           ;dc_motor.c: 210:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7798   00525A  0E52               	movlw	82
  7799   00525C  6E1E               	movwf	(??_ForwardOneBlock+1)^0,c
  7800   00525E  0E2B               	movlw	43
  7801   005260  6E1D               	movwf	??_ForwardOneBlock^0,c
  7802   005262  0E00               	movlw	0
  7803   005264                     u5677:
  7804   005264  2EE8               	decfsz	wreg,f,c
  7805   005266  D7FE               	bra	u5677
  7806   005268  2E1D               	decfsz	??_ForwardOneBlock^0,f,c
  7807   00526A  D7FC               	bra	u5677
  7808   00526C  2E1E               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7809   00526E  D7FA               	bra	u5677
  7810   005270  D000               	nop2	
  7811   005272                     
  7812                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7813   005272  0E73               	movlw	low _motorL
  7814   005274  6E14               	movwf	stop@mL^0,c
  7815   005276  0E01               	movlw	high _motorL
  7816   005278  6E15               	movwf	(stop@mL+1)^0,c
  7817   00527A  0E6A               	movlw	low _motorR
  7818   00527C  6E16               	movwf	stop@mR^0,c
  7819   00527E  0E01               	movlw	high _motorR
  7820   005280  6E17               	movwf	(stop@mR+1)^0,c
  7821   005282  EC19  F028         	call	_stop	;wreg free
  7822                           
  7823                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7824   005286  0E52               	movlw	82
  7825   005288  6E1E               	movwf	(??_ForwardOneBlock+1)^0,c
  7826   00528A  0E2B               	movlw	43
  7827   00528C  6E1D               	movwf	??_ForwardOneBlock^0,c
  7828   00528E  0E00               	movlw	0
  7829   005290                     u5687:
  7830   005290  2EE8               	decfsz	wreg,f,c
  7831   005292  D7FE               	bra	u5687
  7832   005294  2E1D               	decfsz	??_ForwardOneBlock^0,f,c
  7833   005296  D7FC               	bra	u5687
  7834   005298  2E1E               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7835   00529A  D7FA               	bra	u5687
  7836   00529C  D000               	nop2	
  7837   00529E  0012               	return		;funcret
  7838   0052A0                     __end_of_ForwardOneBlock:
  7839                           	callstack 0
  7840                           
  7841 ;; *************** function _RedMove *****************
  7842 ;; Defined at:
  7843 ;;		line 232 in file "dc_motor.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7846 ;;		 -> motorL(9), 
  7847 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7848 ;;		 -> motorR(9), 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      void 
  7853 ;; Registers used:
  7854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;Total ram usage:        4 bytes
  7865 ;; Hardware stack levels used: 1
  7866 ;; Hardware stack levels required when called: 5
  7867 ;; This function calls:
  7868 ;;		_reverseDetect
  7869 ;;		_turnRight45
  7870 ;; This function is called by:
  7871 ;;		_main
  7872 ;;		_go_Home
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text35
  7877   005A4C                     __ptext35:
  7878                           	callstack 0
  7879   005A4C                     _RedMove:
  7880                           	callstack 24
  7881   005A4C                     
  7882                           ;dc_motor.c: 233:     reverseDetect(&motorL, &motorR);
  7883   005A4C  0E73               	movlw	low _motorL
  7884   005A4E  6E19               	movwf	reverseDetect@mL^0,c
  7885   005A50  0E01               	movlw	high _motorL
  7886   005A52  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7887   005A54  0E6A               	movlw	low _motorR
  7888   005A56  6E1B               	movwf	reverseDetect@mR^0,c
  7889   005A58  0E01               	movlw	high _motorR
  7890   005A5A  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7891   005A5C  EC04  F02A         	call	_reverseDetect	;wreg free
  7892                           
  7893                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  7894   005A60  0E73               	movlw	low _motorL
  7895   005A62  6E19               	movwf	turnRight45@mL^0,c
  7896   005A64  0E01               	movlw	high _motorL
  7897   005A66  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7898   005A68  0E6A               	movlw	low _motorR
  7899   005A6A  6E1B               	movwf	turnRight45@mR^0,c
  7900   005A6C  0E01               	movlw	high _motorR
  7901   005A6E  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7902   005A70  EC7D  F029         	call	_turnRight45	;wreg free
  7903                           
  7904                           ;dc_motor.c: 236:     turnRight45(&motorL, &motorR);
  7905   005A74  0E73               	movlw	low _motorL
  7906   005A76  6E19               	movwf	turnRight45@mL^0,c
  7907   005A78  0E01               	movlw	high _motorL
  7908   005A7A  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7909   005A7C  0E6A               	movlw	low _motorR
  7910   005A7E  6E1B               	movwf	turnRight45@mR^0,c
  7911   005A80  0E01               	movlw	high _motorR
  7912   005A82  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7913   005A84  EC7D  F029         	call	_turnRight45	;wreg free
  7914   005A88  0012               	return		;funcret
  7915   005A8A                     __end_of_RedMove:
  7916                           	callstack 0
  7917                           
  7918 ;; *************** function _OrangeMove *****************
  7919 ;; Defined at:
  7920 ;;		line 278 in file "dc_motor.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7923 ;;		 -> motorL(9), 
  7924 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7925 ;;		 -> motorR(9), 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;		None
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  1    wreg      void 
  7930 ;; Registers used:
  7931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;Total ram usage:        4 bytes
  7942 ;; Hardware stack levels used: 1
  7943 ;; Hardware stack levels required when called: 5
  7944 ;; This function calls:
  7945 ;;		_reverseDetect
  7946 ;;		_turnRight45
  7947 ;; This function is called by:
  7948 ;;		_main
  7949 ;;		_go_Home
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text36
  7954   00550A                     __ptext36:
  7955                           	callstack 0
  7956   00550A                     _OrangeMove:
  7957                           	callstack 24
  7958   00550A                     
  7959                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  7960   00550A  0E73               	movlw	low _motorL
  7961   00550C  6E19               	movwf	reverseDetect@mL^0,c
  7962   00550E  0E01               	movlw	high _motorL
  7963   005510  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7964   005512  0E6A               	movlw	low _motorR
  7965   005514  6E1B               	movwf	reverseDetect@mR^0,c
  7966   005516  0E01               	movlw	high _motorR
  7967   005518  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7968   00551A  EC04  F02A         	call	_reverseDetect	;wreg free
  7969                           
  7970                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  7971   00551E  0E73               	movlw	low _motorL
  7972   005520  6E19               	movwf	turnRight45@mL^0,c
  7973   005522  0E01               	movlw	high _motorL
  7974   005524  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7975   005526  0E6A               	movlw	low _motorR
  7976   005528  6E1B               	movwf	turnRight45@mR^0,c
  7977   00552A  0E01               	movlw	high _motorR
  7978   00552C  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7979   00552E  EC7D  F029         	call	_turnRight45	;wreg free
  7980                           
  7981                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  7982   005532  0E73               	movlw	low _motorL
  7983   005534  6E19               	movwf	turnRight45@mL^0,c
  7984   005536  0E01               	movlw	high _motorL
  7985   005538  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7986   00553A  0E6A               	movlw	low _motorR
  7987   00553C  6E1B               	movwf	turnRight45@mR^0,c
  7988   00553E  0E01               	movlw	high _motorR
  7989   005540  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7990   005542  EC7D  F029         	call	_turnRight45	;wreg free
  7991                           
  7992                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  7993   005546  0E73               	movlw	low _motorL
  7994   005548  6E19               	movwf	turnRight45@mL^0,c
  7995   00554A  0E01               	movlw	high _motorL
  7996   00554C  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7997   00554E  0E6A               	movlw	low _motorR
  7998   005550  6E1B               	movwf	turnRight45@mR^0,c
  7999   005552  0E01               	movlw	high _motorR
  8000   005554  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8001   005556  EC7D  F029         	call	_turnRight45	;wreg free
  8002   00555A  0012               	return		;funcret
  8003   00555C                     __end_of_OrangeMove:
  8004                           	callstack 0
  8005                           
  8006 ;; *************** function _LightBlueMove *****************
  8007 ;; Defined at:
  8008 ;;		line 287 in file "dc_motor.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8011 ;;		 -> motorL(9), 
  8012 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8013 ;;		 -> motorR(9), 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;		None
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      void 
  8018 ;; Registers used:
  8019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;Total ram usage:        4 bytes
  8030 ;; Hardware stack levels used: 1
  8031 ;; Hardware stack levels required when called: 5
  8032 ;; This function calls:
  8033 ;;		_reverseDetect
  8034 ;;		_turnLeft45
  8035 ;; This function is called by:
  8036 ;;		_main
  8037 ;;		_go_Home
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text37
  8042   00555C                     __ptext37:
  8043                           	callstack 0
  8044   00555C                     _LightBlueMove:
  8045                           	callstack 24
  8046   00555C                     
  8047                           ;dc_motor.c: 288:     reverseDetect(&motorL, &motorR);
  8048   00555C  0E73               	movlw	low _motorL
  8049   00555E  6E19               	movwf	reverseDetect@mL^0,c
  8050   005560  0E01               	movlw	high _motorL
  8051   005562  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8052   005564  0E6A               	movlw	low _motorR
  8053   005566  6E1B               	movwf	reverseDetect@mR^0,c
  8054   005568  0E01               	movlw	high _motorR
  8055   00556A  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8056   00556C  EC04  F02A         	call	_reverseDetect	;wreg free
  8057                           
  8058                           ;dc_motor.c: 290:     turnLeft45(&motorL, &motorR);
  8059   005570  0E73               	movlw	low _motorL
  8060   005572  6E19               	movwf	turnLeft45@mL^0,c
  8061   005574  0E01               	movlw	high _motorL
  8062   005576  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8063   005578  0E6A               	movlw	low _motorR
  8064   00557A  6E1B               	movwf	turnLeft45@mR^0,c
  8065   00557C  0E01               	movlw	high _motorR
  8066   00557E  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8067   005580  ECAA  F029         	call	_turnLeft45	;wreg free
  8068                           
  8069                           ;dc_motor.c: 291:     turnLeft45(&motorL, &motorR);
  8070   005584  0E73               	movlw	low _motorL
  8071   005586  6E19               	movwf	turnLeft45@mL^0,c
  8072   005588  0E01               	movlw	high _motorL
  8073   00558A  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8074   00558C  0E6A               	movlw	low _motorR
  8075   00558E  6E1B               	movwf	turnLeft45@mR^0,c
  8076   005590  0E01               	movlw	high _motorR
  8077   005592  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8078   005594  ECAA  F029         	call	_turnLeft45	;wreg free
  8079                           
  8080                           ;dc_motor.c: 292:     turnLeft45(&motorL, &motorR);
  8081   005598  0E73               	movlw	low _motorL
  8082   00559A  6E19               	movwf	turnLeft45@mL^0,c
  8083   00559C  0E01               	movlw	high _motorL
  8084   00559E  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8085   0055A0  0E6A               	movlw	low _motorR
  8086   0055A2  6E1B               	movwf	turnLeft45@mR^0,c
  8087   0055A4  0E01               	movlw	high _motorR
  8088   0055A6  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8089   0055A8  ECAA  F029         	call	_turnLeft45	;wreg free
  8090   0055AC  0012               	return		;funcret
  8091   0055AE                     __end_of_LightBlueMove:
  8092                           	callstack 0
  8093                           
  8094 ;; *************** function _GreenMove *****************
  8095 ;; Defined at:
  8096 ;;		line 240 in file "dc_motor.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8099 ;;		 -> motorL(9), 
  8100 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8101 ;;		 -> motorR(9), 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8117 ;;Total ram usage:        4 bytes
  8118 ;; Hardware stack levels used: 1
  8119 ;; Hardware stack levels required when called: 5
  8120 ;; This function calls:
  8121 ;;		_reverseDetect
  8122 ;;		_turnLeft45
  8123 ;; This function is called by:
  8124 ;;		_main
  8125 ;;		_go_Home
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text38
  8130   005A8A                     __ptext38:
  8131                           	callstack 0
  8132   005A8A                     _GreenMove:
  8133                           	callstack 24
  8134   005A8A                     
  8135                           ;dc_motor.c: 241:     reverseDetect(&motorL, &motorR);
  8136   005A8A  0E73               	movlw	low _motorL
  8137   005A8C  6E19               	movwf	reverseDetect@mL^0,c
  8138   005A8E  0E01               	movlw	high _motorL
  8139   005A90  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8140   005A92  0E6A               	movlw	low _motorR
  8141   005A94  6E1B               	movwf	reverseDetect@mR^0,c
  8142   005A96  0E01               	movlw	high _motorR
  8143   005A98  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8144   005A9A  EC04  F02A         	call	_reverseDetect	;wreg free
  8145                           
  8146                           ;dc_motor.c: 243:     turnLeft45(&motorL, &motorR);
  8147   005A9E  0E73               	movlw	low _motorL
  8148   005AA0  6E19               	movwf	turnLeft45@mL^0,c
  8149   005AA2  0E01               	movlw	high _motorL
  8150   005AA4  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8151   005AA6  0E6A               	movlw	low _motorR
  8152   005AA8  6E1B               	movwf	turnLeft45@mR^0,c
  8153   005AAA  0E01               	movlw	high _motorR
  8154   005AAC  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8155   005AAE  ECAA  F029         	call	_turnLeft45	;wreg free
  8156                           
  8157                           ;dc_motor.c: 244:     turnLeft45(&motorL, &motorR);
  8158   005AB2  0E73               	movlw	low _motorL
  8159   005AB4  6E19               	movwf	turnLeft45@mL^0,c
  8160   005AB6  0E01               	movlw	high _motorL
  8161   005AB8  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8162   005ABA  0E6A               	movlw	low _motorR
  8163   005ABC  6E1B               	movwf	turnLeft45@mR^0,c
  8164   005ABE  0E01               	movlw	high _motorR
  8165   005AC0  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8166   005AC2  ECAA  F029         	call	_turnLeft45	;wreg free
  8167   005AC6  0012               	return		;funcret
  8168   005AC8                     __end_of_GreenMove:
  8169                           	callstack 0
  8170                           
  8171 ;; *************** function _Forwardhalfblock *****************
  8172 ;; Defined at:
  8173 ;;		line 215 in file "dc_motor.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8176 ;;		 -> motorL(9), 
  8177 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8178 ;;		 -> motorR(9), 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8194 ;;Total ram usage:        6 bytes
  8195 ;; Hardware stack levels used: 1
  8196 ;; Hardware stack levels required when called: 4
  8197 ;; This function calls:
  8198 ;;		_fullSpeedAhead
  8199 ;;		_stop
  8200 ;; This function is called by:
  8201 ;;		_main
  8202 ;;		_go_Home
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text39
  8207   0052A0                     __ptext39:
  8208                           	callstack 0
  8209   0052A0                     _Forwardhalfblock:
  8210                           	callstack 25
  8211   0052A0                     
  8212                           ;dc_motor.c: 216:     fullSpeedAhead(mL,mR);
  8213   0052A0  C019  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8214   0052A4  C01A  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8215   0052A8  C01B  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8216   0052AC  C01C  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8217   0052B0  EC76  F026         	call	_fullSpeedAhead	;wreg free
  8218   0052B4                     
  8219                           ;dc_motor.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8220   0052B4  0E29               	movlw	41
  8221   0052B6  6E1E               	movwf	(??_Forwardhalfblock+1)^0,c
  8222   0052B8  0E96               	movlw	150
  8223   0052BA  6E1D               	movwf	??_Forwardhalfblock^0,c
  8224   0052BC  0E7F               	movlw	127
  8225   0052BE                     u5697:
  8226   0052BE  2EE8               	decfsz	wreg,f,c
  8227   0052C0  D7FE               	bra	u5697
  8228   0052C2  2E1D               	decfsz	??_Forwardhalfblock^0,f,c
  8229   0052C4  D7FC               	bra	u5697
  8230   0052C6  2E1E               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8231   0052C8  D7FA               	bra	u5697
  8232   0052CA  F000               	nop	
  8233   0052CC                     
  8234                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  8235   0052CC  0E73               	movlw	low _motorL
  8236   0052CE  6E14               	movwf	stop@mL^0,c
  8237   0052D0  0E01               	movlw	high _motorL
  8238   0052D2  6E15               	movwf	(stop@mL+1)^0,c
  8239   0052D4  0E6A               	movlw	low _motorR
  8240   0052D6  6E16               	movwf	stop@mR^0,c
  8241   0052D8  0E01               	movlw	high _motorR
  8242   0052DA  6E17               	movwf	(stop@mR+1)^0,c
  8243   0052DC  EC19  F028         	call	_stop	;wreg free
  8244                           
  8245                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8246   0052E0  0E52               	movlw	82
  8247   0052E2  6E1E               	movwf	(??_Forwardhalfblock+1)^0,c
  8248   0052E4  0E2B               	movlw	43
  8249   0052E6  6E1D               	movwf	??_Forwardhalfblock^0,c
  8250   0052E8  0E00               	movlw	0
  8251   0052EA                     u5707:
  8252   0052EA  2EE8               	decfsz	wreg,f,c
  8253   0052EC  D7FE               	bra	u5707
  8254   0052EE  2E1D               	decfsz	??_Forwardhalfblock^0,f,c
  8255   0052F0  D7FC               	bra	u5707
  8256   0052F2  2E1E               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8257   0052F4  D7FA               	bra	u5707
  8258   0052F6  D000               	nop2	
  8259   0052F8  0012               	return		;funcret
  8260   0052FA                     __end_of_Forwardhalfblock:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function _BlueMove *****************
  8264 ;; Defined at:
  8265 ;;		line 248 in file "dc_motor.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8268 ;;		 -> motorL(9), 
  8269 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8270 ;;		 -> motorR(9), 
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;		None
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  1    wreg      void 
  8275 ;; Registers used:
  8276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;Total ram usage:        4 bytes
  8287 ;; Hardware stack levels used: 1
  8288 ;; Hardware stack levels required when called: 5
  8289 ;; This function calls:
  8290 ;;		_reverseDetect
  8291 ;;		_turnRight45
  8292 ;; This function is called by:
  8293 ;;		_main
  8294 ;;		_go_Home
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text40
  8299   005182                     __ptext40:
  8300                           	callstack 0
  8301   005182                     _BlueMove:
  8302                           	callstack 24
  8303   005182                     
  8304                           ;dc_motor.c: 249:     reverseDetect(&motorL, &motorR);
  8305   005182  0E73               	movlw	low _motorL
  8306   005184  6E19               	movwf	reverseDetect@mL^0,c
  8307   005186  0E01               	movlw	high _motorL
  8308   005188  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8309   00518A  0E6A               	movlw	low _motorR
  8310   00518C  6E1B               	movwf	reverseDetect@mR^0,c
  8311   00518E  0E01               	movlw	high _motorR
  8312   005190  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8313   005192  EC04  F02A         	call	_reverseDetect	;wreg free
  8314                           
  8315                           ;dc_motor.c: 251:     turnRight45(&motorL, &motorR);
  8316   005196  0E73               	movlw	low _motorL
  8317   005198  6E19               	movwf	turnRight45@mL^0,c
  8318   00519A  0E01               	movlw	high _motorL
  8319   00519C  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8320   00519E  0E6A               	movlw	low _motorR
  8321   0051A0  6E1B               	movwf	turnRight45@mR^0,c
  8322   0051A2  0E01               	movlw	high _motorR
  8323   0051A4  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8324   0051A6  EC7D  F029         	call	_turnRight45	;wreg free
  8325                           
  8326                           ;dc_motor.c: 252:     turnRight45(&motorL, &motorR);
  8327   0051AA  0E73               	movlw	low _motorL
  8328   0051AC  6E19               	movwf	turnRight45@mL^0,c
  8329   0051AE  0E01               	movlw	high _motorL
  8330   0051B0  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8331   0051B2  0E6A               	movlw	low _motorR
  8332   0051B4  6E1B               	movwf	turnRight45@mR^0,c
  8333   0051B6  0E01               	movlw	high _motorR
  8334   0051B8  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8335   0051BA  EC7D  F029         	call	_turnRight45	;wreg free
  8336                           
  8337                           ;dc_motor.c: 253:     turnRight45(&motorL, &motorR);
  8338   0051BE  0E73               	movlw	low _motorL
  8339   0051C0  6E19               	movwf	turnRight45@mL^0,c
  8340   0051C2  0E01               	movlw	high _motorL
  8341   0051C4  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8342   0051C6  0E6A               	movlw	low _motorR
  8343   0051C8  6E1B               	movwf	turnRight45@mR^0,c
  8344   0051CA  0E01               	movlw	high _motorR
  8345   0051CC  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8346   0051CE  EC7D  F029         	call	_turnRight45	;wreg free
  8347                           
  8348                           ;dc_motor.c: 254:     turnRight45(&motorL, &motorR);
  8349   0051D2  0E73               	movlw	low _motorL
  8350   0051D4  6E19               	movwf	turnRight45@mL^0,c
  8351   0051D6  0E01               	movlw	high _motorL
  8352   0051D8  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8353   0051DA  0E6A               	movlw	low _motorR
  8354   0051DC  6E1B               	movwf	turnRight45@mR^0,c
  8355   0051DE  0E01               	movlw	high _motorR
  8356   0051E0  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8357   0051E2  EC7D  F029         	call	_turnRight45	;wreg free
  8358   0051E6  0012               	return		;funcret
  8359   0051E8                     __end_of_BlueMove:
  8360                           	callstack 0
  8361                           
  8362 ;; *************** function _getTMR0val *****************
  8363 ;; Defined at:
  8364 ;;		line 28 in file "timers.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;		None
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  moving          2    0[COMRAM] int 
  8369 ;;  temp            2    0        unsigned int 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8383 ;;Total ram usage:        2 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 1
  8386 ;; This function calls:
  8387 ;;		Nothing
  8388 ;; This function is called by:
  8389 ;;		_main
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text41
  8394   005B82                     __ptext41:
  8395                           	callstack 0
  8396   005B82                     _getTMR0val:
  8397                           	callstack 29
  8398   005B82  50D3               	movf	211,w,c	;volatile
  8399   005B84                     
  8400                           ;timers.c: 32:     int moving=TMR0H<<8;
  8401   005B84  50D4               	movf	212,w,c	;volatile
  8402   005B86  6E02               	movwf	(getTMR0val@moving+1)^0,c
  8403   005B88  6A01               	clrf	getTMR0val@moving^0,c
  8404   005B8A                     
  8405                           ;timers.c: 33:     Time_forward[move_count]=moving;
  8406   005B8A  90D8               	bcf	status,0,c
  8407   005B8C  0101               	movlb	1	; () banked
  8408   005B8E  350C               	rlcf	_move_count& (0+255),w,b	;volatile
  8409   005B90  6ED9               	movwf	fsr2l,c
  8410   005B92  350D               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  8411   005B94  6EDA               	movwf	fsr2h,c
  8412   005B96  0E3C               	movlw	low _Time_forward
  8413   005B98  26D9               	addwf	fsr2l,f,c
  8414   005B9A  0E02               	movlw	high _Time_forward
  8415   005B9C  22DA               	addwfc	fsr2h,f,c
  8416   005B9E  C001  FFDE         	movff	getTMR0val@moving,postinc2
  8417   005BA2  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  8418   005BA6                     
  8419                           ; BSR set to: 1
  8420   005BA6  0012               	return		;funcret
  8421   005BA8                     __end_of_getTMR0val:
  8422                           	callstack 0
  8423                           
  8424 ;; *************** function _colour_rel *****************
  8425 ;; Defined at:
  8426 ;;		line 114 in file "color.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  vals            2   74[COMRAM] PTR struct RGB
  8429 ;;		 -> vals(8), 
  8430 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8431 ;;		 -> rel(12), 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;  B               4   20[BANK0 ] float 
  8434 ;;  G               4   16[BANK0 ] float 
  8435 ;;  R               4   12[BANK0 ] float 
  8436 ;;  L               4    0[BANK0 ] float 
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8447 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8449 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;Total ram usage:       28 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; Hardware stack levels required when called: 2
  8453 ;; This function calls:
  8454 ;;		___fladd
  8455 ;;		___fldiv
  8456 ;;		___xxtofl
  8457 ;; This function is called by:
  8458 ;;		_main
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text42
  8463   0034D8                     __ptext42:
  8464                           	callstack 0
  8465   0034D8                     _colour_rel:
  8466                           	callstack 28
  8467   0034D8                     
  8468                           ;color.c: 115:     float R = vals->R;
  8469   0034D8  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  8470   0034DC  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  8471   0034E0  CFDE F001          	movff	postinc2,___xxtofl@val
  8472   0034E4  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8473   0034E8  0E00               	movlw	0
  8474   0034EA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8475   0034EC  0EFF               	movlw	-1
  8476   0034EE  6E03               	movwf	(___xxtofl@val+2)^0,c
  8477   0034F0  6E04               	movwf	(___xxtofl@val+3)^0,c
  8478   0034F2  0E01               	movlw	1
  8479   0034F4  ECE7  F020         	call	___xxtofl
  8480   0034F8  C001  F06C         	movff	?___xxtofl,colour_rel@R
  8481   0034FC  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  8482   003500  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  8483   003504  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  8484                           
  8485                           ;color.c: 116:     float G = vals->G;
  8486   003508  EE20 F002          	lfsr	2,2
  8487   00350C  504B               	movf	colour_rel@vals^0,w,c
  8488   00350E  26D9               	addwf	fsr2l,f,c
  8489   003510  504C               	movf	(colour_rel@vals+1)^0,w,c
  8490   003512  22DA               	addwfc	fsr2h,f,c
  8491   003514  CFDE F001          	movff	postinc2,___xxtofl@val
  8492   003518  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8493   00351C  0E00               	movlw	0
  8494   00351E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8495   003520  0EFF               	movlw	-1
  8496   003522  6E03               	movwf	(___xxtofl@val+2)^0,c
  8497   003524  6E04               	movwf	(___xxtofl@val+3)^0,c
  8498   003526  0E01               	movlw	1
  8499   003528  ECE7  F020         	call	___xxtofl
  8500   00352C  C001  F070         	movff	?___xxtofl,colour_rel@G
  8501   003530  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  8502   003534  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  8503   003538  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  8504                           
  8505                           ;color.c: 117:     float B = vals->B;
  8506   00353C  EE20 F004          	lfsr	2,4
  8507   003540  504B               	movf	colour_rel@vals^0,w,c
  8508   003542  26D9               	addwf	fsr2l,f,c
  8509   003544  504C               	movf	(colour_rel@vals+1)^0,w,c
  8510   003546  22DA               	addwfc	fsr2h,f,c
  8511   003548  CFDE F001          	movff	postinc2,___xxtofl@val
  8512   00354C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8513   003550  0E00               	movlw	0
  8514   003552  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8515   003554  0EFF               	movlw	-1
  8516   003556  6E03               	movwf	(___xxtofl@val+2)^0,c
  8517   003558  6E04               	movwf	(___xxtofl@val+3)^0,c
  8518   00355A  0E01               	movlw	1
  8519   00355C  ECE7  F020         	call	___xxtofl
  8520   003560  C001  F074         	movff	?___xxtofl,colour_rel@B
  8521   003564  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  8522   003568  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  8523   00356C  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  8524                           
  8525                           ;color.c: 118:     float L = vals->L;
  8526   003570  EE20 F006          	lfsr	2,6
  8527   003574  504B               	movf	colour_rel@vals^0,w,c
  8528   003576  26D9               	addwf	fsr2l,f,c
  8529   003578  504C               	movf	(colour_rel@vals+1)^0,w,c
  8530   00357A  22DA               	addwfc	fsr2h,f,c
  8531   00357C  CFDE F001          	movff	postinc2,___xxtofl@val
  8532   003580  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8533   003584  0E00               	movlw	0
  8534   003586  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8535   003588  0EFF               	movlw	-1
  8536   00358A  6E03               	movwf	(___xxtofl@val+2)^0,c
  8537   00358C  6E04               	movwf	(___xxtofl@val+3)^0,c
  8538   00358E  0E01               	movlw	1
  8539   003590  ECE7  F020         	call	___xxtofl
  8540   003594  C001  F060         	movff	?___xxtofl,colour_rel@L
  8541   003598  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  8542   00359C  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  8543   0035A0  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  8544   0035A4                     
  8545                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8546   0035A4  C070  F005         	movff	colour_rel@G,___fladd@a
  8547   0035A8  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8548   0035AC  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8549   0035B0  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8550   0035B4  C06C  F001         	movff	colour_rel@R,___fladd@b
  8551   0035B8  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8552   0035BC  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8553   0035C0  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8554   0035C4  EC2A  F014         	call	___fladd	;wreg free
  8555   0035C8  C001  F064         	movff	?___fladd,_colour_rel$2908
  8556   0035CC  C002  F065         	movff	?___fladd+1,_colour_rel$2908+1
  8557   0035D0  C003  F066         	movff	?___fladd+2,_colour_rel$2908+2
  8558   0035D4  C004  F067         	movff	?___fladd+3,_colour_rel$2908+3
  8559   0035D8                     
  8560                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8561   0035D8  C074  F005         	movff	colour_rel@B,___fladd@a
  8562   0035DC  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8563   0035E0  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8564   0035E4  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8565   0035E8  C064  F001         	movff	_colour_rel$2908,___fladd@b
  8566   0035EC  C065  F002         	movff	_colour_rel$2908+1,___fladd@b+1
  8567   0035F0  C066  F003         	movff	_colour_rel$2908+2,___fladd@b+2
  8568   0035F4  C067  F004         	movff	_colour_rel$2908+3,___fladd@b+3
  8569   0035F8  EC2A  F014         	call	___fladd	;wreg free
  8570   0035FC  C001  F068         	movff	?___fladd,_colour_rel$2909
  8571   003600  C002  F069         	movff	?___fladd+1,_colour_rel$2909+1
  8572   003604  C003  F06A         	movff	?___fladd+2,_colour_rel$2909+2
  8573   003608  C004  F06B         	movff	?___fladd+3,_colour_rel$2909+3
  8574                           
  8575                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8576   00360C  C06C  F032         	movff	colour_rel@R,___fldiv@b
  8577   003610  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  8578   003614  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  8579   003618  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  8580   00361C  C060  F005         	movff	colour_rel@L,___fladd@a
  8581   003620  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8582   003624  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8583   003628  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8584   00362C  C068  F001         	movff	_colour_rel$2909,___fladd@b
  8585   003630  C069  F002         	movff	_colour_rel$2909+1,___fladd@b+1
  8586   003634  C06A  F003         	movff	_colour_rel$2909+2,___fladd@b+2
  8587   003638  C06B  F004         	movff	_colour_rel$2909+3,___fladd@b+3
  8588   00363C  EC2A  F014         	call	___fladd	;wreg free
  8589   003640  C001  F036         	movff	?___fladd,___fldiv@a
  8590   003644  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8591   003648  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8592   00364C  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8593   003650  EC9F  F018         	call	___fldiv	;wreg free
  8594   003654  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  8595   003658  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  8596   00365C  C032  FFDE         	movff	?___fldiv,postinc2
  8597   003660  C033  FFDE         	movff	?___fldiv+1,postinc2
  8598   003664  C034  FFDE         	movff	?___fldiv+2,postinc2
  8599   003668  C035  FFDE         	movff	?___fldiv+3,postinc2
  8600   00366C                     
  8601                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8602   00366C  C070  F005         	movff	colour_rel@G,___fladd@a
  8603   003670  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8604   003674  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8605   003678  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8606   00367C  C06C  F001         	movff	colour_rel@R,___fladd@b
  8607   003680  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8608   003684  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8609   003688  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8610   00368C  EC2A  F014         	call	___fladd	;wreg free
  8611   003690  C001  F064         	movff	?___fladd,_colour_rel$2908
  8612   003694  C002  F065         	movff	?___fladd+1,_colour_rel$2908+1
  8613   003698  C003  F066         	movff	?___fladd+2,_colour_rel$2908+2
  8614   00369C  C004  F067         	movff	?___fladd+3,_colour_rel$2908+3
  8615   0036A0                     
  8616                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8617   0036A0  C074  F005         	movff	colour_rel@B,___fladd@a
  8618   0036A4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8619   0036A8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8620   0036AC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8621   0036B0  C064  F001         	movff	_colour_rel$2908,___fladd@b
  8622   0036B4  C065  F002         	movff	_colour_rel$2908+1,___fladd@b+1
  8623   0036B8  C066  F003         	movff	_colour_rel$2908+2,___fladd@b+2
  8624   0036BC  C067  F004         	movff	_colour_rel$2908+3,___fladd@b+3
  8625   0036C0  EC2A  F014         	call	___fladd	;wreg free
  8626   0036C4  C001  F068         	movff	?___fladd,_colour_rel$2909
  8627   0036C8  C002  F069         	movff	?___fladd+1,_colour_rel$2909+1
  8628   0036CC  C003  F06A         	movff	?___fladd+2,_colour_rel$2909+2
  8629   0036D0  C004  F06B         	movff	?___fladd+3,_colour_rel$2909+3
  8630                           
  8631                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8632   0036D4  C074  F032         	movff	colour_rel@B,___fldiv@b
  8633   0036D8  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  8634   0036DC  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  8635   0036E0  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  8636   0036E4  C060  F005         	movff	colour_rel@L,___fladd@a
  8637   0036E8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8638   0036EC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8639   0036F0  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8640   0036F4  C068  F001         	movff	_colour_rel$2909,___fladd@b
  8641   0036F8  C069  F002         	movff	_colour_rel$2909+1,___fladd@b+1
  8642   0036FC  C06A  F003         	movff	_colour_rel$2909+2,___fladd@b+2
  8643   003700  C06B  F004         	movff	_colour_rel$2909+3,___fladd@b+3
  8644   003704  EC2A  F014         	call	___fladd	;wreg free
  8645   003708  C001  F036         	movff	?___fladd,___fldiv@a
  8646   00370C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8647   003710  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8648   003714  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8649   003718  EC9F  F018         	call	___fldiv	;wreg free
  8650   00371C  EE20 F008          	lfsr	2,8
  8651   003720  504D               	movf	colour_rel@rel^0,w,c
  8652   003722  26D9               	addwf	fsr2l,f,c
  8653   003724  504E               	movf	(colour_rel@rel+1)^0,w,c
  8654   003726  22DA               	addwfc	fsr2h,f,c
  8655   003728  C032  FFDE         	movff	?___fldiv,postinc2
  8656   00372C  C033  FFDE         	movff	?___fldiv+1,postinc2
  8657   003730  C034  FFDE         	movff	?___fldiv+2,postinc2
  8658   003734  C035  FFDE         	movff	?___fldiv+3,postinc2
  8659   003738                     
  8660                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8661   003738  C070  F005         	movff	colour_rel@G,___fladd@a
  8662   00373C  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8663   003740  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8664   003744  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8665   003748  C06C  F001         	movff	colour_rel@R,___fladd@b
  8666   00374C  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8667   003750  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8668   003754  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8669   003758  EC2A  F014         	call	___fladd	;wreg free
  8670   00375C  C001  F064         	movff	?___fladd,_colour_rel$2908
  8671   003760  C002  F065         	movff	?___fladd+1,_colour_rel$2908+1
  8672   003764  C003  F066         	movff	?___fladd+2,_colour_rel$2908+2
  8673   003768  C004  F067         	movff	?___fladd+3,_colour_rel$2908+3
  8674   00376C                     
  8675                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8676   00376C  C074  F005         	movff	colour_rel@B,___fladd@a
  8677   003770  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8678   003774  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8679   003778  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8680   00377C  C064  F001         	movff	_colour_rel$2908,___fladd@b
  8681   003780  C065  F002         	movff	_colour_rel$2908+1,___fladd@b+1
  8682   003784  C066  F003         	movff	_colour_rel$2908+2,___fladd@b+2
  8683   003788  C067  F004         	movff	_colour_rel$2908+3,___fladd@b+3
  8684   00378C  EC2A  F014         	call	___fladd	;wreg free
  8685   003790  C001  F068         	movff	?___fladd,_colour_rel$2909
  8686   003794  C002  F069         	movff	?___fladd+1,_colour_rel$2909+1
  8687   003798  C003  F06A         	movff	?___fladd+2,_colour_rel$2909+2
  8688   00379C  C004  F06B         	movff	?___fladd+3,_colour_rel$2909+3
  8689                           
  8690                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8691   0037A0  C070  F032         	movff	colour_rel@G,___fldiv@b
  8692   0037A4  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  8693   0037A8  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  8694   0037AC  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  8695   0037B0  C060  F005         	movff	colour_rel@L,___fladd@a
  8696   0037B4  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8697   0037B8  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8698   0037BC  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8699   0037C0  C068  F001         	movff	_colour_rel$2909,___fladd@b
  8700   0037C4  C069  F002         	movff	_colour_rel$2909+1,___fladd@b+1
  8701   0037C8  C06A  F003         	movff	_colour_rel$2909+2,___fladd@b+2
  8702   0037CC  C06B  F004         	movff	_colour_rel$2909+3,___fladd@b+3
  8703   0037D0  EC2A  F014         	call	___fladd	;wreg free
  8704   0037D4  C001  F036         	movff	?___fladd,___fldiv@a
  8705   0037D8  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8706   0037DC  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8707   0037E0  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8708   0037E4  EC9F  F018         	call	___fldiv	;wreg free
  8709   0037E8  EE20 F004          	lfsr	2,4
  8710   0037EC  504D               	movf	colour_rel@rel^0,w,c
  8711   0037EE  26D9               	addwf	fsr2l,f,c
  8712   0037F0  504E               	movf	(colour_rel@rel+1)^0,w,c
  8713   0037F2  22DA               	addwfc	fsr2h,f,c
  8714   0037F4  C032  FFDE         	movff	?___fldiv,postinc2
  8715   0037F8  C033  FFDE         	movff	?___fldiv+1,postinc2
  8716   0037FC  C034  FFDE         	movff	?___fldiv+2,postinc2
  8717   003800  C035  FFDE         	movff	?___fldiv+3,postinc2
  8718   003804  0012               	return		;funcret
  8719   003806                     __end_of_colour_rel:
  8720                           	callstack 0
  8721                           
  8722 ;; *************** function _color_click_init *****************
  8723 ;; Defined at:
  8724 ;;		line 7 in file "color.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;		None
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, status,2, status,0, cstack
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;Total ram usage:        1 bytes
  8743 ;; Hardware stack levels used: 1
  8744 ;; Hardware stack levels required when called: 4
  8745 ;; This function calls:
  8746 ;;		_I2C_2_Master_Init
  8747 ;;		_color_writetoaddr
  8748 ;; This function is called by:
  8749 ;;		_main
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           	psect	text43
  8754   0055AE                     __ptext43:
  8755                           	callstack 0
  8756   0055AE                     _color_click_init:
  8757                           	callstack 26
  8758   0055AE                     
  8759                           ;color.c: 10:     I2C_2_Master_Init();
  8760   0055AE  EC98  F02D         	call	_I2C_2_Master_Init	;wreg free
  8761   0055B2                     
  8762                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  8763   0055B2  0E01               	movlw	1
  8764   0055B4  6E03               	movwf	color_writetoaddr@value^0,c
  8765   0055B6  0E00               	movlw	0
  8766   0055B8  ECE7  F02D         	call	_color_writetoaddr
  8767   0055BC                     
  8768                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8769   0055BC  0E3F               	movlw	63
  8770   0055BE  6E05               	movwf	??_color_click_init^0,c
  8771   0055C0  0E55               	movlw	85
  8772   0055C2                     u5717:
  8773   0055C2  2EE8               	decfsz	wreg,f,c
  8774   0055C4  D7FE               	bra	u5717
  8775   0055C6  2E05               	decfsz	??_color_click_init^0,f,c
  8776   0055C8  D7FC               	bra	u5717
  8777   0055CA  F000               	nop	
  8778   0055CC                     
  8779                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8780   0055CC  0E03               	movlw	3
  8781   0055CE  6E03               	movwf	color_writetoaddr@value^0,c
  8782   0055D0  0E00               	movlw	0
  8783   0055D2  ECE7  F02D         	call	_color_writetoaddr
  8784   0055D6                     
  8785                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  8786   0055D6  0ED5               	movlw	213
  8787   0055D8  6E03               	movwf	color_writetoaddr@value^0,c
  8788   0055DA  0E01               	movlw	1
  8789   0055DC  ECE7  F02D         	call	_color_writetoaddr
  8790   0055E0                     
  8791                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  8792   0055E0  0E00               	movlw	0
  8793   0055E2  6E03               	movwf	color_writetoaddr@value^0,c
  8794   0055E4  0E0F               	movlw	15
  8795   0055E6  ECE7  F02D         	call	_color_writetoaddr
  8796   0055EA                     
  8797                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  8798   0055EA  9287               	bcf	135,1,c	;volatile
  8799   0055EC                     
  8800                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  8801   0055EC  9881               	bcf	129,4,c	;volatile
  8802   0055EE                     
  8803                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  8804   0055EE  9E86               	bcf	134,7,c	;volatile
  8805   0055F0                     
  8806                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  8807   0055F0  9684               	bcf	132,3,c	;volatile
  8808   0055F2                     
  8809                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  8810   0055F2  9884               	bcf	132,4,c	;volatile
  8811   0055F4                     
  8812                           ;color.c: 28:     LATGbits.LATG1=0;
  8813   0055F4  927F               	bcf	127,1,c	;volatile
  8814   0055F6                     
  8815                           ;color.c: 29:     LATFbits.LATF7=0;
  8816   0055F6  9E7E               	bcf	126,7,c	;volatile
  8817   0055F8                     
  8818                           ;color.c: 30:     LATAbits.LATA4=0;
  8819   0055F8  9879               	bcf	121,4,c	;volatile
  8820   0055FA                     
  8821                           ;color.c: 32:     LATDbits.LATD3=0;
  8822   0055FA  967C               	bcf	124,3,c	;volatile
  8823   0055FC                     
  8824                           ;color.c: 33:     LATDbits.LATD4=0;
  8825   0055FC  987C               	bcf	124,4,c	;volatile
  8826   0055FE  0012               	return		;funcret
  8827   005600                     __end_of_color_click_init:
  8828                           	callstack 0
  8829                           
  8830 ;; *************** function _color_writetoaddr *****************
  8831 ;; Defined at:
  8832 ;;		line 41 in file "color.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  address         1    wreg     unsigned char 
  8835 ;;  value           1    2[COMRAM] unsigned char 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  address         1    3[COMRAM] unsigned char 
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      void 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8847 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8851 ;;Total ram usage:        2 bytes
  8852 ;; Hardware stack levels used: 1
  8853 ;; Hardware stack levels required when called: 3
  8854 ;; This function calls:
  8855 ;;		_I2C_2_Master_Start
  8856 ;;		_I2C_2_Master_Stop
  8857 ;;		_I2C_2_Master_Write
  8858 ;; This function is called by:
  8859 ;;		_color_click_init
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           	psect	text44
  8864   005BCE                     __ptext44:
  8865                           	callstack 0
  8866   005BCE                     _color_writetoaddr:
  8867                           	callstack 26
  8868                           
  8869                           ;incstack = 0
  8870                           ;color_writetoaddr@address stored from wreg
  8871   005BCE  6E04               	movwf	color_writetoaddr@address^0,c
  8872   005BD0                     
  8873                           ;color.c: 42:     I2C_2_Master_Start();
  8874   005BD0  EC32  F02E         	call	_I2C_2_Master_Start	;wreg free
  8875                           
  8876                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  8877   005BD4  0E52               	movlw	82
  8878   005BD6  EC22  F02E         	call	_I2C_2_Master_Write
  8879                           
  8880                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  8881   005BDA  5004               	movf	color_writetoaddr@address^0,w,c
  8882   005BDC  0980               	iorlw	128
  8883   005BDE  EC22  F02E         	call	_I2C_2_Master_Write
  8884                           
  8885                           ;color.c: 45:     I2C_2_Master_Write(value);
  8886   005BE2  5003               	movf	color_writetoaddr@value^0,w,c
  8887   005BE4  EC22  F02E         	call	_I2C_2_Master_Write
  8888                           
  8889                           ;color.c: 46:     I2C_2_Master_Stop();
  8890   005BE8  EC2D  F02E         	call	_I2C_2_Master_Stop	;wreg free
  8891   005BEC  0012               	return		;funcret
  8892   005BEE                     __end_of_color_writetoaddr:
  8893                           	callstack 0
  8894                           
  8895 ;; *************** function _I2C_2_Master_Write *****************
  8896 ;; Defined at:
  8897 ;;		line 45 in file "i2c.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  data_byte       1    wreg     unsigned char 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;  data_byte       1    1[COMRAM] unsigned char 
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  1    wreg      void 
  8904 ;; Registers used:
  8905 ;;		wreg, status,2, status,0, cstack
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;Total ram usage:        1 bytes
  8916 ;; Hardware stack levels used: 1
  8917 ;; Hardware stack levels required when called: 2
  8918 ;; This function calls:
  8919 ;;		_I2C_2_Master_Idle
  8920 ;; This function is called by:
  8921 ;;		_color_writetoaddr
  8922 ;;		_color_read_lum
  8923 ;;		_color_read_Red
  8924 ;;		_color_read_Green
  8925 ;;		_color_read_Blue
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text45
  8930   005C44                     __ptext45:
  8931                           	callstack 0
  8932   005C44                     _I2C_2_Master_Write:
  8933                           	callstack 26
  8934                           
  8935                           ;incstack = 0
  8936                           ;I2C_2_Master_Write@data_byte stored from wreg
  8937   005C44  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8938   005C46                     
  8939                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8940   005C46  ECAD  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8941   005C4A                     
  8942                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8943   005C4A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8944   005C4E  0012               	return		;funcret
  8945   005C50                     __end_of_I2C_2_Master_Write:
  8946                           	callstack 0
  8947                           
  8948 ;; *************** function _I2C_2_Master_Stop *****************
  8949 ;; Defined at:
  8950 ;;		line 39 in file "i2c.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;		None
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;		None
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, status,0, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;Total ram usage:        0 bytes
  8969 ;; Hardware stack levels used: 1
  8970 ;; Hardware stack levels required when called: 2
  8971 ;; This function calls:
  8972 ;;		_I2C_2_Master_Idle
  8973 ;; This function is called by:
  8974 ;;		_color_writetoaddr
  8975 ;;		_color_read_lum
  8976 ;;		_color_read_Red
  8977 ;;		_color_read_Green
  8978 ;;		_color_read_Blue
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           	psect	text46
  8983   005C5A                     __ptext46:
  8984                           	callstack 0
  8985   005C5A                     _I2C_2_Master_Stop:
  8986                           	callstack 26
  8987   005C5A                     
  8988                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8989   005C5A  ECAD  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8990   005C5E                     
  8991                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8992   005C5E  010E               	movlb	14	; () banked
  8993   005C60  85DA               	bsf	218,2,b	;volatile
  8994   005C62                     
  8995                           ; BSR set to: 14
  8996   005C62  0012               	return		;funcret
  8997   005C64                     __end_of_I2C_2_Master_Stop:
  8998                           	callstack 0
  8999                           
  9000 ;; *************** function _I2C_2_Master_Start *****************
  9001 ;; Defined at:
  9002 ;;		line 27 in file "i2c.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      void 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2, status,0, cstack
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;Total ram usage:        0 bytes
  9021 ;; Hardware stack levels used: 1
  9022 ;; Hardware stack levels required when called: 2
  9023 ;; This function calls:
  9024 ;;		_I2C_2_Master_Idle
  9025 ;; This function is called by:
  9026 ;;		_color_writetoaddr
  9027 ;;		_color_read_lum
  9028 ;;		_color_read_Red
  9029 ;;		_color_read_Green
  9030 ;;		_color_read_Blue
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text47
  9035   005C64                     __ptext47:
  9036                           	callstack 0
  9037   005C64                     _I2C_2_Master_Start:
  9038                           	callstack 26
  9039   005C64                     
  9040                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9041   005C64  ECAD  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9042   005C68                     
  9043                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9044   005C68  010E               	movlb	14	; () banked
  9045   005C6A  81DA               	bsf	218,0,b	;volatile
  9046   005C6C                     
  9047                           ; BSR set to: 14
  9048   005C6C  0012               	return		;funcret
  9049   005C6E                     __end_of_I2C_2_Master_Start:
  9050                           	callstack 0
  9051                           
  9052 ;; *************** function _I2C_2_Master_Idle *****************
  9053 ;; Defined at:
  9054 ;;		line 22 in file "i2c.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;Total ram usage:        1 bytes
  9073 ;; Hardware stack levels used: 1
  9074 ;; Hardware stack levels required when called: 1
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		_I2C_2_Master_Start
  9079 ;;		_I2C_2_Master_RepStart
  9080 ;;		_I2C_2_Master_Stop
  9081 ;;		_I2C_2_Master_Write
  9082 ;;		_I2C_2_Master_Read
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           	psect	text48
  9087   005B5A                     __ptext48:
  9088                           	callstack 0
  9089   005B5A                     _I2C_2_Master_Idle:
  9090                           	callstack 26
  9091   005B5A                     l137:
  9092   005B5A  010E               	movlb	14	; () banked
  9093   005B5C  B5D8               	btfsc	216,2,b	;volatile
  9094   005B5E  EFB3  F02D         	goto	u4261
  9095   005B62  EFB5  F02D         	goto	u4260
  9096   005B66                     u4261:
  9097   005B66  EFAD  F02D         	goto	l137
  9098   005B6A                     u4260:
  9099   005B6A                     
  9100                           ; BSR set to: 14
  9101   005B6A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9102   005B6E  0E1F               	movlw	31
  9103   005B70  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9104   005B72  A4D8               	btfss	status,2,c
  9105   005B74  EFBE  F02D         	goto	u4271
  9106   005B78  EFC0  F02D         	goto	u4270
  9107   005B7C                     u4271:
  9108   005B7C  EFAD  F02D         	goto	l137
  9109   005B80                     u4270:
  9110   005B80                     
  9111                           ; BSR set to: 14
  9112   005B80  0012               	return		;funcret
  9113   005B82                     __end_of_I2C_2_Master_Idle:
  9114                           	callstack 0
  9115                           
  9116 ;; *************** function _I2C_2_Master_Init *****************
  9117 ;; Defined at:
  9118 ;;		line 4 in file "i2c.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;		None
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg, status,2
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9136 ;;Total ram usage:        0 bytes
  9137 ;; Hardware stack levels used: 1
  9138 ;; Hardware stack levels required when called: 1
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_color_click_init
  9143 ;;		_main
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text49
  9148   005B30                     __ptext49:
  9149                           	callstack 0
  9150   005B30                     _I2C_2_Master_Init:
  9151                           	callstack 28
  9152   005B30                     
  9153                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9154   005B30  010E               	movlb	14	; () banked
  9155   005B32  51D9               	movf	217,w,b	;volatile
  9156   005B34  0BF0               	andlw	-16
  9157   005B36  0908               	iorlw	8
  9158   005B38  6FD9               	movwf	217,b	;volatile
  9159   005B3A                     
  9160                           ; BSR set to: 14
  9161                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9162   005B3A  8BD9               	bsf	217,5,b	;volatile
  9163                           
  9164                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9165   005B3C  0E9F               	movlw	159
  9166   005B3E  6FD6               	movwf	214,b	;volatile
  9167   005B40                     
  9168                           ; BSR set to: 14
  9169                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9170   005B40  8A84               	bsf	132,5,c	;volatile
  9171   005B42                     
  9172                           ; BSR set to: 14
  9173                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9174   005B42  8C84               	bsf	132,6,c	;volatile
  9175   005B44                     
  9176                           ; BSR set to: 14
  9177                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9178   005B44  9BA7               	bcf	167,5,b	;volatile
  9179   005B46                     
  9180                           ; BSR set to: 14
  9181                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9182   005B46  9DA7               	bcf	167,6,b	;volatile
  9183                           
  9184                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9185   005B48  0E1D               	movlw	29
  9186   005B4A  6F1D               	movwf	29,b	;volatile
  9187                           
  9188                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9189   005B4C  0E1E               	movlw	30
  9190   005B4E  6F1C               	movwf	28,b	;volatile
  9191                           
  9192                           ;i2c.c: 18:   RD5PPS=0x1C;
  9193   005B50  0E1C               	movlw	28
  9194   005B52  6F6F               	movwf	111,b	;volatile
  9195                           
  9196                           ;i2c.c: 19:   RD6PPS=0x1B;
  9197   005B54  0E1B               	movlw	27
  9198   005B56  6F70               	movwf	112,b	;volatile
  9199   005B58                     
  9200                           ; BSR set to: 14
  9201   005B58  0012               	return		;funcret
  9202   005B5A                     __end_of_I2C_2_Master_Init:
  9203                           	callstack 0
  9204                           
  9205 ;; *************** function _YellowMove *****************
  9206 ;; Defined at:
  9207 ;;		line 258 in file "dc_motor.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  9210 ;;		 -> motorL(9), 
  9211 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  9212 ;;		 -> motorR(9), 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9227 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9228 ;;Total ram usage:        4 bytes
  9229 ;; Hardware stack levels used: 1
  9230 ;; Hardware stack levels required when called: 5
  9231 ;; This function calls:
  9232 ;;		_reverseDetect
  9233 ;;		_reverseOneBlock
  9234 ;;		_turnRight45
  9235 ;; This function is called by:
  9236 ;;		_main
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text50
  9241   005600                     __ptext50:
  9242                           	callstack 0
  9243   005600                     _YellowMove:
  9244                           	callstack 25
  9245   005600                     
  9246                           ;dc_motor.c: 259:     reverseDetect(&motorL, &motorR);
  9247   005600  0E73               	movlw	low _motorL
  9248   005602  6E19               	movwf	reverseDetect@mL^0,c
  9249   005604  0E01               	movlw	high _motorL
  9250   005606  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  9251   005608  0E6A               	movlw	low _motorR
  9252   00560A  6E1B               	movwf	reverseDetect@mR^0,c
  9253   00560C  0E01               	movlw	high _motorR
  9254   00560E  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  9255   005610  EC04  F02A         	call	_reverseDetect	;wreg free
  9256                           
  9257                           ;dc_motor.c: 261:     reverseOneBlock(&motorL, &motorR);
  9258   005614  0E73               	movlw	low _motorL
  9259   005616  6E19               	movwf	reverseOneBlock@mL^0,c
  9260   005618  0E01               	movlw	high _motorL
  9261   00561A  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  9262   00561C  0E6A               	movlw	low _motorR
  9263   00561E  6E1B               	movwf	reverseOneBlock@mR^0,c
  9264   005620  0E01               	movlw	high _motorR
  9265   005622  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  9266   005624  ECD7  F029         	call	_reverseOneBlock	;wreg free
  9267                           
  9268                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  9269   005628  0E73               	movlw	low _motorL
  9270   00562A  6E19               	movwf	turnRight45@mL^0,c
  9271   00562C  0E01               	movlw	high _motorL
  9272   00562E  6E1A               	movwf	(turnRight45@mL+1)^0,c
  9273   005630  0E6A               	movlw	low _motorR
  9274   005632  6E1B               	movwf	turnRight45@mR^0,c
  9275   005634  0E01               	movlw	high _motorR
  9276   005636  6E1C               	movwf	(turnRight45@mR+1)^0,c
  9277   005638  EC7D  F029         	call	_turnRight45	;wreg free
  9278                           
  9279                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  9280   00563C  0E73               	movlw	low _motorL
  9281   00563E  6E19               	movwf	turnRight45@mL^0,c
  9282   005640  0E01               	movlw	high _motorL
  9283   005642  6E1A               	movwf	(turnRight45@mL+1)^0,c
  9284   005644  0E6A               	movlw	low _motorR
  9285   005646  6E1B               	movwf	turnRight45@mR^0,c
  9286   005648  0E01               	movlw	high _motorR
  9287   00564A  6E1C               	movwf	(turnRight45@mR+1)^0,c
  9288   00564C  EC7D  F029         	call	_turnRight45	;wreg free
  9289   005650  0012               	return		;funcret
  9290   005652                     __end_of_YellowMove:
  9291                           	callstack 0
  9292                           
  9293 ;; *************** function _turnRight45 *****************
  9294 ;; Defined at:
  9295 ;;		line 181 in file "dc_motor.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9298 ;;		 -> motorL(9), 
  9299 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9300 ;;		 -> motorR(9), 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;		None
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  1    wreg      void 
  9305 ;; Registers used:
  9306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;Total ram usage:        6 bytes
  9317 ;; Hardware stack levels used: 1
  9318 ;; Hardware stack levels required when called: 4
  9319 ;; This function calls:
  9320 ;;		_stop
  9321 ;;		_turnRight
  9322 ;; This function is called by:
  9323 ;;		_RedMove
  9324 ;;		_BlueMove
  9325 ;;		_YellowMove
  9326 ;;		_OrangeMove
  9327 ;;		_ReversePink
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text51
  9332   0052FA                     __ptext51:
  9333                           	callstack 0
  9334   0052FA                     _turnRight45:
  9335                           	callstack 24
  9336   0052FA                     
  9337                           ;dc_motor.c: 182:     turnRight(mL,mR);
  9338   0052FA  C019  F014         	movff	turnRight45@mL,turnRight@mL
  9339   0052FE  C01A  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9340   005302  C01B  F016         	movff	turnRight45@mR,turnRight@mR
  9341   005306  C01C  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9342   00530A  EC2B  F026         	call	_turnRight	;wreg free
  9343   00530E                     
  9344                           ;dc_motor.c: 183:     _delay((unsigned long)((120)*(64000000/4000.0)));
  9345   00530E  0E0A               	movlw	10
  9346   005310  6E1E               	movwf	(??_turnRight45+1)^0,c
  9347   005312  0EBE               	movlw	190
  9348   005314  6E1D               	movwf	??_turnRight45^0,c
  9349   005316  0E79               	movlw	121
  9350   005318                     u5727:
  9351   005318  2EE8               	decfsz	wreg,f,c
  9352   00531A  D7FE               	bra	u5727
  9353   00531C  2E1D               	decfsz	??_turnRight45^0,f,c
  9354   00531E  D7FC               	bra	u5727
  9355   005320  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  9356   005322  D7FA               	bra	u5727
  9357   005324  F000               	nop	
  9358   005326                     
  9359                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  9360   005326  0E73               	movlw	low _motorL
  9361   005328  6E14               	movwf	stop@mL^0,c
  9362   00532A  0E01               	movlw	high _motorL
  9363   00532C  6E15               	movwf	(stop@mL+1)^0,c
  9364   00532E  0E6A               	movlw	low _motorR
  9365   005330  6E16               	movwf	stop@mR^0,c
  9366   005332  0E01               	movlw	high _motorR
  9367   005334  6E17               	movwf	(stop@mR+1)^0,c
  9368   005336  EC19  F028         	call	_stop	;wreg free
  9369                           
  9370                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9371   00533A  0E52               	movlw	82
  9372   00533C  6E1E               	movwf	(??_turnRight45+1)^0,c
  9373   00533E  0E2B               	movlw	43
  9374   005340  6E1D               	movwf	??_turnRight45^0,c
  9375   005342  0E00               	movlw	0
  9376   005344                     u5737:
  9377   005344  2EE8               	decfsz	wreg,f,c
  9378   005346  D7FE               	bra	u5737
  9379   005348  2E1D               	decfsz	??_turnRight45^0,f,c
  9380   00534A  D7FC               	bra	u5737
  9381   00534C  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  9382   00534E  D7FA               	bra	u5737
  9383   005350  D000               	nop2	
  9384   005352  0012               	return		;funcret
  9385   005354                     __end_of_turnRight45:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _turnRight *****************
  9389 ;; Defined at:
  9390 ;;		line 128 in file "dc_motor.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9393 ;;		 -> motorL(9), 
  9394 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9395 ;;		 -> motorR(9), 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;		None
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9410 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9411 ;;Total ram usage:        5 bytes
  9412 ;; Hardware stack levels used: 1
  9413 ;; Hardware stack levels required when called: 3
  9414 ;; This function calls:
  9415 ;;		_setMotorPWM
  9416 ;; This function is called by:
  9417 ;;		_turnRight45
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420                           
  9421                           	psect	text52
  9422   004C56                     __ptext52:
  9423                           	callstack 0
  9424   004C56                     _turnRight:
  9425                           	callstack 24
  9426   004C56                     
  9427                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  9428   004C56  EE20 F001          	lfsr	2,1
  9429   004C5A  5014               	movf	turnRight@mL^0,w,c
  9430   004C5C  26D9               	addwf	fsr2l,f,c
  9431   004C5E  5015               	movf	(turnRight@mL+1)^0,w,c
  9432   004C60  22DA               	addwfc	fsr2h,f,c
  9433   004C62  0E01               	movlw	1
  9434   004C64  6EDF               	movwf	indf2,c
  9435                           
  9436                           ;dc_motor.c: 131:     mR->direction =0;
  9437   004C66  EE20 F001          	lfsr	2,1
  9438   004C6A  5016               	movf	turnRight@mR^0,w,c
  9439   004C6C  26D9               	addwf	fsr2l,f,c
  9440   004C6E  5017               	movf	(turnRight@mR+1)^0,w,c
  9441   004C70  22DA               	addwfc	fsr2h,f,c
  9442   004C72  0E00               	movlw	0
  9443   004C74  6EDF               	movwf	indf2,c
  9444                           
  9445                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  9446   004C76  EF5D  F026         	goto	l4520
  9447   004C7A                     l4512:
  9448                           
  9449                           ;dc_motor.c: 135:         mL->power+=10;
  9450   004C7A  C014  FFD9         	movff	turnRight@mL,fsr2l
  9451   004C7E  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9452   004C82  0E0A               	movlw	10
  9453   004C84  26DF               	addwf	indf2,f,c
  9454                           
  9455                           ;dc_motor.c: 136:         mR->power+=10;
  9456   004C86  C016  FFD9         	movff	turnRight@mR,fsr2l
  9457   004C8A  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9458   004C8E  0E0A               	movlw	10
  9459   004C90  26DF               	addwf	indf2,f,c
  9460   004C92                     
  9461                           ;dc_motor.c: 138:         setMotorPWM(mL);
  9462   004C92  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9463   004C96  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9464   004C9A  EC85  F022         	call	_setMotorPWM	;wreg free
  9465   004C9E                     
  9466                           ;dc_motor.c: 139:         setMotorPWM(mR);
  9467   004C9E  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9468   004CA2  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9469   004CA6  EC85  F022         	call	_setMotorPWM	;wreg free
  9470   004CAA                     
  9471                           ;dc_motor.c: 141:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9472   004CAA  0E15               	movlw	21
  9473   004CAC  6E18               	movwf	??_turnRight^0,c
  9474   004CAE  0EC6               	movlw	198
  9475   004CB0                     u5747:
  9476   004CB0  2EE8               	decfsz	wreg,f,c
  9477   004CB2  D7FE               	bra	u5747
  9478   004CB4  2E18               	decfsz	??_turnRight^0,f,c
  9479   004CB6  D7FC               	bra	u5747
  9480   004CB8  D000               	nop2	
  9481   004CBA                     l4520:
  9482                           
  9483                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  9484   004CBA  C014  FFD9         	movff	turnRight@mL,fsr2l
  9485   004CBE  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9486   004CC2  0E46               	movlw	70
  9487   004CC4  60DF               	cpfslt	indf2,c
  9488   004CC6  EF67  F026         	goto	u4341
  9489   004CCA  EF69  F026         	goto	u4340
  9490   004CCE                     u4341:
  9491   004CCE  EF75  F026         	goto	l496
  9492   004CD2                     u4340:
  9493   004CD2  C016  FFD9         	movff	turnRight@mR,fsr2l
  9494   004CD6  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9495   004CDA  0E45               	movlw	69
  9496   004CDC  64DF               	cpfsgt	indf2,c
  9497   004CDE  EF73  F026         	goto	u4351
  9498   004CE2  EF75  F026         	goto	u4350
  9499   004CE6                     u4351:
  9500   004CE6  EF3D  F026         	goto	l4512
  9501   004CEA                     u4350:
  9502   004CEA                     l496:
  9503   004CEA  0012               	return		;funcret
  9504   004CEC                     __end_of_turnRight:
  9505                           	callstack 0
  9506                           
  9507 ;; *************** function _Timer0_init *****************
  9508 ;; Defined at:
  9509 ;;		line 8 in file "timers.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		wreg, status,2
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9527 ;;Total ram usage:        0 bytes
  9528 ;; Hardware stack levels used: 1
  9529 ;; Hardware stack levels required when called: 1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_main
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text53
  9538   005BEE                     __ptext53:
  9539                           	callstack 0
  9540   005BEE                     _Timer0_init:
  9541                           	callstack 29
  9542   005BEE                     
  9543                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  9544   005BEE  50D6               	movf	214,w,c	;volatile
  9545   005BF0  0B1F               	andlw	-225
  9546   005BF2  0940               	iorlw	64
  9547   005BF4  6ED6               	movwf	214,c	;volatile
  9548   005BF6                     
  9549                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  9550   005BF6  88D6               	bsf	214,4,c	;volatile
  9551                           
  9552                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  9553   005BF8  50D6               	movf	214,w,c	;volatile
  9554   005BFA  0BF0               	andlw	-16
  9555   005BFC  090E               	iorlw	14
  9556   005BFE  6ED6               	movwf	214,c	;volatile
  9557   005C00                     
  9558                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  9559   005C00  88D5               	bsf	213,4,c	;volatile
  9560                           
  9561                           ;timers.c: 16:     TMR0H=0;
  9562   005C02  0E00               	movlw	0
  9563   005C04  6ED4               	movwf	212,c	;volatile
  9564                           
  9565                           ;timers.c: 17:     TMR0L=0;
  9566   005C06  0E00               	movlw	0
  9567   005C08  6ED3               	movwf	211,c	;volatile
  9568   005C0A                     
  9569                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  9570   005C0A  8ED5               	bsf	213,7,c	;volatile
  9571   005C0C  0012               	return		;funcret
  9572   005C0E                     __end_of_Timer0_init:
  9573                           	callstack 0
  9574                           
  9575 ;; *************** function _RetryMove *****************
  9576 ;; Defined at:
  9577 ;;		line 295 in file "dc_motor.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9580 ;;		 -> motorL(9), 
  9581 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9582 ;;		 -> motorR(9), 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      void 
  9587 ;; Registers used:
  9588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> Stashed changes
      +1  BANK12  BANK13
  9607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
<<<<<<< Updated upstream
  9609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;Total ram usage:        4 bytes
  9612 ;; Hardware stack levels used: 1
  9613 ;; Hardware stack levels required when called: 5
  9614 ;; This function calls:
  9615 ;;		_reverseDetect
  9616 ;;		_reverseOneBlock
  9617 ;;		_turnLeft45
  9618 ;; This function is called by:
  9619 ;;		_main
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text54
  9624   005652                     __ptext54:
  9625                           	callstack 0
  9626   005652                     _PinkMove:
  9627                           	callstack 25
  9628   005652                     
  9629                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  9630   005652  0E7B               	movlw	low _motorL
  9631   005654  6E1A               	movwf	reverseDetect@mL^0,c
  9632   005656  0E01               	movlw	high _motorL
  9633   005658  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9634   00565A  0E72               	movlw	low _motorR
  9635   00565C  6E1C               	movwf	reverseDetect@mR^0,c
  9636   00565E  0E01               	movlw	high _motorR
  9637   005660  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9638   005662  ECAC  F029         	call	_reverseDetect	;wreg free
  9639                           
  9640                           ;dc_motor.c: 271:     reverseOneBlock(&motorL, &motorR);
  9641   005666  0E7B               	movlw	low _motorL
  9642   005668  6E1A               	movwf	reverseOneBlock@mL^0,c
  9643   00566A  0E01               	movlw	high _motorL
  9644   00566C  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9645   00566E  0E72               	movlw	low _motorR
  9646   005670  6E1C               	movwf	reverseOneBlock@mR^0,c
  9647   005672  0E01               	movlw	high _motorR
  9648   005674  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9649   005676  EC7F  F029         	call	_reverseOneBlock	;wreg free
  9650                           
  9651                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9652   00567A  0E7B               	movlw	low _motorL
  9653   00567C  6E1A               	movwf	turnLeft45@mL^0,c
  9654   00567E  0E01               	movlw	high _motorL
  9655   005680  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9656   005682  0E72               	movlw	low _motorR
  9657   005684  6E1C               	movwf	turnLeft45@mR^0,c
  9658   005686  0E01               	movlw	high _motorR
  9659   005688  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9660   00568A  EC05  F02A         	call	_turnLeft45	;wreg free
  9661                           
  9662                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9663   00568E  0E7B               	movlw	low _motorL
  9664   005690  6E1A               	movwf	turnLeft45@mL^0,c
  9665   005692  0E01               	movlw	high _motorL
  9666   005694  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9667   005696  0E72               	movlw	low _motorR
  9668   005698  6E1C               	movwf	turnLeft45@mR^0,c
  9669   00569A  0E01               	movlw	high _motorR
  9670   00569C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9671   00569E  EC05  F02A         	call	_turnLeft45	;wreg free
  9672   0056A2  0012               	return		;funcret
  9673   0056A4                     __end_of_PinkMove:
  9674                           	callstack 0
  9675                           
  9676 ;; *************** function _turnLeft45 *****************
  9677 ;; Defined at:
  9678 ;;		line 188 in file "dc_motor.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9681 ;;		 -> motorL(9), 
  9682 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9683 ;;		 -> motorR(9), 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      void 
  9688 ;; Registers used:
  9689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9699 ;;Total ram usage:        6 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; Hardware stack levels required when called: 4
  9702 ;; This function calls:
  9703 ;;		_stop
  9704 ;;		_turnLeft
  9705 ;; This function is called by:
  9706 ;;		_GreenMove
  9707 ;;		_PinkMove
  9708 ;;		_LightBlueMove
  9709 ;;		_ReverseYellow
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           	psect	text55
  9714   00540A                     __ptext55:
  9715                           	callstack 0
  9716   00540A                     _turnLeft45:
  9717                           	callstack 24
  9718   00540A                     
  9719                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  9720   00540A  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  9721   00540E  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  9722   005412  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  9723   005416  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  9724   00541A  EC8A  F026         	call	_turnLeft	;wreg free
  9725   00541E                     
  9726                           ;dc_motor.c: 190:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  9727   00541E  0E12               	movlw	18
  9728   005420  6E1F               	movwf	(??_turnLeft45+1)^0,c
  9729   005422  0EDC               	movlw	220
  9730   005424  6E1E               	movwf	??_turnLeft45^0,c
  9731   005426  0E60               	movlw	96
  9732   005428                     u5767:
  9733   005428  2EE8               	decfsz	wreg,f,c
  9734   00542A  D7FE               	bra	u5767
  9735   00542C  2E1E               	decfsz	??_turnLeft45^0,f,c
  9736   00542E  D7FC               	bra	u5767
  9737   005430  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  9738   005432  D7FA               	bra	u5767
  9739   005434                     
  9740                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  9741   005434  0E7B               	movlw	low _motorL
  9742   005436  6E14               	movwf	stop@mL^0,c
  9743   005438  0E01               	movlw	high _motorL
  9744   00543A  6E15               	movwf	(stop@mL+1)^0,c
  9745   00543C  0E72               	movlw	low _motorR
  9746   00543E  6E16               	movwf	stop@mR^0,c
  9747   005440  0E01               	movlw	high _motorR
  9748   005442  6E17               	movwf	(stop@mR+1)^0,c
  9749   005444  ECAD  F027         	call	_stop	;wreg free
  9750                           
  9751                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9752   005448  0E52               	movlw	82
  9753   00544A  6E1F               	movwf	(??_turnLeft45+1)^0,c
  9754   00544C  0E2B               	movlw	43
  9755   00544E  6E1E               	movwf	??_turnLeft45^0,c
  9756   005450  0E00               	movlw	0
  9757   005452                     u5777:
  9758   005452  2EE8               	decfsz	wreg,f,c
  9759   005454  D7FE               	bra	u5777
  9760   005456  2E1E               	decfsz	??_turnLeft45^0,f,c
  9761   005458  D7FC               	bra	u5777
  9762   00545A  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  9763   00545C  D7FA               	bra	u5777
  9764   00545E  D000               	nop2	
  9765   005460  0012               	return		;funcret
  9766   005462                     __end_of_turnLeft45:
  9767                           	callstack 0
  9768                           
  9769 ;; *************** function _turnLeft *****************
  9770 ;; Defined at:
  9771 ;;		line 110 in file "dc_motor.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9774 ;;		 -> motorL(9), 
  9775 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9776 ;;		 -> motorR(9), 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;Total ram usage:        6 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 3
  9795 ;; This function calls:
  9796 ;;		_setMotorPWM
  9797 ;; This function is called by:
  9798 ;;		_turnLeft45
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text56
  9803   004D14                     __ptext56:
  9804                           	callstack 0
  9805   004D14                     _turnLeft:
  9806                           	callstack 24
  9807   004D14                     
  9808                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  9809   004D14  EE20 F001          	lfsr	2,1
  9810   004D18  5014               	movf	turnLeft@mL^0,w,c
  9811   004D1A  26D9               	addwf	fsr2l,f,c
  9812   004D1C  5015               	movf	(turnLeft@mL+1)^0,w,c
  9813   004D1E  22DA               	addwfc	fsr2h,f,c
  9814   004D20  0E00               	movlw	0
  9815   004D22  6EDF               	movwf	indf2,c
  9816                           
  9817                           ;dc_motor.c: 113:     mR->direction =1;
  9818   004D24  EE20 F001          	lfsr	2,1
  9819   004D28  5016               	movf	turnLeft@mR^0,w,c
  9820   004D2A  26D9               	addwf	fsr2l,f,c
  9821   004D2C  5017               	movf	(turnLeft@mR+1)^0,w,c
  9822   004D2E  22DA               	addwfc	fsr2h,f,c
  9823   004D30  0E01               	movlw	1
  9824   004D32  6EDF               	movwf	indf2,c
  9825                           
  9826                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  9827   004D34  EFC0  F026         	goto	l4417
  9828   004D38                     l4409:
  9829                           
  9830                           ;dc_motor.c: 117:         mL->power+=10;
  9831   004D38  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9832   004D3C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9833   004D40  0E0A               	movlw	10
  9834   004D42  26DF               	addwf	indf2,f,c
  9835                           
  9836                           ;dc_motor.c: 118:         mR->power+=10;
  9837   004D44  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9838   004D48  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9839   004D4C  0E0A               	movlw	10
  9840   004D4E  26DF               	addwf	indf2,f,c
  9841   004D50                     
  9842                           ;dc_motor.c: 120:         setMotorPWM(mL);
  9843   004D50  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9844   004D54  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9845   004D58  EC46  F022         	call	_setMotorPWM	;wreg free
  9846   004D5C                     
  9847                           ;dc_motor.c: 121:         setMotorPWM(mR);
  9848   004D5C  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9849   004D60  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9850   004D64  EC46  F022         	call	_setMotorPWM	;wreg free
  9851   004D68                     
  9852                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9853   004D68  0E02               	movlw	2
  9854   004D6A  6E19               	movwf	(??_turnLeft+1)^0,c
  9855   004D6C  0EA0               	movlw	160
  9856   004D6E  6E18               	movwf	??_turnLeft^0,c
  9857   004D70  0E92               	movlw	146
  9858   004D72                     u5787:
  9859   004D72  2EE8               	decfsz	wreg,f,c
  9860   004D74  D7FE               	bra	u5787
  9861   004D76  2E18               	decfsz	??_turnLeft^0,f,c
  9862   004D78  D7FC               	bra	u5787
  9863   004D7A  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  9864   004D7C  D7FA               	bra	u5787
  9865   004D7E  D000               	nop2	
  9866   004D80                     l4417:
  9867   004D80  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9868   004D84  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9869   004D88  0E1E               	movlw	30
  9870   004D8A  60DF               	cpfslt	indf2,c
  9871   004D8C  EFCA  F026         	goto	u4291
  9872   004D90  EFCC  F026         	goto	u4290
  9873   004D94                     u4291:
  9874   004D94  EFD8  F026         	goto	l488
  9875   004D98                     u4290:
  9876   004D98  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9877   004D9C  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9878   004DA0  0E1D               	movlw	29
  9879   004DA2  64DF               	cpfsgt	indf2,c
  9880   004DA4  EFD6  F026         	goto	u4301
  9881   004DA8  EFD8  F026         	goto	u4300
  9882   004DAC                     u4301:
  9883   004DAC  EF9C  F026         	goto	l4409
  9884   004DB0                     u4300:
  9885   004DB0                     l488:
  9886   004DB0  0012               	return		;funcret
  9887   004DB2                     __end_of_turnLeft:
  9888                           	callstack 0
  9889                           
  9890 ;; *************** function _reverseOneBlock *****************
  9891 ;; Defined at:
  9892 ;;		line 202 in file "dc_motor.c"
  9893 ;; Parameters:    Size  Location     Type
  9894 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9895 ;;		 -> motorL(9), 
  9896 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9897 ;;		 -> motorR(9), 
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;		None
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  1    wreg      void 
  9902 ;; Registers used:
  9903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9912 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9913 ;;Total ram usage:        6 bytes
  9914 ;; Hardware stack levels used: 1
  9915 ;; Hardware stack levels required when called: 4
  9916 ;; This function calls:
  9917 ;;		_fullSpeedBack
  9918 ;;		_stop
  9919 ;; This function is called by:
  9920 ;;		_YellowMove
  9921 ;;		_PinkMove
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text57
  9926   0052FE                     __ptext57:
  9927                           	callstack 0
  9928   0052FE                     _reverseOneBlock:
  9929                           	callstack 25
  9930   0052FE                     
  9931                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  9932   0052FE  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  9933   005302  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  9934   005306  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  9935   00530A  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  9936   00530E  ECD9  F026         	call	_fullSpeedBack	;wreg free
  9937   005312                     
  9938                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9939   005312  0E52               	movlw	82
  9940   005314  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  9941   005316  0E2B               	movlw	43
  9942   005318  6E1E               	movwf	??_reverseOneBlock^0,c
  9943   00531A  0E00               	movlw	0
  9944   00531C                     u5797:
  9945   00531C  2EE8               	decfsz	wreg,f,c
  9946   00531E  D7FE               	bra	u5797
  9947   005320  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  9948   005322  D7FC               	bra	u5797
  9949   005324  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9950   005326  D7FA               	bra	u5797
  9951   005328  D000               	nop2	
  9952   00532A                     
  9953                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  9954   00532A  0E7B               	movlw	low _motorL
  9955   00532C  6E14               	movwf	stop@mL^0,c
  9956   00532E  0E01               	movlw	high _motorL
  9957   005330  6E15               	movwf	(stop@mL+1)^0,c
  9958   005332  0E72               	movlw	low _motorR
  9959   005334  6E16               	movwf	stop@mR^0,c
  9960   005336  0E01               	movlw	high _motorR
  9961   005338  6E17               	movwf	(stop@mR+1)^0,c
  9962   00533A  ECAD  F027         	call	_stop	;wreg free
  9963                           
  9964                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9965   00533E  0E52               	movlw	82
  9966   005340  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  9967   005342  0E2B               	movlw	43
  9968   005344  6E1E               	movwf	??_reverseOneBlock^0,c
  9969   005346  0E00               	movlw	0
  9970   005348                     u5807:
  9971   005348  2EE8               	decfsz	wreg,f,c
  9972   00534A  D7FE               	bra	u5807
  9973   00534C  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  9974   00534E  D7FC               	bra	u5807
  9975   005350  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9976   005352  D7FA               	bra	u5807
  9977   005354  D000               	nop2	
  9978   005356  0012               	return		;funcret
  9979   005358                     __end_of_reverseOneBlock:
  9980                           	callstack 0
  9981                           
  9982 ;; *************** function _reverseDetect *****************
  9983 ;; Defined at:
  9984 ;;		line 195 in file "dc_motor.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9987 ;;		 -> motorL(9), 
  9988 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9989 ;;		 -> motorR(9), 
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10004 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10005 ;;Total ram usage:        6 bytes
 10006 ;; Hardware stack levels used: 1
 10007 ;; Hardware stack levels required when called: 4
 10008 ;; This function calls:
 10009 ;;		_fullSpeedBack
 10010 ;;		_stop
 10011 ;; This function is called by:
 10012 ;;		_RedMove
 10013 ;;		_GreenMove
 10014 ;;		_BlueMove
 10015 ;;		_YellowMove
 10016 ;;		_PinkMove
 10017 ;;		_OrangeMove
 10018 ;;		_LightBlueMove
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text58
 10023   005358                     __ptext58:
 10024                           	callstack 0
 10025   005358                     _reverseDetect:
 10026                           	callstack 24
 10027   005358                     
 10028                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
 10029   005358  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10030   00535C  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10031   005360  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10032   005364  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10033   005368  ECD9  F026         	call	_fullSpeedBack	;wreg free
 10034   00536C                     
 10035                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10036   00536C  0E11               	movlw	17
 10037   00536E  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10038   005370  0E3C               	movlw	60
 10039   005372  6E1E               	movwf	??_reverseDetect^0,c
 10040   005374  0ECB               	movlw	203
 10041   005376                     u5817:
 10042   005376  2EE8               	decfsz	wreg,f,c
 10043   005378  D7FE               	bra	u5817
 10044   00537A  2E1E               	decfsz	??_reverseDetect^0,f,c
 10045   00537C  D7FC               	bra	u5817
 10046   00537E  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10047   005380  D7FA               	bra	u5817
 10048   005382  F000               	nop	
 10049   005384                     
 10050                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
 10051   005384  0E7B               	movlw	low _motorL
 10052   005386  6E14               	movwf	stop@mL^0,c
 10053   005388  0E01               	movlw	high _motorL
 10054   00538A  6E15               	movwf	(stop@mL+1)^0,c
 10055   00538C  0E72               	movlw	low _motorR
 10056   00538E  6E16               	movwf	stop@mR^0,c
 10057   005390  0E01               	movlw	high _motorR
 10058   005392  6E17               	movwf	(stop@mR+1)^0,c
 10059   005394  ECAD  F027         	call	_stop	;wreg free
 10060                           
 10061                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10062   005398  0E52               	movlw	82
 10063   00539A  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10064   00539C  0E2B               	movlw	43
 10065   00539E  6E1E               	movwf	??_reverseDetect^0,c
 10066   0053A0  0E00               	movlw	0
 10067   0053A2                     u5827:
 10068   0053A2  2EE8               	decfsz	wreg,f,c
 10069   0053A4  D7FE               	bra	u5827
 10070   0053A6  2E1E               	decfsz	??_reverseDetect^0,f,c
 10071   0053A8  D7FC               	bra	u5827
 10072   0053AA  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10073   0053AC  D7FA               	bra	u5827
 10074   0053AE  D000               	nop2	
 10075   0053B0  0012               	return		;funcret
 10076   0053B2                     __end_of_reverseDetect:
 10077                           	callstack 0
 10078                           
 10079 ;; *************** function _stop *****************
 10080 ;; Defined at:
 10081 ;;		line 92 in file "dc_motor.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10084 ;;		 -> motorL(9), 
 10085 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10086 ;;		 -> motorR(9), 
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;		None
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  1    wreg      void 
 10091 ;; Registers used:
 10092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;Total ram usage:        6 bytes
 10103 ;; Hardware stack levels used: 1
 10104 ;; Hardware stack levels required when called: 3
 10105 ;; This function calls:
 10106 ;;		_setMotorPWM
 10107 ;; This function is called by:
 10108 ;;		_main
 10109 ;;		_turnRight45
 10110 ;;		_turnLeft45
 10111 ;;		_reverseDetect
 10112 ;;		_reverseOneBlock
 10113 ;;		_ForwardOneBlock
 10114 ;;		_Forwardhalfblock
 10115 ;;		_RetryMove
 10116 ;;		_Backhalfblock
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text59
 10121   004F5A                     __ptext59:
 10122                           	callstack 0
 10123   004F5A                     _stop:
 10124                           	callstack 27
 10125   004F5A                     
 10126                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
 10127   004F5A  EFD3  F027         	goto	l4403
 10128   004F5E                     l4395:
 10129                           
 10130                           ;dc_motor.c: 96:         mL->power-=10;
 10131   004F5E  C014  FFD9         	movff	stop@mL,fsr2l
 10132   004F62  C015  FFDA         	movff	stop@mL+1,fsr2h
 10133   004F66  0E0A               	movlw	10
 10134   004F68  5EDF               	subwf	indf2,f,c
 10135                           
 10136                           ;dc_motor.c: 97:         mR->power-=10;
 10137   004F6A  C016  FFD9         	movff	stop@mR,fsr2l
 10138   004F6E  C017  FFDA         	movff	stop@mR+1,fsr2h
 10139   004F72  0E0A               	movlw	10
 10140   004F74  5EDF               	subwf	indf2,f,c
 10141   004F76                     
 10142                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10143   004F76  C014  F00E         	movff	stop@mL,setMotorPWM@m
 10144   004F7A  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 10145   004F7E  EC46  F022         	call	_setMotorPWM	;wreg free
 10146   004F82                     
 10147                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10148   004F82  C016  F00E         	movff	stop@mR,setMotorPWM@m
 10149   004F86  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 10150   004F8A  EC46  F022         	call	_setMotorPWM	;wreg free
 10151   004F8E                     
 10152                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10153   004F8E  0E02               	movlw	2
 10154   004F90  6E19               	movwf	(??_stop+1)^0,c
 10155   004F92  0EA0               	movlw	160
 10156   004F94  6E18               	movwf	??_stop^0,c
 10157   004F96  0E92               	movlw	146
 10158   004F98                     u5837:
 10159   004F98  2EE8               	decfsz	wreg,f,c
 10160   004F9A  D7FE               	bra	u5837
 10161   004F9C  2E18               	decfsz	??_stop^0,f,c
 10162   004F9E  D7FC               	bra	u5837
 10163   004FA0  2E19               	decfsz	(??_stop+1)^0,f,c
 10164   004FA2  D7FA               	bra	u5837
 10165   004FA4  D000               	nop2	
 10166   004FA6                     l4403:
 10167                           
 10168                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
 10169   004FA6  C014  FFD9         	movff	stop@mL,fsr2l
 10170   004FAA  C015  FFDA         	movff	stop@mL+1,fsr2h
 10171   004FAE  50DF               	movf	indf2,w,c
 10172   004FB0  A4D8               	btfss	status,2,c
 10173   004FB2  EFDD  F027         	goto	u4271
 10174   004FB6  EFDF  F027         	goto	u4270
 10175   004FBA                     u4271:
 10176   004FBA  EFAF  F027         	goto	l4395
 10177   004FBE                     u4270:
 10178   004FBE  C016  FFD9         	movff	stop@mR,fsr2l
 10179   004FC2  C017  FFDA         	movff	stop@mR+1,fsr2h
 10180   004FC6  50DF               	movf	indf2,w,c
 10181   004FC8  A4D8               	btfss	status,2,c
 10182   004FCA  EFE9  F027         	goto	u4281
 10183   004FCE  EFEB  F027         	goto	u4280
 10184   004FD2                     u4281:
 10185   004FD2  EFAF  F027         	goto	l4395
 10186   004FD6                     u4280:
 10187   004FD6  0012               	return		;funcret
 10188   004FD8                     __end_of_stop:
 10189                           	callstack 0
 10190                           
 10191 ;; *************** function _fullSpeedBack *****************
 10192 ;; Defined at:
 10193 ;;		line 164 in file "dc_motor.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10196 ;;		 -> motorL(9), 
 10197 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10198 ;;		 -> motorR(9), 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;		None
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      void 
 10203 ;; Registers used:
 10204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10214 ;;Total ram usage:        6 bytes
 10215 ;; Hardware stack levels used: 1
 10216 ;; Hardware stack levels required when called: 3
 10217 ;; This function calls:
 10218 ;;		_setMotorPWM
 10219 ;; This function is called by:
 10220 ;;		_reverseDetect
 10221 ;;		_reverseOneBlock
 10222 ;;		_RetryMove
 10223 ;;		_Backhalfblock
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           	psect	text60
 10228   004DB2                     __ptext60:
 10229                           	callstack 0
 10230   004DB2                     _fullSpeedBack:
 10231                           	callstack 24
 10232   004DB2                     
 10233                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
 10234   004DB2  EE20 F001          	lfsr	2,1
 10235   004DB6  5014               	movf	fullSpeedBack@mL^0,w,c
 10236   004DB8  26D9               	addwf	fsr2l,f,c
 10237   004DBA  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10238   004DBC  22DA               	addwfc	fsr2h,f,c
 10239   004DBE  0E00               	movlw	0
 10240   004DC0  6EDF               	movwf	indf2,c
 10241                           
 10242                           ;dc_motor.c: 168:     mR->direction =0;
 10243   004DC2  EE20 F001          	lfsr	2,1
 10244   004DC6  5016               	movf	fullSpeedBack@mR^0,w,c
 10245   004DC8  26D9               	addwf	fsr2l,f,c
 10246   004DCA  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10247   004DCC  22DA               	addwfc	fsr2h,f,c
 10248   004DCE  0E00               	movlw	0
 10249   004DD0  6EDF               	movwf	indf2,c
 10250                           
 10251                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
 10252   004DD2  EF0F  F027         	goto	l4459
 10253   004DD6                     l4451:
 10254                           
 10255                           ;dc_motor.c: 171:         mL->power+=10;
 10256   004DD6  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10257   004DDA  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10258   004DDE  0E0A               	movlw	10
 10259   004DE0  26DF               	addwf	indf2,f,c
 10260                           
 10261                           ;dc_motor.c: 172:         mR->power+=10;
 10262   004DE2  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10263   004DE6  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10264   004DEA  0E0A               	movlw	10
 10265   004DEC  26DF               	addwf	indf2,f,c
 10266   004DEE                     
 10267                           ;dc_motor.c: 174:         setMotorPWM(mL);
 10268   004DEE  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10269   004DF2  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10270   004DF6  EC46  F022         	call	_setMotorPWM	;wreg free
 10271   004DFA                     
 10272                           ;dc_motor.c: 175:         setMotorPWM(mR);
 10273   004DFA  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10274   004DFE  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10275   004E02  EC46  F022         	call	_setMotorPWM	;wreg free
 10276   004E06                     
 10277                           ;dc_motor.c: 177:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10278   004E06  0E02               	movlw	2
 10279   004E08  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10280   004E0A  0EA0               	movlw	160
 10281   004E0C  6E18               	movwf	??_fullSpeedBack^0,c
 10282   004E0E  0E92               	movlw	146
 10283   004E10                     u5847:
 10284   004E10  2EE8               	decfsz	wreg,f,c
 10285   004E12  D7FE               	bra	u5847
 10286   004E14  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10287   004E16  D7FC               	bra	u5847
 10288   004E18  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10289   004E1A  D7FA               	bra	u5847
 10290   004E1C  D000               	nop2	
 10291   004E1E                     l4459:
 10292   004E1E  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10293   004E22  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10294   004E26  0E1E               	movlw	30
 10295   004E28  60DF               	cpfslt	indf2,c
 10296   004E2A  EF19  F027         	goto	u4351
 10297   004E2E  EF1B  F027         	goto	u4350
 10298   004E32                     u4351:
 10299   004E32  EF27  F027         	goto	l512
 10300   004E36                     u4350:
 10301   004E36  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10302   004E3A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10303   004E3E  0E1D               	movlw	29
 10304   004E40  64DF               	cpfsgt	indf2,c
 10305   004E42  EF25  F027         	goto	u4361
 10306   004E46  EF27  F027         	goto	u4360
 10307   004E4A                     u4361:
 10308   004E4A  EFEB  F026         	goto	l4451
 10309   004E4E                     u4360:
 10310   004E4E                     l512:
 10311   004E4E  0012               	return		;funcret
 10312   004E50                     __end_of_fullSpeedBack:
 10313                           	callstack 0
 10314                           
 10315 ;; *************** function _setMotorPWM *****************
 10316 ;; Defined at:
 10317 ;;		line 67 in file "dc_motor.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;  m               2   13[COMRAM] PTR struct DC_motor
 10320 ;;		 -> motorR(9), motorL(9), 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  negDuty         1   18[COMRAM] unsigned char 
 10323 ;;  posDuty         1   17[COMRAM] unsigned char 
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10337 ;;Total ram usage:        6 bytes
 10338 ;; Hardware stack levels used: 1
 10339 ;; Hardware stack levels required when called: 2
 10340 ;; This function calls:
 10341 ;;		___lwdiv
 10342 ;;		___wmul
 10343 ;; This function is called by:
 10344 ;;		_stop
 10345 ;;		_turnLeft
 10346 ;;		_turnRight
 10347 ;;		_fullSpeedAhead
 10348 ;;		_fullSpeedBack
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text61
 10353   00448C                     __ptext61:
 10354                           	callstack 0
 10355   00448C                     _setMotorPWM:
 10356                           	callstack 27
 10357   00448C                     
 10358                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
 10359   00448C  EE20 F002          	lfsr	2,2
 10360   004490  500E               	movf	setMotorPWM@m^0,w,c
 10361   004492  26D9               	addwf	fsr2l,f,c
 10362   004494  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10363   004496  22DA               	addwfc	fsr2h,f,c
 10364   004498  50DF               	movf	indf2,w,c
 10365   00449A  B4D8               	btfsc	status,2,c
 10366   00449C  EF52  F022         	goto	u3291
 10367   0044A0  EF54  F022         	goto	u3290
 10368   0044A4                     u3291:
 10369   0044A4  EF88  F022         	goto	l3847
 10370   0044A8                     u3290:
 10371   0044A8                     
 10372                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 10373   0044A8  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10374   0044AC  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10375   0044B0  50DF               	movf	indf2,w,c
 10376   0044B2  6E10               	movwf	??_setMotorPWM^0,c
 10377   0044B4  5010               	movf	??_setMotorPWM^0,w,c
 10378   0044B6  6E01               	movwf	___wmul@multiplier^0,c
 10379   0044B8  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10380   0044BA  EE20 F003          	lfsr	2,3
 10381   0044BE  500E               	movf	setMotorPWM@m^0,w,c
 10382   0044C0  26D9               	addwf	fsr2l,f,c
 10383   0044C2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10384   0044C4  22DA               	addwfc	fsr2h,f,c
 10385   0044C6  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10386   0044CA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10387   0044CE  EC9B  F02D         	call	___wmul	;wreg free
 10388   0044D2  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10389   0044D6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10390   0044DA  0E00               	movlw	0
 10391   0044DC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10392   0044DE  0E64               	movlw	100
 10393   0044E0  6E09               	movwf	___lwdiv@divisor^0,c
 10394   0044E2  EC29  F028         	call	___lwdiv	;wreg free
 10395   0044E6  EE20 F003          	lfsr	2,3
 10396   0044EA  500E               	movf	setMotorPWM@m^0,w,c
 10397   0044EC  26D9               	addwf	fsr2l,f,c
 10398   0044EE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10399   0044F0  22DA               	addwfc	fsr2h,f,c
 10400   0044F2  50DF               	movf	indf2,w,c
 10401   0044F4  6E11               	movwf	(??_setMotorPWM+1)^0,c
 10402   0044F6  5007               	movf	?___lwdiv^0,w,c
 10403   0044F8  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 10404   0044FA  6E12               	movwf	setMotorPWM@posDuty^0,c
 10405   0044FC                     
 10406                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
 10407   0044FC  EE20 F003          	lfsr	2,3
 10408   004500  500E               	movf	setMotorPWM@m^0,w,c
 10409   004502  26D9               	addwf	fsr2l,f,c
 10410   004504  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10411   004506  22DA               	addwfc	fsr2h,f,c
 10412   004508  50DF               	movf	indf2,w,c
 10413   00450A  6E13               	movwf	setMotorPWM@negDuty^0,c
 10414                           
 10415                           ;dc_motor.c: 74:     }
 10416   00450C  EFAB  F022         	goto	l3851
 10417   004510                     l3847:
 10418                           
 10419                           ;dc_motor.c: 76:         posDuty=0;
 10420   004510  0E00               	movlw	0
 10421   004512  6E12               	movwf	setMotorPWM@posDuty^0,c
 10422   004514                     
 10423                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10424   004514  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10425   004518  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10426   00451C  50DF               	movf	indf2,w,c
 10427   00451E  6E10               	movwf	??_setMotorPWM^0,c
 10428   004520  5010               	movf	??_setMotorPWM^0,w,c
 10429   004522  6E01               	movwf	___wmul@multiplier^0,c
 10430   004524  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10431   004526  EE20 F003          	lfsr	2,3
 10432   00452A  500E               	movf	setMotorPWM@m^0,w,c
 10433   00452C  26D9               	addwf	fsr2l,f,c
 10434   00452E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10435   004530  22DA               	addwfc	fsr2h,f,c
 10436   004532  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10437   004536  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10438   00453A  EC9B  F02D         	call	___wmul	;wreg free
 10439   00453E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10440   004542  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10441   004546  0E00               	movlw	0
 10442   004548  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10443   00454A  0E64               	movlw	100
 10444   00454C  6E09               	movwf	___lwdiv@divisor^0,c
 10445   00454E  EC29  F028         	call	___lwdiv	;wreg free
 10446   004552  5007               	movf	?___lwdiv^0,w,c
 10447   004554  6E13               	movwf	setMotorPWM@negDuty^0,c
 10448   004556                     l3851:
 10449                           
 10450                           ;dc_motor.c: 80:     if (m->direction) {
 10451   004556  EE20 F001          	lfsr	2,1
 10452   00455A  500E               	movf	setMotorPWM@m^0,w,c
 10453   00455C  26D9               	addwf	fsr2l,f,c
 10454   00455E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10455   004560  22DA               	addwfc	fsr2h,f,c
 10456   004562  50DF               	movf	indf2,w,c
 10457   004564  B4D8               	btfsc	status,2,c
 10458   004566  EFB7  F022         	goto	u3301
 10459   00456A  EFB9  F022         	goto	u3300
 10460   00456E                     u3301:
 10461   00456E  EFDB  F022         	goto	l3855
 10462   004572                     u3300:
 10463   004572                     
 10464                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 10465   004572  EE20 F005          	lfsr	2,5
 10466   004576  500E               	movf	setMotorPWM@m^0,w,c
 10467   004578  26D9               	addwf	fsr2l,f,c
 10468   00457A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10469   00457C  22DA               	addwfc	fsr2h,f,c
 10470   00457E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10471   004582  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10472   004586  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10473   00458A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10474   00458E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10475                           
 10476                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 10477   004592  EE20 F007          	lfsr	2,7
 10478   004596  500E               	movf	setMotorPWM@m^0,w,c
 10479   004598  26D9               	addwf	fsr2l,f,c
 10480   00459A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10481   00459C  22DA               	addwfc	fsr2h,f,c
 10482   00459E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10483   0045A2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10484   0045A6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10485   0045AA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10486   0045AE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10487                           
 10488                           ;dc_motor.c: 85:     } else {
 10489   0045B2  EFFB  F022         	goto	l474
 10490   0045B6                     l3855:
 10491                           
 10492                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 10493   0045B6  EE20 F005          	lfsr	2,5
 10494   0045BA  500E               	movf	setMotorPWM@m^0,w,c
 10495   0045BC  26D9               	addwf	fsr2l,f,c
 10496   0045BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10497   0045C0  22DA               	addwfc	fsr2h,f,c
 10498   0045C2  CFDE F010          	movff	postinc2,??_setMotorPWM
 10499   0045C6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10500   0045CA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10501   0045CE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10502   0045D2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10503                           
 10504                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 10505   0045D6  EE20 F007          	lfsr	2,7
 10506   0045DA  500E               	movf	setMotorPWM@m^0,w,c
 10507   0045DC  26D9               	addwf	fsr2l,f,c
 10508   0045DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10509   0045E0  22DA               	addwfc	fsr2h,f,c
 10510   0045E2  CFDE F010          	movff	postinc2,??_setMotorPWM
 10511   0045E6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10512   0045EA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10513   0045EE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10514   0045F2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10515   0045F6                     l474:
 10516   0045F6  0012               	return		;funcret
 10517   0045F8                     __end_of_setMotorPWM:
 10518                           	callstack 0
 10519                           
 10520 ;; *************** function ___wmul *****************
 10521 ;; Defined at:
 10522 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;  multiplier      2    0[COMRAM] unsigned int 
 10525 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;  product         2    4[COMRAM] unsigned int 
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  2    0[COMRAM] unsigned int 
 10530 ;; Registers used:
 10531 ;;		wreg, status,2, status,0, prodl, prodh
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10541 ;;Total ram usage:        6 bytes
 10542 ;; Hardware stack levels used: 1
 10543 ;; Hardware stack levels required when called: 1
 10544 ;; This function calls:
 10545 ;;		Nothing
 10546 ;; This function is called by:
 10547 ;;		_setMotorPWM
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           	psect	text62
 10552   005B36                     __ptext62:
 10553                           	callstack 0
 10554   005B36                     ___wmul:
 10555                           	callstack 27
 10556   005B36  5001               	movf	___wmul@multiplier^0,w,c
 10557   005B38  0203               	mulwf	___wmul@multiplicand^0,c
 10558   005B3A  CFF3 F005          	movff	prodl,___wmul@product
 10559   005B3E  CFF4 F006          	movff	prodh,___wmul@product+1
 10560   005B42  5001               	movf	___wmul@multiplier^0,w,c
 10561   005B44  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10562   005B46  50F3               	movf	243,w,c
 10563   005B48  2606               	addwf	(___wmul@product+1)^0,f,c
 10564   005B4A  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10565   005B4C  0203               	mulwf	___wmul@multiplicand^0,c
 10566   005B4E  50F3               	movf	243,w,c
 10567   005B50  2606               	addwf	(___wmul@product+1)^0,f,c
 10568   005B52  C005  F001         	movff	___wmul@product,?___wmul
 10569   005B56  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10570   005B5A  0012               	return		;funcret
 10571   005B5C                     __end_of___wmul:
 10572                           	callstack 0
 10573                           
 10574 ;; *************** function ___lwdiv *****************
 10575 ;; Defined at:
 10576 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  dividend        2    6[COMRAM] unsigned int 
 10579 ;;  divisor         2    8[COMRAM] unsigned int 
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  quotient        2   10[COMRAM] unsigned int 
 10582 ;;  counter         1   12[COMRAM] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  2    6[COMRAM] unsigned int 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10593 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10595 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10596 ;;Total ram usage:        7 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; Hardware stack levels required when called: 1
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_setMotorPWM
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	text63
 10607   005052                     __ptext63:
 10608                           	callstack 0
 10609   005052                     ___lwdiv:
 10610                           	callstack 27
 10611   005052  0E00               	movlw	0
 10612   005054  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10613   005056  0E00               	movlw	0
 10614   005058  6E0B               	movwf	___lwdiv@quotient^0,c
 10615   00505A  5009               	movf	___lwdiv@divisor^0,w,c
 10616   00505C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10617   00505E  B4D8               	btfsc	status,2,c
 10618   005060  EF34  F028         	goto	u3251
 10619   005064  EF36  F028         	goto	u3250
 10620   005068                     u3251:
 10621   005068  EF5E  F028         	goto	l1105
 10622   00506C                     u3250:
 10623   00506C  0E01               	movlw	1
 10624   00506E  6E0D               	movwf	___lwdiv@counter^0,c
 10625   005070  EF3E  F028         	goto	l3819
 10626   005074                     l3817:
 10627   005074  90D8               	bcf	status,0,c
 10628   005076  3609               	rlcf	___lwdiv@divisor^0,f,c
 10629   005078  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10630   00507A  2A0D               	incf	___lwdiv@counter^0,f,c
 10631   00507C                     l3819:
 10632   00507C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10633   00507E  EF43  F028         	goto	u3261
 10634   005082  EF45  F028         	goto	u3260
 10635   005086                     u3261:
 10636   005086  EF3A  F028         	goto	l3817
 10637   00508A                     u3260:
 10638   00508A                     l3821:
 10639   00508A  90D8               	bcf	status,0,c
 10640   00508C  360B               	rlcf	___lwdiv@quotient^0,f,c
 10641   00508E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10642   005090  5009               	movf	___lwdiv@divisor^0,w,c
 10643   005092  5C07               	subwf	___lwdiv@dividend^0,w,c
 10644   005094  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10645   005096  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10646   005098  A0D8               	btfss	status,0,c
 10647   00509A  EF51  F028         	goto	u3271
 10648   00509E  EF53  F028         	goto	u3270
 10649   0050A2                     u3271:
 10650   0050A2  EF58  F028         	goto	l3829
 10651   0050A6                     u3270:
 10652   0050A6  5009               	movf	___lwdiv@divisor^0,w,c
 10653   0050A8  5E07               	subwf	___lwdiv@dividend^0,f,c
 10654   0050AA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10655   0050AC  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10656   0050AE  800B               	bsf	___lwdiv@quotient^0,0,c
 10657   0050B0                     l3829:
 10658   0050B0  90D8               	bcf	status,0,c
 10659   0050B2  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10660   0050B4  3209               	rrcf	___lwdiv@divisor^0,f,c
 10661   0050B6  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10662   0050B8  EF45  F028         	goto	l3821
 10663   0050BC                     l1105:
 10664   0050BC  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10665   0050C0  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10666   0050C4  0012               	return		;funcret
 10667   0050C6                     __end_of___lwdiv:
 10668                           	callstack 0
 10669                           
 10670 ;; *************** function _Interrupts_init *****************
 10671 ;; Defined at:
 10672 ;;		line 12 in file "interrupts.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;		None
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		None
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10690 ;;Total ram usage:        0 bytes
 10691 ;; Hardware stack levels used: 1
 10692 ;; Hardware stack levels required when called: 1
 10693 ;; This function calls:
 10694 ;;		Nothing
 10695 ;; This function is called by:
 10696 ;;		_main
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700                           	psect	text64
 10701   005BE6                     __ptext64:
 10702                           	callstack 0
 10703   005BE6                     _Interrupts_init:
 10704                           	callstack 29
 10705   005BE6  0012               	return		;funcret
 10706   005BE8                     __end_of_Interrupts_init:
 10707                           	callstack 0
 10708                           
 10709 ;; *************** function _Colour_decider *****************
 10710 ;; Defined at:
 10711 ;;		line 125 in file "color.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  vals            2   74[COMRAM] PTR struct RGB
 10714 ;;		 -> vals(8), 
 10715 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 10716 ;;		 -> rel(12), 
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  RGB_col        12    6[BANK0 ] float [3]
 10719 ;;  Hue             4   28[BANK0 ] float 
 10720 ;;  Cmin            4   22[BANK0 ] float 
 10721 ;;  Cmax            4   18[BANK0 ] float 
 10722 ;;  i               2   26[BANK0 ] int 
 10723 ;;  Cmax_i          2    4[BANK0 ] int 
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  2   74[COMRAM] int 
 10726 ;; Registers used:
 10727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10734 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;Total ram usage:       38 bytes
 10738 ;; Hardware stack levels used: 1
 10739 ;; Hardware stack levels required when called: 3
 10740 ;; This function calls:
 10741 ;;		___fladd
 10742 ;;		___fldiv
 10743 ;;		___fleq
 10744 ;;		___flge
 10745 ;;		___flmul
 10746 ;;		___flsub
 10747 ;;		___xxtofl
 10748 ;; This function is called by:
 10749 ;;		_main
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text65
 10754   000E5A                     __ptext65:
 10755                           	callstack 0
 10756   000E5A                     _Colour_decider:
 10757                           	callstack 27
 10758   000E5A                     
 10759                           ;color.c: 126:     float Cmax = 0;
 10760   000E5A  0E00               	movlw	0
 10761   000E5C  0100               	movlb	0	; () banked
 10762   000E5E  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 10763   000E60  0E00               	movlw	0
 10764   000E62  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 10765   000E64  0E00               	movlw	0
 10766   000E66  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 10767   000E68  0E00               	movlw	0
 10768   000E6A  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 10769                           
 10770                           ;color.c: 127:     float Cmin= 100000;
 10771   000E6C  0E00               	movlw	0
 10772   000E6E  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 10773   000E70  0E50               	movlw	80
 10774   000E72  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 10775   000E74  0EC3               	movlw	195
 10776   000E76  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 10777   000E78  0E47               	movlw	71
 10778   000E7A  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 10779                           
 10780                           ;color.c: 128:     int Cmax_i =4;
 10781   000E7C  0E00               	movlw	0
 10782   000E7E  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 10783   000E80  0E04               	movlw	4
 10784   000E82  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 10785   000E84                     
 10786                           ; BSR set to: 0
 10787                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 10788   000E84  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 10789   000E88  0E0B               	movlw	11
 10790   000E8A                     u4971:
 10791   000E8A  6ADE               	clrf	postinc2,c
 10792   000E8C  06E8               	decf	wreg,f,c
 10793   000E8E  E2FD               	bc	u4971
 10794   000E90                     
 10795                           ; BSR set to: 0
 10796   000E90  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 10797   000E94  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 10798   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
 10799   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10800   000EA0  0E00               	movlw	0
 10801   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10802   000EA4  0EFF               	movlw	-1
 10803   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
 10804   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
 10805   000EAA  0E01               	movlw	1
 10806   000EAC  ECA8  F020         	call	___xxtofl
 10807   000EB0  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 10808   000EB4  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 10809   000EB8  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 10810   000EBC  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 10811   000EC0  EE20 F002          	lfsr	2,2
 10812   000EC4  504B               	movf	Colour_decider@vals^0,w,c
 10813   000EC6  26D9               	addwf	fsr2l,f,c
 10814   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
 10815   000ECA  22DA               	addwfc	fsr2h,f,c
 10816   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
 10817   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10818   000ED4  0E00               	movlw	0
 10819   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10820   000ED8  0EFF               	movlw	-1
 10821   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
 10822   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
 10823   000EDE  0E01               	movlw	1
 10824   000EE0  ECA8  F020         	call	___xxtofl
 10825   000EE4  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 10826   000EE8  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 10827   000EEC  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 10828   000EF0  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 10829   000EF4  EE20 F004          	lfsr	2,4
 10830   000EF8  504B               	movf	Colour_decider@vals^0,w,c
 10831   000EFA  26D9               	addwf	fsr2l,f,c
 10832   000EFC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 10833   000EFE  22DA               	addwfc	fsr2h,f,c
 10834   000F00  CFDE F001          	movff	postinc2,___xxtofl@val
 10835   000F04  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10836   000F08  0E00               	movlw	0
 10837   000F0A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10838   000F0C  0EFF               	movlw	-1
 10839   000F0E  6E03               	movwf	(___xxtofl@val+2)^0,c
 10840   000F10  6E04               	movwf	(___xxtofl@val+3)^0,c
 10841   000F12  0E01               	movlw	1
 10842   000F14  ECA8  F020         	call	___xxtofl
 10843   000F18  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 10844   000F1C  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 10845   000F20  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 10846   000F24  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 10847   000F28                     
 10848                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 10849   000F28  0E00               	movlw	0
 10850   000F2A  0100               	movlb	0	; () banked
 10851   000F2C  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 10852   000F2E  0E00               	movlw	0
 10853   000F30  6F7A               	movwf	Colour_decider@i& (0+255),b
 10854   000F32                     l5061:
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 10858   000F32  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 10859   000F36  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 10860   000F3A  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 10861   000F3E  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 10862   000F42  0E66               	movlw	low Colour_decider@RGB_col
 10863   000F44  6E4F               	movwf	??_Colour_decider^0,c
 10864   000F46  0E00               	movlw	high Colour_decider@RGB_col
 10865   000F48  6E50               	movwf	(??_Colour_decider+1)^0,c
 10866   000F4A  90D8               	bcf	status,0,c
 10867   000F4C  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10868   000F4E  6ED9               	movwf	fsr2l,c
 10869   000F50  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10870   000F52  6EDA               	movwf	fsr2h,c
 10871   000F54  90D8               	bcf	status,0,c
 10872   000F56  36D9               	rlcf	fsr2l,f,c
 10873   000F58  36DA               	rlcf	fsr2h,f,c
 10874   000F5A  504F               	movf	??_Colour_decider^0,w,c
 10875   000F5C  26D9               	addwf	fsr2l,f,c
 10876   000F5E  5050               	movf	(??_Colour_decider+1)^0,w,c
 10877   000F60  22DA               	addwfc	fsr2h,f,c
 10878   000F62  CFDE F02E          	movff	postinc2,___flge@ff2
 10879   000F66  CFDE F02F          	movff	postinc2,___flge@ff2+1
 10880   000F6A  CFDE F030          	movff	postinc2,___flge@ff2+2
 10881   000F6E  CFDE F031          	movff	postinc2,___flge@ff2+3
 10882   000F72  EC31  F024         	call	___flge	;wreg free
 10883   000F76  B0D8               	btfsc	status,0,c
 10884   000F78  EFC0  F007         	goto	u4981
 10885   000F7C  EFC2  F007         	goto	u4980
 10886   000F80                     u4981:
 10887   000F80  EFDF  F007         	goto	l5067
 10888   000F84                     u4980:
 10889   000F84                     
 10890                           ;color.c: 137:             Cmax=RGB_col[i];
 10891   000F84  0E66               	movlw	low Colour_decider@RGB_col
 10892   000F86  6E4F               	movwf	??_Colour_decider^0,c
 10893   000F88  0E00               	movlw	high Colour_decider@RGB_col
 10894   000F8A  6E50               	movwf	(??_Colour_decider+1)^0,c
 10895   000F8C  90D8               	bcf	status,0,c
 10896   000F8E  0100               	movlb	0	; () banked
 10897   000F90  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10898   000F92  6ED9               	movwf	fsr2l,c
 10899   000F94  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10900   000F96  6EDA               	movwf	fsr2h,c
 10901   000F98  90D8               	bcf	status,0,c
 10902   000F9A  36D9               	rlcf	fsr2l,f,c
 10903   000F9C  36DA               	rlcf	fsr2h,f,c
 10904   000F9E  504F               	movf	??_Colour_decider^0,w,c
 10905   000FA0  26D9               	addwf	fsr2l,f,c
 10906   000FA2  5050               	movf	(??_Colour_decider+1)^0,w,c
 10907   000FA4  22DA               	addwfc	fsr2h,f,c
 10908   000FA6  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 10909   000FAA  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 10910   000FAE  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 10911   000FB2  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 10912   000FB6                     
 10913                           ; BSR set to: 0
 10914                           ;color.c: 138:             Cmax_i=i;
 10915   000FB6  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 10916   000FBA  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 10917   000FBE                     l5067:
 10918                           
 10919                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 10920   000FBE  0E66               	movlw	low Colour_decider@RGB_col
 10921   000FC0  6E4F               	movwf	??_Colour_decider^0,c
 10922   000FC2  0E00               	movlw	high Colour_decider@RGB_col
 10923   000FC4  6E50               	movwf	(??_Colour_decider+1)^0,c
 10924   000FC6  90D8               	bcf	status,0,c
 10925   000FC8  0100               	movlb	0	; () banked
 10926   000FCA  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10927   000FCC  6ED9               	movwf	fsr2l,c
 10928   000FCE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10929   000FD0  6EDA               	movwf	fsr2h,c
 10930   000FD2  90D8               	bcf	status,0,c
 10931   000FD4  36D9               	rlcf	fsr2l,f,c
 10932   000FD6  36DA               	rlcf	fsr2h,f,c
 10933   000FD8  504F               	movf	??_Colour_decider^0,w,c
 10934   000FDA  26D9               	addwf	fsr2l,f,c
 10935   000FDC  5050               	movf	(??_Colour_decider+1)^0,w,c
 10936   000FDE  22DA               	addwfc	fsr2h,f,c
 10937   000FE0  CFDE F02A          	movff	postinc2,___flge@ff1
 10938   000FE4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 10939   000FE8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 10940   000FEC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 10941   000FF0  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 10942   000FF4  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 10943   000FF8  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 10944   000FFC  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 10945   001000  EC31  F024         	call	___flge	;wreg free
 10946   001004  B0D8               	btfsc	status,0,c
 10947   001006  EF07  F008         	goto	u4991
 10948   00100A  EF09  F008         	goto	u4990
 10949   00100E                     u4991:
 10950   00100E  EF22  F008         	goto	l5071
 10951   001012                     u4990:
 10952   001012  0E66               	movlw	low Colour_decider@RGB_col
 10953   001014  6E4F               	movwf	??_Colour_decider^0,c
 10954   001016  0E00               	movlw	high Colour_decider@RGB_col
 10955   001018  6E50               	movwf	(??_Colour_decider+1)^0,c
 10956   00101A  90D8               	bcf	status,0,c
 10957   00101C  0100               	movlb	0	; () banked
 10958   00101E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10959   001020  6ED9               	movwf	fsr2l,c
 10960   001022  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10961   001024  6EDA               	movwf	fsr2h,c
 10962   001026  90D8               	bcf	status,0,c
 10963   001028  36D9               	rlcf	fsr2l,f,c
 10964   00102A  36DA               	rlcf	fsr2h,f,c
 10965   00102C  504F               	movf	??_Colour_decider^0,w,c
 10966   00102E  26D9               	addwf	fsr2l,f,c
 10967   001030  5050               	movf	(??_Colour_decider+1)^0,w,c
 10968   001032  22DA               	addwfc	fsr2h,f,c
 10969   001034  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 10970   001038  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 10971   00103C  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 10972   001040  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 10973   001044                     l5071:
 10974                           
 10975                           ;color.c: 141:     }
 10976   001044  0100               	movlb	0	; () banked
 10977   001046  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 10978   001048  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 10979   00104A                     
 10980                           ; BSR set to: 0
 10981   00104A  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 10982   00104C  EF31  F008         	goto	u5001
 10983   001050  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 10984   001052  E109               	bnz	u5000
 10985   001054  0E03               	movlw	3
 10986   001056  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 10987   001058  A0D8               	btfss	status,0,c
 10988   00105A  EF31  F008         	goto	u5001
 10989   00105E  EF33  F008         	goto	u5000
 10990   001062                     u5001:
 10991   001062  EF99  F007         	goto	l5061
 10992   001066                     u5000:
 10993   001066                     
 10994                           ; BSR set to: 0
 10995                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 10996   001066  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 10997   00106A  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 10998   00106E  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 10999   001072  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11000   001076  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11001   00107A  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11002   00107E  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11003   001082  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11004   001086  EC1A  F02C         	call	___flsub	;wreg free
 11005   00108A  C02A  F032         	movff	?___flsub,___fleq@ff1
 11006   00108E  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 11007   001092  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 11008   001096  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 11009   00109A  0E00               	movlw	0
 11010   00109C  6E36               	movwf	___fleq@ff2^0,c
 11011   00109E  0E00               	movlw	0
 11012   0010A0  6E37               	movwf	(___fleq@ff2+1)^0,c
 11013   0010A2  0E00               	movlw	0
 11014   0010A4  6E38               	movwf	(___fleq@ff2+2)^0,c
 11015   0010A6  0E00               	movlw	0
 11016   0010A8  6E39               	movwf	(___fleq@ff2+3)^0,c
 11017   0010AA  EC97  F025         	call	___fleq	;wreg free
 11018   0010AE  A0D8               	btfss	status,0,c
 11019   0010B0  EF5C  F008         	goto	u5011
 11020   0010B4  EF5E  F008         	goto	u5010
 11021   0010B8                     u5011:
 11022   0010B8  EF64  F008         	goto	l5081
 11023   0010BC                     u5010:
 11024   0010BC                     l5077:
 11025   0010BC  0E00               	movlw	0
 11026   0010BE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11027   0010C0  0E00               	movlw	0
 11028   0010C2  6E4B               	movwf	?_Colour_decider^0,c
 11029   0010C4  EF9A  F00C         	goto	l74
 11030   0010C8                     l5081:
 11031                           
 11032                           ;color.c: 146:     if (Cmax_i==0){
 11033   0010C8  0100               	movlb	0	; () banked
 11034   0010CA  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 11035   0010CC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11036   0010CE  A4D8               	btfss	status,2,c
 11037   0010D0  EF6C  F008         	goto	u5021
 11038   0010D4  EF6E  F008         	goto	u5020
 11039   0010D8                     u5021:
 11040   0010D8  EFE2  F008         	goto	l5089
 11041   0010DC                     u5020:
 11042   0010DC                     
 11043                           ; BSR set to: 0
 11044                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 11045   0010DC  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11046   0010E0  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11047   0010E4  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11048   0010E8  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11049   0010EC  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11050   0010F0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11051   0010F4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11052   0010F8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11053   0010FC  EC1A  F02C         	call	___flsub	;wreg free
 11054   001100  C02A  F036         	movff	?___flsub,___fldiv@a
 11055   001104  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11056   001108  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11057   00110C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11058   001110  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 11059   001114  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 11060   001118  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 11061   00111C  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 11062   001120  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 11063   001124  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 11064   001128  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 11065   00112C  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 11066   001130  EC1A  F02C         	call	___flsub	;wreg free
 11067   001134  C02A  F032         	movff	?___flsub,___fldiv@b
 11068   001138  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11069   00113C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11070   001140  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11071   001144  EC90  F018         	call	___fldiv	;wreg free
 11072   001148  C032  F011         	movff	?___fldiv,___flmul@b
 11073   00114C  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 11074   001150  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 11075   001154  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 11076   001158  0E00               	movlw	0
 11077   00115A  6E15               	movwf	___flmul@a^0,c
 11078   00115C  0E00               	movlw	0
 11079   00115E  6E16               	movwf	(___flmul@a+1)^0,c
 11080   001160  0E70               	movlw	112
 11081   001162  6E17               	movwf	(___flmul@a+2)^0,c
 11082   001164  0E42               	movlw	66
 11083   001166  6E18               	movwf	(___flmul@a+3)^0,c
 11084   001168  EC7B  F016         	call	___flmul	;wreg free
 11085   00116C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11086   001170  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11087   001174  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11088   001178  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11089   00117C                     
 11090                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 11091   00117C  0100               	movlb	0	; () banked
 11092   00117E  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 11093   001180  EFC6  F008         	goto	u5030
 11094   001184  EFC4  F008         	goto	u5031
 11095   001188                     u5031:
 11096   001188  EFC1  F009         	goto	l5099
 11097   00118C                     u5030:
 11098   00118C                     
 11099                           ; BSR set to: 0
 11100   00118C  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 11101   001190  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 11102   001194  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 11103   001198  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 11104   00119C  0E00               	movlw	0
 11105   00119E  6E05               	movwf	___fladd@a^0,c
 11106   0011A0  0E00               	movlw	0
 11107   0011A2  6E06               	movwf	(___fladd@a+1)^0,c
 11108   0011A4  0EB4               	movlw	180
 11109   0011A6  6E07               	movwf	(___fladd@a+2)^0,c
 11110   0011A8  0E43               	movlw	67
 11111   0011AA  6E08               	movwf	(___fladd@a+3)^0,c
 11112   0011AC  EC1B  F014         	call	___fladd	;wreg free
 11113   0011B0  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 11114   0011B4  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 11115   0011B8  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 11116   0011BC  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 11117   0011C0  EFC1  F009         	goto	l5099
 11118   0011C4                     l5089:
 11119                           
 11120                           ; BSR set to: 0
 11121   0011C4  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 11122   0011C6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11123   0011C8  A4D8               	btfss	status,2,c
 11124   0011CA  EFE9  F008         	goto	u5041
 11125   0011CE  EFEB  F008         	goto	u5040
 11126   0011D2                     u5041:
 11127   0011D2  EF57  F009         	goto	l5095
 11128   0011D6                     u5040:
 11129   0011D6                     
 11130                           ; BSR set to: 0
 11131                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11132   0011D6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11133   0011DA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11134   0011DE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11135   0011E2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11136   0011E6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11137   0011EA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11138   0011EE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11139   0011F2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11140   0011F6  EC1A  F02C         	call	___flsub	;wreg free
 11141   0011FA  C02A  F036         	movff	?___flsub,___fldiv@a
 11142   0011FE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11143   001202  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11144   001206  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11145   00120A  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 11146   00120E  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 11147   001212  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 11148   001216  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 11149   00121A  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 11150   00121E  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 11151   001222  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 11152   001226  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 11153   00122A  EC1A  F02C         	call	___flsub	;wreg free
 11154   00122E  C02A  F032         	movff	?___flsub,___fldiv@b
 11155   001232  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11156   001236  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11157   00123A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11158   00123E  EC90  F018         	call	___fldiv	;wreg free
 11159   001242  C032  F060         	movff	?___fldiv,_Colour_decider$2791
 11160   001246  C033  F061         	movff	?___fldiv+1,_Colour_decider$2791+1
 11161   00124A  C034  F062         	movff	?___fldiv+2,_Colour_decider$2791+2
 11162   00124E  C035  F063         	movff	?___fldiv+3,_Colour_decider$2791+3
 11163   001252                     
 11164                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11165   001252  0E00               	movlw	0
 11166   001254  6E05               	movwf	___fladd@a^0,c
 11167   001256  0E00               	movlw	0
 11168   001258  6E06               	movwf	(___fladd@a+1)^0,c
 11169   00125A  0E00               	movlw	0
 11170   00125C  6E07               	movwf	(___fladd@a+2)^0,c
 11171   00125E  0E40               	movlw	64
 11172   001260  6E08               	movwf	(___fladd@a+3)^0,c
 11173   001262  C060  F001         	movff	_Colour_decider$2791,___fladd@b
 11174   001266  C061  F002         	movff	_Colour_decider$2791+1,___fladd@b+1
 11175   00126A  C062  F003         	movff	_Colour_decider$2791+2,___fladd@b+2
 11176   00126E  C063  F004         	movff	_Colour_decider$2791+3,___fladd@b+3
 11177   001272  EC1B  F014         	call	___fladd	;wreg free
 11178   001276  C001  F011         	movff	?___fladd,___flmul@b
 11179   00127A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11180   00127E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11181   001282  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11182   001286  0E00               	movlw	0
 11183   001288  6E15               	movwf	___flmul@a^0,c
 11184   00128A  0E00               	movlw	0
 11185   00128C  6E16               	movwf	(___flmul@a+1)^0,c
 11186   00128E  0E70               	movlw	112
 11187   001290  6E17               	movwf	(___flmul@a+2)^0,c
 11188   001292  0E42               	movlw	66
 11189   001294  6E18               	movwf	(___flmul@a+3)^0,c
 11190   001296  EC7B  F016         	call	___flmul	;wreg free
 11191   00129A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11192   00129E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11193   0012A2  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11194   0012A6  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11195                           
 11196                           ;color.c: 155:     }
 11197   0012AA  EFC1  F009         	goto	l5099
 11198   0012AE                     l5095:
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11202   0012AE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11203   0012B2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11204   0012B6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11205   0012BA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11206   0012BE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11207   0012C2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11208   0012C6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11209   0012CA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11210   0012CE  EC1A  F02C         	call	___flsub	;wreg free
 11211   0012D2  C02A  F036         	movff	?___flsub,___fldiv@a
 11212   0012D6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11213   0012DA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11214   0012DE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11215   0012E2  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 11216   0012E6  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 11217   0012EA  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 11218   0012EE  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 11219   0012F2  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 11220   0012F6  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 11221   0012FA  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 11222   0012FE  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 11223   001302  EC1A  F02C         	call	___flsub	;wreg free
 11224   001306  C02A  F032         	movff	?___flsub,___fldiv@b
 11225   00130A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11226   00130E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11227   001312  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11228   001316  EC90  F018         	call	___fldiv	;wreg free
 11229   00131A  C032  F060         	movff	?___fldiv,_Colour_decider$2791
 11230   00131E  C033  F061         	movff	?___fldiv+1,_Colour_decider$2791+1
 11231   001322  C034  F062         	movff	?___fldiv+2,_Colour_decider$2791+2
 11232   001326  C035  F063         	movff	?___fldiv+3,_Colour_decider$2791+3
 11233   00132A                     
 11234                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11235   00132A  0E00               	movlw	0
 11236   00132C  6E05               	movwf	___fladd@a^0,c
 11237   00132E  0E00               	movlw	0
 11238   001330  6E06               	movwf	(___fladd@a+1)^0,c
 11239   001332  0E80               	movlw	128
 11240   001334  6E07               	movwf	(___fladd@a+2)^0,c
 11241   001336  0E40               	movlw	64
 11242   001338  6E08               	movwf	(___fladd@a+3)^0,c
 11243   00133A  C060  F001         	movff	_Colour_decider$2791,___fladd@b
 11244   00133E  C061  F002         	movff	_Colour_decider$2791+1,___fladd@b+1
 11245   001342  C062  F003         	movff	_Colour_decider$2791+2,___fladd@b+2
 11246   001346  C063  F004         	movff	_Colour_decider$2791+3,___fladd@b+3
 11247   00134A  EC1B  F014         	call	___fladd	;wreg free
 11248   00134E  C001  F011         	movff	?___fladd,___flmul@b
 11249   001352  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11250   001356  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11251   00135A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11252   00135E  0E00               	movlw	0
 11253   001360  6E15               	movwf	___flmul@a^0,c
 11254   001362  0E00               	movlw	0
 11255   001364  6E16               	movwf	(___flmul@a+1)^0,c
 11256   001366  0E70               	movlw	112
 11257   001368  6E17               	movwf	(___flmul@a+2)^0,c
 11258   00136A  0E42               	movlw	66
 11259   00136C  6E18               	movwf	(___flmul@a+3)^0,c
 11260   00136E  EC7B  F016         	call	___flmul	;wreg free
 11261   001372  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11262   001376  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11263   00137A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11264   00137E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11265   001382                     l5099:
 11266                           
 11267                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 11268   001382  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11269   001386  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11270   00138A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11271   00138E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11272   001392  0E00               	movlw	0
 11273   001394  6E2E               	movwf	___flge@ff2^0,c
 11274   001396  0E00               	movlw	0
 11275   001398  6E2F               	movwf	(___flge@ff2+1)^0,c
 11276   00139A  0EA5               	movlw	165
 11277   00139C  6E30               	movwf	(___flge@ff2+2)^0,c
 11278   00139E  0E43               	movlw	67
 11279   0013A0  6E31               	movwf	(___flge@ff2+3)^0,c
 11280   0013A2  EC31  F024         	call	___flge	;wreg free
 11281   0013A6  A0D8               	btfss	status,0,c
 11282   0013A8  EFD8  F009         	goto	u5051
 11283   0013AC  EFDA  F009         	goto	u5050
 11284   0013B0                     u5051:
 11285   0013B0  EFF9  F009         	goto	l5109
 11286   0013B4                     u5050:
 11287   0013B4  0E00               	movlw	0
 11288   0013B6  6E2A               	movwf	___flge@ff1^0,c
 11289   0013B8  0E00               	movlw	0
 11290   0013BA  6E2B               	movwf	(___flge@ff1+1)^0,c
 11291   0013BC  0EB4               	movlw	180
 11292   0013BE  6E2C               	movwf	(___flge@ff1+2)^0,c
 11293   0013C0  0E43               	movlw	67
 11294   0013C2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11295   0013C4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11296   0013C8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11297   0013CC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11298   0013D0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11299   0013D4  EC31  F024         	call	___flge	;wreg free
 11300   0013D8  A0D8               	btfss	status,0,c
 11301   0013DA  EFF1  F009         	goto	u5061
 11302   0013DE  EFF3  F009         	goto	u5060
 11303   0013E2                     u5061:
 11304   0013E2  EFF9  F009         	goto	l5109
 11305   0013E6                     u5060:
 11306   0013E6                     
 11307                           ;color.c: 164:         return 1;
 11308   0013E6  0E00               	movlw	0
 11309   0013E8  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11310   0013EA  0E01               	movlw	1
 11311   0013EC  6E4B               	movwf	?_Colour_decider^0,c
 11312   0013EE  EF9A  F00C         	goto	l74
 11313   0013F2                     l5109:
 11314   0013F2  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11315   0013F6  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11316   0013FA  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11317   0013FE  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11318   001402  0E00               	movlw	0
 11319   001404  6E2E               	movwf	___flge@ff2^0,c
 11320   001406  0E00               	movlw	0
 11321   001408  6E2F               	movwf	(___flge@ff2+1)^0,c
 11322   00140A  0EA0               	movlw	160
 11323   00140C  6E30               	movwf	(___flge@ff2+2)^0,c
 11324   00140E  0E40               	movlw	64
 11325   001410  6E31               	movwf	(___flge@ff2+3)^0,c
 11326   001412  EC31  F024         	call	___flge	;wreg free
 11327   001416  A0D8               	btfss	status,0,c
 11328   001418  EF10  F00A         	goto	u5071
 11329   00141C  EF12  F00A         	goto	u5070
 11330   001420                     u5071:
 11331   001420  EF31  F00A         	goto	l5119
 11332   001424                     u5070:
 11333   001424  0E00               	movlw	0
 11334   001426  6E2A               	movwf	___flge@ff1^0,c
 11335   001428  0E00               	movlw	0
 11336   00142A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11337   00142C  0E40               	movlw	64
 11338   00142E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11339   001430  0E41               	movlw	65
 11340   001432  6E2D               	movwf	(___flge@ff1+3)^0,c
 11341   001434  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11342   001438  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11343   00143C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11344   001440  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11345   001444  EC31  F024         	call	___flge	;wreg free
 11346   001448  A0D8               	btfss	status,0,c
 11347   00144A  EF29  F00A         	goto	u5081
 11348   00144E  EF2B  F00A         	goto	u5080
 11349   001452                     u5081:
 11350   001452  EF31  F00A         	goto	l5119
 11351   001456                     u5080:
 11352   001456                     
 11353                           ;color.c: 168:         return 2;
 11354   001456  0E00               	movlw	0
 11355   001458  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11356   00145A  0E02               	movlw	2
 11357   00145C  6E4B               	movwf	?_Colour_decider^0,c
 11358   00145E  EF9A  F00C         	goto	l74
 11359   001462                     l5119:
 11360   001462  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11361   001466  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11362   00146A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11363   00146E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11364   001472  0E00               	movlw	0
 11365   001474  6E2E               	movwf	___flge@ff2^0,c
 11366   001476  0E00               	movlw	0
 11367   001478  6E2F               	movwf	(___flge@ff2+1)^0,c
 11368   00147A  0EA0               	movlw	160
 11369   00147C  6E30               	movwf	(___flge@ff2+2)^0,c
 11370   00147E  0E41               	movlw	65
 11371   001480  6E31               	movwf	(___flge@ff2+3)^0,c
 11372   001482  EC31  F024         	call	___flge	;wreg free
 11373   001486  A0D8               	btfss	status,0,c
 11374   001488  EF48  F00A         	goto	u5091
 11375   00148C  EF4A  F00A         	goto	u5090
 11376   001490                     u5091:
 11377   001490  EFCA  F00A         	goto	l5145
 11378   001494                     u5090:
 11379   001494  0E00               	movlw	0
 11380   001496  6E2A               	movwf	___flge@ff1^0,c
 11381   001498  0E00               	movlw	0
 11382   00149A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11383   00149C  0EE8               	movlw	232
 11384   00149E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11385   0014A0  0E41               	movlw	65
 11386   0014A2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11387   0014A4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11388   0014A8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11389   0014AC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11390   0014B0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11391   0014B4  EC31  F024         	call	___flge	;wreg free
 11392   0014B8  A0D8               	btfss	status,0,c
 11393   0014BA  EF61  F00A         	goto	u5101
 11394   0014BE  EF63  F00A         	goto	u5100
 11395   0014C2                     u5101:
 11396   0014C2  EFCA  F00A         	goto	l5145
 11397   0014C6                     u5100:
 11398   0014C6                     
 11399                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11400   0014C6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11401   0014CA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11402   0014CE  CFDE F02A          	movff	postinc2,___flge@ff1
 11403   0014D2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11404   0014D6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11405   0014DA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11406   0014DE  0ECD               	movlw	205
 11407   0014E0  6E2E               	movwf	___flge@ff2^0,c
 11408   0014E2  0ECC               	movlw	204
 11409   0014E4  6E2F               	movwf	(___flge@ff2+1)^0,c
 11410   0014E6  0E4C               	movlw	76
 11411   0014E8  6E30               	movwf	(___flge@ff2+2)^0,c
 11412   0014EA  0E3E               	movlw	62
 11413   0014EC  6E31               	movwf	(___flge@ff2+3)^0,c
 11414   0014EE  EC31  F024         	call	___flge	;wreg free
 11415   0014F2  A0D8               	btfss	status,0,c
 11416   0014F4  EF7E  F00A         	goto	u5111
 11417   0014F8  EF80  F00A         	goto	u5110
 11418   0014FC                     u5111:
 11419   0014FC  EF9F  F00A         	goto	l5133
 11420   001500                     u5110:
 11421   001500  0E1F               	movlw	31
 11422   001502  6E2A               	movwf	___flge@ff1^0,c
 11423   001504  0E85               	movlw	133
 11424   001506  6E2B               	movwf	(___flge@ff1+1)^0,c
 11425   001508  0E6B               	movlw	107
 11426   00150A  6E2C               	movwf	(___flge@ff1+2)^0,c
 11427   00150C  0E3E               	movlw	62
 11428   00150E  6E2D               	movwf	(___flge@ff1+3)^0,c
 11429   001510  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11430   001514  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11431   001518  CFDE F02E          	movff	postinc2,___flge@ff2
 11432   00151C  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11433   001520  CFDE F030          	movff	postinc2,___flge@ff2+2
 11434   001524  CFDE F031          	movff	postinc2,___flge@ff2+3
 11435   001528  EC31  F024         	call	___flge	;wreg free
 11436   00152C  A0D8               	btfss	status,0,c
 11437   00152E  EF9B  F00A         	goto	u5121
 11438   001532  EF9D  F00A         	goto	u5120
 11439   001536                     u5121:
 11440   001536  EF9F  F00A         	goto	l5133
 11441   00153A                     u5120:
 11442   00153A  EF5E  F008         	goto	l5077
 11443   00153E                     l5133:
 11444   00153E  EE20 F008          	lfsr	2,8
 11445   001542  504D               	movf	Colour_decider@rel^0,w,c
 11446   001544  26D9               	addwf	fsr2l,f,c
 11447   001546  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11448   001548  22DA               	addwfc	fsr2h,f,c
 11449   00154A  CFDE F02A          	movff	postinc2,___flge@ff1
 11450   00154E  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11451   001552  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11452   001556  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11453   00155A  0E29               	movlw	41
 11454   00155C  6E2E               	movwf	___flge@ff2^0,c
 11455   00155E  0E5C               	movlw	92
 11456   001560  6E2F               	movwf	(___flge@ff2+1)^0,c
 11457   001562  0E0F               	movlw	15
 11458   001564  6E30               	movwf	(___flge@ff2+2)^0,c
 11459   001566  0E3E               	movlw	62
 11460   001568  6E31               	movwf	(___flge@ff2+3)^0,c
 11461   00156A  EC31  F024         	call	___flge	;wreg free
 11462   00156E  A0D8               	btfss	status,0,c
 11463   001570  EFBC  F00A         	goto	u5131
 11464   001574  EFBE  F00A         	goto	u5130
 11465   001578                     u5131:
 11466   001578  EFC4  F00A         	goto	l5141
 11467   00157C                     u5130:
 11468   00157C                     l5135:
 11469                           
 11470                           ;color.c: 179:             return 4;
 11471   00157C  0E00               	movlw	0
 11472   00157E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11473   001580  0E04               	movlw	4
 11474   001582  6E4B               	movwf	?_Colour_decider^0,c
 11475   001584  EF9A  F00C         	goto	l74
 11476   001588                     l5141:
 11477                           
 11478                           ;color.c: 182:             return 3;
 11479   001588  0E00               	movlw	0
 11480   00158A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11481   00158C  0E03               	movlw	3
 11482   00158E  6E4B               	movwf	?_Colour_decider^0,c
 11483   001590  EF9A  F00C         	goto	l74
 11484   001594                     l5145:
 11485   001594  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11486   001598  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11487   00159C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11488   0015A0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11489   0015A4  0E00               	movlw	0
 11490   0015A6  6E2E               	movwf	___flge@ff2^0,c
 11491   0015A8  0E00               	movlw	0
 11492   0015AA  6E2F               	movwf	(___flge@ff2+1)^0,c
 11493   0015AC  0E34               	movlw	52
 11494   0015AE  6E30               	movwf	(___flge@ff2+2)^0,c
 11495   0015B0  0E42               	movlw	66
 11496   0015B2  6E31               	movwf	(___flge@ff2+3)^0,c
 11497   0015B4  EC31  F024         	call	___flge	;wreg free
 11498   0015B8  A0D8               	btfss	status,0,c
 11499   0015BA  EFE1  F00A         	goto	u5141
 11500   0015BE  EFE3  F00A         	goto	u5140
 11501   0015C2                     u5141:
 11502   0015C2  EF48  F00B         	goto	l5169
 11503   0015C6                     u5140:
 11504   0015C6  0E00               	movlw	0
 11505   0015C8  6E2A               	movwf	___flge@ff1^0,c
 11506   0015CA  0E00               	movlw	0
 11507   0015CC  6E2B               	movwf	(___flge@ff1+1)^0,c
 11508   0015CE  0EA0               	movlw	160
 11509   0015D0  6E2C               	movwf	(___flge@ff1+2)^0,c
 11510   0015D2  0E42               	movlw	66
 11511   0015D4  6E2D               	movwf	(___flge@ff1+3)^0,c
 11512   0015D6  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11513   0015DA  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11514   0015DE  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11515   0015E2  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11516   0015E6  EC31  F024         	call	___flge	;wreg free
 11517   0015EA  A0D8               	btfss	status,0,c
 11518   0015EC  EFFA  F00A         	goto	u5151
 11519   0015F0  EFFC  F00A         	goto	u5150
 11520   0015F4                     u5151:
 11521   0015F4  EF48  F00B         	goto	l5169
 11522   0015F8                     u5150:
 11523   0015F8                     
 11524                           ;color.c: 188:         if(0.15<=rel->B){
 11525   0015F8  EE20 F008          	lfsr	2,8
 11526   0015FC  504D               	movf	Colour_decider@rel^0,w,c
 11527   0015FE  26D9               	addwf	fsr2l,f,c
 11528   001600  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11529   001602  22DA               	addwfc	fsr2h,f,c
 11530   001604  CFDE F02A          	movff	postinc2,___flge@ff1
 11531   001608  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11532   00160C  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11533   001610  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11534   001614  0E9A               	movlw	154
 11535   001616  6E2E               	movwf	___flge@ff2^0,c
 11536   001618  0E99               	movlw	153
 11537   00161A  6E2F               	movwf	(___flge@ff2+1)^0,c
 11538   00161C  0E19               	movlw	25
 11539   00161E  6E30               	movwf	(___flge@ff2+2)^0,c
 11540   001620  0E3E               	movlw	62
 11541   001622  6E31               	movwf	(___flge@ff2+3)^0,c
 11542   001624  EC31  F024         	call	___flge	;wreg free
 11543   001628  A0D8               	btfss	status,0,c
 11544   00162A  EF19  F00B         	goto	u5161
 11545   00162E  EF1B  F00B         	goto	u5160
 11546   001632                     u5161:
 11547   001632  EF1D  F00B         	goto	l5157
 11548   001636                     u5160:
 11549   001636  EFBE  F00A         	goto	l5135
 11550   00163A                     l5157:
 11551   00163A  EE20 F008          	lfsr	2,8
 11552   00163E  504D               	movf	Colour_decider@rel^0,w,c
 11553   001640  26D9               	addwf	fsr2l,f,c
 11554   001642  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11555   001644  22DA               	addwfc	fsr2h,f,c
 11556   001646  CFDE F02A          	movff	postinc2,___flge@ff1
 11557   00164A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11558   00164E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11559   001652  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11560   001656  0E8F               	movlw	143
 11561   001658  6E2E               	movwf	___flge@ff2^0,c
 11562   00165A  0EC2               	movlw	194
 11563   00165C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11564   00165E  0EF5               	movlw	245
 11565   001660  6E30               	movwf	(___flge@ff2+2)^0,c
 11566   001662  0E3D               	movlw	61
 11567   001664  6E31               	movwf	(___flge@ff2+3)^0,c
 11568   001666  EC31  F024         	call	___flge	;wreg free
 11569   00166A  A0D8               	btfss	status,0,c
 11570   00166C  EF3A  F00B         	goto	u5171
 11571   001670  EF3C  F00B         	goto	u5170
 11572   001674                     u5171:
 11573   001674  EF42  F00B         	goto	l5165
 11574   001678                     u5170:
 11575   001678                     l5159:
 11576                           
 11577                           ;color.c: 192:             return 6;
 11578   001678  0E00               	movlw	0
 11579   00167A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11580   00167C  0E06               	movlw	6
 11581   00167E  6E4B               	movwf	?_Colour_decider^0,c
 11582   001680  EF9A  F00C         	goto	l74
 11583   001684                     l5165:
 11584                           
 11585                           ;color.c: 195:             return 5;
 11586   001684  0E00               	movlw	0
 11587   001686  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11588   001688  0E05               	movlw	5
 11589   00168A  6E4B               	movwf	?_Colour_decider^0,c
 11590   00168C  EF9A  F00C         	goto	l74
 11591   001690                     l5169:
 11592   001690  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11593   001694  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11594   001698  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11595   00169C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11596   0016A0  0E00               	movlw	0
 11597   0016A2  6E2E               	movwf	___flge@ff2^0,c
 11598   0016A4  0E00               	movlw	0
 11599   0016A6  6E2F               	movwf	(___flge@ff2+1)^0,c
 11600   0016A8  0EA2               	movlw	162
 11601   0016AA  6E30               	movwf	(___flge@ff2+2)^0,c
 11602   0016AC  0E42               	movlw	66
 11603   0016AE  6E31               	movwf	(___flge@ff2+3)^0,c
 11604   0016B0  EC31  F024         	call	___flge	;wreg free
 11605   0016B4  A0D8               	btfss	status,0,c
 11606   0016B6  EF5F  F00B         	goto	u5181
 11607   0016BA  EF61  F00B         	goto	u5180
 11608   0016BE                     u5181:
 11609   0016BE  EF9B  F00B         	goto	l5185
 11610   0016C2                     u5180:
 11611   0016C2  0E00               	movlw	0
 11612   0016C4  6E2A               	movwf	___flge@ff1^0,c
 11613   0016C6  0E00               	movlw	0
 11614   0016C8  6E2B               	movwf	(___flge@ff1+1)^0,c
 11615   0016CA  0EE6               	movlw	230
 11616   0016CC  6E2C               	movwf	(___flge@ff1+2)^0,c
 11617   0016CE  0E42               	movlw	66
 11618   0016D0  6E2D               	movwf	(___flge@ff1+3)^0,c
 11619   0016D2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11620   0016D6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11621   0016DA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11622   0016DE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11623   0016E2  EC31  F024         	call	___flge	;wreg free
 11624   0016E6  A0D8               	btfss	status,0,c
 11625   0016E8  EF78  F00B         	goto	u5191
 11626   0016EC  EF7A  F00B         	goto	u5190
 11627   0016F0                     u5191:
 11628   0016F0  EF9B  F00B         	goto	l5185
 11629   0016F4                     u5190:
 11630   0016F4                     
 11631                           ;color.c: 201:         if(0.15<=rel->B){
 11632   0016F4  EE20 F008          	lfsr	2,8
 11633   0016F8  504D               	movf	Colour_decider@rel^0,w,c
 11634   0016FA  26D9               	addwf	fsr2l,f,c
 11635   0016FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11636   0016FE  22DA               	addwfc	fsr2h,f,c
 11637   001700  CFDE F02A          	movff	postinc2,___flge@ff1
 11638   001704  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11639   001708  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11640   00170C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11641   001710  0E9A               	movlw	154
 11642   001712  6E2E               	movwf	___flge@ff2^0,c
 11643   001714  0E99               	movlw	153
 11644   001716  6E2F               	movwf	(___flge@ff2+1)^0,c
 11645   001718  0E19               	movlw	25
 11646   00171A  6E30               	movwf	(___flge@ff2+2)^0,c
 11647   00171C  0E3E               	movlw	62
 11648   00171E  6E31               	movwf	(___flge@ff2+3)^0,c
 11649   001720  EC31  F024         	call	___flge	;wreg free
 11650   001724  A0D8               	btfss	status,0,c
 11651   001726  EF97  F00B         	goto	u5201
 11652   00172A  EF99  F00B         	goto	u5200
 11653   00172E                     u5201:
 11654   00172E  EF3C  F00B         	goto	l5159
 11655   001732                     u5200:
 11656   001732  EFBE  F00A         	goto	l5135
 11657   001736                     l5185:
 11658   001736  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11659   00173A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11660   00173E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11661   001742  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11662   001746  0E00               	movlw	0
 11663   001748  6E2E               	movwf	___flge@ff2^0,c
 11664   00174A  0E00               	movlw	0
 11665   00174C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11666   00174E  0EF0               	movlw	240
 11667   001750  6E30               	movwf	(___flge@ff2+2)^0,c
 11668   001752  0E41               	movlw	65
 11669   001754  6E31               	movwf	(___flge@ff2+3)^0,c
 11670   001756  EC31  F024         	call	___flge	;wreg free
 11671   00175A  A0D8               	btfss	status,0,c
 11672   00175C  EFB2  F00B         	goto	u5211
 11673   001760  EFB4  F00B         	goto	u5210
 11674   001764                     u5211:
 11675   001764  EFCD  F00B         	goto	l5189
 11676   001768                     u5210:
 11677   001768  0E00               	movlw	0
 11678   00176A  6E2A               	movwf	___flge@ff1^0,c
 11679   00176C  0E00               	movlw	0
 11680   00176E  6E2B               	movwf	(___flge@ff1+1)^0,c
 11681   001770  0E68               	movlw	104
 11682   001772  6E2C               	movwf	(___flge@ff1+2)^0,c
 11683   001774  0E42               	movlw	66
 11684   001776  6E2D               	movwf	(___flge@ff1+3)^0,c
 11685   001778  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11686   00177C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11687   001780  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11688   001784  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11689   001788  EC31  F024         	call	___flge	;wreg free
 11690   00178C  B0D8               	btfsc	status,0,c
 11691   00178E  EFCB  F00B         	goto	u5221
 11692   001792  EFCD  F00B         	goto	u5220
 11693   001796                     u5221:
 11694   001796  EFBE  F00A         	goto	l5135
 11695   00179A                     u5220:
 11696   00179A                     l5189:
 11697   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11698   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11699   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11700   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11701   0017AA  0E00               	movlw	0
 11702   0017AC  6E2E               	movwf	___flge@ff2^0,c
 11703   0017AE  0E00               	movlw	0
 11704   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
 11705   0017B2  0EF0               	movlw	240
 11706   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
 11707   0017B6  0E42               	movlw	66
 11708   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
 11709   0017BA  EC31  F024         	call	___flge	;wreg free
 11710   0017BE  A0D8               	btfss	status,0,c
 11711   0017C0  EFE4  F00B         	goto	u5231
 11712   0017C4  EFE6  F00B         	goto	u5230
 11713   0017C8                     u5231:
 11714   0017C8  EF01  F00C         	goto	l5199
 11715   0017CC                     u5230:
 11716   0017CC  0E00               	movlw	0
 11717   0017CE  6E2A               	movwf	___flge@ff1^0,c
 11718   0017D0  0E00               	movlw	0
 11719   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
 11720   0017D4  0E5C               	movlw	92
 11721   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
 11722   0017D8  0E43               	movlw	67
 11723   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
 11724   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11725   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11726   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11727   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11728   0017EC  EC31  F024         	call	___flge	;wreg free
 11729   0017F0  A0D8               	btfss	status,0,c
 11730   0017F2  EFFD  F00B         	goto	u5241
 11731   0017F6  EFFF  F00B         	goto	u5240
 11732   0017FA                     u5241:
 11733   0017FA  EF01  F00C         	goto	l5199
 11734   0017FE                     u5240:
 11735   0017FE  EFBE  F00A         	goto	l5135
 11736   001802                     l5199:
 11737   001802  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11738   001806  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11739   00180A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11740   00180E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11741   001812  0E00               	movlw	0
 11742   001814  6E2E               	movwf	___flge@ff2^0,c
 11743   001816  0E00               	movlw	0
 11744   001818  6E2F               	movwf	(___flge@ff2+1)^0,c
 11745   00181A  0E60               	movlw	96
 11746   00181C  6E30               	movwf	(___flge@ff2+2)^0,c
 11747   00181E  0E41               	movlw	65
 11748   001820  6E31               	movwf	(___flge@ff2+3)^0,c
 11749   001822  EC31  F024         	call	___flge	;wreg free
 11750   001826  A0D8               	btfss	status,0,c
 11751   001828  EF18  F00C         	goto	u5251
 11752   00182C  EF1A  F00C         	goto	u5250
 11753   001830                     u5251:
 11754   001830  EF96  F00C         	goto	l5225
 11755   001834                     u5250:
 11756   001834  0E00               	movlw	0
 11757   001836  6E2A               	movwf	___flge@ff1^0,c
 11758   001838  0E00               	movlw	0
 11759   00183A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11760   00183C  0E98               	movlw	152
 11761   00183E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11762   001840  0E41               	movlw	65
 11763   001842  6E2D               	movwf	(___flge@ff1+3)^0,c
 11764   001844  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11765   001848  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11766   00184C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11767   001850  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11768   001854  EC31  F024         	call	___flge	;wreg free
 11769   001858  A0D8               	btfss	status,0,c
 11770   00185A  EF31  F00C         	goto	u5261
 11771   00185E  EF33  F00C         	goto	u5260
 11772   001862                     u5261:
 11773   001862  EF96  F00C         	goto	l5225
 11774   001866                     u5260:
 11775   001866                     
 11776                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11777   001866  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11778   00186A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11779   00186E  CFDE F02A          	movff	postinc2,___flge@ff1
 11780   001872  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11781   001876  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11782   00187A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11783   00187E  0ECD               	movlw	205
 11784   001880  6E2E               	movwf	___flge@ff2^0,c
 11785   001882  0ECC               	movlw	204
 11786   001884  6E2F               	movwf	(___flge@ff2+1)^0,c
 11787   001886  0E4C               	movlw	76
 11788   001888  6E30               	movwf	(___flge@ff2+2)^0,c
 11789   00188A  0E3E               	movlw	62
 11790   00188C  6E31               	movwf	(___flge@ff2+3)^0,c
 11791   00188E  EC31  F024         	call	___flge	;wreg free
 11792   001892  A0D8               	btfss	status,0,c
 11793   001894  EF4E  F00C         	goto	u5271
 11794   001898  EF50  F00C         	goto	u5270
 11795   00189C                     u5271:
 11796   00189C  EF6F  F00C         	goto	l5213
 11797   0018A0                     u5270:
 11798   0018A0  0E1F               	movlw	31
 11799   0018A2  6E2A               	movwf	___flge@ff1^0,c
 11800   0018A4  0E85               	movlw	133
 11801   0018A6  6E2B               	movwf	(___flge@ff1+1)^0,c
 11802   0018A8  0E6B               	movlw	107
 11803   0018AA  6E2C               	movwf	(___flge@ff1+2)^0,c
 11804   0018AC  0E3E               	movlw	62
 11805   0018AE  6E2D               	movwf	(___flge@ff1+3)^0,c
 11806   0018B0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11807   0018B4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11808   0018B8  CFDE F02E          	movff	postinc2,___flge@ff2
 11809   0018BC  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11810   0018C0  CFDE F030          	movff	postinc2,___flge@ff2+2
 11811   0018C4  CFDE F031          	movff	postinc2,___flge@ff2+3
 11812   0018C8  EC31  F024         	call	___flge	;wreg free
 11813   0018CC  A0D8               	btfss	status,0,c
 11814   0018CE  EF6B  F00C         	goto	u5281
 11815   0018D2  EF6D  F00C         	goto	u5280
 11816   0018D6                     u5281:
 11817   0018D6  EF6F  F00C         	goto	l5213
 11818   0018DA                     u5280:
 11819   0018DA  EF5E  F008         	goto	l5077
 11820   0018DE                     l5213:
 11821   0018DE  EE20 F008          	lfsr	2,8
 11822   0018E2  504D               	movf	Colour_decider@rel^0,w,c
 11823   0018E4  26D9               	addwf	fsr2l,f,c
 11824   0018E6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11825   0018E8  22DA               	addwfc	fsr2h,f,c
 11826   0018EA  CFDE F02A          	movff	postinc2,___flge@ff1
 11827   0018EE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11828   0018F2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11829   0018F6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11830   0018FA  0E9A               	movlw	154
 11831   0018FC  6E2E               	movwf	___flge@ff2^0,c
 11832   0018FE  0E99               	movlw	153
 11833   001900  6E2F               	movwf	(___flge@ff2+1)^0,c
 11834   001902  0E19               	movlw	25
 11835   001904  6E30               	movwf	(___flge@ff2+2)^0,c
 11836   001906  0E3E               	movlw	62
 11837   001908  6E31               	movwf	(___flge@ff2+3)^0,c
 11838   00190A  EC31  F024         	call	___flge	;wreg free
 11839   00190E  A0D8               	btfss	status,0,c
 11840   001910  EF8C  F00C         	goto	u5291
 11841   001914  EF8E  F00C         	goto	u5290
 11842   001918                     u5291:
 11843   001918  EF90  F00C         	goto	l5221
 11844   00191C                     u5290:
 11845   00191C  EFBE  F00A         	goto	l5135
 11846   001920                     l5221:
 11847                           
 11848                           ;color.c: 223:             return 7;
 11849   001920  0E00               	movlw	0
 11850   001922  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11851   001924  0E07               	movlw	7
 11852   001926  6E4B               	movwf	?_Colour_decider^0,c
 11853   001928  EF9A  F00C         	goto	l74
 11854   00192C                     l5225:
 11855                           
 11856                           ;color.c: 227:         return 10;
 11857   00192C  0E00               	movlw	0
 11858   00192E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11859   001930  0E0A               	movlw	10
 11860   001932  6E4B               	movwf	?_Colour_decider^0,c
 11861   001934                     l74:
 11862   001934  0012               	return		;funcret
 11863   001936                     __end_of_Colour_decider:
 11864                           	callstack 0
 11865                           
 11866 ;; *************** function ___xxtofl *****************
 11867 ;; Defined at:
 11868 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 11869 ;; Parameters:    Size  Location     Type
 11870 ;;  sign            1    wreg     unsigned char 
 11871 ;;  val             4    0[COMRAM] long 
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;  sign            1    8[COMRAM] unsigned char 
 11874 ;;  arg             4   10[COMRAM] unsigned long 
 11875 ;;  exp             1    9[COMRAM] unsigned char 
 11876 ;; Return value:  Size  Location     Type
 11877 ;;                  4    0[COMRAM] unsigned char 
 11878 ;; Registers used:
 11879 ;;		wreg, status,2, status,0
 11880 ;; Tracked objects:
 11881 ;;		On entry : 0/0
 11882 ;;		On exit  : 0/0
 11883 ;;		Unchanged: 0/0
 11884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11886 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11888 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11889 ;;Total ram usage:       14 bytes
 11890 ;; Hardware stack levels used: 1
 11891 ;; Hardware stack levels required when called: 1
 11892 ;; This function calls:
 11893 ;;		Nothing
 11894 ;; This function is called by:
 11895 ;;		_colour_rel
 11896 ;;		_Colour_decider
 11897 ;;		_turnRight45
 11898 ;;		_turnLeft45
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text66
 11903   004150                     __ptext66:
 11904                           	callstack 0
 11905   004150                     ___xxtofl:
 11906                           	callstack 28
 11907                           
 11908                           ;incstack = 0
 11909                           ;___xxtofl@sign stored from wreg
 11910   004150  6E09               	movwf	___xxtofl@sign^0,c
 11911   004152  5009               	movf	___xxtofl@sign^0,w,c
 11912   004154  B4D8               	btfsc	status,2,c
 11913   004156  EFAF  F020         	goto	u4861
 11914   00415A  EFB1  F020         	goto	u4860
 11915   00415E                     u4861:
 11916   00415E  EFD3  F020         	goto	l1269
 11917   004162                     u4860:
 11918   004162  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11919   004164  EFB8  F020         	goto	u4870
 11920   004168  EFB6  F020         	goto	u4871
 11921   00416C                     u4871:
 11922   00416C  EFD3  F020         	goto	l1269
 11923   004170                     u4870:
 11924   004170  C001  F005         	movff	___xxtofl@val,??___xxtofl
 11925   004174  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 11926   004178  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 11927   00417C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 11928   004180  1E05               	comf	??___xxtofl^0,f,c
 11929   004182  1E06               	comf	(??___xxtofl+1)^0,f,c
 11930   004184  1E07               	comf	(??___xxtofl+2)^0,f,c
 11931   004186  1E08               	comf	(??___xxtofl+3)^0,f,c
 11932   004188  2A05               	incf	??___xxtofl^0,f,c
 11933   00418A  0E00               	movlw	0
 11934   00418C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11935   00418E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11936   004190  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11937   004192  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 11938   004196  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11939   00419A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11940   00419E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11941   0041A2  EFDB  F020         	goto	l4947
 11942   0041A6                     l1269:
 11943   0041A6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 11944   0041AA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11945   0041AE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11946   0041B2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11947   0041B6                     l4947:
 11948   0041B6  5001               	movf	___xxtofl@val^0,w,c
 11949   0041B8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11950   0041BA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11951   0041BC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11952   0041BE  A4D8               	btfss	status,2,c
 11953   0041C0  EFE4  F020         	goto	u4881
 11954   0041C4  EFE6  F020         	goto	u4880
 11955   0041C8                     u4881:
 11956   0041C8  EFF0  F020         	goto	l4953
 11957   0041CC                     u4880:
 11958   0041CC  0E00               	movlw	0
 11959   0041CE  6E01               	movwf	?___xxtofl^0,c
 11960   0041D0  0E00               	movlw	0
 11961   0041D2  6E02               	movwf	(?___xxtofl+1)^0,c
 11962   0041D4  0E00               	movlw	0
 11963   0041D6  6E03               	movwf	(?___xxtofl+2)^0,c
 11964   0041D8  0E00               	movlw	0
 11965   0041DA  6E04               	movwf	(?___xxtofl+3)^0,c
 11966   0041DC  EF81  F021         	goto	l1272
 11967   0041E0                     l4953:
 11968   0041E0  0E96               	movlw	150
 11969   0041E2  6E0A               	movwf	___xxtofl@exp^0,c
 11970   0041E4  EFFA  F020         	goto	l4957
 11971   0041E8                     l4955:
 11972   0041E8  2A0A               	incf	___xxtofl@exp^0,f,c
 11973   0041EA  90D8               	bcf	status,0,c
 11974   0041EC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11975   0041EE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11976   0041F0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11977   0041F2  320B               	rrcf	___xxtofl@arg^0,f,c
 11978   0041F4                     l4957:
 11979   0041F4  0E00               	movlw	0
 11980   0041F6  140B               	andwf	___xxtofl@arg^0,w,c
 11981   0041F8  6E05               	movwf	??___xxtofl^0,c
 11982   0041FA  0E00               	movlw	0
 11983   0041FC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11984   0041FE  6E06               	movwf	(??___xxtofl+1)^0,c
 11985   004200  0E00               	movlw	0
 11986   004202  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11987   004204  6E07               	movwf	(??___xxtofl+2)^0,c
 11988   004206  0EFE               	movlw	254
 11989   004208  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11990   00420A  6E08               	movwf	(??___xxtofl+3)^0,c
 11991   00420C  5005               	movf	??___xxtofl^0,w,c
 11992   00420E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11993   004210  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11994   004212  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11995   004214  A4D8               	btfss	status,2,c
 11996   004216  EF0F  F021         	goto	u4891
 11997   00421A  EF11  F021         	goto	u4890
 11998   00421E                     u4891:
 11999   00421E  EFF4  F020         	goto	l4955
 12000   004222                     u4890:
 12001   004222  EF1F  F021         	goto	l1276
 12002   004226                     l4959:
 12003   004226  2A0A               	incf	___xxtofl@exp^0,f,c
 12004   004228  0E01               	movlw	1
 12005   00422A  260B               	addwf	___xxtofl@arg^0,f,c
 12006   00422C  0E00               	movlw	0
 12007   00422E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12008   004230  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12009   004232  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12010   004234  90D8               	bcf	status,0,c
 12011   004236  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12012   004238  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12013   00423A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12014   00423C  320B               	rrcf	___xxtofl@arg^0,f,c
 12015   00423E                     l1276:
 12016   00423E  0E00               	movlw	0
 12017   004240  140B               	andwf	___xxtofl@arg^0,w,c
 12018   004242  6E05               	movwf	??___xxtofl^0,c
 12019   004244  0E00               	movlw	0
 12020   004246  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12021   004248  6E06               	movwf	(??___xxtofl+1)^0,c
 12022   00424A  0E00               	movlw	0
 12023   00424C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12024   00424E  6E07               	movwf	(??___xxtofl+2)^0,c
 12025   004250  0EFF               	movlw	255
 12026   004252  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12027   004254  6E08               	movwf	(??___xxtofl+3)^0,c
 12028   004256  5005               	movf	??___xxtofl^0,w,c
 12029   004258  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12030   00425A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12031   00425C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12032   00425E  A4D8               	btfss	status,2,c
 12033   004260  EF34  F021         	goto	u4901
 12034   004264  EF36  F021         	goto	u4900
 12035   004268                     u4901:
 12036   004268  EF13  F021         	goto	l4959
 12037   00426C                     u4900:
 12038   00426C  EF3E  F021         	goto	l4967
 12039   004270                     l4965:
 12040   004270  060A               	decf	___xxtofl@exp^0,f,c
 12041   004272  90D8               	bcf	status,0,c
 12042   004274  360B               	rlcf	___xxtofl@arg^0,f,c
 12043   004276  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12044   004278  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12045   00427A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12046   00427C                     l4967:
 12047   00427C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12048   00427E  EF43  F021         	goto	u4911
 12049   004282  EF45  F021         	goto	u4910
 12050   004286                     u4911:
 12051   004286  EF4D  F021         	goto	l1283
 12052   00428A                     u4910:
 12053   00428A  0E02               	movlw	2
 12054   00428C  600A               	cpfslt	___xxtofl@exp^0,c
 12055   00428E  EF4B  F021         	goto	u4921
 12056   004292  EF4D  F021         	goto	u4920
 12057   004296                     u4921:
 12058   004296  EF38  F021         	goto	l4965
 12059   00429A                     u4920:
 12060   00429A                     l1283:
 12061   00429A  B00A               	btfsc	___xxtofl@exp^0,0,c
 12062   00429C  EF52  F021         	goto	u4931
 12063   0042A0  EF54  F021         	goto	u4930
 12064   0042A4                     u4931:
 12065   0042A4  EF55  F021         	goto	l4973
 12066   0042A8                     u4930:
 12067   0042A8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12068   0042AA                     l4973:
 12069   0042AA  90D8               	bcf	status,0,c
 12070   0042AC  320A               	rrcf	___xxtofl@exp^0,f,c
 12071   0042AE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12072   0042B2  6A06               	clrf	(??___xxtofl+1)^0,c
 12073   0042B4  6A07               	clrf	(??___xxtofl+2)^0,c
 12074   0042B6  6A08               	clrf	(??___xxtofl+3)^0,c
 12075   0042B8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12076   0042BC  6A07               	clrf	(??___xxtofl+2)^0,c
 12077   0042BE  6A06               	clrf	(??___xxtofl+1)^0,c
 12078   0042C0  6A05               	clrf	??___xxtofl^0,c
 12079   0042C2  5005               	movf	??___xxtofl^0,w,c
 12080   0042C4  120B               	iorwf	___xxtofl@arg^0,f,c
 12081   0042C6  5006               	movf	(??___xxtofl+1)^0,w,c
 12082   0042C8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12083   0042CA  5007               	movf	(??___xxtofl+2)^0,w,c
 12084   0042CC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12085   0042CE  5008               	movf	(??___xxtofl+3)^0,w,c
 12086   0042D0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12087   0042D2  5009               	movf	___xxtofl@sign^0,w,c
 12088   0042D4  B4D8               	btfsc	status,2,c
 12089   0042D6  EF6F  F021         	goto	u4941
 12090   0042DA  EF71  F021         	goto	u4940
 12091   0042DE                     u4941:
 12092   0042DE  EF79  F021         	goto	l4983
 12093   0042E2                     u4940:
 12094   0042E2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12095   0042E4  EF78  F021         	goto	u4950
 12096   0042E8  EF76  F021         	goto	u4951
 12097   0042EC                     u4951:
 12098   0042EC  EF79  F021         	goto	l4983
 12099   0042F0                     u4950:
 12100   0042F0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12101   0042F2                     l4983:
 12102   0042F2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12103   0042F6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12104   0042FA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12105   0042FE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12106   004302                     l1272:
 12107   004302  0012               	return		;funcret
 12108   004304                     __end_of___xxtofl:
 12109                           	callstack 0
 12110                           
 12111 ;; *************** function ___flsub *****************
 12112 ;; Defined at:
 12113 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;  b               4   41[COMRAM] unsigned char 
 12116 ;;  a               4   45[COMRAM] unsigned char 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;		None
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  4   41[COMRAM] unsigned char 
 12121 ;; Registers used:
 12122 ;;		wreg, status,2, status,0, cstack
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12128 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12131 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12132 ;;Total ram usage:        8 bytes
 12133 ;; Hardware stack levels used: 1
 12134 ;; Hardware stack levels required when called: 2
 12135 ;; This function calls:
 12136 ;;		___fladd
 12137 ;; This function is called by:
 12138 ;;		_Colour_decider
 12139 ;;		_efgtoa
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text67
 12144   005834                     __ptext67:
 12145                           	callstack 0
 12146   005834                     ___flsub:
 12147                           	callstack 24
 12148   005834  0E00               	movlw	0
 12149   005836  1A2E               	xorwf	___flsub@a^0,f,c
 12150   005838  0E00               	movlw	0
 12151   00583A  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 12152   00583C  0E00               	movlw	0
 12153   00583E  1A30               	xorwf	(___flsub@a+2)^0,f,c
 12154   005840  0E80               	movlw	128
 12155   005842  1A31               	xorwf	(___flsub@a+3)^0,f,c
 12156   005844  C02A  F001         	movff	___flsub@b,___fladd@b
 12157   005848  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 12158   00584C  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 12159   005850  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 12160   005854  C02E  F005         	movff	___flsub@a,___fladd@a
 12161   005858  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 12162   00585C  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 12163   005860  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 12164   005864  EC1B  F014         	call	___fladd	;wreg free
 12165   005868  C001  F02A         	movff	?___fladd,?___flsub
 12166   00586C  C002  F02B         	movff	?___fladd+1,?___flsub+1
 12167   005870  C003  F02C         	movff	?___fladd+2,?___flsub+2
 12168   005874  C004  F02D         	movff	?___fladd+3,?___flsub+3
 12169   005878  0012               	return		;funcret
 12170   00587A                     __end_of___flsub:
 12171                           	callstack 0
 12172                           
 12173 ;; *************** function ___fladd *****************
 12174 ;; Defined at:
 12175 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  b               4    0[COMRAM] unsigned char 
 12178 ;;  a               4    4[COMRAM] unsigned char 
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;  grs             1   15[COMRAM] unsigned char 
 12181 ;;  bexp            1   14[COMRAM] unsigned char 
 12182 ;;  aexp            1   13[COMRAM] unsigned char 
 12183 ;;  signs           1   12[COMRAM] unsigned char 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  4    0[COMRAM] unsigned char 
 12186 ;; Registers used:
 12187 ;;		wreg, status,2, status,0
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12193 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12194 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12196 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;Total ram usage:       16 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 1
 12200 ;; This function calls:
 12201 ;;		Nothing
 12202 ;; This function is called by:
 12203 ;;		_colour_rel
 12204 ;;		_Colour_decider
 12205 ;;		___flsub
 12206 ;;		_efgtoa
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text68
 12211   002836                     __ptext68:
 12212                           	callstack 0
 12213   002836                     ___fladd:
 12214                           	callstack 24
 12215   002836  5004               	movf	(___fladd@b+3)^0,w,c
 12216   002838  0B80               	andlw	128
 12217   00283A  6E0D               	movwf	___fladd@signs^0,c
 12218   00283C  5004               	movf	(___fladd@b+3)^0,w,c
 12219   00283E  2404               	addwf	(___fladd@b+3)^0,w,c
 12220   002840  6E0F               	movwf	___fladd@bexp^0,c
 12221   002842  AE03               	btfss	(___fladd@b+2)^0,7,c
 12222   002844  EF26  F014         	goto	u2861
 12223   002848  EF28  F014         	goto	u2860
 12224   00284C                     u2861:
 12225   00284C  EF29  F014         	goto	l3615
 12226   002850                     u2860:
 12227   002850  800F               	bsf	___fladd@bexp^0,0,c
 12228   002852                     l3615:
 12229   002852  500F               	movf	___fladd@bexp^0,w,c
 12230   002854  B4D8               	btfsc	status,2,c
 12231   002856  EF2F  F014         	goto	u2871
 12232   00285A  EF31  F014         	goto	u2870
 12233   00285E                     u2871:
 12234   00285E  EF46  F014         	goto	l3625
 12235   002862                     u2870:
 12236   002862  280F               	incf	___fladd@bexp^0,w,c
 12237   002864  A4D8               	btfss	status,2,c
 12238   002866  EF37  F014         	goto	u2881
 12239   00286A  EF39  F014         	goto	u2880
 12240   00286E                     u2881:
 12241   00286E  EF41  F014         	goto	l3621
 12242   002872                     u2880:
 12243   002872  0E00               	movlw	0
 12244   002874  6E01               	movwf	___fladd@b^0,c
 12245   002876  0E00               	movlw	0
 12246   002878  6E02               	movwf	(___fladd@b+1)^0,c
 12247   00287A  0E00               	movlw	0
 12248   00287C  6E03               	movwf	(___fladd@b+2)^0,c
 12249   00287E  0E00               	movlw	0
 12250   002880  6E04               	movwf	(___fladd@b+3)^0,c
 12251   002882                     l3621:
 12252   002882  8E03               	bsf	(___fladd@b+2)^0,7,c
 12253   002884  0E00               	movlw	0
 12254   002886  6E04               	movwf	(___fladd@b+3)^0,c
 12255   002888  EF4E  F014         	goto	l3627
 12256   00288C                     l3625:
 12257   00288C  0E00               	movlw	0
 12258   00288E  6E01               	movwf	___fladd@b^0,c
 12259   002890  0E00               	movlw	0
 12260   002892  6E02               	movwf	(___fladd@b+1)^0,c
 12261   002894  0E00               	movlw	0
 12262   002896  6E03               	movwf	(___fladd@b+2)^0,c
 12263   002898  0E00               	movlw	0
 12264   00289A  6E04               	movwf	(___fladd@b+3)^0,c
 12265   00289C                     l3627:
 12266   00289C  5008               	movf	(___fladd@a+3)^0,w,c
 12267   00289E  0B80               	andlw	128
 12268   0028A0  6E0E               	movwf	___fladd@aexp^0,c
 12269   0028A2  500D               	movf	___fladd@signs^0,w,c
 12270   0028A4  180E               	xorwf	___fladd@aexp^0,w,c
 12271   0028A6  B4D8               	btfsc	status,2,c
 12272   0028A8  EF58  F014         	goto	u2891
 12273   0028AC  EF5A  F014         	goto	u2890
 12274   0028B0                     u2891:
 12275   0028B0  EF5B  F014         	goto	l3633
 12276   0028B4                     u2890:
 12277   0028B4  8C0D               	bsf	___fladd@signs^0,6,c
 12278   0028B6                     l3633:
 12279   0028B6  5008               	movf	(___fladd@a+3)^0,w,c
 12280   0028B8  2408               	addwf	(___fladd@a+3)^0,w,c
 12281   0028BA  6E0E               	movwf	___fladd@aexp^0,c
 12282   0028BC  AE07               	btfss	(___fladd@a+2)^0,7,c
 12283   0028BE  EF63  F014         	goto	u2901
 12284   0028C2  EF65  F014         	goto	u2900
 12285   0028C6                     u2901:
 12286   0028C6  EF66  F014         	goto	l3639
 12287   0028CA                     u2900:
 12288   0028CA  800E               	bsf	___fladd@aexp^0,0,c
 12289   0028CC                     l3639:
 12290   0028CC  500E               	movf	___fladd@aexp^0,w,c
 12291   0028CE  B4D8               	btfsc	status,2,c
 12292   0028D0  EF6C  F014         	goto	u2911
 12293   0028D4  EF6E  F014         	goto	u2910
 12294   0028D8                     u2911:
 12295   0028D8  EF83  F014         	goto	l3649
 12296   0028DC                     u2910:
 12297   0028DC  280E               	incf	___fladd@aexp^0,w,c
 12298   0028DE  A4D8               	btfss	status,2,c
 12299   0028E0  EF74  F014         	goto	u2921
 12300   0028E4  EF76  F014         	goto	u2920
 12301   0028E8                     u2921:
 12302   0028E8  EF7E  F014         	goto	l3645
 12303   0028EC                     u2920:
 12304   0028EC  0E00               	movlw	0
 12305   0028EE  6E05               	movwf	___fladd@a^0,c
 12306   0028F0  0E00               	movlw	0
 12307   0028F2  6E06               	movwf	(___fladd@a+1)^0,c
 12308   0028F4  0E00               	movlw	0
 12309   0028F6  6E07               	movwf	(___fladd@a+2)^0,c
 12310   0028F8  0E00               	movlw	0
 12311   0028FA  6E08               	movwf	(___fladd@a+3)^0,c
 12312   0028FC                     l3645:
 12313   0028FC  8E07               	bsf	(___fladd@a+2)^0,7,c
 12314   0028FE  0E00               	movlw	0
 12315   002900  6E08               	movwf	(___fladd@a+3)^0,c
 12316   002902  EF8B  F014         	goto	l3651
 12317   002906                     l3649:
 12318   002906  0E00               	movlw	0
 12319   002908  6E05               	movwf	___fladd@a^0,c
 12320   00290A  0E00               	movlw	0
 12321   00290C  6E06               	movwf	(___fladd@a+1)^0,c
 12322   00290E  0E00               	movlw	0
 12323   002910  6E07               	movwf	(___fladd@a+2)^0,c
 12324   002912  0E00               	movlw	0
 12325   002914  6E08               	movwf	(___fladd@a+3)^0,c
 12326   002916                     l3651:
 12327   002916  500F               	movf	___fladd@bexp^0,w,c
 12328   002918  5C0E               	subwf	___fladd@aexp^0,w,c
 12329   00291A  B0D8               	btfsc	status,0,c
 12330   00291C  EF92  F014         	goto	u2931
 12331   002920  EF94  F014         	goto	u2930
 12332   002924                     u2931:
 12333   002924  EFBB  F014         	goto	l3687
 12334   002928                     u2930:
 12335   002928  AC0D               	btfss	___fladd@signs^0,6,c
 12336   00292A  EF99  F014         	goto	u2941
 12337   00292E  EF9B  F014         	goto	u2940
 12338   002932                     u2941:
 12339   002932  EF9D  F014         	goto	l3657
 12340   002936                     u2940:
 12341   002936  0E80               	movlw	128
 12342   002938  1A0D               	xorwf	___fladd@signs^0,f,c
 12343   00293A                     l3657:
 12344   00293A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 12345   00293E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12346   002942  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 12347   002946  C001  F010         	movff	___fladd@b,___fladd@grs
 12348   00294A  C005  F001         	movff	___fladd@a,___fladd@b
 12349   00294E  C010  F005         	movff	___fladd@grs,___fladd@a
 12350   002952  C002  F010         	movff	___fladd@b+1,___fladd@grs
 12351   002956  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 12352   00295A  C010  F006         	movff	___fladd@grs,___fladd@a+1
 12353   00295E  C003  F010         	movff	___fladd@b+2,___fladd@grs
 12354   002962  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 12355   002966  C010  F007         	movff	___fladd@grs,___fladd@a+2
 12356   00296A  C004  F010         	movff	___fladd@b+3,___fladd@grs
 12357   00296E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 12358   002972  C010  F008         	movff	___fladd@grs,___fladd@a+3
 12359   002976                     l3687:
 12360   002976  0E00               	movlw	0
 12361   002978  6E10               	movwf	___fladd@grs^0,c
 12362   00297A  500F               	movf	___fladd@bexp^0,w,c
 12363   00297C  C00E  F009         	movff	___fladd@aexp,??___fladd
 12364   002980  6A0A               	clrf	(??___fladd+1)^0,c
 12365   002982  5E09               	subwf	??___fladd^0,f,c
 12366   002984  0E00               	movlw	0
 12367   002986  5A0A               	subwfb	(??___fladd+1)^0,f,c
 12368   002988  BE0A               	btfsc	(??___fladd+1)^0,7,c
 12369   00298A  EFD0  F014         	goto	u2951
 12370   00298E  500A               	movf	(??___fladd+1)^0,w,c
 12371   002990  E109               	bnz	u2950
 12372   002992  0E1A               	movlw	26
 12373   002994  5C09               	subwf	??___fladd^0,w,c
 12374   002996  A0D8               	btfss	status,0,c
 12375   002998  EFD0  F014         	goto	u2951
 12376   00299C  EFD2  F014         	goto	u2950
 12377   0029A0                     u2951:
 12378   0029A0  EF09  F015         	goto	l1143
 12379   0029A4                     u2950:
 12380   0029A4  5001               	movf	___fladd@b^0,w,c
 12381   0029A6  1002               	iorwf	(___fladd@b+1)^0,w,c
 12382   0029A8  1003               	iorwf	(___fladd@b+2)^0,w,c
 12383   0029AA  1004               	iorwf	(___fladd@b+3)^0,w,c
 12384   0029AC  A4D8               	btfss	status,2,c
 12385   0029AE  EFDB  F014         	goto	u2961
 12386   0029B2  EFDE  F014         	goto	u2960
 12387   0029B6                     u2961:
 12388   0029B6  0E01               	movlw	1
 12389   0029B8  EFDF  F014         	goto	u2970
 12390   0029BC                     u2960:
 12391   0029BC  0E00               	movlw	0
 12392   0029BE                     u2970:
 12393   0029BE  6E10               	movwf	___fladd@grs^0,c
 12394   0029C0  0E00               	movlw	0
 12395   0029C2  6E01               	movwf	___fladd@b^0,c
 12396   0029C4  0E00               	movlw	0
 12397   0029C6  6E02               	movwf	(___fladd@b+1)^0,c
 12398   0029C8  0E00               	movlw	0
 12399   0029CA  6E03               	movwf	(___fladd@b+2)^0,c
 12400   0029CC  0E00               	movlw	0
 12401   0029CE  6E04               	movwf	(___fladd@b+3)^0,c
 12402   0029D0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12403   0029D4  EF12  F015         	goto	l1142
 12404   0029D8                     l1144:
 12405   0029D8  A010               	btfss	___fladd@grs^0,0,c
 12406   0029DA  EFF1  F014         	goto	u2981
 12407   0029DE  EFF3  F014         	goto	u2980
 12408   0029E2                     u2981:
 12409   0029E2  EFF9  F014         	goto	l3699
 12410   0029E6                     u2980:
 12411   0029E6  90D8               	bcf	status,0,c
 12412   0029E8  3010               	rrcf	___fladd@grs^0,w,c
 12413   0029EA  0901               	iorlw	1
 12414   0029EC  6E10               	movwf	___fladd@grs^0,c
 12415   0029EE  EFFB  F014         	goto	l3701
 12416   0029F2                     l3699:
 12417   0029F2  90D8               	bcf	status,0,c
 12418   0029F4  3210               	rrcf	___fladd@grs^0,f,c
 12419   0029F6                     l3701:
 12420   0029F6  A001               	btfss	___fladd@b^0,0,c
 12421   0029F8  EF00  F015         	goto	u2991
 12422   0029FC  EF02  F015         	goto	u2990
 12423   002A00                     u2991:
 12424   002A00  EF03  F015         	goto	l3705
 12425   002A04                     u2990:
 12426   002A04  8E10               	bsf	___fladd@grs^0,7,c
 12427   002A06                     l3705:
 12428   002A06  3404               	rlcf	(___fladd@b+3)^0,w,c
 12429   002A08  3204               	rrcf	(___fladd@b+3)^0,f,c
 12430   002A0A  3203               	rrcf	(___fladd@b+2)^0,f,c
 12431   002A0C  3202               	rrcf	(___fladd@b+1)^0,f,c
 12432   002A0E  3201               	rrcf	___fladd@b^0,f,c
 12433   002A10  2A0F               	incf	___fladd@bexp^0,f,c
 12434   002A12                     l1143:
 12435   002A12  500E               	movf	___fladd@aexp^0,w,c
 12436   002A14  5C0F               	subwf	___fladd@bexp^0,w,c
 12437   002A16  A0D8               	btfss	status,0,c
 12438   002A18  EF10  F015         	goto	u3001
 12439   002A1C  EF12  F015         	goto	u3000
 12440   002A20                     u3001:
 12441   002A20  EFEC  F014         	goto	l1144
 12442   002A24                     u3000:
 12443   002A24                     l1142:
 12444   002A24  BC0D               	btfsc	___fladd@signs^0,6,c
 12445   002A26  EF17  F015         	goto	u3011
 12446   002A2A  EF19  F015         	goto	u3010
 12447   002A2E                     u3011:
 12448   002A2E  EF59  F015         	goto	l3733
 12449   002A32                     u3010:
 12450   002A32  500F               	movf	___fladd@bexp^0,w,c
 12451   002A34  A4D8               	btfss	status,2,c
 12452   002A36  EF1F  F015         	goto	u3021
 12453   002A3A  EF21  F015         	goto	u3020
 12454   002A3E                     u3021:
 12455   002A3E  EF2B  F015         	goto	l3715
 12456   002A42                     u3020:
 12457   002A42  0E00               	movlw	0
 12458   002A44  6E01               	movwf	?___fladd^0,c
 12459   002A46  0E00               	movlw	0
 12460   002A48  6E02               	movwf	(?___fladd+1)^0,c
 12461   002A4A  0E00               	movlw	0
 12462   002A4C  6E03               	movwf	(?___fladd+2)^0,c
 12463   002A4E  0E00               	movlw	0
 12464   002A50  6E04               	movwf	(?___fladd+3)^0,c
 12465   002A52  EF7A  F016         	goto	l1151
 12466   002A56                     l3715:
 12467   002A56  5005               	movf	___fladd@a^0,w,c
 12468   002A58  2601               	addwf	___fladd@b^0,f,c
 12469   002A5A  5006               	movf	(___fladd@a+1)^0,w,c
 12470   002A5C  2202               	addwfc	(___fladd@b+1)^0,f,c
 12471   002A5E  5007               	movf	(___fladd@a+2)^0,w,c
 12472   002A60  2203               	addwfc	(___fladd@b+2)^0,f,c
 12473   002A62  5008               	movf	(___fladd@a+3)^0,w,c
 12474   002A64  2204               	addwfc	(___fladd@b+3)^0,f,c
 12475   002A66  A004               	btfss	(___fladd@b+3)^0,0,c
 12476   002A68  EF38  F015         	goto	u3031
 12477   002A6C  EF3A  F015         	goto	u3030
 12478   002A70                     u3031:
 12479   002A70  EFE6  F015         	goto	l3769
 12480   002A74                     u3030:
 12481   002A74  A010               	btfss	___fladd@grs^0,0,c
 12482   002A76  EF3F  F015         	goto	u3041
 12483   002A7A  EF41  F015         	goto	u3040
 12484   002A7E                     u3041:
 12485   002A7E  EF47  F015         	goto	l3723
 12486   002A82                     u3040:
 12487   002A82  90D8               	bcf	status,0,c
 12488   002A84  3010               	rrcf	___fladd@grs^0,w,c
 12489   002A86  0901               	iorlw	1
 12490   002A88  6E10               	movwf	___fladd@grs^0,c
 12491   002A8A  EF49  F015         	goto	l3725
 12492   002A8E                     l3723:
 12493   002A8E  90D8               	bcf	status,0,c
 12494   002A90  3210               	rrcf	___fladd@grs^0,f,c
 12495   002A92                     l3725:
 12496   002A92  A001               	btfss	___fladd@b^0,0,c
 12497   002A94  EF4E  F015         	goto	u3051
 12498   002A98  EF50  F015         	goto	u3050
 12499   002A9C                     u3051:
 12500   002A9C  EF51  F015         	goto	l3729
 12501   002AA0                     u3050:
 12502   002AA0  8E10               	bsf	___fladd@grs^0,7,c
 12503   002AA2                     l3729:
 12504   002AA2  3404               	rlcf	(___fladd@b+3)^0,w,c
 12505   002AA4  3204               	rrcf	(___fladd@b+3)^0,f,c
 12506   002AA6  3203               	rrcf	(___fladd@b+2)^0,f,c
 12507   002AA8  3202               	rrcf	(___fladd@b+1)^0,f,c
 12508   002AAA  3201               	rrcf	___fladd@b^0,f,c
 12509   002AAC  2A0F               	incf	___fladd@bexp^0,f,c
 12510   002AAE  EFE6  F015         	goto	l3769
 12511   002AB2                     l3733:
 12512   002AB2  5005               	movf	___fladd@a^0,w,c
 12513   002AB4  5C01               	subwf	___fladd@b^0,w,c
 12514   002AB6  5006               	movf	(___fladd@a+1)^0,w,c
 12515   002AB8  5802               	subwfb	(___fladd@b+1)^0,w,c
 12516   002ABA  5007               	movf	(___fladd@a+2)^0,w,c
 12517   002ABC  5803               	subwfb	(___fladd@b+2)^0,w,c
 12518   002ABE  5004               	movf	(___fladd@b+3)^0,w,c
 12519   002AC0  0A80               	xorlw	128
 12520   002AC2  6E09               	movwf	??___fladd^0,c
 12521   002AC4  5008               	movf	(___fladd@a+3)^0,w,c
 12522   002AC6  0A80               	xorlw	128
 12523   002AC8  5809               	subwfb	??___fladd^0,w,c
 12524   002ACA  B0D8               	btfsc	status,0,c
 12525   002ACC  EF6A  F015         	goto	u3061
 12526   002AD0  EF6C  F015         	goto	u3060
 12527   002AD4                     u3061:
 12528   002AD4  EF97  F015         	goto	l3743
 12529   002AD8                     u3060:
 12530   002AD8  5001               	movf	___fladd@b^0,w,c
 12531   002ADA  5C05               	subwf	___fladd@a^0,w,c
 12532   002ADC  6E09               	movwf	??___fladd^0,c
 12533   002ADE  5002               	movf	(___fladd@b+1)^0,w,c
 12534   002AE0  5806               	subwfb	(___fladd@a+1)^0,w,c
 12535   002AE2  6E0A               	movwf	(??___fladd+1)^0,c
 12536   002AE4  5003               	movf	(___fladd@b+2)^0,w,c
 12537   002AE6  5807               	subwfb	(___fladd@a+2)^0,w,c
 12538   002AE8  6E0B               	movwf	(??___fladd+2)^0,c
 12539   002AEA  5004               	movf	(___fladd@b+3)^0,w,c
 12540   002AEC  5808               	subwfb	(___fladd@a+3)^0,w,c
 12541   002AEE  6E0C               	movwf	(??___fladd+3)^0,c
 12542   002AF0  0EFF               	movlw	255
 12543   002AF2  2409               	addwf	??___fladd^0,w,c
 12544   002AF4  6E01               	movwf	___fladd@b^0,c
 12545   002AF6  0EFF               	movlw	255
 12546   002AF8  200A               	addwfc	(??___fladd+1)^0,w,c
 12547   002AFA  6E02               	movwf	(___fladd@b+1)^0,c
 12548   002AFC  0EFF               	movlw	255
 12549   002AFE  200B               	addwfc	(??___fladd+2)^0,w,c
 12550   002B00  6E03               	movwf	(___fladd@b+2)^0,c
 12551   002B02  0EFF               	movlw	255
 12552   002B04  200C               	addwfc	(??___fladd+3)^0,w,c
 12553   002B06  6E04               	movwf	(___fladd@b+3)^0,c
 12554   002B08  0E80               	movlw	128
 12555   002B0A  1A0D               	xorwf	___fladd@signs^0,f,c
 12556   002B0C  6C10               	negf	___fladd@grs^0,c
 12557   002B0E  5010               	movf	___fladd@grs^0,w,c
 12558   002B10  A4D8               	btfss	status,2,c
 12559   002B12  EF8D  F015         	goto	u3071
 12560   002B16  EF8F  F015         	goto	u3070
 12561   002B1A                     u3071:
 12562   002B1A  EF9F  F015         	goto	l1159
 12563   002B1E                     u3070:
 12564   002B1E  0E01               	movlw	1
 12565   002B20  2601               	addwf	___fladd@b^0,f,c
 12566   002B22  0E00               	movlw	0
 12567   002B24  2202               	addwfc	(___fladd@b+1)^0,f,c
 12568   002B26  2203               	addwfc	(___fladd@b+2)^0,f,c
 12569   002B28  2204               	addwfc	(___fladd@b+3)^0,f,c
 12570   002B2A  EF9F  F015         	goto	l1159
 12571   002B2E                     l3743:
 12572   002B2E  5005               	movf	___fladd@a^0,w,c
 12573   002B30  5E01               	subwf	___fladd@b^0,f,c
 12574   002B32  5006               	movf	(___fladd@a+1)^0,w,c
 12575   002B34  5A02               	subwfb	(___fladd@b+1)^0,f,c
 12576   002B36  5007               	movf	(___fladd@a+2)^0,w,c
 12577   002B38  5A03               	subwfb	(___fladd@b+2)^0,f,c
 12578   002B3A  5008               	movf	(___fladd@a+3)^0,w,c
 12579   002B3C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 12580   002B3E                     l1159:
 12581   002B3E  5001               	movf	___fladd@b^0,w,c
 12582   002B40  1002               	iorwf	(___fladd@b+1)^0,w,c
 12583   002B42  1003               	iorwf	(___fladd@b+2)^0,w,c
 12584   002B44  1004               	iorwf	(___fladd@b+3)^0,w,c
 12585   002B46  A4D8               	btfss	status,2,c
 12586   002B48  EFA8  F015         	goto	u3081
 12587   002B4C  EFAA  F015         	goto	u3080
 12588   002B50                     u3081:
 12589   002B50  EFDF  F015         	goto	l3767
 12590   002B54                     u3080:
 12591   002B54  5010               	movf	___fladd@grs^0,w,c
 12592   002B56  A4D8               	btfss	status,2,c
 12593   002B58  EFB0  F015         	goto	u3091
 12594   002B5C  EFB2  F015         	goto	u3090
 12595   002B60                     u3091:
 12596   002B60  EFDF  F015         	goto	l3767
 12597   002B64                     u3090:
 12598   002B64  0E00               	movlw	0
 12599   002B66  6E01               	movwf	?___fladd^0,c
 12600   002B68  0E00               	movlw	0
 12601   002B6A  6E02               	movwf	(?___fladd+1)^0,c
 12602   002B6C  0E00               	movlw	0
 12603   002B6E  6E03               	movwf	(?___fladd+2)^0,c
 12604   002B70  0E00               	movlw	0
 12605   002B72  6E04               	movwf	(?___fladd+3)^0,c
 12606   002B74  EF7A  F016         	goto	l1151
 12607   002B78                     l3751:
 12608   002B78  90D8               	bcf	status,0,c
 12609   002B7A  3601               	rlcf	___fladd@b^0,f,c
 12610   002B7C  3602               	rlcf	(___fladd@b+1)^0,f,c
 12611   002B7E  3603               	rlcf	(___fladd@b+2)^0,f,c
 12612   002B80  3604               	rlcf	(___fladd@b+3)^0,f,c
 12613   002B82  AE10               	btfss	___fladd@grs^0,7,c
 12614   002B84  EFC6  F015         	goto	u3101
 12615   002B88  EFC8  F015         	goto	u3100
 12616   002B8C                     u3101:
 12617   002B8C  EFC9  F015         	goto	l3757
 12618   002B90                     u3100:
 12619   002B90  8001               	bsf	___fladd@b^0,0,c
 12620   002B92                     l3757:
 12621   002B92  A010               	btfss	___fladd@grs^0,0,c
 12622   002B94  EFCE  F015         	goto	u3111
 12623   002B98  EFD0  F015         	goto	u3110
 12624   002B9C                     u3111:
 12625   002B9C  EFD4  F015         	goto	l3761
 12626   002BA0                     u3110:
 12627   002BA0  80D8               	bsf	status,0,c
 12628   002BA2  3610               	rlcf	___fladd@grs^0,f,c
 12629   002BA4  EFD6  F015         	goto	l3763
 12630   002BA8                     l3761:
 12631   002BA8  90D8               	bcf	status,0,c
 12632   002BAA  3610               	rlcf	___fladd@grs^0,f,c
 12633   002BAC                     l3763:
 12634   002BAC  500F               	movf	___fladd@bexp^0,w,c
 12635   002BAE  B4D8               	btfsc	status,2,c
 12636   002BB0  EFDC  F015         	goto	u3121
 12637   002BB4  EFDE  F015         	goto	u3120
 12638   002BB8                     u3121:
 12639   002BB8  EFDF  F015         	goto	l3767
 12640   002BBC                     u3120:
 12641   002BBC  060F               	decf	___fladd@bexp^0,f,c
 12642   002BBE                     l3767:
 12643   002BBE  AE03               	btfss	(___fladd@b+2)^0,7,c
 12644   002BC0  EFE4  F015         	goto	u3131
 12645   002BC4  EFE6  F015         	goto	u3130
 12646   002BC8                     u3131:
 12647   002BC8  EFBC  F015         	goto	l3751
 12648   002BCC                     u3130:
 12649   002BCC                     l3769:
 12650   002BCC  0E00               	movlw	0
 12651   002BCE  6E0E               	movwf	___fladd@aexp^0,c
 12652   002BD0  AE10               	btfss	___fladd@grs^0,7,c
 12653   002BD2  EFED  F015         	goto	u3141
 12654   002BD6  EFEF  F015         	goto	u3140
 12655   002BDA                     u3141:
 12656   002BDA  EF07  F016         	goto	l1168
 12657   002BDE                     u3140:
 12658   002BDE  C010  F009         	movff	___fladd@grs,??___fladd
 12659   002BE2  0E7F               	movlw	127
 12660   002BE4  1609               	andwf	??___fladd^0,f,c
 12661   002BE6  B4D8               	btfsc	status,2,c
 12662   002BE8  EFF8  F015         	goto	u3151
 12663   002BEC  EFFA  F015         	goto	u3150
 12664   002BF0                     u3151:
 12665   002BF0  EFFE  F015         	goto	l1169
 12666   002BF4                     u3150:
 12667   002BF4                     l3775:
 12668   002BF4  0E01               	movlw	1
 12669   002BF6  6E0E               	movwf	___fladd@aexp^0,c
 12670   002BF8  EF07  F016         	goto	l1168
 12671   002BFC                     l1169:
 12672   002BFC  A001               	btfss	___fladd@b^0,0,c
 12673   002BFE  EF03  F016         	goto	u3161
 12674   002C02  EF05  F016         	goto	u3160
 12675   002C06                     u3161:
 12676   002C06  EF07  F016         	goto	l1168
 12677   002C0A                     u3160:
 12678   002C0A  EFFA  F015         	goto	l3775
 12679   002C0E                     l1168:
 12680   002C0E  500E               	movf	___fladd@aexp^0,w,c
 12681   002C10  B4D8               	btfsc	status,2,c
 12682   002C12  EF0D  F016         	goto	u3171
 12683   002C16  EF0F  F016         	goto	u3170
 12684   002C1A                     u3171:
 12685   002C1A  EF3A  F016         	goto	l3787
 12686   002C1E                     u3170:
 12687   002C1E  0E01               	movlw	1
 12688   002C20  2601               	addwf	___fladd@b^0,f,c
 12689   002C22  0E00               	movlw	0
 12690   002C24  2202               	addwfc	(___fladd@b+1)^0,f,c
 12691   002C26  2203               	addwfc	(___fladd@b+2)^0,f,c
 12692   002C28  2204               	addwfc	(___fladd@b+3)^0,f,c
 12693   002C2A  A004               	btfss	(___fladd@b+3)^0,0,c
 12694   002C2C  EF1A  F016         	goto	u3181
 12695   002C30  EF1C  F016         	goto	u3180
 12696   002C34                     u3181:
 12697   002C34  EF3A  F016         	goto	l3787
 12698   002C38                     u3180:
 12699   002C38  C001  F009         	movff	___fladd@b,??___fladd
 12700   002C3C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 12701   002C40  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 12702   002C44  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 12703   002C48  340C               	rlcf	(??___fladd+3)^0,w,c
 12704   002C4A  320C               	rrcf	(??___fladd+3)^0,f,c
 12705   002C4C  320B               	rrcf	(??___fladd+2)^0,f,c
 12706   002C4E  320A               	rrcf	(??___fladd+1)^0,f,c
 12707   002C50  3209               	rrcf	??___fladd^0,f,c
 12708   002C52  C009  F001         	movff	??___fladd,___fladd@b
 12709   002C56  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 12710   002C5A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 12711   002C5E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 12712   002C62  280F               	incf	___fladd@bexp^0,w,c
 12713   002C64  B4D8               	btfsc	status,2,c
 12714   002C66  EF37  F016         	goto	u3191
 12715   002C6A  EF39  F016         	goto	u3190
 12716   002C6E                     u3191:
 12717   002C6E  EF3A  F016         	goto	l3787
 12718   002C72                     u3190:
 12719   002C72  2A0F               	incf	___fladd@bexp^0,f,c
 12720   002C74                     l3787:
 12721   002C74  280F               	incf	___fladd@bexp^0,w,c
 12722   002C76  B4D8               	btfsc	status,2,c
 12723   002C78  EF40  F016         	goto	u3201
 12724   002C7C  EF42  F016         	goto	u3200
 12725   002C80                     u3201:
 12726   002C80  EF4A  F016         	goto	l3791
 12727   002C84                     u3200:
 12728   002C84  500F               	movf	___fladd@bexp^0,w,c
 12729   002C86  A4D8               	btfss	status,2,c
 12730   002C88  EF48  F016         	goto	u3211
 12731   002C8C  EF4A  F016         	goto	u3210
 12732   002C90                     u3211:
 12733   002C90  EF5C  F016         	goto	l3795
 12734   002C94                     u3210:
 12735   002C94                     l3791:
 12736   002C94  0E00               	movlw	0
 12737   002C96  6E01               	movwf	___fladd@b^0,c
 12738   002C98  0E00               	movlw	0
 12739   002C9A  6E02               	movwf	(___fladd@b+1)^0,c
 12740   002C9C  0E00               	movlw	0
 12741   002C9E  6E03               	movwf	(___fladd@b+2)^0,c
 12742   002CA0  0E00               	movlw	0
 12743   002CA2  6E04               	movwf	(___fladd@b+3)^0,c
 12744   002CA4  500F               	movf	___fladd@bexp^0,w,c
 12745   002CA6  A4D8               	btfss	status,2,c
 12746   002CA8  EF58  F016         	goto	u3221
 12747   002CAC  EF5A  F016         	goto	u3220
 12748   002CB0                     u3221:
 12749   002CB0  EF5C  F016         	goto	l3795
 12750   002CB4                     u3220:
 12751   002CB4  0E00               	movlw	0
 12752   002CB6  6E0D               	movwf	___fladd@signs^0,c
 12753   002CB8                     l3795:
 12754   002CB8  A00F               	btfss	___fladd@bexp^0,0,c
 12755   002CBA  EF61  F016         	goto	u3231
 12756   002CBE  EF63  F016         	goto	u3230
 12757   002CC2                     u3231:
 12758   002CC2  EF66  F016         	goto	l3799
 12759   002CC6                     u3230:
 12760   002CC6  8E03               	bsf	(___fladd@b+2)^0,7,c
 12761   002CC8  EF67  F016         	goto	l3801
 12762   002CCC                     l3799:
 12763   002CCC  9E03               	bcf	(___fladd@b+2)^0,7,c
 12764   002CCE                     l3801:
 12765   002CCE  90D8               	bcf	status,0,c
 12766   002CD0  300F               	rrcf	___fladd@bexp^0,w,c
 12767   002CD2  6E04               	movwf	(___fladd@b+3)^0,c
 12768   002CD4  AE0D               	btfss	___fladd@signs^0,7,c
 12769   002CD6  EF6F  F016         	goto	u3241
 12770   002CDA  EF71  F016         	goto	u3240
 12771   002CDE                     u3241:
 12772   002CDE  EF72  F016         	goto	l3807
 12773   002CE2                     u3240:
 12774   002CE2  8E04               	bsf	(___fladd@b+3)^0,7,c
 12775   002CE4                     l3807:
 12776   002CE4  C001  F001         	movff	___fladd@b,?___fladd
 12777   002CE8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 12778   002CEC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 12779   002CF0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 12780   002CF4                     l1151:
 12781   002CF4  0012               	return		;funcret
 12782   002CF6                     __end_of___fladd:
 12783                           	callstack 0
 12784                           
 12785 ;; *************** function ___flmul *****************
 12786 ;; Defined at:
 12787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;  b               4   16[COMRAM] unsigned char 
 12790 ;;  a               4   20[COMRAM] unsigned char 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;  prod            4   35[COMRAM] struct .
 12793 ;;  grs             4   29[COMRAM] unsigned long 
 12794 ;;  temp            2   39[COMRAM] struct .
 12795 ;;  bexp            1   34[COMRAM] unsigned char 
 12796 ;;  aexp            1   33[COMRAM] unsigned char 
 12797 ;;  sign            1   28[COMRAM] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  4   16[COMRAM] unsigned char 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, prodl, prodh
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12808 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12809 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12810 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12811 ;;Total ram usage:       25 bytes
 12812 ;; Hardware stack levels used: 1
 12813 ;; Hardware stack levels required when called: 1
 12814 ;; This function calls:
 12815 ;;		Nothing
 12816 ;; This function is called by:
 12817 ;;		_Colour_decider
 12818 ;;		_turnRight45
 12819 ;;		_turnLeft45
 12820 ;;		_efgtoa
 12821 ;; This function uses a non-reentrant model
 12822 ;;
 12823                           
 12824                           	psect	text69
 12825   002CF6                     __ptext69:
 12826                           	callstack 0
 12827   002CF6                     ___flmul:
 12828                           	callstack 25
 12829   002CF6  5014               	movf	(___flmul@b+3)^0,w,c
 12830   002CF8  0B80               	andlw	128
 12831   002CFA  6E1D               	movwf	___flmul@sign^0,c
 12832   002CFC  5014               	movf	(___flmul@b+3)^0,w,c
 12833   002CFE  2414               	addwf	(___flmul@b+3)^0,w,c
 12834   002D00  6E23               	movwf	___flmul@bexp^0,c
 12835   002D02  AE13               	btfss	(___flmul@b+2)^0,7,c
 12836   002D04  EF86  F016         	goto	u3671
 12837   002D08  EF88  F016         	goto	u3670
 12838   002D0C                     u3671:
 12839   002D0C  EF89  F016         	goto	l4081
 12840   002D10                     u3670:
 12841   002D10  8023               	bsf	___flmul@bexp^0,0,c
 12842   002D12                     l4081:
 12843   002D12  5023               	movf	___flmul@bexp^0,w,c
 12844   002D14  B4D8               	btfsc	status,2,c
 12845   002D16  EF8F  F016         	goto	u3681
 12846   002D1A  EF91  F016         	goto	u3680
 12847   002D1E                     u3681:
 12848   002D1E  EFA4  F016         	goto	l4089
 12849   002D22                     u3680:
 12850   002D22  2823               	incf	___flmul@bexp^0,w,c
 12851   002D24  A4D8               	btfss	status,2,c
 12852   002D26  EF97  F016         	goto	u3691
 12853   002D2A  EF99  F016         	goto	u3690
 12854   002D2E                     u3691:
 12855   002D2E  EFA1  F016         	goto	l4087
 12856   002D32                     u3690:
 12857   002D32  0E00               	movlw	0
 12858   002D34  6E11               	movwf	___flmul@b^0,c
 12859   002D36  0E00               	movlw	0
 12860   002D38  6E12               	movwf	(___flmul@b+1)^0,c
 12861   002D3A  0E00               	movlw	0
 12862   002D3C  6E13               	movwf	(___flmul@b+2)^0,c
 12863   002D3E  0E00               	movlw	0
 12864   002D40  6E14               	movwf	(___flmul@b+3)^0,c
 12865   002D42                     l4087:
 12866   002D42  8E13               	bsf	(___flmul@b+2)^0,7,c
 12867   002D44  EFAC  F016         	goto	l4091
 12868   002D48                     l4089:
 12869   002D48  0E00               	movlw	0
 12870   002D4A  6E11               	movwf	___flmul@b^0,c
 12871   002D4C  0E00               	movlw	0
 12872   002D4E  6E12               	movwf	(___flmul@b+1)^0,c
 12873   002D50  0E00               	movlw	0
 12874   002D52  6E13               	movwf	(___flmul@b+2)^0,c
 12875   002D54  0E00               	movlw	0
 12876   002D56  6E14               	movwf	(___flmul@b+3)^0,c
 12877   002D58                     l4091:
 12878   002D58  5018               	movf	(___flmul@a+3)^0,w,c
 12879   002D5A  0B80               	andlw	128
 12880   002D5C  1A1D               	xorwf	___flmul@sign^0,f,c
 12881   002D5E  5018               	movf	(___flmul@a+3)^0,w,c
 12882   002D60  2418               	addwf	(___flmul@a+3)^0,w,c
 12883   002D62  6E22               	movwf	___flmul@aexp^0,c
 12884   002D64  AE17               	btfss	(___flmul@a+2)^0,7,c
 12885   002D66  EFB7  F016         	goto	u3701
 12886   002D6A  EFB9  F016         	goto	u3700
 12887   002D6E                     u3701:
 12888   002D6E  EFBA  F016         	goto	l4099
 12889   002D72                     u3700:
 12890   002D72  8022               	bsf	___flmul@aexp^0,0,c
 12891   002D74                     l4099:
 12892   002D74  5022               	movf	___flmul@aexp^0,w,c
 12893   002D76  B4D8               	btfsc	status,2,c
 12894   002D78  EFC0  F016         	goto	u3711
 12895   002D7C  EFC2  F016         	goto	u3710
 12896   002D80                     u3711:
 12897   002D80  EFD5  F016         	goto	l4107
 12898   002D84                     u3710:
 12899   002D84  2822               	incf	___flmul@aexp^0,w,c
 12900   002D86  A4D8               	btfss	status,2,c
 12901   002D88  EFC8  F016         	goto	u3721
 12902   002D8C  EFCA  F016         	goto	u3720
 12903   002D90                     u3721:
 12904   002D90  EFD2  F016         	goto	l4105
 12905   002D94                     u3720:
 12906   002D94  0E00               	movlw	0
 12907   002D96  6E15               	movwf	___flmul@a^0,c
 12908   002D98  0E00               	movlw	0
 12909   002D9A  6E16               	movwf	(___flmul@a+1)^0,c
 12910   002D9C  0E00               	movlw	0
 12911   002D9E  6E17               	movwf	(___flmul@a+2)^0,c
 12912   002DA0  0E00               	movlw	0
 12913   002DA2  6E18               	movwf	(___flmul@a+3)^0,c
 12914   002DA4                     l4105:
 12915   002DA4  8E17               	bsf	(___flmul@a+2)^0,7,c
 12916   002DA6  EFDD  F016         	goto	l1228
 12917   002DAA                     l4107:
 12918   002DAA  0E00               	movlw	0
 12919   002DAC  6E15               	movwf	___flmul@a^0,c
 12920   002DAE  0E00               	movlw	0
 12921   002DB0  6E16               	movwf	(___flmul@a+1)^0,c
 12922   002DB2  0E00               	movlw	0
 12923   002DB4  6E17               	movwf	(___flmul@a+2)^0,c
 12924   002DB6  0E00               	movlw	0
 12925   002DB8  6E18               	movwf	(___flmul@a+3)^0,c
 12926   002DBA                     l1228:
 12927   002DBA  5022               	movf	___flmul@aexp^0,w,c
 12928   002DBC  B4D8               	btfsc	status,2,c
 12929   002DBE  EFE3  F016         	goto	u3731
 12930   002DC2  EFE5  F016         	goto	u3730
 12931   002DC6                     u3731:
 12932   002DC6  EFED  F016         	goto	l4111
 12933   002DCA                     u3730:
 12934   002DCA  5023               	movf	___flmul@bexp^0,w,c
 12935   002DCC  A4D8               	btfss	status,2,c
 12936   002DCE  EFEB  F016         	goto	u3741
 12937   002DD2  EFED  F016         	goto	u3740
 12938   002DD6                     u3741:
 12939   002DD6  EFF7  F016         	goto	l4115
 12940   002DDA                     u3740:
 12941   002DDA                     l4111:
 12942   002DDA  0E00               	movlw	0
 12943   002DDC  6E11               	movwf	?___flmul^0,c
 12944   002DDE  0E00               	movlw	0
 12945   002DE0  6E12               	movwf	(?___flmul+1)^0,c
 12946   002DE2  0E00               	movlw	0
 12947   002DE4  6E13               	movwf	(?___flmul+2)^0,c
 12948   002DE6  0E00               	movlw	0
 12949   002DE8  6E14               	movwf	(?___flmul+3)^0,c
 12950   002DEA  EF8F  F018         	goto	l1232
 12951   002DEE                     l4115:
 12952   002DEE  5017               	movf	(___flmul@a+2)^0,w,c
 12953   002DF0  0211               	mulwf	___flmul@b^0,c
 12954   002DF2  CFF3 F028          	movff	prodl,___flmul@temp
 12955   002DF6  CFF4 F029          	movff	prodh,___flmul@temp+1
 12956   002DFA  5028               	movf	___flmul@temp^0,w,c
 12957   002DFC  6E1E               	movwf	___flmul@grs^0,c
 12958   002DFE  6A1F               	clrf	(___flmul@grs+1)^0,c
 12959   002E00  6A20               	clrf	(___flmul@grs+2)^0,c
 12960   002E02  6A21               	clrf	(___flmul@grs+3)^0,c
 12961   002E04  5029               	movf	(___flmul@temp+1)^0,w,c
 12962   002E06  6E24               	movwf	___flmul@prod^0,c
 12963   002E08  6A25               	clrf	(___flmul@prod+1)^0,c
 12964   002E0A  6A26               	clrf	(___flmul@prod+2)^0,c
 12965   002E0C  6A27               	clrf	(___flmul@prod+3)^0,c
 12966   002E0E  5016               	movf	(___flmul@a+1)^0,w,c
 12967   002E10  0212               	mulwf	(___flmul@b+1)^0,c
 12968   002E12  CFF3 F028          	movff	prodl,___flmul@temp
 12969   002E16  CFF4 F029          	movff	prodh,___flmul@temp+1
 12970   002E1A  5028               	movf	___flmul@temp^0,w,c
 12971   002E1C  261E               	addwf	___flmul@grs^0,f,c
 12972   002E1E  0E00               	movlw	0
 12973   002E20  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12974   002E22  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12975   002E24  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12976   002E26  5029               	movf	(___flmul@temp+1)^0,w,c
 12977   002E28  2624               	addwf	___flmul@prod^0,f,c
 12978   002E2A  0E00               	movlw	0
 12979   002E2C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12980   002E2E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12981   002E30  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12982   002E32  5015               	movf	___flmul@a^0,w,c
 12983   002E34  0213               	mulwf	(___flmul@b+2)^0,c
 12984   002E36  CFF3 F028          	movff	prodl,___flmul@temp
 12985   002E3A  CFF4 F029          	movff	prodh,___flmul@temp+1
 12986   002E3E  5028               	movf	___flmul@temp^0,w,c
 12987   002E40  261E               	addwf	___flmul@grs^0,f,c
 12988   002E42  0E00               	movlw	0
 12989   002E44  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12990   002E46  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12991   002E48  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12992   002E4A  5029               	movf	(___flmul@temp+1)^0,w,c
 12993   002E4C  2624               	addwf	___flmul@prod^0,f,c
 12994   002E4E  0E00               	movlw	0
 12995   002E50  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12996   002E52  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12997   002E54  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12998   002E56  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12999   002E5A  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13000   002E5E  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13001   002E62  6A1E               	clrf	___flmul@grs^0,c
 13002   002E64  5015               	movf	___flmul@a^0,w,c
 13003   002E66  0212               	mulwf	(___flmul@b+1)^0,c
 13004   002E68  CFF3 F028          	movff	prodl,___flmul@temp
 13005   002E6C  CFF4 F029          	movff	prodh,___flmul@temp+1
 13006   002E70  5028               	movf	___flmul@temp^0,w,c
 13007   002E72  261E               	addwf	___flmul@grs^0,f,c
 13008   002E74  5029               	movf	(___flmul@temp+1)^0,w,c
 13009   002E76  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13010   002E78  0E00               	movlw	0
 13011   002E7A  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13012   002E7C  0E00               	movlw	0
 13013   002E7E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13014   002E80  5016               	movf	(___flmul@a+1)^0,w,c
 13015   002E82  0211               	mulwf	___flmul@b^0,c
 13016   002E84  CFF3 F028          	movff	prodl,___flmul@temp
 13017   002E88  CFF4 F029          	movff	prodh,___flmul@temp+1
 13018   002E8C  5028               	movf	___flmul@temp^0,w,c
 13019   002E8E  261E               	addwf	___flmul@grs^0,f,c
 13020   002E90  5029               	movf	(___flmul@temp+1)^0,w,c
 13021   002E92  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13022   002E94  0E00               	movlw	0
 13023   002E96  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13024   002E98  0E00               	movlw	0
 13025   002E9A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13026   002E9C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13027   002EA0  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13028   002EA4  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13029   002EA8  6A1E               	clrf	___flmul@grs^0,c
 13030   002EAA  5015               	movf	___flmul@a^0,w,c
 13031   002EAC  0211               	mulwf	___flmul@b^0,c
 13032   002EAE  CFF3 F028          	movff	prodl,___flmul@temp
 13033   002EB2  CFF4 F029          	movff	prodh,___flmul@temp+1
 13034   002EB6  5028               	movf	___flmul@temp^0,w,c
 13035   002EB8  261E               	addwf	___flmul@grs^0,f,c
 13036   002EBA  5029               	movf	(___flmul@temp+1)^0,w,c
 13037   002EBC  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13038   002EBE  0E00               	movlw	0
 13039   002EC0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13040   002EC2  0E00               	movlw	0
 13041   002EC4  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13042   002EC6  5017               	movf	(___flmul@a+2)^0,w,c
 13043   002EC8  0212               	mulwf	(___flmul@b+1)^0,c
 13044   002ECA  CFF3 F028          	movff	prodl,___flmul@temp
 13045   002ECE  CFF4 F029          	movff	prodh,___flmul@temp+1
 13046   002ED2  5028               	movf	___flmul@temp^0,w,c
 13047   002ED4  2624               	addwf	___flmul@prod^0,f,c
 13048   002ED6  5029               	movf	(___flmul@temp+1)^0,w,c
 13049   002ED8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13050   002EDA  0E00               	movlw	0
 13051   002EDC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13052   002EDE  0E00               	movlw	0
 13053   002EE0  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13054   002EE2  5016               	movf	(___flmul@a+1)^0,w,c
 13055   002EE4  0213               	mulwf	(___flmul@b+2)^0,c
 13056   002EE6  CFF3 F028          	movff	prodl,___flmul@temp
 13057   002EEA  CFF4 F029          	movff	prodh,___flmul@temp+1
 13058   002EEE  5028               	movf	___flmul@temp^0,w,c
 13059   002EF0  2624               	addwf	___flmul@prod^0,f,c
 13060   002EF2  5029               	movf	(___flmul@temp+1)^0,w,c
 13061   002EF4  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13062   002EF6  0E00               	movlw	0
 13063   002EF8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13064   002EFA  0E00               	movlw	0
 13065   002EFC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13066   002EFE  5017               	movf	(___flmul@a+2)^0,w,c
 13067   002F00  0213               	mulwf	(___flmul@b+2)^0,c
 13068   002F02  CFF3 F028          	movff	prodl,___flmul@temp
 13069   002F06  CFF4 F029          	movff	prodh,___flmul@temp+1
 13070   002F0A  5028               	movf	___flmul@temp^0,w,c
 13071   002F0C  6E19               	movwf	??___flmul^0,c
 13072   002F0E  5029               	movf	(___flmul@temp+1)^0,w,c
 13073   002F10  6E1A               	movwf	(??___flmul+1)^0,c
 13074   002F12  6A1B               	clrf	(??___flmul+2)^0,c
 13075   002F14  6A1C               	clrf	(??___flmul+3)^0,c
 13076   002F16  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 13077   002F1A  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 13078   002F1E  C019  F01A         	movff	??___flmul,??___flmul+1
 13079   002F22  6A19               	clrf	??___flmul^0,c
 13080   002F24  5019               	movf	??___flmul^0,w,c
 13081   002F26  2624               	addwf	___flmul@prod^0,f,c
 13082   002F28  501A               	movf	(??___flmul+1)^0,w,c
 13083   002F2A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13084   002F2C  501B               	movf	(??___flmul+2)^0,w,c
 13085   002F2E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13086   002F30  501C               	movf	(??___flmul+3)^0,w,c
 13087   002F32  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13088   002F34  C01E  F019         	movff	___flmul@grs,??___flmul
 13089   002F38  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 13090   002F3C  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 13091   002F40  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 13092   002F44  0E19               	movlw	25
 13093   002F46  EFAA  F017         	goto	u3750
 13094   002F4A                     u3755:
 13095   002F4A  90D8               	bcf	status,0,c
 13096   002F4C  321C               	rrcf	(??___flmul+3)^0,f,c
 13097   002F4E  321B               	rrcf	(??___flmul+2)^0,f,c
 13098   002F50  321A               	rrcf	(??___flmul+1)^0,f,c
 13099   002F52  3219               	rrcf	??___flmul^0,f,c
 13100   002F54                     u3750:
 13101   002F54  2EE8               	decfsz	wreg,f,c
 13102   002F56  EFA5  F017         	goto	u3755
 13103   002F5A  5019               	movf	??___flmul^0,w,c
 13104   002F5C  2624               	addwf	___flmul@prod^0,f,c
 13105   002F5E  501A               	movf	(??___flmul+1)^0,w,c
 13106   002F60  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13107   002F62  501B               	movf	(??___flmul+2)^0,w,c
 13108   002F64  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13109   002F66  501C               	movf	(??___flmul+3)^0,w,c
 13110   002F68  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13111   002F6A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13112   002F6E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13113   002F72  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13114   002F76  6A1E               	clrf	___flmul@grs^0,c
 13115   002F78  5022               	movf	___flmul@aexp^0,w,c
 13116   002F7A  C023  F019         	movff	___flmul@bexp,??___flmul
 13117   002F7E  6A1A               	clrf	(??___flmul+1)^0,c
 13118   002F80  2619               	addwf	??___flmul^0,f,c
 13119   002F82  0E00               	movlw	0
 13120   002F84  221A               	addwfc	(??___flmul+1)^0,f,c
 13121   002F86  0E82               	movlw	130
 13122   002F88  2419               	addwf	??___flmul^0,w,c
 13123   002F8A  6E28               	movwf	___flmul@temp^0,c
 13124   002F8C  0EFF               	movlw	255
 13125   002F8E  201A               	addwfc	(??___flmul+1)^0,w,c
 13126   002F90  6E29               	movwf	(___flmul@temp+1)^0,c
 13127   002F92  EFE0  F017         	goto	l4163
 13128   002F96                     l4157:
 13129   002F96  90D8               	bcf	status,0,c
 13130   002F98  3624               	rlcf	___flmul@prod^0,f,c
 13131   002F9A  3625               	rlcf	(___flmul@prod+1)^0,f,c
 13132   002F9C  3626               	rlcf	(___flmul@prod+2)^0,f,c
 13133   002F9E  3627               	rlcf	(___flmul@prod+3)^0,f,c
 13134   002FA0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13135   002FA2  EFD5  F017         	goto	u3761
 13136   002FA6  EFD7  F017         	goto	u3760
 13137   002FAA                     u3761:
 13138   002FAA  EFD8  F017         	goto	l1235
 13139   002FAE                     u3760:
 13140   002FAE  8024               	bsf	___flmul@prod^0,0,c
 13141   002FB0                     l1235:
 13142   002FB0  90D8               	bcf	status,0,c
 13143   002FB2  361E               	rlcf	___flmul@grs^0,f,c
 13144   002FB4  361F               	rlcf	(___flmul@grs+1)^0,f,c
 13145   002FB6  3620               	rlcf	(___flmul@grs+2)^0,f,c
 13146   002FB8  3621               	rlcf	(___flmul@grs+3)^0,f,c
 13147   002FBA  0628               	decf	___flmul@temp^0,f,c
 13148   002FBC  A0D8               	btfss	status,0,c
 13149   002FBE  0629               	decf	(___flmul@temp+1)^0,f,c
 13150   002FC0                     l4163:
 13151   002FC0  AE26               	btfss	(___flmul@prod+2)^0,7,c
 13152   002FC2  EFE5  F017         	goto	u3771
 13153   002FC6  EFE7  F017         	goto	u3770
 13154   002FCA                     u3771:
 13155   002FCA  EFCB  F017         	goto	l4157
 13156   002FCE                     u3770:
 13157   002FCE  0E00               	movlw	0
 13158   002FD0  6E22               	movwf	___flmul@aexp^0,c
 13159   002FD2  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13160   002FD4  EFEE  F017         	goto	u3781
 13161   002FD8  EFF0  F017         	goto	u3780
 13162   002FDC                     u3781:
 13163   002FDC  EF14  F018         	goto	l1237
 13164   002FE0                     u3780:
 13165   002FE0  0EFF               	movlw	255
 13166   002FE2  141E               	andwf	___flmul@grs^0,w,c
 13167   002FE4  6E19               	movwf	??___flmul^0,c
 13168   002FE6  0EFF               	movlw	255
 13169   002FE8  141F               	andwf	(___flmul@grs+1)^0,w,c
 13170   002FEA  6E1A               	movwf	(??___flmul+1)^0,c
 13171   002FEC  0EFF               	movlw	255
 13172   002FEE  1420               	andwf	(___flmul@grs+2)^0,w,c
 13173   002FF0  6E1B               	movwf	(??___flmul+2)^0,c
 13174   002FF2  0E7F               	movlw	127
 13175   002FF4  1421               	andwf	(___flmul@grs+3)^0,w,c
 13176   002FF6  6E1C               	movwf	(??___flmul+3)^0,c
 13177   002FF8  5019               	movf	??___flmul^0,w,c
 13178   002FFA  101A               	iorwf	(??___flmul+1)^0,w,c
 13179   002FFC  101B               	iorwf	(??___flmul+2)^0,w,c
 13180   002FFE  101C               	iorwf	(??___flmul+3)^0,w,c
 13181   003000  B4D8               	btfsc	status,2,c
 13182   003002  EF05  F018         	goto	u3791
 13183   003006  EF07  F018         	goto	u3790
 13184   00300A                     u3791:
 13185   00300A  EF0B  F018         	goto	l1238
 13186   00300E                     u3790:
 13187   00300E                     l4171:
 13188   00300E  0E01               	movlw	1
 13189   003010  6E22               	movwf	___flmul@aexp^0,c
 13190   003012  EF14  F018         	goto	l1237
 13191   003016                     l1238:
 13192   003016  A024               	btfss	___flmul@prod^0,0,c
 13193   003018  EF10  F018         	goto	u3801
 13194   00301C  EF12  F018         	goto	u3800
 13195   003020                     u3801:
 13196   003020  EF14  F018         	goto	l1237
 13197   003024                     u3800:
 13198   003024  EF07  F018         	goto	l4171
 13199   003028                     l1237:
 13200   003028  5022               	movf	___flmul@aexp^0,w,c
 13201   00302A  B4D8               	btfsc	status,2,c
 13202   00302C  EF1A  F018         	goto	u3811
 13203   003030  EF1C  F018         	goto	u3810
 13204   003034                     u3811:
 13205   003034  EF40  F018         	goto	l4183
 13206   003038                     u3810:
 13207   003038  0E01               	movlw	1
 13208   00303A  2624               	addwf	___flmul@prod^0,f,c
 13209   00303C  0E00               	movlw	0
 13210   00303E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13211   003040  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13212   003042  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13213   003044  A027               	btfss	(___flmul@prod+3)^0,0,c
 13214   003046  EF27  F018         	goto	u3821
 13215   00304A  EF29  F018         	goto	u3820
 13216   00304E                     u3821:
 13217   00304E  EF40  F018         	goto	l4183
 13218   003052                     u3820:
 13219   003052  C024  F019         	movff	___flmul@prod,??___flmul
 13220   003056  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 13221   00305A  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 13222   00305E  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 13223   003062  341C               	rlcf	(??___flmul+3)^0,w,c
 13224   003064  321C               	rrcf	(??___flmul+3)^0,f,c
 13225   003066  321B               	rrcf	(??___flmul+2)^0,f,c
 13226   003068  321A               	rrcf	(??___flmul+1)^0,f,c
 13227   00306A  3219               	rrcf	??___flmul^0,f,c
 13228   00306C  C019  F024         	movff	??___flmul,___flmul@prod
 13229   003070  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 13230   003074  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 13231   003078  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 13232   00307C  4A28               	infsnz	___flmul@temp^0,f,c
 13233   00307E  2A29               	incf	(___flmul@temp+1)^0,f,c
 13234   003080                     l4183:
 13235   003080  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13236   003082  EF4B  F018         	goto	u3831
 13237   003086  5029               	movf	(___flmul@temp+1)^0,w,c
 13238   003088  E108               	bnz	u3830
 13239   00308A  2828               	incf	___flmul@temp^0,w,c
 13240   00308C  A0D8               	btfss	status,0,c
 13241   00308E  EF4B  F018         	goto	u3831
 13242   003092  EF4D  F018         	goto	u3830
 13243   003096                     u3831:
 13244   003096  EF57  F018         	goto	l4187
 13245   00309A                     u3830:
 13246   00309A  0E00               	movlw	0
 13247   00309C  6E24               	movwf	___flmul@prod^0,c
 13248   00309E  0E00               	movlw	0
 13249   0030A0  6E25               	movwf	(___flmul@prod+1)^0,c
 13250   0030A2  0E80               	movlw	128
 13251   0030A4  6E26               	movwf	(___flmul@prod+2)^0,c
 13252   0030A6  0E7F               	movlw	127
 13253   0030A8  6E27               	movwf	(___flmul@prod+3)^0,c
 13254   0030AA  EF85  F018         	goto	l4199
 13255   0030AE                     l4187:
 13256   0030AE  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13257   0030B0  EF64  F018         	goto	u3840
 13258   0030B4  5029               	movf	(___flmul@temp+1)^0,w,c
 13259   0030B6  E106               	bnz	u3841
 13260   0030B8  0428               	decf	___flmul@temp^0,w,c
 13261   0030BA  B0D8               	btfsc	status,0,c
 13262   0030BC  EF62  F018         	goto	u3841
 13263   0030C0  EF64  F018         	goto	u3840
 13264   0030C4                     u3841:
 13265   0030C4  EF70  F018         	goto	l1245
 13266   0030C8                     u3840:
 13267   0030C8  0E00               	movlw	0
 13268   0030CA  6E24               	movwf	___flmul@prod^0,c
 13269   0030CC  0E00               	movlw	0
 13270   0030CE  6E25               	movwf	(___flmul@prod+1)^0,c
 13271   0030D0  0E00               	movlw	0
 13272   0030D2  6E26               	movwf	(___flmul@prod+2)^0,c
 13273   0030D4  0E00               	movlw	0
 13274   0030D6  6E27               	movwf	(___flmul@prod+3)^0,c
 13275   0030D8  0E00               	movlw	0
 13276   0030DA  6E1D               	movwf	___flmul@sign^0,c
 13277   0030DC  EF85  F018         	goto	l4199
 13278   0030E0                     l1245:
 13279   0030E0  C028  F023         	movff	___flmul@temp,___flmul@bexp
 13280   0030E4  0EFF               	movlw	255
 13281   0030E6  1624               	andwf	___flmul@prod^0,f,c
 13282   0030E8  0EFF               	movlw	255
 13283   0030EA  1625               	andwf	(___flmul@prod+1)^0,f,c
 13284   0030EC  0E7F               	movlw	127
 13285   0030EE  1626               	andwf	(___flmul@prod+2)^0,f,c
 13286   0030F0  0E00               	movlw	0
 13287   0030F2  1627               	andwf	(___flmul@prod+3)^0,f,c
 13288   0030F4  A023               	btfss	___flmul@bexp^0,0,c
 13289   0030F6  EF7F  F018         	goto	u3851
 13290   0030FA  EF81  F018         	goto	u3850
 13291   0030FE                     u3851:
 13292   0030FE  EF82  F018         	goto	l4197
 13293   003102                     u3850:
 13294   003102  8E26               	bsf	(___flmul@prod+2)^0,7,c
 13295   003104                     l4197:
 13296   003104  90D8               	bcf	status,0,c
 13297   003106  3023               	rrcf	___flmul@bexp^0,w,c
 13298   003108  6E27               	movwf	(___flmul@prod+3)^0,c
 13299   00310A                     l4199:
 13300   00310A  501D               	movf	___flmul@sign^0,w,c
 13301   00310C  1227               	iorwf	(___flmul@prod+3)^0,f,c
 13302   00310E  C024  F011         	movff	___flmul@prod,?___flmul
 13303   003112  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 13304   003116  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 13305   00311A  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 13306   00311E                     l1232:
 13307   00311E  0012               	return		;funcret
 13308   003120                     __end_of___flmul:
 13309                           	callstack 0
 13310                           
 13311 ;; *************** function ___flge *****************
 13312 ;; Defined at:
 13313 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;  ff1             4   41[COMRAM] unsigned char 
 13316 ;;  ff2             4   45[COMRAM] unsigned char 
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;		None               void
 13321 ;; Registers used:
 13322 ;;		wreg, status,2, status,0
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13328 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13331 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13332 ;;Total ram usage:       12 bytes
 13333 ;; Hardware stack levels used: 1
 13334 ;; Hardware stack levels required when called: 1
 13335 ;; This function calls:
 13336 ;;		Nothing
 13337 ;; This function is called by:
 13338 ;;		_Colour_decider
 13339 ;;		_efgtoa
 13340 ;; This function uses a non-reentrant model
 13341 ;;
 13342                           
 13343                           	psect	text70
 13344   004862                     __ptext70:
 13345                           	callstack 0
 13346   004862                     ___flge:
 13347                           	callstack 25
 13348   004862  0E00               	movlw	0
 13349   004864  142A               	andwf	___flge@ff1^0,w,c
 13350   004866  6E32               	movwf	??___flge^0,c
 13351   004868  0E00               	movlw	0
 13352   00486A  142B               	andwf	(___flge@ff1+1)^0,w,c
 13353   00486C  6E33               	movwf	(??___flge+1)^0,c
 13354   00486E  0E80               	movlw	128
 13355   004870  142C               	andwf	(___flge@ff1+2)^0,w,c
 13356   004872  6E34               	movwf	(??___flge+2)^0,c
 13357   004874  0E7F               	movlw	127
 13358   004876  142D               	andwf	(___flge@ff1+3)^0,w,c
 13359   004878  6E35               	movwf	(??___flge+3)^0,c
 13360   00487A  5032               	movf	??___flge^0,w,c
 13361   00487C  1033               	iorwf	(??___flge+1)^0,w,c
 13362   00487E  1034               	iorwf	(??___flge+2)^0,w,c
 13363   004880  1035               	iorwf	(??___flge+3)^0,w,c
 13364   004882  A4D8               	btfss	status,2,c
 13365   004884  EF46  F024         	goto	u3891
 13366   004888  EF48  F024         	goto	u3890
 13367   00488C                     u3891:
 13368   00488C  EF50  F024         	goto	l4231
 13369   004890                     u3890:
 13370   004890  0E00               	movlw	0
 13371   004892  6E2A               	movwf	___flge@ff1^0,c
 13372   004894  0E00               	movlw	0
 13373   004896  6E2B               	movwf	(___flge@ff1+1)^0,c
 13374   004898  0E00               	movlw	0
 13375   00489A  6E2C               	movwf	(___flge@ff1+2)^0,c
 13376   00489C  0E00               	movlw	0
 13377   00489E  6E2D               	movwf	(___flge@ff1+3)^0,c
 13378   0048A0                     l4231:
 13379   0048A0  0E00               	movlw	0
 13380   0048A2  142E               	andwf	___flge@ff2^0,w,c
 13381   0048A4  6E32               	movwf	??___flge^0,c
 13382   0048A6  0E00               	movlw	0
 13383   0048A8  142F               	andwf	(___flge@ff2+1)^0,w,c
 13384   0048AA  6E33               	movwf	(??___flge+1)^0,c
 13385   0048AC  0E80               	movlw	128
 13386   0048AE  1430               	andwf	(___flge@ff2+2)^0,w,c
 13387   0048B0  6E34               	movwf	(??___flge+2)^0,c
 13388   0048B2  0E7F               	movlw	127
 13389   0048B4  1431               	andwf	(___flge@ff2+3)^0,w,c
 13390   0048B6  6E35               	movwf	(??___flge+3)^0,c
 13391   0048B8  5032               	movf	??___flge^0,w,c
 13392   0048BA  1033               	iorwf	(??___flge+1)^0,w,c
 13393   0048BC  1034               	iorwf	(??___flge+2)^0,w,c
 13394   0048BE  1035               	iorwf	(??___flge+3)^0,w,c
 13395   0048C0  A4D8               	btfss	status,2,c
 13396   0048C2  EF65  F024         	goto	u3901
 13397   0048C6  EF67  F024         	goto	u3900
 13398   0048CA                     u3901:
 13399   0048CA  EF6F  F024         	goto	l4235
 13400   0048CE                     u3900:
 13401   0048CE  0E00               	movlw	0
 13402   0048D0  6E2E               	movwf	___flge@ff2^0,c
 13403   0048D2  0E00               	movlw	0
 13404   0048D4  6E2F               	movwf	(___flge@ff2+1)^0,c
 13405   0048D6  0E00               	movlw	0
 13406   0048D8  6E30               	movwf	(___flge@ff2+2)^0,c
 13407   0048DA  0E00               	movlw	0
 13408   0048DC  6E31               	movwf	(___flge@ff2+3)^0,c
 13409   0048DE                     l4235:
 13410   0048DE  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 13411   0048E0  EF74  F024         	goto	u3911
 13412   0048E4  EF76  F024         	goto	u3910
 13413   0048E8                     u3911:
 13414   0048E8  EF7F  F024         	goto	l4239
 13415   0048EC                     u3910:
 13416   0048EC  6C2A               	negf	___flge@ff1^0,c
 13417   0048EE  1E2B               	comf	(___flge@ff1+1)^0,f,c
 13418   0048F0  B0D8               	btfsc	status,0,c
 13419   0048F2  2A2B               	incf	(___flge@ff1+1)^0,f,c
 13420   0048F4  1E2C               	comf	(___flge@ff1+2)^0,f,c
 13421   0048F6  B0D8               	btfsc	status,0,c
 13422   0048F8  2A2C               	incf	(___flge@ff1+2)^0,f,c
 13423   0048FA  0E80               	movlw	128
 13424   0048FC  562D               	subfwb	(___flge@ff1+3)^0,f,c
 13425   0048FE                     l4239:
 13426   0048FE  AE31               	btfss	(___flge@ff2+3)^0,7,c
 13427   004900  EF84  F024         	goto	u3921
 13428   004904  EF86  F024         	goto	u3920
 13429   004908                     u3921:
 13430   004908  EF8F  F024         	goto	l879
 13431   00490C                     u3920:
 13432   00490C  6C2E               	negf	___flge@ff2^0,c
 13433   00490E  1E2F               	comf	(___flge@ff2+1)^0,f,c
 13434   004910  B0D8               	btfsc	status,0,c
 13435   004912  2A2F               	incf	(___flge@ff2+1)^0,f,c
 13436   004914  1E30               	comf	(___flge@ff2+2)^0,f,c
 13437   004916  B0D8               	btfsc	status,0,c
 13438   004918  2A30               	incf	(___flge@ff2+2)^0,f,c
 13439   00491A  0E80               	movlw	128
 13440   00491C  5631               	subfwb	(___flge@ff2+3)^0,f,c
 13441   00491E                     l879:
 13442   00491E  0E00               	movlw	0
 13443   004920  1A2A               	xorwf	___flge@ff1^0,f,c
 13444   004922  0E00               	movlw	0
 13445   004924  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 13446   004926  0E00               	movlw	0
 13447   004928  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 13448   00492A  0E80               	movlw	128
 13449   00492C  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 13450   00492E  0E00               	movlw	0
 13451   004930  1A2E               	xorwf	___flge@ff2^0,f,c
 13452   004932  0E00               	movlw	0
 13453   004934  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 13454   004936  0E00               	movlw	0
 13455   004938  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 13456   00493A  0E80               	movlw	128
 13457   00493C  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 13458   00493E  502E               	movf	___flge@ff2^0,w,c
 13459   004940  5C2A               	subwf	___flge@ff1^0,w,c
 13460   004942  502F               	movf	(___flge@ff2+1)^0,w,c
 13461   004944  582B               	subwfb	(___flge@ff1+1)^0,w,c
 13462   004946  5030               	movf	(___flge@ff2+2)^0,w,c
 13463   004948  582C               	subwfb	(___flge@ff1+2)^0,w,c
 13464   00494A  5031               	movf	(___flge@ff2+3)^0,w,c
 13465   00494C  582D               	subwfb	(___flge@ff1+3)^0,w,c
 13466   00494E  B0D8               	btfsc	status,0,c
 13467   004950  EFAC  F024         	goto	u3931
 13468   004954  EFAE  F024         	goto	u3930
 13469   004958                     u3931:
 13470   004958  EFB1  F024         	goto	l4245
 13471   00495C                     u3930:
 13472   00495C  90D8               	bcf	status,0,c
 13473   00495E  EFB2  F024         	goto	l884
 13474   004962                     l4245:
 13475   004962  80D8               	bsf	status,0,c
 13476   004964                     l884:
 13477   004964  0012               	return		;funcret
 13478   004966                     __end_of___flge:
 13479                           	callstack 0
 13480                           
 13481 ;; *************** function ___fleq *****************
 13482 ;; Defined at:
 13483 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;  ff1             4   49[COMRAM] unsigned char 
 13486 ;;  ff2             4   53[COMRAM] unsigned char 
 13487 ;; Auto vars:     Size  Location     Type
 13488 ;;		None
 13489 ;; Return value:  Size  Location     Type
 13490 ;;		None               void
 13491 ;; Registers used:
 13492 ;;		wreg, status,2, status,0
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13498 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13500 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13501 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13502 ;;Total ram usage:       12 bytes
 13503 ;; Hardware stack levels used: 1
 13504 ;; Hardware stack levels required when called: 1
 13505 ;; This function calls:
 13506 ;;		Nothing
 13507 ;; This function is called by:
 13508 ;;		_Colour_decider
 13509 ;;		_efgtoa
 13510 ;; This function uses a non-reentrant model
 13511 ;;
 13512                           
 13513                           	psect	text71
 13514   004B2E                     __ptext71:
 13515                           	callstack 0
 13516   004B2E                     ___fleq:
 13517                           	callstack 25
 13518   004B2E  0E00               	movlw	0
 13519   004B30  1432               	andwf	___fleq@ff1^0,w,c
 13520   004B32  6E3A               	movwf	??___fleq^0,c
 13521   004B34  0E00               	movlw	0
 13522   004B36  1433               	andwf	(___fleq@ff1+1)^0,w,c
 13523   004B38  6E3B               	movwf	(??___fleq+1)^0,c
 13524   004B3A  0E80               	movlw	128
 13525   004B3C  1434               	andwf	(___fleq@ff1+2)^0,w,c
 13526   004B3E  6E3C               	movwf	(??___fleq+2)^0,c
 13527   004B40  0E7F               	movlw	127
 13528   004B42  1435               	andwf	(___fleq@ff1+3)^0,w,c
 13529   004B44  6E3D               	movwf	(??___fleq+3)^0,c
 13530   004B46  503A               	movf	??___fleq^0,w,c
 13531   004B48  103B               	iorwf	(??___fleq+1)^0,w,c
 13532   004B4A  103C               	iorwf	(??___fleq+2)^0,w,c
 13533   004B4C  103D               	iorwf	(??___fleq+3)^0,w,c
 13534   004B4E  A4D8               	btfss	status,2,c
 13535   004B50  EFAC  F025         	goto	u3861
 13536   004B54  EFAE  F025         	goto	u3860
 13537   004B58                     u3861:
 13538   004B58  EFB6  F025         	goto	l4215
 13539   004B5C                     u3860:
 13540   004B5C  0E00               	movlw	0
 13541   004B5E  6E32               	movwf	___fleq@ff1^0,c
 13542   004B60  0E00               	movlw	0
 13543   004B62  6E33               	movwf	(___fleq@ff1+1)^0,c
 13544   004B64  0E00               	movlw	0
 13545   004B66  6E34               	movwf	(___fleq@ff1+2)^0,c
 13546   004B68  0E00               	movlw	0
 13547   004B6A  6E35               	movwf	(___fleq@ff1+3)^0,c
 13548   004B6C                     l4215:
 13549   004B6C  0E00               	movlw	0
 13550   004B6E  1436               	andwf	___fleq@ff2^0,w,c
 13551   004B70  6E3A               	movwf	??___fleq^0,c
 13552   004B72  0E00               	movlw	0
 13553   004B74  1437               	andwf	(___fleq@ff2+1)^0,w,c
 13554   004B76  6E3B               	movwf	(??___fleq+1)^0,c
 13555   004B78  0E80               	movlw	128
 13556   004B7A  1438               	andwf	(___fleq@ff2+2)^0,w,c
 13557   004B7C  6E3C               	movwf	(??___fleq+2)^0,c
 13558   004B7E  0E7F               	movlw	127
 13559   004B80  1439               	andwf	(___fleq@ff2+3)^0,w,c
 13560   004B82  6E3D               	movwf	(??___fleq+3)^0,c
 13561   004B84  503A               	movf	??___fleq^0,w,c
 13562   004B86  103B               	iorwf	(??___fleq+1)^0,w,c
 13563   004B88  103C               	iorwf	(??___fleq+2)^0,w,c
 13564   004B8A  103D               	iorwf	(??___fleq+3)^0,w,c
 13565   004B8C  A4D8               	btfss	status,2,c
 13566   004B8E  EFCB  F025         	goto	u3871
 13567   004B92  EFCD  F025         	goto	u3870
 13568   004B96                     u3871:
 13569   004B96  EFD5  F025         	goto	l4219
 13570   004B9A                     u3870:
 13571   004B9A  0E00               	movlw	0
 13572   004B9C  6E36               	movwf	___fleq@ff2^0,c
 13573   004B9E  0E00               	movlw	0
 13574   004BA0  6E37               	movwf	(___fleq@ff2+1)^0,c
 13575   004BA2  0E00               	movlw	0
 13576   004BA4  6E38               	movwf	(___fleq@ff2+2)^0,c
 13577   004BA6  0E00               	movlw	0
 13578   004BA8  6E39               	movwf	(___fleq@ff2+3)^0,c
 13579   004BAA                     l4219:
 13580   004BAA  5036               	movf	___fleq@ff2^0,w,c
 13581   004BAC  1832               	xorwf	___fleq@ff1^0,w,c
 13582   004BAE  E10F               	bnz	u3880
 13583   004BB0  5037               	movf	(___fleq@ff2+1)^0,w,c
 13584   004BB2  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 13585   004BB4  E10C               	bnz	u3880
 13586   004BB6  5038               	movf	(___fleq@ff2+2)^0,w,c
 13587   004BB8  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 13588   004BBA  E109               	bnz	u3880
 13589   004BBC  5039               	movf	(___fleq@ff2+3)^0,w,c
 13590   004BBE  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 13591   004BC0  B4D8               	btfsc	status,2,c
 13592   004BC2  EFE5  F025         	goto	u3881
 13593   004BC6  EFE7  F025         	goto	u3880
 13594   004BCA                     u3881:
 13595   004BCA  EFEA  F025         	goto	l4223
 13596   004BCE                     u3880:
 13597   004BCE  90D8               	bcf	status,0,c
 13598   004BD0  EFEB  F025         	goto	l873
 13599   004BD4                     l4223:
 13600   004BD4  80D8               	bsf	status,0,c
 13601   004BD6                     l873:
 13602   004BD6  0012               	return		;funcret
 13603   004BD8                     __end_of___fleq:
 13604                           	callstack 0
 13605                           
 13606 ;; *************** function ___fldiv *****************
 13607 ;; Defined at:
 13608 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  b               4   49[COMRAM] unsigned char 
 13611 ;;  a               4   53[COMRAM] unsigned char 
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;  grs             4   68[COMRAM] unsigned long 
 13614 ;;  rem             4   61[COMRAM] unsigned long 
 13615 ;;  new_exp         2   66[COMRAM] short 
 13616 ;;  aexp            1   73[COMRAM] unsigned char 
 13617 ;;  bexp            1   72[COMRAM] unsigned char 
 13618 ;;  sign            1   65[COMRAM] unsigned char 
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  4   49[COMRAM] unsigned char 
 13621 ;; Registers used:
 13622 ;;		wreg, status,2, status,0
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13628 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13629 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13631 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13632 ;;Total ram usage:       25 bytes
 13633 ;; Hardware stack levels used: 1
 13634 ;; Hardware stack levels required when called: 1
 13635 ;; This function calls:
 13636 ;;		Nothing
 13637 ;; This function is called by:
 13638 ;;		_colour_rel
 13639 ;;		_Colour_decider
 13640 ;;		_efgtoa
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text72
 13645   003120                     __ptext72:
 13646                           	callstack 0
 13647   003120                     ___fldiv:
 13648                           	callstack 25
 13649   003120  5035               	movf	(___fldiv@b+3)^0,w,c
 13650   003122  0B80               	andlw	128
 13651   003124  6E42               	movwf	___fldiv@sign^0,c
 13652   003126  5035               	movf	(___fldiv@b+3)^0,w,c
 13653   003128  2435               	addwf	(___fldiv@b+3)^0,w,c
 13654   00312A  6E49               	movwf	___fldiv@bexp^0,c
 13655   00312C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 13656   00312E  EF9B  F018         	goto	u3441
 13657   003132  EF9D  F018         	goto	u3440
 13658   003136                     u3441:
 13659   003136  EF9E  F018         	goto	l3943
 13660   00313A                     u3440:
 13661   00313A  8049               	bsf	___fldiv@bexp^0,0,c
 13662   00313C                     l3943:
 13663   00313C  5049               	movf	___fldiv@bexp^0,w,c
 13664   00313E  B4D8               	btfsc	status,2,c
 13665   003140  EFA4  F018         	goto	u3451
 13666   003144  EFA6  F018         	goto	u3450
 13667   003148                     u3451:
 13668   003148  EFBB  F018         	goto	l3953
 13669   00314C                     u3450:
 13670   00314C  2849               	incf	___fldiv@bexp^0,w,c
 13671   00314E  A4D8               	btfss	status,2,c
 13672   003150  EFAC  F018         	goto	u3461
 13673   003154  EFAE  F018         	goto	u3460
 13674   003158                     u3461:
 13675   003158  EFB6  F018         	goto	l3949
 13676   00315C                     u3460:
 13677   00315C  0E00               	movlw	0
 13678   00315E  6E32               	movwf	___fldiv@b^0,c
 13679   003160  0E00               	movlw	0
 13680   003162  6E33               	movwf	(___fldiv@b+1)^0,c
 13681   003164  0E00               	movlw	0
 13682   003166  6E34               	movwf	(___fldiv@b+2)^0,c
 13683   003168  0E00               	movlw	0
 13684   00316A  6E35               	movwf	(___fldiv@b+3)^0,c
 13685   00316C                     l3949:
 13686   00316C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 13687   00316E  0E00               	movlw	0
 13688   003170  6E35               	movwf	(___fldiv@b+3)^0,c
 13689   003172  EFC3  F018         	goto	l3955
 13690   003176                     l3953:
 13691   003176  0E00               	movlw	0
 13692   003178  6E32               	movwf	___fldiv@b^0,c
 13693   00317A  0E00               	movlw	0
 13694   00317C  6E33               	movwf	(___fldiv@b+1)^0,c
 13695   00317E  0E00               	movlw	0
 13696   003180  6E34               	movwf	(___fldiv@b+2)^0,c
 13697   003182  0E00               	movlw	0
 13698   003184  6E35               	movwf	(___fldiv@b+3)^0,c
 13699   003186                     l3955:
 13700   003186  5039               	movf	(___fldiv@a+3)^0,w,c
 13701   003188  0B80               	andlw	128
 13702   00318A  1A42               	xorwf	___fldiv@sign^0,f,c
 13703   00318C  5039               	movf	(___fldiv@a+3)^0,w,c
 13704   00318E  2439               	addwf	(___fldiv@a+3)^0,w,c
 13705   003190  6E4A               	movwf	___fldiv@aexp^0,c
 13706   003192  AE38               	btfss	(___fldiv@a+2)^0,7,c
 13707   003194  EFCE  F018         	goto	u3471
 13708   003198  EFD0  F018         	goto	u3470
 13709   00319C                     u3471:
 13710   00319C  EFD1  F018         	goto	l3963
 13711   0031A0                     u3470:
 13712   0031A0  804A               	bsf	___fldiv@aexp^0,0,c
 13713   0031A2                     l3963:
 13714   0031A2  504A               	movf	___fldiv@aexp^0,w,c
 13715   0031A4  B4D8               	btfsc	status,2,c
 13716   0031A6  EFD7  F018         	goto	u3481
 13717   0031AA  EFD9  F018         	goto	u3480
 13718   0031AE                     u3481:
 13719   0031AE  EFEE  F018         	goto	l3973
 13720   0031B2                     u3480:
 13721   0031B2  284A               	incf	___fldiv@aexp^0,w,c
 13722   0031B4  A4D8               	btfss	status,2,c
 13723   0031B6  EFDF  F018         	goto	u3491
 13724   0031BA  EFE1  F018         	goto	u3490
 13725   0031BE                     u3491:
 13726   0031BE  EFE9  F018         	goto	l3969
 13727   0031C2                     u3490:
 13728   0031C2  0E00               	movlw	0
 13729   0031C4  6E36               	movwf	___fldiv@a^0,c
 13730   0031C6  0E00               	movlw	0
 13731   0031C8  6E37               	movwf	(___fldiv@a+1)^0,c
 13732   0031CA  0E00               	movlw	0
 13733   0031CC  6E38               	movwf	(___fldiv@a+2)^0,c
 13734   0031CE  0E00               	movlw	0
 13735   0031D0  6E39               	movwf	(___fldiv@a+3)^0,c
 13736   0031D2                     l3969:
 13737   0031D2  8E38               	bsf	(___fldiv@a+2)^0,7,c
 13738   0031D4  0E00               	movlw	0
 13739   0031D6  6E39               	movwf	(___fldiv@a+3)^0,c
 13740   0031D8  EFF6  F018         	goto	l3975
 13741   0031DC                     l3973:
 13742   0031DC  0E00               	movlw	0
 13743   0031DE  6E36               	movwf	___fldiv@a^0,c
 13744   0031E0  0E00               	movlw	0
 13745   0031E2  6E37               	movwf	(___fldiv@a+1)^0,c
 13746   0031E4  0E00               	movlw	0
 13747   0031E6  6E38               	movwf	(___fldiv@a+2)^0,c
 13748   0031E8  0E00               	movlw	0
 13749   0031EA  6E39               	movwf	(___fldiv@a+3)^0,c
 13750   0031EC                     l3975:
 13751   0031EC  5036               	movf	___fldiv@a^0,w,c
 13752   0031EE  1037               	iorwf	(___fldiv@a+1)^0,w,c
 13753   0031F0  1038               	iorwf	(___fldiv@a+2)^0,w,c
 13754   0031F2  1039               	iorwf	(___fldiv@a+3)^0,w,c
 13755   0031F4  A4D8               	btfss	status,2,c
 13756   0031F6  EFFF  F018         	goto	u3501
 13757   0031FA  EF01  F019         	goto	u3500
 13758   0031FE                     u3501:
 13759   0031FE  EF19  F019         	goto	l3987
 13760   003202                     u3500:
 13761   003202  0E00               	movlw	0
 13762   003204  6E32               	movwf	___fldiv@b^0,c
 13763   003206  0E00               	movlw	0
 13764   003208  6E33               	movwf	(___fldiv@b+1)^0,c
 13765   00320A  0E00               	movlw	0
 13766   00320C  6E34               	movwf	(___fldiv@b+2)^0,c
 13767   00320E  0E00               	movlw	0
 13768   003210  6E35               	movwf	(___fldiv@b+3)^0,c
 13769   003212  0E80               	movlw	128
 13770   003214  1234               	iorwf	(___fldiv@b+2)^0,f,c
 13771   003216  0E7F               	movlw	127
 13772   003218  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13773   00321A                     l3981:
 13774   00321A  5042               	movf	___fldiv@sign^0,w,c
 13775   00321C  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13776   00321E  C032  F032         	movff	___fldiv@b,?___fldiv
 13777   003222  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 13778   003226  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 13779   00322A  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 13780   00322E  EF5C  F01A         	goto	l1196
 13781   003232                     l3987:
 13782   003232  5049               	movf	___fldiv@bexp^0,w,c
 13783   003234  A4D8               	btfss	status,2,c
 13784   003236  EF1F  F019         	goto	u3511
 13785   00323A  EF21  F019         	goto	u3510
 13786   00323E                     u3511:
 13787   00323E  EF2B  F019         	goto	l3995
 13788   003242                     u3510:
 13789   003242  0E00               	movlw	0
 13790   003244  6E32               	movwf	?___fldiv^0,c
 13791   003246  0E00               	movlw	0
 13792   003248  6E33               	movwf	(?___fldiv+1)^0,c
 13793   00324A  0E00               	movlw	0
 13794   00324C  6E34               	movwf	(?___fldiv+2)^0,c
 13795   00324E  0E00               	movlw	0
 13796   003250  6E35               	movwf	(?___fldiv+3)^0,c
 13797   003252  EF5C  F01A         	goto	l1196
 13798   003256                     l3995:
 13799   003256  504A               	movf	___fldiv@aexp^0,w,c
 13800   003258  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 13801   00325C  6A3B               	clrf	(??___fldiv+1)^0,c
 13802   00325E  5E3A               	subwf	??___fldiv^0,f,c
 13803   003260  0E00               	movlw	0
 13804   003262  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 13805   003264  0E7F               	movlw	127
 13806   003266  243A               	addwf	??___fldiv^0,w,c
 13807   003268  6E43               	movwf	___fldiv@new_exp^0,c
 13808   00326A  0E00               	movlw	0
 13809   00326C  203B               	addwfc	(??___fldiv+1)^0,w,c
 13810   00326E  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 13811   003270  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 13812   003274  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 13813   003278  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 13814   00327C  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 13815   003280  0E00               	movlw	0
 13816   003282  6E32               	movwf	___fldiv@b^0,c
 13817   003284  0E00               	movlw	0
 13818   003286  6E33               	movwf	(___fldiv@b+1)^0,c
 13819   003288  0E00               	movlw	0
 13820   00328A  6E34               	movwf	(___fldiv@b+2)^0,c
 13821   00328C  0E00               	movlw	0
 13822   00328E  6E35               	movwf	(___fldiv@b+3)^0,c
 13823   003290  0E00               	movlw	0
 13824   003292  6E45               	movwf	___fldiv@grs^0,c
 13825   003294  0E00               	movlw	0
 13826   003296  6E46               	movwf	(___fldiv@grs+1)^0,c
 13827   003298  0E00               	movlw	0
 13828   00329A  6E47               	movwf	(___fldiv@grs+2)^0,c
 13829   00329C  0E00               	movlw	0
 13830   00329E  6E48               	movwf	(___fldiv@grs+3)^0,c
 13831   0032A0  0E00               	movlw	0
 13832   0032A2  6E4A               	movwf	___fldiv@aexp^0,c
 13833   0032A4  EF8C  F019         	goto	l1198
 13834   0032A8                     l4005:
 13835   0032A8  504A               	movf	___fldiv@aexp^0,w,c
 13836   0032AA  B4D8               	btfsc	status,2,c
 13837   0032AC  EF5A  F019         	goto	u3521
 13838   0032B0  EF5C  F019         	goto	u3520
 13839   0032B4                     u3521:
 13840   0032B4  EF73  F019         	goto	l4013
 13841   0032B8                     u3520:
 13842   0032B8  90D8               	bcf	status,0,c
 13843   0032BA  363E               	rlcf	___fldiv@rem^0,f,c
 13844   0032BC  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 13845   0032BE  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 13846   0032C0  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 13847   0032C2  90D8               	bcf	status,0,c
 13848   0032C4  3632               	rlcf	___fldiv@b^0,f,c
 13849   0032C6  3633               	rlcf	(___fldiv@b+1)^0,f,c
 13850   0032C8  3634               	rlcf	(___fldiv@b+2)^0,f,c
 13851   0032CA  3635               	rlcf	(___fldiv@b+3)^0,f,c
 13852   0032CC  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13853   0032CE  EF6B  F019         	goto	u3531
 13854   0032D2  EF6D  F019         	goto	u3530
 13855   0032D6                     u3531:
 13856   0032D6  EF6E  F019         	goto	l1201
 13857   0032DA                     u3530:
 13858   0032DA  8032               	bsf	___fldiv@b^0,0,c
 13859   0032DC                     l1201:
 13860   0032DC  90D8               	bcf	status,0,c
 13861   0032DE  3645               	rlcf	___fldiv@grs^0,f,c
 13862   0032E0  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 13863   0032E2  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 13864   0032E4  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 13865   0032E6                     l4013:
 13866   0032E6  5036               	movf	___fldiv@a^0,w,c
 13867   0032E8  5C3E               	subwf	___fldiv@rem^0,w,c
 13868   0032EA  5037               	movf	(___fldiv@a+1)^0,w,c
 13869   0032EC  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 13870   0032EE  5038               	movf	(___fldiv@a+2)^0,w,c
 13871   0032F0  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 13872   0032F2  5039               	movf	(___fldiv@a+3)^0,w,c
 13873   0032F4  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 13874   0032F6  A0D8               	btfss	status,0,c
 13875   0032F8  EF80  F019         	goto	u3541
 13876   0032FC  EF82  F019         	goto	u3540
 13877   003300                     u3541:
 13878   003300  EF8B  F019         	goto	l4019
 13879   003304                     u3540:
 13880   003304  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 13881   003306  5036               	movf	___fldiv@a^0,w,c
 13882   003308  5E3E               	subwf	___fldiv@rem^0,f,c
 13883   00330A  5037               	movf	(___fldiv@a+1)^0,w,c
 13884   00330C  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 13885   00330E  5038               	movf	(___fldiv@a+2)^0,w,c
 13886   003310  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 13887   003312  5039               	movf	(___fldiv@a+3)^0,w,c
 13888   003314  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 13889   003316                     l4019:
 13890   003316  2A4A               	incf	___fldiv@aexp^0,f,c
 13891   003318                     l1198:
 13892   003318  0E19               	movlw	25
 13893   00331A  644A               	cpfsgt	___fldiv@aexp^0,c
 13894   00331C  EF92  F019         	goto	u3551
 13895   003320  EF94  F019         	goto	u3550
 13896   003324                     u3551:
 13897   003324  EF54  F019         	goto	l4005
 13898   003328                     u3550:
 13899   003328  503E               	movf	___fldiv@rem^0,w,c
 13900   00332A  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 13901   00332C  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 13902   00332E  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 13903   003330  B4D8               	btfsc	status,2,c
 13904   003332  EF9D  F019         	goto	u3561
 13905   003336  EF9F  F019         	goto	u3560
 13906   00333A                     u3561:
 13907   00333A  EFB7  F019         	goto	l4031
 13908   00333E                     u3560:
 13909   00333E  8045               	bsf	___fldiv@grs^0,0,c
 13910   003340  EFB7  F019         	goto	l4031
 13911   003344                     l4025:
 13912   003344  90D8               	bcf	status,0,c
 13913   003346  3632               	rlcf	___fldiv@b^0,f,c
 13914   003348  3633               	rlcf	(___fldiv@b+1)^0,f,c
 13915   00334A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 13916   00334C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 13917   00334E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13918   003350  EFAC  F019         	goto	u3571
 13919   003354  EFAE  F019         	goto	u3570
 13920   003358                     u3571:
 13921   003358  EFAF  F019         	goto	l1207
 13922   00335C                     u3570:
 13923   00335C  8032               	bsf	___fldiv@b^0,0,c
 13924   00335E                     l1207:
 13925   00335E  90D8               	bcf	status,0,c
 13926   003360  3645               	rlcf	___fldiv@grs^0,f,c
 13927   003362  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 13928   003364  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 13929   003366  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 13930   003368  0643               	decf	___fldiv@new_exp^0,f,c
 13931   00336A  A0D8               	btfss	status,0,c
 13932   00336C  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 13933   00336E                     l4031:
 13934   00336E  AE34               	btfss	(___fldiv@b+2)^0,7,c
 13935   003370  EFBC  F019         	goto	u3581
 13936   003374  EFBE  F019         	goto	u3580
 13937   003378                     u3581:
 13938   003378  EFA2  F019         	goto	l4025
 13939   00337C                     u3580:
 13940   00337C  0E00               	movlw	0
 13941   00337E  6E4A               	movwf	___fldiv@aexp^0,c
 13942   003380  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13943   003382  EFC5  F019         	goto	u3591
 13944   003386  EFC7  F019         	goto	u3590
 13945   00338A                     u3591:
 13946   00338A  EFEB  F019         	goto	l1209
 13947   00338E                     u3590:
 13948   00338E  0EFF               	movlw	255
 13949   003390  1445               	andwf	___fldiv@grs^0,w,c
 13950   003392  6E3A               	movwf	??___fldiv^0,c
 13951   003394  0EFF               	movlw	255
 13952   003396  1446               	andwf	(___fldiv@grs+1)^0,w,c
 13953   003398  6E3B               	movwf	(??___fldiv+1)^0,c
 13954   00339A  0EFF               	movlw	255
 13955   00339C  1447               	andwf	(___fldiv@grs+2)^0,w,c
 13956   00339E  6E3C               	movwf	(??___fldiv+2)^0,c
 13957   0033A0  0E7F               	movlw	127
 13958   0033A2  1448               	andwf	(___fldiv@grs+3)^0,w,c
 13959   0033A4  6E3D               	movwf	(??___fldiv+3)^0,c
 13960   0033A6  503A               	movf	??___fldiv^0,w,c
 13961   0033A8  103B               	iorwf	(??___fldiv+1)^0,w,c
 13962   0033AA  103C               	iorwf	(??___fldiv+2)^0,w,c
 13963   0033AC  103D               	iorwf	(??___fldiv+3)^0,w,c
 13964   0033AE  B4D8               	btfsc	status,2,c
 13965   0033B0  EFDC  F019         	goto	u3601
 13966   0033B4  EFDE  F019         	goto	u3600
 13967   0033B8                     u3601:
 13968   0033B8  EFE2  F019         	goto	l1210
 13969   0033BC                     u3600:
 13970   0033BC                     l4039:
 13971   0033BC  0E01               	movlw	1
 13972   0033BE  6E4A               	movwf	___fldiv@aexp^0,c
 13973   0033C0  EFEB  F019         	goto	l1209
 13974   0033C4                     l1210:
 13975   0033C4  A032               	btfss	___fldiv@b^0,0,c
 13976   0033C6  EFE7  F019         	goto	u3611
 13977   0033CA  EFE9  F019         	goto	u3610
 13978   0033CE                     u3611:
 13979   0033CE  EFEB  F019         	goto	l1209
 13980   0033D2                     u3610:
 13981   0033D2  EFDE  F019         	goto	l4039
 13982   0033D6                     l1209:
 13983   0033D6  504A               	movf	___fldiv@aexp^0,w,c
 13984   0033D8  B4D8               	btfsc	status,2,c
 13985   0033DA  EFF1  F019         	goto	u3621
 13986   0033DE  EFF3  F019         	goto	u3620
 13987   0033E2                     u3621:
 13988   0033E2  EF17  F01A         	goto	l4051
 13989   0033E6                     u3620:
 13990   0033E6  0E01               	movlw	1
 13991   0033E8  2632               	addwf	___fldiv@b^0,f,c
 13992   0033EA  0E00               	movlw	0
 13993   0033EC  2233               	addwfc	(___fldiv@b+1)^0,f,c
 13994   0033EE  2234               	addwfc	(___fldiv@b+2)^0,f,c
 13995   0033F0  2235               	addwfc	(___fldiv@b+3)^0,f,c
 13996   0033F2  A035               	btfss	(___fldiv@b+3)^0,0,c
 13997   0033F4  EFFE  F019         	goto	u3631
 13998   0033F8  EF00  F01A         	goto	u3630
 13999   0033FC                     u3631:
 14000   0033FC  EF17  F01A         	goto	l4051
 14001   003400                     u3630:
 14002   003400  C032  F03A         	movff	___fldiv@b,??___fldiv
 14003   003404  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 14004   003408  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 14005   00340C  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 14006   003410  343D               	rlcf	(??___fldiv+3)^0,w,c
 14007   003412  323D               	rrcf	(??___fldiv+3)^0,f,c
 14008   003414  323C               	rrcf	(??___fldiv+2)^0,f,c
 14009   003416  323B               	rrcf	(??___fldiv+1)^0,f,c
 14010   003418  323A               	rrcf	??___fldiv^0,f,c
 14011   00341A  C03A  F032         	movff	??___fldiv,___fldiv@b
 14012   00341E  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 14013   003422  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 14014   003426  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 14015   00342A  4A43               	infsnz	___fldiv@new_exp^0,f,c
 14016   00342C  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 14017   00342E                     l4051:
 14018   00342E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14019   003430  EF22  F01A         	goto	u3641
 14020   003434  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14021   003436  E108               	bnz	u3640
 14022   003438  2843               	incf	___fldiv@new_exp^0,w,c
 14023   00343A  A0D8               	btfss	status,0,c
 14024   00343C  EF22  F01A         	goto	u3641
 14025   003440  EF24  F01A         	goto	u3640
 14026   003444                     u3641:
 14027   003444  EF2F  F01A         	goto	l4055
 14028   003448                     u3640:
 14029   003448  0E00               	movlw	0
 14030   00344A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14031   00344C  6843               	setf	___fldiv@new_exp^0,c
 14032   00344E  0E00               	movlw	0
 14033   003450  6E32               	movwf	___fldiv@b^0,c
 14034   003452  0E00               	movlw	0
 14035   003454  6E33               	movwf	(___fldiv@b+1)^0,c
 14036   003456  0E00               	movlw	0
 14037   003458  6E34               	movwf	(___fldiv@b+2)^0,c
 14038   00345A  0E00               	movlw	0
 14039   00345C  6E35               	movwf	(___fldiv@b+3)^0,c
 14040   00345E                     l4055:
 14041   00345E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14042   003460  EF3C  F01A         	goto	u3650
 14043   003464  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14044   003466  E106               	bnz	u3651
 14045   003468  0443               	decf	___fldiv@new_exp^0,w,c
 14046   00346A  B0D8               	btfsc	status,0,c
 14047   00346C  EF3A  F01A         	goto	u3651
 14048   003470  EF3C  F01A         	goto	u3650
 14049   003474                     u3651:
 14050   003474  EF4A  F01A         	goto	l4059
 14051   003478                     u3650:
 14052   003478  0E00               	movlw	0
 14053   00347A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14054   00347C  0E00               	movlw	0
 14055   00347E  6E43               	movwf	___fldiv@new_exp^0,c
 14056   003480  0E00               	movlw	0
 14057   003482  6E32               	movwf	___fldiv@b^0,c
 14058   003484  0E00               	movlw	0
 14059   003486  6E33               	movwf	(___fldiv@b+1)^0,c
 14060   003488  0E00               	movlw	0
 14061   00348A  6E34               	movwf	(___fldiv@b+2)^0,c
 14062   00348C  0E00               	movlw	0
 14063   00348E  6E35               	movwf	(___fldiv@b+3)^0,c
 14064   003490  0E00               	movlw	0
 14065   003492  6E42               	movwf	___fldiv@sign^0,c
 14066   003494                     l4059:
 14067   003494  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 14068   003498  A049               	btfss	___fldiv@bexp^0,0,c
 14069   00349A  EF51  F01A         	goto	u3661
 14070   00349E  EF53  F01A         	goto	u3660
 14071   0034A2                     u3661:
 14072   0034A2  EF56  F01A         	goto	l4065
 14073   0034A6                     u3660:
 14074   0034A6  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14075   0034A8  EF57  F01A         	goto	l4067
 14076   0034AC                     l4065:
 14077   0034AC  9E34               	bcf	(___fldiv@b+2)^0,7,c
 14078   0034AE                     l4067:
 14079   0034AE  90D8               	bcf	status,0,c
 14080   0034B0  3049               	rrcf	___fldiv@bexp^0,w,c
 14081   0034B2  6E35               	movwf	(___fldiv@b+3)^0,c
 14082   0034B4  EF0D  F019         	goto	l3981
 14083   0034B8                     l1196:
 14084   0034B8  0012               	return		;funcret
 14085   0034BA                     __end_of___fldiv:
 14086                           	callstack 0
 14087                           
 14088 ;; *************** function _HighISR *****************
 14089 ;; Defined at:
 14090 ;;		line 59 in file "interrupts.c"
 14091 ;; Parameters:    Size  Location     Type
 14092 ;;		None
 14093 ;; Auto vars:     Size  Location     Type
 14094 ;;		None
 14095 ;; Return value:  Size  Location     Type
 14096 ;;                  1    wreg      void 
 14097 ;; Registers used:
 14098 ;;		None
 14099 ;; Tracked objects:
 14100 ;;		On entry : 0/0
 14101 ;;		On exit  : 0/0
 14102 ;;		Unchanged: 0/0
 14103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14108 ;;Total ram usage:        0 bytes
 14109 ;; Hardware stack levels used: 1
 14110 ;; This function calls:
 14111 ;;		Nothing
 14112 ;; This function is called by:
 14113 ;;		Interrupt level 2
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117                           	psect	intcode
 14118   000008                     __pintcode:
 14119                           	callstack 0
 14120   000008                     _HighISR:
 14121                           	callstack 22
 14122                           
 14123                           ;incstack = 0
 14124   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14125   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14126   00000C  0011               	retfie		f
 14127   00000E                     __end_of_HighISR:
 14128                           	callstack 0
 14129                           
 14130                           	psect	rparam
 14131   000000                     
 14132                           	psect	temp
 14133   00005F                     btemp:
 14134                           	callstack 0
 14135   00005F                     	ds	1
 14136   000000                     int$flags	set	btemp
 14137   000000                     wtemp8	set	btemp+1
 14138   000000                     ttemp5	set	btemp+1
 14139   000000                     ttemp6	set	btemp+4
 14140   000000                     ttemp7	set	btemp+8
 14141                           
 14142                           	psect	idloc
 14143                           
 14144                           ;Config register IDLOC0 @ 0x200000
 14145                           ;	unspecified, using default values
 14146   200000                     	org	2097152
 14147   200000  0FFF               	dw	4095
 14148                           
 14149                           ;Config register IDLOC1 @ 0x200002
 14150                           ;	unspecified, using default values
 14151   200002                     	org	2097154
 14152   200002  0FFF               	dw	4095
 14153                           
 14154                           ;Config register IDLOC2 @ 0x200004
 14155                           ;	unspecified, using default values
 14156   200004                     	org	2097156
 14157   200004  0FFF               	dw	4095
 14158                           
 14159                           ;Config register IDLOC3 @ 0x200006
 14160                           ;	unspecified, using default values
 14161   200006                     	org	2097158
 14162   200006  0FFF               	dw	4095
 14163                           
 14164                           ;Config register IDLOC4 @ 0x200008
 14165                           ;	unspecified, using default values
 14166   200008                     	org	2097160
 14167   200008  0FFF               	dw	4095
 14168                           
 14169                           ;Config register IDLOC5 @ 0x20000A
 14170                           ;	unspecified, using default values
 14171   20000A                     	org	2097162
 14172   20000A  0FFF               	dw	4095
 14173                           
 14174                           ;Config register IDLOC6 @ 0x20000C
 14175                           ;	unspecified, using default values
 14176   20000C                     	org	2097164
 14177   20000C  0FFF               	dw	4095
 14178                           
 14179                           ;Config register IDLOC7 @ 0x20000E
 14180                           ;	unspecified, using default values
 14181   20000E                     	org	2097166
 14182   20000E  0FFF               	dw	4095
 14183                           
 14184                           	psect	config
 14185                           
 14186                           ;Config register CONFIG1L @ 0x300000
 14187                           ;	External Oscillator mode Selection bits
 14188                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14189                           ;	Power-up default value for COSC bits
 14190                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14191   300000                     	org	3145728
 14192   300000  AA                 	db	170
 14193                           
 14194                           ;Config register CONFIG1H @ 0x300001
 14195                           ;	unspecified, using default values
 14196                           ;	Clock Out Enable bit
 14197                           ;	CLKOUTEN = 0x1, unprogrammed default
 14198                           ;	Clock Switch Enable bit
 14199                           ;	CSWEN = 0x1, unprogrammed default
 14200                           ;	Fail-Safe Clock Monitor Enable bit
 14201                           ;	FCMEN = 0x1, unprogrammed default
 14202   300001                     	org	3145729
 14203   300001  FF                 	db	255
 14204                           
 14205                           ;Config register CONFIG2L @ 0x300002
 14206                           ;	unspecified, using default values
 14207                           ;	Master Clear Enable bit
 14208                           ;	MCLRE = 0x1, unprogrammed default
 14209                           ;	Power-up Timer Enable bit
 14210                           ;	PWRTE = 0x1, unprogrammed default
 14211                           ;	Low-power BOR enable bit
 14212                           ;	LPBOREN = 0x1, unprogrammed default
 14213                           ;	Brown-out Reset Enable bits
 14214                           ;	BOREN = 0x3, unprogrammed default
 14215   300002                     	org	3145730
 14216   300002  FF                 	db	255
 14217                           
 14218                           ;Config register CONFIG2H @ 0x300003
 14219                           ;	unspecified, using default values
 14220                           ;	Brown Out Reset Voltage selection bits
 14221                           ;	BORV = 0x3, unprogrammed default
 14222                           ;	ZCD Disable bit
 14223                           ;	ZCD = 0x1, unprogrammed default
 14224                           ;	PPSLOCK bit One-Way Set Enable bit
 14225                           ;	PPS1WAY = 0x1, unprogrammed default
 14226                           ;	Stack Full/Underflow Reset Enable bit
 14227                           ;	STVREN = 0x1, unprogrammed default
 14228                           ;	Debugger Enable bit
 14229                           ;	DEBUG = 0x1, unprogrammed default
 14230                           ;	Extended Instruction Set Enable bit
 14231                           ;	XINST = 0x1, unprogrammed default
 14232   300003                     	org	3145731
 14233   300003  FF                 	db	255
 14234                           
 14235                           ;Config register CONFIG3L @ 0x300004
 14236                           ;	WDT Period Select bits
 14237                           ;	WDTCPS = 0x1F, unprogrammed default
 14238                           ;	WDT operating mode
 14239                           ;	WDTE = OFF, WDT Disabled
 14240   300004                     	org	3145732
 14241   300004  9F                 	db	159
 14242                           
 14243                           ;Config register CONFIG3H @ 0x300005
 14244                           ;	unspecified, using default values
 14245                           ;	WDT Window Select bits
 14246                           ;	WDTCWS = 0x7, unprogrammed default
 14247                           ;	WDT input clock selector
 14248                           ;	WDTCCS = 0x7, unprogrammed default
 14249   300005                     	org	3145733
 14250   300005  FF                 	db	255
 14251                           
 14252                           ;Config register CONFIG4L @ 0x300006
 14253                           ;	unspecified, using default values
 14254                           ;	Write Protection Block 0
 14255                           ;	WRT0 = 0x1, unprogrammed default
 14256                           ;	Write Protection Block 1
 14257                           ;	WRT1 = 0x1, unprogrammed default
 14258                           ;	Write Protection Block 2
 14259                           ;	WRT2 = 0x1, unprogrammed default
 14260                           ;	Write Protection Block 3
 14261                           ;	WRT3 = 0x1, unprogrammed default
 14262                           ;	Write Protection Block 3
 14263                           ;	WRT4 = 0x1, unprogrammed default
 14264                           ;	Write Protection Block 3
 14265                           ;	WRT5 = 0x1, unprogrammed default
 14266                           ;	Write Protection Block 3
 14267                           ;	WRT6 = 0x1, unprogrammed default
 14268                           ;	Write Protection Block 3
 14269                           ;	WRT7 = 0x1, unprogrammed default
 14270   300006                     	org	3145734
 14271   300006  FF                 	db	255
 14272                           
 14273                           ;Config register CONFIG4H @ 0x300007
 14274                           ;	unspecified, using default values
 14275                           ;	Configuration Register Write Protection bit
 14276                           ;	WRTC = 0x1, unprogrammed default
 14277                           ;	Boot Block Write Protection bit
 14278                           ;	WRTB = 0x1, unprogrammed default
 14279                           ;	Data EEPROM Write Protection bit
 14280                           ;	WRTD = 0x1, unprogrammed default
 14281                           ;	Scanner Enable bit
 14282                           ;	SCANE = 0x1, unprogrammed default
 14283                           ;	Low Voltage Programming Enable bit
 14284                           ;	LVP = 0x1, unprogrammed default
 14285   300007                     	org	3145735
 14286   300007  FF                 	db	255
 14287                           
 14288                           ;Config register CONFIG5L @ 0x300008
 14289                           ;	unspecified, using default values
 14290                           ;	UserNVM Program Memory Code Protection bit
 14291                           ;	CP = 0x1, unprogrammed default
 14292                           ;	DataNVM Memory Code Protection bit
 14293                           ;	CPD = 0x1, unprogrammed default
 14294   300008                     	org	3145736
 14295   300008  FF                 	db	255
 14296                           
 14297                           ;Config register CONFIG5H @ 0x300009
 14298                           ;	unspecified, using default values
 14299   300009                     	org	3145737
 14300   300009  FF                 	db	255
 14301                           
 14302                           ;Config register CONFIG6L @ 0x30000A
 14303                           ;	unspecified, using default values
 14304                           ;	Table Read Protection Block 0
 14305                           ;	EBTR0 = 0x1, unprogrammed default
 14306                           ;	Table Read Protection Block 1
 14307                           ;	EBTR1 = 0x1, unprogrammed default
 14308                           ;	Table Read Protection Block 2
 14309                           ;	EBTR2 = 0x1, unprogrammed default
 14310                           ;	Table Read Protection Block 3
 14311                           ;	EBTR3 = 0x1, unprogrammed default
 14312                           ;	Table Read Protection Block 4
 14313                           ;	EBTR4 = 0x1, unprogrammed default
 14314                           ;	Table Read Protection Block 5
 14315                           ;	EBTR5 = 0x1, unprogrammed default
 14316                           ;	Table Read Protection Block 6
 14317                           ;	EBTR6 = 0x1, unprogrammed default
 14318                           ;	Table Read Protection Block 7
 14319                           ;	EBTR7 = 0x1, unprogrammed default
 14320   30000A                     	org	3145738
 14321   30000A  FF                 	db	255
 14322                           
 14323                           ;Config register CONFIG6H @ 0x30000B
 14324                           ;	unspecified, using default values
 14325                           ;	Boot Block Table Read Protection bit
 14326                           ;	EBTRB = 0x1, unprogrammed default
 14327   30000B                     	org	3145739
 14328   30000B  FF                 	db	255
 14329                           tosu	equ	0xFFF
 14330                           tosh	equ	0xFFE
 14331                           tosl	equ	0xFFD
 14332                           stkptr	equ	0xFFC
 14333                           pclatu	equ	0xFFB
 14334                           pclath	equ	0xFFA
 14335                           pcl	equ	0xFF9
 14336                           tblptru	equ	0xFF8
 14337                           tblptrh	equ	0xFF7
 14338                           tblptrl	equ	0xFF6
 14339                           tablat	equ	0xFF5
 14340                           prodh	equ	0xFF4
 14341                           prodl	equ	0xFF3
 14342                           indf0	equ	0xFEF
 14343                           postinc0	equ	0xFEE
 14344                           postdec0	equ	0xFED
 14345                           preinc0	equ	0xFEC
 14346                           plusw0	equ	0xFEB
 14347                           fsr0h	equ	0xFEA
 14348                           fsr0l	equ	0xFE9
 14349                           wreg	equ	0xFE8
 14350                           indf1	equ	0xFE7
 14351                           postinc1	equ	0xFE6
 14352                           postdec1	equ	0xFE5
 14353                           preinc1	equ	0xFE4
 14354                           plusw1	equ	0xFE3
 14355                           fsr1h	equ	0xFE2
 14356                           fsr1l	equ	0xFE1
 14357                           bsr	equ	0xFE0
 14358                           indf2	equ	0xFDF
 14359                           postinc2	equ	0xFDE
 14360                           postdec2	equ	0xFDD
 14361                           preinc2	equ	0xFDC
 14362                           plusw2	equ	0xFDB
 14363                           fsr2h	equ	0xFDA
 14364                           fsr2l	equ	0xFD9
 14365                           status	equ	0xFD8
=======
  9596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9597 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9598 ;;Total ram usage:        6 bytes
  9599 ;; Hardware stack levels used: 1
  9600 ;; Hardware stack levels required when called: 4
  9601 ;; This function calls:
  9602 ;;		_fullSpeedAhead
  9603 ;;		_fullSpeedBack
  9604 ;;		_stop
  9605 ;; This function is called by:
  9606 ;;		_main
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text54
  9611   004F36                     __ptext54:
  9612                           	callstack 0
  9613   004F36                     _RetryMove:
  9614                           	callstack 26
  9615   004F36                     
  9616                           ;dc_motor.c: 296:     fullSpeedBack(mL,mR);
  9617   004F36  C019  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  9618   004F3A  C01A  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  9619   004F3E  C01B  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  9620   004F42  C01C  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  9621   004F46  EC0C  F027         	call	_fullSpeedBack	;wreg free
  9622   004F4A                     
  9623                           ;dc_motor.c: 297:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9624   004F4A  0E29               	movlw	41
  9625   004F4C  6E1E               	movwf	(??_RetryMove+1)^0,c
  9626   004F4E  0E96               	movlw	150
  9627   004F50  6E1D               	movwf	??_RetryMove^0,c
  9628   004F52  0E7F               	movlw	127
  9629   004F54                     u5757:
  9630   004F54  2EE8               	decfsz	wreg,f,c
  9631   004F56  D7FE               	bra	u5757
  9632   004F58  2E1D               	decfsz	??_RetryMove^0,f,c
  9633   004F5A  D7FC               	bra	u5757
  9634   004F5C  2E1E               	decfsz	(??_RetryMove+1)^0,f,c
  9635   004F5E  D7FA               	bra	u5757
  9636   004F60  F000               	nop	
  9637   004F62                     
  9638                           ;dc_motor.c: 298:     stop(&motorL, &motorR);
  9639   004F62  0E73               	movlw	low _motorL
  9640   004F64  6E14               	movwf	stop@mL^0,c
  9641   004F66  0E01               	movlw	high _motorL
  9642   004F68  6E15               	movwf	(stop@mL+1)^0,c
  9643   004F6A  0E6A               	movlw	low _motorR
  9644   004F6C  6E16               	movwf	stop@mR^0,c
  9645   004F6E  0E01               	movlw	high _motorR
  9646   004F70  6E17               	movwf	(stop@mR+1)^0,c
  9647   004F72  EC19  F028         	call	_stop	;wreg free
  9648   004F76                     
  9649                           ;dc_motor.c: 299:     fullSpeedAhead(mL,mR);
  9650   004F76  C019  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9651   004F7A  C01A  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9652   004F7E  C01B  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9653   004F82  C01C  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9654   004F86  EC76  F026         	call	_fullSpeedAhead	;wreg free
  9655   004F8A                     
  9656                           ;dc_motor.c: 300:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9657   004F8A  0E29               	movlw	41
  9658   004F8C  6E1E               	movwf	(??_RetryMove+1)^0,c
  9659   004F8E  0E96               	movlw	150
  9660   004F90  6E1D               	movwf	??_RetryMove^0,c
  9661   004F92  0E7F               	movlw	127
  9662   004F94                     u5767:
  9663   004F94  2EE8               	decfsz	wreg,f,c
  9664   004F96  D7FE               	bra	u5767
  9665   004F98  2E1D               	decfsz	??_RetryMove^0,f,c
  9666   004F9A  D7FC               	bra	u5767
  9667   004F9C  2E1E               	decfsz	(??_RetryMove+1)^0,f,c
  9668   004F9E  D7FA               	bra	u5767
  9669   004FA0  F000               	nop	
  9670                           
  9671                           ;dc_motor.c: 301:     stop(&motorL, &motorR);
  9672   004FA2  0E73               	movlw	low _motorL
  9673   004FA4  6E14               	movwf	stop@mL^0,c
  9674   004FA6  0E01               	movlw	high _motorL
  9675   004FA8  6E15               	movwf	(stop@mL+1)^0,c
  9676   004FAA  0E6A               	movlw	low _motorR
  9677   004FAC  6E16               	movwf	stop@mR^0,c
  9678   004FAE  0E01               	movlw	high _motorR
  9679   004FB0  6E17               	movwf	(stop@mR+1)^0,c
  9680   004FB2  EC19  F028         	call	_stop	;wreg free
  9681   004FB6  0012               	return		;funcret
  9682   004FB8                     __end_of_RetryMove:
  9683                           	callstack 0
  9684                           
  9685 ;; *************** function _fullSpeedAhead *****************
  9686 ;; Defined at:
  9687 ;;		line 146 in file "dc_motor.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9690 ;;		 -> motorL(9), 
  9691 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9692 ;;		 -> motorR(9), 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9707 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9708 ;;Total ram usage:        5 bytes
  9709 ;; Hardware stack levels used: 1
  9710 ;; Hardware stack levels required when called: 3
  9711 ;; This function calls:
  9712 ;;		_setMotorPWM
  9713 ;; This function is called by:
  9714 ;;		_main
  9715 ;;		_ForwardOneBlock
  9716 ;;		_Forwardhalfblock
  9717 ;;		_RetryMove
  9718 ;;		_go_Home
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text55
  9723   004CEC                     __ptext55:
  9724                           	callstack 0
  9725   004CEC                     _fullSpeedAhead:
  9726                           	callstack 26
  9727   004CEC                     
  9728                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  9729   004CEC  EE20 F001          	lfsr	2,1
  9730   004CF0  5014               	movf	fullSpeedAhead@mL^0,w,c
  9731   004CF2  26D9               	addwf	fsr2l,f,c
  9732   004CF4  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  9733   004CF6  22DA               	addwfc	fsr2h,f,c
  9734   004CF8  0E01               	movlw	1
  9735   004CFA  6EDF               	movwf	indf2,c
  9736                           
  9737                           ;dc_motor.c: 150:     mR->direction =1;
  9738   004CFC  EE20 F001          	lfsr	2,1
  9739   004D00  5016               	movf	fullSpeedAhead@mR^0,w,c
  9740   004D02  26D9               	addwf	fsr2l,f,c
  9741   004D04  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  9742   004D06  22DA               	addwfc	fsr2h,f,c
  9743   004D08  0E01               	movlw	1
  9744   004D0A  6EDF               	movwf	indf2,c
  9745                           
  9746                           ;dc_motor.c: 151:     while (mL->power < 50 && mR->power < 50){
  9747   004D0C  EFA8  F026         	goto	l4478
  9748   004D10                     l4470:
  9749                           
  9750                           ;dc_motor.c: 153:         mL->power+=10;
  9751   004D10  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9752   004D14  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9753   004D18  0E0A               	movlw	10
  9754   004D1A  26DF               	addwf	indf2,f,c
  9755                           
  9756                           ;dc_motor.c: 154:         mR->power+=10;
  9757   004D1C  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9758   004D20  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9759   004D24  0E0A               	movlw	10
  9760   004D26  26DF               	addwf	indf2,f,c
  9761   004D28                     
  9762                           ;dc_motor.c: 156:         setMotorPWM(mL);
  9763   004D28  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  9764   004D2C  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  9765   004D30  EC85  F022         	call	_setMotorPWM	;wreg free
  9766   004D34                     
  9767                           ;dc_motor.c: 157:         setMotorPWM(mR);
  9768   004D34  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  9769   004D38  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  9770   004D3C  EC85  F022         	call	_setMotorPWM	;wreg free
  9771   004D40                     
  9772                           ;dc_motor.c: 159:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9773   004D40  0E15               	movlw	21
  9774   004D42  6E18               	movwf	??_fullSpeedAhead^0,c
  9775   004D44  0EC6               	movlw	198
  9776   004D46                     u5777:
  9777   004D46  2EE8               	decfsz	wreg,f,c
  9778   004D48  D7FE               	bra	u5777
  9779   004D4A  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  9780   004D4C  D7FC               	bra	u5777
  9781   004D4E  D000               	nop2	
  9782   004D50                     l4478:
  9783                           
  9784                           ;dc_motor.c: 151:     while (mL->power < 50 && mR->power < 50){
  9785   004D50  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9786   004D54  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9787   004D58  0E32               	movlw	50
  9788   004D5A  60DF               	cpfslt	indf2,c
  9789   004D5C  EFB2  F026         	goto	u4281
  9790   004D60  EFB4  F026         	goto	u4280
  9791   004D64                     u4281:
  9792   004D64  EFC0  F026         	goto	l504
  9793   004D68                     u4280:
  9794   004D68  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9795   004D6C  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9796   004D70  0E31               	movlw	49
  9797   004D72  64DF               	cpfsgt	indf2,c
  9798   004D74  EFBE  F026         	goto	u4291
  9799   004D78  EFC0  F026         	goto	u4290
  9800   004D7C                     u4291:
  9801   004D7C  EF88  F026         	goto	l4470
  9802   004D80                     u4290:
  9803   004D80                     l504:
  9804   004D80  0012               	return		;funcret
  9805   004D82                     __end_of_fullSpeedAhead:
  9806                           	callstack 0
  9807                           
  9808 ;; *************** function _PinkMove *****************
  9809 ;; Defined at:
  9810 ;;		line 268 in file "dc_motor.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  9813 ;;		 -> motorL(9), 
  9814 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  9815 ;;		 -> motorR(9), 
  9816 ;; Auto vars:     Size  Location     Type
  9817 ;;		None
  9818 ;; Return value:  Size  Location     Type
  9819 ;;                  1    wreg      void 
  9820 ;; Registers used:
  9821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9822 ;; Tracked objects:
  9823 ;;		On entry : 0/0
  9824 ;;		On exit  : 0/0
  9825 ;;		Unchanged: 0/0
  9826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9831 ;;Total ram usage:        4 bytes
  9832 ;; Hardware stack levels used: 1
  9833 ;; Hardware stack levels required when called: 5
  9834 ;; This function calls:
  9835 ;;		_reverseDetect
  9836 ;;		_reverseOneBlock
  9837 ;;		_turnLeft45
  9838 ;; This function is called by:
  9839 ;;		_main
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           	psect	text56
  9844   005652                     __ptext56:
  9845                           	callstack 0
  9846   005652                     _PinkMove:
  9847                           	callstack 25
  9848   005652                     
  9849                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  9850   005652  0E73               	movlw	low _motorL
  9851   005654  6E19               	movwf	reverseDetect@mL^0,c
  9852   005656  0E01               	movlw	high _motorL
  9853   005658  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  9854   00565A  0E6A               	movlw	low _motorR
  9855   00565C  6E1B               	movwf	reverseDetect@mR^0,c
  9856   00565E  0E01               	movlw	high _motorR
  9857   005660  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  9858   005662  EC04  F02A         	call	_reverseDetect	;wreg free
  9859                           
  9860                           ;dc_motor.c: 271:     reverseOneBlock(&motorL, &motorR);
  9861   005666  0E73               	movlw	low _motorL
  9862   005668  6E19               	movwf	reverseOneBlock@mL^0,c
  9863   00566A  0E01               	movlw	high _motorL
  9864   00566C  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  9865   00566E  0E6A               	movlw	low _motorR
  9866   005670  6E1B               	movwf	reverseOneBlock@mR^0,c
  9867   005672  0E01               	movlw	high _motorR
  9868   005674  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  9869   005676  ECD7  F029         	call	_reverseOneBlock	;wreg free
  9870                           
  9871                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9872   00567A  0E73               	movlw	low _motorL
  9873   00567C  6E19               	movwf	turnLeft45@mL^0,c
  9874   00567E  0E01               	movlw	high _motorL
  9875   005680  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  9876   005682  0E6A               	movlw	low _motorR
  9877   005684  6E1B               	movwf	turnLeft45@mR^0,c
  9878   005686  0E01               	movlw	high _motorR
  9879   005688  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  9880   00568A  ECAA  F029         	call	_turnLeft45	;wreg free
  9881                           
  9882                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9883   00568E  0E73               	movlw	low _motorL
  9884   005690  6E19               	movwf	turnLeft45@mL^0,c
  9885   005692  0E01               	movlw	high _motorL
  9886   005694  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  9887   005696  0E6A               	movlw	low _motorR
  9888   005698  6E1B               	movwf	turnLeft45@mR^0,c
  9889   00569A  0E01               	movlw	high _motorR
  9890   00569C  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  9891   00569E  ECAA  F029         	call	_turnLeft45	;wreg free
  9892   0056A2  0012               	return		;funcret
  9893   0056A4                     __end_of_PinkMove:
  9894                           	callstack 0
  9895                           
  9896 ;; *************** function _turnLeft45 *****************
  9897 ;; Defined at:
  9898 ;;		line 188 in file "dc_motor.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9901 ;;		 -> motorL(9), 
  9902 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9903 ;;		 -> motorR(9), 
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;		None
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      void 
  9908 ;; Registers used:
  9909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9918 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9919 ;;Total ram usage:        6 bytes
  9920 ;; Hardware stack levels used: 1
  9921 ;; Hardware stack levels required when called: 4
  9922 ;; This function calls:
  9923 ;;		_stop
  9924 ;;		_turnLeft
  9925 ;; This function is called by:
  9926 ;;		_GreenMove
  9927 ;;		_PinkMove
  9928 ;;		_LightBlueMove
  9929 ;;		_ReverseYellow
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text57
  9934   005354                     __ptext57:
  9935                           	callstack 0
  9936   005354                     _turnLeft45:
  9937                           	callstack 24
  9938   005354                     
  9939                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  9940   005354  C019  F014         	movff	turnLeft45@mL,turnLeft@mL
  9941   005358  C01A  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  9942   00535C  C01B  F016         	movff	turnLeft45@mR,turnLeft@mR
  9943   005360  C01C  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  9944   005364  ECC1  F026         	call	_turnLeft	;wreg free
  9945   005368                     
  9946                           ;dc_motor.c: 190:     _delay((unsigned long)((120)*(64000000/4000.0)));
  9947   005368  0E0A               	movlw	10
  9948   00536A  6E1E               	movwf	(??_turnLeft45+1)^0,c
  9949   00536C  0EBE               	movlw	190
  9950   00536E  6E1D               	movwf	??_turnLeft45^0,c
  9951   005370  0E79               	movlw	121
  9952   005372                     u5787:
  9953   005372  2EE8               	decfsz	wreg,f,c
  9954   005374  D7FE               	bra	u5787
  9955   005376  2E1D               	decfsz	??_turnLeft45^0,f,c
  9956   005378  D7FC               	bra	u5787
  9957   00537A  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  9958   00537C  D7FA               	bra	u5787
  9959   00537E  F000               	nop	
  9960   005380                     
  9961                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  9962   005380  0E73               	movlw	low _motorL
  9963   005382  6E14               	movwf	stop@mL^0,c
  9964   005384  0E01               	movlw	high _motorL
  9965   005386  6E15               	movwf	(stop@mL+1)^0,c
  9966   005388  0E6A               	movlw	low _motorR
  9967   00538A  6E16               	movwf	stop@mR^0,c
  9968   00538C  0E01               	movlw	high _motorR
  9969   00538E  6E17               	movwf	(stop@mR+1)^0,c
  9970   005390  EC19  F028         	call	_stop	;wreg free
  9971                           
  9972                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9973   005394  0E52               	movlw	82
  9974   005396  6E1E               	movwf	(??_turnLeft45+1)^0,c
  9975   005398  0E2B               	movlw	43
  9976   00539A  6E1D               	movwf	??_turnLeft45^0,c
  9977   00539C  0E00               	movlw	0
  9978   00539E                     u5797:
  9979   00539E  2EE8               	decfsz	wreg,f,c
  9980   0053A0  D7FE               	bra	u5797
  9981   0053A2  2E1D               	decfsz	??_turnLeft45^0,f,c
  9982   0053A4  D7FC               	bra	u5797
  9983   0053A6  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  9984   0053A8  D7FA               	bra	u5797
  9985   0053AA  D000               	nop2	
  9986   0053AC  0012               	return		;funcret
  9987   0053AE                     __end_of_turnLeft45:
  9988                           	callstack 0
  9989                           
  9990 ;; *************** function _turnLeft *****************
  9991 ;; Defined at:
  9992 ;;		line 110 in file "dc_motor.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9995 ;;		 -> motorL(9), 
  9996 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9997 ;;		 -> motorR(9), 
  9998 ;; Auto vars:     Size  Location     Type
  9999 ;;		None
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  1    wreg      void 
 10002 ;; Registers used:
 10003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10012 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10013 ;;Total ram usage:        5 bytes
 10014 ;; Hardware stack levels used: 1
 10015 ;; Hardware stack levels required when called: 3
 10016 ;; This function calls:
 10017 ;;		_setMotorPWM
 10018 ;; This function is called by:
 10019 ;;		_turnLeft45
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           	psect	text58
 10024   004D82                     __ptext58:
 10025                           	callstack 0
 10026   004D82                     _turnLeft:
 10027                           	callstack 24
 10028   004D82                     
 10029                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
 10030   004D82  EE20 F001          	lfsr	2,1
 10031   004D86  5014               	movf	turnLeft@mL^0,w,c
 10032   004D88  26D9               	addwf	fsr2l,f,c
 10033   004D8A  5015               	movf	(turnLeft@mL+1)^0,w,c
 10034   004D8C  22DA               	addwfc	fsr2h,f,c
 10035   004D8E  0E00               	movlw	0
 10036   004D90  6EDF               	movwf	indf2,c
 10037                           
 10038                           ;dc_motor.c: 113:     mR->direction =1;
 10039   004D92  EE20 F001          	lfsr	2,1
 10040   004D96  5016               	movf	turnLeft@mR^0,w,c
 10041   004D98  26D9               	addwf	fsr2l,f,c
 10042   004D9A  5017               	movf	(turnLeft@mR+1)^0,w,c
 10043   004D9C  22DA               	addwfc	fsr2h,f,c
 10044   004D9E  0E01               	movlw	1
 10045   004DA0  6EDF               	movwf	indf2,c
 10046                           
 10047                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
 10048   004DA2  EFF3  F026         	goto	l4506
 10049   004DA6                     l4498:
 10050                           
 10051                           ;dc_motor.c: 117:         mL->power+=10;
 10052   004DA6  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10053   004DAA  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10054   004DAE  0E0A               	movlw	10
 10055   004DB0  26DF               	addwf	indf2,f,c
 10056                           
 10057                           ;dc_motor.c: 118:         mR->power+=10;
 10058   004DB2  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10059   004DB6  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10060   004DBA  0E0A               	movlw	10
 10061   004DBC  26DF               	addwf	indf2,f,c
 10062   004DBE                     
 10063                           ;dc_motor.c: 120:         setMotorPWM(mL);
 10064   004DBE  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10065   004DC2  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10066   004DC6  EC85  F022         	call	_setMotorPWM	;wreg free
 10067   004DCA                     
 10068                           ;dc_motor.c: 121:         setMotorPWM(mR);
 10069   004DCA  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10070   004DCE  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10071   004DD2  EC85  F022         	call	_setMotorPWM	;wreg free
 10072   004DD6                     
 10073                           ;dc_motor.c: 123:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10074   004DD6  0E15               	movlw	21
 10075   004DD8  6E18               	movwf	??_turnLeft^0,c
 10076   004DDA  0EC6               	movlw	198
 10077   004DDC                     u5807:
 10078   004DDC  2EE8               	decfsz	wreg,f,c
 10079   004DDE  D7FE               	bra	u5807
 10080   004DE0  2E18               	decfsz	??_turnLeft^0,f,c
 10081   004DE2  D7FC               	bra	u5807
 10082   004DE4  D000               	nop2	
 10083   004DE6                     l4506:
 10084                           
 10085                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
 10086   004DE6  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10087   004DEA  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10088   004DEE  0E46               	movlw	70
 10089   004DF0  60DF               	cpfslt	indf2,c
 10090   004DF2  EFFD  F026         	goto	u4321
 10091   004DF6  EFFF  F026         	goto	u4320
 10092   004DFA                     u4321:
 10093   004DFA  EF0B  F027         	goto	l488
 10094   004DFE                     u4320:
 10095   004DFE  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10096   004E02  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10097   004E06  0E45               	movlw	69
 10098   004E08  64DF               	cpfsgt	indf2,c
 10099   004E0A  EF09  F027         	goto	u4331
 10100   004E0E  EF0B  F027         	goto	u4330
 10101   004E12                     u4331:
 10102   004E12  EFD3  F026         	goto	l4498
 10103   004E16                     u4330:
 10104   004E16                     l488:
 10105   004E16  0012               	return		;funcret
 10106   004E18                     __end_of_turnLeft:
 10107                           	callstack 0
 10108                           
 10109 ;; *************** function _reverseOneBlock *****************
 10110 ;; Defined at:
 10111 ;;		line 202 in file "dc_motor.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;  mL              2   24[COMRAM] PTR struct DC_motor
 10114 ;;		 -> motorL(9), 
 10115 ;;  mR              2   26[COMRAM] PTR struct DC_motor
 10116 ;;		 -> motorR(9), 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;		None
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  1    wreg      void 
 10121 ;; Registers used:
 10122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10128 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10131 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10132 ;;Total ram usage:        6 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; Hardware stack levels required when called: 4
 10135 ;; This function calls:
 10136 ;;		_fullSpeedBack
 10137 ;;		_stop
 10138 ;; This function is called by:
 10139 ;;		_YellowMove
 10140 ;;		_PinkMove
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text59
 10145   0053AE                     __ptext59:
 10146                           	callstack 0
 10147   0053AE                     _reverseOneBlock:
 10148                           	callstack 25
 10149   0053AE                     
 10150                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
 10151   0053AE  C019  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10152   0053B2  C01A  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10153   0053B6  C01B  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10154   0053BA  C01C  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10155   0053BE  EC0C  F027         	call	_fullSpeedBack	;wreg free
 10156   0053C2                     
 10157                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10158   0053C2  0E52               	movlw	82
 10159   0053C4  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
 10160   0053C6  0E2B               	movlw	43
 10161   0053C8  6E1D               	movwf	??_reverseOneBlock^0,c
 10162   0053CA  0E00               	movlw	0
 10163   0053CC                     u5817:
 10164   0053CC  2EE8               	decfsz	wreg,f,c
 10165   0053CE  D7FE               	bra	u5817
 10166   0053D0  2E1D               	decfsz	??_reverseOneBlock^0,f,c
 10167   0053D2  D7FC               	bra	u5817
 10168   0053D4  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10169   0053D6  D7FA               	bra	u5817
 10170   0053D8  D000               	nop2	
 10171   0053DA                     
 10172                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
 10173   0053DA  0E73               	movlw	low _motorL
 10174   0053DC  6E14               	movwf	stop@mL^0,c
 10175   0053DE  0E01               	movlw	high _motorL
 10176   0053E0  6E15               	movwf	(stop@mL+1)^0,c
 10177   0053E2  0E6A               	movlw	low _motorR
 10178   0053E4  6E16               	movwf	stop@mR^0,c
 10179   0053E6  0E01               	movlw	high _motorR
 10180   0053E8  6E17               	movwf	(stop@mR+1)^0,c
 10181   0053EA  EC19  F028         	call	_stop	;wreg free
 10182                           
 10183                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10184   0053EE  0E52               	movlw	82
 10185   0053F0  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
 10186   0053F2  0E2B               	movlw	43
 10187   0053F4  6E1D               	movwf	??_reverseOneBlock^0,c
 10188   0053F6  0E00               	movlw	0
 10189   0053F8                     u5827:
 10190   0053F8  2EE8               	decfsz	wreg,f,c
 10191   0053FA  D7FE               	bra	u5827
 10192   0053FC  2E1D               	decfsz	??_reverseOneBlock^0,f,c
 10193   0053FE  D7FC               	bra	u5827
 10194   005400  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10195   005402  D7FA               	bra	u5827
 10196   005404  D000               	nop2	
 10197   005406  0012               	return		;funcret
 10198   005408                     __end_of_reverseOneBlock:
 10199                           	callstack 0
 10200                           
 10201 ;; *************** function _reverseDetect *****************
 10202 ;; Defined at:
 10203 ;;		line 195 in file "dc_motor.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  mL              2   24[COMRAM] PTR struct DC_motor
 10206 ;;		 -> motorL(9), 
 10207 ;;  mR              2   26[COMRAM] PTR struct DC_motor
 10208 ;;		 -> motorR(9), 
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;		None
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      void 
 10213 ;; Registers used:
 10214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10224 ;;Total ram usage:        6 bytes
 10225 ;; Hardware stack levels used: 1
 10226 ;; Hardware stack levels required when called: 4
 10227 ;; This function calls:
 10228 ;;		_fullSpeedBack
 10229 ;;		_stop
 10230 ;; This function is called by:
 10231 ;;		_RedMove
 10232 ;;		_GreenMove
 10233 ;;		_BlueMove
 10234 ;;		_YellowMove
 10235 ;;		_PinkMove
 10236 ;;		_OrangeMove
 10237 ;;		_LightBlueMove
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text60
 10242   005408                     __ptext60:
 10243                           	callstack 0
 10244   005408                     _reverseDetect:
 10245                           	callstack 24
 10246   005408                     
 10247                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
 10248   005408  C019  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10249   00540C  C01A  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10250   005410  C01B  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10251   005414  C01C  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10252   005418  EC0C  F027         	call	_fullSpeedBack	;wreg free
 10253   00541C                     
 10254                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10255   00541C  0E11               	movlw	17
 10256   00541E  6E1E               	movwf	(??_reverseDetect+1)^0,c
 10257   005420  0E3C               	movlw	60
 10258   005422  6E1D               	movwf	??_reverseDetect^0,c
 10259   005424  0ECB               	movlw	203
 10260   005426                     u5837:
 10261   005426  2EE8               	decfsz	wreg,f,c
 10262   005428  D7FE               	bra	u5837
 10263   00542A  2E1D               	decfsz	??_reverseDetect^0,f,c
 10264   00542C  D7FC               	bra	u5837
 10265   00542E  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
 10266   005430  D7FA               	bra	u5837
 10267   005432  F000               	nop	
 10268   005434                     
 10269                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
 10270   005434  0E73               	movlw	low _motorL
 10271   005436  6E14               	movwf	stop@mL^0,c
 10272   005438  0E01               	movlw	high _motorL
 10273   00543A  6E15               	movwf	(stop@mL+1)^0,c
 10274   00543C  0E6A               	movlw	low _motorR
 10275   00543E  6E16               	movwf	stop@mR^0,c
 10276   005440  0E01               	movlw	high _motorR
 10277   005442  6E17               	movwf	(stop@mR+1)^0,c
 10278   005444  EC19  F028         	call	_stop	;wreg free
 10279                           
 10280                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10281   005448  0E52               	movlw	82
 10282   00544A  6E1E               	movwf	(??_reverseDetect+1)^0,c
 10283   00544C  0E2B               	movlw	43
 10284   00544E  6E1D               	movwf	??_reverseDetect^0,c
 10285   005450  0E00               	movlw	0
 10286   005452                     u5847:
 10287   005452  2EE8               	decfsz	wreg,f,c
 10288   005454  D7FE               	bra	u5847
 10289   005456  2E1D               	decfsz	??_reverseDetect^0,f,c
 10290   005458  D7FC               	bra	u5847
 10291   00545A  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
 10292   00545C  D7FA               	bra	u5847
 10293   00545E  D000               	nop2	
 10294   005460  0012               	return		;funcret
 10295   005462                     __end_of_reverseDetect:
 10296                           	callstack 0
 10297                           
 10298 ;; *************** function _stop *****************
 10299 ;; Defined at:
 10300 ;;		line 92 in file "dc_motor.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10303 ;;		 -> motorL(9), 
 10304 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10305 ;;		 -> motorR(9), 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;		None
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  1    wreg      void 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10320 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10321 ;;Total ram usage:        5 bytes
 10322 ;; Hardware stack levels used: 1
 10323 ;; Hardware stack levels required when called: 3
 10324 ;; This function calls:
 10325 ;;		_setMotorPWM
 10326 ;; This function is called by:
 10327 ;;		_main
 10328 ;;		_turnRight45
 10329 ;;		_turnLeft45
 10330 ;;		_reverseDetect
 10331 ;;		_reverseOneBlock
 10332 ;;		_ForwardOneBlock
 10333 ;;		_Forwardhalfblock
 10334 ;;		_RetryMove
 10335 ;;		_Backhalfblock
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text61
 10340   005032                     __ptext61:
 10341                           	callstack 0
 10342   005032                     _stop:
 10343                           	callstack 27
 10344   005032                     
 10345                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
 10346   005032  EF3B  F028         	goto	l4492
 10347   005036                     l4484:
 10348                           
 10349                           ;dc_motor.c: 96:         mL->power-=10;
 10350   005036  C014  FFD9         	movff	stop@mL,fsr2l
 10351   00503A  C015  FFDA         	movff	stop@mL+1,fsr2h
 10352   00503E  0E0A               	movlw	10
 10353   005040  5EDF               	subwf	indf2,f,c
 10354                           
 10355                           ;dc_motor.c: 97:         mR->power-=10;
 10356   005042  C016  FFD9         	movff	stop@mR,fsr2l
 10357   005046  C017  FFDA         	movff	stop@mR+1,fsr2h
 10358   00504A  0E0A               	movlw	10
 10359   00504C  5EDF               	subwf	indf2,f,c
 10360   00504E                     
 10361                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10362   00504E  C014  F00E         	movff	stop@mL,setMotorPWM@m
 10363   005052  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 10364   005056  EC85  F022         	call	_setMotorPWM	;wreg free
 10365   00505A                     
 10366                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10367   00505A  C016  F00E         	movff	stop@mR,setMotorPWM@m
 10368   00505E  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 10369   005062  EC85  F022         	call	_setMotorPWM	;wreg free
 10370   005066                     
 10371                           ;dc_motor.c: 105:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10372   005066  0E15               	movlw	21
 10373   005068  6E18               	movwf	??_stop^0,c
 10374   00506A  0EC6               	movlw	198
 10375   00506C                     u5857:
 10376   00506C  2EE8               	decfsz	wreg,f,c
 10377   00506E  D7FE               	bra	u5857
 10378   005070  2E18               	decfsz	??_stop^0,f,c
 10379   005072  D7FC               	bra	u5857
 10380   005074  D000               	nop2	
 10381   005076                     l4492:
 10382                           
 10383                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
 10384   005076  C014  FFD9         	movff	stop@mL,fsr2l
 10385   00507A  C015  FFDA         	movff	stop@mL+1,fsr2h
 10386   00507E  50DF               	movf	indf2,w,c
 10387   005080  A4D8               	btfss	status,2,c
 10388   005082  EF45  F028         	goto	u4301
 10389   005086  EF47  F028         	goto	u4300
 10390   00508A                     u4301:
 10391   00508A  EF1B  F028         	goto	l4484
 10392   00508E                     u4300:
 10393   00508E  C016  FFD9         	movff	stop@mR,fsr2l
 10394   005092  C017  FFDA         	movff	stop@mR+1,fsr2h
 10395   005096  50DF               	movf	indf2,w,c
 10396   005098  A4D8               	btfss	status,2,c
 10397   00509A  EF51  F028         	goto	u4311
 10398   00509E  EF53  F028         	goto	u4310
 10399   0050A2                     u4311:
 10400   0050A2  EF1B  F028         	goto	l4484
 10401   0050A6                     u4310:
 10402   0050A6  0012               	return		;funcret
 10403   0050A8                     __end_of_stop:
 10404                           	callstack 0
 10405                           
 10406 ;; *************** function _fullSpeedBack *****************
 10407 ;; Defined at:
 10408 ;;		line 164 in file "dc_motor.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10411 ;;		 -> motorL(9), 
 10412 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10413 ;;		 -> motorR(9), 
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;		None
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      void 
 10418 ;; Registers used:
 10419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10428 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10429 ;;Total ram usage:        5 bytes
 10430 ;; Hardware stack levels used: 1
 10431 ;; Hardware stack levels required when called: 3
 10432 ;; This function calls:
 10433 ;;		_setMotorPWM
 10434 ;; This function is called by:
 10435 ;;		_reverseDetect
 10436 ;;		_reverseOneBlock
 10437 ;;		_RetryMove
 10438 ;;		_Backhalfblock
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           	psect	text62
 10443   004E18                     __ptext62:
 10444                           	callstack 0
 10445   004E18                     _fullSpeedBack:
 10446                           	callstack 24
 10447   004E18                     
 10448                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
 10449   004E18  EE20 F001          	lfsr	2,1
 10450   004E1C  5014               	movf	fullSpeedBack@mL^0,w,c
 10451   004E1E  26D9               	addwf	fsr2l,f,c
 10452   004E20  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10453   004E22  22DA               	addwfc	fsr2h,f,c
 10454   004E24  0E00               	movlw	0
 10455   004E26  6EDF               	movwf	indf2,c
 10456                           
 10457                           ;dc_motor.c: 168:     mR->direction =0;
 10458   004E28  EE20 F001          	lfsr	2,1
 10459   004E2C  5016               	movf	fullSpeedBack@mR^0,w,c
 10460   004E2E  26D9               	addwf	fsr2l,f,c
 10461   004E30  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10462   004E32  22DA               	addwfc	fsr2h,f,c
 10463   004E34  0E00               	movlw	0
 10464   004E36  6EDF               	movwf	indf2,c
 10465                           
 10466                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
 10467   004E38  EF3E  F027         	goto	l4534
 10468   004E3C                     l4526:
 10469                           
 10470                           ;dc_motor.c: 171:         mL->power+=10;
 10471   004E3C  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10472   004E40  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10473   004E44  0E0A               	movlw	10
 10474   004E46  26DF               	addwf	indf2,f,c
 10475                           
 10476                           ;dc_motor.c: 172:         mR->power+=10;
 10477   004E48  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10478   004E4C  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10479   004E50  0E0A               	movlw	10
 10480   004E52  26DF               	addwf	indf2,f,c
 10481   004E54                     
 10482                           ;dc_motor.c: 174:         setMotorPWM(mL);
 10483   004E54  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10484   004E58  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10485   004E5C  EC85  F022         	call	_setMotorPWM	;wreg free
 10486   004E60                     
 10487                           ;dc_motor.c: 175:         setMotorPWM(mR);
 10488   004E60  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10489   004E64  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10490   004E68  EC85  F022         	call	_setMotorPWM	;wreg free
 10491   004E6C                     
 10492                           ;dc_motor.c: 177:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10493   004E6C  0E15               	movlw	21
 10494   004E6E  6E18               	movwf	??_fullSpeedBack^0,c
 10495   004E70  0EC6               	movlw	198
 10496   004E72                     u5867:
 10497   004E72  2EE8               	decfsz	wreg,f,c
 10498   004E74  D7FE               	bra	u5867
 10499   004E76  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10500   004E78  D7FC               	bra	u5867
 10501   004E7A  D000               	nop2	
 10502   004E7C                     l4534:
 10503                           
 10504                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
 10505   004E7C  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10506   004E80  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10507   004E84  0E32               	movlw	50
 10508   004E86  60DF               	cpfslt	indf2,c
 10509   004E88  EF48  F027         	goto	u4361
 10510   004E8C  EF4A  F027         	goto	u4360
 10511   004E90                     u4361:
 10512   004E90  EF56  F027         	goto	l512
 10513   004E94                     u4360:
 10514   004E94  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10515   004E98  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10516   004E9C  0E31               	movlw	49
 10517   004E9E  64DF               	cpfsgt	indf2,c
 10518   004EA0  EF54  F027         	goto	u4371
 10519   004EA4  EF56  F027         	goto	u4370
 10520   004EA8                     u4371:
 10521   004EA8  EF1E  F027         	goto	l4526
 10522   004EAC                     u4370:
 10523   004EAC                     l512:
 10524   004EAC  0012               	return		;funcret
 10525   004EAE                     __end_of_fullSpeedBack:
 10526                           	callstack 0
 10527                           
 10528 ;; *************** function _setMotorPWM *****************
 10529 ;; Defined at:
 10530 ;;		line 67 in file "dc_motor.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  m               2   13[COMRAM] PTR struct DC_motor
 10533 ;;		 -> motorR(9), motorL(9), 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;  negDuty         1   18[COMRAM] unsigned char 
 10536 ;;  posDuty         1   17[COMRAM] unsigned char 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      void 
 10539 ;; Registers used:
 10540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10549 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10550 ;;Total ram usage:        6 bytes
 10551 ;; Hardware stack levels used: 1
 10552 ;; Hardware stack levels required when called: 2
 10553 ;; This function calls:
 10554 ;;		___lwdiv
 10555 ;;		___wmul
 10556 ;; This function is called by:
 10557 ;;		_stop
 10558 ;;		_turnLeft
 10559 ;;		_turnRight
 10560 ;;		_fullSpeedAhead
 10561 ;;		_fullSpeedBack
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           	psect	text63
 10566   00450A                     __ptext63:
 10567                           	callstack 0
 10568   00450A                     _setMotorPWM:
 10569                           	callstack 27
 10570   00450A                     
 10571                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
 10572   00450A  EE20 F002          	lfsr	2,2
 10573   00450E  500E               	movf	setMotorPWM@m^0,w,c
 10574   004510  26D9               	addwf	fsr2l,f,c
 10575   004512  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10576   004514  22DA               	addwfc	fsr2h,f,c
 10577   004516  50DF               	movf	indf2,w,c
 10578   004518  B4D8               	btfsc	status,2,c
 10579   00451A  EF91  F022         	goto	u3301
 10580   00451E  EF93  F022         	goto	u3300
 10581   004522                     u3301:
 10582   004522  EFC7  F022         	goto	l3922
 10583   004526                     u3300:
 10584   004526                     
 10585                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 10586   004526  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10587   00452A  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10588   00452E  50DF               	movf	indf2,w,c
 10589   004530  6E10               	movwf	??_setMotorPWM^0,c
 10590   004532  5010               	movf	??_setMotorPWM^0,w,c
 10591   004534  6E01               	movwf	___wmul@multiplier^0,c
 10592   004536  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10593   004538  EE20 F003          	lfsr	2,3
 10594   00453C  500E               	movf	setMotorPWM@m^0,w,c
 10595   00453E  26D9               	addwf	fsr2l,f,c
 10596   004540  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10597   004542  22DA               	addwfc	fsr2h,f,c
 10598   004544  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10599   004548  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10600   00454C  ECD4  F02D         	call	___wmul	;wreg free
 10601   004550  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10602   004554  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10603   004558  0E00               	movlw	0
 10604   00455A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10605   00455C  0E64               	movlw	100
 10606   00455E  6E09               	movwf	___lwdiv@divisor^0,c
 10607   004560  EC54  F028         	call	___lwdiv	;wreg free
 10608   004564  EE20 F003          	lfsr	2,3
 10609   004568  500E               	movf	setMotorPWM@m^0,w,c
 10610   00456A  26D9               	addwf	fsr2l,f,c
 10611   00456C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10612   00456E  22DA               	addwfc	fsr2h,f,c
 10613   004570  50DF               	movf	indf2,w,c
 10614   004572  6E11               	movwf	(??_setMotorPWM+1)^0,c
 10615   004574  5007               	movf	?___lwdiv^0,w,c
 10616   004576  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 10617   004578  6E12               	movwf	setMotorPWM@posDuty^0,c
 10618   00457A                     
 10619                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
 10620   00457A  EE20 F003          	lfsr	2,3
 10621   00457E  500E               	movf	setMotorPWM@m^0,w,c
 10622   004580  26D9               	addwf	fsr2l,f,c
 10623   004582  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10624   004584  22DA               	addwfc	fsr2h,f,c
 10625   004586  50DF               	movf	indf2,w,c
 10626   004588  6E13               	movwf	setMotorPWM@negDuty^0,c
 10627                           
 10628                           ;dc_motor.c: 74:     }
 10629   00458A  EFEA  F022         	goto	l3926
 10630   00458E                     l3922:
 10631                           
 10632                           ;dc_motor.c: 76:         posDuty=0;
 10633   00458E  0E00               	movlw	0
 10634   004590  6E12               	movwf	setMotorPWM@posDuty^0,c
 10635   004592                     
 10636                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10637   004592  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10638   004596  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10639   00459A  50DF               	movf	indf2,w,c
 10640   00459C  6E10               	movwf	??_setMotorPWM^0,c
 10641   00459E  5010               	movf	??_setMotorPWM^0,w,c
 10642   0045A0  6E01               	movwf	___wmul@multiplier^0,c
 10643   0045A2  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10644   0045A4  EE20 F003          	lfsr	2,3
 10645   0045A8  500E               	movf	setMotorPWM@m^0,w,c
 10646   0045AA  26D9               	addwf	fsr2l,f,c
 10647   0045AC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10648   0045AE  22DA               	addwfc	fsr2h,f,c
 10649   0045B0  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10650   0045B4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10651   0045B8  ECD4  F02D         	call	___wmul	;wreg free
 10652   0045BC  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10653   0045C0  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10654   0045C4  0E00               	movlw	0
 10655   0045C6  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10656   0045C8  0E64               	movlw	100
 10657   0045CA  6E09               	movwf	___lwdiv@divisor^0,c
 10658   0045CC  EC54  F028         	call	___lwdiv	;wreg free
 10659   0045D0  5007               	movf	?___lwdiv^0,w,c
 10660   0045D2  6E13               	movwf	setMotorPWM@negDuty^0,c
 10661   0045D4                     l3926:
 10662                           
 10663                           ;dc_motor.c: 80:     if (m->direction) {
 10664   0045D4  EE20 F001          	lfsr	2,1
 10665   0045D8  500E               	movf	setMotorPWM@m^0,w,c
 10666   0045DA  26D9               	addwf	fsr2l,f,c
 10667   0045DC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10668   0045DE  22DA               	addwfc	fsr2h,f,c
 10669   0045E0  50DF               	movf	indf2,w,c
 10670   0045E2  B4D8               	btfsc	status,2,c
 10671   0045E4  EFF6  F022         	goto	u3311
 10672   0045E8  EFF8  F022         	goto	u3310
 10673   0045EC                     u3311:
 10674   0045EC  EF1A  F023         	goto	l3930
 10675   0045F0                     u3310:
 10676   0045F0                     
 10677                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 10678   0045F0  EE20 F005          	lfsr	2,5
 10679   0045F4  500E               	movf	setMotorPWM@m^0,w,c
 10680   0045F6  26D9               	addwf	fsr2l,f,c
 10681   0045F8  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10682   0045FA  22DA               	addwfc	fsr2h,f,c
 10683   0045FC  CFDE F010          	movff	postinc2,??_setMotorPWM
 10684   004600  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10685   004604  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10686   004608  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10687   00460C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10688                           
 10689                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 10690   004610  EE20 F007          	lfsr	2,7
 10691   004614  500E               	movf	setMotorPWM@m^0,w,c
 10692   004616  26D9               	addwf	fsr2l,f,c
 10693   004618  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10694   00461A  22DA               	addwfc	fsr2h,f,c
 10695   00461C  CFDE F010          	movff	postinc2,??_setMotorPWM
 10696   004620  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10697   004624  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10698   004628  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10699   00462C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10700                           
 10701                           ;dc_motor.c: 85:     } else {
 10702   004630  EF3A  F023         	goto	l474
 10703   004634                     l3930:
 10704                           
 10705                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 10706   004634  EE20 F005          	lfsr	2,5
 10707   004638  500E               	movf	setMotorPWM@m^0,w,c
 10708   00463A  26D9               	addwf	fsr2l,f,c
 10709   00463C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10710   00463E  22DA               	addwfc	fsr2h,f,c
 10711   004640  CFDE F010          	movff	postinc2,??_setMotorPWM
 10712   004644  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10713   004648  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10714   00464C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10715   004650  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10716                           
 10717                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 10718   004654  EE20 F007          	lfsr	2,7
 10719   004658  500E               	movf	setMotorPWM@m^0,w,c
 10720   00465A  26D9               	addwf	fsr2l,f,c
 10721   00465C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10722   00465E  22DA               	addwfc	fsr2h,f,c
 10723   004660  CFDE F010          	movff	postinc2,??_setMotorPWM
 10724   004664  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10725   004668  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10726   00466C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10727   004670  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10728   004674                     l474:
 10729   004674  0012               	return		;funcret
 10730   004676                     __end_of_setMotorPWM:
 10731                           	callstack 0
 10732                           
 10733 ;; *************** function ___wmul *****************
 10734 ;; Defined at:
 10735 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;  multiplier      2    0[COMRAM] unsigned int 
 10738 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  product         2    4[COMRAM] unsigned int 
 10741 ;; Return value:  Size  Location     Type
 10742 ;;                  2    0[COMRAM] unsigned int 
 10743 ;; Registers used:
 10744 ;;		wreg, status,2, status,0, prodl, prodh
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10754 ;;Total ram usage:        6 bytes
 10755 ;; Hardware stack levels used: 1
 10756 ;; Hardware stack levels required when called: 1
 10757 ;; This function calls:
 10758 ;;		Nothing
 10759 ;; This function is called by:
 10760 ;;		_setMotorPWM
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           	psect	text64
 10765   005BA8                     __ptext64:
 10766                           	callstack 0
 10767   005BA8                     ___wmul:
 10768                           	callstack 27
 10769   005BA8  5001               	movf	___wmul@multiplier^0,w,c
 10770   005BAA  0203               	mulwf	___wmul@multiplicand^0,c
 10771   005BAC  CFF3 F005          	movff	prodl,___wmul@product
 10772   005BB0  CFF4 F006          	movff	prodh,___wmul@product+1
 10773   005BB4  5001               	movf	___wmul@multiplier^0,w,c
 10774   005BB6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10775   005BB8  50F3               	movf	243,w,c
 10776   005BBA  2606               	addwf	(___wmul@product+1)^0,f,c
 10777   005BBC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10778   005BBE  0203               	mulwf	___wmul@multiplicand^0,c
 10779   005BC0  50F3               	movf	243,w,c
 10780   005BC2  2606               	addwf	(___wmul@product+1)^0,f,c
 10781   005BC4  C005  F001         	movff	___wmul@product,?___wmul
 10782   005BC8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10783   005BCC  0012               	return		;funcret
 10784   005BCE                     __end_of___wmul:
 10785                           	callstack 0
 10786                           
 10787 ;; *************** function ___lwdiv *****************
 10788 ;; Defined at:
 10789 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  dividend        2    6[COMRAM] unsigned int 
 10792 ;;  divisor         2    8[COMRAM] unsigned int 
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;  quotient        2   10[COMRAM] unsigned int 
 10795 ;;  counter         1   12[COMRAM] unsigned char 
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  2    6[COMRAM] unsigned int 
 10798 ;; Registers used:
 10799 ;;		wreg, status,2, status,0
 10800 ;; Tracked objects:
 10801 ;;		On entry : 0/0
 10802 ;;		On exit  : 0/0
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10806 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10808 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10809 ;;Total ram usage:        7 bytes
 10810 ;; Hardware stack levels used: 1
 10811 ;; Hardware stack levels required when called: 1
 10812 ;; This function calls:
 10813 ;;		Nothing
 10814 ;; This function is called by:
 10815 ;;		_setMotorPWM
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           	psect	text65
 10820   0050A8                     __ptext65:
 10821                           	callstack 0
 10822   0050A8                     ___lwdiv:
 10823                           	callstack 27
 10824   0050A8  0E00               	movlw	0
 10825   0050AA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10826   0050AC  0E00               	movlw	0
 10827   0050AE  6E0B               	movwf	___lwdiv@quotient^0,c
 10828   0050B0  5009               	movf	___lwdiv@divisor^0,w,c
 10829   0050B2  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10830   0050B4  B4D8               	btfsc	status,2,c
 10831   0050B6  EF5F  F028         	goto	u3261
 10832   0050BA  EF61  F028         	goto	u3260
 10833   0050BE                     u3261:
 10834   0050BE  EF89  F028         	goto	l1136
 10835   0050C2                     u3260:
 10836   0050C2  0E01               	movlw	1
 10837   0050C4  6E0D               	movwf	___lwdiv@counter^0,c
 10838   0050C6  EF69  F028         	goto	l3894
 10839   0050CA                     l3892:
 10840   0050CA  90D8               	bcf	status,0,c
 10841   0050CC  3609               	rlcf	___lwdiv@divisor^0,f,c
 10842   0050CE  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10843   0050D0  2A0D               	incf	___lwdiv@counter^0,f,c
 10844   0050D2                     l3894:
 10845   0050D2  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10846   0050D4  EF6E  F028         	goto	u3271
 10847   0050D8  EF70  F028         	goto	u3270
 10848   0050DC                     u3271:
 10849   0050DC  EF65  F028         	goto	l3892
 10850   0050E0                     u3270:
 10851   0050E0                     l3896:
 10852   0050E0  90D8               	bcf	status,0,c
 10853   0050E2  360B               	rlcf	___lwdiv@quotient^0,f,c
 10854   0050E4  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10855   0050E6  5009               	movf	___lwdiv@divisor^0,w,c
 10856   0050E8  5C07               	subwf	___lwdiv@dividend^0,w,c
 10857   0050EA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10858   0050EC  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10859   0050EE  A0D8               	btfss	status,0,c
 10860   0050F0  EF7C  F028         	goto	u3281
 10861   0050F4  EF7E  F028         	goto	u3280
 10862   0050F8                     u3281:
 10863   0050F8  EF83  F028         	goto	l3904
 10864   0050FC                     u3280:
 10865   0050FC  5009               	movf	___lwdiv@divisor^0,w,c
 10866   0050FE  5E07               	subwf	___lwdiv@dividend^0,f,c
 10867   005100  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10868   005102  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10869   005104  800B               	bsf	___lwdiv@quotient^0,0,c
 10870   005106                     l3904:
 10871   005106  90D8               	bcf	status,0,c
 10872   005108  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10873   00510A  3209               	rrcf	___lwdiv@divisor^0,f,c
 10874   00510C  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10875   00510E  EF70  F028         	goto	l3896
 10876   005112                     l1136:
 10877   005112  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10878   005116  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10879   00511A  0012               	return		;funcret
 10880   00511C                     __end_of___lwdiv:
 10881                           	callstack 0
 10882                           
 10883 ;; *************** function _Interrupts_init *****************
 10884 ;; Defined at:
 10885 ;;		line 12 in file "interrupts.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;		None
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;		None
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  1    wreg      void 
 10892 ;; Registers used:
 10893 ;;		None
 10894 ;; Tracked objects:
 10895 ;;		On entry : 0/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10903 ;;Total ram usage:        0 bytes
 10904 ;; Hardware stack levels used: 1
 10905 ;; Hardware stack levels required when called: 1
 10906 ;; This function calls:
 10907 ;;		Nothing
 10908 ;; This function is called by:
 10909 ;;		_main
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text66
 10914   005C74                     __ptext66:
 10915                           	callstack 0
 10916   005C74                     _Interrupts_init:
 10917                           	callstack 29
 10918   005C74  0012               	return		;funcret
 10919   005C76                     __end_of_Interrupts_init:
 10920                           	callstack 0
 10921                           
 10922 ;; *************** function _Colour_decider *****************
 10923 ;; Defined at:
 10924 ;;		line 125 in file "color.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  vals            2   74[COMRAM] PTR struct RGB
 10927 ;;		 -> vals(8), 
 10928 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 10929 ;;		 -> rel(12), 
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;  RGB_col        12    6[BANK0 ] float [3]
 10932 ;;  Hue             4   28[BANK0 ] float 
 10933 ;;  Cmin            4   22[BANK0 ] float 
 10934 ;;  Cmax            4   18[BANK0 ] float 
 10935 ;;  i               2   26[BANK0 ] int 
 10936 ;;  Cmax_i          2    4[BANK0 ] int 
 10937 ;; Return value:  Size  Location     Type
 10938 ;;                  2   74[COMRAM] int 
 10939 ;; Registers used:
 10940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 0/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10947 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10949 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10950 ;;Total ram usage:       38 bytes
 10951 ;; Hardware stack levels used: 1
 10952 ;; Hardware stack levels required when called: 3
 10953 ;; This function calls:
 10954 ;;		___fladd
 10955 ;;		___fldiv
 10956 ;;		___fleq
 10957 ;;		___flge
 10958 ;;		___flmul
 10959 ;;		___flsub
 10960 ;;		___xxtofl
 10961 ;; This function is called by:
 10962 ;;		_main
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           	psect	text67
 10967   000E5A                     __ptext67:
 10968                           	callstack 0
 10969   000E5A                     _Colour_decider:
 10970                           	callstack 27
 10971   000E5A                     
 10972                           ;color.c: 126:     float Cmax = 0;
 10973   000E5A  0E00               	movlw	0
 10974   000E5C  0100               	movlb	0	; () banked
 10975   000E5E  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 10976   000E60  0E00               	movlw	0
 10977   000E62  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 10978   000E64  0E00               	movlw	0
 10979   000E66  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 10980   000E68  0E00               	movlw	0
 10981   000E6A  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 10982                           
 10983                           ;color.c: 127:     float Cmin= 100000;
 10984   000E6C  0E00               	movlw	0
 10985   000E6E  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 10986   000E70  0E50               	movlw	80
 10987   000E72  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 10988   000E74  0EC3               	movlw	195
 10989   000E76  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 10990   000E78  0E47               	movlw	71
 10991   000E7A  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 10992                           
 10993                           ;color.c: 128:     int Cmax_i =4;
 10994   000E7C  0E00               	movlw	0
 10995   000E7E  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 10996   000E80  0E04               	movlw	4
 10997   000E82  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 10998   000E84                     
 10999                           ; BSR set to: 0
 11000                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11001   000E84  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11002   000E88  0E0B               	movlw	11
 11003   000E8A                     u4981:
 11004   000E8A  6ADE               	clrf	postinc2,c
 11005   000E8C  06E8               	decf	wreg,f,c
 11006   000E8E  E2FD               	bc	u4981
 11007   000E90                     
 11008                           ; BSR set to: 0
 11009   000E90  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11010   000E94  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11011   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
 11012   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11013   000EA0  0E00               	movlw	0
 11014   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11015   000EA4  0EFF               	movlw	-1
 11016   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
 11017   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
 11018   000EAA  0E01               	movlw	1
 11019   000EAC  ECE7  F020         	call	___xxtofl
 11020   000EB0  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11021   000EB4  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11022   000EB8  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11023   000EBC  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11024   000EC0  EE20 F002          	lfsr	2,2
 11025   000EC4  504B               	movf	Colour_decider@vals^0,w,c
 11026   000EC6  26D9               	addwf	fsr2l,f,c
 11027   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11028   000ECA  22DA               	addwfc	fsr2h,f,c
 11029   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
 11030   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11031   000ED4  0E00               	movlw	0
 11032   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11033   000ED8  0EFF               	movlw	-1
 11034   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
 11035   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
 11036   000EDE  0E01               	movlw	1
 11037   000EE0  ECE7  F020         	call	___xxtofl
 11038   000EE4  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 11039   000EE8  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 11040   000EEC  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 11041   000EF0  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 11042   000EF4  EE20 F004          	lfsr	2,4
 11043   000EF8  504B               	movf	Colour_decider@vals^0,w,c
 11044   000EFA  26D9               	addwf	fsr2l,f,c
 11045   000EFC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11046   000EFE  22DA               	addwfc	fsr2h,f,c
 11047   000F00  CFDE F001          	movff	postinc2,___xxtofl@val
 11048   000F04  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11049   000F08  0E00               	movlw	0
 11050   000F0A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11051   000F0C  0EFF               	movlw	-1
 11052   000F0E  6E03               	movwf	(___xxtofl@val+2)^0,c
 11053   000F10  6E04               	movwf	(___xxtofl@val+3)^0,c
 11054   000F12  0E01               	movlw	1
 11055   000F14  ECE7  F020         	call	___xxtofl
 11056   000F18  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 11057   000F1C  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 11058   000F20  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 11059   000F24  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 11060   000F28                     
 11061                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 11062   000F28  0E00               	movlw	0
 11063   000F2A  0100               	movlb	0	; () banked
 11064   000F2C  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 11065   000F2E  0E00               	movlw	0
 11066   000F30  6F7A               	movwf	Colour_decider@i& (0+255),b
 11067   000F32                     l5136:
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 11071   000F32  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 11072   000F36  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 11073   000F3A  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 11074   000F3E  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 11075   000F42  0E66               	movlw	low Colour_decider@RGB_col
 11076   000F44  6E4F               	movwf	??_Colour_decider^0,c
 11077   000F46  0E00               	movlw	high Colour_decider@RGB_col
 11078   000F48  6E50               	movwf	(??_Colour_decider+1)^0,c
 11079   000F4A  90D8               	bcf	status,0,c
 11080   000F4C  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11081   000F4E  6ED9               	movwf	fsr2l,c
 11082   000F50  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11083   000F52  6EDA               	movwf	fsr2h,c
 11084   000F54  90D8               	bcf	status,0,c
 11085   000F56  36D9               	rlcf	fsr2l,f,c
 11086   000F58  36DA               	rlcf	fsr2h,f,c
 11087   000F5A  504F               	movf	??_Colour_decider^0,w,c
 11088   000F5C  26D9               	addwf	fsr2l,f,c
 11089   000F5E  5050               	movf	(??_Colour_decider+1)^0,w,c
 11090   000F60  22DA               	addwfc	fsr2h,f,c
 11091   000F62  CFDE F02E          	movff	postinc2,___flge@ff2
 11092   000F66  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11093   000F6A  CFDE F030          	movff	postinc2,___flge@ff2+2
 11094   000F6E  CFDE F031          	movff	postinc2,___flge@ff2+3
 11095   000F72  EC70  F024         	call	___flge	;wreg free
 11096   000F76  B0D8               	btfsc	status,0,c
 11097   000F78  EFC0  F007         	goto	u4991
 11098   000F7C  EFC2  F007         	goto	u4990
 11099   000F80                     u4991:
 11100   000F80  EFDF  F007         	goto	l5142
 11101   000F84                     u4990:
 11102   000F84                     
 11103                           ;color.c: 137:             Cmax=RGB_col[i];
 11104   000F84  0E66               	movlw	low Colour_decider@RGB_col
 11105   000F86  6E4F               	movwf	??_Colour_decider^0,c
 11106   000F88  0E00               	movlw	high Colour_decider@RGB_col
 11107   000F8A  6E50               	movwf	(??_Colour_decider+1)^0,c
 11108   000F8C  90D8               	bcf	status,0,c
 11109   000F8E  0100               	movlb	0	; () banked
 11110   000F90  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11111   000F92  6ED9               	movwf	fsr2l,c
 11112   000F94  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11113   000F96  6EDA               	movwf	fsr2h,c
 11114   000F98  90D8               	bcf	status,0,c
 11115   000F9A  36D9               	rlcf	fsr2l,f,c
 11116   000F9C  36DA               	rlcf	fsr2h,f,c
 11117   000F9E  504F               	movf	??_Colour_decider^0,w,c
 11118   000FA0  26D9               	addwf	fsr2l,f,c
 11119   000FA2  5050               	movf	(??_Colour_decider+1)^0,w,c
 11120   000FA4  22DA               	addwfc	fsr2h,f,c
 11121   000FA6  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 11122   000FAA  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 11123   000FAE  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 11124   000FB2  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 11125   000FB6                     
 11126                           ; BSR set to: 0
 11127                           ;color.c: 138:             Cmax_i=i;
 11128   000FB6  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 11129   000FBA  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 11130   000FBE                     l5142:
 11131                           
 11132                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 11133   000FBE  0E66               	movlw	low Colour_decider@RGB_col
 11134   000FC0  6E4F               	movwf	??_Colour_decider^0,c
 11135   000FC2  0E00               	movlw	high Colour_decider@RGB_col
 11136   000FC4  6E50               	movwf	(??_Colour_decider+1)^0,c
 11137   000FC6  90D8               	bcf	status,0,c
 11138   000FC8  0100               	movlb	0	; () banked
 11139   000FCA  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11140   000FCC  6ED9               	movwf	fsr2l,c
 11141   000FCE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11142   000FD0  6EDA               	movwf	fsr2h,c
 11143   000FD2  90D8               	bcf	status,0,c
 11144   000FD4  36D9               	rlcf	fsr2l,f,c
 11145   000FD6  36DA               	rlcf	fsr2h,f,c
 11146   000FD8  504F               	movf	??_Colour_decider^0,w,c
 11147   000FDA  26D9               	addwf	fsr2l,f,c
 11148   000FDC  5050               	movf	(??_Colour_decider+1)^0,w,c
 11149   000FDE  22DA               	addwfc	fsr2h,f,c
 11150   000FE0  CFDE F02A          	movff	postinc2,___flge@ff1
 11151   000FE4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11152   000FE8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11153   000FEC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11154   000FF0  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 11155   000FF4  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 11156   000FF8  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 11157   000FFC  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 11158   001000  EC70  F024         	call	___flge	;wreg free
 11159   001004  B0D8               	btfsc	status,0,c
 11160   001006  EF07  F008         	goto	u5001
 11161   00100A  EF09  F008         	goto	u5000
 11162   00100E                     u5001:
 11163   00100E  EF22  F008         	goto	l5146
 11164   001012                     u5000:
 11165   001012  0E66               	movlw	low Colour_decider@RGB_col
 11166   001014  6E4F               	movwf	??_Colour_decider^0,c
 11167   001016  0E00               	movlw	high Colour_decider@RGB_col
 11168   001018  6E50               	movwf	(??_Colour_decider+1)^0,c
 11169   00101A  90D8               	bcf	status,0,c
 11170   00101C  0100               	movlb	0	; () banked
 11171   00101E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11172   001020  6ED9               	movwf	fsr2l,c
 11173   001022  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11174   001024  6EDA               	movwf	fsr2h,c
 11175   001026  90D8               	bcf	status,0,c
 11176   001028  36D9               	rlcf	fsr2l,f,c
 11177   00102A  36DA               	rlcf	fsr2h,f,c
 11178   00102C  504F               	movf	??_Colour_decider^0,w,c
 11179   00102E  26D9               	addwf	fsr2l,f,c
 11180   001030  5050               	movf	(??_Colour_decider+1)^0,w,c
 11181   001032  22DA               	addwfc	fsr2h,f,c
 11182   001034  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 11183   001038  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 11184   00103C  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 11185   001040  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 11186   001044                     l5146:
 11187                           
 11188                           ;color.c: 141:     }
 11189   001044  0100               	movlb	0	; () banked
 11190   001046  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 11191   001048  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 11192   00104A                     
 11193                           ; BSR set to: 0
 11194   00104A  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 11195   00104C  EF31  F008         	goto	u5011
 11196   001050  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 11197   001052  E109               	bnz	u5010
 11198   001054  0E03               	movlw	3
 11199   001056  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 11200   001058  A0D8               	btfss	status,0,c
 11201   00105A  EF31  F008         	goto	u5011
 11202   00105E  EF33  F008         	goto	u5010
 11203   001062                     u5011:
 11204   001062  EF99  F007         	goto	l5136
 11205   001066                     u5010:
 11206   001066                     
 11207                           ; BSR set to: 0
 11208                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 11209   001066  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11210   00106A  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11211   00106E  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11212   001072  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11213   001076  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11214   00107A  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11215   00107E  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11216   001082  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11217   001086  EC40  F02C         	call	___flsub	;wreg free
 11218   00108A  C02A  F032         	movff	?___flsub,___fleq@ff1
 11219   00108E  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 11220   001092  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 11221   001096  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 11222   00109A  0E00               	movlw	0
 11223   00109C  6E36               	movwf	___fleq@ff2^0,c
 11224   00109E  0E00               	movlw	0
 11225   0010A0  6E37               	movwf	(___fleq@ff2+1)^0,c
 11226   0010A2  0E00               	movlw	0
 11227   0010A4  6E38               	movwf	(___fleq@ff2+2)^0,c
 11228   0010A6  0E00               	movlw	0
 11229   0010A8  6E39               	movwf	(___fleq@ff2+3)^0,c
 11230   0010AA  ECD6  F025         	call	___fleq	;wreg free
 11231   0010AE  A0D8               	btfss	status,0,c
 11232   0010B0  EF5C  F008         	goto	u5021
 11233   0010B4  EF5E  F008         	goto	u5020
 11234   0010B8                     u5021:
 11235   0010B8  EF64  F008         	goto	l5156
 11236   0010BC                     u5020:
 11237   0010BC                     l5152:
 11238   0010BC  0E00               	movlw	0
 11239   0010BE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11240   0010C0  0E00               	movlw	0
 11241   0010C2  6E4B               	movwf	?_Colour_decider^0,c
 11242   0010C4  EF9A  F00C         	goto	l70
 11243   0010C8                     l5156:
 11244                           
 11245                           ;color.c: 146:     if (Cmax_i==0){
 11246   0010C8  0100               	movlb	0	; () banked
 11247   0010CA  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 11248   0010CC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11249   0010CE  A4D8               	btfss	status,2,c
 11250   0010D0  EF6C  F008         	goto	u5031
 11251   0010D4  EF6E  F008         	goto	u5030
 11252   0010D8                     u5031:
 11253   0010D8  EFE2  F008         	goto	l5164
 11254   0010DC                     u5030:
 11255   0010DC                     
 11256                           ; BSR set to: 0
 11257                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 11258   0010DC  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11259   0010E0  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11260   0010E4  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11261   0010E8  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11262   0010EC  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11263   0010F0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11264   0010F4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11265   0010F8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11266   0010FC  EC40  F02C         	call	___flsub	;wreg free
 11267   001100  C02A  F036         	movff	?___flsub,___fldiv@a
 11268   001104  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11269   001108  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11270   00110C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11271   001110  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 11272   001114  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 11273   001118  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 11274   00111C  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 11275   001120  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 11276   001124  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 11277   001128  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 11278   00112C  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 11279   001130  EC40  F02C         	call	___flsub	;wreg free
 11280   001134  C02A  F032         	movff	?___flsub,___fldiv@b
 11281   001138  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11282   00113C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11283   001140  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11284   001144  EC9F  F018         	call	___fldiv	;wreg free
 11285   001148  C032  F011         	movff	?___fldiv,___flmul@b
 11286   00114C  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 11287   001150  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 11288   001154  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 11289   001158  0E00               	movlw	0
 11290   00115A  6E15               	movwf	___flmul@a^0,c
 11291   00115C  0E00               	movlw	0
 11292   00115E  6E16               	movwf	(___flmul@a+1)^0,c
 11293   001160  0E70               	movlw	112
 11294   001162  6E17               	movwf	(___flmul@a+2)^0,c
 11295   001164  0E42               	movlw	66
 11296   001166  6E18               	movwf	(___flmul@a+3)^0,c
 11297   001168  EC8A  F016         	call	___flmul	;wreg free
 11298   00116C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11299   001170  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11300   001174  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11301   001178  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11302   00117C                     
 11303                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 11304   00117C  0100               	movlb	0	; () banked
 11305   00117E  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 11306   001180  EFC6  F008         	goto	u5040
 11307   001184  EFC4  F008         	goto	u5041
 11308   001188                     u5041:
 11309   001188  EFC1  F009         	goto	l5174
 11310   00118C                     u5040:
 11311   00118C                     
 11312                           ; BSR set to: 0
 11313   00118C  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 11314   001190  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 11315   001194  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 11316   001198  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 11317   00119C  0E00               	movlw	0
 11318   00119E  6E05               	movwf	___fladd@a^0,c
 11319   0011A0  0E00               	movlw	0
 11320   0011A2  6E06               	movwf	(___fladd@a+1)^0,c
 11321   0011A4  0EB4               	movlw	180
 11322   0011A6  6E07               	movwf	(___fladd@a+2)^0,c
 11323   0011A8  0E43               	movlw	67
 11324   0011AA  6E08               	movwf	(___fladd@a+3)^0,c
 11325   0011AC  EC2A  F014         	call	___fladd	;wreg free
 11326   0011B0  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 11327   0011B4  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 11328   0011B8  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 11329   0011BC  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 11330   0011C0  EFC1  F009         	goto	l5174
 11331   0011C4                     l5164:
 11332                           
 11333                           ; BSR set to: 0
 11334   0011C4  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 11335   0011C6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11336   0011C8  A4D8               	btfss	status,2,c
 11337   0011CA  EFE9  F008         	goto	u5051
 11338   0011CE  EFEB  F008         	goto	u5050
 11339   0011D2                     u5051:
 11340   0011D2  EF57  F009         	goto	l5170
 11341   0011D6                     u5050:
 11342   0011D6                     
 11343                           ; BSR set to: 0
 11344                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11345   0011D6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11346   0011DA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11347   0011DE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11348   0011E2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11349   0011E6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11350   0011EA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11351   0011EE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11352   0011F2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11353   0011F6  EC40  F02C         	call	___flsub	;wreg free
 11354   0011FA  C02A  F036         	movff	?___flsub,___fldiv@a
 11355   0011FE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11356   001202  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11357   001206  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11358   00120A  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 11359   00120E  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 11360   001212  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 11361   001216  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 11362   00121A  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 11363   00121E  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 11364   001222  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 11365   001226  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 11366   00122A  EC40  F02C         	call	___flsub	;wreg free
 11367   00122E  C02A  F032         	movff	?___flsub,___fldiv@b
 11368   001232  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11369   001236  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11370   00123A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11371   00123E  EC9F  F018         	call	___fldiv	;wreg free
 11372   001242  C032  F060         	movff	?___fldiv,_Colour_decider$2910
 11373   001246  C033  F061         	movff	?___fldiv+1,_Colour_decider$2910+1
 11374   00124A  C034  F062         	movff	?___fldiv+2,_Colour_decider$2910+2
 11375   00124E  C035  F063         	movff	?___fldiv+3,_Colour_decider$2910+3
 11376   001252                     
 11377                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11378   001252  0E00               	movlw	0
 11379   001254  6E05               	movwf	___fladd@a^0,c
 11380   001256  0E00               	movlw	0
 11381   001258  6E06               	movwf	(___fladd@a+1)^0,c
 11382   00125A  0E00               	movlw	0
 11383   00125C  6E07               	movwf	(___fladd@a+2)^0,c
 11384   00125E  0E40               	movlw	64
 11385   001260  6E08               	movwf	(___fladd@a+3)^0,c
 11386   001262  C060  F001         	movff	_Colour_decider$2910,___fladd@b
 11387   001266  C061  F002         	movff	_Colour_decider$2910+1,___fladd@b+1
 11388   00126A  C062  F003         	movff	_Colour_decider$2910+2,___fladd@b+2
 11389   00126E  C063  F004         	movff	_Colour_decider$2910+3,___fladd@b+3
 11390   001272  EC2A  F014         	call	___fladd	;wreg free
 11391   001276  C001  F011         	movff	?___fladd,___flmul@b
 11392   00127A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11393   00127E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11394   001282  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11395   001286  0E00               	movlw	0
 11396   001288  6E15               	movwf	___flmul@a^0,c
 11397   00128A  0E00               	movlw	0
 11398   00128C  6E16               	movwf	(___flmul@a+1)^0,c
 11399   00128E  0E70               	movlw	112
 11400   001290  6E17               	movwf	(___flmul@a+2)^0,c
 11401   001292  0E42               	movlw	66
 11402   001294  6E18               	movwf	(___flmul@a+3)^0,c
 11403   001296  EC8A  F016         	call	___flmul	;wreg free
 11404   00129A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11405   00129E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11406   0012A2  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11407   0012A6  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11408                           
 11409                           ;color.c: 155:     }
 11410   0012AA  EFC1  F009         	goto	l5174
 11411   0012AE                     l5170:
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11415   0012AE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11416   0012B2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11417   0012B6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11418   0012BA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11419   0012BE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11420   0012C2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11421   0012C6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11422   0012CA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11423   0012CE  EC40  F02C         	call	___flsub	;wreg free
 11424   0012D2  C02A  F036         	movff	?___flsub,___fldiv@a
 11425   0012D6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11426   0012DA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11427   0012DE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11428   0012E2  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 11429   0012E6  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 11430   0012EA  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 11431   0012EE  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 11432   0012F2  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 11433   0012F6  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 11434   0012FA  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 11435   0012FE  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 11436   001302  EC40  F02C         	call	___flsub	;wreg free
 11437   001306  C02A  F032         	movff	?___flsub,___fldiv@b
 11438   00130A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11439   00130E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11440   001312  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11441   001316  EC9F  F018         	call	___fldiv	;wreg free
 11442   00131A  C032  F060         	movff	?___fldiv,_Colour_decider$2910
 11443   00131E  C033  F061         	movff	?___fldiv+1,_Colour_decider$2910+1
 11444   001322  C034  F062         	movff	?___fldiv+2,_Colour_decider$2910+2
 11445   001326  C035  F063         	movff	?___fldiv+3,_Colour_decider$2910+3
 11446   00132A                     
 11447                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11448   00132A  0E00               	movlw	0
 11449   00132C  6E05               	movwf	___fladd@a^0,c
 11450   00132E  0E00               	movlw	0
 11451   001330  6E06               	movwf	(___fladd@a+1)^0,c
 11452   001332  0E80               	movlw	128
 11453   001334  6E07               	movwf	(___fladd@a+2)^0,c
 11454   001336  0E40               	movlw	64
 11455   001338  6E08               	movwf	(___fladd@a+3)^0,c
 11456   00133A  C060  F001         	movff	_Colour_decider$2910,___fladd@b
 11457   00133E  C061  F002         	movff	_Colour_decider$2910+1,___fladd@b+1
 11458   001342  C062  F003         	movff	_Colour_decider$2910+2,___fladd@b+2
 11459   001346  C063  F004         	movff	_Colour_decider$2910+3,___fladd@b+3
 11460   00134A  EC2A  F014         	call	___fladd	;wreg free
 11461   00134E  C001  F011         	movff	?___fladd,___flmul@b
 11462   001352  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11463   001356  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11464   00135A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11465   00135E  0E00               	movlw	0
 11466   001360  6E15               	movwf	___flmul@a^0,c
 11467   001362  0E00               	movlw	0
 11468   001364  6E16               	movwf	(___flmul@a+1)^0,c
 11469   001366  0E70               	movlw	112
 11470   001368  6E17               	movwf	(___flmul@a+2)^0,c
 11471   00136A  0E42               	movlw	66
 11472   00136C  6E18               	movwf	(___flmul@a+3)^0,c
 11473   00136E  EC8A  F016         	call	___flmul	;wreg free
 11474   001372  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11475   001376  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11476   00137A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11477   00137E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11478   001382                     l5174:
 11479                           
 11480                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 11481   001382  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11482   001386  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11483   00138A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11484   00138E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11485   001392  0E00               	movlw	0
 11486   001394  6E2E               	movwf	___flge@ff2^0,c
 11487   001396  0E00               	movlw	0
 11488   001398  6E2F               	movwf	(___flge@ff2+1)^0,c
 11489   00139A  0EA5               	movlw	165
 11490   00139C  6E30               	movwf	(___flge@ff2+2)^0,c
 11491   00139E  0E43               	movlw	67
 11492   0013A0  6E31               	movwf	(___flge@ff2+3)^0,c
 11493   0013A2  EC70  F024         	call	___flge	;wreg free
 11494   0013A6  A0D8               	btfss	status,0,c
 11495   0013A8  EFD8  F009         	goto	u5061
 11496   0013AC  EFDA  F009         	goto	u5060
 11497   0013B0                     u5061:
 11498   0013B0  EFF9  F009         	goto	l5184
 11499   0013B4                     u5060:
 11500   0013B4  0E00               	movlw	0
 11501   0013B6  6E2A               	movwf	___flge@ff1^0,c
 11502   0013B8  0E00               	movlw	0
 11503   0013BA  6E2B               	movwf	(___flge@ff1+1)^0,c
 11504   0013BC  0EB4               	movlw	180
 11505   0013BE  6E2C               	movwf	(___flge@ff1+2)^0,c
 11506   0013C0  0E43               	movlw	67
 11507   0013C2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11508   0013C4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11509   0013C8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11510   0013CC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11511   0013D0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11512   0013D4  EC70  F024         	call	___flge	;wreg free
 11513   0013D8  A0D8               	btfss	status,0,c
 11514   0013DA  EFF1  F009         	goto	u5071
 11515   0013DE  EFF3  F009         	goto	u5070
 11516   0013E2                     u5071:
 11517   0013E2  EFF9  F009         	goto	l5184
 11518   0013E6                     u5070:
 11519   0013E6                     
 11520                           ;color.c: 164:         return 1;
 11521   0013E6  0E00               	movlw	0
 11522   0013E8  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11523   0013EA  0E01               	movlw	1
 11524   0013EC  6E4B               	movwf	?_Colour_decider^0,c
 11525   0013EE  EF9A  F00C         	goto	l70
 11526   0013F2                     l5184:
 11527   0013F2  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11528   0013F6  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11529   0013FA  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11530   0013FE  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11531   001402  0E00               	movlw	0
 11532   001404  6E2E               	movwf	___flge@ff2^0,c
 11533   001406  0E00               	movlw	0
 11534   001408  6E2F               	movwf	(___flge@ff2+1)^0,c
 11535   00140A  0EA0               	movlw	160
 11536   00140C  6E30               	movwf	(___flge@ff2+2)^0,c
 11537   00140E  0E40               	movlw	64
 11538   001410  6E31               	movwf	(___flge@ff2+3)^0,c
 11539   001412  EC70  F024         	call	___flge	;wreg free
 11540   001416  A0D8               	btfss	status,0,c
 11541   001418  EF10  F00A         	goto	u5081
 11542   00141C  EF12  F00A         	goto	u5080
 11543   001420                     u5081:
 11544   001420  EF31  F00A         	goto	l5194
 11545   001424                     u5080:
 11546   001424  0E00               	movlw	0
 11547   001426  6E2A               	movwf	___flge@ff1^0,c
 11548   001428  0E00               	movlw	0
 11549   00142A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11550   00142C  0E40               	movlw	64
 11551   00142E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11552   001430  0E41               	movlw	65
 11553   001432  6E2D               	movwf	(___flge@ff1+3)^0,c
 11554   001434  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11555   001438  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11556   00143C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11557   001440  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11558   001444  EC70  F024         	call	___flge	;wreg free
 11559   001448  A0D8               	btfss	status,0,c
 11560   00144A  EF29  F00A         	goto	u5091
 11561   00144E  EF2B  F00A         	goto	u5090
 11562   001452                     u5091:
 11563   001452  EF31  F00A         	goto	l5194
 11564   001456                     u5090:
 11565   001456                     
 11566                           ;color.c: 168:         return 2;
 11567   001456  0E00               	movlw	0
 11568   001458  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11569   00145A  0E02               	movlw	2
 11570   00145C  6E4B               	movwf	?_Colour_decider^0,c
 11571   00145E  EF9A  F00C         	goto	l70
 11572   001462                     l5194:
 11573   001462  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11574   001466  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11575   00146A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11576   00146E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11577   001472  0E00               	movlw	0
 11578   001474  6E2E               	movwf	___flge@ff2^0,c
 11579   001476  0E00               	movlw	0
 11580   001478  6E2F               	movwf	(___flge@ff2+1)^0,c
 11581   00147A  0EA0               	movlw	160
 11582   00147C  6E30               	movwf	(___flge@ff2+2)^0,c
 11583   00147E  0E41               	movlw	65
 11584   001480  6E31               	movwf	(___flge@ff2+3)^0,c
 11585   001482  EC70  F024         	call	___flge	;wreg free
 11586   001486  A0D8               	btfss	status,0,c
 11587   001488  EF48  F00A         	goto	u5101
 11588   00148C  EF4A  F00A         	goto	u5100
 11589   001490                     u5101:
 11590   001490  EFCA  F00A         	goto	l5220
 11591   001494                     u5100:
 11592   001494  0E00               	movlw	0
 11593   001496  6E2A               	movwf	___flge@ff1^0,c
 11594   001498  0E00               	movlw	0
 11595   00149A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11596   00149C  0EE8               	movlw	232
 11597   00149E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11598   0014A0  0E41               	movlw	65
 11599   0014A2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11600   0014A4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11601   0014A8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11602   0014AC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11603   0014B0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11604   0014B4  EC70  F024         	call	___flge	;wreg free
 11605   0014B8  A0D8               	btfss	status,0,c
 11606   0014BA  EF61  F00A         	goto	u5111
 11607   0014BE  EF63  F00A         	goto	u5110
 11608   0014C2                     u5111:
 11609   0014C2  EFCA  F00A         	goto	l5220
 11610   0014C6                     u5110:
 11611   0014C6                     
 11612                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11613   0014C6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11614   0014CA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11615   0014CE  CFDE F02A          	movff	postinc2,___flge@ff1
 11616   0014D2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11617   0014D6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11618   0014DA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11619   0014DE  0ECD               	movlw	205
 11620   0014E0  6E2E               	movwf	___flge@ff2^0,c
 11621   0014E2  0ECC               	movlw	204
 11622   0014E4  6E2F               	movwf	(___flge@ff2+1)^0,c
 11623   0014E6  0E4C               	movlw	76
 11624   0014E8  6E30               	movwf	(___flge@ff2+2)^0,c
 11625   0014EA  0E3E               	movlw	62
 11626   0014EC  6E31               	movwf	(___flge@ff2+3)^0,c
 11627   0014EE  EC70  F024         	call	___flge	;wreg free
 11628   0014F2  A0D8               	btfss	status,0,c
 11629   0014F4  EF7E  F00A         	goto	u5121
 11630   0014F8  EF80  F00A         	goto	u5120
 11631   0014FC                     u5121:
 11632   0014FC  EF9F  F00A         	goto	l5208
 11633   001500                     u5120:
 11634   001500  0E1F               	movlw	31
 11635   001502  6E2A               	movwf	___flge@ff1^0,c
 11636   001504  0E85               	movlw	133
 11637   001506  6E2B               	movwf	(___flge@ff1+1)^0,c
 11638   001508  0E6B               	movlw	107
 11639   00150A  6E2C               	movwf	(___flge@ff1+2)^0,c
 11640   00150C  0E3E               	movlw	62
 11641   00150E  6E2D               	movwf	(___flge@ff1+3)^0,c
 11642   001510  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11643   001514  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11644   001518  CFDE F02E          	movff	postinc2,___flge@ff2
 11645   00151C  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11646   001520  CFDE F030          	movff	postinc2,___flge@ff2+2
 11647   001524  CFDE F031          	movff	postinc2,___flge@ff2+3
 11648   001528  EC70  F024         	call	___flge	;wreg free
 11649   00152C  A0D8               	btfss	status,0,c
 11650   00152E  EF9B  F00A         	goto	u5131
 11651   001532  EF9D  F00A         	goto	u5130
 11652   001536                     u5131:
 11653   001536  EF9F  F00A         	goto	l5208
 11654   00153A                     u5130:
 11655   00153A  EF5E  F008         	goto	l5152
 11656   00153E                     l5208:
 11657   00153E  EE20 F008          	lfsr	2,8
 11658   001542  504D               	movf	Colour_decider@rel^0,w,c
 11659   001544  26D9               	addwf	fsr2l,f,c
 11660   001546  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11661   001548  22DA               	addwfc	fsr2h,f,c
 11662   00154A  CFDE F02A          	movff	postinc2,___flge@ff1
 11663   00154E  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11664   001552  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11665   001556  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11666   00155A  0E29               	movlw	41
 11667   00155C  6E2E               	movwf	___flge@ff2^0,c
 11668   00155E  0E5C               	movlw	92
 11669   001560  6E2F               	movwf	(___flge@ff2+1)^0,c
 11670   001562  0E0F               	movlw	15
 11671   001564  6E30               	movwf	(___flge@ff2+2)^0,c
 11672   001566  0E3E               	movlw	62
 11673   001568  6E31               	movwf	(___flge@ff2+3)^0,c
 11674   00156A  EC70  F024         	call	___flge	;wreg free
 11675   00156E  A0D8               	btfss	status,0,c
 11676   001570  EFBC  F00A         	goto	u5141
 11677   001574  EFBE  F00A         	goto	u5140
 11678   001578                     u5141:
 11679   001578  EFC4  F00A         	goto	l5216
 11680   00157C                     u5140:
 11681   00157C                     l5210:
 11682                           
 11683                           ;color.c: 179:             return 4;
 11684   00157C  0E00               	movlw	0
 11685   00157E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11686   001580  0E04               	movlw	4
 11687   001582  6E4B               	movwf	?_Colour_decider^0,c
 11688   001584  EF9A  F00C         	goto	l70
 11689   001588                     l5216:
 11690                           
 11691                           ;color.c: 182:             return 3;
 11692   001588  0E00               	movlw	0
 11693   00158A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11694   00158C  0E03               	movlw	3
 11695   00158E  6E4B               	movwf	?_Colour_decider^0,c
 11696   001590  EF9A  F00C         	goto	l70
 11697   001594                     l5220:
 11698   001594  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11699   001598  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11700   00159C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11701   0015A0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11702   0015A4  0E00               	movlw	0
 11703   0015A6  6E2E               	movwf	___flge@ff2^0,c
 11704   0015A8  0E00               	movlw	0
 11705   0015AA  6E2F               	movwf	(___flge@ff2+1)^0,c
 11706   0015AC  0E34               	movlw	52
 11707   0015AE  6E30               	movwf	(___flge@ff2+2)^0,c
 11708   0015B0  0E42               	movlw	66
 11709   0015B2  6E31               	movwf	(___flge@ff2+3)^0,c
 11710   0015B4  EC70  F024         	call	___flge	;wreg free
 11711   0015B8  A0D8               	btfss	status,0,c
 11712   0015BA  EFE1  F00A         	goto	u5151
 11713   0015BE  EFE3  F00A         	goto	u5150
 11714   0015C2                     u5151:
 11715   0015C2  EF48  F00B         	goto	l5244
 11716   0015C6                     u5150:
 11717   0015C6  0E00               	movlw	0
 11718   0015C8  6E2A               	movwf	___flge@ff1^0,c
 11719   0015CA  0E00               	movlw	0
 11720   0015CC  6E2B               	movwf	(___flge@ff1+1)^0,c
 11721   0015CE  0EA0               	movlw	160
 11722   0015D0  6E2C               	movwf	(___flge@ff1+2)^0,c
 11723   0015D2  0E42               	movlw	66
 11724   0015D4  6E2D               	movwf	(___flge@ff1+3)^0,c
 11725   0015D6  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11726   0015DA  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11727   0015DE  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11728   0015E2  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11729   0015E6  EC70  F024         	call	___flge	;wreg free
 11730   0015EA  A0D8               	btfss	status,0,c
 11731   0015EC  EFFA  F00A         	goto	u5161
 11732   0015F0  EFFC  F00A         	goto	u5160
 11733   0015F4                     u5161:
 11734   0015F4  EF48  F00B         	goto	l5244
 11735   0015F8                     u5160:
 11736   0015F8                     
 11737                           ;color.c: 188:         if(0.15<=rel->B){
 11738   0015F8  EE20 F008          	lfsr	2,8
 11739   0015FC  504D               	movf	Colour_decider@rel^0,w,c
 11740   0015FE  26D9               	addwf	fsr2l,f,c
 11741   001600  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11742   001602  22DA               	addwfc	fsr2h,f,c
 11743   001604  CFDE F02A          	movff	postinc2,___flge@ff1
 11744   001608  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11745   00160C  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11746   001610  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11747   001614  0E9A               	movlw	154
 11748   001616  6E2E               	movwf	___flge@ff2^0,c
 11749   001618  0E99               	movlw	153
 11750   00161A  6E2F               	movwf	(___flge@ff2+1)^0,c
 11751   00161C  0E19               	movlw	25
 11752   00161E  6E30               	movwf	(___flge@ff2+2)^0,c
 11753   001620  0E3E               	movlw	62
 11754   001622  6E31               	movwf	(___flge@ff2+3)^0,c
 11755   001624  EC70  F024         	call	___flge	;wreg free
 11756   001628  A0D8               	btfss	status,0,c
 11757   00162A  EF19  F00B         	goto	u5171
 11758   00162E  EF1B  F00B         	goto	u5170
 11759   001632                     u5171:
 11760   001632  EF1D  F00B         	goto	l5232
 11761   001636                     u5170:
 11762   001636  EFBE  F00A         	goto	l5210
 11763   00163A                     l5232:
 11764   00163A  EE20 F008          	lfsr	2,8
 11765   00163E  504D               	movf	Colour_decider@rel^0,w,c
 11766   001640  26D9               	addwf	fsr2l,f,c
 11767   001642  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11768   001644  22DA               	addwfc	fsr2h,f,c
 11769   001646  CFDE F02A          	movff	postinc2,___flge@ff1
 11770   00164A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11771   00164E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11772   001652  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11773   001656  0E8F               	movlw	143
 11774   001658  6E2E               	movwf	___flge@ff2^0,c
 11775   00165A  0EC2               	movlw	194
 11776   00165C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11777   00165E  0EF5               	movlw	245
 11778   001660  6E30               	movwf	(___flge@ff2+2)^0,c
 11779   001662  0E3D               	movlw	61
 11780   001664  6E31               	movwf	(___flge@ff2+3)^0,c
 11781   001666  EC70  F024         	call	___flge	;wreg free
 11782   00166A  A0D8               	btfss	status,0,c
 11783   00166C  EF3A  F00B         	goto	u5181
 11784   001670  EF3C  F00B         	goto	u5180
 11785   001674                     u5181:
 11786   001674  EF42  F00B         	goto	l5240
 11787   001678                     u5180:
 11788   001678                     l5234:
 11789                           
 11790                           ;color.c: 192:             return 6;
 11791   001678  0E00               	movlw	0
 11792   00167A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11793   00167C  0E06               	movlw	6
 11794   00167E  6E4B               	movwf	?_Colour_decider^0,c
 11795   001680  EF9A  F00C         	goto	l70
 11796   001684                     l5240:
 11797                           
 11798                           ;color.c: 195:             return 5;
 11799   001684  0E00               	movlw	0
 11800   001686  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11801   001688  0E05               	movlw	5
 11802   00168A  6E4B               	movwf	?_Colour_decider^0,c
 11803   00168C  EF9A  F00C         	goto	l70
 11804   001690                     l5244:
 11805   001690  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11806   001694  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11807   001698  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11808   00169C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11809   0016A0  0E00               	movlw	0
 11810   0016A2  6E2E               	movwf	___flge@ff2^0,c
 11811   0016A4  0E00               	movlw	0
 11812   0016A6  6E2F               	movwf	(___flge@ff2+1)^0,c
 11813   0016A8  0EA2               	movlw	162
 11814   0016AA  6E30               	movwf	(___flge@ff2+2)^0,c
 11815   0016AC  0E42               	movlw	66
 11816   0016AE  6E31               	movwf	(___flge@ff2+3)^0,c
 11817   0016B0  EC70  F024         	call	___flge	;wreg free
 11818   0016B4  A0D8               	btfss	status,0,c
 11819   0016B6  EF5F  F00B         	goto	u5191
 11820   0016BA  EF61  F00B         	goto	u5190
 11821   0016BE                     u5191:
 11822   0016BE  EF9B  F00B         	goto	l5260
 11823   0016C2                     u5190:
 11824   0016C2  0E00               	movlw	0
 11825   0016C4  6E2A               	movwf	___flge@ff1^0,c
 11826   0016C6  0E00               	movlw	0
 11827   0016C8  6E2B               	movwf	(___flge@ff1+1)^0,c
 11828   0016CA  0EE6               	movlw	230
 11829   0016CC  6E2C               	movwf	(___flge@ff1+2)^0,c
 11830   0016CE  0E42               	movlw	66
 11831   0016D0  6E2D               	movwf	(___flge@ff1+3)^0,c
 11832   0016D2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11833   0016D6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11834   0016DA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11835   0016DE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11836   0016E2  EC70  F024         	call	___flge	;wreg free
 11837   0016E6  A0D8               	btfss	status,0,c
 11838   0016E8  EF78  F00B         	goto	u5201
 11839   0016EC  EF7A  F00B         	goto	u5200
 11840   0016F0                     u5201:
 11841   0016F0  EF9B  F00B         	goto	l5260
 11842   0016F4                     u5200:
 11843   0016F4                     
 11844                           ;color.c: 201:         if(0.15<=rel->B){
 11845   0016F4  EE20 F008          	lfsr	2,8
 11846   0016F8  504D               	movf	Colour_decider@rel^0,w,c
 11847   0016FA  26D9               	addwf	fsr2l,f,c
 11848   0016FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11849   0016FE  22DA               	addwfc	fsr2h,f,c
 11850   001700  CFDE F02A          	movff	postinc2,___flge@ff1
 11851   001704  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11852   001708  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11853   00170C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11854   001710  0E9A               	movlw	154
 11855   001712  6E2E               	movwf	___flge@ff2^0,c
 11856   001714  0E99               	movlw	153
 11857   001716  6E2F               	movwf	(___flge@ff2+1)^0,c
 11858   001718  0E19               	movlw	25
 11859   00171A  6E30               	movwf	(___flge@ff2+2)^0,c
 11860   00171C  0E3E               	movlw	62
 11861   00171E  6E31               	movwf	(___flge@ff2+3)^0,c
 11862   001720  EC70  F024         	call	___flge	;wreg free
 11863   001724  A0D8               	btfss	status,0,c
 11864   001726  EF97  F00B         	goto	u5211
 11865   00172A  EF99  F00B         	goto	u5210
 11866   00172E                     u5211:
 11867   00172E  EF3C  F00B         	goto	l5234
 11868   001732                     u5210:
 11869   001732  EFBE  F00A         	goto	l5210
 11870   001736                     l5260:
 11871   001736  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11872   00173A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11873   00173E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11874   001742  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11875   001746  0E00               	movlw	0
 11876   001748  6E2E               	movwf	___flge@ff2^0,c
 11877   00174A  0E00               	movlw	0
 11878   00174C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11879   00174E  0EF0               	movlw	240
 11880   001750  6E30               	movwf	(___flge@ff2+2)^0,c
 11881   001752  0E41               	movlw	65
 11882   001754  6E31               	movwf	(___flge@ff2+3)^0,c
 11883   001756  EC70  F024         	call	___flge	;wreg free
 11884   00175A  A0D8               	btfss	status,0,c
 11885   00175C  EFB2  F00B         	goto	u5221
 11886   001760  EFB4  F00B         	goto	u5220
 11887   001764                     u5221:
 11888   001764  EFCD  F00B         	goto	l5264
 11889   001768                     u5220:
 11890   001768  0E00               	movlw	0
 11891   00176A  6E2A               	movwf	___flge@ff1^0,c
 11892   00176C  0E00               	movlw	0
 11893   00176E  6E2B               	movwf	(___flge@ff1+1)^0,c
 11894   001770  0E68               	movlw	104
 11895   001772  6E2C               	movwf	(___flge@ff1+2)^0,c
 11896   001774  0E42               	movlw	66
 11897   001776  6E2D               	movwf	(___flge@ff1+3)^0,c
 11898   001778  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11899   00177C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11900   001780  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11901   001784  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11902   001788  EC70  F024         	call	___flge	;wreg free
 11903   00178C  B0D8               	btfsc	status,0,c
 11904   00178E  EFCB  F00B         	goto	u5231
 11905   001792  EFCD  F00B         	goto	u5230
 11906   001796                     u5231:
 11907   001796  EFBE  F00A         	goto	l5210
 11908   00179A                     u5230:
 11909   00179A                     l5264:
 11910   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11911   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11912   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11913   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11914   0017AA  0E00               	movlw	0
 11915   0017AC  6E2E               	movwf	___flge@ff2^0,c
 11916   0017AE  0E00               	movlw	0
 11917   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
 11918   0017B2  0EF0               	movlw	240
 11919   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
 11920   0017B6  0E42               	movlw	66
 11921   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
 11922   0017BA  EC70  F024         	call	___flge	;wreg free
 11923   0017BE  A0D8               	btfss	status,0,c
 11924   0017C0  EFE4  F00B         	goto	u5241
 11925   0017C4  EFE6  F00B         	goto	u5240
 11926   0017C8                     u5241:
 11927   0017C8  EF01  F00C         	goto	l5274
 11928   0017CC                     u5240:
 11929   0017CC  0E00               	movlw	0
 11930   0017CE  6E2A               	movwf	___flge@ff1^0,c
 11931   0017D0  0E00               	movlw	0
 11932   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
 11933   0017D4  0E5C               	movlw	92
 11934   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
 11935   0017D8  0E43               	movlw	67
 11936   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
 11937   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11938   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11939   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11940   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11941   0017EC  EC70  F024         	call	___flge	;wreg free
 11942   0017F0  A0D8               	btfss	status,0,c
 11943   0017F2  EFFD  F00B         	goto	u5251
 11944   0017F6  EFFF  F00B         	goto	u5250
 11945   0017FA                     u5251:
 11946   0017FA  EF01  F00C         	goto	l5274
 11947   0017FE                     u5250:
 11948   0017FE  EFBE  F00A         	goto	l5210
 11949   001802                     l5274:
 11950   001802  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11951   001806  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11952   00180A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11953   00180E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11954   001812  0E00               	movlw	0
 11955   001814  6E2E               	movwf	___flge@ff2^0,c
 11956   001816  0E00               	movlw	0
 11957   001818  6E2F               	movwf	(___flge@ff2+1)^0,c
 11958   00181A  0E60               	movlw	96
 11959   00181C  6E30               	movwf	(___flge@ff2+2)^0,c
 11960   00181E  0E41               	movlw	65
 11961   001820  6E31               	movwf	(___flge@ff2+3)^0,c
 11962   001822  EC70  F024         	call	___flge	;wreg free
 11963   001826  A0D8               	btfss	status,0,c
 11964   001828  EF18  F00C         	goto	u5261
 11965   00182C  EF1A  F00C         	goto	u5260
 11966   001830                     u5261:
 11967   001830  EF96  F00C         	goto	l5300
 11968   001834                     u5260:
 11969   001834  0E00               	movlw	0
 11970   001836  6E2A               	movwf	___flge@ff1^0,c
 11971   001838  0E00               	movlw	0
 11972   00183A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11973   00183C  0E98               	movlw	152
 11974   00183E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11975   001840  0E41               	movlw	65
 11976   001842  6E2D               	movwf	(___flge@ff1+3)^0,c
 11977   001844  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11978   001848  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11979   00184C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11980   001850  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11981   001854  EC70  F024         	call	___flge	;wreg free
 11982   001858  A0D8               	btfss	status,0,c
 11983   00185A  EF31  F00C         	goto	u5271
 11984   00185E  EF33  F00C         	goto	u5270
 11985   001862                     u5271:
 11986   001862  EF96  F00C         	goto	l5300
 11987   001866                     u5270:
 11988   001866                     
 11989                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11990   001866  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11991   00186A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11992   00186E  CFDE F02A          	movff	postinc2,___flge@ff1
 11993   001872  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11994   001876  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11995   00187A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11996   00187E  0ECD               	movlw	205
 11997   001880  6E2E               	movwf	___flge@ff2^0,c
 11998   001882  0ECC               	movlw	204
 11999   001884  6E2F               	movwf	(___flge@ff2+1)^0,c
 12000   001886  0E4C               	movlw	76
 12001   001888  6E30               	movwf	(___flge@ff2+2)^0,c
 12002   00188A  0E3E               	movlw	62
 12003   00188C  6E31               	movwf	(___flge@ff2+3)^0,c
 12004   00188E  EC70  F024         	call	___flge	;wreg free
 12005   001892  A0D8               	btfss	status,0,c
 12006   001894  EF4E  F00C         	goto	u5281
 12007   001898  EF50  F00C         	goto	u5280
 12008   00189C                     u5281:
 12009   00189C  EF6F  F00C         	goto	l5288
 12010   0018A0                     u5280:
 12011   0018A0  0E1F               	movlw	31
 12012   0018A2  6E2A               	movwf	___flge@ff1^0,c
 12013   0018A4  0E85               	movlw	133
 12014   0018A6  6E2B               	movwf	(___flge@ff1+1)^0,c
 12015   0018A8  0E6B               	movlw	107
 12016   0018AA  6E2C               	movwf	(___flge@ff1+2)^0,c
 12017   0018AC  0E3E               	movlw	62
 12018   0018AE  6E2D               	movwf	(___flge@ff1+3)^0,c
 12019   0018B0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12020   0018B4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12021   0018B8  CFDE F02E          	movff	postinc2,___flge@ff2
 12022   0018BC  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12023   0018C0  CFDE F030          	movff	postinc2,___flge@ff2+2
 12024   0018C4  CFDE F031          	movff	postinc2,___flge@ff2+3
 12025   0018C8  EC70  F024         	call	___flge	;wreg free
 12026   0018CC  A0D8               	btfss	status,0,c
 12027   0018CE  EF6B  F00C         	goto	u5291
 12028   0018D2  EF6D  F00C         	goto	u5290
 12029   0018D6                     u5291:
 12030   0018D6  EF6F  F00C         	goto	l5288
 12031   0018DA                     u5290:
 12032   0018DA  EF5E  F008         	goto	l5152
 12033   0018DE                     l5288:
 12034   0018DE  EE20 F008          	lfsr	2,8
 12035   0018E2  504D               	movf	Colour_decider@rel^0,w,c
 12036   0018E4  26D9               	addwf	fsr2l,f,c
 12037   0018E6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12038   0018E8  22DA               	addwfc	fsr2h,f,c
 12039   0018EA  CFDE F02A          	movff	postinc2,___flge@ff1
 12040   0018EE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12041   0018F2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12042   0018F6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12043   0018FA  0E9A               	movlw	154
 12044   0018FC  6E2E               	movwf	___flge@ff2^0,c
 12045   0018FE  0E99               	movlw	153
 12046   001900  6E2F               	movwf	(___flge@ff2+1)^0,c
 12047   001902  0E19               	movlw	25
 12048   001904  6E30               	movwf	(___flge@ff2+2)^0,c
 12049   001906  0E3E               	movlw	62
 12050   001908  6E31               	movwf	(___flge@ff2+3)^0,c
 12051   00190A  EC70  F024         	call	___flge	;wreg free
 12052   00190E  A0D8               	btfss	status,0,c
 12053   001910  EF8C  F00C         	goto	u5301
 12054   001914  EF8E  F00C         	goto	u5300
 12055   001918                     u5301:
 12056   001918  EF90  F00C         	goto	l5296
 12057   00191C                     u5300:
 12058   00191C  EFBE  F00A         	goto	l5210
 12059   001920                     l5296:
 12060                           
 12061                           ;color.c: 223:             return 7;
 12062   001920  0E00               	movlw	0
 12063   001922  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12064   001924  0E07               	movlw	7
 12065   001926  6E4B               	movwf	?_Colour_decider^0,c
 12066   001928  EF9A  F00C         	goto	l70
 12067   00192C                     l5300:
 12068                           
 12069                           ;color.c: 227:         return 10;
 12070   00192C  0E00               	movlw	0
 12071   00192E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12072   001930  0E0A               	movlw	10
 12073   001932  6E4B               	movwf	?_Colour_decider^0,c
 12074   001934                     l70:
 12075   001934  0012               	return		;funcret
 12076   001936                     __end_of_Colour_decider:
 12077                           	callstack 0
 12078                           
 12079 ;; *************** function ___xxtofl *****************
 12080 ;; Defined at:
 12081 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;  sign            1    wreg     unsigned char 
 12084 ;;  val             4    0[COMRAM] long 
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;  sign            1    8[COMRAM] unsigned char 
 12087 ;;  arg             4   10[COMRAM] unsigned long 
 12088 ;;  exp             1    9[COMRAM] unsigned char 
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  4    0[COMRAM] unsigned char 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2, status,0
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12099 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12101 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12102 ;;Total ram usage:       14 bytes
 12103 ;; Hardware stack levels used: 1
 12104 ;; Hardware stack levels required when called: 1
 12105 ;; This function calls:
 12106 ;;		Nothing
 12107 ;; This function is called by:
 12108 ;;		_colour_rel
 12109 ;;		_Colour_decider
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           	psect	text68
 12114   0041CE                     __ptext68:
 12115                           	callstack 0
 12116   0041CE                     ___xxtofl:
 12117                           	callstack 28
 12118                           
 12119                           ;incstack = 0
 12120                           ;___xxtofl@sign stored from wreg
 12121   0041CE  6E09               	movwf	___xxtofl@sign^0,c
 12122   0041D0  5009               	movf	___xxtofl@sign^0,w,c
 12123   0041D2  B4D8               	btfsc	status,2,c
 12124   0041D4  EFEE  F020         	goto	u4871
 12125   0041D8  EFF0  F020         	goto	u4870
 12126   0041DC                     u4871:
 12127   0041DC  EF12  F021         	goto	l1300
 12128   0041E0                     u4870:
 12129   0041E0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12130   0041E2  EFF7  F020         	goto	u4880
 12131   0041E6  EFF5  F020         	goto	u4881
 12132   0041EA                     u4881:
 12133   0041EA  EF12  F021         	goto	l1300
 12134   0041EE                     u4880:
 12135   0041EE  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12136   0041F2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12137   0041F6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12138   0041FA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12139   0041FE  1E05               	comf	??___xxtofl^0,f,c
 12140   004200  1E06               	comf	(??___xxtofl+1)^0,f,c
 12141   004202  1E07               	comf	(??___xxtofl+2)^0,f,c
 12142   004204  1E08               	comf	(??___xxtofl+3)^0,f,c
 12143   004206  2A05               	incf	??___xxtofl^0,f,c
 12144   004208  0E00               	movlw	0
 12145   00420A  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12146   00420C  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12147   00420E  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12148   004210  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12149   004214  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12150   004218  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12151   00421C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12152   004220  EF1A  F021         	goto	l5022
 12153   004224                     l1300:
 12154   004224  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12155   004228  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12156   00422C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12157   004230  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12158   004234                     l5022:
 12159   004234  5001               	movf	___xxtofl@val^0,w,c
 12160   004236  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12161   004238  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12162   00423A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12163   00423C  A4D8               	btfss	status,2,c
 12164   00423E  EF23  F021         	goto	u4891
 12165   004242  EF25  F021         	goto	u4890
 12166   004246                     u4891:
 12167   004246  EF2F  F021         	goto	l5028
 12168   00424A                     u4890:
 12169   00424A  0E00               	movlw	0
 12170   00424C  6E01               	movwf	?___xxtofl^0,c
 12171   00424E  0E00               	movlw	0
 12172   004250  6E02               	movwf	(?___xxtofl+1)^0,c
 12173   004252  0E00               	movlw	0
 12174   004254  6E03               	movwf	(?___xxtofl+2)^0,c
 12175   004256  0E00               	movlw	0
 12176   004258  6E04               	movwf	(?___xxtofl+3)^0,c
 12177   00425A  EFC0  F021         	goto	l1303
 12178   00425E                     l5028:
 12179   00425E  0E96               	movlw	150
 12180   004260  6E0A               	movwf	___xxtofl@exp^0,c
 12181   004262  EF39  F021         	goto	l5032
 12182   004266                     l5030:
 12183   004266  2A0A               	incf	___xxtofl@exp^0,f,c
 12184   004268  90D8               	bcf	status,0,c
 12185   00426A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12186   00426C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12187   00426E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12188   004270  320B               	rrcf	___xxtofl@arg^0,f,c
 12189   004272                     l5032:
 12190   004272  0E00               	movlw	0
 12191   004274  140B               	andwf	___xxtofl@arg^0,w,c
 12192   004276  6E05               	movwf	??___xxtofl^0,c
 12193   004278  0E00               	movlw	0
 12194   00427A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12195   00427C  6E06               	movwf	(??___xxtofl+1)^0,c
 12196   00427E  0E00               	movlw	0
 12197   004280  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12198   004282  6E07               	movwf	(??___xxtofl+2)^0,c
 12199   004284  0EFE               	movlw	254
 12200   004286  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12201   004288  6E08               	movwf	(??___xxtofl+3)^0,c
 12202   00428A  5005               	movf	??___xxtofl^0,w,c
 12203   00428C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12204   00428E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12205   004290  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12206   004292  A4D8               	btfss	status,2,c
 12207   004294  EF4E  F021         	goto	u4901
 12208   004298  EF50  F021         	goto	u4900
 12209   00429C                     u4901:
 12210   00429C  EF33  F021         	goto	l5030
 12211   0042A0                     u4900:
 12212   0042A0  EF5E  F021         	goto	l1307
 12213   0042A4                     l5034:
 12214   0042A4  2A0A               	incf	___xxtofl@exp^0,f,c
 12215   0042A6  0E01               	movlw	1
 12216   0042A8  260B               	addwf	___xxtofl@arg^0,f,c
 12217   0042AA  0E00               	movlw	0
 12218   0042AC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12219   0042AE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12220   0042B0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12221   0042B2  90D8               	bcf	status,0,c
 12222   0042B4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12223   0042B6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12224   0042B8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12225   0042BA  320B               	rrcf	___xxtofl@arg^0,f,c
 12226   0042BC                     l1307:
 12227   0042BC  0E00               	movlw	0
 12228   0042BE  140B               	andwf	___xxtofl@arg^0,w,c
 12229   0042C0  6E05               	movwf	??___xxtofl^0,c
 12230   0042C2  0E00               	movlw	0
 12231   0042C4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12232   0042C6  6E06               	movwf	(??___xxtofl+1)^0,c
 12233   0042C8  0E00               	movlw	0
 12234   0042CA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12235   0042CC  6E07               	movwf	(??___xxtofl+2)^0,c
 12236   0042CE  0EFF               	movlw	255
 12237   0042D0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12238   0042D2  6E08               	movwf	(??___xxtofl+3)^0,c
 12239   0042D4  5005               	movf	??___xxtofl^0,w,c
 12240   0042D6  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12241   0042D8  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12242   0042DA  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12243   0042DC  A4D8               	btfss	status,2,c
 12244   0042DE  EF73  F021         	goto	u4911
 12245   0042E2  EF75  F021         	goto	u4910
 12246   0042E6                     u4911:
 12247   0042E6  EF52  F021         	goto	l5034
 12248   0042EA                     u4910:
 12249   0042EA  EF7D  F021         	goto	l5042
 12250   0042EE                     l5040:
 12251   0042EE  060A               	decf	___xxtofl@exp^0,f,c
 12252   0042F0  90D8               	bcf	status,0,c
 12253   0042F2  360B               	rlcf	___xxtofl@arg^0,f,c
 12254   0042F4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12255   0042F6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12256   0042F8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12257   0042FA                     l5042:
 12258   0042FA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12259   0042FC  EF82  F021         	goto	u4921
 12260   004300  EF84  F021         	goto	u4920
 12261   004304                     u4921:
 12262   004304  EF8C  F021         	goto	l1314
 12263   004308                     u4920:
 12264   004308  0E02               	movlw	2
 12265   00430A  600A               	cpfslt	___xxtofl@exp^0,c
 12266   00430C  EF8A  F021         	goto	u4931
 12267   004310  EF8C  F021         	goto	u4930
 12268   004314                     u4931:
 12269   004314  EF77  F021         	goto	l5040
 12270   004318                     u4930:
 12271   004318                     l1314:
 12272   004318  B00A               	btfsc	___xxtofl@exp^0,0,c
 12273   00431A  EF91  F021         	goto	u4941
 12274   00431E  EF93  F021         	goto	u4940
 12275   004322                     u4941:
 12276   004322  EF94  F021         	goto	l5048
 12277   004326                     u4940:
 12278   004326  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12279   004328                     l5048:
 12280   004328  90D8               	bcf	status,0,c
 12281   00432A  320A               	rrcf	___xxtofl@exp^0,f,c
 12282   00432C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12283   004330  6A06               	clrf	(??___xxtofl+1)^0,c
 12284   004332  6A07               	clrf	(??___xxtofl+2)^0,c
 12285   004334  6A08               	clrf	(??___xxtofl+3)^0,c
 12286   004336  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12287   00433A  6A07               	clrf	(??___xxtofl+2)^0,c
 12288   00433C  6A06               	clrf	(??___xxtofl+1)^0,c
 12289   00433E  6A05               	clrf	??___xxtofl^0,c
 12290   004340  5005               	movf	??___xxtofl^0,w,c
 12291   004342  120B               	iorwf	___xxtofl@arg^0,f,c
 12292   004344  5006               	movf	(??___xxtofl+1)^0,w,c
 12293   004346  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12294   004348  5007               	movf	(??___xxtofl+2)^0,w,c
 12295   00434A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12296   00434C  5008               	movf	(??___xxtofl+3)^0,w,c
 12297   00434E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12298   004350  5009               	movf	___xxtofl@sign^0,w,c
 12299   004352  B4D8               	btfsc	status,2,c
 12300   004354  EFAE  F021         	goto	u4951
 12301   004358  EFB0  F021         	goto	u4950
 12302   00435C                     u4951:
 12303   00435C  EFB8  F021         	goto	l5058
 12304   004360                     u4950:
 12305   004360  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12306   004362  EFB7  F021         	goto	u4960
 12307   004366  EFB5  F021         	goto	u4961
 12308   00436A                     u4961:
 12309   00436A  EFB8  F021         	goto	l5058
 12310   00436E                     u4960:
 12311   00436E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12312   004370                     l5058:
 12313   004370  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12314   004374  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12315   004378  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12316   00437C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12317   004380                     l1303:
 12318   004380  0012               	return		;funcret
 12319   004382                     __end_of___xxtofl:
 12320                           	callstack 0
 12321                           
 12322 ;; *************** function ___flsub *****************
 12323 ;; Defined at:
 12324 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;  b               4   41[COMRAM] unsigned char 
 12327 ;;  a               4   45[COMRAM] unsigned char 
 12328 ;; Auto vars:     Size  Location     Type
 12329 ;;		None
 12330 ;; Return value:  Size  Location     Type
 12331 ;;                  4   41[COMRAM] unsigned char 
 12332 ;; Registers used:
 12333 ;;		wreg, status,2, status,0, cstack
 12334 ;; Tracked objects:
 12335 ;;		On entry : 0/0
 12336 ;;		On exit  : 0/0
 12337 ;;		Unchanged: 0/0
 12338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12339 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12342 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12343 ;;Total ram usage:        8 bytes
 12344 ;; Hardware stack levels used: 1
 12345 ;; Hardware stack levels required when called: 2
 12346 ;; This function calls:
 12347 ;;		___fladd
 12348 ;; This function is called by:
 12349 ;;		_Colour_decider
 12350 ;;		_efgtoa
 12351 ;; This function uses a non-reentrant model
 12352 ;;
 12353                           
 12354                           	psect	text69
 12355   005880                     __ptext69:
 12356                           	callstack 0
 12357   005880                     ___flsub:
 12358                           	callstack 24
 12359   005880  0E00               	movlw	0
 12360   005882  1A2E               	xorwf	___flsub@a^0,f,c
 12361   005884  0E00               	movlw	0
 12362   005886  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 12363   005888  0E00               	movlw	0
 12364   00588A  1A30               	xorwf	(___flsub@a+2)^0,f,c
 12365   00588C  0E80               	movlw	128
 12366   00588E  1A31               	xorwf	(___flsub@a+3)^0,f,c
 12367   005890  C02A  F001         	movff	___flsub@b,___fladd@b
 12368   005894  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 12369   005898  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 12370   00589C  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 12371   0058A0  C02E  F005         	movff	___flsub@a,___fladd@a
 12372   0058A4  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 12373   0058A8  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 12374   0058AC  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 12375   0058B0  EC2A  F014         	call	___fladd	;wreg free
 12376   0058B4  C001  F02A         	movff	?___fladd,?___flsub
 12377   0058B8  C002  F02B         	movff	?___fladd+1,?___flsub+1
 12378   0058BC  C003  F02C         	movff	?___fladd+2,?___flsub+2
 12379   0058C0  C004  F02D         	movff	?___fladd+3,?___flsub+3
 12380   0058C4  0012               	return		;funcret
 12381   0058C6                     __end_of___flsub:
 12382                           	callstack 0
 12383                           
 12384 ;; *************** function ___fladd *****************
 12385 ;; Defined at:
 12386 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12387 ;; Parameters:    Size  Location     Type
 12388 ;;  b               4    0[COMRAM] unsigned char 
 12389 ;;  a               4    4[COMRAM] unsigned char 
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;  grs             1   15[COMRAM] unsigned char 
 12392 ;;  bexp            1   14[COMRAM] unsigned char 
 12393 ;;  aexp            1   13[COMRAM] unsigned char 
 12394 ;;  signs           1   12[COMRAM] unsigned char 
 12395 ;; Return value:  Size  Location     Type
 12396 ;;                  4    0[COMRAM] unsigned char 
 12397 ;; Registers used:
 12398 ;;		wreg, status,2, status,0
 12399 ;; Tracked objects:
 12400 ;;		On entry : 0/0
 12401 ;;		On exit  : 0/0
 12402 ;;		Unchanged: 0/0
 12403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12404 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12405 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12407 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12408 ;;Total ram usage:       16 bytes
 12409 ;; Hardware stack levels used: 1
 12410 ;; Hardware stack levels required when called: 1
 12411 ;; This function calls:
 12412 ;;		Nothing
 12413 ;; This function is called by:
 12414 ;;		_colour_rel
 12415 ;;		_Colour_decider
 12416 ;;		___flsub
 12417 ;;		_efgtoa
 12418 ;; This function uses a non-reentrant model
 12419 ;;
 12420                           
 12421                           	psect	text70
 12422   002854                     __ptext70:
 12423                           	callstack 0
 12424   002854                     ___fladd:
 12425                           	callstack 24
 12426   002854  5004               	movf	(___fladd@b+3)^0,w,c
 12427   002856  0B80               	andlw	128
 12428   002858  6E0D               	movwf	___fladd@signs^0,c
 12429   00285A  5004               	movf	(___fladd@b+3)^0,w,c
 12430   00285C  2404               	addwf	(___fladd@b+3)^0,w,c
 12431   00285E  6E0F               	movwf	___fladd@bexp^0,c
 12432   002860  AE03               	btfss	(___fladd@b+2)^0,7,c
 12433   002862  EF35  F014         	goto	u2871
 12434   002866  EF37  F014         	goto	u2870
 12435   00286A                     u2871:
 12436   00286A  EF38  F014         	goto	l3690
 12437   00286E                     u2870:
 12438   00286E  800F               	bsf	___fladd@bexp^0,0,c
 12439   002870                     l3690:
 12440   002870  500F               	movf	___fladd@bexp^0,w,c
 12441   002872  B4D8               	btfsc	status,2,c
 12442   002874  EF3E  F014         	goto	u2881
 12443   002878  EF40  F014         	goto	u2880
 12444   00287C                     u2881:
 12445   00287C  EF55  F014         	goto	l3700
 12446   002880                     u2880:
 12447   002880  280F               	incf	___fladd@bexp^0,w,c
 12448   002882  A4D8               	btfss	status,2,c
 12449   002884  EF46  F014         	goto	u2891
 12450   002888  EF48  F014         	goto	u2890
 12451   00288C                     u2891:
 12452   00288C  EF50  F014         	goto	l3696
 12453   002890                     u2890:
 12454   002890  0E00               	movlw	0
 12455   002892  6E01               	movwf	___fladd@b^0,c
 12456   002894  0E00               	movlw	0
 12457   002896  6E02               	movwf	(___fladd@b+1)^0,c
 12458   002898  0E00               	movlw	0
 12459   00289A  6E03               	movwf	(___fladd@b+2)^0,c
 12460   00289C  0E00               	movlw	0
 12461   00289E  6E04               	movwf	(___fladd@b+3)^0,c
 12462   0028A0                     l3696:
 12463   0028A0  8E03               	bsf	(___fladd@b+2)^0,7,c
 12464   0028A2  0E00               	movlw	0
 12465   0028A4  6E04               	movwf	(___fladd@b+3)^0,c
 12466   0028A6  EF5D  F014         	goto	l3702
 12467   0028AA                     l3700:
 12468   0028AA  0E00               	movlw	0
 12469   0028AC  6E01               	movwf	___fladd@b^0,c
 12470   0028AE  0E00               	movlw	0
 12471   0028B0  6E02               	movwf	(___fladd@b+1)^0,c
 12472   0028B2  0E00               	movlw	0
 12473   0028B4  6E03               	movwf	(___fladd@b+2)^0,c
 12474   0028B6  0E00               	movlw	0
 12475   0028B8  6E04               	movwf	(___fladd@b+3)^0,c
 12476   0028BA                     l3702:
 12477   0028BA  5008               	movf	(___fladd@a+3)^0,w,c
 12478   0028BC  0B80               	andlw	128
 12479   0028BE  6E0E               	movwf	___fladd@aexp^0,c
 12480   0028C0  500D               	movf	___fladd@signs^0,w,c
 12481   0028C2  180E               	xorwf	___fladd@aexp^0,w,c
 12482   0028C4  B4D8               	btfsc	status,2,c
 12483   0028C6  EF67  F014         	goto	u2901
 12484   0028CA  EF69  F014         	goto	u2900
 12485   0028CE                     u2901:
 12486   0028CE  EF6A  F014         	goto	l3708
 12487   0028D2                     u2900:
 12488   0028D2  8C0D               	bsf	___fladd@signs^0,6,c
 12489   0028D4                     l3708:
 12490   0028D4  5008               	movf	(___fladd@a+3)^0,w,c
 12491   0028D6  2408               	addwf	(___fladd@a+3)^0,w,c
 12492   0028D8  6E0E               	movwf	___fladd@aexp^0,c
 12493   0028DA  AE07               	btfss	(___fladd@a+2)^0,7,c
 12494   0028DC  EF72  F014         	goto	u2911
 12495   0028E0  EF74  F014         	goto	u2910
 12496   0028E4                     u2911:
 12497   0028E4  EF75  F014         	goto	l3714
 12498   0028E8                     u2910:
 12499   0028E8  800E               	bsf	___fladd@aexp^0,0,c
 12500   0028EA                     l3714:
 12501   0028EA  500E               	movf	___fladd@aexp^0,w,c
 12502   0028EC  B4D8               	btfsc	status,2,c
 12503   0028EE  EF7B  F014         	goto	u2921
 12504   0028F2  EF7D  F014         	goto	u2920
 12505   0028F6                     u2921:
 12506   0028F6  EF92  F014         	goto	l3724
 12507   0028FA                     u2920:
 12508   0028FA  280E               	incf	___fladd@aexp^0,w,c
 12509   0028FC  A4D8               	btfss	status,2,c
 12510   0028FE  EF83  F014         	goto	u2931
 12511   002902  EF85  F014         	goto	u2930
 12512   002906                     u2931:
 12513   002906  EF8D  F014         	goto	l3720
 12514   00290A                     u2930:
 12515   00290A  0E00               	movlw	0
 12516   00290C  6E05               	movwf	___fladd@a^0,c
 12517   00290E  0E00               	movlw	0
 12518   002910  6E06               	movwf	(___fladd@a+1)^0,c
 12519   002912  0E00               	movlw	0
 12520   002914  6E07               	movwf	(___fladd@a+2)^0,c
 12521   002916  0E00               	movlw	0
 12522   002918  6E08               	movwf	(___fladd@a+3)^0,c
 12523   00291A                     l3720:
 12524   00291A  8E07               	bsf	(___fladd@a+2)^0,7,c
 12525   00291C  0E00               	movlw	0
 12526   00291E  6E08               	movwf	(___fladd@a+3)^0,c
 12527   002920  EF9A  F014         	goto	l3726
 12528   002924                     l3724:
 12529   002924  0E00               	movlw	0
 12530   002926  6E05               	movwf	___fladd@a^0,c
 12531   002928  0E00               	movlw	0
 12532   00292A  6E06               	movwf	(___fladd@a+1)^0,c
 12533   00292C  0E00               	movlw	0
 12534   00292E  6E07               	movwf	(___fladd@a+2)^0,c
 12535   002930  0E00               	movlw	0
 12536   002932  6E08               	movwf	(___fladd@a+3)^0,c
 12537   002934                     l3726:
 12538   002934  500F               	movf	___fladd@bexp^0,w,c
 12539   002936  5C0E               	subwf	___fladd@aexp^0,w,c
 12540   002938  B0D8               	btfsc	status,0,c
 12541   00293A  EFA1  F014         	goto	u2941
 12542   00293E  EFA3  F014         	goto	u2940
 12543   002942                     u2941:
 12544   002942  EFCA  F014         	goto	l3762
 12545   002946                     u2940:
 12546   002946  AC0D               	btfss	___fladd@signs^0,6,c
 12547   002948  EFA8  F014         	goto	u2951
 12548   00294C  EFAA  F014         	goto	u2950
 12549   002950                     u2951:
 12550   002950  EFAC  F014         	goto	l3732
 12551   002954                     u2950:
 12552   002954  0E80               	movlw	128
 12553   002956  1A0D               	xorwf	___fladd@signs^0,f,c
 12554   002958                     l3732:
 12555   002958  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 12556   00295C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12557   002960  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 12558   002964  C001  F010         	movff	___fladd@b,___fladd@grs
 12559   002968  C005  F001         	movff	___fladd@a,___fladd@b
 12560   00296C  C010  F005         	movff	___fladd@grs,___fladd@a
 12561   002970  C002  F010         	movff	___fladd@b+1,___fladd@grs
 12562   002974  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 12563   002978  C010  F006         	movff	___fladd@grs,___fladd@a+1
 12564   00297C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 12565   002980  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 12566   002984  C010  F007         	movff	___fladd@grs,___fladd@a+2
 12567   002988  C004  F010         	movff	___fladd@b+3,___fladd@grs
 12568   00298C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 12569   002990  C010  F008         	movff	___fladd@grs,___fladd@a+3
 12570   002994                     l3762:
 12571   002994  0E00               	movlw	0
 12572   002996  6E10               	movwf	___fladd@grs^0,c
 12573   002998  500F               	movf	___fladd@bexp^0,w,c
 12574   00299A  C00E  F009         	movff	___fladd@aexp,??___fladd
 12575   00299E  6A0A               	clrf	(??___fladd+1)^0,c
 12576   0029A0  5E09               	subwf	??___fladd^0,f,c
 12577   0029A2  0E00               	movlw	0
 12578   0029A4  5A0A               	subwfb	(??___fladd+1)^0,f,c
 12579   0029A6  BE0A               	btfsc	(??___fladd+1)^0,7,c
 12580   0029A8  EFDF  F014         	goto	u2961
 12581   0029AC  500A               	movf	(??___fladd+1)^0,w,c
 12582   0029AE  E109               	bnz	u2960
 12583   0029B0  0E1A               	movlw	26
 12584   0029B2  5C09               	subwf	??___fladd^0,w,c
 12585   0029B4  A0D8               	btfss	status,0,c
 12586   0029B6  EFDF  F014         	goto	u2961
 12587   0029BA  EFE1  F014         	goto	u2960
 12588   0029BE                     u2961:
 12589   0029BE  EF18  F015         	goto	l1174
 12590   0029C2                     u2960:
 12591   0029C2  5001               	movf	___fladd@b^0,w,c
 12592   0029C4  1002               	iorwf	(___fladd@b+1)^0,w,c
 12593   0029C6  1003               	iorwf	(___fladd@b+2)^0,w,c
 12594   0029C8  1004               	iorwf	(___fladd@b+3)^0,w,c
 12595   0029CA  A4D8               	btfss	status,2,c
 12596   0029CC  EFEA  F014         	goto	u2971
 12597   0029D0  EFED  F014         	goto	u2970
 12598   0029D4                     u2971:
 12599   0029D4  0E01               	movlw	1
 12600   0029D6  EFEE  F014         	goto	u2980
 12601   0029DA                     u2970:
 12602   0029DA  0E00               	movlw	0
 12603   0029DC                     u2980:
 12604   0029DC  6E10               	movwf	___fladd@grs^0,c
 12605   0029DE  0E00               	movlw	0
 12606   0029E0  6E01               	movwf	___fladd@b^0,c
 12607   0029E2  0E00               	movlw	0
 12608   0029E4  6E02               	movwf	(___fladd@b+1)^0,c
 12609   0029E6  0E00               	movlw	0
 12610   0029E8  6E03               	movwf	(___fladd@b+2)^0,c
 12611   0029EA  0E00               	movlw	0
 12612   0029EC  6E04               	movwf	(___fladd@b+3)^0,c
 12613   0029EE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12614   0029F2  EF21  F015         	goto	l1173
 12615   0029F6                     l1175:
 12616   0029F6  A010               	btfss	___fladd@grs^0,0,c
 12617   0029F8  EF00  F015         	goto	u2991
 12618   0029FC  EF02  F015         	goto	u2990
 12619   002A00                     u2991:
 12620   002A00  EF08  F015         	goto	l3774
 12621   002A04                     u2990:
 12622   002A04  90D8               	bcf	status,0,c
 12623   002A06  3010               	rrcf	___fladd@grs^0,w,c
 12624   002A08  0901               	iorlw	1
 12625   002A0A  6E10               	movwf	___fladd@grs^0,c
 12626   002A0C  EF0A  F015         	goto	l3776
 12627   002A10                     l3774:
 12628   002A10  90D8               	bcf	status,0,c
 12629   002A12  3210               	rrcf	___fladd@grs^0,f,c
 12630   002A14                     l3776:
 12631   002A14  A001               	btfss	___fladd@b^0,0,c
 12632   002A16  EF0F  F015         	goto	u3001
 12633   002A1A  EF11  F015         	goto	u3000
 12634   002A1E                     u3001:
 12635   002A1E  EF12  F015         	goto	l3780
 12636   002A22                     u3000:
 12637   002A22  8E10               	bsf	___fladd@grs^0,7,c
 12638   002A24                     l3780:
 12639   002A24  3404               	rlcf	(___fladd@b+3)^0,w,c
 12640   002A26  3204               	rrcf	(___fladd@b+3)^0,f,c
 12641   002A28  3203               	rrcf	(___fladd@b+2)^0,f,c
 12642   002A2A  3202               	rrcf	(___fladd@b+1)^0,f,c
 12643   002A2C  3201               	rrcf	___fladd@b^0,f,c
 12644   002A2E  2A0F               	incf	___fladd@bexp^0,f,c
 12645   002A30                     l1174:
 12646   002A30  500E               	movf	___fladd@aexp^0,w,c
 12647   002A32  5C0F               	subwf	___fladd@bexp^0,w,c
 12648   002A34  A0D8               	btfss	status,0,c
 12649   002A36  EF1F  F015         	goto	u3011
 12650   002A3A  EF21  F015         	goto	u3010
 12651   002A3E                     u3011:
 12652   002A3E  EFFB  F014         	goto	l1175
 12653   002A42                     u3010:
 12654   002A42                     l1173:
 12655   002A42  BC0D               	btfsc	___fladd@signs^0,6,c
 12656   002A44  EF26  F015         	goto	u3021
 12657   002A48  EF28  F015         	goto	u3020
 12658   002A4C                     u3021:
 12659   002A4C  EF68  F015         	goto	l3808
 12660   002A50                     u3020:
 12661   002A50  500F               	movf	___fladd@bexp^0,w,c
 12662   002A52  A4D8               	btfss	status,2,c
 12663   002A54  EF2E  F015         	goto	u3031
 12664   002A58  EF30  F015         	goto	u3030
 12665   002A5C                     u3031:
 12666   002A5C  EF3A  F015         	goto	l3790
 12667   002A60                     u3030:
 12668   002A60  0E00               	movlw	0
 12669   002A62  6E01               	movwf	?___fladd^0,c
 12670   002A64  0E00               	movlw	0
 12671   002A66  6E02               	movwf	(?___fladd+1)^0,c
 12672   002A68  0E00               	movlw	0
 12673   002A6A  6E03               	movwf	(?___fladd+2)^0,c
 12674   002A6C  0E00               	movlw	0
 12675   002A6E  6E04               	movwf	(?___fladd+3)^0,c
 12676   002A70  EF89  F016         	goto	l1182
 12677   002A74                     l3790:
 12678   002A74  5005               	movf	___fladd@a^0,w,c
 12679   002A76  2601               	addwf	___fladd@b^0,f,c
 12680   002A78  5006               	movf	(___fladd@a+1)^0,w,c
 12681   002A7A  2202               	addwfc	(___fladd@b+1)^0,f,c
 12682   002A7C  5007               	movf	(___fladd@a+2)^0,w,c
 12683   002A7E  2203               	addwfc	(___fladd@b+2)^0,f,c
 12684   002A80  5008               	movf	(___fladd@a+3)^0,w,c
 12685   002A82  2204               	addwfc	(___fladd@b+3)^0,f,c
 12686   002A84  A004               	btfss	(___fladd@b+3)^0,0,c
 12687   002A86  EF47  F015         	goto	u3041
 12688   002A8A  EF49  F015         	goto	u3040
 12689   002A8E                     u3041:
 12690   002A8E  EFF5  F015         	goto	l3844
 12691   002A92                     u3040:
 12692   002A92  A010               	btfss	___fladd@grs^0,0,c
 12693   002A94  EF4E  F015         	goto	u3051
 12694   002A98  EF50  F015         	goto	u3050
 12695   002A9C                     u3051:
 12696   002A9C  EF56  F015         	goto	l3798
 12697   002AA0                     u3050:
 12698   002AA0  90D8               	bcf	status,0,c
 12699   002AA2  3010               	rrcf	___fladd@grs^0,w,c
 12700   002AA4  0901               	iorlw	1
 12701   002AA6  6E10               	movwf	___fladd@grs^0,c
 12702   002AA8  EF58  F015         	goto	l3800
 12703   002AAC                     l3798:
 12704   002AAC  90D8               	bcf	status,0,c
 12705   002AAE  3210               	rrcf	___fladd@grs^0,f,c
 12706   002AB0                     l3800:
 12707   002AB0  A001               	btfss	___fladd@b^0,0,c
 12708   002AB2  EF5D  F015         	goto	u3061
 12709   002AB6  EF5F  F015         	goto	u3060
 12710   002ABA                     u3061:
 12711   002ABA  EF60  F015         	goto	l3804
 12712   002ABE                     u3060:
 12713   002ABE  8E10               	bsf	___fladd@grs^0,7,c
 12714   002AC0                     l3804:
 12715   002AC0  3404               	rlcf	(___fladd@b+3)^0,w,c
 12716   002AC2  3204               	rrcf	(___fladd@b+3)^0,f,c
 12717   002AC4  3203               	rrcf	(___fladd@b+2)^0,f,c
 12718   002AC6  3202               	rrcf	(___fladd@b+1)^0,f,c
 12719   002AC8  3201               	rrcf	___fladd@b^0,f,c
 12720   002ACA  2A0F               	incf	___fladd@bexp^0,f,c
 12721   002ACC  EFF5  F015         	goto	l3844
 12722   002AD0                     l3808:
 12723   002AD0  5005               	movf	___fladd@a^0,w,c
 12724   002AD2  5C01               	subwf	___fladd@b^0,w,c
 12725   002AD4  5006               	movf	(___fladd@a+1)^0,w,c
 12726   002AD6  5802               	subwfb	(___fladd@b+1)^0,w,c
 12727   002AD8  5007               	movf	(___fladd@a+2)^0,w,c
 12728   002ADA  5803               	subwfb	(___fladd@b+2)^0,w,c
 12729   002ADC  5004               	movf	(___fladd@b+3)^0,w,c
 12730   002ADE  0A80               	xorlw	128
 12731   002AE0  6E09               	movwf	??___fladd^0,c
 12732   002AE2  5008               	movf	(___fladd@a+3)^0,w,c
 12733   002AE4  0A80               	xorlw	128
 12734   002AE6  5809               	subwfb	??___fladd^0,w,c
 12735   002AE8  B0D8               	btfsc	status,0,c
 12736   002AEA  EF79  F015         	goto	u3071
 12737   002AEE  EF7B  F015         	goto	u3070
 12738   002AF2                     u3071:
 12739   002AF2  EFA6  F015         	goto	l3818
 12740   002AF6                     u3070:
 12741   002AF6  5001               	movf	___fladd@b^0,w,c
 12742   002AF8  5C05               	subwf	___fladd@a^0,w,c
 12743   002AFA  6E09               	movwf	??___fladd^0,c
 12744   002AFC  5002               	movf	(___fladd@b+1)^0,w,c
 12745   002AFE  5806               	subwfb	(___fladd@a+1)^0,w,c
 12746   002B00  6E0A               	movwf	(??___fladd+1)^0,c
 12747   002B02  5003               	movf	(___fladd@b+2)^0,w,c
 12748   002B04  5807               	subwfb	(___fladd@a+2)^0,w,c
 12749   002B06  6E0B               	movwf	(??___fladd+2)^0,c
 12750   002B08  5004               	movf	(___fladd@b+3)^0,w,c
 12751   002B0A  5808               	subwfb	(___fladd@a+3)^0,w,c
 12752   002B0C  6E0C               	movwf	(??___fladd+3)^0,c
 12753   002B0E  0EFF               	movlw	255
 12754   002B10  2409               	addwf	??___fladd^0,w,c
 12755   002B12  6E01               	movwf	___fladd@b^0,c
 12756   002B14  0EFF               	movlw	255
 12757   002B16  200A               	addwfc	(??___fladd+1)^0,w,c
 12758   002B18  6E02               	movwf	(___fladd@b+1)^0,c
 12759   002B1A  0EFF               	movlw	255
 12760   002B1C  200B               	addwfc	(??___fladd+2)^0,w,c
 12761   002B1E  6E03               	movwf	(___fladd@b+2)^0,c
 12762   002B20  0EFF               	movlw	255
 12763   002B22  200C               	addwfc	(??___fladd+3)^0,w,c
 12764   002B24  6E04               	movwf	(___fladd@b+3)^0,c
 12765   002B26  0E80               	movlw	128
 12766   002B28  1A0D               	xorwf	___fladd@signs^0,f,c
 12767   002B2A  6C10               	negf	___fladd@grs^0,c
 12768   002B2C  5010               	movf	___fladd@grs^0,w,c
 12769   002B2E  A4D8               	btfss	status,2,c
 12770   002B30  EF9C  F015         	goto	u3081
 12771   002B34  EF9E  F015         	goto	u3080
 12772   002B38                     u3081:
 12773   002B38  EFAE  F015         	goto	l1190
 12774   002B3C                     u3080:
 12775   002B3C  0E01               	movlw	1
 12776   002B3E  2601               	addwf	___fladd@b^0,f,c
 12777   002B40  0E00               	movlw	0
 12778   002B42  2202               	addwfc	(___fladd@b+1)^0,f,c
 12779   002B44  2203               	addwfc	(___fladd@b+2)^0,f,c
 12780   002B46  2204               	addwfc	(___fladd@b+3)^0,f,c
 12781   002B48  EFAE  F015         	goto	l1190
 12782   002B4C                     l3818:
 12783   002B4C  5005               	movf	___fladd@a^0,w,c
 12784   002B4E  5E01               	subwf	___fladd@b^0,f,c
 12785   002B50  5006               	movf	(___fladd@a+1)^0,w,c
 12786   002B52  5A02               	subwfb	(___fladd@b+1)^0,f,c
 12787   002B54  5007               	movf	(___fladd@a+2)^0,w,c
 12788   002B56  5A03               	subwfb	(___fladd@b+2)^0,f,c
 12789   002B58  5008               	movf	(___fladd@a+3)^0,w,c
 12790   002B5A  5A04               	subwfb	(___fladd@b+3)^0,f,c
 12791   002B5C                     l1190:
 12792   002B5C  5001               	movf	___fladd@b^0,w,c
 12793   002B5E  1002               	iorwf	(___fladd@b+1)^0,w,c
 12794   002B60  1003               	iorwf	(___fladd@b+2)^0,w,c
 12795   002B62  1004               	iorwf	(___fladd@b+3)^0,w,c
 12796   002B64  A4D8               	btfss	status,2,c
 12797   002B66  EFB7  F015         	goto	u3091
 12798   002B6A  EFB9  F015         	goto	u3090
 12799   002B6E                     u3091:
 12800   002B6E  EFEE  F015         	goto	l3842
 12801   002B72                     u3090:
 12802   002B72  5010               	movf	___fladd@grs^0,w,c
 12803   002B74  A4D8               	btfss	status,2,c
 12804   002B76  EFBF  F015         	goto	u3101
 12805   002B7A  EFC1  F015         	goto	u3100
 12806   002B7E                     u3101:
 12807   002B7E  EFEE  F015         	goto	l3842
 12808   002B82                     u3100:
 12809   002B82  0E00               	movlw	0
 12810   002B84  6E01               	movwf	?___fladd^0,c
 12811   002B86  0E00               	movlw	0
 12812   002B88  6E02               	movwf	(?___fladd+1)^0,c
 12813   002B8A  0E00               	movlw	0
 12814   002B8C  6E03               	movwf	(?___fladd+2)^0,c
 12815   002B8E  0E00               	movlw	0
 12816   002B90  6E04               	movwf	(?___fladd+3)^0,c
 12817   002B92  EF89  F016         	goto	l1182
 12818   002B96                     l3826:
 12819   002B96  90D8               	bcf	status,0,c
 12820   002B98  3601               	rlcf	___fladd@b^0,f,c
 12821   002B9A  3602               	rlcf	(___fladd@b+1)^0,f,c
 12822   002B9C  3603               	rlcf	(___fladd@b+2)^0,f,c
 12823   002B9E  3604               	rlcf	(___fladd@b+3)^0,f,c
 12824   002BA0  AE10               	btfss	___fladd@grs^0,7,c
 12825   002BA2  EFD5  F015         	goto	u3111
 12826   002BA6  EFD7  F015         	goto	u3110
 12827   002BAA                     u3111:
 12828   002BAA  EFD8  F015         	goto	l3832
 12829   002BAE                     u3110:
 12830   002BAE  8001               	bsf	___fladd@b^0,0,c
 12831   002BB0                     l3832:
 12832   002BB0  A010               	btfss	___fladd@grs^0,0,c
 12833   002BB2  EFDD  F015         	goto	u3121
 12834   002BB6  EFDF  F015         	goto	u3120
 12835   002BBA                     u3121:
 12836   002BBA  EFE3  F015         	goto	l3836
 12837   002BBE                     u3120:
 12838   002BBE  80D8               	bsf	status,0,c
 12839   002BC0  3610               	rlcf	___fladd@grs^0,f,c
 12840   002BC2  EFE5  F015         	goto	l3838
 12841   002BC6                     l3836:
 12842   002BC6  90D8               	bcf	status,0,c
 12843   002BC8  3610               	rlcf	___fladd@grs^0,f,c
 12844   002BCA                     l3838:
 12845   002BCA  500F               	movf	___fladd@bexp^0,w,c
 12846   002BCC  B4D8               	btfsc	status,2,c
 12847   002BCE  EFEB  F015         	goto	u3131
 12848   002BD2  EFED  F015         	goto	u3130
 12849   002BD6                     u3131:
 12850   002BD6  EFEE  F015         	goto	l3842
 12851   002BDA                     u3130:
 12852   002BDA  060F               	decf	___fladd@bexp^0,f,c
 12853   002BDC                     l3842:
 12854   002BDC  AE03               	btfss	(___fladd@b+2)^0,7,c
 12855   002BDE  EFF3  F015         	goto	u3141
 12856   002BE2  EFF5  F015         	goto	u3140
 12857   002BE6                     u3141:
 12858   002BE6  EFCB  F015         	goto	l3826
 12859   002BEA                     u3140:
 12860   002BEA                     l3844:
 12861   002BEA  0E00               	movlw	0
 12862   002BEC  6E0E               	movwf	___fladd@aexp^0,c
 12863   002BEE  AE10               	btfss	___fladd@grs^0,7,c
 12864   002BF0  EFFC  F015         	goto	u3151
 12865   002BF4  EFFE  F015         	goto	u3150
 12866   002BF8                     u3151:
 12867   002BF8  EF16  F016         	goto	l1199
 12868   002BFC                     u3150:
 12869   002BFC  C010  F009         	movff	___fladd@grs,??___fladd
 12870   002C00  0E7F               	movlw	127
 12871   002C02  1609               	andwf	??___fladd^0,f,c
 12872   002C04  B4D8               	btfsc	status,2,c
 12873   002C06  EF07  F016         	goto	u3161
 12874   002C0A  EF09  F016         	goto	u3160
 12875   002C0E                     u3161:
 12876   002C0E  EF0D  F016         	goto	l1200
 12877   002C12                     u3160:
 12878   002C12                     l3850:
 12879   002C12  0E01               	movlw	1
 12880   002C14  6E0E               	movwf	___fladd@aexp^0,c
 12881   002C16  EF16  F016         	goto	l1199
 12882   002C1A                     l1200:
 12883   002C1A  A001               	btfss	___fladd@b^0,0,c
 12884   002C1C  EF12  F016         	goto	u3171
 12885   002C20  EF14  F016         	goto	u3170
 12886   002C24                     u3171:
 12887   002C24  EF16  F016         	goto	l1199
 12888   002C28                     u3170:
 12889   002C28  EF09  F016         	goto	l3850
 12890   002C2C                     l1199:
 12891   002C2C  500E               	movf	___fladd@aexp^0,w,c
 12892   002C2E  B4D8               	btfsc	status,2,c
 12893   002C30  EF1C  F016         	goto	u3181
 12894   002C34  EF1E  F016         	goto	u3180
 12895   002C38                     u3181:
 12896   002C38  EF49  F016         	goto	l3862
 12897   002C3C                     u3180:
 12898   002C3C  0E01               	movlw	1
 12899   002C3E  2601               	addwf	___fladd@b^0,f,c
 12900   002C40  0E00               	movlw	0
 12901   002C42  2202               	addwfc	(___fladd@b+1)^0,f,c
 12902   002C44  2203               	addwfc	(___fladd@b+2)^0,f,c
 12903   002C46  2204               	addwfc	(___fladd@b+3)^0,f,c
 12904   002C48  A004               	btfss	(___fladd@b+3)^0,0,c
 12905   002C4A  EF29  F016         	goto	u3191
 12906   002C4E  EF2B  F016         	goto	u3190
 12907   002C52                     u3191:
 12908   002C52  EF49  F016         	goto	l3862
 12909   002C56                     u3190:
 12910   002C56  C001  F009         	movff	___fladd@b,??___fladd
 12911   002C5A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 12912   002C5E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 12913   002C62  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 12914   002C66  340C               	rlcf	(??___fladd+3)^0,w,c
 12915   002C68  320C               	rrcf	(??___fladd+3)^0,f,c
 12916   002C6A  320B               	rrcf	(??___fladd+2)^0,f,c
 12917   002C6C  320A               	rrcf	(??___fladd+1)^0,f,c
 12918   002C6E  3209               	rrcf	??___fladd^0,f,c
 12919   002C70  C009  F001         	movff	??___fladd,___fladd@b
 12920   002C74  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 12921   002C78  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 12922   002C7C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 12923   002C80  280F               	incf	___fladd@bexp^0,w,c
 12924   002C82  B4D8               	btfsc	status,2,c
 12925   002C84  EF46  F016         	goto	u3201
 12926   002C88  EF48  F016         	goto	u3200
 12927   002C8C                     u3201:
 12928   002C8C  EF49  F016         	goto	l3862
 12929   002C90                     u3200:
 12930   002C90  2A0F               	incf	___fladd@bexp^0,f,c
 12931   002C92                     l3862:
 12932   002C92  280F               	incf	___fladd@bexp^0,w,c
 12933   002C94  B4D8               	btfsc	status,2,c
 12934   002C96  EF4F  F016         	goto	u3211
 12935   002C9A  EF51  F016         	goto	u3210
 12936   002C9E                     u3211:
 12937   002C9E  EF59  F016         	goto	l3866
 12938   002CA2                     u3210:
 12939   002CA2  500F               	movf	___fladd@bexp^0,w,c
 12940   002CA4  A4D8               	btfss	status,2,c
 12941   002CA6  EF57  F016         	goto	u3221
 12942   002CAA  EF59  F016         	goto	u3220
 12943   002CAE                     u3221:
 12944   002CAE  EF6B  F016         	goto	l3870
 12945   002CB2                     u3220:
 12946   002CB2                     l3866:
 12947   002CB2  0E00               	movlw	0
 12948   002CB4  6E01               	movwf	___fladd@b^0,c
 12949   002CB6  0E00               	movlw	0
 12950   002CB8  6E02               	movwf	(___fladd@b+1)^0,c
 12951   002CBA  0E00               	movlw	0
 12952   002CBC  6E03               	movwf	(___fladd@b+2)^0,c
 12953   002CBE  0E00               	movlw	0
 12954   002CC0  6E04               	movwf	(___fladd@b+3)^0,c
 12955   002CC2  500F               	movf	___fladd@bexp^0,w,c
 12956   002CC4  A4D8               	btfss	status,2,c
 12957   002CC6  EF67  F016         	goto	u3231
 12958   002CCA  EF69  F016         	goto	u3230
 12959   002CCE                     u3231:
 12960   002CCE  EF6B  F016         	goto	l3870
 12961   002CD2                     u3230:
 12962   002CD2  0E00               	movlw	0
 12963   002CD4  6E0D               	movwf	___fladd@signs^0,c
 12964   002CD6                     l3870:
 12965   002CD6  A00F               	btfss	___fladd@bexp^0,0,c
 12966   002CD8  EF70  F016         	goto	u3241
 12967   002CDC  EF72  F016         	goto	u3240
 12968   002CE0                     u3241:
 12969   002CE0  EF75  F016         	goto	l3874
 12970   002CE4                     u3240:
 12971   002CE4  8E03               	bsf	(___fladd@b+2)^0,7,c
 12972   002CE6  EF76  F016         	goto	l3876
 12973   002CEA                     l3874:
 12974   002CEA  9E03               	bcf	(___fladd@b+2)^0,7,c
 12975   002CEC                     l3876:
 12976   002CEC  90D8               	bcf	status,0,c
 12977   002CEE  300F               	rrcf	___fladd@bexp^0,w,c
 12978   002CF0  6E04               	movwf	(___fladd@b+3)^0,c
 12979   002CF2  AE0D               	btfss	___fladd@signs^0,7,c
 12980   002CF4  EF7E  F016         	goto	u3251
 12981   002CF8  EF80  F016         	goto	u3250
 12982   002CFC                     u3251:
 12983   002CFC  EF81  F016         	goto	l3882
 12984   002D00                     u3250:
 12985   002D00  8E04               	bsf	(___fladd@b+3)^0,7,c
 12986   002D02                     l3882:
 12987   002D02  C001  F001         	movff	___fladd@b,?___fladd
 12988   002D06  C002  F002         	movff	___fladd@b+1,?___fladd+1
 12989   002D0A  C003  F003         	movff	___fladd@b+2,?___fladd+2
 12990   002D0E  C004  F004         	movff	___fladd@b+3,?___fladd+3
 12991   002D12                     l1182:
 12992   002D12  0012               	return		;funcret
 12993   002D14                     __end_of___fladd:
 12994                           	callstack 0
 12995                           
 12996 ;; *************** function ___flmul *****************
 12997 ;; Defined at:
 12998 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;  b               4   16[COMRAM] unsigned char 
 13001 ;;  a               4   20[COMRAM] unsigned char 
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;  prod            4   35[COMRAM] struct .
 13004 ;;  grs             4   29[COMRAM] unsigned long 
 13005 ;;  temp            2   39[COMRAM] struct .
 13006 ;;  bexp            1   34[COMRAM] unsigned char 
 13007 ;;  aexp            1   33[COMRAM] unsigned char 
 13008 ;;  sign            1   28[COMRAM] unsigned char 
 13009 ;; Return value:  Size  Location     Type
 13010 ;;                  4   16[COMRAM] unsigned char 
 13011 ;; Registers used:
 13012 ;;		wreg, status,2, status,0, prodl, prodh
 13013 ;; Tracked objects:
 13014 ;;		On entry : 0/0
 13015 ;;		On exit  : 0/0
 13016 ;;		Unchanged: 0/0
 13017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13018 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13019 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13020 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13021 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13022 ;;Total ram usage:       25 bytes
 13023 ;; Hardware stack levels used: 1
 13024 ;; Hardware stack levels required when called: 1
 13025 ;; This function calls:
 13026 ;;		Nothing
 13027 ;; This function is called by:
 13028 ;;		_Colour_decider
 13029 ;;		_efgtoa
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           	psect	text71
 13034   002D14                     __ptext71:
 13035                           	callstack 0
 13036   002D14                     ___flmul:
 13037                           	callstack 25
 13038   002D14  5014               	movf	(___flmul@b+3)^0,w,c
 13039   002D16  0B80               	andlw	128
 13040   002D18  6E1D               	movwf	___flmul@sign^0,c
 13041   002D1A  5014               	movf	(___flmul@b+3)^0,w,c
 13042   002D1C  2414               	addwf	(___flmul@b+3)^0,w,c
 13043   002D1E  6E23               	movwf	___flmul@bexp^0,c
 13044   002D20  AE13               	btfss	(___flmul@b+2)^0,7,c
 13045   002D22  EF95  F016         	goto	u3681
 13046   002D26  EF97  F016         	goto	u3680
 13047   002D2A                     u3681:
 13048   002D2A  EF98  F016         	goto	l4156
 13049   002D2E                     u3680:
 13050   002D2E  8023               	bsf	___flmul@bexp^0,0,c
 13051   002D30                     l4156:
 13052   002D30  5023               	movf	___flmul@bexp^0,w,c
 13053   002D32  B4D8               	btfsc	status,2,c
 13054   002D34  EF9E  F016         	goto	u3691
 13055   002D38  EFA0  F016         	goto	u3690
 13056   002D3C                     u3691:
 13057   002D3C  EFB3  F016         	goto	l4164
 13058   002D40                     u3690:
 13059   002D40  2823               	incf	___flmul@bexp^0,w,c
 13060   002D42  A4D8               	btfss	status,2,c
 13061   002D44  EFA6  F016         	goto	u3701
 13062   002D48  EFA8  F016         	goto	u3700
 13063   002D4C                     u3701:
 13064   002D4C  EFB0  F016         	goto	l4162
 13065   002D50                     u3700:
 13066   002D50  0E00               	movlw	0
 13067   002D52  6E11               	movwf	___flmul@b^0,c
 13068   002D54  0E00               	movlw	0
 13069   002D56  6E12               	movwf	(___flmul@b+1)^0,c
 13070   002D58  0E00               	movlw	0
 13071   002D5A  6E13               	movwf	(___flmul@b+2)^0,c
 13072   002D5C  0E00               	movlw	0
 13073   002D5E  6E14               	movwf	(___flmul@b+3)^0,c
 13074   002D60                     l4162:
 13075   002D60  8E13               	bsf	(___flmul@b+2)^0,7,c
 13076   002D62  EFBB  F016         	goto	l4166
 13077   002D66                     l4164:
 13078   002D66  0E00               	movlw	0
 13079   002D68  6E11               	movwf	___flmul@b^0,c
 13080   002D6A  0E00               	movlw	0
 13081   002D6C  6E12               	movwf	(___flmul@b+1)^0,c
 13082   002D6E  0E00               	movlw	0
 13083   002D70  6E13               	movwf	(___flmul@b+2)^0,c
 13084   002D72  0E00               	movlw	0
 13085   002D74  6E14               	movwf	(___flmul@b+3)^0,c
 13086   002D76                     l4166:
 13087   002D76  5018               	movf	(___flmul@a+3)^0,w,c
 13088   002D78  0B80               	andlw	128
 13089   002D7A  1A1D               	xorwf	___flmul@sign^0,f,c
 13090   002D7C  5018               	movf	(___flmul@a+3)^0,w,c
 13091   002D7E  2418               	addwf	(___flmul@a+3)^0,w,c
 13092   002D80  6E22               	movwf	___flmul@aexp^0,c
 13093   002D82  AE17               	btfss	(___flmul@a+2)^0,7,c
 13094   002D84  EFC6  F016         	goto	u3711
 13095   002D88  EFC8  F016         	goto	u3710
 13096   002D8C                     u3711:
 13097   002D8C  EFC9  F016         	goto	l4174
 13098   002D90                     u3710:
 13099   002D90  8022               	bsf	___flmul@aexp^0,0,c
 13100   002D92                     l4174:
 13101   002D92  5022               	movf	___flmul@aexp^0,w,c
 13102   002D94  B4D8               	btfsc	status,2,c
 13103   002D96  EFCF  F016         	goto	u3721
 13104   002D9A  EFD1  F016         	goto	u3720
 13105   002D9E                     u3721:
 13106   002D9E  EFE4  F016         	goto	l4182
 13107   002DA2                     u3720:
 13108   002DA2  2822               	incf	___flmul@aexp^0,w,c
 13109   002DA4  A4D8               	btfss	status,2,c
 13110   002DA6  EFD7  F016         	goto	u3731
 13111   002DAA  EFD9  F016         	goto	u3730
 13112   002DAE                     u3731:
 13113   002DAE  EFE1  F016         	goto	l4180
 13114   002DB2                     u3730:
 13115   002DB2  0E00               	movlw	0
 13116   002DB4  6E15               	movwf	___flmul@a^0,c
 13117   002DB6  0E00               	movlw	0
 13118   002DB8  6E16               	movwf	(___flmul@a+1)^0,c
 13119   002DBA  0E00               	movlw	0
 13120   002DBC  6E17               	movwf	(___flmul@a+2)^0,c
 13121   002DBE  0E00               	movlw	0
 13122   002DC0  6E18               	movwf	(___flmul@a+3)^0,c
 13123   002DC2                     l4180:
 13124   002DC2  8E17               	bsf	(___flmul@a+2)^0,7,c
 13125   002DC4  EFEC  F016         	goto	l1259
 13126   002DC8                     l4182:
 13127   002DC8  0E00               	movlw	0
 13128   002DCA  6E15               	movwf	___flmul@a^0,c
 13129   002DCC  0E00               	movlw	0
 13130   002DCE  6E16               	movwf	(___flmul@a+1)^0,c
 13131   002DD0  0E00               	movlw	0
 13132   002DD2  6E17               	movwf	(___flmul@a+2)^0,c
 13133   002DD4  0E00               	movlw	0
 13134   002DD6  6E18               	movwf	(___flmul@a+3)^0,c
 13135   002DD8                     l1259:
 13136   002DD8  5022               	movf	___flmul@aexp^0,w,c
 13137   002DDA  B4D8               	btfsc	status,2,c
 13138   002DDC  EFF2  F016         	goto	u3741
 13139   002DE0  EFF4  F016         	goto	u3740
 13140   002DE4                     u3741:
 13141   002DE4  EFFC  F016         	goto	l4186
 13142   002DE8                     u3740:
 13143   002DE8  5023               	movf	___flmul@bexp^0,w,c
 13144   002DEA  A4D8               	btfss	status,2,c
 13145   002DEC  EFFA  F016         	goto	u3751
 13146   002DF0  EFFC  F016         	goto	u3750
 13147   002DF4                     u3751:
 13148   002DF4  EF06  F017         	goto	l4190
 13149   002DF8                     u3750:
 13150   002DF8                     l4186:
 13151   002DF8  0E00               	movlw	0
 13152   002DFA  6E11               	movwf	?___flmul^0,c
 13153   002DFC  0E00               	movlw	0
 13154   002DFE  6E12               	movwf	(?___flmul+1)^0,c
 13155   002E00  0E00               	movlw	0
 13156   002E02  6E13               	movwf	(?___flmul+2)^0,c
 13157   002E04  0E00               	movlw	0
 13158   002E06  6E14               	movwf	(?___flmul+3)^0,c
 13159   002E08  EF9E  F018         	goto	l1263
 13160   002E0C                     l4190:
 13161   002E0C  5017               	movf	(___flmul@a+2)^0,w,c
 13162   002E0E  0211               	mulwf	___flmul@b^0,c
 13163   002E10  CFF3 F028          	movff	prodl,___flmul@temp
 13164   002E14  CFF4 F029          	movff	prodh,___flmul@temp+1
 13165   002E18  5028               	movf	___flmul@temp^0,w,c
 13166   002E1A  6E1E               	movwf	___flmul@grs^0,c
 13167   002E1C  6A1F               	clrf	(___flmul@grs+1)^0,c
 13168   002E1E  6A20               	clrf	(___flmul@grs+2)^0,c
 13169   002E20  6A21               	clrf	(___flmul@grs+3)^0,c
 13170   002E22  5029               	movf	(___flmul@temp+1)^0,w,c
 13171   002E24  6E24               	movwf	___flmul@prod^0,c
 13172   002E26  6A25               	clrf	(___flmul@prod+1)^0,c
 13173   002E28  6A26               	clrf	(___flmul@prod+2)^0,c
 13174   002E2A  6A27               	clrf	(___flmul@prod+3)^0,c
 13175   002E2C  5016               	movf	(___flmul@a+1)^0,w,c
 13176   002E2E  0212               	mulwf	(___flmul@b+1)^0,c
 13177   002E30  CFF3 F028          	movff	prodl,___flmul@temp
 13178   002E34  CFF4 F029          	movff	prodh,___flmul@temp+1
 13179   002E38  5028               	movf	___flmul@temp^0,w,c
 13180   002E3A  261E               	addwf	___flmul@grs^0,f,c
 13181   002E3C  0E00               	movlw	0
 13182   002E3E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13183   002E40  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13184   002E42  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13185   002E44  5029               	movf	(___flmul@temp+1)^0,w,c
 13186   002E46  2624               	addwf	___flmul@prod^0,f,c
 13187   002E48  0E00               	movlw	0
 13188   002E4A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13189   002E4C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13190   002E4E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13191   002E50  5015               	movf	___flmul@a^0,w,c
 13192   002E52  0213               	mulwf	(___flmul@b+2)^0,c
 13193   002E54  CFF3 F028          	movff	prodl,___flmul@temp
 13194   002E58  CFF4 F029          	movff	prodh,___flmul@temp+1
 13195   002E5C  5028               	movf	___flmul@temp^0,w,c
 13196   002E5E  261E               	addwf	___flmul@grs^0,f,c
 13197   002E60  0E00               	movlw	0
 13198   002E62  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13199   002E64  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13200   002E66  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13201   002E68  5029               	movf	(___flmul@temp+1)^0,w,c
 13202   002E6A  2624               	addwf	___flmul@prod^0,f,c
 13203   002E6C  0E00               	movlw	0
 13204   002E6E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13205   002E70  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13206   002E72  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13207   002E74  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13208   002E78  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13209   002E7C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13210   002E80  6A1E               	clrf	___flmul@grs^0,c
 13211   002E82  5015               	movf	___flmul@a^0,w,c
 13212   002E84  0212               	mulwf	(___flmul@b+1)^0,c
 13213   002E86  CFF3 F028          	movff	prodl,___flmul@temp
 13214   002E8A  CFF4 F029          	movff	prodh,___flmul@temp+1
 13215   002E8E  5028               	movf	___flmul@temp^0,w,c
 13216   002E90  261E               	addwf	___flmul@grs^0,f,c
 13217   002E92  5029               	movf	(___flmul@temp+1)^0,w,c
 13218   002E94  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13219   002E96  0E00               	movlw	0
 13220   002E98  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13221   002E9A  0E00               	movlw	0
 13222   002E9C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13223   002E9E  5016               	movf	(___flmul@a+1)^0,w,c
 13224   002EA0  0211               	mulwf	___flmul@b^0,c
 13225   002EA2  CFF3 F028          	movff	prodl,___flmul@temp
 13226   002EA6  CFF4 F029          	movff	prodh,___flmul@temp+1
 13227   002EAA  5028               	movf	___flmul@temp^0,w,c
 13228   002EAC  261E               	addwf	___flmul@grs^0,f,c
 13229   002EAE  5029               	movf	(___flmul@temp+1)^0,w,c
 13230   002EB0  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13231   002EB2  0E00               	movlw	0
 13232   002EB4  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13233   002EB6  0E00               	movlw	0
 13234   002EB8  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13235   002EBA  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13236   002EBE  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13237   002EC2  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13238   002EC6  6A1E               	clrf	___flmul@grs^0,c
 13239   002EC8  5015               	movf	___flmul@a^0,w,c
 13240   002ECA  0211               	mulwf	___flmul@b^0,c
 13241   002ECC  CFF3 F028          	movff	prodl,___flmul@temp
 13242   002ED0  CFF4 F029          	movff	prodh,___flmul@temp+1
 13243   002ED4  5028               	movf	___flmul@temp^0,w,c
 13244   002ED6  261E               	addwf	___flmul@grs^0,f,c
 13245   002ED8  5029               	movf	(___flmul@temp+1)^0,w,c
 13246   002EDA  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13247   002EDC  0E00               	movlw	0
 13248   002EDE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13249   002EE0  0E00               	movlw	0
 13250   002EE2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13251   002EE4  5017               	movf	(___flmul@a+2)^0,w,c
 13252   002EE6  0212               	mulwf	(___flmul@b+1)^0,c
 13253   002EE8  CFF3 F028          	movff	prodl,___flmul@temp
 13254   002EEC  CFF4 F029          	movff	prodh,___flmul@temp+1
 13255   002EF0  5028               	movf	___flmul@temp^0,w,c
 13256   002EF2  2624               	addwf	___flmul@prod^0,f,c
 13257   002EF4  5029               	movf	(___flmul@temp+1)^0,w,c
 13258   002EF6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13259   002EF8  0E00               	movlw	0
 13260   002EFA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13261   002EFC  0E00               	movlw	0
 13262   002EFE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13263   002F00  5016               	movf	(___flmul@a+1)^0,w,c
 13264   002F02  0213               	mulwf	(___flmul@b+2)^0,c
 13265   002F04  CFF3 F028          	movff	prodl,___flmul@temp
 13266   002F08  CFF4 F029          	movff	prodh,___flmul@temp+1
 13267   002F0C  5028               	movf	___flmul@temp^0,w,c
 13268   002F0E  2624               	addwf	___flmul@prod^0,f,c
 13269   002F10  5029               	movf	(___flmul@temp+1)^0,w,c
 13270   002F12  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13271   002F14  0E00               	movlw	0
 13272   002F16  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13273   002F18  0E00               	movlw	0
 13274   002F1A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13275   002F1C  5017               	movf	(___flmul@a+2)^0,w,c
 13276   002F1E  0213               	mulwf	(___flmul@b+2)^0,c
 13277   002F20  CFF3 F028          	movff	prodl,___flmul@temp
 13278   002F24  CFF4 F029          	movff	prodh,___flmul@temp+1
 13279   002F28  5028               	movf	___flmul@temp^0,w,c
 13280   002F2A  6E19               	movwf	??___flmul^0,c
 13281   002F2C  5029               	movf	(___flmul@temp+1)^0,w,c
 13282   002F2E  6E1A               	movwf	(??___flmul+1)^0,c
 13283   002F30  6A1B               	clrf	(??___flmul+2)^0,c
 13284   002F32  6A1C               	clrf	(??___flmul+3)^0,c
 13285   002F34  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 13286   002F38  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 13287   002F3C  C019  F01A         	movff	??___flmul,??___flmul+1
 13288   002F40  6A19               	clrf	??___flmul^0,c
 13289   002F42  5019               	movf	??___flmul^0,w,c
 13290   002F44  2624               	addwf	___flmul@prod^0,f,c
 13291   002F46  501A               	movf	(??___flmul+1)^0,w,c
 13292   002F48  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13293   002F4A  501B               	movf	(??___flmul+2)^0,w,c
 13294   002F4C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13295   002F4E  501C               	movf	(??___flmul+3)^0,w,c
 13296   002F50  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13297   002F52  C01E  F019         	movff	___flmul@grs,??___flmul
 13298   002F56  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 13299   002F5A  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 13300   002F5E  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 13301   002F62  0E19               	movlw	25
 13302   002F64  EFB9  F017         	goto	u3760
 13303   002F68                     u3765:
 13304   002F68  90D8               	bcf	status,0,c
 13305   002F6A  321C               	rrcf	(??___flmul+3)^0,f,c
 13306   002F6C  321B               	rrcf	(??___flmul+2)^0,f,c
 13307   002F6E  321A               	rrcf	(??___flmul+1)^0,f,c
 13308   002F70  3219               	rrcf	??___flmul^0,f,c
 13309   002F72                     u3760:
 13310   002F72  2EE8               	decfsz	wreg,f,c
 13311   002F74  EFB4  F017         	goto	u3765
 13312   002F78  5019               	movf	??___flmul^0,w,c
 13313   002F7A  2624               	addwf	___flmul@prod^0,f,c
 13314   002F7C  501A               	movf	(??___flmul+1)^0,w,c
 13315   002F7E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13316   002F80  501B               	movf	(??___flmul+2)^0,w,c
 13317   002F82  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13318   002F84  501C               	movf	(??___flmul+3)^0,w,c
 13319   002F86  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13320   002F88  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13321   002F8C  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13322   002F90  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13323   002F94  6A1E               	clrf	___flmul@grs^0,c
 13324   002F96  5022               	movf	___flmul@aexp^0,w,c
 13325   002F98  C023  F019         	movff	___flmul@bexp,??___flmul
 13326   002F9C  6A1A               	clrf	(??___flmul+1)^0,c
 13327   002F9E  2619               	addwf	??___flmul^0,f,c
 13328   002FA0  0E00               	movlw	0
 13329   002FA2  221A               	addwfc	(??___flmul+1)^0,f,c
 13330   002FA4  0E82               	movlw	130
 13331   002FA6  2419               	addwf	??___flmul^0,w,c
 13332   002FA8  6E28               	movwf	___flmul@temp^0,c
 13333   002FAA  0EFF               	movlw	255
 13334   002FAC  201A               	addwfc	(??___flmul+1)^0,w,c
 13335   002FAE  6E29               	movwf	(___flmul@temp+1)^0,c
 13336   002FB0  EFEF  F017         	goto	l4238
 13337   002FB4                     l4232:
 13338   002FB4  90D8               	bcf	status,0,c
 13339   002FB6  3624               	rlcf	___flmul@prod^0,f,c
 13340   002FB8  3625               	rlcf	(___flmul@prod+1)^0,f,c
 13341   002FBA  3626               	rlcf	(___flmul@prod+2)^0,f,c
 13342   002FBC  3627               	rlcf	(___flmul@prod+3)^0,f,c
 13343   002FBE  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13344   002FC0  EFE4  F017         	goto	u3771
 13345   002FC4  EFE6  F017         	goto	u3770
 13346   002FC8                     u3771:
 13347   002FC8  EFE7  F017         	goto	l1266
 13348   002FCC                     u3770:
 13349   002FCC  8024               	bsf	___flmul@prod^0,0,c
 13350   002FCE                     l1266:
 13351   002FCE  90D8               	bcf	status,0,c
 13352   002FD0  361E               	rlcf	___flmul@grs^0,f,c
 13353   002FD2  361F               	rlcf	(___flmul@grs+1)^0,f,c
 13354   002FD4  3620               	rlcf	(___flmul@grs+2)^0,f,c
 13355   002FD6  3621               	rlcf	(___flmul@grs+3)^0,f,c
 13356   002FD8  0628               	decf	___flmul@temp^0,f,c
 13357   002FDA  A0D8               	btfss	status,0,c
 13358   002FDC  0629               	decf	(___flmul@temp+1)^0,f,c
 13359   002FDE                     l4238:
 13360   002FDE  AE26               	btfss	(___flmul@prod+2)^0,7,c
 13361   002FE0  EFF4  F017         	goto	u3781
 13362   002FE4  EFF6  F017         	goto	u3780
 13363   002FE8                     u3781:
 13364   002FE8  EFDA  F017         	goto	l4232
 13365   002FEC                     u3780:
 13366   002FEC  0E00               	movlw	0
 13367   002FEE  6E22               	movwf	___flmul@aexp^0,c
 13368   002FF0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13369   002FF2  EFFD  F017         	goto	u3791
 13370   002FF6  EFFF  F017         	goto	u3790
 13371   002FFA                     u3791:
 13372   002FFA  EF23  F018         	goto	l1268
 13373   002FFE                     u3790:
 13374   002FFE  0EFF               	movlw	255
 13375   003000  141E               	andwf	___flmul@grs^0,w,c
 13376   003002  6E19               	movwf	??___flmul^0,c
 13377   003004  0EFF               	movlw	255
 13378   003006  141F               	andwf	(___flmul@grs+1)^0,w,c
 13379   003008  6E1A               	movwf	(??___flmul+1)^0,c
 13380   00300A  0EFF               	movlw	255
 13381   00300C  1420               	andwf	(___flmul@grs+2)^0,w,c
 13382   00300E  6E1B               	movwf	(??___flmul+2)^0,c
 13383   003010  0E7F               	movlw	127
 13384   003012  1421               	andwf	(___flmul@grs+3)^0,w,c
 13385   003014  6E1C               	movwf	(??___flmul+3)^0,c
 13386   003016  5019               	movf	??___flmul^0,w,c
 13387   003018  101A               	iorwf	(??___flmul+1)^0,w,c
 13388   00301A  101B               	iorwf	(??___flmul+2)^0,w,c
 13389   00301C  101C               	iorwf	(??___flmul+3)^0,w,c
 13390   00301E  B4D8               	btfsc	status,2,c
 13391   003020  EF14  F018         	goto	u3801
 13392   003024  EF16  F018         	goto	u3800
 13393   003028                     u3801:
 13394   003028  EF1A  F018         	goto	l1269
 13395   00302C                     u3800:
 13396   00302C                     l4246:
 13397   00302C  0E01               	movlw	1
 13398   00302E  6E22               	movwf	___flmul@aexp^0,c
 13399   003030  EF23  F018         	goto	l1268
 13400   003034                     l1269:
 13401   003034  A024               	btfss	___flmul@prod^0,0,c
 13402   003036  EF1F  F018         	goto	u3811
 13403   00303A  EF21  F018         	goto	u3810
 13404   00303E                     u3811:
 13405   00303E  EF23  F018         	goto	l1268
 13406   003042                     u3810:
 13407   003042  EF16  F018         	goto	l4246
 13408   003046                     l1268:
 13409   003046  5022               	movf	___flmul@aexp^0,w,c
 13410   003048  B4D8               	btfsc	status,2,c
 13411   00304A  EF29  F018         	goto	u3821
 13412   00304E  EF2B  F018         	goto	u3820
 13413   003052                     u3821:
 13414   003052  EF4F  F018         	goto	l4258
 13415   003056                     u3820:
 13416   003056  0E01               	movlw	1
 13417   003058  2624               	addwf	___flmul@prod^0,f,c
 13418   00305A  0E00               	movlw	0
 13419   00305C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13420   00305E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13421   003060  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13422   003062  A027               	btfss	(___flmul@prod+3)^0,0,c
 13423   003064  EF36  F018         	goto	u3831
 13424   003068  EF38  F018         	goto	u3830
 13425   00306C                     u3831:
 13426   00306C  EF4F  F018         	goto	l4258
 13427   003070                     u3830:
 13428   003070  C024  F019         	movff	___flmul@prod,??___flmul
 13429   003074  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 13430   003078  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 13431   00307C  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 13432   003080  341C               	rlcf	(??___flmul+3)^0,w,c
 13433   003082  321C               	rrcf	(??___flmul+3)^0,f,c
 13434   003084  321B               	rrcf	(??___flmul+2)^0,f,c
 13435   003086  321A               	rrcf	(??___flmul+1)^0,f,c
 13436   003088  3219               	rrcf	??___flmul^0,f,c
 13437   00308A  C019  F024         	movff	??___flmul,___flmul@prod
 13438   00308E  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 13439   003092  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 13440   003096  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 13441   00309A  4A28               	infsnz	___flmul@temp^0,f,c
 13442   00309C  2A29               	incf	(___flmul@temp+1)^0,f,c
 13443   00309E                     l4258:
 13444   00309E  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13445   0030A0  EF5A  F018         	goto	u3841
 13446   0030A4  5029               	movf	(___flmul@temp+1)^0,w,c
 13447   0030A6  E108               	bnz	u3840
 13448   0030A8  2828               	incf	___flmul@temp^0,w,c
 13449   0030AA  A0D8               	btfss	status,0,c
 13450   0030AC  EF5A  F018         	goto	u3841
 13451   0030B0  EF5C  F018         	goto	u3840
 13452   0030B4                     u3841:
 13453   0030B4  EF66  F018         	goto	l4262
 13454   0030B8                     u3840:
 13455   0030B8  0E00               	movlw	0
 13456   0030BA  6E24               	movwf	___flmul@prod^0,c
 13457   0030BC  0E00               	movlw	0
 13458   0030BE  6E25               	movwf	(___flmul@prod+1)^0,c
 13459   0030C0  0E80               	movlw	128
 13460   0030C2  6E26               	movwf	(___flmul@prod+2)^0,c
 13461   0030C4  0E7F               	movlw	127
 13462   0030C6  6E27               	movwf	(___flmul@prod+3)^0,c
 13463   0030C8  EF94  F018         	goto	l4274
 13464   0030CC                     l4262:
 13465   0030CC  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13466   0030CE  EF73  F018         	goto	u3850
 13467   0030D2  5029               	movf	(___flmul@temp+1)^0,w,c
 13468   0030D4  E106               	bnz	u3851
 13469   0030D6  0428               	decf	___flmul@temp^0,w,c
 13470   0030D8  B0D8               	btfsc	status,0,c
 13471   0030DA  EF71  F018         	goto	u3851
 13472   0030DE  EF73  F018         	goto	u3850
 13473   0030E2                     u3851:
 13474   0030E2  EF7F  F018         	goto	l1276
 13475   0030E6                     u3850:
 13476   0030E6  0E00               	movlw	0
 13477   0030E8  6E24               	movwf	___flmul@prod^0,c
 13478   0030EA  0E00               	movlw	0
 13479   0030EC  6E25               	movwf	(___flmul@prod+1)^0,c
 13480   0030EE  0E00               	movlw	0
 13481   0030F0  6E26               	movwf	(___flmul@prod+2)^0,c
 13482   0030F2  0E00               	movlw	0
 13483   0030F4  6E27               	movwf	(___flmul@prod+3)^0,c
 13484   0030F6  0E00               	movlw	0
 13485   0030F8  6E1D               	movwf	___flmul@sign^0,c
 13486   0030FA  EF94  F018         	goto	l4274
 13487   0030FE                     l1276:
 13488   0030FE  C028  F023         	movff	___flmul@temp,___flmul@bexp
 13489   003102  0EFF               	movlw	255
 13490   003104  1624               	andwf	___flmul@prod^0,f,c
 13491   003106  0EFF               	movlw	255
 13492   003108  1625               	andwf	(___flmul@prod+1)^0,f,c
 13493   00310A  0E7F               	movlw	127
 13494   00310C  1626               	andwf	(___flmul@prod+2)^0,f,c
 13495   00310E  0E00               	movlw	0
 13496   003110  1627               	andwf	(___flmul@prod+3)^0,f,c
 13497   003112  A023               	btfss	___flmul@bexp^0,0,c
 13498   003114  EF8E  F018         	goto	u3861
 13499   003118  EF90  F018         	goto	u3860
 13500   00311C                     u3861:
 13501   00311C  EF91  F018         	goto	l4272
 13502   003120                     u3860:
 13503   003120  8E26               	bsf	(___flmul@prod+2)^0,7,c
 13504   003122                     l4272:
 13505   003122  90D8               	bcf	status,0,c
 13506   003124  3023               	rrcf	___flmul@bexp^0,w,c
 13507   003126  6E27               	movwf	(___flmul@prod+3)^0,c
 13508   003128                     l4274:
 13509   003128  501D               	movf	___flmul@sign^0,w,c
 13510   00312A  1227               	iorwf	(___flmul@prod+3)^0,f,c
 13511   00312C  C024  F011         	movff	___flmul@prod,?___flmul
 13512   003130  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 13513   003134  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 13514   003138  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 13515   00313C                     l1263:
 13516   00313C  0012               	return		;funcret
 13517   00313E                     __end_of___flmul:
 13518                           	callstack 0
 13519                           
 13520 ;; *************** function ___flge *****************
 13521 ;; Defined at:
 13522 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  ff1             4   41[COMRAM] unsigned char 
 13525 ;;  ff2             4   45[COMRAM] unsigned char 
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;		None
 13528 ;; Return value:  Size  Location     Type
 13529 ;;		None               void
 13530 ;; Registers used:
 13531 ;;		wreg, status,2, status,0
 13532 ;; Tracked objects:
 13533 ;;		On entry : 0/0
 13534 ;;		On exit  : 0/0
 13535 ;;		Unchanged: 0/0
 13536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13537 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13540 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13541 ;;Total ram usage:       12 bytes
 13542 ;; Hardware stack levels used: 1
 13543 ;; Hardware stack levels required when called: 1
 13544 ;; This function calls:
 13545 ;;		Nothing
 13546 ;; This function is called by:
 13547 ;;		_Colour_decider
 13548 ;;		_efgtoa
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           	psect	text72
 13553   0048E0                     __ptext72:
 13554                           	callstack 0
 13555   0048E0                     ___flge:
 13556                           	callstack 25
 13557   0048E0  0E00               	movlw	0
 13558   0048E2  142A               	andwf	___flge@ff1^0,w,c
 13559   0048E4  6E32               	movwf	??___flge^0,c
 13560   0048E6  0E00               	movlw	0
 13561   0048E8  142B               	andwf	(___flge@ff1+1)^0,w,c
 13562   0048EA  6E33               	movwf	(??___flge+1)^0,c
 13563   0048EC  0E80               	movlw	128
 13564   0048EE  142C               	andwf	(___flge@ff1+2)^0,w,c
 13565   0048F0  6E34               	movwf	(??___flge+2)^0,c
 13566   0048F2  0E7F               	movlw	127
 13567   0048F4  142D               	andwf	(___flge@ff1+3)^0,w,c
 13568   0048F6  6E35               	movwf	(??___flge+3)^0,c
 13569   0048F8  5032               	movf	??___flge^0,w,c
 13570   0048FA  1033               	iorwf	(??___flge+1)^0,w,c
 13571   0048FC  1034               	iorwf	(??___flge+2)^0,w,c
 13572   0048FE  1035               	iorwf	(??___flge+3)^0,w,c
 13573   004900  A4D8               	btfss	status,2,c
 13574   004902  EF85  F024         	goto	u3901
 13575   004906  EF87  F024         	goto	u3900
 13576   00490A                     u3901:
 13577   00490A  EF8F  F024         	goto	l4306
 13578   00490E                     u3900:
 13579   00490E  0E00               	movlw	0
 13580   004910  6E2A               	movwf	___flge@ff1^0,c
 13581   004912  0E00               	movlw	0
 13582   004914  6E2B               	movwf	(___flge@ff1+1)^0,c
 13583   004916  0E00               	movlw	0
 13584   004918  6E2C               	movwf	(___flge@ff1+2)^0,c
 13585   00491A  0E00               	movlw	0
 13586   00491C  6E2D               	movwf	(___flge@ff1+3)^0,c
 13587   00491E                     l4306:
 13588   00491E  0E00               	movlw	0
 13589   004920  142E               	andwf	___flge@ff2^0,w,c
 13590   004922  6E32               	movwf	??___flge^0,c
 13591   004924  0E00               	movlw	0
 13592   004926  142F               	andwf	(___flge@ff2+1)^0,w,c
 13593   004928  6E33               	movwf	(??___flge+1)^0,c
 13594   00492A  0E80               	movlw	128
 13595   00492C  1430               	andwf	(___flge@ff2+2)^0,w,c
 13596   00492E  6E34               	movwf	(??___flge+2)^0,c
 13597   004930  0E7F               	movlw	127
 13598   004932  1431               	andwf	(___flge@ff2+3)^0,w,c
 13599   004934  6E35               	movwf	(??___flge+3)^0,c
 13600   004936  5032               	movf	??___flge^0,w,c
 13601   004938  1033               	iorwf	(??___flge+1)^0,w,c
 13602   00493A  1034               	iorwf	(??___flge+2)^0,w,c
 13603   00493C  1035               	iorwf	(??___flge+3)^0,w,c
 13604   00493E  A4D8               	btfss	status,2,c
 13605   004940  EFA4  F024         	goto	u3911
 13606   004944  EFA6  F024         	goto	u3910
 13607   004948                     u3911:
 13608   004948  EFAE  F024         	goto	l4310
 13609   00494C                     u3910:
 13610   00494C  0E00               	movlw	0
 13611   00494E  6E2E               	movwf	___flge@ff2^0,c
 13612   004950  0E00               	movlw	0
 13613   004952  6E2F               	movwf	(___flge@ff2+1)^0,c
 13614   004954  0E00               	movlw	0
 13615   004956  6E30               	movwf	(___flge@ff2+2)^0,c
 13616   004958  0E00               	movlw	0
 13617   00495A  6E31               	movwf	(___flge@ff2+3)^0,c
 13618   00495C                     l4310:
 13619   00495C  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 13620   00495E  EFB3  F024         	goto	u3921
 13621   004962  EFB5  F024         	goto	u3920
 13622   004966                     u3921:
 13623   004966  EFBE  F024         	goto	l4314
 13624   00496A                     u3920:
 13625   00496A  6C2A               	negf	___flge@ff1^0,c
 13626   00496C  1E2B               	comf	(___flge@ff1+1)^0,f,c
 13627   00496E  B0D8               	btfsc	status,0,c
 13628   004970  2A2B               	incf	(___flge@ff1+1)^0,f,c
 13629   004972  1E2C               	comf	(___flge@ff1+2)^0,f,c
 13630   004974  B0D8               	btfsc	status,0,c
 13631   004976  2A2C               	incf	(___flge@ff1+2)^0,f,c
 13632   004978  0E80               	movlw	128
 13633   00497A  562D               	subfwb	(___flge@ff1+3)^0,f,c
 13634   00497C                     l4314:
 13635   00497C  AE31               	btfss	(___flge@ff2+3)^0,7,c
 13636   00497E  EFC3  F024         	goto	u3931
 13637   004982  EFC5  F024         	goto	u3930
 13638   004986                     u3931:
 13639   004986  EFCE  F024         	goto	l910
 13640   00498A                     u3930:
 13641   00498A  6C2E               	negf	___flge@ff2^0,c
 13642   00498C  1E2F               	comf	(___flge@ff2+1)^0,f,c
 13643   00498E  B0D8               	btfsc	status,0,c
 13644   004990  2A2F               	incf	(___flge@ff2+1)^0,f,c
 13645   004992  1E30               	comf	(___flge@ff2+2)^0,f,c
 13646   004994  B0D8               	btfsc	status,0,c
 13647   004996  2A30               	incf	(___flge@ff2+2)^0,f,c
 13648   004998  0E80               	movlw	128
 13649   00499A  5631               	subfwb	(___flge@ff2+3)^0,f,c
 13650   00499C                     l910:
 13651   00499C  0E00               	movlw	0
 13652   00499E  1A2A               	xorwf	___flge@ff1^0,f,c
 13653   0049A0  0E00               	movlw	0
 13654   0049A2  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 13655   0049A4  0E00               	movlw	0
 13656   0049A6  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 13657   0049A8  0E80               	movlw	128
 13658   0049AA  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 13659   0049AC  0E00               	movlw	0
 13660   0049AE  1A2E               	xorwf	___flge@ff2^0,f,c
 13661   0049B0  0E00               	movlw	0
 13662   0049B2  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 13663   0049B4  0E00               	movlw	0
 13664   0049B6  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 13665   0049B8  0E80               	movlw	128
 13666   0049BA  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 13667   0049BC  502E               	movf	___flge@ff2^0,w,c
 13668   0049BE  5C2A               	subwf	___flge@ff1^0,w,c
 13669   0049C0  502F               	movf	(___flge@ff2+1)^0,w,c
 13670   0049C2  582B               	subwfb	(___flge@ff1+1)^0,w,c
 13671   0049C4  5030               	movf	(___flge@ff2+2)^0,w,c
 13672   0049C6  582C               	subwfb	(___flge@ff1+2)^0,w,c
 13673   0049C8  5031               	movf	(___flge@ff2+3)^0,w,c
 13674   0049CA  582D               	subwfb	(___flge@ff1+3)^0,w,c
 13675   0049CC  B0D8               	btfsc	status,0,c
 13676   0049CE  EFEB  F024         	goto	u3941
 13677   0049D2  EFED  F024         	goto	u3940
 13678   0049D6                     u3941:
 13679   0049D6  EFF0  F024         	goto	l4320
 13680   0049DA                     u3940:
 13681   0049DA  90D8               	bcf	status,0,c
 13682   0049DC  EFF1  F024         	goto	l915
 13683   0049E0                     l4320:
 13684   0049E0  80D8               	bsf	status,0,c
 13685   0049E2                     l915:
 13686   0049E2  0012               	return		;funcret
 13687   0049E4                     __end_of___flge:
 13688                           	callstack 0
 13689                           
 13690 ;; *************** function ___fleq *****************
 13691 ;; Defined at:
 13692 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 13693 ;; Parameters:    Size  Location     Type
 13694 ;;  ff1             4   49[COMRAM] unsigned char 
 13695 ;;  ff2             4   53[COMRAM] unsigned char 
 13696 ;; Auto vars:     Size  Location     Type
 13697 ;;		None
 13698 ;; Return value:  Size  Location     Type
 13699 ;;		None               void
 13700 ;; Registers used:
 13701 ;;		wreg, status,2, status,0
 13702 ;; Tracked objects:
 13703 ;;		On entry : 0/0
 13704 ;;		On exit  : 0/0
 13705 ;;		Unchanged: 0/0
 13706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13707 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13710 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13711 ;;Total ram usage:       12 bytes
 13712 ;; Hardware stack levels used: 1
 13713 ;; Hardware stack levels required when called: 1
 13714 ;; This function calls:
 13715 ;;		Nothing
 13716 ;; This function is called by:
 13717 ;;		_Colour_decider
 13718 ;;		_efgtoa
 13719 ;; This function uses a non-reentrant model
 13720 ;;
 13721                           
 13722                           	psect	text73
 13723   004BAC                     __ptext73:
 13724                           	callstack 0
 13725   004BAC                     ___fleq:
 13726                           	callstack 25
 13727   004BAC  0E00               	movlw	0
 13728   004BAE  1432               	andwf	___fleq@ff1^0,w,c
 13729   004BB0  6E3A               	movwf	??___fleq^0,c
 13730   004BB2  0E00               	movlw	0
 13731   004BB4  1433               	andwf	(___fleq@ff1+1)^0,w,c
 13732   004BB6  6E3B               	movwf	(??___fleq+1)^0,c
 13733   004BB8  0E80               	movlw	128
 13734   004BBA  1434               	andwf	(___fleq@ff1+2)^0,w,c
 13735   004BBC  6E3C               	movwf	(??___fleq+2)^0,c
 13736   004BBE  0E7F               	movlw	127
 13737   004BC0  1435               	andwf	(___fleq@ff1+3)^0,w,c
 13738   004BC2  6E3D               	movwf	(??___fleq+3)^0,c
 13739   004BC4  503A               	movf	??___fleq^0,w,c
 13740   004BC6  103B               	iorwf	(??___fleq+1)^0,w,c
 13741   004BC8  103C               	iorwf	(??___fleq+2)^0,w,c
 13742   004BCA  103D               	iorwf	(??___fleq+3)^0,w,c
 13743   004BCC  A4D8               	btfss	status,2,c
 13744   004BCE  EFEB  F025         	goto	u3871
 13745   004BD2  EFED  F025         	goto	u3870
 13746   004BD6                     u3871:
 13747   004BD6  EFF5  F025         	goto	l4290
 13748   004BDA                     u3870:
 13749   004BDA  0E00               	movlw	0
 13750   004BDC  6E32               	movwf	___fleq@ff1^0,c
 13751   004BDE  0E00               	movlw	0
 13752   004BE0  6E33               	movwf	(___fleq@ff1+1)^0,c
 13753   004BE2  0E00               	movlw	0
 13754   004BE4  6E34               	movwf	(___fleq@ff1+2)^0,c
 13755   004BE6  0E00               	movlw	0
 13756   004BE8  6E35               	movwf	(___fleq@ff1+3)^0,c
 13757   004BEA                     l4290:
 13758   004BEA  0E00               	movlw	0
 13759   004BEC  1436               	andwf	___fleq@ff2^0,w,c
 13760   004BEE  6E3A               	movwf	??___fleq^0,c
 13761   004BF0  0E00               	movlw	0
 13762   004BF2  1437               	andwf	(___fleq@ff2+1)^0,w,c
 13763   004BF4  6E3B               	movwf	(??___fleq+1)^0,c
 13764   004BF6  0E80               	movlw	128
 13765   004BF8  1438               	andwf	(___fleq@ff2+2)^0,w,c
 13766   004BFA  6E3C               	movwf	(??___fleq+2)^0,c
 13767   004BFC  0E7F               	movlw	127
 13768   004BFE  1439               	andwf	(___fleq@ff2+3)^0,w,c
 13769   004C00  6E3D               	movwf	(??___fleq+3)^0,c
 13770   004C02  503A               	movf	??___fleq^0,w,c
 13771   004C04  103B               	iorwf	(??___fleq+1)^0,w,c
 13772   004C06  103C               	iorwf	(??___fleq+2)^0,w,c
 13773   004C08  103D               	iorwf	(??___fleq+3)^0,w,c
 13774   004C0A  A4D8               	btfss	status,2,c
 13775   004C0C  EF0A  F026         	goto	u3881
 13776   004C10  EF0C  F026         	goto	u3880
 13777   004C14                     u3881:
 13778   004C14  EF14  F026         	goto	l4294
 13779   004C18                     u3880:
 13780   004C18  0E00               	movlw	0
 13781   004C1A  6E36               	movwf	___fleq@ff2^0,c
 13782   004C1C  0E00               	movlw	0
 13783   004C1E  6E37               	movwf	(___fleq@ff2+1)^0,c
 13784   004C20  0E00               	movlw	0
 13785   004C22  6E38               	movwf	(___fleq@ff2+2)^0,c
 13786   004C24  0E00               	movlw	0
 13787   004C26  6E39               	movwf	(___fleq@ff2+3)^0,c
 13788   004C28                     l4294:
 13789   004C28  5036               	movf	___fleq@ff2^0,w,c
 13790   004C2A  1832               	xorwf	___fleq@ff1^0,w,c
 13791   004C2C  E10F               	bnz	u3890
 13792   004C2E  5037               	movf	(___fleq@ff2+1)^0,w,c
 13793   004C30  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 13794   004C32  E10C               	bnz	u3890
 13795   004C34  5038               	movf	(___fleq@ff2+2)^0,w,c
 13796   004C36  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 13797   004C38  E109               	bnz	u3890
 13798   004C3A  5039               	movf	(___fleq@ff2+3)^0,w,c
 13799   004C3C  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 13800   004C3E  B4D8               	btfsc	status,2,c
 13801   004C40  EF24  F026         	goto	u3891
 13802   004C44  EF26  F026         	goto	u3890
 13803   004C48                     u3891:
 13804   004C48  EF29  F026         	goto	l4298
 13805   004C4C                     u3890:
 13806   004C4C  90D8               	bcf	status,0,c
 13807   004C4E  EF2A  F026         	goto	l904
 13808   004C52                     l4298:
 13809   004C52  80D8               	bsf	status,0,c
 13810   004C54                     l904:
 13811   004C54  0012               	return		;funcret
 13812   004C56                     __end_of___fleq:
 13813                           	callstack 0
 13814                           
 13815 ;; *************** function ___fldiv *****************
 13816 ;; Defined at:
 13817 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 13818 ;; Parameters:    Size  Location     Type
 13819 ;;  b               4   49[COMRAM] unsigned char 
 13820 ;;  a               4   53[COMRAM] unsigned char 
 13821 ;; Auto vars:     Size  Location     Type
 13822 ;;  grs             4   68[COMRAM] unsigned long 
 13823 ;;  rem             4   61[COMRAM] unsigned long 
 13824 ;;  new_exp         2   66[COMRAM] short 
 13825 ;;  aexp            1   73[COMRAM] unsigned char 
 13826 ;;  bexp            1   72[COMRAM] unsigned char 
 13827 ;;  sign            1   65[COMRAM] unsigned char 
 13828 ;; Return value:  Size  Location     Type
 13829 ;;                  4   49[COMRAM] unsigned char 
 13830 ;; Registers used:
 13831 ;;		wreg, status,2, status,0
 13832 ;; Tracked objects:
 13833 ;;		On entry : 0/0
 13834 ;;		On exit  : 0/0
 13835 ;;		Unchanged: 0/0
 13836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13837 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13838 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13840 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13841 ;;Total ram usage:       25 bytes
 13842 ;; Hardware stack levels used: 1
 13843 ;; Hardware stack levels required when called: 1
 13844 ;; This function calls:
 13845 ;;		Nothing
 13846 ;; This function is called by:
 13847 ;;		_colour_rel
 13848 ;;		_Colour_decider
 13849 ;;		_efgtoa
 13850 ;; This function uses a non-reentrant model
 13851 ;;
 13852                           
 13853                           	psect	text74
 13854   00313E                     __ptext74:
 13855                           	callstack 0
 13856   00313E                     ___fldiv:
 13857                           	callstack 25
 13858   00313E  5035               	movf	(___fldiv@b+3)^0,w,c
 13859   003140  0B80               	andlw	128
 13860   003142  6E42               	movwf	___fldiv@sign^0,c
 13861   003144  5035               	movf	(___fldiv@b+3)^0,w,c
 13862   003146  2435               	addwf	(___fldiv@b+3)^0,w,c
 13863   003148  6E49               	movwf	___fldiv@bexp^0,c
 13864   00314A  AE34               	btfss	(___fldiv@b+2)^0,7,c
 13865   00314C  EFAA  F018         	goto	u3451
 13866   003150  EFAC  F018         	goto	u3450
 13867   003154                     u3451:
 13868   003154  EFAD  F018         	goto	l4018
 13869   003158                     u3450:
 13870   003158  8049               	bsf	___fldiv@bexp^0,0,c
 13871   00315A                     l4018:
 13872   00315A  5049               	movf	___fldiv@bexp^0,w,c
 13873   00315C  B4D8               	btfsc	status,2,c
 13874   00315E  EFB3  F018         	goto	u3461
 13875   003162  EFB5  F018         	goto	u3460
 13876   003166                     u3461:
 13877   003166  EFCA  F018         	goto	l4028
 13878   00316A                     u3460:
 13879   00316A  2849               	incf	___fldiv@bexp^0,w,c
 13880   00316C  A4D8               	btfss	status,2,c
 13881   00316E  EFBB  F018         	goto	u3471
 13882   003172  EFBD  F018         	goto	u3470
 13883   003176                     u3471:
 13884   003176  EFC5  F018         	goto	l4024
 13885   00317A                     u3470:
 13886   00317A  0E00               	movlw	0
 13887   00317C  6E32               	movwf	___fldiv@b^0,c
 13888   00317E  0E00               	movlw	0
 13889   003180  6E33               	movwf	(___fldiv@b+1)^0,c
 13890   003182  0E00               	movlw	0
 13891   003184  6E34               	movwf	(___fldiv@b+2)^0,c
 13892   003186  0E00               	movlw	0
 13893   003188  6E35               	movwf	(___fldiv@b+3)^0,c
 13894   00318A                     l4024:
 13895   00318A  8E34               	bsf	(___fldiv@b+2)^0,7,c
 13896   00318C  0E00               	movlw	0
 13897   00318E  6E35               	movwf	(___fldiv@b+3)^0,c
 13898   003190  EFD2  F018         	goto	l4030
 13899   003194                     l4028:
 13900   003194  0E00               	movlw	0
 13901   003196  6E32               	movwf	___fldiv@b^0,c
 13902   003198  0E00               	movlw	0
 13903   00319A  6E33               	movwf	(___fldiv@b+1)^0,c
 13904   00319C  0E00               	movlw	0
 13905   00319E  6E34               	movwf	(___fldiv@b+2)^0,c
 13906   0031A0  0E00               	movlw	0
 13907   0031A2  6E35               	movwf	(___fldiv@b+3)^0,c
 13908   0031A4                     l4030:
 13909   0031A4  5039               	movf	(___fldiv@a+3)^0,w,c
 13910   0031A6  0B80               	andlw	128
 13911   0031A8  1A42               	xorwf	___fldiv@sign^0,f,c
 13912   0031AA  5039               	movf	(___fldiv@a+3)^0,w,c
 13913   0031AC  2439               	addwf	(___fldiv@a+3)^0,w,c
 13914   0031AE  6E4A               	movwf	___fldiv@aexp^0,c
 13915   0031B0  AE38               	btfss	(___fldiv@a+2)^0,7,c
 13916   0031B2  EFDD  F018         	goto	u3481
 13917   0031B6  EFDF  F018         	goto	u3480
 13918   0031BA                     u3481:
 13919   0031BA  EFE0  F018         	goto	l4038
 13920   0031BE                     u3480:
 13921   0031BE  804A               	bsf	___fldiv@aexp^0,0,c
 13922   0031C0                     l4038:
 13923   0031C0  504A               	movf	___fldiv@aexp^0,w,c
 13924   0031C2  B4D8               	btfsc	status,2,c
 13925   0031C4  EFE6  F018         	goto	u3491
 13926   0031C8  EFE8  F018         	goto	u3490
 13927   0031CC                     u3491:
 13928   0031CC  EFFD  F018         	goto	l4048
 13929   0031D0                     u3490:
 13930   0031D0  284A               	incf	___fldiv@aexp^0,w,c
 13931   0031D2  A4D8               	btfss	status,2,c
 13932   0031D4  EFEE  F018         	goto	u3501
 13933   0031D8  EFF0  F018         	goto	u3500
 13934   0031DC                     u3501:
 13935   0031DC  EFF8  F018         	goto	l4044
 13936   0031E0                     u3500:
 13937   0031E0  0E00               	movlw	0
 13938   0031E2  6E36               	movwf	___fldiv@a^0,c
 13939   0031E4  0E00               	movlw	0
 13940   0031E6  6E37               	movwf	(___fldiv@a+1)^0,c
 13941   0031E8  0E00               	movlw	0
 13942   0031EA  6E38               	movwf	(___fldiv@a+2)^0,c
 13943   0031EC  0E00               	movlw	0
 13944   0031EE  6E39               	movwf	(___fldiv@a+3)^0,c
 13945   0031F0                     l4044:
 13946   0031F0  8E38               	bsf	(___fldiv@a+2)^0,7,c
 13947   0031F2  0E00               	movlw	0
 13948   0031F4  6E39               	movwf	(___fldiv@a+3)^0,c
 13949   0031F6  EF05  F019         	goto	l4050
 13950   0031FA                     l4048:
 13951   0031FA  0E00               	movlw	0
 13952   0031FC  6E36               	movwf	___fldiv@a^0,c
 13953   0031FE  0E00               	movlw	0
 13954   003200  6E37               	movwf	(___fldiv@a+1)^0,c
 13955   003202  0E00               	movlw	0
 13956   003204  6E38               	movwf	(___fldiv@a+2)^0,c
 13957   003206  0E00               	movlw	0
 13958   003208  6E39               	movwf	(___fldiv@a+3)^0,c
 13959   00320A                     l4050:
 13960   00320A  5036               	movf	___fldiv@a^0,w,c
 13961   00320C  1037               	iorwf	(___fldiv@a+1)^0,w,c
 13962   00320E  1038               	iorwf	(___fldiv@a+2)^0,w,c
 13963   003210  1039               	iorwf	(___fldiv@a+3)^0,w,c
 13964   003212  A4D8               	btfss	status,2,c
 13965   003214  EF0E  F019         	goto	u3511
 13966   003218  EF10  F019         	goto	u3510
 13967   00321C                     u3511:
 13968   00321C  EF28  F019         	goto	l4062
 13969   003220                     u3510:
 13970   003220  0E00               	movlw	0
 13971   003222  6E32               	movwf	___fldiv@b^0,c
 13972   003224  0E00               	movlw	0
 13973   003226  6E33               	movwf	(___fldiv@b+1)^0,c
 13974   003228  0E00               	movlw	0
 13975   00322A  6E34               	movwf	(___fldiv@b+2)^0,c
 13976   00322C  0E00               	movlw	0
 13977   00322E  6E35               	movwf	(___fldiv@b+3)^0,c
 13978   003230  0E80               	movlw	128
 13979   003232  1234               	iorwf	(___fldiv@b+2)^0,f,c
 13980   003234  0E7F               	movlw	127
 13981   003236  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13982   003238                     l4056:
 13983   003238  5042               	movf	___fldiv@sign^0,w,c
 13984   00323A  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13985   00323C  C032  F032         	movff	___fldiv@b,?___fldiv
 13986   003240  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 13987   003244  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 13988   003248  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 13989   00324C  EF6B  F01A         	goto	l1227
 13990   003250                     l4062:
 13991   003250  5049               	movf	___fldiv@bexp^0,w,c
 13992   003252  A4D8               	btfss	status,2,c
 13993   003254  EF2E  F019         	goto	u3521
 13994   003258  EF30  F019         	goto	u3520
 13995   00325C                     u3521:
 13996   00325C  EF3A  F019         	goto	l4070
 13997   003260                     u3520:
 13998   003260  0E00               	movlw	0
 13999   003262  6E32               	movwf	?___fldiv^0,c
 14000   003264  0E00               	movlw	0
 14001   003266  6E33               	movwf	(?___fldiv+1)^0,c
 14002   003268  0E00               	movlw	0
 14003   00326A  6E34               	movwf	(?___fldiv+2)^0,c
 14004   00326C  0E00               	movlw	0
 14005   00326E  6E35               	movwf	(?___fldiv+3)^0,c
 14006   003270  EF6B  F01A         	goto	l1227
 14007   003274                     l4070:
 14008   003274  504A               	movf	___fldiv@aexp^0,w,c
 14009   003276  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14010   00327A  6A3B               	clrf	(??___fldiv+1)^0,c
 14011   00327C  5E3A               	subwf	??___fldiv^0,f,c
 14012   00327E  0E00               	movlw	0
 14013   003280  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14014   003282  0E7F               	movlw	127
 14015   003284  243A               	addwf	??___fldiv^0,w,c
 14016   003286  6E43               	movwf	___fldiv@new_exp^0,c
 14017   003288  0E00               	movlw	0
 14018   00328A  203B               	addwfc	(??___fldiv+1)^0,w,c
 14019   00328C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14020   00328E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14021   003292  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14022   003296  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14023   00329A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14024   00329E  0E00               	movlw	0
 14025   0032A0  6E32               	movwf	___fldiv@b^0,c
 14026   0032A2  0E00               	movlw	0
 14027   0032A4  6E33               	movwf	(___fldiv@b+1)^0,c
 14028   0032A6  0E00               	movlw	0
 14029   0032A8  6E34               	movwf	(___fldiv@b+2)^0,c
 14030   0032AA  0E00               	movlw	0
 14031   0032AC  6E35               	movwf	(___fldiv@b+3)^0,c
 14032   0032AE  0E00               	movlw	0
 14033   0032B0  6E45               	movwf	___fldiv@grs^0,c
 14034   0032B2  0E00               	movlw	0
 14035   0032B4  6E46               	movwf	(___fldiv@grs+1)^0,c
 14036   0032B6  0E00               	movlw	0
 14037   0032B8  6E47               	movwf	(___fldiv@grs+2)^0,c
 14038   0032BA  0E00               	movlw	0
 14039   0032BC  6E48               	movwf	(___fldiv@grs+3)^0,c
 14040   0032BE  0E00               	movlw	0
 14041   0032C0  6E4A               	movwf	___fldiv@aexp^0,c
 14042   0032C2  EF9B  F019         	goto	l1229
 14043   0032C6                     l4080:
 14044   0032C6  504A               	movf	___fldiv@aexp^0,w,c
 14045   0032C8  B4D8               	btfsc	status,2,c
 14046   0032CA  EF69  F019         	goto	u3531
 14047   0032CE  EF6B  F019         	goto	u3530
 14048   0032D2                     u3531:
 14049   0032D2  EF82  F019         	goto	l4088
 14050   0032D6                     u3530:
 14051   0032D6  90D8               	bcf	status,0,c
 14052   0032D8  363E               	rlcf	___fldiv@rem^0,f,c
 14053   0032DA  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 14054   0032DC  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 14055   0032DE  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 14056   0032E0  90D8               	bcf	status,0,c
 14057   0032E2  3632               	rlcf	___fldiv@b^0,f,c
 14058   0032E4  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14059   0032E6  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14060   0032E8  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14061   0032EA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14062   0032EC  EF7A  F019         	goto	u3541
 14063   0032F0  EF7C  F019         	goto	u3540
 14064   0032F4                     u3541:
 14065   0032F4  EF7D  F019         	goto	l1232
 14066   0032F8                     u3540:
 14067   0032F8  8032               	bsf	___fldiv@b^0,0,c
 14068   0032FA                     l1232:
 14069   0032FA  90D8               	bcf	status,0,c
 14070   0032FC  3645               	rlcf	___fldiv@grs^0,f,c
 14071   0032FE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14072   003300  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14073   003302  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14074   003304                     l4088:
 14075   003304  5036               	movf	___fldiv@a^0,w,c
 14076   003306  5C3E               	subwf	___fldiv@rem^0,w,c
 14077   003308  5037               	movf	(___fldiv@a+1)^0,w,c
 14078   00330A  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 14079   00330C  5038               	movf	(___fldiv@a+2)^0,w,c
 14080   00330E  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 14081   003310  5039               	movf	(___fldiv@a+3)^0,w,c
 14082   003312  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 14083   003314  A0D8               	btfss	status,0,c
 14084   003316  EF8F  F019         	goto	u3551
 14085   00331A  EF91  F019         	goto	u3550
 14086   00331E                     u3551:
 14087   00331E  EF9A  F019         	goto	l4094
 14088   003322                     u3550:
 14089   003322  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 14090   003324  5036               	movf	___fldiv@a^0,w,c
 14091   003326  5E3E               	subwf	___fldiv@rem^0,f,c
 14092   003328  5037               	movf	(___fldiv@a+1)^0,w,c
 14093   00332A  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 14094   00332C  5038               	movf	(___fldiv@a+2)^0,w,c
 14095   00332E  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 14096   003330  5039               	movf	(___fldiv@a+3)^0,w,c
 14097   003332  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 14098   003334                     l4094:
 14099   003334  2A4A               	incf	___fldiv@aexp^0,f,c
 14100   003336                     l1229:
 14101   003336  0E19               	movlw	25
 14102   003338  644A               	cpfsgt	___fldiv@aexp^0,c
 14103   00333A  EFA1  F019         	goto	u3561
 14104   00333E  EFA3  F019         	goto	u3560
 14105   003342                     u3561:
 14106   003342  EF63  F019         	goto	l4080
 14107   003346                     u3560:
 14108   003346  503E               	movf	___fldiv@rem^0,w,c
 14109   003348  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 14110   00334A  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 14111   00334C  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 14112   00334E  B4D8               	btfsc	status,2,c
 14113   003350  EFAC  F019         	goto	u3571
 14114   003354  EFAE  F019         	goto	u3570
 14115   003358                     u3571:
 14116   003358  EFC6  F019         	goto	l4106
 14117   00335C                     u3570:
 14118   00335C  8045               	bsf	___fldiv@grs^0,0,c
 14119   00335E  EFC6  F019         	goto	l4106
 14120   003362                     l4100:
 14121   003362  90D8               	bcf	status,0,c
 14122   003364  3632               	rlcf	___fldiv@b^0,f,c
 14123   003366  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14124   003368  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14125   00336A  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14126   00336C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14127   00336E  EFBB  F019         	goto	u3581
 14128   003372  EFBD  F019         	goto	u3580
 14129   003376                     u3581:
 14130   003376  EFBE  F019         	goto	l1238
 14131   00337A                     u3580:
 14132   00337A  8032               	bsf	___fldiv@b^0,0,c
 14133   00337C                     l1238:
 14134   00337C  90D8               	bcf	status,0,c
 14135   00337E  3645               	rlcf	___fldiv@grs^0,f,c
 14136   003380  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14137   003382  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14138   003384  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14139   003386  0643               	decf	___fldiv@new_exp^0,f,c
 14140   003388  A0D8               	btfss	status,0,c
 14141   00338A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 14142   00338C                     l4106:
 14143   00338C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14144   00338E  EFCB  F019         	goto	u3591
 14145   003392  EFCD  F019         	goto	u3590
 14146   003396                     u3591:
 14147   003396  EFB1  F019         	goto	l4100
 14148   00339A                     u3590:
 14149   00339A  0E00               	movlw	0
 14150   00339C  6E4A               	movwf	___fldiv@aexp^0,c
 14151   00339E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14152   0033A0  EFD4  F019         	goto	u3601
 14153   0033A4  EFD6  F019         	goto	u3600
 14154   0033A8                     u3601:
 14155   0033A8  EFFA  F019         	goto	l1240
 14156   0033AC                     u3600:
 14157   0033AC  0EFF               	movlw	255
 14158   0033AE  1445               	andwf	___fldiv@grs^0,w,c
 14159   0033B0  6E3A               	movwf	??___fldiv^0,c
 14160   0033B2  0EFF               	movlw	255
 14161   0033B4  1446               	andwf	(___fldiv@grs+1)^0,w,c
 14162   0033B6  6E3B               	movwf	(??___fldiv+1)^0,c
 14163   0033B8  0EFF               	movlw	255
 14164   0033BA  1447               	andwf	(___fldiv@grs+2)^0,w,c
 14165   0033BC  6E3C               	movwf	(??___fldiv+2)^0,c
 14166   0033BE  0E7F               	movlw	127
 14167   0033C0  1448               	andwf	(___fldiv@grs+3)^0,w,c
 14168   0033C2  6E3D               	movwf	(??___fldiv+3)^0,c
 14169   0033C4  503A               	movf	??___fldiv^0,w,c
 14170   0033C6  103B               	iorwf	(??___fldiv+1)^0,w,c
 14171   0033C8  103C               	iorwf	(??___fldiv+2)^0,w,c
 14172   0033CA  103D               	iorwf	(??___fldiv+3)^0,w,c
 14173   0033CC  B4D8               	btfsc	status,2,c
 14174   0033CE  EFEB  F019         	goto	u3611
 14175   0033D2  EFED  F019         	goto	u3610
 14176   0033D6                     u3611:
 14177   0033D6  EFF1  F019         	goto	l1241
 14178   0033DA                     u3610:
 14179   0033DA                     l4114:
 14180   0033DA  0E01               	movlw	1
 14181   0033DC  6E4A               	movwf	___fldiv@aexp^0,c
 14182   0033DE  EFFA  F019         	goto	l1240
 14183   0033E2                     l1241:
 14184   0033E2  A032               	btfss	___fldiv@b^0,0,c
 14185   0033E4  EFF6  F019         	goto	u3621
 14186   0033E8  EFF8  F019         	goto	u3620
 14187   0033EC                     u3621:
 14188   0033EC  EFFA  F019         	goto	l1240
 14189   0033F0                     u3620:
 14190   0033F0  EFED  F019         	goto	l4114
 14191   0033F4                     l1240:
 14192   0033F4  504A               	movf	___fldiv@aexp^0,w,c
 14193   0033F6  B4D8               	btfsc	status,2,c
 14194   0033F8  EF00  F01A         	goto	u3631
 14195   0033FC  EF02  F01A         	goto	u3630
 14196   003400                     u3631:
 14197   003400  EF26  F01A         	goto	l4126
 14198   003404                     u3630:
 14199   003404  0E01               	movlw	1
 14200   003406  2632               	addwf	___fldiv@b^0,f,c
 14201   003408  0E00               	movlw	0
 14202   00340A  2233               	addwfc	(___fldiv@b+1)^0,f,c
 14203   00340C  2234               	addwfc	(___fldiv@b+2)^0,f,c
 14204   00340E  2235               	addwfc	(___fldiv@b+3)^0,f,c
 14205   003410  A035               	btfss	(___fldiv@b+3)^0,0,c
 14206   003412  EF0D  F01A         	goto	u3641
 14207   003416  EF0F  F01A         	goto	u3640
 14208   00341A                     u3641:
 14209   00341A  EF26  F01A         	goto	l4126
 14210   00341E                     u3640:
 14211   00341E  C032  F03A         	movff	___fldiv@b,??___fldiv
 14212   003422  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 14213   003426  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 14214   00342A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 14215   00342E  343D               	rlcf	(??___fldiv+3)^0,w,c
 14216   003430  323D               	rrcf	(??___fldiv+3)^0,f,c
 14217   003432  323C               	rrcf	(??___fldiv+2)^0,f,c
 14218   003434  323B               	rrcf	(??___fldiv+1)^0,f,c
 14219   003436  323A               	rrcf	??___fldiv^0,f,c
 14220   003438  C03A  F032         	movff	??___fldiv,___fldiv@b
 14221   00343C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 14222   003440  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 14223   003444  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 14224   003448  4A43               	infsnz	___fldiv@new_exp^0,f,c
 14225   00344A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 14226   00344C                     l4126:
 14227   00344C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14228   00344E  EF31  F01A         	goto	u3651
 14229   003452  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14230   003454  E108               	bnz	u3650
 14231   003456  2843               	incf	___fldiv@new_exp^0,w,c
 14232   003458  A0D8               	btfss	status,0,c
 14233   00345A  EF31  F01A         	goto	u3651
 14234   00345E  EF33  F01A         	goto	u3650
 14235   003462                     u3651:
 14236   003462  EF3E  F01A         	goto	l4130
 14237   003466                     u3650:
 14238   003466  0E00               	movlw	0
 14239   003468  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14240   00346A  6843               	setf	___fldiv@new_exp^0,c
 14241   00346C  0E00               	movlw	0
 14242   00346E  6E32               	movwf	___fldiv@b^0,c
 14243   003470  0E00               	movlw	0
 14244   003472  6E33               	movwf	(___fldiv@b+1)^0,c
 14245   003474  0E00               	movlw	0
 14246   003476  6E34               	movwf	(___fldiv@b+2)^0,c
 14247   003478  0E00               	movlw	0
 14248   00347A  6E35               	movwf	(___fldiv@b+3)^0,c
 14249   00347C                     l4130:
 14250   00347C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14251   00347E  EF4B  F01A         	goto	u3660
 14252   003482  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14253   003484  E106               	bnz	u3661
 14254   003486  0443               	decf	___fldiv@new_exp^0,w,c
 14255   003488  B0D8               	btfsc	status,0,c
 14256   00348A  EF49  F01A         	goto	u3661
 14257   00348E  EF4B  F01A         	goto	u3660
 14258   003492                     u3661:
 14259   003492  EF59  F01A         	goto	l4134
 14260   003496                     u3660:
 14261   003496  0E00               	movlw	0
 14262   003498  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14263   00349A  0E00               	movlw	0
 14264   00349C  6E43               	movwf	___fldiv@new_exp^0,c
 14265   00349E  0E00               	movlw	0
 14266   0034A0  6E32               	movwf	___fldiv@b^0,c
 14267   0034A2  0E00               	movlw	0
 14268   0034A4  6E33               	movwf	(___fldiv@b+1)^0,c
 14269   0034A6  0E00               	movlw	0
 14270   0034A8  6E34               	movwf	(___fldiv@b+2)^0,c
 14271   0034AA  0E00               	movlw	0
 14272   0034AC  6E35               	movwf	(___fldiv@b+3)^0,c
 14273   0034AE  0E00               	movlw	0
 14274   0034B0  6E42               	movwf	___fldiv@sign^0,c
 14275   0034B2                     l4134:
 14276   0034B2  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 14277   0034B6  A049               	btfss	___fldiv@bexp^0,0,c
 14278   0034B8  EF60  F01A         	goto	u3671
 14279   0034BC  EF62  F01A         	goto	u3670
 14280   0034C0                     u3671:
 14281   0034C0  EF65  F01A         	goto	l4140
 14282   0034C4                     u3670:
 14283   0034C4  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14284   0034C6  EF66  F01A         	goto	l4142
 14285   0034CA                     l4140:
 14286   0034CA  9E34               	bcf	(___fldiv@b+2)^0,7,c
 14287   0034CC                     l4142:
 14288   0034CC  90D8               	bcf	status,0,c
 14289   0034CE  3049               	rrcf	___fldiv@bexp^0,w,c
 14290   0034D0  6E35               	movwf	(___fldiv@b+3)^0,c
 14291   0034D2  EF1C  F019         	goto	l4056
 14292   0034D6                     l1227:
 14293   0034D6  0012               	return		;funcret
 14294   0034D8                     __end_of___fldiv:
 14295                           	callstack 0
 14296                           
 14297 ;; *************** function _HighISR *****************
 14298 ;; Defined at:
 14299 ;;		line 59 in file "interrupts.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;		None
 14302 ;; Auto vars:     Size  Location     Type
 14303 ;;		None
 14304 ;; Return value:  Size  Location     Type
 14305 ;;                  1    wreg      void 
 14306 ;; Registers used:
 14307 ;;		None
 14308 ;; Tracked objects:
 14309 ;;		On entry : 0/0
 14310 ;;		On exit  : 0/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14317 ;;Total ram usage:        0 bytes
 14318 ;; Hardware stack levels used: 1
 14319 ;; This function calls:
 14320 ;;		Nothing
 14321 ;; This function is called by:
 14322 ;;		Interrupt level 2
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           	psect	intcode
 14327   000008                     __pintcode:
 14328                           	callstack 0
 14329   000008                     _HighISR:
 14330                           	callstack 22
 14331                           
 14332                           ;incstack = 0
 14333   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14334   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14335   00000C  0011               	retfie		f
 14336   00000E                     __end_of_HighISR:
 14337                           	callstack 0
 14338                           
 14339                           	psect	rparam
 14340   000000                     
 14341                           	psect	temp
 14342   00005F                     btemp:
 14343                           	callstack 0
 14344   00005F                     	ds	1
 14345   000000                     int$flags	set	btemp
 14346   000000                     wtemp8	set	btemp+1
 14347   000000                     ttemp5	set	btemp+1
 14348   000000                     ttemp6	set	btemp+4
 14349   000000                     ttemp7	set	btemp+8
 14350                           
 14351                           	psect	idloc
 14352                           
 14353                           ;Config register IDLOC0 @ 0x200000
 14354                           ;	unspecified, using default values
 14355   200000                     	org	2097152
 14356   200000  0FFF               	dw	4095
 14357                           
 14358                           ;Config register IDLOC1 @ 0x200002
 14359                           ;	unspecified, using default values
 14360   200002                     	org	2097154
 14361   200002  0FFF               	dw	4095
 14362                           
 14363                           ;Config register IDLOC2 @ 0x200004
 14364                           ;	unspecified, using default values
 14365   200004                     	org	2097156
 14366   200004  0FFF               	dw	4095
 14367                           
 14368                           ;Config register IDLOC3 @ 0x200006
 14369                           ;	unspecified, using default values
 14370   200006                     	org	2097158
 14371   200006  0FFF               	dw	4095
 14372                           
 14373                           ;Config register IDLOC4 @ 0x200008
 14374                           ;	unspecified, using default values
 14375   200008                     	org	2097160
 14376   200008  0FFF               	dw	4095
 14377                           
 14378                           ;Config register IDLOC5 @ 0x20000A
 14379                           ;	unspecified, using default values
 14380   20000A                     	org	2097162
 14381   20000A  0FFF               	dw	4095
 14382                           
 14383                           ;Config register IDLOC6 @ 0x20000C
 14384                           ;	unspecified, using default values
 14385   20000C                     	org	2097164
 14386   20000C  0FFF               	dw	4095
 14387                           
 14388                           ;Config register IDLOC7 @ 0x20000E
 14389                           ;	unspecified, using default values
 14390   20000E                     	org	2097166
 14391   20000E  0FFF               	dw	4095
 14392                           
 14393                           	psect	config
 14394                           
 14395                           ;Config register CONFIG1L @ 0x300000
 14396                           ;	External Oscillator mode Selection bits
 14397                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14398                           ;	Power-up default value for COSC bits
 14399                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14400   300000                     	org	3145728
 14401   300000  AA                 	db	170
 14402                           
 14403                           ;Config register CONFIG1H @ 0x300001
 14404                           ;	unspecified, using default values
 14405                           ;	Clock Out Enable bit
 14406                           ;	CLKOUTEN = 0x1, unprogrammed default
 14407                           ;	Clock Switch Enable bit
 14408                           ;	CSWEN = 0x1, unprogrammed default
 14409                           ;	Fail-Safe Clock Monitor Enable bit
 14410                           ;	FCMEN = 0x1, unprogrammed default
 14411   300001                     	org	3145729
 14412   300001  FF                 	db	255
 14413                           
 14414                           ;Config register CONFIG2L @ 0x300002
 14415                           ;	unspecified, using default values
 14416                           ;	Master Clear Enable bit
 14417                           ;	MCLRE = 0x1, unprogrammed default
 14418                           ;	Power-up Timer Enable bit
 14419                           ;	PWRTE = 0x1, unprogrammed default
 14420                           ;	Low-power BOR enable bit
 14421                           ;	LPBOREN = 0x1, unprogrammed default
 14422                           ;	Brown-out Reset Enable bits
 14423                           ;	BOREN = 0x3, unprogrammed default
 14424   300002                     	org	3145730
 14425   300002  FF                 	db	255
 14426                           
 14427                           ;Config register CONFIG2H @ 0x300003
 14428                           ;	unspecified, using default values
 14429                           ;	Brown Out Reset Voltage selection bits
 14430                           ;	BORV = 0x3, unprogrammed default
 14431                           ;	ZCD Disable bit
 14432                           ;	ZCD = 0x1, unprogrammed default
 14433                           ;	PPSLOCK bit One-Way Set Enable bit
 14434                           ;	PPS1WAY = 0x1, unprogrammed default
 14435                           ;	Stack Full/Underflow Reset Enable bit
 14436                           ;	STVREN = 0x1, unprogrammed default
 14437                           ;	Debugger Enable bit
 14438                           ;	DEBUG = 0x1, unprogrammed default
 14439                           ;	Extended Instruction Set Enable bit
 14440                           ;	XINST = 0x1, unprogrammed default
 14441   300003                     	org	3145731
 14442   300003  FF                 	db	255
 14443                           
 14444                           ;Config register CONFIG3L @ 0x300004
 14445                           ;	WDT Period Select bits
 14446                           ;	WDTCPS = 0x1F, unprogrammed default
 14447                           ;	WDT operating mode
 14448                           ;	WDTE = OFF, WDT Disabled
 14449   300004                     	org	3145732
 14450   300004  9F                 	db	159
 14451                           
 14452                           ;Config register CONFIG3H @ 0x300005
 14453                           ;	unspecified, using default values
 14454                           ;	WDT Window Select bits
 14455                           ;	WDTCWS = 0x7, unprogrammed default
 14456                           ;	WDT input clock selector
 14457                           ;	WDTCCS = 0x7, unprogrammed default
 14458   300005                     	org	3145733
 14459   300005  FF                 	db	255
 14460                           
 14461                           ;Config register CONFIG4L @ 0x300006
 14462                           ;	unspecified, using default values
 14463                           ;	Write Protection Block 0
 14464                           ;	WRT0 = 0x1, unprogrammed default
 14465                           ;	Write Protection Block 1
 14466                           ;	WRT1 = 0x1, unprogrammed default
 14467                           ;	Write Protection Block 2
 14468                           ;	WRT2 = 0x1, unprogrammed default
 14469                           ;	Write Protection Block 3
 14470                           ;	WRT3 = 0x1, unprogrammed default
 14471                           ;	Write Protection Block 3
 14472                           ;	WRT4 = 0x1, unprogrammed default
 14473                           ;	Write Protection Block 3
 14474                           ;	WRT5 = 0x1, unprogrammed default
 14475                           ;	Write Protection Block 3
 14476                           ;	WRT6 = 0x1, unprogrammed default
 14477                           ;	Write Protection Block 3
 14478                           ;	WRT7 = 0x1, unprogrammed default
 14479   300006                     	org	3145734
 14480   300006  FF                 	db	255
 14481                           
 14482                           ;Config register CONFIG4H @ 0x300007
 14483                           ;	unspecified, using default values
 14484                           ;	Configuration Register Write Protection bit
 14485                           ;	WRTC = 0x1, unprogrammed default
 14486                           ;	Boot Block Write Protection bit
 14487                           ;	WRTB = 0x1, unprogrammed default
 14488                           ;	Data EEPROM Write Protection bit
 14489                           ;	WRTD = 0x1, unprogrammed default
 14490                           ;	Scanner Enable bit
 14491                           ;	SCANE = 0x1, unprogrammed default
 14492                           ;	Low Voltage Programming Enable bit
 14493                           ;	LVP = 0x1, unprogrammed default
 14494   300007                     	org	3145735
 14495   300007  FF                 	db	255
 14496                           
 14497                           ;Config register CONFIG5L @ 0x300008
 14498                           ;	unspecified, using default values
 14499                           ;	UserNVM Program Memory Code Protection bit
 14500                           ;	CP = 0x1, unprogrammed default
 14501                           ;	DataNVM Memory Code Protection bit
 14502                           ;	CPD = 0x1, unprogrammed default
 14503   300008                     	org	3145736
 14504   300008  FF                 	db	255
 14505                           
 14506                           ;Config register CONFIG5H @ 0x300009
 14507                           ;	unspecified, using default values
 14508   300009                     	org	3145737
 14509   300009  FF                 	db	255
 14510                           
 14511                           ;Config register CONFIG6L @ 0x30000A
 14512                           ;	unspecified, using default values
 14513                           ;	Table Read Protection Block 0
 14514                           ;	EBTR0 = 0x1, unprogrammed default
 14515                           ;	Table Read Protection Block 1
 14516                           ;	EBTR1 = 0x1, unprogrammed default
 14517                           ;	Table Read Protection Block 2
 14518                           ;	EBTR2 = 0x1, unprogrammed default
 14519                           ;	Table Read Protection Block 3
 14520                           ;	EBTR3 = 0x1, unprogrammed default
 14521                           ;	Table Read Protection Block 4
 14522                           ;	EBTR4 = 0x1, unprogrammed default
 14523                           ;	Table Read Protection Block 5
 14524                           ;	EBTR5 = 0x1, unprogrammed default
 14525                           ;	Table Read Protection Block 6
 14526                           ;	EBTR6 = 0x1, unprogrammed default
 14527                           ;	Table Read Protection Block 7
 14528                           ;	EBTR7 = 0x1, unprogrammed default
 14529   30000A                     	org	3145738
 14530   30000A  FF                 	db	255
 14531                           
 14532                           ;Config register CONFIG6H @ 0x30000B
 14533                           ;	unspecified, using default values
 14534                           ;	Boot Block Table Read Protection bit
 14535                           ;	EBTRB = 0x1, unprogrammed default
 14536   30000B                     	org	3145739
 14537   30000B  FF                 	db	255
 14538                           tosu	equ	0xFFF
 14539                           tosh	equ	0xFFE
 14540                           tosl	equ	0xFFD
 14541                           stkptr	equ	0xFFC
 14542                           pclatu	equ	0xFFB
 14543                           pclath	equ	0xFFA
 14544                           pcl	equ	0xFF9
 14545                           tblptru	equ	0xFF8
 14546                           tblptrh	equ	0xFF7
 14547                           tblptrl	equ	0xFF6
 14548                           tablat	equ	0xFF5
 14549                           prodh	equ	0xFF4
 14550                           prodl	equ	0xFF3
 14551                           indf0	equ	0xFEF
 14552                           postinc0	equ	0xFEE
 14553                           postdec0	equ	0xFED
 14554                           preinc0	equ	0xFEC
 14555                           plusw0	equ	0xFEB
 14556                           fsr0h	equ	0xFEA
 14557                           fsr0l	equ	0xFE9
 14558                           wreg	equ	0xFE8
 14559                           indf1	equ	0xFE7
 14560                           postinc1	equ	0xFE6
 14561                           postdec1	equ	0xFE5
 14562                           preinc1	equ	0xFE4
 14563                           plusw1	equ	0xFE3
 14564                           fsr1h	equ	0xFE2
 14565                           fsr1l	equ	0xFE1
 14566                           bsr	equ	0xFE0
 14567                           indf2	equ	0xFDF
 14568                           postinc2	equ	0xFDE
 14569                           postdec2	equ	0xFDD
 14570                           preinc2	equ	0xFDC
 14571                           plusw2	equ	0xFDB
 14572                           fsr2h	equ	0xFDA
 14573                           fsr2l	equ	0xFD9
 14574                           status	equ	0xFD8
>>>>>>> Stashed changes

Data Sizes:
    Strings     87
    Constant    0
<<<<<<< Updated upstream
    Data        7
    BSS         481
=======
    Data        3
    BSS         381
>>>>>>> Stashed changes
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
<<<<<<< Updated upstream
    BANK0           160    115     153
    BANK1           256    108     248
    BANK2           256      0      60
    BANK3           256      0     250
=======
    BANK0           160    115     157
    BANK1           256    108     240
    BANK2           256      0     210
    BANK3           256      0       0
>>>>>>> Stashed changes
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

<<<<<<< Updated upstream
    S2359$vp	PTR void  size(2) Largest target is 0
=======
    S2480$vp	PTR void  size(2) Largest target is 0
>>>>>>> Stashed changes

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

<<<<<<< Updated upstream
    S2275$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2275$buffer	PTR unsigned char  size(2) Largest target is 0
=======
    S2396$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2396$buffer	PTR unsigned char  size(2) Largest target is 0
>>>>>>> Stashed changes

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK2[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _fullSpeedAhead->_setMotorPWM
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (0) _main                                               110   110      0  320190
=======
 (0) _main                                               110   110      0  326154
>>>>>>> Stashed changes
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35773
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35266
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34913
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29067
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     593
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _go_Home                                              5     3      2  111544
                                             35 COMRAM     5     3      2
=======
 (1) _go_Home                                             13     9      4  115215
                                             34 COMRAM    11     7      4
>>>>>>> Stashed changes
                           _BlueMove
                   _Forwardhalfblock
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                     _fullSpeedAhead
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _ReverseYellow                                        4     0      4   13796
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   14404
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6442
                                             25 COMRAM     6     2      4
=======
 (2) _ReverseYellow                                        4     0      4   14100
                                             30 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   14708
                                             30 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6746
                                             24 COMRAM     6     2      4
>>>>>>> Stashed changes
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _Forwardhalfblock                                     6     2      4    6594
                                             25 COMRAM     6     2      4
=======
 (2) _Forwardhalfblock                                     6     2      4    6746
                                             24 COMRAM     6     2      4
>>>>>>> Stashed changes
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   15620
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _colour_rel                                          28    24      4    8736
=======
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8600
>>>>>>> Stashed changes
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   21910
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    7810
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _RetryMove                                            6     2      4    8947
                                             25 COMRAM     6     2      4
=======
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9251
                                             24 COMRAM     6     2      4
>>>>>>> Stashed changes
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (4) _fullSpeedAhead                                       6     2      4    2461
                                             19 COMRAM     6     2      4
=======
 (2) _fullSpeedAhead                                       5     1      4    2765
                                             19 COMRAM     5     1      4
>>>>>>> Stashed changes
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   21302
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7202
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6594
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7354
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3633
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23739
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     801
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3232
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _Forwardhalfblock
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D2       9       82.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      F8       7       96.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRhlll        6      0       0      38        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
<<<<<<< Updated upstream
ABS                  0      0     325      60        0.0%
DATA                 0      0     325       3        0.0%
=======
ABS                  0      0     2BD      61        0.0%
DATA                 0      0     2BD       3        0.0%
>>>>>>> Stashed changes
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
<<<<<<< Updated upstream
Symbol Table                                                                                   Sat Mar 11 15:55:22 2023

               _color_read_Red 5744                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 56F4                   ___fldiv@sign 0042                _color_read_Blue 57E4  
                           l43 55FE                             l52 5792                             l61 51EE  
                           l46 5B7A                             l55 57E2                             l64 37E6  
                           l49 5742                             l74 1934                             l58 5832  
          ___wmul@multiplicand 0003               _color_read_Green 5794                readColours@vals 000C  
            ??_Interrupts_init 0001                            l210 5BB0                            l141 5B0E  
                          l150 5BC6                            l207 5B9C                            l144 5B34  
                          l216 5AE2                            l153 5BD0                            l138 5B0C  
                          l147 5BDA                            l156 5BBC                            l270 5BE6  
                          l414 2832                            l406 27D8                            l159 5942  
                          l512 4E4E                            l504 4D12                            l521 53B0  
                          l530 52FC                            l515 5408                            l611 414E  
                          l524 5356                            l605 4144                            l614 5B5A  
                          l518 5460                            l542 5190                            l198 5B98  
                          l551 555A                            l527 52A2                            l480 4FD6  
                          l536 5A3C                            l560 59C0                            l384 23C4  
                          l545 5650                            l474 45F6                            l554 55AC  
                          l539 5A7A                            l563 59FE                            l467 4ED6  
                          l548 56A2                            l557 4F58                            l741 475A  
                          l911 4860                            l488 4DB0                            l496 4C74  
                          l728 448A                            l873 4BD6                            l884 4964  
                          l879 491E                            l888 5AB2                            _abs 5944  
                          _pad 4FD8                            _rel 0166                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           l1112 50C4                           l1201 32DC  
                         l1105 50BC                           l1210 33C4                           ?_abs 0013  
                         l1142 2A24                           l1207 335E                           l1151 2CF4  
                         l1143 2A12                           l1232 311E                           l1144 29D8  
                         l1209 33D6                           l1235 2FB0                           l1228 2DBA  
                         l1324 4FFA                           l1245 30E0                           l1237 3028  
                         l1333 3B7A                           l1501 58BC                           l1238 3016  
                         l1406 3AEC                           l1159 2B3E                           l1335 3B82  
                         l1168 2C0E                           l1184 5878                           l1272 4302  
                         l1328 5050                           l1336 3BC8                           l4001 3290  
                         l1169 2BFC                           l1361 1CC8                           l4011 32DA  
                         l4003 32A0                           l1283 429A                           l1443 597A  
                         l1347 3D6A                           l1363 1B0E                           l1196 34B8  
                         l1276 423E                           l1452 3F7C                           l1428 54B6  
                         l1292 5508                           l4021 3328                           l4013 32E6  
                         l4005 32A8                           l4101 2D84                           l1269 41A6  
                         l1198 3318                           l1446 5982                           l1438 4A62  
                         l1358 232E                           l4023 333E                           l4031 336E  
                         l4015 3304                           l4007 32B8                           l4111 2DDA  
                         l4103 2D94                           l1455 3EC0                           l1463 511A  
                         l1391 2110                           l1472 56F2                           l4033 337C  
                         l4025 3344                           l4017 3306                           l4009 32CC  
                         l4201 310E                           l4121 2E1A                           l4105 2DA4  
                         l5001 55BC                           l1466 512A                           l4043 33E6  
                         l4051 342E                           l4035 3380                           l4027 334E  
                         l4019 3316                           l4211 4B2E                           l4131 2E64  
                         l4123 2E26                           l4115 2DEE                           l4107 2DAA  
                         l5011 55EC                           l5003 55CC                           l1484 4B2C  
                         l1492 5900                           l4061 3498                           l4053 3448  
                         l4045 33F2                           l4037 338E                           l4029 335C  
                         l4221 4BCE                           l4213 4B5C                           l4141 2EB6  
                         l4133 2E70                           l4125 2E3E                           l4117 2DFA  
                         l4109 2DCA                           l4205 5834                           l5101 13B4  
                         l5021 55F6                           l5013 55EE                           l5005 55D6  
                         l4301 4FD8                           l4063 34A6                           l4055 345E  
                         l4047 3400                           l4039 33BC                           l4223 4BD4  
                         l4215 4B6C                           l4231 48A0                           l4151 2F34  
                         l4143 2EC6                           l4135 2E80                           l4127 2E4A  
                         l4119 2E04                           l4207 5844                           l5111 1424  
                         l5103 13E6                           l5023 55F8                           l5015 55F0  
                         l5007 55E0                           l5031 34BA                           l1495 5BE4  
                         l4311 501E                           l4303 4FE6                           l4065 34AC  
                         l4057 3478                           l4049 342A                           l4217 4B9A  
                         l4241 490C                           l4233 48CE                           l4161 2FAE  
                         l4153 2F6A                           l4145 2EE2                           l4137 2E8C  
                         l4129 2E56                           l4081 2D12                           l5201 1834  
                         l5121 1494                           l5113 1456                           l4401 4F8E  
                         l5025 55FA                           l5017 55F2                           l5009 55EA  
                         l5041 371A                           l5033 3586                           l4313 503C  
                         l4305 4FF2                           l4321 4986                           l4067 34AE  
                         l4059 3494                           l4219 4BAA                           l4243 495C  
                         l4235 48DE                           l4227 4862                           l4171 300E  
                         l4163 2FC0                           l4155 2F78                           l4147 2EEE  
                         l4139 2E9C                           l4091 2D58                           l4083 2D22  
                         l4075 2CF6                           l3611 2842                           l5203 1866  
                         l5123 14C6                           l5051 0EC0                           l3603 5B36  
                         l4403 4FA6                           l4411 4D50                           l5027 55FC  
                         l5019 55F4                           l5043 374E                           l5035 35BA  
                         l4315 5944                           l4307 5006                           l4251 5A92  
                         l4323 49C4                           l4331 4A04                           l4245 4962  
                         l4237 48EC                           l4229 4890                           l4181 307C  
                         l4165 2FCE                           l4157 2F96                           l4149 2F0A  
                         l4093 2D5E                           l4085 2D32                           l4077 2D02  
                         l3701 29F6                           l3621 2882                           l3613 2850  
                         l5221 1920                           l5205 18A0                           l5213 18DE  
                         l5141 1588                           l5125 1500                           l5133 153E  
                         l5109 13F2                           l5061 0F32                           l5053 0EF4  
                         l5045 0E5A                           l3605 5B52                           l4405 4FBE  
                         l4413 4D5C                           l4421 4BD8                           l5037 364E  
                         l5029 5192                           l4317 595E                           l4309 501A  
                         l4501 3CEC                           l4253 5AA2                           l4333 4A16  
                         l4325 49EC                           l4341 587A                           l4239 48FE  
                         l4191 30E4                           l4175 3038                           l4183 3080  
                         l4167 2FD2                           l4159 2FA0                           l4095 2D64  
                         l4087 2D42                           l4079 2D10                           l3711 2A42  
                         l3703 2A04                           l3631 28B4                           l3623 2884  
                         l3615 2852                           l5135 157C                           l5119 1462  
                         l5071 1044                           l5063 0F84                           l5055 0F28  
                         l5047 0E84                           l4415 4D68                           l4407 4D14  
                         l5311 4F04                           l4423 4BFC                           l4431 4C44  
                         l5303 5600                           l5039 3682                           l5231 5B86  
                         l4511 3D4A                           l4503 3D0A                           l4271 47C6  
                         l4263 4786                           l4327 49F8                           l4319 4966  
                         l4351 3D8C                           l4343 588A                           l4193 30F4  
                         l4185 309A                           l4177 3044                           l4169 2FE0  
                         l4097 2D72                           l4089 2D48                           l3801 2CCE  
                         l3721 2A82                           l3705 2A06                           l3641 28DC  
                         l3633 28B6                           l3617 2862                           l3625 288C  
                         l3609 2836                           l5225 192C                           l5145 1594  
                         l5081 10C8                           l5073 104A                           l5065 0FB6  
                         l5049 0E90                           l4409 4D38                           l4417 4D80  
                         l5305 5652                           l4441 4CBE                           l5313 4F18  
                         l4433 4C5C                           l4425 4C14                           l5233 5B88  
                         l5241 5AB4                           l4505 3D24                           l4249 5A7C  
                         l4281 47F6                           l4273 47D4                           l4265 47B0  
                         l4257 475C                           l4337 4A5A                           l4361 3E74  
                         l4353 3DE2                           l4345 50C6                           l4601 1C96  
                         l4521 195A                           l4195 3102                           l4187 30AE  
                         l4179 3052                           l4099 2D74                           l3803 2CD4  
                         l3731 2AAC                           l3723 2A8E                           l3715 2A56  
                         l3707 2A10                           l3651 2916                           l3643 28EC  
                         l3635 28BC                           l3627 289C                           l3619 2872  
                         l5171 16C2                           l5147 15C6                           l5091 11D6  
                         l5083 10DC                           l5075 1066                           l5067 0FBE  
                         l3811 5052                           l4451 4DD6                           l4419 4D98  
                         l4443 4CCA                           l4435 4C76                           l5315 4F2C  
                         l5307 4ED8                           l4427 4C20                           l5331 4000  
                         l5323 3F98                           l5235 5B92                           l5243 5AB8  
                         l4507 3D34                           l4291 4820                           l4283 4800  
                         l4267 47B2                           l4259 4772                           l4371 3F5C  
                         l4363 3EB0                           l4355 3DF6                           l4347 50E4  
                         l4611 1CFC                           l4603 1CD0                           l4531 19A4  
                         l4523 195E                           l4515 1936                           l5411 2340  
                         l5403 2330                           l4197 3104                           l4189 30C8  
                         l3805 2CE2                           l3741 2B1E                           l3725 2A92  
                         l3717 2A66                           l3709 2A32                           l3733 2AB2  
                         l3661 2942                           l3653 2928                           l3645 28FC  
                         l3637 28CA                           l3629 28A2                           l5173 16F4  
                         l5165 1684                           l5157 163A                           l5149 15F8  
                         l5093 1252                           l5085 117C                           l5077 10BC  
                         l5069 1012                           l3821 508A                           l3813 505A  
                         l4461 4E36                           l4453 4DEE                           l4437 4C9A  
                         l4445 4CE2                           l5309 4EEC                           l4429 4C2C  
                         l5341 408A                           l5333 401E                           l5325 3FB4  
                         l5317 3F7E                           l5261 4E50                           l5237 5B94  
                         l5229 5B7C                           l5245 5AC6                           l3901 45F8  
                         l4509 3D3A                           l4293 4830                           l4269 47C2  
                         l4373 3F6C                           l4357 3E04                           l4365 3EE4  
                         l4349 3D6C                           l4381 56C4                           l4701 2196  
                         l4621 1D4A                           l4613 1D00                           l4605 1CE0  
                         l4541 19F2                           l4533 19B4                           l4525 1982  
                         l4517 193C                           l5501 259E                           l5421 2354  
                         l5413 234C                           l5405 2334                           ?_pad 0011  
                         l4199 310A                           l3807 2CE4                           l3751 2B78  
                         l3735 2AD8                           l3743 2B2E                           l3727 2AA0  
                         l3719 2A74                           l3671 2956                           l3663 2946  
                         l3655 2936                           l3647 28FE                           l3639 28CC  
                         l5191 17CC                           l5159 1678                           l5095 12AE  
                         l5087 118C                           l3831 50B6                           l3823 5090  
                         l3815 506C                           l4455 4DFA                           l4447 4CFA  
                         l4439 4CB2                           l4391 5B1E                           l5351 410E  
                         l5343 40A2                           l5335 4036                           l5327 3FCC  
                         l5319 3F86                           l5271 4E7E                           l5263 4E62  
                         l5239 5B96                           l5247 5ACA                           l3911 463C  
                         l3903 45FC                           l3591 4A76                           l4471 3B52  
                         l4463 3AEE                           l4295 4840                           l4279 47EC  
                         l4367 3F20                           l4383 56C8                           l4711 2234  
                         l4703 219A                           l4631 1DE2                           l4615 1D12  
                         l4623 1D52                           l4607 1CEC                           l4551 1A2E  
                         l4543 1A04                           l4535 19C0                           l4527 198C  
                         l4519 194C                           l5511 25F4                           l5503 25B2  
                         l5431 2364                           l5423 2358                           l5415 234E  
                         l5407 2338                           l3761 2BA8                           l3753 2B82  
                         l3745 2B54                           l3737 2B0C                           l3729 2AA2  
                         l3681 296A                           l3673 295A                           l3665 294A  
                         l3657 293A                           l3649 2906                           l5185 1736  
                         l5169 1690                           l5097 132A                           l5089 11C4  
                         l3825 50A6                           l3817 5074                           l3841 448C  
                         l4457 4E06                           l4449 4DB2                           l4393 4F5A  
                         l5353 412C                           l5345 40C0                           l5337 4054  
                         l5329 3FE8                           l5281 4EBC                           l5273 4E82  
                         l5265 4E64                           l3921 46A4                           l3913 465C  
                         l3905 460A                           l3593 4A88                           l3833 58BE  
                         l4481 3BB0                           l4473 3B6E                           l4465 3B0E  
                         l4297 4850                           l4289 4814                           l4369 3F34  
                         l4385 56D4                           l4377 56A4                           l4721 228A  
                         l4705 21A0                           l4713 2238                           l4641 1EC6  
                         l4633 1E3A                           l4625 1D5A                           l4617 1D20  
                         l4609 1CF4                           l4561 1A90                           l4553 1A38  
                         l4545 1A08                           l4537 19C8                           l4529 1994  
                         l4801 3840                           l5521 263C                           l5513 25FA  
                         l5505 25B8                           l5441 2384                           l5433 2368  
                         l5425 235A                           l5417 2350                           l5409 233C  
                         l3771 2BD0                           l3763 2BAC                           l3755 2B90  
                         l3747 2B64                           l3739 2B0E                           l3691 29A4  
                         l3683 296E                           l3675 295E                           l3667 294E  
                         l3659 293E                           l5187 1768                           l5099 1382  
                         l3827 50AE                           l3819 507C                           l3851 4556  
                         l3843 44A8                           l4459 4E1E                           l4395 4F5E  
                         l5347 40D8                           l5339 406C                           l5355 4144  
                         l5283 4EBE                           l5275 4EA6                           l5267 4E66  
                         l3931 471A                           l3923 46D2                           l3915 467A  
                         l3907 462A                           l3595 4A92                           l3835 58CA  
                         l4491 3BE0                           l4483 3BBC                           l4475 3B8A  
                         l4467 3B22                           l4379 56B8                           l4387 56D8  
                         l4731 2306                           l4723 22BA                           l4715 2256  
                         l4707 21F8                           l4651 1F60                           l4643 1EF8  
                         l4635 1E6E                           l4627 1D6A                           l4619 1D38  
                         l4563 1A94                           l4547 1A0E                           l4539 19CC  
                         l4811 3906                           l4803 3860                           l5291 54B8  
                         l5531 2692                           l5523 2650                           l5515 260E  
                         l5507 25CC                           l5451 23A0                           l5443 2388  
                         l5435 236C                           l5427 235C                           l5419 2352  
                         l3941 313A                           l3781 2C2A                           l3773 2BDE  
                         l3765 2BBC                           l3757 2B92                           l3693 29C0  
                         l3685 2972                           l3677 2962                           l3669 2952  
                         l5189 179A                           l3829 50B0                           l3853 4572  
                         l3845 44FC                           l4397 4F76                           l4389 5B0E  
                         l4741 5BB4                           l5349 40F6                           l5285 4EC8  
                         l5277 4EB0                           l5269 4E68                           l4901 57DA  
                         l3861 4316                           l3933 473A                           l3925 46F2  
                         l3917 4682                           l3909 462E                           l3597 4AB0  
                         l3589 4A64                           l3837 58DC                           l4493 3C62  
                         l4485 3BC4                           l4477 3B9A                           l4469 3B32  
                         l4733 230E                           l4725 22C8                           l4717 2272  
                         l4709 222C                           l4661 2038                           l4653 1F94  
                         l4645 1F0E                           l4629 1D7E                           l4637 1E74  
                         l4581 1B1E                           l4565 1A9A                           l4549 1A16  
                         l4557 1A58                           l4813 3916                           l4805 3880  
                         l5293 54CA                           l5541 26E8                           l5533 26A6  
                         l5525 2664                           l5517 2622                           l5509 25E0  
                         l5461 23D2                           l5453 23A8                           l5445 238C  
                         l5437 2374                           l5429 235E                           l3951 316E  
                         l3943 313C                           l3791 2C94                           l3783 2C38  
                         l3775 2BF4                           l3759 2BA0                           l3767 2BBE  
                         l3695 29D0                           l3679 2966                           l3687 2976  
                         l5199 1802                           l3855 45B6                           l3847 4510  
                         l4399 4F82                           l4743 5BB8                           l5287 4ECA  
                         l5279 4EB2                           l4751 5BC2                           l4911 5B9C  
                         l3871 436C                           l3863 4336                           l3927 4704  
                         l3919 4696                           l3599 4AE6                           l3839 58E0  
                         l4495 3C68                           l4487 3BD0                           l4479 3BA0  
                         l4727 22E0                           l4719 227A                           l4671 2062  
                         l4655 1FEA                           l4663 203C                           l4647 1F40  
                         l4639 1E92                           l4591 1C06                           l4583 1B24  
                         l4567 1AA2                           l4559 1A7E                           l4575 1ABE  
                         l4815 392C                           l4823 3944                           l4807 38D6  
                         l5295 54D2                           l5551 273E                           l5543 26FC  
                         l5535 26BA                           l5527 2678                           l5519 2636  
                         l5471 2426                           l5463 23F0                           l5455 23B0  
                         l5447 2390                           l5439 237C                           l3961 31A0  
                         l3945 314C                           l3953 3176                           l3937 3120  
                         l3793 2CB4                           l3785 2C72                           l3769 2BCC  
                         l3697 29E6                           l3689 297A                           l3849 4514  
                         l4737 5BD2                           l4745 5BC8                           l4921 5A00  
                         l5289 4ED4                           l4761 593E                           l4753 5904  
                         l4905 57E4                           l4913 5BAC                           l3881 43C0  
                         l3873 4378                           l3865 433A                           l3857 4304  
                         l3929 470A                           l4497 3C6E                           l4489 3BDA  
                         l4729 22F0                           l4681 2130                           l4673 206E  
                         l4665 204C                           l4657 1FF0                           l4649 1F50  
                         l4593 1C1A                           l4585 1B58                           l4577 1AD8  
                         l4833 3A02                           l4817 3934                           l4825 3976  
                         l5297 54DA                           l5561 2796                           l5553 2744  
                         l5545 2702                           l5537 26C0                           l5529 267E  
                         l5481 24B8                           l5473 243A                           l5465 2404  
                         l5457 23B8                           l5449 2398                           l3971 31D4  
                         l3963 31A2                           l3955 3186                           l3947 315C  
                         l3939 312C                           l3795 2CB8                           l3779 2C1E  
                         l3787 2C74                           l3699 29F2                           l4931 52FE  
                         l4771 53DC                           l4739 5BD6                           l4747 5BCC  
                         l4915 52A4                           l4923 550A                           l4763 5940  
                         l4755 5908                           l4907 582A                           l3891 4434  
                         l3883 43D2                           l3875 4396                           l3867 4348  
                         l3859 4308                           l4499 3CD2                           l4691 2162  
                         l4683 2140                           l4675 20E6                           l4667 2054  
                         l4659 2024                           l4595 1C4E                           l4587 1B96  
                         l4843 3A7E                           l4835 3A2C                           l4827 399A  
                         l4819 393C                           l5299 54F6                           l5563 27CA  
                         l5555 2758                           l5547 2716                           l5539 26D4  
                         l5483 24D2                           l5491 2502                           l5475 2458  
                         l5467 240A                           l5459 23C0                           l3981 321A  
                         l3965 31B2                           l3973 31DC                           l3957 318C  
                         l3949 316C                           l3797 2CC6                           l3789 2C84  
                         l4941 4152                           l4781 536C                           l4933 5312  
                         l4773 540A                           l4925 512C                           l4917 52B8  
                         l4757 5910                           l4749 5BBE                           l3885 4400  
                         l3877 439E                           l3893 443A                           l3869 4368  
                         l4693 2166                           l4685 2144                           l4677 2106  
                         l4669 205A                           l4597 1C56                           l4589 1BC8  
                         l4837 3A4C                           l4829 39CE                           l4845 3AAE  
                         l5557 276C                           l5549 272A                           l5493 2520  
                         l5485 24DA                           l5477 2480                           l5565 27DC  
                         l5469 241A                           l3991 3242                           l3983 321E  
                         l3975 31EC                           l3967 31C2                           l3959 3192  
                         l3799 2CCC                           l4943 4162                           l4783 5384  
                         l4935 532A                           l4775 541E                           l4767 53B2  
                         l4919 52D0                           l4927 5A3E                           l4759 5918  
                         l3895 444A                           l3887 4420                           l3879 43B2  
                         l4695 216C                           l4687 214A                           l4679 2122  
                         l5671 3AA0                           l4791 37E8                           l5567 2812  
                         l5559 2784                           l5495 2528                           l5487 24E2  
                         l5479 249C                           l3977 3202                           l3969 31D2  
                         l4961 4228                           l4953 41E0                           l4945 4170  
                         l4777 5434                           l4769 53C6                           l4881 5AF8  
                         l4873 5AE4                           l4929 555C                           l4785 524A  
                         l4937 5984                           l3897 446A                           l3889 4422  
                         l4689 2152                           l4697 2172                           l4793 3810  
                         l4849 3AC0                           l5497 257E                           l5489 24EA  
                         l5569 281E                           l3995 3256                           l3979 3212  
                         l3987 3232                           l4971 42A8                           l4963 4234  
                         l4955 41E8                           l4947 41B6                           l4779 5358  
                         l4883 5AFA                           l4875 5AEE                           l4787 525E  
                         l4939 59C2                           l4699 2184                           l5667 3958  
                         l4795 381E                           l5499 258A                           l3997 3270  
                         l3989 3242                           l4981 42F0                           l4973 42AA  
                         l4965 4270                           l4957 41F4                           l4949 41CC  
                         l4877 5AF4                           l4885 5B5E                           l4789 5276  
                         l4893 5744                           l5669 3A16                           l4797 382C  
                         l3999 3280                           l4983 42F2                           l4975 42AE  
                         l4967 427C                           l4959 4226                           l4879 5AF6  
                         l4895 578A                           l4887 56F4                           l4799 3830  
                         l4991 548C                           l4977 42D2                           l4969 428A  
                         l4889 573A                           l4993 54AC                           l4979 42E2  
                         l4899 5794                           l4987 5462                           l4997 55AE  
                         l4989 546E                           l4999 55B2                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E2E  
                         STR_3 0E50                           STR_6 0E54                           u3000 2A24  
                         u3001 2A20                           u3010 2A32                           u3011 2A2E  
                         u3100 2B90                           u3020 2A42                           u3101 2B8C  
                         u3021 2A3E                           u3110 2BA0                           u3030 2A74  
                         u3111 2B9C                           u3031 2A70                           u3200 2C84  
                         u3120 2BBC                           u3040 2A82                           u4000 4830  
                 _BAUD4CONbits 000EE9                           u3201 2C80                           u3121 2BB8  
                         u3041 2A7E                           u4001 482C                           u3210 2C94  
                         u3130 2BCC                           u3050 2AA0                           u4010 4840  
                         u3211 2C90                           u3131 2BC8                           u3051 2A9C  
                         u4011 483C                           u3220 2CB4                           u3140 2BDE  
                         u3060 2AD8                           u3300 4572                           u4020 4FE6  
                         u4100 4A50                           u3221 2CB0                           u3141 2BDA  
                         u3061 2AD4                           u3301 456E                           u4021 4FE2  
                         u4101 4A4A                           u3230 2CC6                           u3150 2BF4  
                         u3070 2B1E                           u3310 4316                           u4030 503C  
                         u4110 4A52                           u3231 2CC2                           u3151 2BF0  
                         u3071 2B1A                           u3311 4312                           u4031 5038  
                         u3240 2CE2                           u3160 2C0A                           u3080 2B54  
                         u5000 1066                           u3320 4348                           u3400 467A  
                         u4040 595E                           u4200 3EB0                           u4120 58BC  
                         u3241 2CDE                           u3161 2C06                           u3081 2B50  
                         u5001 1062                           u3321 4344                           u3401 4676  
                         u4041 595A                           u4201 3EAC                           u4121 58B8  
                         u3170 2C1E                           u3090 2B64                           u5010 10BC  
                         u3250 506C                           u3410 46A4                           u4050 49A6  
                         u4210 3F04                           u4130 50E4                           _T2PR 000FBC  
                         u3171 2C1A                           u3091 2B60                           u5011 10B8  
                         u3251 5068                           u3331 4372                           u3411 46A0  
                         u4131 50E0                           u3500 3202                           u3180 2C38  
                         u5100 14C6                           u5020 10DC                           u3260 508A  
                         u4300 4DB0                           u3340 4396                           u3420 46D2  
                         u4060 49C4                           u4220 3F20                           u4140 3DB4  
                         u3501 31FE                           u3181 2C34                           u5101 14C2  
                         u5021 10D8                           u3261 5086                           u4301 4DAC  
                         u3341 4392                           u3421 46CE                           u4061 49C0  
                         u4221 3F1C                           u3510 3242                           u3190 2C72  
                         u5110 1500                           u5030 118C                           u3270 50A6  
                         u4310 4C5C                           u3350 43C0                           u3430 471A  
                         u4070 49EC                           u4230 3F5C                           u4150 3DE2  
                         u3511 323E                           u3191 2C6E                           u5111 14FC  
                         u5031 1188                           u3271 50A2                           u4311 4C58  
                         u3351 43BC                           u3431 4716                           u4071 49E8  
                         u4055 499C                           u4231 3F58                           u4215 3EFA  
                         u4151 3DDE                           u3600 33BC                           u3520 32B8  
                         u3440 313A                           u5200 1732                           u5120 153A  
                         u5040 11D6                           u4320 4C74                           u3360 4400  
                         u3280 5900                           u4400 3B6E                           u4080 4A16  
                         u4160 3E04                           u4240 56F2                           u3601 33B8  
                         u3521 32B4                           u3441 3136                           u5201 172E  
                         u5121 1536                           u5041 11D2                           u4321 4C70  
                         u3361 43FC                           u3281 58FC                           u4401 3B6A  
                         u4081 4A12                           u4161 3E00                           u4145 3DAA  
                         u4241 56EE                           u3610 33D2                           u3530 32DA  
                         u3450 314C                           u5210 1768                           u5130 157C  
                         u5050 13B4                           u3290 44A8                           u4330 4CFA  
                         u4250 5B1E                           u3370 444A                           u4410 3B9A  
                         u3611 33CE                           u3531 32D6                           u3451 3148  
                         u5211 1764                           u5131 1578                           u5051 13B0  
                         u3291 44A4                           u4331 4CF6                           u4251 5B1A  
                         u3371 4446                           u4411 3B96                           u3620 33E6  
                         u3540 3304                           u3460 315C                           u3700 2D72  
                         u2900 28CA                           u5220 179A                           u5140 15C6  
                         u5060 13E6                           u4340 4D12                           u4260 5B34  
                         u5300 5AE2                           u3380 460A                           u2820 4A76  
                         u4420 3BB0                           u4180 3E70                           u4500 19F2  
                         u3621 33E2                           u3541 3300                           u3461 3158  
                         u3701 2D6E                           u2901 28C6                           u5221 1796  
                         u5141 15C2                           u5061 13E2                           u4341 4D0E  
                         u4261 5B30                           u5301 5ADE                           u3381 4606  
                         u2821 4A72                           u4421 3BAC                           u4181 3E6C  
                         u4501 19EE                           u3630 3400                           u3550 3328  
                         u3470 31A0                           u3710 2D84                           u2910 28DC  
                         u5230 17CC                           u5150 15F8                           u5070 1424  
                         u4350 4E36                           u4270 4FBE                           u3390 463C  
                         u2830 4A88                           u4430 3CEC                           u4190 3E94  
                         u4510 1A04                           u3631 33FC                           u3551 3324  
                         u3471 319C                           u3711 2D80                           u2911 28D8  
                         u5231 17C8                           u5151 15F4                           u5071 1420  
                         u4351 4E32                           u4271 4FBA                           u3391 4638  
                         u2831 4A84                           u4431 3CE8                           u4095 4A28  
                         u4175 3E18                           u4511 1A00                           u3640 3448  
                         u3560 333E                           u3480 31B2                           u3800 3024  
                         u3720 2D94                           u2920 28EC                           u5240 17FE  
                         u5160 1636                           u5080 1456                           u4360 4E4E  
                         u4280 4FD6                           u5400 40C0                           u2840 4AB0  
                         u4440 3D0A                           u4176 3E22                           u4600 1CE0  
                         u4520 1A7E                           u3641 3444                           u3561 333A  
                         u3481 31AE                           u3801 3020                           u3721 2D90  
                         u2921 28E8                           u5241 17FA                           u5161 1632  
                         u5081 1452                           u4361 4E4A                           u4281 4FD2  
                         u5401 40BC                           u2841 4AAC                           u4441 3D06  
                         u4177 3E32                           u4601 1CDC                           u4521 1A7A  
                         u3650 3478                           u3570 335C                           u3490 31C2  
                         u3810 3038                           u3730 2DCA                           u2930 2928  
                         u5250 1834                           u5170 1678                           u5090 1494  
                         u4290 4D98                           u5410 40F6                           u2850 4AE6  
                         u4450 3D24                           u4370 3B1E                           u4610 1D12  
                         u4530 1A90                           u3651 3474                           u3571 3358  
                         u3491 31BE                           u3811 3034                           u3731 2DC6  
                         u2931 2924                           u5251 1830                           u5171 1674  
                         u5091 1490                           u4291 4D94                           u5411 40F2  
                         u2851 4AE2                           u4451 3D20                           u4371 3B18  
                         u4195 3E8A                           u4611 1D0E                           u4531 1A8C  
                         u3660 34A6                           u3580 337C                           u3900 48CE  
                         u3820 3052                           u3740 2DDA                           u2940 2936  
                         u2860 2850                           u5260 1866                           u5180 16C2  
                         u5420 412C                           u5340 3F94                           u4460 3D34  
                         u4380 3B20                           u4700 20E6                           u4620 1D20  
                         u4540 1B0A                           u5500 24D2                           u3661 34A2  
                         u3581 3378                           u3901 48CA                           u3821 304E  
                         u3741 2DD6                           u2941 2932                           u2861 284C  
                         u5261 1862                           u5181 16BE                           u5421 4128  
                         u5341 3F90                           u4461 3D30                           u4701 20E2  
                         u4621 1D1C                           u4541 1B06                           u5501 24CE  
                         u3590 338E                           u3910 48EC                           u3830 309A  
                         u3750 2F54                           u3670 2D10                           u2950 29A4  
                         u2870 2862                           u5270 18A0                           u5190 16F4  
                         u5350 3FB4                           u4390 3B32                           u4710 2122  
                         u4630 1D4A                           u4550 1B96                           u4470 195A  
                         u5510 2520                           u3591 338A                           u3911 48E8  
                         u3831 3096                           u3671 2D0C                           u2951 29A0  
                         u2871 285E                           u5271 189C                           u5191 16F0  
                         u5351 3FB0                           u4391 3B2E                           u4711 211E  
                         u4631 1D46                           u4551 1B92                           u4471 1956  
                         u5511 251C                           u3920 490C                           u3840 30C8  
                         u3760 2FAE                           u3680 2D22                           u2960 29BC  
                         u2880 2872                           u5280 18DA                           u5360 3FE8  
                         u4720 2130                           u4640 1E92                           u4560 1BC8  
                         u4480 19A4                           u5600 2796                           u5520 259E  
                         u3921 4908                           u3841 30C4                           u3761 2FAA  
                         u3681 2D1E                           u2961 29B6                           u2881 286E  
                         u5281 18D6                           u5361 3FE4                           u4721 212C  
                         u4641 1E8E                           u4561 1BC4                           u4481 19A0  
                         u5601 2792                           u5521 259A                           u3930 495C  
                         u3850 3102                           u3770 2FCE                           u3690 2D32  
                         u2970 29BE                           u2890 28B4                           u5290 191C  
                         u5370 401E                           u4730 2184                           u4650 1EF8  
                         u4570 1C06                           u4490 19B4                           u4810 3810  
                         u5610 2832                           u5530 25E0                           u3931 4958  
                         u3851 30FE                           u3771 2FCA                           u3755 2F4A  
                         u3691 2D2E                           u2891 28B0                           u5291 1918  
                         u5371 401A                           u4731 2180                           u4651 1EF4  
                         u4571 1C02                           u4491 19B0                           u4811 380C  
                         u5611 282E                           u5531 25DC                           u3860 4B5C  
                         u3780 2FE0                           u2980 29E6                           u4900 426C  
                         u5380 4054                           u3940 5A92                           u4740 2256  
                         u4660 1F40                           u4580 1C92                           u4820 3860  
                         u5540 2622                           u3861 4B58                           u3781 2FDC  
                         u2981 29E2                           u4901 4268                           u5381 4050  
                         u3941 5A8E                           u4741 2252                           u4661 1F3C  
                         u4581 1C8E                           u4821 385C                           u5541 261E  
                         u3870 4B9A                           u3790 300E                           u2990 2A04  
                         u4910 428A                           u5390 408A                           u3950 4772  
                         u4750 2272                           u4670 1F50                           u4590 1CC8  
                         u4830 3880                           u5550 2664                           u3871 4B96  
                         u3791 300A                           u2991 2A00                           u4911 4286  
                         u5391 4086                           u3951 476E                           u4751 226E  
                         u4671 1F4C                           u4591 1CC4                           u4831 387C  
                         u5551 2660                           u3880 4BCE                           u4920 429A  
                         u4808 592E                           u3960 47A6                           u4760 22DA  
                         u4680 1FEA                           u4840 3996                           u5560 26A6  
                         u5480 23D2                           u3881 4BCA                           u4921 4296  
                         u4761 22D4                           u4681 1FE6                           u4841 3992  
                         u5561 26A2                           u5481 23CE                           u3890 4890  
                         u4930 42A8                           u4850 5BAC                           u3970 47D4  
                         u4770 22DC                           u4690 2038                           u5570 26E8  
                         u5490 2458                           u3891 488C                           u4931 42A4  
                         u5707 53D0                           u4851 5BA8                           u3971 47D0  
                         u4691 2034                           u5571 26E4                           u5491 2454  
                         u5627 23DE                           u4940 42E2                           u4860 4162  
                         u3980 47E8                           u4780 22F0                           u5580 272A  
                         u4941 42DE                           u4861 415E                           u5717 53FA  
                         u3981 47E4                           u3965 479C                           u4781 22EC  
                         u5581 2726                           u5637 248C                           u4950 42F0  
                         u4870 4170                           u4790 592C                           u3990 4810  
                         u5590 276C                           u4951 42EC                           u4871 416C  
                         u5807 5348                           u5727 4C36                           u4791 5924  
                         u3991 480C                           u5591 2768                           u5647 24F6  
                         u4880 41CC                           u4960 54AC                           u4881 41C8  
                         u5817 5376                           u5737 4EF6                           u5657 5268  
                         u4961 54A8                           u4890 4222                           u4891 421E  
                         u4971 0E8A                           u5827 53A2                           u5747 4F36  
                         u5667 5294                           u4980 0F84                           u4981 0F80  
                         u5837 4F98                           u5757 4CD4                           u5677 52C2  
                         u4990 1012                           u4991 100E                           u5847 4E10  
                         u5767 5428                           u5687 52EE                           u5777 5452  
                         u5697 55C2                           u5787 4D72                           u5797 531C  
                _LightBlueMove 555C                           abs@a 0013                           _dbuf 0116  
                         _labs 50C6                           _main 2330                           _dtoa 3AEE  
                         _prec 00E9                           _vals 0184                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4F5A  
                ___fpclassifyf 4966                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 0043         __end_of_color_read_Red 5794  
              __end_of_HighISR 000E         __end_of_color_read_lum 5744                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 5A3E  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 53B2                  ___fltol@sign1 0009                __end_of___aodiv 448C  
                        ?_labs 0001                __end_of___fladd 2CF6                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 475C                __end_of___fldiv 34BA  
              __end_of___flneg 5AB4                __end_of___flmul 3120                __end_of___flsub 587A  
              __end_of___fltol 4862                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 50C6                          i2l275 000A                   vfpfcnvrt@fmt 0097  
              __end_of_go_Home 4150        __end_of_sendCharSerial4 5BB2     __end_of_I2C_2_Master_Start 5BDC  
   __end_of_I2C_2_Master_Write 5BBE                   YellowMove@mL 0020                          _flags 00ED  
                 YellowMove@mR 0022                          _fputc 4A64                          _fputs 58BE  
                        labs@a 0001                          pad@fp 0011                          _power 00F6  
                        _width 00E7                          _putch 5BE4                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                   main@run_flag 01F0  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 550A  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5834          _I2C_2_Master_RepStart 5BBE  
             __end_of_BlueMove 5192                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 51F0  
              _reverseOneBlock 52FE                   __end_of_labs 512C                   __end_of_main 2836  
                 __end_of_dtoa 3D6C                   __end_of_stop 4FD8                _colour_rel$2790 0068  
              _colour_rel$2789 0064                         ??_labs 0005                         ??_main 00D1  
                       ??_dtoa 0026          __end_of_ReverseYellow 59C2               __end_of_PinkMove 56A4  
=======
Symbol Table                                                                                   Sat Mar 11 17:13:54 2023

               _color_read_Red 5744                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 56F4                   ___fldiv@sign 0042                _color_read_Blue 57E4  
                           l42 5BEC                             l51 57E2                             l60 3804  
                           l45 5742                             l70 1934                             l54 5832  
                           l39 55FE                             l48 5792                             l57 5244  
          ___wmul@multiplicand 0003               _color_read_Green 5794                readColours@vals 000C  
            ??_Interrupts_init 0001                            l203 5C2E                            l140 5B80  
                          l212 5B2E                            l134 5B58                            l206 5C42  
                          l143 5C6C                            l152 5C4E                            l137 5B5A  
                          l146 5C58                            l410 27F6                            l155 598E  
                          l149 5C62                            l512 4EAC                            l504 4D80  
                          l521 5460                            l266 5C74                            l530 52F8  
                          l194 5C2A                            l418 2850                            l515 5352  
                          l524 5406                            l612 3FB0                            l518 53AC  
                          l542 51E6                            l551 555A                            l527 529E  
                          l480 50A6                            l536 5A88                            l560 5A0C  
                          l545 5650                            l474 4674                            l642 5BA6  
                          l554 55AC                            l618 3FBA                            l539 5AC6  
                          l563 5A4A                            l467 4F34                            l548 56A2  
                          l388 23C8                            l645 5BCC                            l557 4FB6  
                          l910 499C                            l639 5C0C                            l904 4C54  
                          l488 4E16                            l496 4CEA                            l915 49E2  
                          l772 47D8                            l942 48DE                            l759 4508  
                          l919 5AFE                            _abs 5990                            _pad 4FB8  
                          _rel 015E                            wreg 000FE8                   ___flmul@aexp 0022  
                 ___flmul@bexp 0023                   ___flmul@sign 001D                   ___flmul@temp 0028  
                 ___flmul@prod 0024                   ___fltol@exp1 000A                Colour_decider@i 007A  
                         l1200 2C1A                           ?_abs 0013                           l1300 4224  
                         l1215 58C4                           l1303 4380                           l1143 511A  
                         l1240 33F4                           l1232 32FA                           l1136 5112  
                         l1241 33E2                           l1314 4318                           l1227 34D6  
                         l1307 42BC                           l1323 5508                           l1229 3336  
                         l1173 2A42                           l1238 337C                           l1190 2B5C  
                         l1182 2D12                           l1174 2A30                           l1422 2110  
                         l1263 313C                           l1175 29F6                           l1503 56F2  
                         l4000 4770                           l1266 2FCE                           l4002 4782  
                         l1259 2DD8                           l1515 4BAA                           l1523 594C  
                         l1355 4FDA                           l4100 3362                           l4020 316A  
                         l4012 313E                           l1276 30FE                           l1268 3046  
                         l4004 4788                           l1364 3B98                           l1532 5908  
                         l1269 3034                           l1437 3B0A                           l4110 339E  
                         l4102 336C                           l4030 31A4                           l4022 317A  
                         l4014 314A                           l4006 4798                           l1526 5C72  
                         l1366 3BA0                           l1199 2C2C                           l1359 5030  
                         l1367 3BE6                           l4120 3410                           l4112 33AC  
                         l4104 337A                           l4040 31D0                           l4032 31AA  
                         l4024 318A                           l4016 3158                           l4200 2E5C  
                         l5000 5182                           l4008 47B8                           l1392 1CC8  
                         l4130 347C                           l4122 341E                           l4114 33DA  
                         l4106 338C                           l4050 320A                           l4042 31E0  
                         l4034 31B0                           l4026 318C                           l4018 315A  
                         l4210 2E9E                           l4202 2E68                           l5010 53DA  
                         l5002 5A8A                           l1474 59C6                           l1378 3D88  
                         l1394 1B0E                           l1483 41CC                           l1459 54B6  
                         l4140 34CA                           l4132 3496                           l4124 3448  
                         l4108 339A                           l4052 3220                           l4044 31F0  
                         l4036 31BE                           l4028 3194                           l4220 2F00  
                         l4212 2EAA                           l4204 2E74                           l5020 41EE  
                         l5100 55FA                           l5004 555C                           l5012 59D0  
                         l1477 59CE                           l1469 4AE0                           l1389 232E  
                         l4142 34CC                           l4134 34B2                           l4118 3404  
                         l4126 344C                           l4070 3274                           l4054 3230  
                         l4062 3250                           l4046 31F2                           l4038 31C0  
                         l4310 495C                           l4302 48E0                           l4230 2F96  
                         l4222 2F0C                           l4214 2EBA                           l4206 2E82  
                         l4150 2D14                           l5030 4266                           l5022 4234  
                         l5006 53AE                           l5102 55FC                           l5110 35D8  
                         l5014 5A0E                           l1486 4110                           l1494 5170  
                         l4136 34B6                           l4128 3466                           l4080 32C6  
                         l4072 328E                           l4064 3260                           l4056 3238  
                         l4048 31FA                           l4320 49E0                           l4312 496A  
                         l4304 490E                           l4240 2FEC                           l4232 2FB4  
                         l4224 2F28                           l4216 2ED4                           l4208 2E8E  
                         l4160 2D50                           l4152 2D20                           l5040 42EE  
                         l5032 4272                           l5024 424A                           l5016 41D0  
                         l5200 1500                           l5120 0E5A                           l5008 53C2  
                         l5112 366C                           l5104 51E8                           l4400 4A6A  
                         l1497 5180                           l4138 34C4                           l4090 3322  
                         l4082 32D6                           l4074 329E                           l4066 3260  
                         l4058 323C                           l4314 497C                           l4306 491E  
                         l4250 3056                           l4242 2FF0                           l4234 2FBE  
                         l4226 2F52                           l4218 2EE4                           l4170 2D82  
                         l4162 2D60                           l4154 2D2E                           l5050 432C  
                         l5042 42FA                           l5034 42A4                           l5018 41E0  
                         l5210 157C                           l5130 0F28                           l5122 0E84  
                         l5114 36A0                           l5106 34D8                           l4402 4A76  
                         l4092 3324                           l4084 32EA                           l4076 32AE  
                         l4316 498A                           l4308 494C                           l4260 30B8  
                         l4252 3062                           l4244 2FFE                           l4236 2FCC  
                         l4228 2F88                           l4180 2DC2                           l4172 2D90  
                         l4164 2D66                           l4156 2D30                           l3700 28AA  
                         l5052 4350                           l5044 4308                           l5036 42A6  
                         l5028 425E                           l5300 192C                           l5220 1594  
                         l5140 0FB6                           l5124 0E90                           l4500 4DBE  
                         l5116 3738                           l5108 35A4                           l4324 5AC8  
                         l4340 482E                           l4332 47DA                           l4412 4AD8  
                         l4420 511C                           l4094 3334                           l4086 32F8  
                         l4078 32BE                           l4318 49DA                           l4270 3120  
                         l4262 30CC                           l4254 3070                           l4246 302C  
                         l4238 2FDE                           l4190 2E0C                           l4182 2DC8  
                         l4174 2D92                           l4166 2D76                           l4158 2D40  
                         l3710 28DA                           l3702 28BA                           l5054 4360  
                         l5046 4326                           l5038 42B2                           l5222 15C6  
                         l5150 1066                           l5142 0FBE                           l5126 0EC0  
                         l4502 4DCA                           l4510 4C56                           l5118 376C  
                         l5310 5C24                           l4326 5ADE                           l4342 4830  
                         l4334 47F0                           l4406 4A82                           l4430 4046  
                         l4422 513A                           l5062 5462                           l4096 3346  
                         l4088 3304                           l4272 3122                           l4264 30E6  
                         l4256 309A                           l4192 2E18                           l4184 2DE8  
                         l4176 2DA2                           l4168 2D7C                           l3800 2AB0  
                         l3720 291A                           l3712 28E8                           l3704 28C0  
                         l4280 5880                           l5056 436E                           l5048 4328  
                         l5240 1684                           l5232 163A                           l5224 15F8  
                         l5216 1588                           l5208 153E                           l5160 117C  
                         l5152 10BC                           l5144 1012                           l5136 0F32  
                         l5128 0EF4                           l4504 4DD6                           l5400 4F62  
                         l4512 4C7A                           l4520 4CBA                           l5080 55D6  
                         l5072 55AE                           l5312 5C26                           l5304 5C0E  
                         l5320 5B12                           l4328 5AEE                           l4344 4840  
                         l4408 4A94                           l4432 4054                           l4440 4134  
                         l4424 3FBC                           l4416 58C6                           l4600 1982  
                         l5064 546E                           l4098 335C                           l4290 4BEA  
                         l4266 3102                           l4274 3128                           l4258 309E  
                         l4194 2E22                           l4186 2DF8                           l4178 2DB2  
                         l3810 2AF6                           l3802 2ABE                           l3730 2954  
                         l3722 291C                           l3714 28EA                           l3706 28D2  
                         l4282 5890                           l5058 4370                           l5234 1678  
                         l5170 12AE                           l5162 118C                           l5146 1044  
                         l5138 0F84                           l4530 4E60                           l4506 4DE6  
                         l5402 4F76                           l4522 4CD2                           l4514 4C92  
                         l5090 55F0                           l5082 55E0                           l5074 55B2  
                         l5314 5C28                           l5306 5C18                           l5322 5B16  
                         l4370 48BE                           l4354 486A                           l4346 4844  
                         l4338 4804                           l4442 4170                           l4426 3FDC  
                         l4418 58D6                           l4610 19C0                           l4602 198C  
                         l5066 548C                           l4292 4C18                           l4276 312C  
                         l4268 3112                           l4196 2E38                           l3820 2B72  
                         l3812 2B2A                           l3804 2AC0                           l3740 2968  
                         l3732 2958                           l3716 28FA                           l3724 2924  
                         l3708 28D4                           l5260 1736                           l5244 1690  
                         l5172 132A                           l5164 11C4                           l5156 10C8  
                         l5148 104A                           l3900 50FC                           l4532 4E6C  
                         l4524 4E18                           l4508 4DFE                           l5404 4F8A  
                         l5340 5C00                           l4516 4C9E                           l5092 55F2  
                         l5084 55EA                           l5076 55BC                           l5420 3DCE  
                         l5412 3DA4                           l5308 5C1A                           l5316 5B00  
                         l4380 4FD2                           l4540 3B2C                           l4372 48CE  
                         l4364 4892                           l4356 4874                           l4348 4852  
                         l4444 4184                           l4436 40C4                           l4428 4032  
                         l4460 56D4                           l4452 56A4                           l4700 1D5A  
                         l4620 1A08                           l4612 19C8                           l4604 1994  
                         l5068 54AC                           l4294 4C28                           l4286 4BAC  
                         l4198 2E44                           l3830 2BAE                           l3822 2B82  
                         l3814 2B2C                           l3806 2ACA                           l3750 297C  
                         l3742 296C                           l3734 295C                           l3726 2934  
                         l3718 290A                           l5262 1768                           l5246 16C2  
                         l5166 11D6                           l5174 1382                           l5158 10DC  
                         l3902 5104                           l4526 4E3C                           l4534 4E7C  
                         l4470 4D10                           l5342 5C0A                           l4518 4CAA  
                         l5094 55F4                           l5086 55EC                           l5078 55CC  
                         l5430 3E54                           l5422 3DD4                           l5414 3DAC  
                         l5406 3D8A                           l5350 4EC4                           l5318 5B04  
                         l4390 5990                           l3670 4B10                           l3910 5916  
                         l4382 4FE6                           l4550 3BA8                           l4542 3B40  
                         l4366 489E                           l4358 487E                           l4446 41AC  
                         l4438 4100                           l4454 56B8                           l4462 56D8  
                         l4710 1E6E                           l4702 1D6A                           l4622 1A0E  
                         l4606 19A4                           l4614 19CC                           l5510 233C  
                         ?_pad 0011                           l4296 4C4C                           l4288 4BDA  
                         l3840 2BDA                           l3832 2BB0                           l3816 2B3C  
                         l3808 2AD0                           l3760 2990                           l3752 2980  
                         l3744 2970                           l3736 2960                           l3728 2946  
                         l5280 18A0                           l5264 179A                           l5248 16F4  
                         l5176 13B4                           l5184 13F2                           l5168 1252  
                         l3904 5106                           l3680 5BC4                           l3920 457A  
                         l4536 4E94                           l4528 4E54                           l4480 4D68  
                         l4472 4D28                           l5336 5BEE                           l4464 5B5A  
                         l5096 55F6                           l5088 55EE                           l5440 3ED8  
                         l5432 3E6C                           l5424 3E04                           l5416 3DB8  
                         l5408 3D92                           l5360 4F0E                           l5352 4EC6  
                         l5344 4EAE                           l4392 59AA                           l3672 4B2E  
                         l3664 4AE2                           l3912 5928                           l4384 4FFA  
                         l4376 4FB8                           l4560 3BE2                           l4552 3BB8  
                         l4544 3B50                           l4368 48AE                           l4448 41BC  
                         l4456 56C4                           l4800 22C8                           l4720 1F0E  
                         l4704 1D7E                           l4712 1E74                           l4640 1A9A  
                         l4624 1A16                           l4616 19F2                           l4632 1A58  
                         l4608 19B4                           l5600 2576                           l5520 2354  
                         l5512 2340                           l5504 2330                           l4298 4C52  
                         l3850 2C12                           l3834 2BBE                           l3826 2B96  
                         l3842 2BDC                           l3818 2B4C                           l3770 29EE  
                         l3754 2984                           l3746 2974                           l3738 2964  
                         l3762 2994                           l3690 2870                           l5266 17CC  
                         l5274 1802                           l5186 1424                           l5194 1462  
                         l5178 13E6                           l3906 510C                           l3930 4634  
                         l3922 458E                           l4490 5066                           l4482 5032  
                         l4474 4D34                           l5338 5BF6                           l4466 5B6A  
                         l5098 55F8                           l5450 3F62                           l5442 3EF6  
                         l5434 3E8A                           l5426 3E20                           l5418 3DCC  
                         l5370 4F28                           l5362 4F10                           l5354 4EDC  
                         l5346 4EC0                           l3674 4B64                           l3666 4AF4  
                         l3914 592C                           l4386 4FFE                           l4378 4FC6  
                         l4570 3C86                           l4562 3BEE                           l4554 3BBE  
                         l4546 3B70                           l4538 3B0C                           l4394 49E4  
                         l4458 56C8                           l4802 22E0                           l4730 1FEA  
                         l4722 1F40                           l4714 1E92                           l4706 1DE2  
                         l4642 1AA2                           l4634 1A7E                           l4650 1ABE  
                         l4626 1A2E                           l4618 1A04                           l5610 25B2  
                         l5602 2582                           l5530 2360                           l5522 2356  
                         l5514 2344                           l5506 2334                           l3860 2C90  
                         l3836 2BC6                           l3828 2BA0                           l3844 2BEA  
                         l3780 2A24                           l3772 2A04                           l3764 2998  
                         l3756 2988                           l3748 2978                           l3692 2880  
                         l3684 2854                           l5276 1834                           l5196 1494  
                         l5188 1456                           l3924 4592                           l3916 450A  
                         l4484 5036                           l4492 5076                           l4476 4D40  
                         l4468 4CEC                           l4812 5C64                           l4820 5C5A  
                         l5452 3F7A                           l5444 3F0E                           l5436 3EA2  
                         l5428 3E38                           l5372 4F32                           l5364 4F1A  
                         l5356 4EE0                           l5348 4EC2                           l3940 43B8  
                         l3932 4382                           l3668 4B06                           l3908 590A  
                         l4388 501C                           l4580 3D42                           l4572 3C8C  
                         l4564 3BF8                           l4556 3BCE                           l4548 3B8C  
                         l4396 4A04                           l4804 22F0                           l4740 204C  
                         l4732 1FF0                           l4724 1F50                           l4716 1EC6  
                         l4708 1E3A                           l4660 1B58                           l4652 1AD8  
                         l4636 1A90                           l4628 1A38                           l4900 3994  
                         l5380 54B8                           l5620 25F8                           l5604 2596  
                         l5612 25C8                           l5540 2378                           l5532 2362  
                         l5524 2358                           l5516 2350                           l5508 2338  
                         l3870 2CD6                           l3854 2C3C                           l3862 2C92  
                         l3846 2BEE                           l3838 2BCA                           l3790 2A74  
                         l3782 2A2E                           l3774 2A10                           l3766 29C2  
                         l3758 298C                           l3694 2890                           l3686 2860  
                         l5278 1866                           l5198 14C6                           l3678 5BA8  
                         l3926 45D4                           l3918 4526                           l4494 508E  
                         l4486 504E                           l4478 4D50                           l4814 5C68  
                         l4822 5C5E                           l5374 5B82                           l5454 3F98  
                         l5446 3F2C                           l5438 3EC0                           l5366 4F1C  
                         l5358 4F04                           l4830 5954                           l3950 4414  
                         l3942 43C6                           l3934 4386                           l4582 3D52  
                         l4566 3BFE                           l4574 3CF0                           l4558 3BDA  
                         l4398 4A42                           l4806 2306                           l4750 20E6  
                         l4742 2054                           l4734 2024                           l4726 1F60  
                         l4718 1EF8                           l4670 1C4E                           l4662 1B96  
                         l4638 1A94                           l4590 1936                           l4910 3A4A  
                         l4902 39B8                           l5382 54CA                           l5630 263E  
                         l5614 25DC                           l5622 260E                           l5606 25AA  
                         l5550 2394                           l5542 2380                           l5534 2368  
                         l5526 235C                           l5518 2352                           l3880 2D00  
                         l3872 2CE4                           l3864 2CA2                           l3856 2C48  
                         l3848 2BFC                           l3792 2A84                           l3784 2A50  
                         l3776 2A14                           l3768 29DE                           l3696 28A0  
                         l3688 286E                           l5296 1920                           l5288 18DE  
                         l3928 45F0                           l4488 505A                           l4496 4D82  
                         l5392 5600                           l4816 5C46                           l5376 5B84  
                         l5448 3F44                           l5456 3FB0                           l5368 4F26  
                         l4832 595C                           l4824 5C50                           l3960 447E  
                         l3952 441C                           l3944 43E6                           l3936 4394  
                         l4584 3D58                           l4576 3D0A                           l4568 3C80  
                         l4808 230E                           l4760 2144                           l4752 2106  
                         l4744 205A                           l4736 2038                           l4728 1F94  
                         l4680 1CE0                           l4672 1C56                           l4664 1BC8  
                         l4656 1B1E                           l4592 193C                           l4912 3A6A  
                         l4904 39EC                           l4920 3ACC                           l5384 54D2  
                         l5640 2684                           l5624 2622                           l5632 2654  
                         l5616 25F0                           l5608 25AE                           l5560 23BC  
                         l5552 239C                           l5544 2388                           l5536 236C  
                         l5528 235E                           l3882 2D02                           l3874 2CEA  
                         l3866 2CB2                           l3858 2C56                           l3794 2A92  
                         l3786 2A60                           l3778 2A22                           l3698 28A2  
                         l3890 50C2                           l4498 4DA6                           l4850 5368  
                         l5394 5652                           l4842 52FA                           l4818 5C4A  
                         l5378 5B8A                           l4834 5964                           l4826 5C54  
                         l3970 44C8                           l3962 449E                           l3954 4430  
                         l3946 43EA                           l3938 43B4                           l4586 3D68  
                         l4578 3D28                           l4770 216C                           l4762 214A  
                         l4754 2122                           l4746 2062                           l4738 203C  
                         l4690 1D12                           l4682 1CEC                           l4666 1C06  
                         l4658 1B24                           l4594 194C                           l5386 54DA  
                         l5650 26CA                           l5634 2668                           l5642 269A  
                         l5626 2636                           l5618 25F4                           l5570 2414  
                         l5562 23C4                           l5554 23A4                           l5546 238C  
                         l5538 2370                           l3876 2CEC                           l3868 2CD2  
                         l3796 2AA0                           l3892 50CA                           l4852 5380  
                         l5396 4F36                           l4844 530E                           l4860 5246  
                         l4836 598A                           l4828 5950                           l3972 44E8  
                         l3964 44A0                           l3956 443E                           l3948 43F6  
                         l3980 4688                           l4780 21A0                           l4764 2152  
                         l4756 2130                           l4772 2172                           l4748 206E  
                         l4692 1D20                           l4684 1CF4                           l4668 1C1A  
                         l4676 1C96                           l4596 195A                           l4908 3A20  
                         l4924 3ADE                           l5388 54F6                           l5660 2710  
                         l5644 26AE                           l5652 26E0                           l5636 267C  
                         l5628 263A                           l5580 248C                           l5572 2428  
                         l5564 23D6                           l5556 23AC                           l5548 2390  
                         l3878 2CF2                           l3798 2AAC                           l3894 50D2  
                         l3886 50A8                           l4854 5408                           l5398 4F4A  
                         l4846 5326                           l4950 5B3A                           l4862 525A  
                         l4838 598C                           l3966 44B2                           l3958 4450  
                         l3990 46F8                           l3982 46A8                           l4790 2256  
                         l4782 21F8                           l4774 2184                           l4766 2162  
                         l4758 2140                           l4694 1D38                           l4686 1CFC  
                         l4678 1CD0                           l4598 195E                           l4918 3A9C  
                         l4870 383C                           l5670 2756                           l5654 26F4  
                         l5662 2726                           l5646 26C2                           l5638 2680  
                         l5590 24DA                           l5582 2494                           l5574 2446  
                         l5566 23F4                           l5558 23B4                           l3896 50E0  
                         l3888 50B0                           l4856 541C                           l4848 5354  
                         l4952 5B40                           l4960 5BD0                           l4864 5272  
                         l3968 44B8                           l3992 4700                           l3984 46AC  
                         l3976 4676                           l4792 2272                           l4784 222C  
                         l4776 2196                           l4768 2166                           l4696 1D4A  
                         l4688 1D00                           l4880 389E                           l4872 384A  
                         l5680 27BE                           l5664 273A                           l5672 276C  
                         l5656 2708                           l5648 26C6                           l5592 24E2  
                         l5584 24B0                           l5576 246E                           l5568 2408  
                         l3898 50E6                           l4858 5434                           l4954 5B42  
                         l4970 578A                           l4962 56F4                           l3994 4714  
                         l3986 46BA                           l3978 467A                           l4794 227A  
                         l4786 2234                           l4778 219A                           l4698 1D52  
                         l4890 394A                           l4882 38F4                           l4874 384E  
                         l4866 3806                           l5682 27E8                           l5674 2780  
                         l5666 274E                           l5658 270C                           l5586 24CA  
                         l5594 24FA                           l5578 2486                           l4956 5B44  
                         l4948 5B30                           l4980 57E4                           l4964 573A  
                         l3996 4722                           l3988 46DA                           l4796 228A  
                         l4788 2238                           l4892 3952                           l4876 385E  
                         l4868 382E                           l5676 2798                           l5668 2752  
                         l5596 2518                           l5588 24D2                           l5684 27FA  
                         l4958 5B46                           l4990 52A0                           l4982 582A  
                         l4974 5794                           l3998 4750                           l4798 22BA  
                         l5790 3ABE                           l4894 395A                           l4886 3924  
                         l4878 387E                           l5686 2830                           l5678 27AA  
                         l5598 2520                           l4992 52B4                           l4976 57DA  
                         l4968 5744                           l4888 3934                           l5688 283C  
                         l4994 52CC                           l4986 5C2E                           l5786 3976  
                         l4898 3962                           l4996 5A4C                           l4988 5C3E  
                         l5788 3A34                           l4998 550A                    GreenMove@mL 001F  
                  GreenMove@mR 0021                           STR_1 0E01                           STR_2 0E2E  
                         STR_3 0E50                           STR_6 0E54                           u3000 2A22  
                         u3001 2A1E                           u3010 2A42                           u3011 2A3E  
                         u3100 2B82                           u3020 2A50                           u3101 2B7E  
                         u3021 2A4C                           u3110 2BAE                           u3030 2A60  
                         u3111 2BAA                           u3031 2A5C                           u3200 2C90  
                         u3120 2BBE                           u3040 2A92                           u4000 488E  
                 _BAUD4CONbits 000EE9                           u3201 2C8C                           u3121 2BBA  
                         u3041 2A8E                           u4001 488A                           u3210 2CA2  
                         u3130 2BDA                           u3050 2AA0                           u4010 48AE  
                         u3211 2C9E                           u3131 2BD6                           u3051 2A9C  
                         u4011 48AA                           u3220 2CB2                           u3140 2BEA  
                         u3060 2ABE                           u3300 4526                           u4020 48BE  
                         u3221 2CAE                           u3141 2BE6                           u3061 2ABA  
                         u3301 4522                           u4021 48BA                           u3230 2CD2  
                         u3150 2BFC                           u3070 2AF6                           u3310 45F0  
                         u4030 4FC6                           u4110 4ACE                           u3231 2CCE  
                         u3151 2BF8                           u3071 2AF2                           u3311 45EC  
                         u4031 4FC2                           u4111 4AC8                           u3240 2CE4  
                         u3160 2C12                           u3080 2B3C                           u5000 1012  
                         u3320 4394                           u3400 46BA                           u4040 501C  
                         u4120 4AD0                           u4200 40E4                           u3241 2CE0  
                         u3161 2C0E                           u3081 2B38                           u5001 100E  
                         u3321 4390                           u3401 46B6                           u4041 5018  
                         u4105 4AA6                           u3250 2D00                           u3170 2C28  
                         u3090 2B72                           u5010 1066                           u3330 43C6  
                         u3410 46F8                           u4050 59AA                           u4210 4100  
                         u4130 5908                           _T2PR 000FBC                           u3251 2CFC  
                         u3171 2C24                           u3091 2B6E                           u5011 1062  
                         u3331 43C2                           u3411 46F4                           u4051 59A6  
                         u4211 40FC                           u4131 5904                           u3500 31E0  
                         u3180 2C3C                           u5100 1494                           u5020 10BC  
                         u3260 50C2                           u4300 508E                           u3420 4722  
                         u4060 4A24                           u4220 4154                           u4140 513A  
                         u3501 31DC                           u3181 2C38                           u5101 1490  
                         u5021 10B8                           u3261 50BE                           u4301 508A  
                         u3341 43F0                           u3421 471E                           u4205 40DA  
                         u4141 5136                           u3510 3220                           u3190 2C56  
                         u5110 14C6                           u5030 10DC                           u3270 50E0  
                         u4310 50A6                           u3350 4414                           u3430 4750  
                         u4070 4A42                           u4230 4170                           u4150 4004  
                         u3511 321C                           u3191 2C52                           u5111 14C2  
                         u5031 10D8                           u3271 50DC                           u4311 50A2  
                         u3351 4410                           u3431 474C                           u4071 4A3E  
                         u4231 416C                           u3600 33AC                           u3520 3260  
                         u5200 16F4                           u5120 1500                           u5040 118C  
                         u3280 50FC                           u4320 4DFE                           u3360 443E  
                         u3440 4798                           u4400 3B50                           u4080 4A6A  
                         u4240 41AC                           u4160 4032                           u3601 33A8  
                         u3521 325C                           u5201 16F0                           u5121 14FC  
                         u5041 1188                           u3281 50F8                           u4321 4DFA  
                         u3361 443A                           u3441 4794                           u4401 3B4C  
                         u4081 4A66                           u4065 4A1A                           u4241 41A8  
                         u4225 414A                           u4161 402E                           u3610 33DA  
                         u3530 32D6                           u3450 3158                           u5210 1732  
                         u5130 153A                           u5050 11D6                           u4330 4E16  
                         u3370 447E                           u3290 594C                           u4410 3B8C  
                         u4090 4A94                           u4170 4054                           u4250 56F2  
                         u3611 33D6                           u3531 32D2                           u3451 3154  
                         u5211 172E                           u5131 1536                           u5051 11D2  
                         u4331 4E12                           u3371 447A                           u3291 5948  
                         u4411 3B88                           u4091 4A90                           u4171 4050  
                         u4155 3FFA                           u4251 56EE                           u3620 33F0  
                         u3540 32F8                           u3460 316A                           u3700 2D50  
                         u2900 28D2                           u5300 191C                           u5220 1768  
                         u5140 157C                           u5060 13B4                           u4340 4CD2  
                         u4260 5B6A                           u3380 44C8                           u4420 3BB8  
                         u4500 19B4                           u3621 33EC                           u3541 32F4  
                         u3461 3166                           u3701 2D4C                           u2901 28CE  
                         u5301 1918                           u5221 1764                           u5141 1578  
                         u5061 13B0                           u4341 4CCE                           u4261 5B66  
                         u3381 44C4                           u4421 3BB4                           u4501 19B0  
                         u3630 3404                           u3550 3322                           u3470 317A  
                         u3710 2D90                           u2910 28E8                           u5230 179A  
                         u5150 15C6                           u5070 13E6                           u4350 4CEA  
                         u4270 5B80                           u5310 5B2E                           u3390 4688  
                         u2830 4AF4                           u4430 3BCE                           u4190 40C0  
                         u4510 19F2                           u3631 3400                           u3551 331E  
                         u3471 3176                           u3711 2D8C                           u2911 28E4  
                         u5231 1796                           u5151 15C2                           u5071 13E2  
                         u4351 4CE6                           u4271 5B7C                           u5311 5B2A  
                         u3391 4684                           u2831 4AF0                           u4431 3BCA  
                         u4191 40BC                           u4511 19EE                           u3640 341E  
                         u3560 3346                           u3480 31BE                           u3800 302C  
                         u3720 2DA2                           u2920 28FA                           u5240 17CC  
                         u5160 15F8                           u5080 1424                           u4360 4E94  
                         u4280 4D68                           u5400 3EC0                           u2840 4B06  
                         u4440 3D0A                           u4600 1CC8                           u4520 1A04  
                         u3641 341A                           u3561 3342                           u3481 31BA  
                         u3801 3028                           u3721 2D9E                           u2921 28F6  
                         u5241 17C8                           u5161 15F4                           u5081 1420  
                         u4361 4E90                           u4281 4D64                           u5401 3EBC  
                         u2841 4B02                           u4441 3D06                           u4185 4068  
                         u4601 1CC4                           u4521 1A00                           u3650 3466  
                         u3570 335C                           u3490 31D0                           u3810 3042  
                         u3730 2DB2                           u2930 290A                           u5250 17FE  
                         u5170 1636                           u5090 1456                           u4370 4EAC  
                         u4290 4D80                           u5410 3EF6                           u2850 4B2E  
                         u4450 3D28                           u4186 4072                           u4610 1CE0  
                         u4530 1A7E                           u3651 3462                           u3571 3358  
                         u3491 31CC                           u3811 303E                           u3731 2DAE  
                         u2931 2906                           u5251 17FA                           u5171 1632  
                         u5091 1452                           u4371 4EA8                           u4291 4D7C  
                         u5411 3EF2                           u2851 4B2A                           u4451 3D24  
                         u4187 4082                           u4611 1CDC                           u4531 1A7A  
                         u3660 3496                           u3580 337A                           u3900 490E  
                         u3820 3056                           u3740 2DE8                           u2940 2946  
                         u5260 1834                           u5180 1678                           u5420 3F2C  
                         u2860 4B64                           u4460 3D42                           u4380 3B3C  
                         u4700 2038                           u4620 1D12                           u4540 1A90  
                         u5500 23D6                           u3661 3492                           u3581 3376  
                         u3901 490A                           u3821 3052                           u3741 2DE4  
                         u2941 2942                           u5261 1830                           u5181 1674  
                         u5421 3F28                           u2861 4B60                           u4461 3D3E  
                         u4381 3B36                           u4701 2034                           u4621 1D0E  
                         u4541 1A8C                           u5501 23D2                           u3670 34C4  
                         u3590 339A                           u3910 494C                           u3830 3070  
                         u3750 2DF8                           u2950 2954                           u2870 286E  
                         u5270 1866                           u5190 16C2                           u5430 3F62  
                         u5350 3DA0                           u4470 3D52                           u4390 3B3E  
                         u4710 20E6                           u4630 1D20                           u4550 1B0A  
                         u5510 2446                           u3671 34C0                           u3591 3396  
                         u3911 4948                           u3831 306C                           u3751 2DF4  
                         u2951 2950                           u2871 286A                           u5271 1862  
                         u5191 16BE                           u5431 3F5E                           u5351 3D9C  
                         u4471 3D4E                           u4711 20E2                           u4631 1D1C  
                         u4551 1B06                           u5511 2442                           u3920 496A  
                         u3840 30B8                           u3760 2F72                           u3680 2D2E  
                         u2960 29C2                           u2880 2880                           u5280 18A0  
                         u5440 3F98                           u5360 3E04                           u4800 5978  
                         u4720 2122                           u4640 1D4A                           u4560 1B96  
                         u4480 195A                           u5600 273A                           u5520 24CA  
                         u3921 4966                           u3841 30B4                           u3681 2D2A  
                         u2961 29BE                           u2881 287C                           u5281 189C  
                         u5441 3F94                           u5361 3E00                           u4801 5970  
                         u4721 211E                           u4641 1D46                           u4561 1B92  
                         u4481 1956                           u5601 2736                           u5521 24C6  
                         u3930 498A                           u3850 30E6                           u3770 2FCC  
                         u3690 2D40                           u2970 29DA                           u2890 2890  
                         u5290 18DA                           u5370 3E20                           u4730 2130  
                         u4650 1E92                           u4570 1BC8                           u4490 19A4  
                         u5610 2780                           u5530 2518                           u3931 4986  
                         u3851 30E2                           u3771 2FC8                           u3691 2D3C  
                         u2971 29D4                           u2891 288C                           u5291 18D6  
                         u5371 3E1C                           u4731 212C                           u4651 1E8E  
                         u4571 1BC4                           u4491 19A0                           u5611 277C  
                         u5531 2514                           u3940 49DA                           u3860 3120  
                         u3780 2FEC                           u2980 29DC                           u4900 42A0  
                         u5380 3E54                           u4740 2184                           u4660 1EF8  
                         u4580 1C06                           u4820 382E                           u5620 27AA  
                         u5540 2596                           u3941 49D6                           u3861 311C  
                         u3781 2FE8                           u3765 2F68                           u4901 429C  
                         u5381 3E50                           u4741 2180                           u4661 1EF4  
                         u4581 1C02                           u4821 382A                           u5621 27A6  
                         u5541 2592                           u3870 4BDA                           u3790 2FFE  
                         u2990 2A04                           u4910 42EA                           u5390 3E8A  
                         u3950 5ADE                           u4750 2256                           u4670 1F40  
                         u4590 1C92                           u4830 387E                           u5630 2850  
                         u5550 25DC                           u3871 4BD6                           u3791 2FFA  
                         u2991 2A00                           u4911 42E6                           u5391 3E86  
                         u3951 5ADA                           u4751 2252                           u4671 1F3C  
                         u4591 1C8E                           u4831 387A                           u5631 284C  
                         u5551 25D8                           u3880 4C18                           u4920 4308  
                         u3960 47F0                           u4760 2272                           u4680 1F50  
                         u4840 389E                           u5560 2622                           u3881 4C14  
                         u4921 4304                           u3961 47EC                           u4761 226E  
                         u4681 1F4C                           u4841 389A                           u5561 261E  
                         u3890 4C4C                           u4930 4318                           u4818 597A  
                         u3970 4824                           u4770 22DA                           u4690 1FEA  
                         u4850 39B4                           u5570 2668                           u3891 4C48  
                         u4931 4314                           u5707 52EA                           u4771 22D4  
                         u4691 1FE6                           u4851 39B0                           u5571 2664  
                         u4940 4326                           u4860 5C3E                           u3980 4852  
                         u4780 22DC                           u5580 26AE                           u4941 4322  
                         u5717 55C2                           u4861 5C3A                           u3981 484E  
                         u5581 26AA                           u4950 4360                           u4870 41E0  
                         u3990 4866                           u4790 22F0                           u5590 26F4  
                         u4951 435C                           u4871 41DC                           u5807 4DDC  
                         u5727 5318                           u3991 4862                           u3975 481A  
                         u4791 22EC                           u5591 26F0                           u5647 23E2  
                         u4960 436E                           u4880 41EE                           u4961 436A  
                         u4881 41EA                           u5817 53CC                           u5737 5344  
                         u5657 247A                           u4890 424A                           u4970 54AC  
                         u4891 4246                           u5827 53F8                           u5747 4CB0  
                         u4971 54A8                           u5667 24EE                           u4981 0E8A  
                         u5837 5426                           u5757 4F54                           u5677 5264  
                         u4990 0F84                           u4991 0F80                           u5847 5452  
                         u5767 4F94                           u5687 5290                           u5857 506C  
                         u5777 4D46                           u5697 52BE                           u5867 4E72  
                         u5787 5372                           u5797 539E                  _LightBlueMove 555C  
                         abs@a 0013                           _dbuf 010E                           _labs 511C  
                         _main 2330                           _dtoa 3B0C                           _prec 00F1  
                         _vals 017C                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 5032                  ___fpclassifyf 49E4  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 5794                __end_of_HighISR 000E  
       __end_of_color_read_lum 5744                   ___param_bank 000000                ReverseYellow@mL 001F  
              ReverseYellow@mR 0021                __end_of_RedMove 5A8A                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 52FA  
                ___fltol@sign1 0009                __end_of___aodiv 450A                          ?_labs 0001  
              __end_of___fladd 2D14                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 47DA                __end_of___fldiv 34D8                __end_of___flneg 5B00  
              __end_of___flmul 313E                __end_of___flsub 58C6                __end_of___fltol 48E0  
                  colour_rel@B 0074                    colour_rel@G 0070                          ?_stop 0014  
                  colour_rel@L 0060                    colour_rel@R 006C                __end_of___lwdiv 511C  
                        i2l271 000A                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3FBC        __end_of_sendCharSerial4 5C44  
   __end_of_I2C_2_Master_Start 5C6E     __end_of_I2C_2_Master_Write 5C50                   YellowMove@mL 001F  
                        _flags 00F5                   YellowMove@mR 0021                          _fputc 4AE2  
                        _fputs 590A                          labs@a 0001                          pad@fp 0011  
                        _width 00EF                          _putch 5C72                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 001F  
                        tablat 000FF5               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                   main@run_flag 01E8  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 550A  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5834          _I2C_2_Master_RepStart 5C50  
             __end_of_BlueMove 51E8                     PinkMove@mL 001F                     PinkMove@mR 0021  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 5834  
              _reverseOneBlock 53AE                   __end_of_labs 5182                   __end_of_main 2854  
                 __end_of_dtoa 3D8A                   __end_of_stop 50A8                _colour_rel$2908 0064  
              _colour_rel$2909 0068                         ??_labs 0005                         ??_main 00D1  
                       ??_dtoa 0026          __end_of_ReverseYellow 5A0E               __end_of_PinkMove 56A4  
>>>>>>> Stashed changes
                       ??_stop 0018                  __activetblptr 000003              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 5600                         _RX4PPS 000E15                         _TX4REG 000EE4  
<<<<<<< Updated upstream
                   _OrangeMove 550A               __end_of___xxtofl 4304                      ??_RedMove 0024  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE                  ??_ReversePink 0024  
                       ___flge 4862                         ___fleq 4B2E                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 5B36  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 003A  
                    ??___flneg 0005                      ??___flmul 0019                      ??___flsub 0032  
                    ??___fltol 0005                         _efgtoa 1936                      ??___lwdiv 000B  
                       _floorf 3D6C                         _memcpy 56A4                         clear_0 5216  
                       clear_1 5222                         clear_2 522E                         clear_3 523A  
                       _motorL 017B                         _motorR 0172                         isa$std 000001  
                    ??_go_Home 0026                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 587A                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 54B8  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 4DB2                     ___flge@ff1 002A  
                   _YellowMove 5600                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 5240  
      __end_of_reverseOneBlock 5358                     ___flneg@f1 0001       __end_of_color_read_Green 57E4  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 5BE6                 __pcstackCOMRAM 0001  
                _fullSpeedBack 4DB2                   __pidataBANK0 5BDC                  __end_of_fputc 4B2E  
                __end_of_fputs 5902                  __end_of_putch 5BE6              __end_of_GreenMove 5A7C  
          __end_of_ReversePink 5A00                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14347 00D3          __end_of_reverseDetect 53B2  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                     __pbssBANK3 0300                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 52A4  
            __end_of_RetryMove 4F5A                      ?_PinkMove 0020              _color_writetoaddr 5B5C  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 34BA  
      __end_of_Interrupts_init 5BE8         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 01F2                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 5B7C                        _RedMove 5A00  
           _I2C_2_Master_Start 5BD2                     ??_PinkMove 0024                     _initUSART4 5B7C  
           _I2C_2_Master_Write 5BB2                        __Hparam 0000                        _WayBack 0300  
                      __Lparam 0000              color_read_Red@tmp 000A                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 59C2                        ___aodiv 4304  
                      ___fladd 2836                        ___aomod 45F8                        ___fldiv 3120  
                      ___flneg 5A7C                        ___flmul 2CF6                        ___flsub 5834  
                      ___fltol 475C            ?_I2C_2_Master_Start 0001                        ___lwdiv 5052  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 51F0  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3F7E  
                      __ptext0 2330                        __ptext1 54B8                        __ptext2 5462  
                      __ptext3 37E8                        __ptext4 1936                        __ptext5 587A  
                      __ptext6 56A4                        __ptext7 50C6                        __ptext8 3D6C  
                      __ptext9 4966                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00F1              color_read_lum@tmp 000A                        main@buf 018C  
                      _sprintf 54B8           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 5240                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 0114              __end_of_vfpfcnvrt 3AEE                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00F4                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 4E50  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 4C76                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 01F4                   _EUSART4RXbuf 0100  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 540A                 __end_of___flge 4966  
               __end_of___fleq 4BD8                 _fullSpeedAhead 4C76                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 5B5C  
               __end_of_efgtoa 2330                 __end_of_floorf 3F7E                 __end_of_memcpy 56F4  
                   floorf@F526 00DF       __end_of_Forwardhalfblock 52FE                      _GreenMove 5A3E  
               __end_of_strcpy 58BE            start_initialization 51F0                    __end_of_abs 5984  
                  __end_of_pad 5052                  _TxBufWriteCnt 00EF          __end_of_LightBlueMove 55AE  
                 ??_OrangeMove 0024          __end_of___fpclassifyf 4A64            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 4ED8                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 4D14  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 4ED8  
                     ??___wmul 0005                  ??_readColours 000E                       ??_efgtoa 0067  
                  __pdataBANK0 00F2                _ForwardOneBlock 524A                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 5984                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 555C                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                __pcstackBANK0 0060                  __pcstackBANK1 018C               ___aodiv@dividend 0001  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2418 006F               ___lwdiv@dividend 0007  
                    _dtoa$2387 002E                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 0020                     ?_RetryMove 001A  
                     ?___aodiv 0001                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$2791 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 5652  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00            __end_of_readColours 51F0  
            _I2C_2_Master_Idle 5B0E              _I2C_2_Master_Init 5AE4              _I2C_2_Master_Read 5902  
            _I2C_2_Master_Stop 5BC8                  _low_threshold 00EB                   _RxBufReadCnt 00F0  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0                 colour_rel@vals 004B  
            _sendStringSerial4 5AB4            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 52A4                    turnRight@mL 0014                    turnRight@mR 0016  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E5A            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 37E8      __end_of_I2C_2_Master_Idle 5B36  
    __end_of_I2C_2_Master_Init 5B0E      __end_of_I2C_2_Master_Read 5944              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 5BD2                   setMotorPWM@m 000E                       _DataFlag 00F8  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024              ??_color_read_Blue 0007  
                 _TxBufReadCnt 00EE                       _BlueMove 512C                      _turnRight 4BD8  
                   vfpfcnvrt@c 00A5                      copy_data0 5204      __end_of_sendStringSerial4 5AE4  
                 ??_colour_rel 004F                  _reverseDetect 5358  __end_of_I2C_2_Master_RepStart 5BC8  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 45F8                   ??_initUSART4 0001  
                     _PinkMove 5652                       __Hrparam 0000         __end_of_Colour_decider 1936  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 4E50                    ??_RetryMove 001E  
                  _readColours 5192                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 37E8  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                   sprintf@fmt 00B2              ?_Forwardhalfblock 001A                       ___xxtofl 4150  
              ___lwdiv@divisor 0009             __end_of_initUSART4 5B9A                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 475C  
                     __ptext11 5A7C                       __ptext20 5AB4                       __ptext12 3AEE  
                     __ptext21 5B9A                       __ptext13 4FD8                       __ptext30 4E50  
                     __ptext22 5192                       __ptext14 58BE                       __ptext31 3F7E  
                     __ptext23 56F4                       __ptext15 4A64                       __ptext40 512C  
                     __ptext32 5984                       __ptext24 5744                       __ptext16 5BE4  
                     __ptext41 34BA                       __ptext33 59C2                       __ptext25 5794  
                     __ptext17 5944                       __ptext50 53B2                       __ptext42 55AE  
                     __ptext34 524A                       __ptext26 57E4                       __ptext18 45F8  
                     __ptext51 4BD8                       __ptext43 5B5C                       __ptext35 5A00  
                     __ptext27 5BBE                       __ptext19 4304                       __ptext60 4DB2  
                     __ptext52 4ED8                       __ptext44 5BB2                       __ptext36 550A  
                     __ptext28 5902                       __ptext61 448C                       __ptext53 4C76  
                     __ptext45 5BC8                       __ptext37 555C                       __ptext29 5B7C  
                     __ptext70 4862                       __ptext62 5B36                       __ptext54 5652  
                     __ptext46 5BD2                       __ptext38 5A3E                       __ptext71 4B2E  
                     __ptext63 5052                       __ptext55 540A                       __ptext47 5B0E  
                     __ptext39 52A4                       __ptext72 3120                       __ptext64 5BE6  
                     __ptext56 4D14                       __ptext48 5AE4                       __ptext65 0E5A  
                     __ptext57 52FE                       __ptext49 5600                       __ptext66 4150  
                     __ptext58 5358                       __ptext67 5834                       __ptext59 4F5A  
                     __ptext68 2836                       __ptext69 2CF6                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 0027                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 5462                  ??_turnRight45 001E                       _turnLeft 4D14  
             ___aomod@dividend 0001              ??_reverseOneBlock 001E                main@prev_colour 01F6  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 448C  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 00C4                 _high_threshold 00F2               ??_fullSpeedAhead 0018  
                    strcpy@src 0003                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                    efgtoa@nmode 0073                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 009B                ___aomod@counter 0011               _color_click_init 55AE  
                     sprintf@f 00C6                       sprintf@s 00B0                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 540A                ??_reverseDetect 001E  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 5462  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 5B9A  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
=======
                   _OrangeMove 550A               __end_of___xxtofl 4382                      ??_RedMove 0023  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0023                         ___flge 48E0                         ___fleq 4BAC  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 5BA8              ForwardOneBlock@mL 0019              ForwardOneBlock@mR 001B  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 1936  
                    ??___lwdiv 000B                         _floorf 3FBC                         _memcpy 56A4  
                       clear_0 5858                         clear_1 5864                         clear_2 5870  
                       _motorL 0173                         _motorR 016A                         isa$std 000001  
                    ??_go_Home 0027                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 58C6                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 0019             Forwardhalfblock@mR 001B  
                       putch@c 0001                ??_LightBlueMove 0023               __end_of_vfprintf 54B8  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 4E18                     ___flge@ff1 002A  
                   _YellowMove 5600                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 5876  
      __end_of_reverseOneBlock 5408                     ___flneg@f1 0001       __end_of_color_read_Green 57E4  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 5C74                 __pcstackCOMRAM 0001  
                _fullSpeedBack 4E18                   __pidataBANK0 5C6E                  __end_of_fputc 4BAC  
                __end_of_fputs 594E                  __end_of_putch 5C74              __end_of_GreenMove 5AC8  
          __end_of_Timer0_init 5C0E            __end_of_ReversePink 5A4C                      ?_BlueMove 001F  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14345 0100  
        __end_of_reverseDetect 5462                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 0019  
              reverseDetect@mR 001B                    ?_OrangeMove 001F               _Forwardhalfblock 52A0  
                   _getTMR0val 5B82              __end_of_RetryMove 4FB8                      ?_PinkMove 001F  
            _color_writetoaddr 5BCE                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 0019                        ?_memcpy 0001  
          ??_color_writetoaddr 0004                        ?_strcpy 0001                  colour_rel@rel 004D  
               go_Home@WayBack 0023                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5              ??_ForwardOneBlock 001D                     ??_BlueMove 0023  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 001F  
                   _colour_rel 34D8        __end_of_Interrupts_init 5C76         color_writetoaddr@value 0003  
             ??_color_read_Red 0007               main@consecuitive 01EA                        _HighISR 0008  
             ??_color_read_lum 0007               ?_reverseOneBlock 0019      __end_of_color_writetoaddr 5BEE  
                      _RedMove 5A4C             _I2C_2_Master_Start 5C64                     ??_PinkMove 0023  
                   _initUSART4 5C0E             _I2C_2_Master_Write 5C44                        __Hparam 0000  
                      _WayBack 02A0                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 5BEE                    RetryMove@mL 0019                    RetryMove@mR 001B  
      sendStringSerial4@string 0002              reverseOneBlock@mL 0019              reverseOneBlock@mR 001B  
                  _ReversePink 5A0E                        ___aodiv 4382                        ___fladd 2854  
                      ___aomod 4676                        ___fldiv 313E                        ___flneg 5AC8  
                      ___flmul 2D14                        ___flsub 5880                        ___fltol 47DA  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 50A8            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A8                   __psmallconst 0E00                   turnLeft45@mL 0019  
                 turnLeft45@mR 001B                        __pcinit 5834                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 3D8A                        __ptext0 2330  
                      __ptext1 54B8                        __ptext2 5462                        __ptext3 3806  
                      __ptext4 1936                        __ptext5 58C6                        __ptext6 56A4  
                      __ptext7 511C                        __ptext8 3FBC                        __ptext9 49E4  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00F9  
            color_read_lum@tmp 000A                        main@buf 0184                        _sprintf 54B8  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 5876  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 001F  
              LightBlueMove@mR 0021                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 010C              __end_of_vfpfcnvrt 3B0C                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 009D  
                   ??_vfprintf 005F                        strcpy@d 0007                        strcpy@s 0005  
              _initDCmotorsPWM 4EAE                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 4CEC                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 001F                  ReversePink@mR 0021       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                    _CCP1CONbits 000FAB                     main@colour 01EC  
                 _EUSART4RXbuf 00D3                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 001F  
                    RedMove@mR 0021             ??_color_read_Green 0007                     _turnLeft45 5354  
               __end_of___flge 49E4                 __end_of___fleq 4C56                 _fullSpeedAhead 4CEC  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 5BCE                 __end_of_efgtoa 2330                 __end_of_floorf 41CE  
               __end_of_memcpy 56F4                     floorf@F526 00E7       __end_of_Forwardhalfblock 52FA  
                    _GreenMove 5A8A                 __end_of_strcpy 590A            start_initialization 5834  
                  __end_of_abs 59D0                    __end_of_pad 5032                  _TxBufWriteCnt 00F7  
        __end_of_LightBlueMove 55AE                   ??_OrangeMove 0023          __end_of___fpclassifyf 4AE2  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 4F36                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 4D82                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 4F36                       ??___wmul 0005            go_Home@Time_forward 0025  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00FA  
              _ForwardOneBlock 5246                       ??_floorf 004F                       ??_memcpy 0007  
                     ??_strcpy 0005                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 59D0                      ___fldiv@a 0036                      ___fldiv@b 0032  
                   ?_GreenMove 001F                   OrangeMove@mL 001F                   OrangeMove@mR 0021  
           __end_of_OrangeMove 555C                      ___flmul@a 0015                      ___flmul@b 0011  
                    ___flsub@a 002E                      ___flsub@b 002A                  __pcstackBANK0 0060  
                __pcstackBANK1 0184               ___aodiv@dividend 0001                   ??_YellowMove 0023  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 001F  
                  _efgtoa$2539 006F               ___lwdiv@dividend 0007                      _dtoa$2508 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 0019                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 001F                     ?_RetryMove 0019  
                     ?___aodiv 0001                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$2910 0060                       ?___lwdiv 0007                       ?_go_Home 0023  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 001F             __end_of_YellowMove 5652  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00            __end_of_readColours 5246  
            _I2C_2_Master_Idle 5B5A              _I2C_2_Master_Init 5B30              _I2C_2_Master_Read 594E  
            _I2C_2_Master_Stop 5C5A                  _low_threshold 00F3                   _RxBufReadCnt 00F8  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0001  
               colour_rel@vals 004B              _sendStringSerial4 5B00            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                   ??_getTMR0val 0001  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D        __end_of_ForwardOneBlock 52A0  
                  turnRight@mL 0014                    turnRight@mR 0016                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E5A            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 3806      __end_of_I2C_2_Master_Idle 5B82      __end_of_I2C_2_Master_Init 5B5A  
    __end_of_I2C_2_Master_Read 5990              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 5C64  
                 setMotorPWM@m 000E                       _DataFlag 00FC    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0023              ??_color_read_Blue 0007             __end_of_getTMR0val 5BA8  
                 _TxBufReadCnt 00F6                       _BlueMove 5182                      _turnRight 4C56  
                   vfpfcnvrt@c 00A5                go_Home@cur_time 002A      __end_of_sendStringSerial4 5B30  
                 ??_colour_rel 004F                  _reverseDetect 5408  __end_of_I2C_2_Master_RepStart 5C5A  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 4676                   ??_initUSART4 0001  
                     _PinkMove 5652                       __Hrparam 0000         __end_of_Colour_decider 1936  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 4EAE                    ??_RetryMove 001D  
                  _readColours 51E8                ??_ReverseYellow 0023                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 3806  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00EB                     _ANSELFbits 000EB4  
                   sprintf@fmt 00B2              ?_Forwardhalfblock 0019                       ___xxtofl 41CE  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                   _Time_forward 023C  
              ___lwdiv@divisor 0009             __end_of_initUSART4 5C2C                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001D                     ?_turnRight 0014                       __ptext10 47DA  
                     __ptext11 5AC8                       __ptext20 5B00                       __ptext12 3B0C  
                     __ptext21 5C2C                       __ptext13 4FB8                       __ptext30 4EAE  
                     __ptext22 51E8                       __ptext14 590A                       __ptext31 3D8A  
                     __ptext23 56F4                       __ptext15 4AE2                       __ptext40 5182  
                     __ptext32 59D0                       __ptext24 5744                       __ptext16 5C72  
                     __ptext41 5B82                       __ptext33 5A0E                       __ptext25 5794  
                     __ptext17 5990                       __ptext50 5600                       __ptext42 34D8  
                     __ptext34 5246                       __ptext26 57E4                       __ptext18 4676  
                     __ptext51 52FA                       __ptext43 55AE                       __ptext35 5A4C  
                     __ptext27 5C50                       __ptext19 4382                       __ptext60 5408  
                     __ptext52 4C56                       __ptext44 5BCE                       __ptext36 550A  
                     __ptext28 594E                       __ptext61 5032                       __ptext53 5BEE  
                     __ptext45 5C44                       __ptext37 555C                       __ptext29 5C0E  
                     __ptext70 2854                       __ptext62 4E18                       __ptext54 4F36  
                     __ptext46 5C5A                       __ptext38 5A8A                       __ptext71 2D14  
                     __ptext63 450A                       __ptext55 4CEC                       __ptext47 5C64  
                     __ptext39 52A0                       __ptext72 48E0                       __ptext64 5BA8  
                     __ptext56 5652                       __ptext48 5B5A                       __ptext73 4BAC  
                     __ptext65 50A8                       __ptext57 5354                       __ptext49 5B30  
                     __ptext74 313E                       __ptext66 5C74                       __ptext58 4D82  
                     __ptext67 0E5A                       __ptext59 53AE                       __ptext68 41CE  
                     __ptext69 5880                 ?_reverseDetect 0019                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 0019                       go_Home@i 002C  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 5462  
                ??_turnRight45 001D                       _turnLeft 4D82               ___aomod@dividend 0001  
            ??_reverseOneBlock 001D                main@prev_colour 01EE                       memcpy@d1 0001  
                     memcpy@s1 0003                    _setMotorPWM 450A                  turnRight45@mL 0019  
                turnRight45@mR 001B                       intlevel2 0000                      sprintf@ap 00C4  
               _high_threshold 00FA               ??_fullSpeedAhead 0018                      strcpy@src 0003  
                 ??_turnLeft45 001D                     BlueMove@mL 001F                     BlueMove@mR 0021  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 55AE                       sprintf@f 00C6  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 5354                ??_reverseDetect 001D                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 53AE                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 5C2C                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
>>>>>>> Stashed changes
