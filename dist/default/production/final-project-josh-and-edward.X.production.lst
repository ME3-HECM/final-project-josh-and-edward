

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 21:57:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99   000000                     
   100                           ; Generated 06/04/2022 GMT
   101                           ; 
   102                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F67K40 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134   000000                     
   135                           	psect	idataBANK0
   136   0061B8                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _RunOneBlockTime
   140   0061B8  07D0               	dw	2000
   141                           
   142                           ;initializer for _Turn45Delay
   143   0061BA  00DC               	dw	220
   144                           
   145                           ;initializer for _power
   146   0061BC  001E               	dw	30
   147                           
   148                           ;initializer for _DataFlag
   149   0061BE  01                 	db	1
   150   000000                     _TRISEbits	set	3973
   151   000000                     _TMR0H	set	4052
   152   000000                     _LATHbits	set	3968
   153   000000                     _TX4REG	set	3812
   154   000000                     _RC4STAbits	set	3815
   155   000000                     _SP4BRGH	set	3814
   156   000000                     _SSP2CON2bits	set	3802
   157   000000                     _RX4PPS	set	3605
   158   000000                     _SSP2CLKPPS	set	3612
   159   000000                     _SSP2DATPPS	set	3613
   160   000000                     _ANSELDbits	set	3751
   161   000000                     _SSP2ADD	set	3798
   162   000000                     _SSP2CON1bits	set	3801
   163   000000                     _LATAbits	set	3961
   164   000000                     _LATFbits	set	3966
   165   000000                     _LATGbits	set	3967
   166   000000                     _TRISAbits	set	3969
   167   000000                     _TRISGbits	set	3975
   168   000000                     _PORTFbits	set	3982
   169   000000                     _TRISHbits	set	3976
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE4bits	set	3629
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _T2PR	set	4028
   196   000000                     _T2CONbits	set	4029
   197   000000                     _TMR0L	set	4051
   198   000000                     _T0CON0bits	set	4053
   199   000000                     _CCP2CONbits	set	4007
   200   000000                     _CCP3CONbits	set	3878
   201   000000                     _CCP4CONbits	set	3874
   202   000000                     _T0CON1bits	set	4054
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213   000E01  72                 	db	114	;'r'
   214   000E02  65                 	db	101	;'e'
   215   000E03  64                 	db	100	;'d'
   216   000E04  3D                 	db	61	;'='
   217   000E05  25                 	db	37
   218   000E06  64                 	db	100	;'d'
   219   000E07  20                 	db	32
   220   000E08  67                 	db	103	;'g'
   221   000E09  72                 	db	114	;'r'
   222   000E0A  65                 	db	101	;'e'
   223   000E0B  65                 	db	101	;'e'
   224   000E0C  6E                 	db	110	;'n'
   225   000E0D  3D                 	db	61	;'='
   226   000E0E  25                 	db	37
   227   000E0F  64                 	db	100	;'d'
   228   000E10  20                 	db	32
   229   000E11  62                 	db	98	;'b'
   230   000E12  6C                 	db	108	;'l'
   231   000E13  75                 	db	117	;'u'
   232   000E14  65                 	db	101	;'e'
   233   000E15  3D                 	db	61	;'='
   234   000E16  25                 	db	37
   235   000E17  64                 	db	100	;'d'
   236   000E18  20                 	db	32
   237   000E19  63                 	db	99	;'c'
   238   000E1A  6F                 	db	111	;'o'
   239   000E1B  6C                 	db	108	;'l'
   240   000E1C  6F                 	db	111	;'o'
   241   000E1D  75                 	db	117	;'u'
   242   000E1E  72                 	db	114	;'r'
   243   000E1F  3D                 	db	61	;'='
   244   000E20  25                 	db	37
   245   000E21  64                 	db	100	;'d'
   246   000E22  20                 	db	32
   247   000E23  0D                 	db	13
   248   000E24  0A                 	db	10
   249   000E25  00                 	db	0
   250   000E26                     STR_2:
   251   000E26  72                 	db	114	;'r'
   252   000E27  65                 	db	101	;'e'
   253   000E28  64                 	db	100	;'d'
   254   000E29  3D                 	db	61	;'='
   255   000E2A  25                 	db	37
   256   000E2B  66                 	db	102	;'f'
   257   000E2C  20                 	db	32
   258   000E2D  67                 	db	103	;'g'
   259   000E2E  72                 	db	114	;'r'
   260   000E2F  65                 	db	101	;'e'
   261   000E30  65                 	db	101	;'e'
   262   000E31  6E                 	db	110	;'n'
   263   000E32  3D                 	db	61	;'='
   264   000E33  25                 	db	37
   265   000E34  66                 	db	102	;'f'
   266   000E35  20                 	db	32
   267   000E36  62                 	db	98	;'b'
   268   000E37  6C                 	db	108	;'l'
   269   000E38  75                 	db	117	;'u'
   270   000E39  65                 	db	101	;'e'
   271   000E3A  3D                 	db	61	;'='
   272   000E3B  25                 	db	37
   273   000E3C  66                 	db	102	;'f'
   274   000E3D  20                 	db	32
   275   000E3E  6C                 	db	108	;'l'
   276   000E3F  75                 	db	117	;'u'
   277   000E40  6D                 	db	109	;'m'
   278   000E41  3D                 	db	61	;'='
   279   000E42  25                 	db	37
   280   000E43  64                 	db	100	;'d'
   281   000E44  20                 	db	32
   282   000E45  20                 	db	32
   283   000E46  0D                 	db	13
   284   000E47  0A                 	db	10
   285   000E48  00                 	db	0
   286   000E49                     STR_3:
   287   000E49  69                 	db	105	;'i'
   288   000E4A  6E                 	db	110	;'n'
   289   000E4B  66                 	db	102	;'f'
   290   000E4C  00                 	db	0
   291   000E4D                     STR_6:
   292   000E4D  6E                 	db	110	;'n'
   293   000E4E  61                 	db	97	;'a'
   294   000E4F  6E                 	db	110	;'n'
   295   000E50  00                 	db	0
   296   000E51  00                 	db	0	; dummy byte at the end
   297   000000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301   005D8C                     __pcinit:
   302                           	callstack 0
   303   005D8C                     start_initialization:
   304                           	callstack 0
   305   005D8C                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK0 (7 bytes)
   309                           ; load TBLPTR registers with __pidataBANK0
   310   005D8C  0EB8               	movlw	low __pidataBANK0
   311   005D8E  6EF6               	movwf	tblptrl,c
   312   005D90  0E61               	movlw	high __pidataBANK0
   313   005D92  6EF7               	movwf	tblptrh,c
   314   005D94  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   315   005D96  6EF8               	movwf	tblptru,c
   316   005D98  EE00  F0F7         	lfsr	0,__pdataBANK0
   317   005D9C  EE10 F007          	lfsr	1,7
   318   005DA0                     copy_data0:
   319   005DA0  0009               	tblrd		*+
   320   005DA2  CFF5 FFEE          	movff	tablat,postinc0
   321   005DA6  50E5               	movf	postdec1,w,c
   322   005DA8  50E1               	movf	fsr1l,w,c
   323   005DAA  E1FA               	bnz	copy_data0
   324                           
   325                           ; Clear objects allocated to BANK2 (240 bytes)
   326   005DAC  EE02  F000         	lfsr	0,__pbssBANK2
   327   005DB0  0EF0               	movlw	240
   328   005DB2                     clear_0:
   329   005DB2  6AEE               	clrf	postinc0,c
   330   005DB4  06E8               	decf	wreg,f,c
   331   005DB6  E1FD               	bnz	clear_0
   332                           
   333                           ; Clear objects allocated to BANK1 (102 bytes)
   334   005DB8  EE01  F072         	lfsr	0,__pbssBANK1
   335   005DBC  0E66               	movlw	102
   336   005DBE                     clear_1:
   337   005DBE  6AEE               	clrf	postinc0,c
   338   005DC0  06E8               	decf	wreg,f,c
   339   005DC2  E1FD               	bnz	clear_1
   340                           
   341                           ; Clear objects allocated to BANK0 (38 bytes)
   342   005DC4  EE00  F0D1         	lfsr	0,__pbssBANK0
   343   005DC8  0E26               	movlw	38
   344   005DCA                     clear_2:
   345   005DCA  6AEE               	clrf	postinc0,c
   346   005DCC  06E8               	decf	wreg,f,c
   347   005DCE  E1FD               	bnz	clear_2
   348                           
   349                           ; Clear objects allocated to COMRAM (1 bytes)
   350   005DD0  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   351   005DD2                     end_of_initialization:
   352                           	callstack 0
   353   005DD2                     __end_of__initialization:
   354                           	callstack 0
   355   005DD2  0100               	movlb	0
   356   005DD4  EF94  F011         	goto	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMRAM
   359   00005F                     __pbssCOMRAM:
   360                           	callstack 0
   361   00005F                     _TxBufWriteCnt:
   362                           	callstack 0
   363   00005F                     	ds	1
   364                           
   365                           	psect	bssBANK0
   366   0000D1                     __pbssBANK0:
   367                           	callstack 0
   368   0000D1                     _EUSART4RXbuf:
   369                           	callstack 0
   370   0000D1                     	ds	20
   371   0000E5                     floorf@F526:
   372                           	callstack 0
   373   0000E5                     	ds	4
   374   0000E9                     ___fpclassifyf@F465:
   375                           	callstack 0
   376   0000E9                     	ds	4
   377   0000ED                     _width:
   378                           	callstack 0
   379   0000ED                     	ds	2
   380   0000EF                     _prec:
   381                           	callstack 0
   382   0000EF                     	ds	2
   383   0000F1                     _lost_flag:
   384                           	callstack 0
   385   0000F1                     	ds	2
   386   0000F3                     _flags:
   387                           	callstack 0
   388   0000F3                     	ds	1
   389   0000F4                     _TxBufReadCnt:
   390                           	callstack 0
   391   0000F4                     	ds	1
   392   0000F5                     _RxBufReadCnt:
   393                           	callstack 0
   394   0000F5                     	ds	1
   395   0000F6                     _RxBufWriteCnt:
   396                           	callstack 0
   397   0000F6                     	ds	1
   398                           
   399                           	psect	dataBANK0
   400   0000F7                     __pdataBANK0:
   401                           	callstack 0
   402   0000F7                     _RunOneBlockTime:
   403                           	callstack 0
   404   0000F7                     	ds	2
   405   0000F9                     _Turn45Delay:
   406                           	callstack 0
   407   0000F9                     	ds	2
   408   0000FB                     _power:
   409                           	callstack 0
   410   0000FB                     	ds	2
   411   0000FD                     _DataFlag:
   412                           	callstack 0
   413   0000FD                     	ds	1
   414                           
   415                           	psect	bssBANK1
   416   000172                     __pbssBANK1:
   417                           	callstack 0
   418   000172                     	ds	12
   419   00017E                     _move_count:
   420                           	callstack 0
   421   00017E                     	ds	2
   422   000180                     _WayBack:
   423                           	callstack 0
   424   000180                     	ds	50
   425   0001B2                     _rel:
   426                           	callstack 0
   427   0001B2                     	ds	12
   428   0001BE                     _motorR:
   429                           	callstack 0
   430   0001BE                     	ds	9
   431   0001C7                     _motorL:
   432                           	callstack 0
   433   0001C7                     	ds	9
   434   0001D0                     _vals:
   435                           	callstack 0
   436   0001D0                     	ds	8
   437                           
   438                           	psect	bssBANK2
   439   000200                     __pbssBANK2:
   440                           	callstack 0
   441   000200                     _EUSART4TXbuf:
   442                           	callstack 0
   443   000200                     	ds	60
   444   00023C                     _Time_forward:
   445                           	callstack 0
   446   00023C                     	ds	100
   447   0002A0                     _dbuf:
   448                           	callstack 0
   449   0002A0                     	ds	80
   450                           
   451                           	psect	cstackBANK1
   452   000100                     __pcstackBANK1:
   453                           	callstack 0
   454   000100                     main@buf:
   455                           	callstack 0
   456                           
   457                           ; 100 bytes @ 0x0
   458   000100                     	ds	100
   459   000164                     main@temp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x64
   463   000164                     	ds	2
   464   000166                     main@colour_1291:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x66
   468   000166                     	ds	2
   469   000168                     main@run_flag:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x68
   473   000168                     	ds	2
   474   00016A                     main@lost_count:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x6A
   478   00016A                     	ds	2
   479   00016C                     main@consecuitive:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x6C
   483   00016C                     	ds	2
   484   00016E                     main@colour:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x6E
   488   00016E                     	ds	2
   489   000170                     main@prev_colour:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x70
   493   000170                     	ds	2
   494                           
   495                           	psect	cstackBANK0
   496   000060                     __pcstackBANK0:
   497                           	callstack 0
   498   000060                     efgtoa@fp:
   499                           	callstack 0
   500   000060                     colour_rel@L:
   501                           	callstack 0
   502   000060                     _Colour_decider$3144:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x0
   506   000060                     	ds	2
   507   000062                     efgtoa@f:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x2
   511   000062                     	ds	2
   512   000064                     Colour_decider@Cmax_i:
   513                           	callstack 0
   514   000064                     _colour_rel$3142:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x4
   518   000064                     	ds	2
   519   000066                     efgtoa@c:
   520                           	callstack 0
   521   000066                     Colour_decider@RGB_col:
   522                           	callstack 0
   523                           
   524                           ; 12 bytes @ 0x6
   525   000066                     	ds	1
   526   000067                     ??_efgtoa:
   527                           
   528                           ; 1 bytes @ 0x7
   529   000067                     	ds	1
   530   000068                     _colour_rel$3143:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x8
   534   000068                     	ds	1
   535   000069                     efgtoa@ne:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x9
   539   000069                     	ds	2
   540   00006B                     efgtoa@p:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0xB
   544   00006B                     	ds	1
   545   00006C                     colour_rel@R:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0xC
   549   00006C                     	ds	1
   550   00006D                     efgtoa@t:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xD
   554   00006D                     	ds	2
   555   00006F                     _efgtoa$2772:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0xF
   559   00006F                     	ds	1
   560   000070                     colour_rel@G:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x10
   564   000070                     	ds	1
   565   000071                     efgtoa@pp:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x11
   569   000071                     	ds	1
   570   000072                     efgtoa@mode:
   571                           	callstack 0
   572   000072                     Colour_decider@Cmax:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x12
   576   000072                     	ds	1
   577   000073                     efgtoa@nmode:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x13
   581   000073                     	ds	1
   582   000074                     efgtoa@d:
   583                           	callstack 0
   584   000074                     colour_rel@B:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x14
   588   000074                     	ds	2
   589   000076                     efgtoa@m:
   590                           	callstack 0
   591   000076                     Colour_decider@Cmin:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x16
   595   000076                     	ds	2
   596   000078                     efgtoa@e:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x18
   600   000078                     	ds	2
   601   00007A                     Colour_decider@i:
   602                           	callstack 0
   603   00007A                     efgtoa@w:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x1A
   607   00007A                     	ds	2
   608   00007C                     Colour_decider@Hue:
   609                           	callstack 0
   610   00007C                     efgtoa@ou:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x1C
   614   00007C                     	ds	4
   615   000080                     efgtoa@i:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x20
   619   000080                     	ds	2
   620   000082                     efgtoa@h:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x22
   624   000082                     	ds	4
   625   000086                     efgtoa@l:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x26
   629   000086                     	ds	4
   630   00008A                     efgtoa@sign:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x2A
   634   00008A                     	ds	1
   635   00008B                     efgtoa@n:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x2B
   639   00008B                     	ds	2
   640   00008D                     efgtoa@g:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x2D
   644   00008D                     	ds	4
   645   000091                     efgtoa@u:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x31
   649   000091                     	ds	4
   650   000095                     vfpfcnvrt@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x35
   654   000095                     	ds	2
   655   000097                     vfpfcnvrt@fmt:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x37
   659   000097                     	ds	2
   660   000099                     vfpfcnvrt@ap:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x39
   664   000099                     	ds	2
   665   00009B                     ??_vfpfcnvrt:
   666                           
   667                           ; 1 bytes @ 0x3B
   668   00009B                     	ds	2
   669   00009D                     vfpfcnvrt@convarg:
   670                           	callstack 0
   671                           
   672                           ; 8 bytes @ 0x3D
   673   00009D                     	ds	8
   674   0000A5                     vfpfcnvrt@c:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x45
   678   0000A5                     	ds	1
   679   0000A6                     vfpfcnvrt@cp:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x46
   683   0000A6                     	ds	2
   684   0000A8                     ?_vfprintf:
   685                           	callstack 0
   686   0000A8                     vfprintf@fp:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x48
   690   0000A8                     	ds	2
   691   0000AA                     vfprintf@fmt:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x4A
   695   0000AA                     	ds	2
   696   0000AC                     vfprintf@ap:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x4C
   700   0000AC                     	ds	2
   701   0000AE                     vfprintf@cfmt:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x4E
   705   0000AE                     	ds	2
   706   0000B0                     ?_sprintf:
   707                           	callstack 0
   708   0000B0                     sprintf@s:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x50
   712   0000B0                     	ds	2
   713   0000B2                     sprintf@fmt:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x52
   717   0000B2                     	ds	16
   718   0000C2                     sprintf@ap:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x62
   722   0000C2                     	ds	2
   723   0000C4                     sprintf@f:
   724                           	callstack 0
   725                           
   726                           ; 11 bytes @ 0x64
   727   0000C4                     	ds	11
   728   0000CF                     ??_main:
   729                           
   730                           ; 1 bytes @ 0x6F
   731   0000CF                     	ds	2
   732                           
   733                           	psect	cstackCOMRAM
   734   000001                     __pcstackCOMRAM:
   735                           	callstack 0
   736   000001                     ??_I2C_2_Master_Idle:
   737   000001                     ?___fpclassifyf:
   738                           	callstack 0
   739   000001                     ?___wmul:
   740                           	callstack 0
   741   000001                     ?___fladd:
   742                           	callstack 0
   743   000001                     ?_labs:
   744                           	callstack 0
   745   000001                     ?___flneg:
   746                           	callstack 0
   747   000001                     ?___fltol:
   748                           	callstack 0
   749   000001                     ?___xxtofl:
   750                           	callstack 0
   751   000001                     ?___aodiv:
   752                           	callstack 0
   753   000001                     ?___aomod:
   754                           	callstack 0
   755   000001                     sendCharSerial4@charToSend:
   756                           	callstack 0
   757   000001                     initDCmotorsPWM@PWMperiod:
   758                           	callstack 0
   759   000001                     TurnDelay@Turn45Delay:
   760                           	callstack 0
   761   000001                     getTMR0val@moving:
   762                           	callstack 0
   763   000001                     delayed_ms@time:
   764                           	callstack 0
   765   000001                     ___wmul@multiplier:
   766                           	callstack 0
   767   000001                     memcpy@d1:
   768                           	callstack 0
   769   000001                     fputc@c:
   770                           	callstack 0
   771   000001                     strcpy@dest:
   772                           	callstack 0
   773   000001                     ___flneg@f1:
   774                           	callstack 0
   775   000001                     ___fltol@f1:
   776                           	callstack 0
   777   000001                     ___fladd@b:
   778                           	callstack 0
   779   000001                     ___xxtofl@val:
   780                           	callstack 0
   781   000001                     ___fpclassifyf@x:
   782                           	callstack 0
   783   000001                     labs@a:
   784                           	callstack 0
   785   000001                     ___aodiv@dividend:
   786                           	callstack 0
   787   000001                     ___aomod@dividend:
   788                           	callstack 0
   789                           
   790                           ; 8 bytes @ 0x0
   791   000001                     	ds	1
   792   000002                     ??_I2C_2_Master_Read:
   793   000002                     I2C_2_Master_Write@data_byte:
   794                           	callstack 0
   795   000002                     sendStringSerial4@string:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x1
   799   000002                     	ds	1
   800   000003                     ??_delayed_ms:
   801   000003                     ??_TurnDelay:
   802   000003                     color_writetoaddr@value:
   803                           	callstack 0
   804   000003                     I2C_2_Master_Read@ack:
   805                           	callstack 0
   806   000003                     ___wmul@multiplicand:
   807                           	callstack 0
   808   000003                     memcpy@s1:
   809                           	callstack 0
   810   000003                     fputc@fp:
   811                           	callstack 0
   812   000003                     strcpy@src:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816   000003                     	ds	1
   817   000004                     color_writetoaddr@address:
   818                           	callstack 0
   819   000004                     I2C_2_Master_Read@tmp:
   820                           	callstack 0
   821   000004                     delayed_ms@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x3
   825   000004                     	ds	1
   826   000005                     ??_fputc:
   827   000005                     ??___fpclassifyf:
   828   000005                     ??_labs:
   829   000005                     ??_color_click_init:
   830   000005                     ??___fltol:
   831   000005                     ??___xxtofl:
   832   000005                     ?_color_read_lum:
   833                           	callstack 0
   834   000005                     ?_color_read_Red:
   835                           	callstack 0
   836   000005                     ?_color_read_Green:
   837                           	callstack 0
   838   000005                     ?_color_read_Blue:
   839                           	callstack 0
   840   000005                     ___wmul@product:
   841                           	callstack 0
   842   000005                     memcpy@n:
   843                           	callstack 0
   844   000005                     strcpy@s:
   845                           	callstack 0
   846   000005                     ___fladd@a:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x4
   850   000005                     	ds	2
   851   000007                     ??_color_read_lum:
   852   000007                     ??_color_read_Red:
   853   000007                     ??_color_read_Green:
   854   000007                     ??_color_read_Blue:
   855   000007                     ?___lwdiv:
   856                           	callstack 0
   857   000007                     ___lwdiv@dividend:
   858                           	callstack 0
   859   000007                     memcpy@d:
   860                           	callstack 0
   861   000007                     strcpy@d:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x6
   865   000007                     	ds	2
   866   000009                     ??___fladd:
   867   000009                     ___fltol@sign1:
   868                           	callstack 0
   869   000009                     ___xxtofl@sign:
   870                           	callstack 0
   871   000009                     ___lwdiv@divisor:
   872                           	callstack 0
   873   000009                     ___fpclassifyf@e:
   874                           	callstack 0
   875   000009                     memcpy@s:
   876                           	callstack 0
   877   000009                     ___aodiv@divisor:
   878                           	callstack 0
   879   000009                     ___aomod@divisor:
   880                           	callstack 0
   881                           
   882                           ; 8 bytes @ 0x8
   883   000009                     	ds	1
   884   00000A                     ___fltol@exp1:
   885                           	callstack 0
   886   00000A                     ___xxtofl@exp:
   887                           	callstack 0
   888   00000A                     color_read_lum@tmp:
   889                           	callstack 0
   890   00000A                     color_read_Red@tmp:
   891                           	callstack 0
   892   00000A                     color_read_Green@tmp:
   893                           	callstack 0
   894   00000A                     color_read_Blue@tmp:
   895                           	callstack 0
   896   00000A                     fputs@s:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x9
   900   00000A                     	ds	1
   901   00000B                     memcpy@tmp:
   902                           	callstack 0
   903   00000B                     ___lwdiv@quotient:
   904                           	callstack 0
   905   00000B                     ___xxtofl@arg:
   906                           	callstack 0
   907   00000B                     ___fpclassifyf@u:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0xA
   911   00000B                     	ds	1
   912   00000C                     readColours@vals:
   913                           	callstack 0
   914   00000C                     fputs@fp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0xB
   918   00000C                     	ds	1
   919   00000D                     ___lwdiv@counter:
   920                           	callstack 0
   921   00000D                     ___fladd@signs:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0xC
   925   00000D                     	ds	1
   926   00000E                     ___fladd@aexp:
   927                           	callstack 0
   928   00000E                     fputs@c:
   929                           	callstack 0
   930   00000E                     setMotorPWM@m:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xD
   934   00000E                     	ds	1
   935   00000F                     ___fladd@bexp:
   936                           	callstack 0
   937   00000F                     fputs@i:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0xE
   941   00000F                     	ds	1
   942   000010                     ??_setMotorPWM:
   943   000010                     ___fladd@grs:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0xF
   947   000010                     	ds	1
   948   000011                     ?___flmul:
   949                           	callstack 0
   950   000011                     ___aodiv@counter:
   951                           	callstack 0
   952   000011                     ___aomod@counter:
   953                           	callstack 0
   954   000011                     pad@fp:
   955                           	callstack 0
   956   000011                     ___flmul@b:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x10
   960   000011                     	ds	1
   961   000012                     setMotorPWM@posDuty:
   962                           	callstack 0
   963   000012                     ___aodiv@sign:
   964                           	callstack 0
   965   000012                     ___aomod@sign:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x11
   969   000012                     	ds	1
   970   000013                     ?_abs:
   971                           	callstack 0
   972   000013                     setMotorPWM@negDuty:
   973                           	callstack 0
   974   000013                     pad@buf:
   975                           	callstack 0
   976   000013                     abs@a:
   977                           	callstack 0
   978   000013                     ___aodiv@quotient:
   979                           	callstack 0
   980                           
   981                           ; 8 bytes @ 0x12
   982   000013                     	ds	1
   983   000014                     stop@mL:
   984                           	callstack 0
   985   000014                     turnLeft@mL:
   986                           	callstack 0
   987   000014                     turnRight@mL:
   988                           	callstack 0
   989   000014                     fullSpeedAhead@mL:
   990                           	callstack 0
   991   000014                     timed_forward@mL:
   992                           	callstack 0
   993   000014                     fullSpeedBack@mL:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x13
   997   000014                     	ds	1
   998   000015                     ??_abs:
   999   000015                     pad@p:
  1000                           	callstack 0
  1001   000015                     ___flmul@a:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x14
  1005   000015                     	ds	1
  1006   000016                     stop@mR:
  1007                           	callstack 0
  1008   000016                     turnLeft@mR:
  1009                           	callstack 0
  1010   000016                     turnRight@mR:
  1011                           	callstack 0
  1012   000016                     fullSpeedAhead@mR:
  1013                           	callstack 0
  1014   000016                     timed_forward@mR:
  1015                           	callstack 0
  1016   000016                     fullSpeedBack@mR:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x15
  1020   000016                     	ds	1
  1021   000017                     ??_pad:
  1022                           
  1023                           ; 1 bytes @ 0x16
  1024   000017                     	ds	1
  1025   000018                     ??_fullSpeedAhead:
  1026   000018                     ??_stop:
  1027   000018                     ??_turnLeft:
  1028   000018                     ??_turnRight:
  1029   000018                     ??_fullSpeedBack:
  1030   000018                     timed_forward@time:
  1031                           	callstack 0
  1032   000018                     pad@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x17
  1036   000018                     	ds	1
  1037   000019                     ??___flmul:
  1038                           
  1039                           ; 1 bytes @ 0x18
  1040   000019                     	ds	1
  1041   00001A                     ??_timed_forward:
  1042   00001A                     turnRight45@mL:
  1043                           	callstack 0
  1044   00001A                     turnLeft45@mL:
  1045                           	callstack 0
  1046   00001A                     reverseDetect@mL:
  1047                           	callstack 0
  1048   00001A                     reverseOneBlock@mL:
  1049                           	callstack 0
  1050   00001A                     ForwardOneBlock@mL:
  1051                           	callstack 0
  1052   00001A                     Forwardhalfblock@mL:
  1053                           	callstack 0
  1054   00001A                     RetryMove@mL:
  1055                           	callstack 0
  1056   00001A                     pad@w:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x19
  1060   00001A                     	ds	2
  1061   00001C                     turnRight45@mR:
  1062                           	callstack 0
  1063   00001C                     turnLeft45@mR:
  1064                           	callstack 0
  1065   00001C                     reverseDetect@mR:
  1066                           	callstack 0
  1067   00001C                     reverseOneBlock@mR:
  1068                           	callstack 0
  1069   00001C                     ForwardOneBlock@mR:
  1070                           	callstack 0
  1071   00001C                     Forwardhalfblock@mR:
  1072                           	callstack 0
  1073   00001C                     RetryMove@mR:
  1074                           	callstack 0
  1075   00001C                     dtoa@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x1B
  1079   00001C                     	ds	1
  1080   00001D                     ___flmul@sign:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x1C
  1084   00001D                     	ds	1
  1085   00001E                     ??_Forwardhalfblock:
  1086   00001E                     ??_RetryMove:
  1087   00001E                     ??_turnRight45:
  1088   00001E                     ??_turnLeft45:
  1089   00001E                     ??_reverseDetect:
  1090   00001E                     ??_reverseOneBlock:
  1091   00001E                     ??_ForwardOneBlock:
  1092   00001E                     ___flmul@grs:
  1093                           	callstack 0
  1094   00001E                     dtoa@d:
  1095                           	callstack 0
  1096                           
  1097                           ; 8 bytes @ 0x1D
  1098   00001E                     	ds	2
  1099   000020                     RedMove@mL:
  1100                           	callstack 0
  1101   000020                     GreenMove@mL:
  1102                           	callstack 0
  1103   000020                     BlueMove@mL:
  1104                           	callstack 0
  1105   000020                     YellowMove@mL:
  1106                           	callstack 0
  1107   000020                     PinkMove@mL:
  1108                           	callstack 0
  1109   000020                     OrangeMove@mL:
  1110                           	callstack 0
  1111   000020                     LightBlueMove@mL:
  1112                           	callstack 0
  1113   000020                     ReverseYellow@mL:
  1114                           	callstack 0
  1115   000020                     ReversePink@mL:
  1116                           	callstack 0
  1117   000020                     turnCalibration@mL:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x1F
  1121   000020                     	ds	2
  1122   000022                     ___flmul@aexp:
  1123                           	callstack 0
  1124   000022                     RedMove@mR:
  1125                           	callstack 0
  1126   000022                     GreenMove@mR:
  1127                           	callstack 0
  1128   000022                     BlueMove@mR:
  1129                           	callstack 0
  1130   000022                     YellowMove@mR:
  1131                           	callstack 0
  1132   000022                     PinkMove@mR:
  1133                           	callstack 0
  1134   000022                     OrangeMove@mR:
  1135                           	callstack 0
  1136   000022                     LightBlueMove@mR:
  1137                           	callstack 0
  1138   000022                     ReverseYellow@mR:
  1139                           	callstack 0
  1140   000022                     ReversePink@mR:
  1141                           	callstack 0
  1142   000022                     turnCalibration@mR:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x21
  1146   000022                     	ds	1
  1147   000023                     ___flmul@bexp:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x22
  1151   000023                     	ds	1
  1152   000024                     ??_turnCalibration:
  1153   000024                     go_Home@WayBack:
  1154                           	callstack 0
  1155   000024                     ___flmul@prod:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x23
  1159   000024                     	ds	2
  1160   000026                     ??_dtoa:
  1161   000026                     go_Home@Time_forward:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x25
  1165   000026                     	ds	2
  1166   000028                     ??_go_Home:
  1167   000028                     ___flmul@temp:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x27
  1171   000028                     	ds	2
  1172   00002A                     ?___flsub:
  1173                           	callstack 0
  1174   00002A                     ___flge@ff1:
  1175                           	callstack 0
  1176   00002A                     ___flsub@b:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x29
  1180   00002A                     	ds	1
  1181   00002B                     go_Home@i:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x2A
  1185   00002B                     	ds	3
  1186   00002E                     _dtoa$2741:
  1187                           	callstack 0
  1188   00002E                     ___flge@ff2:
  1189                           	callstack 0
  1190   00002E                     ___flsub@a:
  1191                           	callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x2D
  1194   00002E                     	ds	2
  1195   000030                     dtoa@p:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x2F
  1199   000030                     	ds	2
  1200   000032                     ??___flge:
  1201   000032                     ?___fldiv:
  1202                           	callstack 0
  1203   000032                     dtoa@w:
  1204                           	callstack 0
  1205   000032                     ___fleq@ff1:
  1206                           	callstack 0
  1207   000032                     ___fldiv@b:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x31
  1211   000032                     	ds	2
  1212   000034                     dtoa@n:
  1213                           	callstack 0
  1214                           
  1215                           ; 8 bytes @ 0x33
  1216   000034                     	ds	2
  1217   000036                     ___fleq@ff2:
  1218                           	callstack 0
  1219   000036                     ___fldiv@a:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x35
  1223   000036                     	ds	4
  1224   00003A                     ??___fldiv:
  1225   00003A                     ??___fleq:
  1226                           
  1227                           ; 1 bytes @ 0x39
  1228   00003A                     	ds	2
  1229   00003C                     dtoa@i:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x3B
  1233   00003C                     	ds	2
  1234   00003E                     dtoa@s:
  1235                           	callstack 0
  1236   00003E                     ___fldiv@rem:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x3D
  1240   00003E                     	ds	4
  1241   000042                     ___fldiv@sign:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x41
  1245   000042                     	ds	1
  1246   000043                     ___fldiv@new_exp:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x42
  1250   000043                     	ds	2
  1251   000045                     ___fldiv@grs:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x44
  1255   000045                     	ds	4
  1256   000049                     ___fldiv@bexp:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x48
  1260   000049                     	ds	1
  1261   00004A                     ___fldiv@aexp:
  1262                           	callstack 0
  1263                           
  1264                           ; 1 bytes @ 0x49
  1265   00004A                     	ds	1
  1266   00004B                     ?_Colour_decider:
  1267                           	callstack 0
  1268   00004B                     ?_floorf:
  1269                           	callstack 0
  1270   00004B                     colour_rel@vals:
  1271                           	callstack 0
  1272   00004B                     Colour_decider@vals:
  1273                           	callstack 0
  1274   00004B                     floorf@x:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0x4A
  1278   00004B                     	ds	2
  1279   00004D                     colour_rel@rel:
  1280                           	callstack 0
  1281   00004D                     Colour_decider@rel:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x4C
  1285   00004D                     	ds	2
  1286   00004F                     ??_floorf:
  1287   00004F                     ??_Colour_decider:
  1288                           
  1289                           ; 1 bytes @ 0x4E
  1290   00004F                     	ds	6
  1291   000055                     floorf@m:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x54
  1295   000055                     	ds	4
  1296   000059                     floorf@e:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x58
  1300   000059                     	ds	2
  1301   00005B                     floorf@u:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x5A
  1305   00005B                     	ds	4
  1306   00005F                     
  1307                           ; 1 bytes @ 0x5E
  1308 ;;
  1309 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1310 ;;
  1311 ;; *************** function _main *****************
  1312 ;; Defined at:
  1313 ;;		line 30 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  colour          2  110[BANK1 ] int 
  1318 ;;  colour          2  102[BANK1 ] int 
  1319 ;;  temp            2  100[BANK1 ] int 
  1320 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1321 ;;  prev_colour     2  112[BANK1 ] int 
  1322 ;;  consecuitive    2  108[BANK1 ] int 
  1323 ;;  lost_count      2  106[BANK1 ] int 
  1324 ;;  run_flag        2  104[BANK1 ] int 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;      Locals:         0       0     114       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;      Totals:         0       2     114       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1338 ;;Total ram usage:      116 bytes
  1339 ;; Hardware stack levels required when called: 8
  1340 ;; This function calls:
  1341 ;;		_BlueMove
  1342 ;;		_Colour_decider
  1343 ;;		_Forwardhalfblock
  1344 ;;		_GreenMove
  1345 ;;		_I2C_2_Master_Init
  1346 ;;		_Interrupts_init
  1347 ;;		_LightBlueMove
  1348 ;;		_OrangeMove
  1349 ;;		_PinkMove
  1350 ;;		_RedMove
  1351 ;;		_RetryMove
  1352 ;;		_Timer0_init
  1353 ;;		_YellowMove
  1354 ;;		_color_click_init
  1355 ;;		_colour_rel
  1356 ;;		_fullSpeedAhead
  1357 ;;		_getTMR0val
  1358 ;;		_go_Home
  1359 ;;		_initDCmotorsPWM
  1360 ;;		_initUSART4
  1361 ;;		_readColours
  1362 ;;		_sendStringSerial4
  1363 ;;		_sprintf
  1364 ;;		_stop
  1365 ;;		_turnCalibration
  1366 ;; This function is called by:
  1367 ;;		Startup code after reset
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text0
  1372   002328                     __ptext0:
  1373                           	callstack 0
  1374   002328                     _main:
  1375                           	callstack 23
  1376   002328                     
  1377                           ;main.c: 31:     initUSART4();
  1378   002328  ECAC  F030         	call	_initUSART4	;wreg free
  1379   00232C                     
  1380                           ;main.c: 32:     Interrupts_init();
  1381   00232C  ECE1  F030         	call	_Interrupts_init	;wreg free
  1382   002330                     
  1383                           ;main.c: 33:     color_click_init();
  1384   002330  EC35  F02D         	call	_color_click_init	;wreg free
  1385   002334                     
  1386                           ;main.c: 34:     I2C_2_Master_Init();
  1387   002334  EC3D  F030         	call	_I2C_2_Master_Init	;wreg free
  1388   002338                     
  1389                           ;main.c: 35:     initDCmotorsPWM(200);
  1390   002338  0E00               	movlw	0
  1391   00233A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1392   00233C  0EC8               	movlw	200
  1393   00233E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1394   002340  EC0B  F02A         	call	_initDCmotorsPWM	;wreg free
  1395   002344                     
  1396                           ;main.c: 36:     Timer0_init();
  1397   002344  EC9C  F030         	call	_Timer0_init	;wreg free
  1398   002348                     
  1399                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1400   002348  9287               	bcf	135,1,c	;volatile
  1401   00234A                     
  1402                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1403   00234A  9881               	bcf	129,4,c	;volatile
  1404   00234C                     
  1405                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1406   00234C  9E86               	bcf	134,7,c	;volatile
  1407   00234E                     
  1408                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1409   00234E  8486               	bsf	134,2,c	;volatile
  1410   002350                     
  1411                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1412   002350  010E               	movlb	14	; () banked
  1413   002352  95B4               	bcf	180,2,b	;volatile
  1414   002354                     
  1415                           ; BSR set to: 14
  1416                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1417   002354  8686               	bsf	134,3,c	;volatile
  1418   002356                     
  1419                           ; BSR set to: 14
  1420                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1421   002356  97B4               	bcf	180,3,b	;volatile
  1422   002358                     
  1423                           ; BSR set to: 14
  1424                           ;main.c: 46:     LATGbits.LATG1=1;
  1425   002358  827F               	bsf	127,1,c	;volatile
  1426   00235A                     
  1427                           ; BSR set to: 14
  1428                           ;main.c: 47:     LATAbits.LATA4=1;
  1429   00235A  8879               	bsf	121,4,c	;volatile
  1430   00235C                     
  1431                           ; BSR set to: 14
  1432                           ;main.c: 48:     LATFbits.LATF7=1;
  1433   00235C  8E7E               	bsf	126,7,c	;volatile
  1434   00235E                     
  1435                           ; BSR set to: 14
  1436                           ;main.c: 51:     LATDbits.LATD7=0;
  1437   00235E  9E7C               	bcf	124,7,c	;volatile
  1438   002360                     
  1439                           ; BSR set to: 14
  1440                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1441   002360  9E84               	bcf	132,7,c	;volatile
  1442   002362                     
  1443                           ; BSR set to: 14
  1444                           ;main.c: 53:     LATHbits.LATH3=0;
  1445   002362  9680               	bcf	128,3,c	;volatile
  1446   002364                     
  1447                           ; BSR set to: 14
  1448                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1449   002364  9688               	bcf	136,3,c	;volatile
  1450   002366                     
  1451                           ; BSR set to: 14
  1452                           ;main.c: 57:     LATHbits.LATH0=0;
  1453   002366  9080               	bcf	128,0,c	;volatile
  1454   002368                     
  1455                           ; BSR set to: 14
  1456                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1457   002368  9088               	bcf	136,0,c	;volatile
  1458   00236A                     
  1459                           ; BSR set to: 14
  1460                           ;main.c: 61:     LATFbits.LATF0=0;
  1461   00236A  907E               	bcf	126,0,c	;volatile
  1462   00236C                     
  1463                           ; BSR set to: 14
  1464                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1465   00236C  9086               	bcf	134,0,c	;volatile
  1466   00236E                     
  1467                           ; BSR set to: 14
  1468                           ;main.c: 65:     LATDbits.LATD4=0;
  1469   00236E  987C               	bcf	124,4,c	;volatile
  1470   002370                     
  1471                           ; BSR set to: 14
  1472                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1473   002370  9884               	bcf	132,4,c	;volatile
  1474   002372                     
  1475                           ; BSR set to: 14
  1476                           ;main.c: 69:     LATDbits.LATD3=0;
  1477   002372  967C               	bcf	124,3,c	;volatile
  1478   002374                     
  1479                           ; BSR set to: 14
  1480                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1481   002374  9684               	bcf	132,3,c	;volatile
  1482   002376                     
  1483                           ; BSR set to: 14
  1484                           ;main.c: 75:     motorL.power=0;
  1485   002376  0E00               	movlw	0
  1486   002378  0101               	movlb	1	; () banked
  1487   00237A  6FC7               	movwf	_motorL& (0+255),b
  1488   00237C                     
  1489                           ; BSR set to: 1
  1490                           ;main.c: 76:     motorL.direction=1;
  1491   00237C  0E01               	movlw	1
  1492   00237E  6FC8               	movwf	(_motorL+1)& (0+255),b
  1493   002380                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 77:     motorL.brakemode=1;
  1496   002380  0E01               	movlw	1
  1497   002382  6FC9               	movwf	(_motorL+2)& (0+255),b
  1498   002384                     
  1499                           ; BSR set to: 1
  1500                           ;main.c: 78:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1501   002384  0EAA               	movlw	170
  1502   002386  6FCC               	movwf	(_motorL+5)& (0+255),b
  1503   002388  0E0F               	movlw	15
  1504   00238A  6FCD               	movwf	(_motorL+6)& (0+255),b
  1505   00238C                     
  1506                           ; BSR set to: 1
  1507                           ;main.c: 79:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1508   00238C  0EA6               	movlw	166
  1509   00238E  6FCE               	movwf	(_motorL+7)& (0+255),b
  1510   002390  0E0F               	movlw	15
  1511   002392  6FCF               	movwf	(_motorL+8)& (0+255),b
  1512   002394                     
  1513                           ; BSR set to: 1
  1514                           ;main.c: 80:     motorL.PWMperiod=200;
  1515   002394  0E00               	movlw	0
  1516   002396  6FCB               	movwf	(_motorL+4)& (0+255),b
  1517   002398  0EC8               	movlw	200
  1518   00239A  6FCA               	movwf	(_motorL+3)& (0+255),b
  1519   00239C                     
  1520                           ; BSR set to: 1
  1521                           ;main.c: 81:     motorR.power=0;
  1522   00239C  0E00               	movlw	0
  1523   00239E  6FBE               	movwf	_motorR& (0+255),b
  1524   0023A0                     
  1525                           ; BSR set to: 1
  1526                           ;main.c: 82:     motorR.direction=1;
  1527   0023A0  0E01               	movlw	1
  1528   0023A2  6FBF               	movwf	(_motorR+1)& (0+255),b
  1529   0023A4                     
  1530                           ; BSR set to: 1
  1531                           ;main.c: 83:     motorR.brakemode=1;
  1532   0023A4  0E01               	movlw	1
  1533   0023A6  6FC0               	movwf	(_motorR+2)& (0+255),b
  1534   0023A8                     
  1535                           ; BSR set to: 1
  1536                           ;main.c: 84:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1537   0023A8  0E25               	movlw	37
  1538   0023AA  6FC3               	movwf	(_motorR+5)& (0+255),b
  1539   0023AC  0E0F               	movlw	15
  1540   0023AE  6FC4               	movwf	(_motorR+6)& (0+255),b
  1541   0023B0                     
  1542                           ; BSR set to: 1
  1543                           ;main.c: 85:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1544   0023B0  0E21               	movlw	33
  1545   0023B2  6FC5               	movwf	(_motorR+7)& (0+255),b
  1546   0023B4  0E0F               	movlw	15
  1547   0023B6  6FC6               	movwf	(_motorR+8)& (0+255),b
  1548   0023B8                     
  1549                           ; BSR set to: 1
  1550                           ;main.c: 86:     motorR.PWMperiod=200;
  1551   0023B8  0E00               	movlw	0
  1552   0023BA  6FC2               	movwf	(_motorR+4)& (0+255),b
  1553   0023BC  0EC8               	movlw	200
  1554   0023BE  6FC1               	movwf	(_motorR+3)& (0+255),b
  1555   0023C0                     
  1556                           ; BSR set to: 1
  1557                           ;main.c: 88:     int consecuitive=0;
  1558   0023C0  0E00               	movlw	0
  1559   0023C2  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1560   0023C4  0E00               	movlw	0
  1561   0023C6  6F6C               	movwf	main@consecuitive& (0+255),b
  1562   0023C8                     
  1563                           ; BSR set to: 1
  1564                           ;main.c: 89:     int prev_colour =0;
  1565   0023C8  0E00               	movlw	0
  1566   0023CA  6F71               	movwf	(main@prev_colour+1)& (0+255),b
  1567   0023CC  0E00               	movlw	0
  1568   0023CE  6F70               	movwf	main@prev_colour& (0+255),b
  1569   0023D0                     
  1570                           ; BSR set to: 1
  1571                           ;main.c: 90:     int run_flag=1;
  1572   0023D0  0E00               	movlw	0
  1573   0023D2  6F69               	movwf	(main@run_flag+1)& (0+255),b
  1574   0023D4  0E01               	movlw	1
  1575   0023D6  6F68               	movwf	main@run_flag& (0+255),b
  1576   0023D8                     
  1577                           ; BSR set to: 1
  1578                           ;main.c: 91:     move_count=-1;
  1579   0023D8  697E               	setf	_move_count& (0+255),b	;volatile
  1580   0023DA  697F               	setf	(_move_count+1)& (0+255),b	;volatile
  1581   0023DC                     
  1582                           ; BSR set to: 1
  1583                           ;main.c: 93:     turnCalibration(&motorL,&motorR);
  1584   0023DC  0EC7               	movlw	low _motorL
  1585   0023DE  6E20               	movwf	turnCalibration@mL^0,c
  1586   0023E0  0E01               	movlw	high _motorL
  1587   0023E2  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1588   0023E4  0EBE               	movlw	low _motorR
  1589   0023E6  6E22               	movwf	turnCalibration@mR^0,c
  1590   0023E8  0E01               	movlw	high _motorR
  1591   0023EA  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1592   0023EC  EC90  F021         	call	_turnCalibration	;wreg free
  1593   0023F0                     
  1594                           ;main.c: 95:     LATFbits.LATF0=0;
  1595   0023F0  907E               	bcf	126,0,c	;volatile
  1596   0023F2                     
  1597                           ;main.c: 96:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1598   0023F2  0E52               	movlw	82
  1599   0023F4  0100               	movlb	0	; () banked
  1600   0023F6  6FD0               	movwf	(??_main+1)& (0+255),b
  1601   0023F8  0E2B               	movlw	43
  1602   0023FA  6FCF               	movwf	??_main& (0+255),b
  1603   0023FC  0E00               	movlw	0
  1604   0023FE                     u6027:
  1605   0023FE  2EE8               	decfsz	wreg,f,c
  1606   002400  D7FE               	bra	u6027
  1607   002402  2FCF               	decfsz	??_main& (0+255),f,b
  1608   002404  D7FC               	bra	u6027
  1609   002406  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1610   002408  D7FA               	bra	u6027
  1611   00240A  F000               	nop	
  1612   00240C                     l387:
  1613   00240C  B48E               	btfsc	142,2,c	;volatile
  1614   00240E  EF0B  F012         	goto	u5811
  1615   002412  EF0D  F012         	goto	u5810
  1616   002416                     u5811:
  1617   002416  EF06  F012         	goto	l387
  1618   00241A                     u5810:
  1619   00241A                     
  1620                           ;main.c: 99:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1621   00241A  0E52               	movlw	82
  1622   00241C  0100               	movlb	0	; () banked
  1623   00241E  6FD0               	movwf	(??_main+1)& (0+255),b
  1624   002420  0E2B               	movlw	43
  1625   002422  6FCF               	movwf	??_main& (0+255),b
  1626   002424  0E00               	movlw	0
  1627   002426                     u6037:
  1628   002426  2EE8               	decfsz	wreg,f,c
  1629   002428  D7FE               	bra	u6037
  1630   00242A  2FCF               	decfsz	??_main& (0+255),f,b
  1631   00242C  D7FC               	bra	u6037
  1632   00242E  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1633   002430  D7FA               	bra	u6037
  1634   002432  F000               	nop	
  1635   002434                     
  1636                           ;main.c: 100:     T0CON0bits.T0EN=1;
  1637   002434  8ED5               	bsf	213,7,c	;volatile
  1638                           
  1639                           ;main.c: 101:     while (run_flag)
  1640   002436  EF8A  F014         	goto	l6013
  1641   00243A                     l5871:
  1642                           
  1643                           ; BSR set to: 1
  1644                           ;main.c: 102:     {;main.c: 103:         lost_count=0;
  1645   00243A  0E00               	movlw	0
  1646   00243C  6F6B               	movwf	(main@lost_count+1)& (0+255),b
  1647   00243E  0E00               	movlw	0
  1648   002440  6F6A               	movwf	main@lost_count& (0+255),b
  1649   002442                     
  1650                           ; BSR set to: 1
  1651                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1652   002442  0EC7               	movlw	low _motorL
  1653   002444  6E14               	movwf	fullSpeedAhead@mL^0,c
  1654   002446  0E01               	movlw	high _motorL
  1655   002448  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1656   00244A  0EBE               	movlw	low _motorR
  1657   00244C  6E16               	movwf	fullSpeedAhead@mR^0,c
  1658   00244E  0E01               	movlw	high _motorR
  1659   002450  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1660   002452  ECBC  F029         	call	_fullSpeedAhead	;wreg free
  1661   002456                     
  1662                           ;main.c: 106:         readColours(&vals);
  1663   002456  0ED0               	movlw	low _vals
  1664   002458  6E0C               	movwf	readColours@vals^0,c
  1665   00245A  0E01               	movlw	high _vals
  1666   00245C  6E0D               	movwf	(readColours@vals+1)^0,c
  1667   00245E  ECAC  F02B         	call	_readColours	;wreg free
  1668   002462                     
  1669                           ;main.c: 109:         colour_rel(&vals, &rel);
  1670   002462  0ED0               	movlw	low _vals
  1671   002464  6E4B               	movwf	colour_rel@vals^0,c
  1672   002466  0E01               	movlw	high _vals
  1673   002468  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1674   00246A  0EB2               	movlw	low _rel
  1675   00246C  6E4D               	movwf	colour_rel@rel^0,c
  1676   00246E  0E01               	movlw	high _rel
  1677   002470  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1678   002472  ECD8  F01A         	call	_colour_rel	;wreg free
  1679   002476                     
  1680                           ;main.c: 112:         if (vals.L>=500){
  1681   002476  0101               	movlb	1	; () banked
  1682   002478  BFD7               	btfsc	(_vals+7)& (0+255),7,b
  1683   00247A  EF48  F012         	goto	u5821
  1684   00247E  0EF4               	movlw	244
  1685   002480  5DD6               	subwf	(_vals+6)& (0+255),w,b
  1686   002482  0E01               	movlw	1
  1687   002484  59D7               	subwfb	(_vals+7)& (0+255),w,b
  1688   002486  A0D8               	btfss	status,0,c
  1689   002488  EF48  F012         	goto	u5821
  1690   00248C  EF4A  F012         	goto	u5820
  1691   002490                     u5821:
  1692   002490  EF4F  F014         	goto	l6007
  1693   002494                     u5820:
  1694   002494                     
  1695                           ; BSR set to: 1
  1696                           ;main.c: 113:             move_count++;
  1697   002494  4B7E               	infsnz	_move_count& (0+255),f,b	;volatile
  1698   002496  2B7F               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1699   002498                     
  1700                           ; BSR set to: 1
  1701                           ;main.c: 114:             getTMR0val();
  1702   002498  EC66  F030         	call	_getTMR0val	;wreg free
  1703   00249C                     
  1704                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1705   00249C  0EC7               	movlw	low _motorL
  1706   00249E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1707   0024A0  0E01               	movlw	high _motorL
  1708   0024A2  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1709   0024A4  0EBE               	movlw	low _motorR
  1710   0024A6  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1711   0024A8  0E01               	movlw	high _motorR
  1712   0024AA  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1713   0024AC  EC62  F02C         	call	_Forwardhalfblock	;wreg free
  1714   0024B0                     
  1715                           ;main.c: 118:             stop(&motorL, &motorR);
  1716   0024B0  0EC7               	movlw	low _motorL
  1717   0024B2  6E14               	movwf	stop@mL^0,c
  1718   0024B4  0E01               	movlw	high _motorL
  1719   0024B6  6E15               	movwf	(stop@mL+1)^0,c
  1720   0024B8  0EBE               	movlw	low _motorR
  1721   0024BA  6E16               	movwf	stop@mR^0,c
  1722   0024BC  0E01               	movlw	high _motorR
  1723   0024BE  6E17               	movwf	(stop@mR+1)^0,c
  1724   0024C0  EC90  F02A         	call	_stop	;wreg free
  1725   0024C4                     
  1726                           ;main.c: 119:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1727   0024C4  0E11               	movlw	17
  1728   0024C6  0100               	movlb	0	; () banked
  1729   0024C8  6FD0               	movwf	(??_main+1)& (0+255),b
  1730   0024CA  0E3C               	movlw	60
  1731   0024CC  6FCF               	movwf	??_main& (0+255),b
  1732   0024CE  0ECB               	movlw	203
  1733   0024D0                     u6047:
  1734   0024D0  2EE8               	decfsz	wreg,f,c
  1735   0024D2  D7FE               	bra	u6047
  1736   0024D4  2FCF               	decfsz	??_main& (0+255),f,b
  1737   0024D6  D7FC               	bra	u6047
  1738   0024D8  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1739   0024DA  D7FA               	bra	u6047
  1740                           
  1741                           ;main.c: 126:             while (consecuitive<3){
  1742   0024DC  EFAD  F012         	goto	l5905
  1743   0024E0                     l5891:
  1744                           
  1745                           ; BSR set to: 1
  1746                           ;main.c: 127:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1747   0024E0  0E05               	movlw	5
  1748   0024E2  0100               	movlb	0	; () banked
  1749   0024E4  6FD0               	movwf	(??_main+1)& (0+255),b
  1750   0024E6  0E0F               	movlw	15
  1751   0024E8  6FCF               	movwf	??_main& (0+255),b
  1752   0024EA  0EF1               	movlw	241
  1753   0024EC                     u6057:
  1754   0024EC  2EE8               	decfsz	wreg,f,c
  1755   0024EE  D7FE               	bra	u6057
  1756   0024F0  2FCF               	decfsz	??_main& (0+255),f,b
  1757   0024F2  D7FC               	bra	u6057
  1758   0024F4  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1759   0024F6  D7FA               	bra	u6057
  1760   0024F8                     
  1761                           ;main.c: 128:                 int colour = Colour_decider(&vals, &rel);
  1762   0024F8  0ED0               	movlw	low _vals
  1763   0024FA  6E4B               	movwf	Colour_decider@vals^0,c
  1764   0024FC  0E01               	movlw	high _vals
  1765   0024FE  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1766   002500  0EB2               	movlw	low _rel
  1767   002502  6E4D               	movwf	Colour_decider@rel^0,c
  1768   002504  0E01               	movlw	high _rel
  1769   002506  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1770   002508  EC29  F007         	call	_Colour_decider	;wreg free
  1771   00250C  C04B  F16E         	movff	?_Colour_decider,main@colour
  1772   002510  C04C  F16F         	movff	?_Colour_decider+1,main@colour+1
  1773   002514                     
  1774                           ;main.c: 129:                 if (colour==prev_colour){
  1775   002514  0101               	movlb	1	; () banked
  1776   002516  5170               	movf	main@prev_colour& (0+255),w,b
  1777   002518  196E               	xorwf	main@colour& (0+255),w,b
  1778   00251A  E107               	bnz	u5831
  1779   00251C  5171               	movf	(main@prev_colour+1)& (0+255),w,b
  1780   00251E  196F               	xorwf	(main@colour+1)& (0+255),w,b
  1781   002520  A4D8               	btfss	status,2,c
  1782   002522  EF95  F012         	goto	u5831
  1783   002526  EF97  F012         	goto	u5830
  1784   00252A                     u5831:
  1785   00252A  EF9B  F012         	goto	l5899
  1786   00252E                     u5830:
  1787   00252E                     
  1788                           ; BSR set to: 1
  1789                           ;main.c: 130:                     consecuitive++;
  1790   00252E  4B6C               	infsnz	main@consecuitive& (0+255),f,b
  1791   002530  2B6D               	incf	(main@consecuitive+1)& (0+255),f,b
  1792                           
  1793                           ;main.c: 131:                 }
  1794   002532  EF9F  F012         	goto	l5901
  1795   002536                     l5899:
  1796                           
  1797                           ; BSR set to: 1
  1798                           ;main.c: 133:                     consecuitive=0;
  1799   002536  0E00               	movlw	0
  1800   002538  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1801   00253A  0E00               	movlw	0
  1802   00253C  6F6C               	movwf	main@consecuitive& (0+255),b
  1803   00253E                     l5901:
  1804                           
  1805                           ; BSR set to: 1
  1806                           ;main.c: 135:                 prev_colour=colour;
  1807   00253E  C16E  F170         	movff	main@colour,main@prev_colour
  1808   002542  C16F  F171         	movff	main@colour+1,main@prev_colour+1
  1809   002546                     
  1810                           ; BSR set to: 1
  1811                           ;main.c: 136:                 RetryMove(&motorL, &motorR);
  1812   002546  0EC7               	movlw	low _motorL
  1813   002548  6E1A               	movwf	RetryMove@mL^0,c
  1814   00254A  0E01               	movlw	high _motorL
  1815   00254C  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1816   00254E  0EBE               	movlw	low _motorR
  1817   002550  6E1C               	movwf	RetryMove@mR^0,c
  1818   002552  0E01               	movlw	high _motorR
  1819   002554  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1820   002556  EC4F  F02A         	call	_RetryMove	;wreg free
  1821   00255A                     l5905:
  1822                           
  1823                           ;main.c: 126:             while (consecuitive<3){
  1824   00255A  0101               	movlb	1	; () banked
  1825   00255C  BF6D               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1826   00255E  EFBA  F012         	goto	u5841
  1827   002562  516D               	movf	(main@consecuitive+1)& (0+255),w,b
  1828   002564  E109               	bnz	u5840
  1829   002566  0E03               	movlw	3
  1830   002568  5D6C               	subwf	main@consecuitive& (0+255),w,b
  1831   00256A  A0D8               	btfss	status,0,c
  1832   00256C  EFBA  F012         	goto	u5841
  1833   002570  EFBC  F012         	goto	u5840
  1834   002574                     u5841:
  1835   002574  EF70  F012         	goto	l5891
  1836   002578                     u5840:
  1837   002578                     
  1838                           ; BSR set to: 1
  1839                           ;main.c: 138:             consecuitive=0;
  1840   002578  0E00               	movlw	0
  1841   00257A  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1842   00257C  0E00               	movlw	0
  1843   00257E  6F6C               	movwf	main@consecuitive& (0+255),b
  1844   002580                     
  1845                           ; BSR set to: 1
  1846                           ;main.c: 139:             int temp=TMR0L;
  1847   002580  CFD3 F164          	movff	4051,main@temp	;volatile
  1848   002584  6B65               	clrf	(main@temp+1)& (0+255),b
  1849   002586                     
  1850                           ; BSR set to: 1
  1851                           ;main.c: 140:             sprintf(buf,"red=%d green=%d blue=%d colour=%d \r\n",vals.R, v
      +                          als.G,vals.B,TMR0H);
  1852   002586  0E00               	movlw	low main@buf
  1853   002588  0100               	movlb	0	; () banked
  1854   00258A  6FB0               	movwf	sprintf@s& (0+255),b
  1855   00258C  0E01               	movlw	high main@buf
  1856   00258E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1857   002590  0E01               	movlw	low STR_1
  1858   002592  6FB2               	movwf	sprintf@fmt& (0+255),b
  1859   002594  0E0E               	movlw	high STR_1
  1860   002596  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1861   002598  C1D0  F0B4         	movff	_vals,?_sprintf+4
  1862   00259C  C1D1  F0B5         	movff	_vals+1,?_sprintf+5
  1863   0025A0  C1D2  F0B6         	movff	_vals+2,?_sprintf+6
  1864   0025A4  C1D3  F0B7         	movff	_vals+3,?_sprintf+7
  1865   0025A8  C1D4  F0B8         	movff	_vals+4,?_sprintf+8
  1866   0025AC  C1D5  F0B9         	movff	_vals+5,?_sprintf+9
  1867   0025B0  CFD4 F0BA          	movff	4052,?_sprintf+10	;volatile
  1868   0025B4  6BBB               	clrf	(?_sprintf+11)& (0+255),b
  1869   0025B6  ECBA  F02C         	call	_sprintf	;wreg free
  1870   0025BA                     
  1871                           ;main.c: 143:             sendStringSerial4(buf);
  1872   0025BA  0E00               	movlw	low main@buf
  1873   0025BC  6E02               	movwf	sendStringSerial4@string^0,c
  1874   0025BE  0E01               	movlw	high main@buf
  1875   0025C0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1876   0025C2  EC25  F030         	call	_sendStringSerial4	;wreg free
  1877   0025C6                     
  1878                           ;main.c: 145:             if (prev_colour==1){
  1879   0025C6  0101               	movlb	1	; () banked
  1880   0025C8  0570               	decf	main@prev_colour& (0+255),w,b
  1881   0025CA  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1882   0025CC  A4D8               	btfss	status,2,c
  1883   0025CE  EFEB  F012         	goto	u5851
  1884   0025D2  EFED  F012         	goto	u5850
  1885   0025D6                     u5851:
  1886   0025D6  EF06  F013         	goto	l5925
  1887   0025DA                     u5850:
  1888   0025DA                     
  1889                           ; BSR set to: 1
  1890                           ;main.c: 146:                 RedMove(&motorL, &motorR);
  1891   0025DA  0EC7               	movlw	low _motorL
  1892   0025DC  6E20               	movwf	RedMove@mL^0,c
  1893   0025DE  0E01               	movlw	high _motorL
  1894   0025E0  6E21               	movwf	(RedMove@mL+1)^0,c
  1895   0025E2  0EBE               	movlw	low _motorR
  1896   0025E4  6E22               	movwf	RedMove@mR^0,c
  1897   0025E6  0E01               	movlw	high _motorR
  1898   0025E8  6E23               	movwf	(RedMove@mR+1)^0,c
  1899   0025EA  EC94  F02F         	call	_RedMove	;wreg free
  1900   0025EE                     
  1901                           ;main.c: 147:                 TMR0H=0;
  1902   0025EE  0E00               	movlw	0
  1903   0025F0  6ED4               	movwf	212,c	;volatile
  1904   0025F2                     
  1905                           ;main.c: 148:                 TMR0L=0;
  1906   0025F2  0E00               	movlw	0
  1907   0025F4  6ED3               	movwf	211,c	;volatile
  1908   0025F6                     
  1909                           ;main.c: 149:                 WayBack[move_count]=1;
  1910   0025F6  0E80               	movlw	low _WayBack
  1911   0025F8  0101               	movlb	1	; () banked
  1912   0025FA  257E               	addwf	_move_count& (0+255),w,b	;volatile
  1913   0025FC  6ED9               	movwf	fsr2l,c
  1914   0025FE  0E01               	movlw	high _WayBack
  1915   002600  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1916   002602  6EDA               	movwf	fsr2h,c
  1917   002604  0E01               	movlw	1
  1918   002606  6EDF               	movwf	indf2,c
  1919                           
  1920                           ;main.c: 150:             }
  1921   002608  EF8A  F014         	goto	l6013
  1922   00260C                     l5925:
  1923                           
  1924                           ; BSR set to: 1
  1925   00260C  0E02               	movlw	2
  1926   00260E  1970               	xorwf	main@prev_colour& (0+255),w,b
  1927   002610  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1928   002612  A4D8               	btfss	status,2,c
  1929   002614  EF0E  F013         	goto	u5861
  1930   002618  EF10  F013         	goto	u5860
  1931   00261C                     u5861:
  1932   00261C  EF29  F013         	goto	l5935
  1933   002620                     u5860:
  1934   002620                     
  1935                           ; BSR set to: 1
  1936                           ;main.c: 152:                 OrangeMove(&motorL, &motorR);
  1937   002620  0EC7               	movlw	low _motorL
  1938   002622  6E20               	movwf	OrangeMove@mL^0,c
  1939   002624  0E01               	movlw	high _motorL
  1940   002626  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1941   002628  0EBE               	movlw	low _motorR
  1942   00262A  6E22               	movwf	OrangeMove@mR^0,c
  1943   00262C  0E01               	movlw	high _motorR
  1944   00262E  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1945   002630  ECE3  F02C         	call	_OrangeMove	;wreg free
  1946   002634                     
  1947                           ;main.c: 153:                 TMR0H=0;
  1948   002634  0E00               	movlw	0
  1949   002636  6ED4               	movwf	212,c	;volatile
  1950   002638                     
  1951                           ;main.c: 154:                 TMR0L=0;
  1952   002638  0E00               	movlw	0
  1953   00263A  6ED3               	movwf	211,c	;volatile
  1954   00263C                     
  1955                           ;main.c: 155:                 WayBack[move_count]=2;
  1956   00263C  0E80               	movlw	low _WayBack
  1957   00263E  0101               	movlb	1	; () banked
  1958   002640  257E               	addwf	_move_count& (0+255),w,b	;volatile
  1959   002642  6ED9               	movwf	fsr2l,c
  1960   002644  0E01               	movlw	high _WayBack
  1961   002646  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1962   002648  6EDA               	movwf	fsr2h,c
  1963   00264A  0E02               	movlw	2
  1964   00264C  6EDF               	movwf	indf2,c
  1965                           
  1966                           ;main.c: 156:             }
  1967   00264E  EF8A  F014         	goto	l6013
  1968   002652                     l5935:
  1969                           
  1970                           ; BSR set to: 1
  1971   002652  0E03               	movlw	3
  1972   002654  1970               	xorwf	main@prev_colour& (0+255),w,b
  1973   002656  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1974   002658  A4D8               	btfss	status,2,c
  1975   00265A  EF31  F013         	goto	u5871
  1976   00265E  EF33  F013         	goto	u5870
  1977   002662                     u5871:
  1978   002662  EF4C  F013         	goto	l5945
  1979   002666                     u5870:
  1980   002666                     
  1981                           ; BSR set to: 1
  1982                           ;main.c: 158:                 YellowMove(&motorL, &motorR);
  1983   002666  0EC7               	movlw	low _motorL
  1984   002668  6E20               	movwf	YellowMove@mL^0,c
  1985   00266A  0E01               	movlw	high _motorL
  1986   00266C  6E21               	movwf	(YellowMove@mL+1)^0,c
  1987   00266E  0EBE               	movlw	low _motorR
  1988   002670  6E22               	movwf	YellowMove@mR^0,c
  1989   002672  0E01               	movlw	high _motorR
  1990   002674  6E23               	movwf	(YellowMove@mR+1)^0,c
  1991   002676  EC5E  F02D         	call	_YellowMove	;wreg free
  1992   00267A                     
  1993                           ;main.c: 159:                 TMR0H=0;
  1994   00267A  0E00               	movlw	0
  1995   00267C  6ED4               	movwf	212,c	;volatile
  1996   00267E                     
  1997                           ;main.c: 160:                 TMR0L=0;
  1998   00267E  0E00               	movlw	0
  1999   002680  6ED3               	movwf	211,c	;volatile
  2000   002682                     
  2001                           ;main.c: 161:                 WayBack[move_count]=3;
  2002   002682  0E80               	movlw	low _WayBack
  2003   002684  0101               	movlb	1	; () banked
  2004   002686  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2005   002688  6ED9               	movwf	fsr2l,c
  2006   00268A  0E01               	movlw	high _WayBack
  2007   00268C  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2008   00268E  6EDA               	movwf	fsr2h,c
  2009   002690  0E03               	movlw	3
  2010   002692  6EDF               	movwf	indf2,c
  2011                           
  2012                           ;main.c: 162:             }
  2013   002694  EF8A  F014         	goto	l6013
  2014   002698                     l5945:
  2015                           
  2016                           ; BSR set to: 1
  2017   002698  0E04               	movlw	4
  2018   00269A  1970               	xorwf	main@prev_colour& (0+255),w,b
  2019   00269C  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2020   00269E  A4D8               	btfss	status,2,c
  2021   0026A0  EF54  F013         	goto	u5881
  2022   0026A4  EF56  F013         	goto	u5880
  2023   0026A8                     u5881:
  2024   0026A8  EF6F  F013         	goto	l5955
  2025   0026AC                     u5880:
  2026   0026AC                     
  2027                           ; BSR set to: 1
  2028                           ;main.c: 164:                 BlueMove(&motorL, &motorR);
  2029   0026AC  0EC7               	movlw	low _motorL
  2030   0026AE  6E20               	movwf	BlueMove@mL^0,c
  2031   0026B0  0E01               	movlw	high _motorL
  2032   0026B2  6E21               	movwf	(BlueMove@mL+1)^0,c
  2033   0026B4  0EBE               	movlw	low _motorR
  2034   0026B6  6E22               	movwf	BlueMove@mR^0,c
  2035   0026B8  0E01               	movlw	high _motorR
  2036   0026BA  6E23               	movwf	(BlueMove@mR+1)^0,c
  2037   0026BC  EC79  F02B         	call	_BlueMove	;wreg free
  2038   0026C0                     
  2039                           ;main.c: 165:                 TMR0H=0;
  2040   0026C0  0E00               	movlw	0
  2041   0026C2  6ED4               	movwf	212,c	;volatile
  2042   0026C4                     
  2043                           ;main.c: 166:                 TMR0L=0;
  2044   0026C4  0E00               	movlw	0
  2045   0026C6  6ED3               	movwf	211,c	;volatile
  2046   0026C8                     
  2047                           ;main.c: 167:                 WayBack[move_count]=4;
  2048   0026C8  0E80               	movlw	low _WayBack
  2049   0026CA  0101               	movlb	1	; () banked
  2050   0026CC  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2051   0026CE  6ED9               	movwf	fsr2l,c
  2052   0026D0  0E01               	movlw	high _WayBack
  2053   0026D2  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2054   0026D4  6EDA               	movwf	fsr2h,c
  2055   0026D6  0E04               	movlw	4
  2056   0026D8  6EDF               	movwf	indf2,c
  2057                           
  2058                           ;main.c: 168:             }
  2059   0026DA  EF8A  F014         	goto	l6013
  2060   0026DE                     l5955:
  2061                           
  2062                           ; BSR set to: 1
  2063   0026DE  0E05               	movlw	5
  2064   0026E0  1970               	xorwf	main@prev_colour& (0+255),w,b
  2065   0026E2  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2066   0026E4  A4D8               	btfss	status,2,c
  2067   0026E6  EF77  F013         	goto	u5891
  2068   0026EA  EF79  F013         	goto	u5890
  2069   0026EE                     u5891:
  2070   0026EE  EF92  F013         	goto	l5965
  2071   0026F2                     u5890:
  2072   0026F2                     
  2073                           ; BSR set to: 1
  2074                           ;main.c: 170:                 GreenMove(&motorL, &motorR);
  2075   0026F2  0EC7               	movlw	low _motorL
  2076   0026F4  6E20               	movwf	GreenMove@mL^0,c
  2077   0026F6  0E01               	movlw	high _motorL
  2078   0026F8  6E21               	movwf	(GreenMove@mL+1)^0,c
  2079   0026FA  0EBE               	movlw	low _motorR
  2080   0026FC  6E22               	movwf	GreenMove@mR^0,c
  2081   0026FE  0E01               	movlw	high _motorR
  2082   002700  6E23               	movwf	(GreenMove@mR+1)^0,c
  2083   002702  ECB3  F02F         	call	_GreenMove	;wreg free
  2084   002706                     
  2085                           ;main.c: 171:                 TMR0H=0;
  2086   002706  0E00               	movlw	0
  2087   002708  6ED4               	movwf	212,c	;volatile
  2088   00270A                     
  2089                           ;main.c: 172:                 TMR0L=0;
  2090   00270A  0E00               	movlw	0
  2091   00270C  6ED3               	movwf	211,c	;volatile
  2092   00270E                     
  2093                           ;main.c: 173:                 WayBack[move_count]=5;
  2094   00270E  0E80               	movlw	low _WayBack
  2095   002710  0101               	movlb	1	; () banked
  2096   002712  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2097   002714  6ED9               	movwf	fsr2l,c
  2098   002716  0E01               	movlw	high _WayBack
  2099   002718  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2100   00271A  6EDA               	movwf	fsr2h,c
  2101   00271C  0E05               	movlw	5
  2102   00271E  6EDF               	movwf	indf2,c
  2103                           
  2104                           ;main.c: 174:             }
  2105   002720  EF8A  F014         	goto	l6013
  2106   002724                     l5965:
  2107                           
  2108                           ; BSR set to: 1
  2109   002724  0E06               	movlw	6
  2110   002726  1970               	xorwf	main@prev_colour& (0+255),w,b
  2111   002728  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2112   00272A  A4D8               	btfss	status,2,c
  2113   00272C  EF9A  F013         	goto	u5901
  2114   002730  EF9C  F013         	goto	u5900
  2115   002734                     u5901:
  2116   002734  EFB5  F013         	goto	l5975
  2117   002738                     u5900:
  2118   002738                     
  2119                           ; BSR set to: 1
  2120                           ;main.c: 176:                 LightBlueMove(&motorL, &motorR);
  2121   002738  0EC7               	movlw	low _motorL
  2122   00273A  6E20               	movwf	LightBlueMove@mL^0,c
  2123   00273C  0E01               	movlw	high _motorL
  2124   00273E  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2125   002740  0EBE               	movlw	low _motorR
  2126   002742  6E22               	movwf	LightBlueMove@mR^0,c
  2127   002744  0E01               	movlw	high _motorR
  2128   002746  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2129   002748  EC0C  F02D         	call	_LightBlueMove	;wreg free
  2130   00274C                     
  2131                           ;main.c: 177:                 TMR0H=0;
  2132   00274C  0E00               	movlw	0
  2133   00274E  6ED4               	movwf	212,c	;volatile
  2134   002750                     
  2135                           ;main.c: 178:                 TMR0L=0;
  2136   002750  0E00               	movlw	0
  2137   002752  6ED3               	movwf	211,c	;volatile
  2138   002754                     
  2139                           ;main.c: 179:                 WayBack[move_count]=6;
  2140   002754  0E80               	movlw	low _WayBack
  2141   002756  0101               	movlb	1	; () banked
  2142   002758  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2143   00275A  6ED9               	movwf	fsr2l,c
  2144   00275C  0E01               	movlw	high _WayBack
  2145   00275E  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2146   002760  6EDA               	movwf	fsr2h,c
  2147   002762  0E06               	movlw	6
  2148   002764  6EDF               	movwf	indf2,c
  2149                           
  2150                           ;main.c: 180:             }
  2151   002766  EF8A  F014         	goto	l6013
  2152   00276A                     l5975:
  2153                           
  2154                           ; BSR set to: 1
  2155   00276A  0E07               	movlw	7
  2156   00276C  1970               	xorwf	main@prev_colour& (0+255),w,b
  2157   00276E  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2158   002770  A4D8               	btfss	status,2,c
  2159   002772  EFBD  F013         	goto	u5911
  2160   002776  EFBF  F013         	goto	u5910
  2161   00277A                     u5911:
  2162   00277A  EFD8  F013         	goto	l5985
  2163   00277E                     u5910:
  2164   00277E                     
  2165                           ; BSR set to: 1
  2166                           ;main.c: 182:                 PinkMove(&motorL, &motorR);
  2167   00277E  0EC7               	movlw	low _motorL
  2168   002780  6E20               	movwf	PinkMove@mL^0,c
  2169   002782  0E01               	movlw	high _motorL
  2170   002784  6E21               	movwf	(PinkMove@mL+1)^0,c
  2171   002786  0EBE               	movlw	low _motorR
  2172   002788  6E22               	movwf	PinkMove@mR^0,c
  2173   00278A  0E01               	movlw	high _motorR
  2174   00278C  6E23               	movwf	(PinkMove@mR+1)^0,c
  2175   00278E  EC87  F02D         	call	_PinkMove	;wreg free
  2176   002792                     
  2177                           ;main.c: 183:                 TMR0H=0;
  2178   002792  0E00               	movlw	0
  2179   002794  6ED4               	movwf	212,c	;volatile
  2180   002796                     
  2181                           ;main.c: 184:                 TMR0L=0;
  2182   002796  0E00               	movlw	0
  2183   002798  6ED3               	movwf	211,c	;volatile
  2184   00279A                     
  2185                           ;main.c: 185:                 WayBack[move_count]=7;
  2186   00279A  0E80               	movlw	low _WayBack
  2187   00279C  0101               	movlb	1	; () banked
  2188   00279E  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2189   0027A0  6ED9               	movwf	fsr2l,c
  2190   0027A2  0E01               	movlw	high _WayBack
  2191   0027A4  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2192   0027A6  6EDA               	movwf	fsr2h,c
  2193   0027A8  0E07               	movlw	7
  2194   0027AA  6EDF               	movwf	indf2,c
  2195                           
  2196                           ;main.c: 186:             }
  2197   0027AC  EF8A  F014         	goto	l6013
  2198   0027B0                     l5985:
  2199                           
  2200                           ; BSR set to: 1
  2201   0027B0  0E0A               	movlw	10
  2202   0027B2  1970               	xorwf	main@prev_colour& (0+255),w,b
  2203   0027B4  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2204   0027B6  A4D8               	btfss	status,2,c
  2205   0027B8  EFE0  F013         	goto	u5921
  2206   0027BC  EFE2  F013         	goto	u5920
  2207   0027C0                     u5921:
  2208   0027C0  EF1E  F014         	goto	l5999
  2209   0027C4                     u5920:
  2210   0027C4                     
  2211                           ; BSR set to: 1
  2212                           ;main.c: 188:                 lost_count++;
  2213   0027C4  4B6A               	infsnz	main@lost_count& (0+255),f,b
  2214   0027C6  2B6B               	incf	(main@lost_count+1)& (0+255),f,b
  2215   0027C8                     
  2216                           ; BSR set to: 1
  2217                           ;main.c: 189:                 if (lost_count==4){
  2218   0027C8  0E04               	movlw	4
  2219   0027CA  196A               	xorwf	main@lost_count& (0+255),w,b
  2220   0027CC  116B               	iorwf	(main@lost_count+1)& (0+255),w,b
  2221   0027CE  A4D8               	btfss	status,2,c
  2222   0027D0  EFEC  F013         	goto	u5931
  2223   0027D4  EFEE  F013         	goto	u5930
  2224   0027D8                     u5931:
  2225   0027D8  EF12  F014         	goto	l5997
  2226   0027DC                     u5930:
  2227   0027DC                     
  2228                           ; BSR set to: 1
  2229                           ;main.c: 190:                     BlueMove(&motorL, &motorR);
  2230   0027DC  0EC7               	movlw	low _motorL
  2231   0027DE  6E20               	movwf	BlueMove@mL^0,c
  2232   0027E0  0E01               	movlw	high _motorL
  2233   0027E2  6E21               	movwf	(BlueMove@mL+1)^0,c
  2234   0027E4  0EBE               	movlw	low _motorR
  2235   0027E6  6E22               	movwf	BlueMove@mR^0,c
  2236   0027E8  0E01               	movlw	high _motorR
  2237   0027EA  6E23               	movwf	(BlueMove@mR+1)^0,c
  2238   0027EC  EC79  F02B         	call	_BlueMove	;wreg free
  2239   0027F0                     
  2240                           ;main.c: 191:                     T0CON0bits.T0EN=0;
  2241   0027F0  9ED5               	bcf	213,7,c	;volatile
  2242                           
  2243                           ;main.c: 192:                     go_Home(WayBack, Time_forward);
  2244   0027F2  0E80               	movlw	low _WayBack
  2245   0027F4  6E24               	movwf	go_Home@WayBack^0,c
  2246   0027F6  0E01               	movlw	high _WayBack
  2247   0027F8  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2248   0027FA  0E3C               	movlw	low _Time_forward
  2249   0027FC  6E26               	movwf	go_Home@Time_forward^0,c
  2250   0027FE  0E02               	movlw	high _Time_forward
  2251   002800  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2252   002802  ECF2  F01D         	call	_go_Home	;wreg free
  2253                           
  2254                           ;main.c: 193:                     stop(&motorL, &motorR);
  2255   002806  0EC7               	movlw	low _motorL
  2256   002808  6E14               	movwf	stop@mL^0,c
  2257   00280A  0E01               	movlw	high _motorL
  2258   00280C  6E15               	movwf	(stop@mL+1)^0,c
  2259   00280E  0EBE               	movlw	low _motorR
  2260   002810  6E16               	movwf	stop@mR^0,c
  2261   002812  0E01               	movlw	high _motorR
  2262   002814  6E17               	movwf	(stop@mR+1)^0,c
  2263   002816  EC90  F02A         	call	_stop	;wreg free
  2264   00281A                     
  2265                           ;main.c: 194:                     run_flag=0;
  2266   00281A  0E00               	movlw	0
  2267   00281C  0101               	movlb	1	; () banked
  2268   00281E  6F69               	movwf	(main@run_flag+1)& (0+255),b
  2269   002820  0E00               	movlw	0
  2270   002822  6F68               	movwf	main@run_flag& (0+255),b
  2271   002824                     l5997:
  2272                           
  2273                           ; BSR set to: 1
  2274                           ;main.c: 196:                 RetryMove(&motorL, &motorR);
  2275   002824  0EC7               	movlw	low _motorL
  2276   002826  6E1A               	movwf	RetryMove@mL^0,c
  2277   002828  0E01               	movlw	high _motorL
  2278   00282A  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2279   00282C  0EBE               	movlw	low _motorR
  2280   00282E  6E1C               	movwf	RetryMove@mR^0,c
  2281   002830  0E01               	movlw	high _motorR
  2282   002832  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2283   002834  EC4F  F02A         	call	_RetryMove	;wreg free
  2284                           
  2285                           ;main.c: 197:             }
  2286   002838  EF8A  F014         	goto	l6013
  2287   00283C                     l5999:
  2288                           
  2289                           ; BSR set to: 1
  2290   00283C  5170               	movf	main@prev_colour& (0+255),w,b
  2291   00283E  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2292   002840  A4D8               	btfss	status,2,c
  2293   002842  EF25  F014         	goto	u5941
  2294   002846  EF27  F014         	goto	u5940
  2295   00284A                     u5941:
  2296   00284A  EF4D  F014         	goto	l409
  2297   00284E                     u5940:
  2298   00284E                     
  2299                           ; BSR set to: 1
  2300                           ;main.c: 199:                 BlueMove(&motorL, &motorR);
  2301   00284E  0EC7               	movlw	low _motorL
  2302   002850  6E20               	movwf	BlueMove@mL^0,c
  2303   002852  0E01               	movlw	high _motorL
  2304   002854  6E21               	movwf	(BlueMove@mL+1)^0,c
  2305   002856  0EBE               	movlw	low _motorR
  2306   002858  6E22               	movwf	BlueMove@mR^0,c
  2307   00285A  0E01               	movlw	high _motorR
  2308   00285C  6E23               	movwf	(BlueMove@mR+1)^0,c
  2309   00285E  EC79  F02B         	call	_BlueMove	;wreg free
  2310   002862                     
  2311                           ;main.c: 200:                 T0CON0bits.T0EN=0;
  2312   002862  9ED5               	bcf	213,7,c	;volatile
  2313                           
  2314                           ;main.c: 201:                 go_Home(WayBack, Time_forward);
  2315   002864  0E80               	movlw	low _WayBack
  2316   002866  6E24               	movwf	go_Home@WayBack^0,c
  2317   002868  0E01               	movlw	high _WayBack
  2318   00286A  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2319   00286C  0E3C               	movlw	low _Time_forward
  2320   00286E  6E26               	movwf	go_Home@Time_forward^0,c
  2321   002870  0E02               	movlw	high _Time_forward
  2322   002872  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2323   002874  ECF2  F01D         	call	_go_Home	;wreg free
  2324                           
  2325                           ;main.c: 202:                 stop(&motorL, &motorR);
  2326   002878  0EC7               	movlw	low _motorL
  2327   00287A  6E14               	movwf	stop@mL^0,c
  2328   00287C  0E01               	movlw	high _motorL
  2329   00287E  6E15               	movwf	(stop@mL+1)^0,c
  2330   002880  0EBE               	movlw	low _motorR
  2331   002882  6E16               	movwf	stop@mR^0,c
  2332   002884  0E01               	movlw	high _motorR
  2333   002886  6E17               	movwf	(stop@mR+1)^0,c
  2334   002888  EC90  F02A         	call	_stop	;wreg free
  2335   00288C                     
  2336                           ;main.c: 203:                 run_flag=0;
  2337   00288C  0E00               	movlw	0
  2338   00288E  0101               	movlb	1	; () banked
  2339   002890  6F69               	movwf	(main@run_flag+1)& (0+255),b
  2340   002892  0E00               	movlw	0
  2341   002894  6F68               	movwf	main@run_flag& (0+255),b
  2342   002896  EF8A  F014         	goto	l6013
  2343   00289A                     l409:
  2344                           
  2345                           ; BSR set to: 1
  2346   00289A  EF8A  F014         	goto	l6013
  2347   00289E                     l6007:
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;main.c: 206:                 int colour = Colour_decider(&vals, &rel);
  2351   00289E  0ED0               	movlw	low _vals
  2352   0028A0  6E4B               	movwf	Colour_decider@vals^0,c
  2353   0028A2  0E01               	movlw	high _vals
  2354   0028A4  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  2355   0028A6  0EB2               	movlw	low _rel
  2356   0028A8  6E4D               	movwf	Colour_decider@rel^0,c
  2357   0028AA  0E01               	movlw	high _rel
  2358   0028AC  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  2359   0028AE  EC29  F007         	call	_Colour_decider	;wreg free
  2360   0028B2  C04B  F166         	movff	?_Colour_decider,main@colour_1291
  2361   0028B6  C04C  F167         	movff	?_Colour_decider+1,main@colour_1291+1
  2362   0028BA                     
  2363                           ;main.c: 207:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d  \r\n",rel.R, 
      +                          rel.G,rel.B,vals.L);
  2364   0028BA  0E00               	movlw	low main@buf
  2365   0028BC  0100               	movlb	0	; () banked
  2366   0028BE  6FB0               	movwf	sprintf@s& (0+255),b
  2367   0028C0  0E01               	movlw	high main@buf
  2368   0028C2  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2369   0028C4  0E26               	movlw	low STR_2
  2370   0028C6  6FB2               	movwf	sprintf@fmt& (0+255),b
  2371   0028C8  0E0E               	movlw	high STR_2
  2372   0028CA  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2373   0028CC  C1B2  F0B4         	movff	_rel,?_sprintf+4
  2374   0028D0  C1B3  F0B5         	movff	_rel+1,?_sprintf+5
  2375   0028D4  C1B4  F0B6         	movff	_rel+2,?_sprintf+6
  2376   0028D8  C1B5  F0B7         	movff	_rel+3,?_sprintf+7
  2377   0028DC  C1B6  F0B8         	movff	_rel+4,?_sprintf+8
  2378   0028E0  C1B7  F0B9         	movff	_rel+5,?_sprintf+9
  2379   0028E4  C1B8  F0BA         	movff	_rel+6,?_sprintf+10
  2380   0028E8  C1B9  F0BB         	movff	_rel+7,?_sprintf+11
  2381   0028EC  C1BA  F0BC         	movff	_rel+8,?_sprintf+12
  2382   0028F0  C1BB  F0BD         	movff	_rel+9,?_sprintf+13
  2383   0028F4  C1BC  F0BE         	movff	_rel+10,?_sprintf+14
  2384   0028F8  C1BD  F0BF         	movff	_rel+11,?_sprintf+15
  2385   0028FC  C1D6  F0C0         	movff	_vals+6,?_sprintf+16
  2386   002900  C1D7  F0C1         	movff	_vals+7,?_sprintf+17
  2387   002904  ECBA  F02C         	call	_sprintf	;wreg free
  2388   002908                     
  2389                           ;main.c: 208:                 sendStringSerial4(buf);
  2390   002908  0E00               	movlw	low main@buf
  2391   00290A  6E02               	movwf	sendStringSerial4@string^0,c
  2392   00290C  0E01               	movlw	high main@buf
  2393   00290E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2394   002910  EC25  F030         	call	_sendStringSerial4	;wreg free
  2395   002914                     l6013:
  2396                           
  2397                           ;main.c: 101:     while (run_flag)
  2398   002914  0101               	movlb	1	; () banked
  2399   002916  5168               	movf	main@run_flag& (0+255),w,b
  2400   002918  1169               	iorwf	(main@run_flag+1)& (0+255),w,b
  2401   00291A  A4D8               	btfss	status,2,c
  2402   00291C  EF92  F014         	goto	u5951
  2403   002920  EF94  F014         	goto	u5950
  2404   002924                     u5951:
  2405   002924  EF1D  F012         	goto	l5871
  2406   002928                     u5950:
  2407   002928                     
  2408                           ; BSR set to: 1
  2409   002928  EF00  F000         	goto	start
  2410   00292C                     __end_of_main:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _turnCalibration *****************
  2414 ;; Defined at:
  2415 ;;		line 357 in file "dc_motor.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2418 ;;		 -> motorL(9), 
  2419 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2420 ;;		 -> motorR(9), 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;Total ram usage:        6 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 4
  2439 ;; This function calls:
  2440 ;;		_turnLeft45
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text1
  2447   004320                     __ptext1:
  2448                           	callstack 0
  2449   004320                     _turnCalibration:
  2450                           	callstack 26
  2451   004320                     
  2452                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  2453   004320  807E               	bsf	126,0,c	;volatile
  2454   004322                     
  2455                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2456   004322  0E52               	movlw	82
  2457   004324  6E25               	movwf	(??_turnCalibration+1)^0,c
  2458   004326  0E2B               	movlw	43
  2459   004328  6E24               	movwf	??_turnCalibration^0,c
  2460   00432A  0E00               	movlw	0
  2461   00432C                     u6067:
  2462   00432C  2EE8               	decfsz	wreg,f,c
  2463   00432E  D7FE               	bra	u6067
  2464   004330  2E24               	decfsz	??_turnCalibration^0,f,c
  2465   004332  D7FC               	bra	u6067
  2466   004334  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2467   004336  D7FA               	bra	u6067
  2468   004338  D000               	nop2	
  2469                           
  2470                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2471   00433A  EF57  F022         	goto	l596
  2472   00433E                     l597:
  2473                           
  2474                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  2475   00433E  867C               	bsf	124,3,c	;volatile
  2476   004340                     
  2477                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2478   004340  0EC7               	movlw	low _motorL
  2479   004342  6E1A               	movwf	turnLeft45@mL^0,c
  2480   004344  0E01               	movlw	high _motorL
  2481   004346  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2482   004348  0EBE               	movlw	low _motorR
  2483   00434A  6E1C               	movwf	turnLeft45@mR^0,c
  2484   00434C  0E01               	movlw	high _motorR
  2485   00434E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2486   004350  EC9F  F02E         	call	_turnLeft45	;wreg free
  2487                           
  2488                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2489   004354  0EC7               	movlw	low _motorL
  2490   004356  6E1A               	movwf	turnLeft45@mL^0,c
  2491   004358  0E01               	movlw	high _motorL
  2492   00435A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2493   00435C  0EBE               	movlw	low _motorR
  2494   00435E  6E1C               	movwf	turnLeft45@mR^0,c
  2495   004360  0E01               	movlw	high _motorR
  2496   004362  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2497   004364  EC9F  F02E         	call	_turnLeft45	;wreg free
  2498                           
  2499                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2500   004368  0EC7               	movlw	low _motorL
  2501   00436A  6E1A               	movwf	turnLeft45@mL^0,c
  2502   00436C  0E01               	movlw	high _motorL
  2503   00436E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2504   004370  0EBE               	movlw	low _motorR
  2505   004372  6E1C               	movwf	turnLeft45@mR^0,c
  2506   004374  0E01               	movlw	high _motorR
  2507   004376  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2508   004378  EC9F  F02E         	call	_turnLeft45	;wreg free
  2509                           
  2510                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  2511   00437C  0EC7               	movlw	low _motorL
  2512   00437E  6E1A               	movwf	turnLeft45@mL^0,c
  2513   004380  0E01               	movlw	high _motorL
  2514   004382  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2515   004384  0EBE               	movlw	low _motorR
  2516   004386  6E1C               	movwf	turnLeft45@mR^0,c
  2517   004388  0E01               	movlw	high _motorR
  2518   00438A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2519   00438C  EC9F  F02E         	call	_turnLeft45	;wreg free
  2520                           
  2521                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2522   004390  EF3C  F022         	goto	l5641
  2523   004394                     l599:
  2524                           
  2525                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  2526   004394  887C               	bsf	124,4,c	;volatile
  2527   004396                     
  2528                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2529   004396  0EA3               	movlw	163
  2530   004398  6E25               	movwf	(??_turnCalibration+1)^0,c
  2531   00439A  0E57               	movlw	87
  2532   00439C  6E24               	movwf	??_turnCalibration^0,c
  2533   00439E  0E02               	movlw	2
  2534   0043A0                     u6077:
  2535   0043A0  2EE8               	decfsz	wreg,f,c
  2536   0043A2  D7FE               	bra	u6077
  2537   0043A4  2E24               	decfsz	??_turnCalibration^0,f,c
  2538   0043A6  D7FC               	bra	u6077
  2539   0043A8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2540   0043AA  D7FA               	bra	u6077
  2541   0043AC  D000               	nop2	
  2542                           
  2543                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2544   0043AE  A48E               	btfss	142,2,c	;volatile
  2545   0043B0  EFDC  F021         	goto	u5581
  2546   0043B4  EFDF  F021         	goto	u5580
  2547   0043B8                     u5581:
  2548   0043B8  0E01               	movlw	1
  2549   0043BA  EFE0  F021         	goto	u5582
  2550   0043BE                     u5580:
  2551   0043BE  0E00               	movlw	0
  2552   0043C0                     u5582:
  2553   0043C0  6E24               	movwf	??_turnCalibration^0,c
  2554   0043C2  A68E               	btfss	142,3,c	;volatile
  2555   0043C4  EFE6  F021         	goto	u5591
  2556   0043C8  EFE9  F021         	goto	u5590
  2557   0043CC                     u5591:
  2558   0043CC  0E01               	movlw	1
  2559   0043CE  EFEA  F021         	goto	u5592
  2560   0043D2                     u5590:
  2561   0043D2  0E00               	movlw	0
  2562   0043D4                     u5592:
  2563   0043D4  1424               	andwf	??_turnCalibration^0,w,c
  2564   0043D6  A0E8               	btfss	wreg,0,c
  2565   0043D8  EFF0  F021         	goto	u5601
  2566   0043DC  EFF2  F021         	goto	u5600
  2567   0043E0                     u5601:
  2568   0043E0  EF04  F022         	goto	l600
  2569   0043E4                     u5600:
  2570   0043E4                     
  2571                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  2572   0043E4  8680               	bsf	128,3,c	;volatile
  2573                           
  2574                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  2575   0043E6  8E7C               	bsf	124,7,c	;volatile
  2576   0043E8                     
  2577                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2578   0043E8  0E52               	movlw	82
  2579   0043EA  6E25               	movwf	(??_turnCalibration+1)^0,c
  2580   0043EC  0E2B               	movlw	43
  2581   0043EE  6E24               	movwf	??_turnCalibration^0,c
  2582   0043F0  0E00               	movlw	0
  2583   0043F2                     u6087:
  2584   0043F2  2EE8               	decfsz	wreg,f,c
  2585   0043F4  D7FE               	bra	u6087
  2586   0043F6  2E24               	decfsz	??_turnCalibration^0,f,c
  2587   0043F8  D7FC               	bra	u6087
  2588   0043FA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2589   0043FC  D7FA               	bra	u6087
  2590   0043FE  D000               	nop2	
  2591   004400                     
  2592                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  2593   004400  9680               	bcf	128,3,c	;volatile
  2594   004402                     
  2595                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  2596   004402  9E7C               	bcf	124,7,c	;volatile
  2597                           
  2598                           ;dc_motor.c: 380:             }
  2599   004404  EF3C  F022         	goto	l5641
  2600   004408                     l600:
  2601   004408  B68E               	btfsc	142,3,c	;volatile
  2602   00440A  EF09  F022         	goto	u5611
  2603   00440E  EF0B  F022         	goto	u5610
  2604   004412                     u5611:
  2605   004412  EF20  F022         	goto	l602
  2606   004416                     u5610:
  2607   004416                     
  2608                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2609   004416  0E0A               	movlw	10
  2610   004418  0100               	movlb	0	; () banked
  2611   00441A  27F9               	addwf	_Turn45Delay& (0+255),f,b
  2612   00441C  0E00               	movlw	0
  2613   00441E  23FA               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2614   004420                     
  2615                           ; BSR set to: 0
  2616                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2617   004420  8680               	bsf	128,3,c	;volatile
  2618   004422                     
  2619                           ; BSR set to: 0
  2620                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2621   004422  0E52               	movlw	82
  2622   004424  6E25               	movwf	(??_turnCalibration+1)^0,c
  2623   004426  0E2B               	movlw	43
  2624   004428  6E24               	movwf	??_turnCalibration^0,c
  2625   00442A  0E00               	movlw	0
  2626   00442C                     u6097:
  2627   00442C  2EE8               	decfsz	wreg,f,c
  2628   00442E  D7FE               	bra	u6097
  2629   004430  2E24               	decfsz	??_turnCalibration^0,f,c
  2630   004432  D7FC               	bra	u6097
  2631   004434  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2632   004436  D7FA               	bra	u6097
  2633   004438  D000               	nop2	
  2634   00443A                     
  2635                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2636   00443A  9680               	bcf	128,3,c	;volatile
  2637                           
  2638                           ;dc_motor.c: 387:             }
  2639   00443C  EF3C  F022         	goto	l5641
  2640   004440                     l602:
  2641   004440  B48E               	btfsc	142,2,c	;volatile
  2642   004442  EF25  F022         	goto	u5621
  2643   004446  EF27  F022         	goto	u5620
  2644   00444A                     u5621:
  2645   00444A  EF3C  F022         	goto	l601
  2646   00444E                     u5620:
  2647   00444E                     
  2648                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2649   00444E  0100               	movlb	0	; () banked
  2650   004450  0EF6               	movlw	246
  2651   004452  27F9               	addwf	_Turn45Delay& (0+255),f,b
  2652   004454  0EFF               	movlw	255
  2653   004456  23FA               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2654   004458                     
  2655                           ; BSR set to: 0
  2656                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2657   004458  8E7C               	bsf	124,7,c	;volatile
  2658   00445A                     
  2659                           ; BSR set to: 0
  2660                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2661   00445A  0E52               	movlw	82
  2662   00445C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2663   00445E  0E2B               	movlw	43
  2664   004460  6E24               	movwf	??_turnCalibration^0,c
  2665   004462  0E00               	movlw	0
  2666   004464                     u6107:
  2667   004464  2EE8               	decfsz	wreg,f,c
  2668   004466  D7FE               	bra	u6107
  2669   004468  2E24               	decfsz	??_turnCalibration^0,f,c
  2670   00446A  D7FC               	bra	u6107
  2671   00446C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2672   00446E  D7FA               	bra	u6107
  2673   004470  D000               	nop2	
  2674   004472                     
  2675                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2676   004472  9E7C               	bcf	124,7,c	;volatile
  2677   004474  EF3C  F022         	goto	l5641
  2678   004478                     l601:
  2679   004478                     l5641:
  2680                           
  2681                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2682   004478  A48E               	btfss	142,2,c	;volatile
  2683   00447A  EF41  F022         	goto	u5631
  2684   00447E  EF43  F022         	goto	u5630
  2685   004482                     u5631:
  2686   004482  EF4A  F022         	goto	l607
  2687   004486                     u5630:
  2688   004486  B68E               	btfsc	142,3,c	;volatile
  2689   004488  EF48  F022         	goto	u5641
  2690   00448C  EF4A  F022         	goto	u5640
  2691   004490                     u5641:
  2692   004490  EFCA  F021         	goto	l599
  2693   004494                     u5640:
  2694   004494                     l607:
  2695                           
  2696                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2697   004494  987C               	bcf	124,4,c	;volatile
  2698   004496                     
  2699                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2700   004496  0EA3               	movlw	163
  2701   004498  6E25               	movwf	(??_turnCalibration+1)^0,c
  2702   00449A  0E57               	movlw	87
  2703   00449C  6E24               	movwf	??_turnCalibration^0,c
  2704   00449E  0E02               	movlw	2
  2705   0044A0                     u6117:
  2706   0044A0  2EE8               	decfsz	wreg,f,c
  2707   0044A2  D7FE               	bra	u6117
  2708   0044A4  2E24               	decfsz	??_turnCalibration^0,f,c
  2709   0044A6  D7FC               	bra	u6117
  2710   0044A8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2711   0044AA  D7FA               	bra	u6117
  2712   0044AC  D000               	nop2	
  2713   0044AE                     l596:
  2714                           
  2715                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2716   0044AE  A68E               	btfss	142,3,c	;volatile
  2717   0044B0  EF5C  F022         	goto	u5651
  2718   0044B4  EF5F  F022         	goto	u5650
  2719   0044B8                     u5651:
  2720   0044B8  0E01               	movlw	1
  2721   0044BA  EF60  F022         	goto	u5652
  2722   0044BE                     u5650:
  2723   0044BE  0E00               	movlw	0
  2724   0044C0                     u5652:
  2725   0044C0  6E24               	movwf	??_turnCalibration^0,c
  2726   0044C2  A48E               	btfss	142,2,c	;volatile
  2727   0044C4  EF66  F022         	goto	u5661
  2728   0044C8  EF69  F022         	goto	u5660
  2729   0044CC                     u5661:
  2730   0044CC  0E01               	movlw	1
  2731   0044CE  EF6A  F022         	goto	u5662
  2732   0044D2                     u5660:
  2733   0044D2  0E00               	movlw	0
  2734   0044D4                     u5662:
  2735   0044D4  1424               	andwf	??_turnCalibration^0,w,c
  2736   0044D6  A0E8               	btfss	wreg,0,c
  2737   0044D8  EF70  F022         	goto	u5671
  2738   0044DC  EF72  F022         	goto	u5670
  2739   0044E0                     u5671:
  2740   0044E0  EF9F  F021         	goto	l597
  2741   0044E4                     u5670:
  2742   0044E4                     
  2743                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2744   0044E4  967C               	bcf	124,3,c	;volatile
  2745   0044E6                     
  2746                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2747   0044E6  0EA3               	movlw	163
  2748   0044E8  6E25               	movwf	(??_turnCalibration+1)^0,c
  2749   0044EA  0E57               	movlw	87
  2750   0044EC  6E24               	movwf	??_turnCalibration^0,c
  2751   0044EE  0E02               	movlw	2
  2752   0044F0                     u6127:
  2753   0044F0  2EE8               	decfsz	wreg,f,c
  2754   0044F2  D7FE               	bra	u6127
  2755   0044F4  2E24               	decfsz	??_turnCalibration^0,f,c
  2756   0044F6  D7FC               	bra	u6127
  2757   0044F8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2758   0044FA  D7FA               	bra	u6127
  2759   0044FC  D000               	nop2	
  2760   0044FE  0012               	return		;funcret
  2761   004500                     __end_of_turnCalibration:
  2762                           	callstack 0
  2763                           
  2764 ;; *************** function _sprintf *****************
  2765 ;; Defined at:
  2766 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2769 ;;		 -> main@buf(100), 
  2770 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2771 ;;		 -> STR_2(35), STR_1(37), 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  f              11  100[BANK0 ] struct _IO_FILE
  2774 ;;  ap              2   98[BANK0 ] PTR void [1]
  2775 ;;		 -> ?_sprintf(2), 
  2776 ;;  ret             2    0        int 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  2   80[BANK0 ] int 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2786 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;Total ram usage:       31 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 7
  2793 ;; This function calls:
  2794 ;;		_vfprintf
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text2
  2801   005974                     __ptext2:
  2802                           	callstack 0
  2803   005974                     _sprintf:
  2804                           	callstack 23
  2805   005974  0EB4               	movlw	low (?_sprintf+4)
  2806   005976  0100               	movlb	0	; () banked
  2807   005978  6FC2               	movwf	sprintf@ap& (0+255),b
  2808   00597A  0E00               	movlw	high (?_sprintf+4)
  2809   00597C  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  2810   00597E  C0B0  F0C4         	movff	sprintf@s,sprintf@f
  2811   005982  C0B1  F0C5         	movff	sprintf@s+1,sprintf@f+1
  2812   005986                     
  2813                           ; BSR set to: 0
  2814   005986  0E00               	movlw	0
  2815   005988  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  2816   00598A  0E00               	movlw	0
  2817   00598C  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  2818   00598E                     
  2819                           ; BSR set to: 0
  2820   00598E  0E00               	movlw	0
  2821   005990  6FCE               	movwf	(sprintf@f+10)& (0+255),b
  2822   005992  0E00               	movlw	0
  2823   005994  6FCD               	movwf	(sprintf@f+9)& (0+255),b
  2824   005996                     
  2825                           ; BSR set to: 0
  2826   005996  0EC4               	movlw	low sprintf@f
  2827   005998  6FA8               	movwf	vfprintf@fp& (0+255),b
  2828   00599A  0E00               	movlw	high sprintf@f
  2829   00599C  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2830   00599E  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2831   0059A2  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2832   0059A6  0EC2               	movlw	low sprintf@ap
  2833   0059A8  6FAC               	movwf	vfprintf@ap& (0+255),b
  2834   0059AA  0E00               	movlw	high sprintf@ap
  2835   0059AC  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2836   0059AE  EC8F  F02C         	call	_vfprintf	;wreg free
  2837   0059B2  0100               	movlb	0	; () banked
  2838   0059B4  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  2839   0059B6  25B0               	addwf	sprintf@s& (0+255),w,b
  2840   0059B8  6ED9               	movwf	fsr2l,c
  2841   0059BA  51C8               	movf	(sprintf@f+4)& (0+255),w,b
  2842   0059BC  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2843   0059BE  6EDA               	movwf	fsr2h,c
  2844   0059C0  0E00               	movlw	0
  2845   0059C2  6EDF               	movwf	indf2,c
  2846   0059C4                     
  2847                           ; BSR set to: 0
  2848   0059C4  0012               	return		;funcret
  2849   0059C6                     __end_of_sprintf:
  2850                           	callstack 0
  2851                           
  2852 ;; *************** function _vfprintf *****************
  2853 ;; Defined at:
  2854 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2857 ;;		 -> sprintf@f(11), 
  2858 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2859 ;;		 -> STR_2(35), STR_1(37), 
  2860 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2861 ;;		 -> sprintf@ap(2), 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2864 ;;		 -> STR_2(35), STR_1(37), 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  2   72[BANK0 ] int 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2874 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;Total ram usage:        8 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; Hardware stack levels required when called: 6
  2881 ;; This function calls:
  2882 ;;		_vfpfcnvrt
  2883 ;; This function is called by:
  2884 ;;		_sprintf
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text3
  2889   00591E                     __ptext3:
  2890                           	callstack 0
  2891   00591E                     _vfprintf:
  2892                           	callstack 23
  2893   00591E                     
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2895   00591E  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2896   005922  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2899   005926  EFA4  F02C         	goto	l5301
  2900   00592A                     l5299:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2903   00592A  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2904   00592E  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2905   005932  0EAE               	movlw	low vfprintf@cfmt
  2906   005934  0100               	movlb	0	; () banked
  2907   005936  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2908   005938  0E00               	movlw	high vfprintf@cfmt
  2909   00593A  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2910   00593C  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2911   005940  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2912   005944  EC6F  F01C         	call	_vfpfcnvrt	;wreg free
  2913   005948                     l5301:
  2914                           
  2915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2916   005948  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2917   00594C  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2918   005950                     	if	0	;tblptru may be non-zero
  2919   005950                     	endif
  2920   005950                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2921   005950  0E00               	movlw	low (__mediumconst shr (0+16))
  2922   005952  6EF8               	movwf	tblptru,c
  2923   005954                     	endif
  2924   005954  0008               	tblrd		*
  2925   005956  50F5               	movf	tablat,w,c
  2926   005958  0900               	iorlw	0
  2927   00595A  A4D8               	btfss	status,2,c
  2928   00595C  EFB2  F02C         	goto	u5201
  2929   005960  EFB4  F02C         	goto	u5200
  2930   005964                     u5201:
  2931   005964  EF95  F02C         	goto	l5299
  2932   005968                     u5200:
  2933   005968                     
  2934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2935   005968  0E00               	movlw	0
  2936   00596A  0100               	movlb	0	; () banked
  2937   00596C  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2938   00596E  0E00               	movlw	0
  2939   005970  6FA8               	movwf	?_vfprintf& (0+255),b
  2940   005972                     
  2941                           ; BSR set to: 0
  2942   005972  0012               	return		;funcret
  2943   005974                     __end_of_vfprintf:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _vfpfcnvrt *****************
  2947 ;; Defined at:
  2948 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2951 ;;		 -> sprintf@f(11), 
  2952 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2953 ;;		 -> vfprintf@cfmt(2), 
  2954 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2955 ;;		 -> sprintf@ap(2), 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  convarg         8   61[BANK0 ] struct .
  2958 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2959 ;;		 -> STR_2(35), STR_1(37), 
  2960 ;;  i               2    0        int 
  2961 ;;  done            2    0        int 
  2962 ;;  c               1   69[BANK0 ] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2972 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;Total ram usage:       19 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 5
  2979 ;; This function calls:
  2980 ;;		_dtoa
  2981 ;;		_efgtoa
  2982 ;;		_fputc
  2983 ;; This function is called by:
  2984 ;;		_vfprintf
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text4
  2989   0038DE                     __ptext4:
  2990                           	callstack 0
  2991   0038DE                     _vfpfcnvrt:
  2992                           	callstack 23
  2993   0038DE                     
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2995   0038DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2996   0038E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2997   0038E6  CFDE FFF6          	movff	postinc2,tblptrl
  2998   0038EA  CFDD FFF7          	movff	postdec2,tblptrh
  2999   0038EE                     	if	0	;tblptru may be non-zero
  3000   0038EE                     	endif
  3001   0038EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3002   0038EE  0E00               	movlw	low (__mediumconst shr (0+16))
  3003   0038F0  6EF8               	movwf	tblptru,c
  3004   0038F2                     	endif
  3005   0038F2  0008               	tblrd		*
  3006   0038F4  50F5               	movf	tablat,w,c
  3007   0038F6  0A25               	xorlw	37
  3008   0038F8  A4D8               	btfss	status,2,c
  3009   0038FA  EF81  F01C         	goto	u5031
  3010   0038FE  EF83  F01C         	goto	u5030
  3011   003902                     u5031:
  3012   003902  EFDB  F01D         	goto	l5149
  3013   003906                     u5030:
  3014   003906                     
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3016   003906  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3017   00390A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3018   00390E  2ADE               	incf	postinc2,f,c
  3019   003910  0E00               	movlw	0
  3020   003912  22DD               	addwfc	postdec2,f,c
  3021   003914                     
  3022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3023   003914  0E00               	movlw	0
  3024   003916  0100               	movlb	0	; () banked
  3025   003918  6FEE               	movwf	(_width+1)& (0+255),b
  3026   00391A  0E00               	movlw	0
  3027   00391C  6FED               	movwf	_width& (0+255),b
  3028   00391E  C0ED  F0F3         	movff	_width,_flags
  3029   003922                     
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3032   003922  69EF               	setf	_prec& (0+255),b
  3033   003924  69F0               	setf	(_prec+1)& (0+255),b
  3034   003926                     
  3035                           ; BSR set to: 0
  3036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3037   003926  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3038   00392A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3039   00392E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3040   003932  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3041   003936                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3044   003936  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3045   00393A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3046   00393E                     	if	0	;tblptru may be non-zero
  3047   00393E                     	endif
  3048   00393E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3049   00393E  0E00               	movlw	low (__mediumconst shr (0+16))
  3050   003940  6EF8               	movwf	tblptru,c
  3051   003942                     	endif
  3052   003942  0008               	tblrd		*
  3053   003944  50F5               	movf	tablat,w,c
  3054   003946  0A64               	xorlw	100
  3055   003948  B4D8               	btfsc	status,2,c
  3056   00394A  EFA9  F01C         	goto	u5041
  3057   00394E  EFAB  F01C         	goto	u5040
  3058   003952                     u5041:
  3059   003952  EFBB  F01C         	goto	l5105
  3060   003956                     u5040:
  3061   003956                     
  3062                           ; BSR set to: 0
  3063   003956  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3064   00395A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3065   00395E                     	if	0	;tblptru may be non-zero
  3066   00395E                     	endif
  3067   00395E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3068   00395E  0E00               	movlw	low (__mediumconst shr (0+16))
  3069   003960  6EF8               	movwf	tblptru,c
  3070   003962                     	endif
  3071   003962  0008               	tblrd		*
  3072   003964  50F5               	movf	tablat,w,c
  3073   003966  0A69               	xorlw	105
  3074   003968  A4D8               	btfss	status,2,c
  3075   00396A  EFB9  F01C         	goto	u5051
  3076   00396E  EFBB  F01C         	goto	u5050
  3077   003972                     u5051:
  3078   003972  EFFE  F01C         	goto	l5111
  3079   003976                     u5050:
  3080   003976                     l5105:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3084   003976  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3085   00397A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3086   00397E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3087   003982  0E02               	movlw	2
  3088   003984  26DE               	addwf	postinc2,f,c
  3089   003986  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3090   00398A  0E00               	movlw	0
  3091   00398C  22DD               	addwfc	postdec2,f,c
  3092   00398E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3093   003992  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3094   003996  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3095   00399A  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  3096   00399E  0E00               	movlw	0
  3097   0039A0  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3098   0039A2  0EFF               	movlw	-1
  3099   0039A4  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3100   0039A6  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3101   0039A8  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3102   0039AA  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3103   0039AC  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3104   0039AE  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3107   0039B0  0E01               	movlw	1
  3108   0039B2  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3109   0039B4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3110   0039B6  0E00               	movlw	0
  3111   0039B8  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3112   0039BA  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3113   0039BC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3114   0039C0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3115   0039C4  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3116   0039C8  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3117   0039CC                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3120   0039CC  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3121   0039D0  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3122   0039D4  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3123   0039D8  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3124   0039DC  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3125   0039E0  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3126   0039E4  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3127   0039E8  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3128   0039EC  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3129   0039F0  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3130   0039F4  EC48  F01F         	call	_dtoa	;wreg free
  3131   0039F8  EFF1  F01D         	goto	l1486
  3132   0039FC                     l5111:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3136   0039FC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3137   003A00  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3138   003A04  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3139   003A08  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3140   003A0C                     
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3143   003A0C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3144   003A10  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3145   003A14                     	if	0	;tblptru may be non-zero
  3146   003A14                     	endif
  3147   003A14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3148   003A14  0E00               	movlw	low (__mediumconst shr (0+16))
  3149   003A16  6EF8               	movwf	tblptru,c
  3150   003A18                     	endif
  3151   003A18  0008               	tblrd		*
  3152   003A1A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3155   003A1E  EF1D  F01D         	goto	l5123
  3156   003A22                     l5115:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3160   003A22  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3161   003A24  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3164   003A26  EF36  F01D         	goto	l5125
  3165   003A2A                     l5117:
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3169   003A2A  0E6C               	movlw	108
  3170   003A2C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3173   003A2E  EF36  F01D         	goto	l5125
  3174   003A32                     l5119:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3178   003A32  0E00               	movlw	0
  3179   003A34  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3182   003A36  EF36  F01D         	goto	l5125
  3183   003A3A                     l5123:
  3184                           
  3185                           ; BSR set to: 0
  3186   003A3A  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3187   003A3C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3188   003A3E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3189                           
  3190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3191                           ; Switch size 1, requested type "simple"
  3192                           ; Number of cases is 1, Range of values is 0 to 0
  3193                           ; switch strategies available:
  3194                           ; Name         Instructions Cycles
  3195                           ; simple_byte            4     3 (average)
  3196                           ;	Chosen strategy is simple_byte
  3197   003A40  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3198   003A42  0A00               	xorlw	0	; case 0
  3199   003A44  B4D8               	btfsc	status,2,c
  3200   003A46  EF27  F01D         	goto	l6155
  3201   003A4A  EF19  F01D         	goto	l5119
  3202   003A4E                     l6155:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ; Switch size 1, requested type "simple"
  3206                           ; Number of cases is 3, Range of values is 76 to 108
  3207                           ; switch strategies available:
  3208                           ; Name         Instructions Cycles
  3209                           ; simple_byte           10     6 (average)
  3210                           ;	Chosen strategy is simple_byte
  3211   003A4E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3212   003A50  0A4C               	xorlw	76	; case 76
  3213   003A52  B4D8               	btfsc	status,2,c
  3214   003A54  EF11  F01D         	goto	l5115
  3215   003A58  0A2A               	xorlw	42	; case 102
  3216   003A5A  B4D8               	btfsc	status,2,c
  3217   003A5C  EF15  F01D         	goto	l5117
  3218   003A60  0A0A               	xorlw	10	; case 108
  3219   003A62  B4D8               	btfsc	status,2,c
  3220   003A64  EF11  F01D         	goto	l5115
  3221   003A68  EF19  F01D         	goto	l5119
  3222   003A6C                     l5125:
  3223                           
  3224                           ; BSR set to: 0
  3225   003A6C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3226   003A70  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3227   003A74                     	if	0	;tblptru may be non-zero
  3228   003A74                     	endif
  3229   003A74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3230   003A74  0E00               	movlw	low (__mediumconst shr (0+16))
  3231   003A76  6EF8               	movwf	tblptru,c
  3232   003A78                     	endif
  3233   003A78  0008               	tblrd		*
  3234   003A7A  50F5               	movf	tablat,w,c
  3235   003A7C  0A66               	xorlw	102
  3236   003A7E  A4D8               	btfss	status,2,c
  3237   003A80  EF44  F01D         	goto	u5061
  3238   003A84  EF46  F01D         	goto	u5060
  3239   003A88                     u5061:
  3240   003A88  EFD2  F01D         	goto	l5145
  3241   003A8C                     u5060:
  3242   003A8C  EF7C  F01D         	goto	l5133
  3243   003A90                     l5127:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3247   003A90  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3248   003A94  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3249   003A98  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3250   003A9C  0E04               	movlw	4
  3251   003A9E  26DE               	addwf	postinc2,f,c
  3252   003AA0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3253   003AA4  0E00               	movlw	0
  3254   003AA6  22DD               	addwfc	postdec2,f,c
  3255   003AA8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3256   003AAC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3257   003AB0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3258   003AB4  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3259   003AB8  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3260   003ABC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3263   003AC0  EF91  F01D         	goto	l5135
  3264   003AC4                     l5129:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3268   003AC4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3269   003AC8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3270   003ACC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3271   003AD0  0E04               	movlw	4
  3272   003AD2  26DE               	addwf	postinc2,f,c
  3273   003AD4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3274   003AD8  0E00               	movlw	0
  3275   003ADA  22DD               	addwfc	postdec2,f,c
  3276   003ADC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3277   003AE0  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3278   003AE4  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3279   003AE8  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3280   003AEC  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3281   003AF0  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3284   003AF4  EF91  F01D         	goto	l5135
  3285   003AF8                     l5133:
  3286                           
  3287                           ; BSR set to: 0
  3288   003AF8  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3289   003AFA  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3290   003AFC  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3291                           
  3292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3293                           ; Switch size 1, requested type "simple"
  3294                           ; Number of cases is 1, Range of values is 0 to 0
  3295                           ; switch strategies available:
  3296                           ; Name         Instructions Cycles
  3297                           ; simple_byte            4     3 (average)
  3298                           ;	Chosen strategy is simple_byte
  3299   003AFE  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3300   003B00  0A00               	xorlw	0	; case 0
  3301   003B02  B4D8               	btfsc	status,2,c
  3302   003B04  EF86  F01D         	goto	l6157
  3303   003B08  EF91  F01D         	goto	l5135
  3304   003B0C                     l6157:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ; Switch size 1, requested type "simple"
  3308                           ; Number of cases is 2, Range of values is 76 to 108
  3309                           ; switch strategies available:
  3310                           ; Name         Instructions Cycles
  3311                           ; simple_byte            7     4 (average)
  3312                           ;	Chosen strategy is simple_byte
  3313   003B0C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3314   003B0E  0A4C               	xorlw	76	; case 76
  3315   003B10  B4D8               	btfsc	status,2,c
  3316   003B12  EF62  F01D         	goto	l5129
  3317   003B16  0A20               	xorlw	32	; case 108
  3318   003B18  B4D8               	btfsc	status,2,c
  3319   003B1A  EF48  F01D         	goto	l5127
  3320   003B1E  EF91  F01D         	goto	l5135
  3321   003B22                     l5135:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3325   003B22  0E01               	movlw	1
  3326   003B24  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3327   003B26  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3328   003B28  0E00               	movlw	0
  3329   003B2A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3330   003B2C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3331   003B2E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3332   003B32  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3333   003B36  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3334   003B3A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3337   003B3E  EFBA  F01D         	goto	l5143
  3338   003B42                     l5137:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3342   003B42  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3343   003B46  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3344   003B4A  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3345   003B4E  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3346   003B52  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3347   003B56  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3348   003B5A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3349   003B5E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3350   003B62                     	if	0	;tblptru may be non-zero
  3351   003B62                     	endif
  3352   003B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3353   003B62  0E00               	movlw	low (__mediumconst shr (0+16))
  3354   003B64  6EF8               	movwf	tblptru,c
  3355   003B66                     	endif
  3356   003B66  0008               	tblrd		*
  3357   003B68  CFF5 F066          	movff	tablat,efgtoa@c
  3358   003B6C  EC97  F00C         	call	_efgtoa	;wreg free
  3359   003B70  EFF1  F01D         	goto	l1486
  3360   003B74                     l5143:
  3361                           
  3362                           ; BSR set to: 0
  3363   003B74  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3364   003B78  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3365   003B7C                     	if	0	;tblptru may be non-zero
  3366   003B7C                     	endif
  3367   003B7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3368   003B7C  0E00               	movlw	low (__mediumconst shr (0+16))
  3369   003B7E  6EF8               	movwf	tblptru,c
  3370   003B80                     	endif
  3371   003B80  0008               	tblrd		*
  3372   003B82  50F5               	movf	tablat,w,c
  3373   003B84  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3374   003B86  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3375                           
  3376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3377                           ; Switch size 1, requested type "simple"
  3378                           ; Number of cases is 1, Range of values is 0 to 0
  3379                           ; switch strategies available:
  3380                           ; Name         Instructions Cycles
  3381                           ; simple_byte            4     3 (average)
  3382                           ;	Chosen strategy is simple_byte
  3383   003B88  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3384   003B8A  0A00               	xorlw	0	; case 0
  3385   003B8C  B4D8               	btfsc	status,2,c
  3386   003B8E  EFCB  F01D         	goto	l6159
  3387   003B92  EFD2  F01D         	goto	l5145
  3388   003B96                     l6159:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ; Switch size 1, requested type "simple"
  3392                           ; Number of cases is 1, Range of values is 102 to 102
  3393                           ; switch strategies available:
  3394                           ; Name         Instructions Cycles
  3395                           ; simple_byte            4     3 (average)
  3396                           ;	Chosen strategy is simple_byte
  3397   003B96  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3398   003B98  0A66               	xorlw	102	; case 102
  3399   003B9A  B4D8               	btfsc	status,2,c
  3400   003B9C  EFA1  F01D         	goto	l5137
  3401   003BA0  EFD2  F01D         	goto	l5145
  3402   003BA4                     l5145:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3405   003BA4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3406   003BA8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3407   003BAC  2ADE               	incf	postinc2,f,c
  3408   003BAE  0E00               	movlw	0
  3409   003BB0  22DD               	addwfc	postdec2,f,c
  3410   003BB2  EFF1  F01D         	goto	l1486
  3411   003BB6                     l5149:
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3414   003BB6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3415   003BBA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3416   003BBE  CFDE FFF6          	movff	postinc2,tblptrl
  3417   003BC2  CFDD FFF7          	movff	postdec2,tblptrh
  3418   003BC6                     	if	0	;tblptru may be non-zero
  3419   003BC6                     	endif
  3420   003BC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3421   003BC6  0E00               	movlw	low (__mediumconst shr (0+16))
  3422   003BC8  6EF8               	movwf	tblptru,c
  3423   003BCA                     	endif
  3424   003BCA  0008               	tblrd		*
  3425   003BCC  50F5               	movf	tablat,w,c
  3426   003BCE  6E01               	movwf	fputc@c^0,c
  3427   003BD0  6A02               	clrf	(fputc@c+1)^0,c
  3428   003BD2  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3429   003BD6  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3430   003BDA  EC0A  F027         	call	_fputc	;wreg free
  3431   003BDE  EFD2  F01D         	goto	l5145
  3432   003BE2                     l1486:
  3433   003BE2  0012               	return		;funcret
  3434   003BE4                     __end_of_vfpfcnvrt:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _efgtoa *****************
  3438 ;; Defined at:
  3439 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3442 ;;		 -> sprintf@f(11), 
  3443 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3444 ;;  c               1    6[BANK0 ] unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  u               4   49[BANK0 ] struct flui
  3447 ;;  g               4   45[BANK0 ] struct flui
  3448 ;;  l               4   38[BANK0 ] struct flui
  3449 ;;  h               4   34[BANK0 ] struct flui
  3450 ;;  ou              4   28[BANK0 ] struct flui
  3451 ;;  n               2   43[BANK0 ] int 
  3452 ;;  i               2   32[BANK0 ] int 
  3453 ;;  w               2   26[BANK0 ] int 
  3454 ;;  e               2   24[BANK0 ] int 
  3455 ;;  m               2   22[BANK0 ] int 
  3456 ;;  d               2   20[BANK0 ] int 
  3457 ;;  t               2   13[BANK0 ] int 
  3458 ;;  p               2   11[BANK0 ] int 
  3459 ;;  ne              2    9[BANK0 ] int 
  3460 ;;  sign            1   42[BANK0 ] unsigned char 
  3461 ;;  nmode           1   19[BANK0 ] unsigned char 
  3462 ;;  mode            1   18[BANK0 ] unsigned char 
  3463 ;;  pp              1   17[BANK0 ] unsigned char 
  3464 ;;  esign           1    0        unsigned char 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3474 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3475 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;Total ram usage:       53 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 4
  3481 ;; This function calls:
  3482 ;;		___fladd
  3483 ;;		___fldiv
  3484 ;;		___fleq
  3485 ;;		___flge
  3486 ;;		___flmul
  3487 ;;		___flneg
  3488 ;;		___flsub
  3489 ;;		___fltol
  3490 ;;		___fpclassifyf
  3491 ;;		_floorf
  3492 ;;		_labs
  3493 ;;		_memcpy
  3494 ;;		_pad
  3495 ;;		_strcpy
  3496 ;; This function is called by:
  3497 ;;		_vfpfcnvrt
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text5
  3502   00192E                     __ptext5:
  3503                           	callstack 0
  3504   00192E                     _efgtoa:
  3505                           	callstack 23
  3506   00192E                     
  3507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3508   00192E  0E00               	movlw	0
  3509   001930  0100               	movlb	0	; () banked
  3510   001932  6F8A               	movwf	efgtoa@sign& (0+255),b
  3511   001934                     
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3514   001934  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3515   001938  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3516   00193C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3517   001940  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3518   001944                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3521   001944  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3522   001946  EFA9  F00C         	goto	u4680
  3523   00194A  EFA7  F00C         	goto	u4681
  3524   00194E                     u4681:
  3525   00194E  EFBD  F00C         	goto	l4815
  3526   001952                     u4680:
  3527   001952                     
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3530   001952  0E01               	movlw	1
  3531   001954  6F8A               	movwf	efgtoa@sign& (0+255),b
  3532   001956                     
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3535   001956  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3536   00195A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3537   00195E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3538   001962  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3539   001966  ECD2  F02F         	call	___flneg	;wreg free
  3540   00196A  C001  F08D         	movff	?___flneg,efgtoa@g
  3541   00196E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3542   001972  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3543   001976  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3544   00197A                     l4815:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3547   00197A  0E00               	movlw	0
  3548   00197C  0100               	movlb	0	; () banked
  3549   00197E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3550   001980  0E00               	movlw	0
  3551   001982  6F8B               	movwf	efgtoa@n& (0+255),b
  3552   001984                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3555   001984  C0ED  F07A         	movff	_width,efgtoa@w
  3556   001988  C0EE  F07B         	movff	_width+1,efgtoa@w+1
  3557   00198C                     
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3560   00198C  518A               	movf	efgtoa@sign& (0+255),w,b
  3561   00198E  B4D8               	btfsc	status,2,c
  3562   001990  EFCC  F00C         	goto	u4691
  3563   001994  EFCE  F00C         	goto	u4690
  3564   001998                     u4691:
  3565   001998  EFE2  F00C         	goto	l4829
  3566   00199C                     u4690:
  3567   00199C                     
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3570   00199C  518A               	movf	efgtoa@sign& (0+255),w,b
  3571   00199E  A4D8               	btfss	status,2,c
  3572   0019A0  EFD4  F00C         	goto	u4701
  3573   0019A4  EFD6  F00C         	goto	u4700
  3574   0019A8                     u4701:
  3575   0019A8  EFDC  F00C         	goto	l4825
  3576   0019AC                     u4700:
  3577   0019AC                     
  3578                           ; BSR set to: 0
  3579   0019AC  0E00               	movlw	0
  3580   0019AE  6F70               	movwf	(_efgtoa$2772+1)& (0+255),b
  3581   0019B0  0E2B               	movlw	43
  3582   0019B2  6F6F               	movwf	_efgtoa$2772& (0+255),b
  3583   0019B4  EFE0  F00C         	goto	l4827
  3584   0019B8                     l4825:
  3585                           
  3586                           ; BSR set to: 0
  3587   0019B8  0E00               	movlw	0
  3588   0019BA  6F70               	movwf	(_efgtoa$2772+1)& (0+255),b
  3589   0019BC  0E2D               	movlw	45
  3590   0019BE  6F6F               	movwf	_efgtoa$2772& (0+255),b
  3591   0019C0                     l4827:
  3592                           
  3593                           ; BSR set to: 0
  3594   0019C0  C06F  F08A         	movff	_efgtoa$2772,efgtoa@sign
  3595   0019C4                     l4829:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3599   0019C4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3600   0019C8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3601   0019CC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3602   0019D0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3603   0019D4  EC8B  F026         	call	___fpclassifyf	;wreg free
  3604   0019D8  0401               	decf	?___fpclassifyf^0,w,c
  3605   0019DA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3606   0019DC  A4D8               	btfss	status,2,c
  3607   0019DE  EFF3  F00C         	goto	u4711
  3608   0019E2  EFF5  F00C         	goto	u4710
  3609   0019E6                     u4711:
  3610   0019E6  EF28  F00D         	goto	l4847
  3611   0019EA                     u4710:
  3612   0019EA                     
  3613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3614   0019EA  0100               	movlb	0	; () banked
  3615   0019EC  518A               	movf	efgtoa@sign& (0+255),w,b
  3616   0019EE  B4D8               	btfsc	status,2,c
  3617   0019F0  EFFC  F00C         	goto	u4721
  3618   0019F4  EFFE  F00C         	goto	u4720
  3619   0019F8                     u4721:
  3620   0019F8  EF07  F00D         	goto	l4839
  3621   0019FC                     u4720:
  3622   0019FC                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3625   0019FC  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3626   001A00                     
  3627                           ; BSR set to: 0
  3628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3629   001A00  077A               	decf	efgtoa@w& (0+255),f,b
  3630   001A02  A0D8               	btfss	status,0,c
  3631   001A04  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3632   001A06                     
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3635   001A06  0E00               	movlw	0
  3636   001A08  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3637   001A0A  0E01               	movlw	1
  3638   001A0C  6F8B               	movwf	efgtoa@n& (0+255),b
  3639   001A0E                     l4839:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3643   001A0E  0EA0               	movlw	low _dbuf
  3644   001A10  258B               	addwf	efgtoa@n& (0+255),w,b
  3645   001A12  6E01               	movwf	strcpy@dest^0,c
  3646   001A14  0E02               	movlw	high _dbuf
  3647   001A16  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3648   001A18  6E02               	movwf	(strcpy@dest+1)^0,c
  3649   001A1A  0E49               	movlw	low STR_3
  3650   001A1C  6E03               	movwf	strcpy@src^0,c
  3651   001A1E  0E0E               	movlw	high STR_3
  3652   001A20  6E04               	movwf	(strcpy@src+1)^0,c
  3653   001A22  EC0F  F02F         	call	_strcpy	;wreg free
  3654   001A26                     l4841:
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3657   001A26  0100               	movlb	0	; () banked
  3658   001A28  0EFD               	movlw	253
  3659   001A2A  277A               	addwf	efgtoa@w& (0+255),f,b
  3660   001A2C  0EFF               	movlw	255
  3661   001A2E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3662   001A30                     
  3663                           ; BSR set to: 0
  3664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3665   001A30  C060  F011         	movff	efgtoa@fp,pad@fp
  3666   001A34  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3667   001A38  0EA0               	movlw	low _dbuf
  3668   001A3A  6E13               	movwf	pad@buf^0,c
  3669   001A3C  0E02               	movlw	high _dbuf
  3670   001A3E  6E14               	movwf	(pad@buf+1)^0,c
  3671   001A40  C07A  F015         	movff	efgtoa@w,pad@p
  3672   001A44  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3673   001A48  ECCF  F02A         	call	_pad	;wreg free
  3674   001A4C  EF93  F011         	goto	l1438
  3675   001A50                     l4847:
  3676                           
  3677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3678   001A50  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3679   001A54  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3680   001A58  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3681   001A5C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3682   001A60  EC8B  F026         	call	___fpclassifyf	;wreg free
  3683   001A64  5001               	movf	?___fpclassifyf^0,w,c
  3684   001A66  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3685   001A68  A4D8               	btfss	status,2,c
  3686   001A6A  EF39  F00D         	goto	u4731
  3687   001A6E  EF3B  F00D         	goto	u4730
  3688   001A72                     u4731:
  3689   001A72  EF5B  F00D         	goto	l4865
  3690   001A76                     u4730:
  3691   001A76                     
  3692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3693   001A76  0100               	movlb	0	; () banked
  3694   001A78  518A               	movf	efgtoa@sign& (0+255),w,b
  3695   001A7A  B4D8               	btfsc	status,2,c
  3696   001A7C  EF42  F00D         	goto	u4741
  3697   001A80  EF44  F00D         	goto	u4740
  3698   001A84                     u4741:
  3699   001A84  EF4D  F00D         	goto	l4857
  3700   001A88                     u4740:
  3701   001A88                     
  3702                           ; BSR set to: 0
  3703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3704   001A88  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3705   001A8C                     
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3708   001A8C  077A               	decf	efgtoa@w& (0+255),f,b
  3709   001A8E  A0D8               	btfss	status,0,c
  3710   001A90  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3711   001A92                     
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3714   001A92  0E00               	movlw	0
  3715   001A94  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3716   001A96  0E01               	movlw	1
  3717   001A98  6F8B               	movwf	efgtoa@n& (0+255),b
  3718   001A9A                     l4857:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3722   001A9A  0EA0               	movlw	low _dbuf
  3723   001A9C  258B               	addwf	efgtoa@n& (0+255),w,b
  3724   001A9E  6E01               	movwf	strcpy@dest^0,c
  3725   001AA0  0E02               	movlw	high _dbuf
  3726   001AA2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3727   001AA4  6E02               	movwf	(strcpy@dest+1)^0,c
  3728   001AA6  0E4D               	movlw	low STR_6
  3729   001AA8  6E03               	movwf	strcpy@src^0,c
  3730   001AAA  0E0E               	movlw	high STR_6
  3731   001AAC  6E04               	movwf	(strcpy@src+1)^0,c
  3732   001AAE  EC0F  F02F         	call	_strcpy	;wreg free
  3733   001AB2  EF13  F00D         	goto	l4841
  3734   001AB6                     l4865:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3737   001AB6  0E00               	movlw	0
  3738   001AB8  0100               	movlb	0	; () banked
  3739   001ABA  6F91               	movwf	efgtoa@u& (0+255),b
  3740   001ABC  0E00               	movlw	0
  3741   001ABE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3742   001AC0  0E80               	movlw	128
  3743   001AC2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3744   001AC4  0E3F               	movlw	63
  3745   001AC6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3746                           
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3748   001AC8  0E00               	movlw	0
  3749   001ACA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3750   001ACC  0E00               	movlw	0
  3751   001ACE  6F78               	movwf	efgtoa@e& (0+255),b
  3752   001AD0                     
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3755   001AD0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3756   001AD4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3757   001AD8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3758   001ADC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3759   001AE0  0E00               	movlw	0
  3760   001AE2  6E36               	movwf	___fleq@ff2^0,c
  3761   001AE4  0E00               	movlw	0
  3762   001AE6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3763   001AE8  0E00               	movlw	0
  3764   001AEA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3765   001AEC  0E00               	movlw	0
  3766   001AEE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3767   001AF0  EC7A  F028         	call	___fleq	;wreg free
  3768   001AF4  B0D8               	btfsc	status,0,c
  3769   001AF6  EF7F  F00D         	goto	u4751
  3770   001AFA  EF81  F00D         	goto	u4750
  3771   001AFE                     u4751:
  3772   001AFE  EF60  F00E         	goto	l1441
  3773   001B02                     u4750:
  3774   001B02  EF8E  F00D         	goto	l4873
  3775   001B06                     l1443:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3778   001B06  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3779   001B0A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3780   001B0E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3781   001B12  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3782   001B16                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3784   001B16  0100               	movlb	0	; () banked
  3785   001B18  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3786   001B1A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3787   001B1C                     l4873:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3790   001B1C  C091  F011         	movff	efgtoa@u,___flmul@b
  3791   001B20  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3792   001B24  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3793   001B28  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3794   001B2C  0E00               	movlw	0
  3795   001B2E  6E15               	movwf	___flmul@a^0,c
  3796   001B30  0E00               	movlw	0
  3797   001B32  6E16               	movwf	(___flmul@a+1)^0,c
  3798   001B34  0E20               	movlw	32
  3799   001B36  6E17               	movwf	(___flmul@a+2)^0,c
  3800   001B38  0E41               	movlw	65
  3801   001B3A  6E18               	movwf	(___flmul@a+3)^0,c
  3802   001B3C  ECF6  F016         	call	___flmul	;wreg free
  3803   001B40  C011  F07C         	movff	?___flmul,efgtoa@ou
  3804   001B44  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3805   001B48  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3806   001B4C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3807   001B50  0100               	movlb	0	; () banked
  3808   001B52  517C               	movf	efgtoa@ou& (0+255),w,b
  3809   001B54  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3810   001B56  6E01               	movwf	labs@a^0,c
  3811   001B58  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3812   001B5A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3813   001B5C  6E02               	movwf	(labs@a+1)^0,c
  3814   001B5E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3815   001B60  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3816   001B62  6E03               	movwf	(labs@a+2)^0,c
  3817   001B64  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3818   001B66  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3819   001B68  6E04               	movwf	(labs@a+3)^0,c
  3820   001B6A  EC46  F02B         	call	_labs	;wreg free
  3821   001B6E  BE04               	btfsc	(?_labs+3)^0,7,c
  3822   001B70  EFC5  F00D         	goto	u4761
  3823   001B74  5004               	movf	(?_labs+3)^0,w,c
  3824   001B76  1003               	iorwf	(?_labs+2)^0,w,c
  3825   001B78  1002               	iorwf	(?_labs+1)^0,w,c
  3826   001B7A  E109               	bnz	u4760
  3827   001B7C  0E02               	movlw	2
  3828   001B7E  5C01               	subwf	?_labs^0,w,c
  3829   001B80  A0D8               	btfss	status,0,c
  3830   001B82  EFC5  F00D         	goto	u4761
  3831   001B86  EFC7  F00D         	goto	u4760
  3832   001B8A                     u4761:
  3833   001B8A  EF83  F00D         	goto	l1443
  3834   001B8E                     u4760:
  3835   001B8E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3836   001B92  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3837   001B96  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3838   001B9A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3839   001B9E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3840   001BA2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3841   001BA6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3842   001BAA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3843   001BAE  EC09  F026         	call	___flge	;wreg free
  3844   001BB2  A0D8               	btfss	status,0,c
  3845   001BB4  EFDE  F00D         	goto	u4771
  3846   001BB8  EFE0  F00D         	goto	u4770
  3847   001BBC                     u4771:
  3848   001BBC  EF83  F00D         	goto	l1443
  3849   001BC0                     u4770:
  3850   001BC0                     
  3851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3852   001BC0  0100               	movlb	0	; () banked
  3853   001BC2  5191               	movf	efgtoa@u& (0+255),w,b
  3854   001BC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3855   001BC6  6E01               	movwf	labs@a^0,c
  3856   001BC8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3857   001BCA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3858   001BCC  6E02               	movwf	(labs@a+1)^0,c
  3859   001BCE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3860   001BD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3861   001BD2  6E03               	movwf	(labs@a+2)^0,c
  3862   001BD4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3863   001BD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3864   001BD8  6E04               	movwf	(labs@a+3)^0,c
  3865   001BDA  EC46  F02B         	call	_labs	;wreg free
  3866   001BDE  BE04               	btfsc	(?_labs+3)^0,7,c
  3867   001BE0  EFFF  F00D         	goto	u4780
  3868   001BE4  5004               	movf	(?_labs+3)^0,w,c
  3869   001BE6  1003               	iorwf	(?_labs+2)^0,w,c
  3870   001BE8  1002               	iorwf	(?_labs+1)^0,w,c
  3871   001BEA  E107               	bnz	u4781
  3872   001BEC  0E02               	movlw	2
  3873   001BEE  5C01               	subwf	?_labs^0,w,c
  3874   001BF0  B0D8               	btfsc	status,0,c
  3875   001BF2  EFFD  F00D         	goto	u4781
  3876   001BF6  EFFF  F00D         	goto	u4780
  3877   001BFA                     u4781:
  3878   001BFA  EF47  F00E         	goto	l4891
  3879   001BFE                     u4780:
  3880   001BFE                     l4881:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3883   001BFE  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3884   001C02  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3885   001C06  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3886   001C0A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3889   001C0E  EF60  F00E         	goto	l1441
  3890   001C12                     l4883:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3893   001C12  C091  F032         	movff	efgtoa@u,___fldiv@b
  3894   001C16  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3895   001C1A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3896   001C1E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3897   001C22  0E00               	movlw	0
  3898   001C24  6E36               	movwf	___fldiv@a^0,c
  3899   001C26  0E00               	movlw	0
  3900   001C28  6E37               	movwf	(___fldiv@a+1)^0,c
  3901   001C2A  0E20               	movlw	32
  3902   001C2C  6E38               	movwf	(___fldiv@a+2)^0,c
  3903   001C2E  0E41               	movlw	65
  3904   001C30  6E39               	movwf	(___fldiv@a+3)^0,c
  3905   001C32  EC0B  F019         	call	___fldiv	;wreg free
  3906   001C36  C032  F091         	movff	?___fldiv,efgtoa@u
  3907   001C3A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3908   001C3E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3909   001C42  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3910   001C46                     
  3911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3912   001C46  0100               	movlb	0	; () banked
  3913   001C48  0778               	decf	efgtoa@e& (0+255),f,b
  3914   001C4A  A0D8               	btfss	status,0,c
  3915   001C4C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3916   001C4E                     
  3917                           ; BSR set to: 0
  3918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3919   001C4E  5191               	movf	efgtoa@u& (0+255),w,b
  3920   001C50  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3921   001C52  6E01               	movwf	labs@a^0,c
  3922   001C54  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3923   001C56  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3924   001C58  6E02               	movwf	(labs@a+1)^0,c
  3925   001C5A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3926   001C5C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3927   001C5E  6E03               	movwf	(labs@a+2)^0,c
  3928   001C60  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3929   001C62  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3930   001C64  6E04               	movwf	(labs@a+3)^0,c
  3931   001C66  EC46  F02B         	call	_labs	;wreg free
  3932   001C6A  BE04               	btfsc	(?_labs+3)^0,7,c
  3933   001C6C  EF45  F00E         	goto	u4790
  3934   001C70  5004               	movf	(?_labs+3)^0,w,c
  3935   001C72  1003               	iorwf	(?_labs+2)^0,w,c
  3936   001C74  1002               	iorwf	(?_labs+1)^0,w,c
  3937   001C76  E107               	bnz	u4791
  3938   001C78  0E02               	movlw	2
  3939   001C7A  5C01               	subwf	?_labs^0,w,c
  3940   001C7C  B0D8               	btfsc	status,0,c
  3941   001C7E  EF43  F00E         	goto	u4791
  3942   001C82  EF45  F00E         	goto	u4790
  3943   001C86                     u4791:
  3944   001C86  EF47  F00E         	goto	l4891
  3945   001C8A                     u4790:
  3946   001C8A  EFFF  F00D         	goto	l4881
  3947   001C8E                     l4891:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3950   001C8E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3951   001C92  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3952   001C96  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3953   001C9A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3954   001C9E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3955   001CA2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3956   001CA6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3957   001CAA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3958   001CAE  EC09  F026         	call	___flge	;wreg free
  3959   001CB2  A0D8               	btfss	status,0,c
  3960   001CB4  EF5E  F00E         	goto	u4801
  3961   001CB8  EF60  F00E         	goto	u4800
  3962   001CBC                     u4801:
  3963   001CBC  EF09  F00E         	goto	l4883
  3964   001CC0                     u4800:
  3965   001CC0                     l1441:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3968   001CC0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3971   001CC4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3972   001CC8                     
  3973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3974   001CC8  0100               	movlb	0	; () banked
  3975   001CCA  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  3976   001CCC  EF6A  F00E         	goto	u4811
  3977   001CD0  EF6C  F00E         	goto	u4810
  3978   001CD4                     u4811:
  3979   001CD4  EF72  F00E         	goto	l4897
  3980   001CD8                     u4810:
  3981   001CD8                     
  3982                           ; BSR set to: 0
  3983   001CD8  C0EF  F06B         	movff	_prec,efgtoa@p
  3984   001CDC  C0F0  F06C         	movff	_prec+1,efgtoa@p+1
  3985   001CE0  EF76  F00E         	goto	l4899
  3986   001CE4                     l4897:
  3987                           
  3988                           ; BSR set to: 0
  3989   001CE4  0E00               	movlw	0
  3990   001CE6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3991   001CE8  0E06               	movlw	6
  3992   001CEA  6F6B               	movwf	efgtoa@p& (0+255),b
  3993   001CEC                     l4899:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3997   001CEC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3998   001CF0  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3999   001CF4                     
  4000                           ; BSR set to: 0
  4001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4002   001CF4  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4003   001CF6  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4004   001CF8                     
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4007   001CF8  0E66               	movlw	102
  4008   001CFA  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4009   001CFC  A4D8               	btfss	status,2,c
  4010   001CFE  EF83  F00E         	goto	u4821
  4011   001D02  EF85  F00E         	goto	u4820
  4012   001D06                     u4821:
  4013   001D06  EFA5  F00E         	goto	l4913
  4014   001D0A                     u4820:
  4015   001D0A                     
  4016                           ; BSR set to: 0
  4017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4018   001D0A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4019   001D0C  EF8C  F00E         	goto	u4830
  4020   001D10  EF8A  F00E         	goto	u4831
  4021   001D14                     u4831:
  4022   001D14  EF98  F00E         	goto	l4909
  4023   001D18                     u4830:
  4024   001D18                     
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4027   001D18  0E00               	movlw	0
  4028   001D1A  6F91               	movwf	efgtoa@u& (0+255),b
  4029   001D1C  0E00               	movlw	0
  4030   001D1E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  4031   001D20  0E80               	movlw	128
  4032   001D22  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  4033   001D24  0E3F               	movlw	63
  4034   001D26  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4037   001D28  0E00               	movlw	0
  4038   001D2A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  4039   001D2C  0E00               	movlw	0
  4040   001D2E  6F78               	movwf	efgtoa@e& (0+255),b
  4041   001D30                     l4909:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4045   001D30  0E67               	movlw	103
  4046   001D32  1972               	xorwf	efgtoa@mode& (0+255),w,b
  4047   001D34  B4D8               	btfsc	status,2,c
  4048   001D36  EF9F  F00E         	goto	u4841
  4049   001D3A  EFA1  F00E         	goto	u4840
  4050   001D3E                     u4841:
  4051   001D3E  EFA5  F00E         	goto	l4913
  4052   001D42                     u4840:
  4053   001D42                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4056   001D42  5178               	movf	efgtoa@e& (0+255),w,b
  4057   001D44  2776               	addwf	efgtoa@m& (0+255),f,b
  4058   001D46  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  4059   001D48  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4060   001D4A                     l4913:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4064   001D4A  0E00               	movlw	0
  4065   001D4C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4066   001D4E  0E00               	movlw	0
  4067   001D50  6F80               	movwf	efgtoa@i& (0+255),b
  4068   001D52                     
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4071   001D52  C08D  F082         	movff	efgtoa@g,efgtoa@h
  4072   001D56  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4073   001D5A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4074   001D5E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4075   001D62                     
  4076                           ; BSR set to: 0
  4077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4078   001D62  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  4079   001D66  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  4080   001D6A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  4081   001D6E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4084   001D72  EF36  F00F         	goto	l4927
  4085   001D76                     l4919:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4089   001D76  C082  F032         	movff	efgtoa@h,___fldiv@b
  4090   001D7A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4091   001D7E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4092   001D82  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4093   001D86  C091  F036         	movff	efgtoa@u,___fldiv@a
  4094   001D8A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4095   001D8E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4096   001D92  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4097   001D96  EC0B  F019         	call	___fldiv	;wreg free
  4098   001D9A  C032  F04B         	movff	?___fldiv,floorf@x
  4099   001D9E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4100   001DA2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4101   001DA6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4102   001DAA  EC87  F020         	call	_floorf	;wreg free
  4103   001DAE  C04B  F086         	movff	?_floorf,efgtoa@l
  4104   001DB2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4105   001DB6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4106   001DBA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4109   001DBE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4110   001DC2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4111   001DC6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4112   001DCA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4113   001DCE  EC86  F025         	call	___fltol	;wreg free
  4114   001DD2  C001  F074         	movff	?___fltol,efgtoa@d
  4115   001DD6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4116   001DDA                     
  4117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4118   001DDA  C082  F02A         	movff	efgtoa@h,___flsub@b
  4119   001DDE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4120   001DE2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4121   001DE6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4122   001DEA  C086  F015         	movff	efgtoa@l,___flmul@a
  4123   001DEE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4124   001DF2  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4125   001DF6  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4126   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  4127   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4128   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4129   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4130   001E0A  ECF6  F016         	call	___flmul	;wreg free
  4131   001E0E  C011  F02E         	movff	?___flmul,___flsub@a
  4132   001E12  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4133   001E16  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4134   001E1A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4135   001E1E  ECEC  F02E         	call	___flsub	;wreg free
  4136   001E22  C02A  F082         	movff	?___flsub,efgtoa@h
  4137   001E26  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4138   001E2A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4139   001E2E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4140   001E32                     
  4141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4142   001E32  C091  F032         	movff	efgtoa@u,___fldiv@b
  4143   001E36  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4144   001E3A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4145   001E3E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4146   001E42  0E00               	movlw	0
  4147   001E44  6E36               	movwf	___fldiv@a^0,c
  4148   001E46  0E00               	movlw	0
  4149   001E48  6E37               	movwf	(___fldiv@a+1)^0,c
  4150   001E4A  0E20               	movlw	32
  4151   001E4C  6E38               	movwf	(___fldiv@a+2)^0,c
  4152   001E4E  0E41               	movlw	65
  4153   001E50  6E39               	movwf	(___fldiv@a+3)^0,c
  4154   001E52  EC0B  F019         	call	___fldiv	;wreg free
  4155   001E56  C032  F091         	movff	?___fldiv,efgtoa@u
  4156   001E5A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4157   001E5E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4158   001E62  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4159   001E66                     
  4160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4161   001E66  0100               	movlb	0	; () banked
  4162   001E68  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4163   001E6A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4164   001E6C                     l4927:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4168   001E6C  5176               	movf	efgtoa@m& (0+255),w,b
  4169   001E6E  5D80               	subwf	efgtoa@i& (0+255),w,b
  4170   001E70  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4171   001E72  0A80               	xorlw	128
  4172   001E74  6F67               	movwf	??_efgtoa& (0+255),b
  4173   001E76  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4174   001E78  0A80               	xorlw	128
  4175   001E7A  5967               	subwfb	??_efgtoa& (0+255),w,b
  4176   001E7C  A0D8               	btfss	status,0,c
  4177   001E7E  EF43  F00F         	goto	u4851
  4178   001E82  EF45  F00F         	goto	u4850
  4179   001E86                     u4851:
  4180   001E86  EFBB  F00E         	goto	l4919
  4181   001E8A                     u4850:
  4182   001E8A                     
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4185   001E8A  C091  F011         	movff	efgtoa@u,___flmul@b
  4186   001E8E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4187   001E92  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4188   001E96  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4189   001E9A  0E00               	movlw	0
  4190   001E9C  6E15               	movwf	___flmul@a^0,c
  4191   001E9E  0E00               	movlw	0
  4192   001EA0  6E16               	movwf	(___flmul@a+1)^0,c
  4193   001EA2  0EA0               	movlw	160
  4194   001EA4  6E17               	movwf	(___flmul@a+2)^0,c
  4195   001EA6  0E40               	movlw	64
  4196   001EA8  6E18               	movwf	(___flmul@a+3)^0,c
  4197   001EAA  ECF6  F016         	call	___flmul	;wreg free
  4198   001EAE  C011  F086         	movff	?___flmul,efgtoa@l
  4199   001EB2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4200   001EB6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4201   001EBA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4202   001EBE                     
  4203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4204   001EBE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4205   001EC2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4206   001EC6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4207   001ECA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4208   001ECE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4209   001ED2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4210   001ED6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4211   001EDA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4212   001EDE  EC09  F026         	call	___flge	;wreg free
  4213   001EE2  B0D8               	btfsc	status,0,c
  4214   001EE4  EF76  F00F         	goto	u4861
  4215   001EE8  EF78  F00F         	goto	u4860
  4216   001EEC                     u4861:
  4217   001EEC  EF83  F00F         	goto	l4935
  4218   001EF0                     u4860:
  4219   001EF0                     
  4220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4221   001EF0  0E00               	movlw	0
  4222   001EF2  0100               	movlb	0	; () banked
  4223   001EF4  6F86               	movwf	efgtoa@l& (0+255),b
  4224   001EF6  0E00               	movlw	0
  4225   001EF8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4226   001EFA  0E00               	movlw	0
  4227   001EFC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4228   001EFE  0E00               	movlw	0
  4229   001F00  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4230                           
  4231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4232   001F02  EFAC  F00F         	goto	l4941
  4233   001F06                     l4935:
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4236   001F06  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4237   001F0A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4238   001F0E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4239   001F12  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4240   001F16  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4241   001F1A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4242   001F1E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4243   001F22  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4244   001F26  EC7A  F028         	call	___fleq	;wreg free
  4245   001F2A  A0D8               	btfss	status,0,c
  4246   001F2C  EF9A  F00F         	goto	u4871
  4247   001F30  EF9C  F00F         	goto	u4870
  4248   001F34                     u4871:
  4249   001F34  EFAC  F00F         	goto	l4941
  4250   001F38                     u4870:
  4251   001F38  0100               	movlb	0	; () banked
  4252   001F3A  B174               	btfsc	efgtoa@d& (0+255),0,b
  4253   001F3C  EFA2  F00F         	goto	u4881
  4254   001F40  EFA4  F00F         	goto	u4880
  4255   001F44                     u4881:
  4256   001F44  EFAC  F00F         	goto	l4941
  4257   001F48                     u4880:
  4258   001F48                     
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4261   001F48  0E00               	movlw	0
  4262   001F4A  6F86               	movwf	efgtoa@l& (0+255),b
  4263   001F4C  0E00               	movlw	0
  4264   001F4E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4265   001F50  0E00               	movlw	0
  4266   001F52  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4267   001F54  0E00               	movlw	0
  4268   001F56  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4269   001F58                     l4941:
  4270                           
  4271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4272   001F58  C08D  F001         	movff	efgtoa@g,___fladd@b
  4273   001F5C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4274   001F60  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4275   001F64  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4276   001F68  C086  F005         	movff	efgtoa@l,___fladd@a
  4277   001F6C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4278   001F70  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4279   001F74  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4280   001F78  EC96  F014         	call	___fladd	;wreg free
  4281   001F7C  C001  F082         	movff	?___fladd,efgtoa@h
  4282   001F80  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4283   001F84  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4284   001F88  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4285   001F8C                     
  4286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4287   001F8C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4288   001F90  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4289   001F94  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4290   001F98  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4291   001F9C  0E00               	movlw	0
  4292   001F9E  6E15               	movwf	___flmul@a^0,c
  4293   001FA0  0E00               	movlw	0
  4294   001FA2  6E16               	movwf	(___flmul@a+1)^0,c
  4295   001FA4  0E20               	movlw	32
  4296   001FA6  6E17               	movwf	(___flmul@a+2)^0,c
  4297   001FA8  0E41               	movlw	65
  4298   001FAA  6E18               	movwf	(___flmul@a+3)^0,c
  4299   001FAC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4300   001FB0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4301   001FB4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4302   001FB8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4303   001FBC  ECF6  F016         	call	___flmul	;wreg free
  4304   001FC0  C011  F02E         	movff	?___flmul,___flge@ff2
  4305   001FC4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4306   001FC8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4307   001FCC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4308   001FD0  EC09  F026         	call	___flge	;wreg free
  4309   001FD4  A0D8               	btfss	status,0,c
  4310   001FD6  EFEF  F00F         	goto	u4891
  4311   001FDA  EFF1  F00F         	goto	u4890
  4312   001FDE                     u4891:
  4313   001FDE  EF1A  F010         	goto	l4953
  4314   001FE2                     u4890:
  4315   001FE2                     
  4316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4317   001FE2  0100               	movlb	0	; () banked
  4318   001FE4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4319   001FE6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4320   001FE8                     
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4323   001FE8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4324   001FEC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4325   001FF0  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4326   001FF4  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4327   001FF8  0E00               	movlw	0
  4328   001FFA  6E15               	movwf	___flmul@a^0,c
  4329   001FFC  0E00               	movlw	0
  4330   001FFE  6E16               	movwf	(___flmul@a+1)^0,c
  4331   002000  0E20               	movlw	32
  4332   002002  6E17               	movwf	(___flmul@a+2)^0,c
  4333   002004  0E41               	movlw	65
  4334   002006  6E18               	movwf	(___flmul@a+3)^0,c
  4335   002008  ECF6  F016         	call	___flmul	;wreg free
  4336   00200C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4337   002010  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4338   002014  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4339   002018  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4340   00201C                     
  4341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4342   00201C  0E66               	movlw	102
  4343   00201E  0100               	movlb	0	; () banked
  4344   002020  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4345   002022  A4D8               	btfss	status,2,c
  4346   002024  EF16  F010         	goto	u4901
  4347   002028  EF18  F010         	goto	u4900
  4348   00202C                     u4901:
  4349   00202C  EF1A  F010         	goto	l4953
  4350   002030                     u4900:
  4351   002030                     
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4354   002030  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4355   002032  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4356   002034                     l4953:
  4357                           
  4358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4359   002034  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4360   002038  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4361   00203C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4362   002040  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4363   002044                     
  4364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4365   002044  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4366   002048  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4367   00204C                     
  4368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4369   00204C  0E00               	movlw	0
  4370   00204E  0100               	movlb	0	; () banked
  4371   002050  6F71               	movwf	efgtoa@pp& (0+255),b
  4372   002052                     
  4373                           ; BSR set to: 0
  4374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4375   002052  0E00               	movlw	0
  4376   002054  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4377   002056  0E00               	movlw	0
  4378   002058  6F6D               	movwf	efgtoa@t& (0+255),b
  4379   00205A                     
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4382   00205A  0E00               	movlw	0
  4383   00205C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4384   00205E  0E00               	movlw	0
  4385   002060  6F80               	movwf	efgtoa@i& (0+255),b
  4386                           
  4387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4388   002062  EF18  F011         	goto	l5003
  4389   002066                     l4963:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4393   002066  C082  F032         	movff	efgtoa@h,___fldiv@b
  4394   00206A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4395   00206E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4396   002072  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4397   002076  C091  F036         	movff	efgtoa@u,___fldiv@a
  4398   00207A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4399   00207E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4400   002082  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4401   002086  EC0B  F019         	call	___fldiv	;wreg free
  4402   00208A  C032  F04B         	movff	?___fldiv,floorf@x
  4403   00208E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4404   002092  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4405   002096  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4406   00209A  EC87  F020         	call	_floorf	;wreg free
  4407   00209E  C04B  F086         	movff	?_floorf,efgtoa@l
  4408   0020A2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4409   0020A6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4410   0020AA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4411                           
  4412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4413   0020AE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4414   0020B2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4415   0020B6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4416   0020BA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4417   0020BE  EC86  F025         	call	___fltol	;wreg free
  4418   0020C2  BE02               	btfsc	(?___fltol+1)^0,7,c
  4419   0020C4  EF6F  F010         	goto	u4910
  4420   0020C8  5002               	movf	(?___fltol+1)^0,w,c
  4421   0020CA  E107               	bnz	u4911
  4422   0020CC  0E0A               	movlw	10
  4423   0020CE  5C01               	subwf	?___fltol^0,w,c
  4424   0020D0  B0D8               	btfsc	status,0,c
  4425   0020D2  EF6D  F010         	goto	u4911
  4426   0020D6  EF6F  F010         	goto	u4910
  4427   0020DA                     u4911:
  4428   0020DA  EF7F  F010         	goto	l4967
  4429   0020DE                     u4910:
  4430   0020DE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4431   0020E2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4432   0020E6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4433   0020EA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4434   0020EE  EC86  F025         	call	___fltol	;wreg free
  4435   0020F2  C001  F074         	movff	?___fltol,efgtoa@d
  4436   0020F6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4437   0020FA  EF84  F010         	goto	l1471
  4438   0020FE                     l4967:
  4439   0020FE  0E00               	movlw	0
  4440   002100  0100               	movlb	0	; () banked
  4441   002102  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4442   002104  0E09               	movlw	9
  4443   002106  6F74               	movwf	efgtoa@d& (0+255),b
  4444   002108                     l1471:
  4445                           
  4446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4447   002108  0100               	movlb	0	; () banked
  4448   00210A  5171               	movf	efgtoa@pp& (0+255),w,b
  4449   00210C  A4D8               	btfss	status,2,c
  4450   00210E  EF8B  F010         	goto	u4921
  4451   002112  EF8D  F010         	goto	u4920
  4452   002116                     u4921:
  4453   002116  EFB5  F010         	goto	l4987
  4454   00211A                     u4920:
  4455   00211A                     
  4456                           ; BSR set to: 0
  4457   00211A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4458   00211C  EF94  F010         	goto	u4930
  4459   002120  EF92  F010         	goto	u4931
  4460   002124                     u4931:
  4461   002124  EFB5  F010         	goto	l4987
  4462   002128                     u4930:
  4463   002128                     
  4464                           ; BSR set to: 0
  4465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4466   002128  0EA0               	movlw	low _dbuf
  4467   00212A  258B               	addwf	efgtoa@n& (0+255),w,b
  4468   00212C  6ED9               	movwf	fsr2l,c
  4469   00212E  0E02               	movlw	high _dbuf
  4470   002130  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4471   002132  6EDA               	movwf	fsr2h,c
  4472   002134  0E2E               	movlw	46
  4473   002136  6EDF               	movwf	indf2,c
  4474   002138                     
  4475                           ; BSR set to: 0
  4476   002138  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4477   00213A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4478   00213C                     
  4479                           ; BSR set to: 0
  4480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4481   00213C  077A               	decf	efgtoa@w& (0+255),f,b
  4482   00213E  A0D8               	btfss	status,0,c
  4483   002140  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4484   002142                     
  4485                           ; BSR set to: 0
  4486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4487   002142  0E01               	movlw	1
  4488   002144  6F71               	movwf	efgtoa@pp& (0+255),b
  4489   002146  EFB5  F010         	goto	l4987
  4490   00214A                     l4979:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4494   00214A  0EA0               	movlw	low _dbuf
  4495   00214C  258B               	addwf	efgtoa@n& (0+255),w,b
  4496   00214E  6ED9               	movwf	fsr2l,c
  4497   002150  0E02               	movlw	high _dbuf
  4498   002152  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4499   002154  6EDA               	movwf	fsr2h,c
  4500   002156  0E30               	movlw	48
  4501   002158  6EDF               	movwf	indf2,c
  4502   00215A                     
  4503                           ; BSR set to: 0
  4504   00215A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4505   00215C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4506   00215E                     
  4507                           ; BSR set to: 0
  4508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4509   00215E  077A               	decf	efgtoa@w& (0+255),f,b
  4510   002160  A0D8               	btfss	status,0,c
  4511   002162  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4512   002164                     
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4515   002164  076D               	decf	efgtoa@t& (0+255),f,b
  4516   002166  A0D8               	btfss	status,0,c
  4517   002168  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4518   00216A                     l4987:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4522   00216A  516D               	movf	efgtoa@t& (0+255),w,b
  4523   00216C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4524   00216E  A4D8               	btfss	status,2,c
  4525   002170  EFBC  F010         	goto	u4941
  4526   002174  EFBE  F010         	goto	u4940
  4527   002178                     u4941:
  4528   002178  EFA5  F010         	goto	l4979
  4529   00217C                     u4940:
  4530   00217C                     
  4531                           ; BSR set to: 0
  4532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4533   00217C  0EA0               	movlw	low _dbuf
  4534   00217E  258B               	addwf	efgtoa@n& (0+255),w,b
  4535   002180  6ED9               	movwf	fsr2l,c
  4536   002182  0E02               	movlw	high _dbuf
  4537   002184  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4538   002186  6EDA               	movwf	fsr2h,c
  4539   002188  5174               	movf	efgtoa@d& (0+255),w,b
  4540   00218A  0F30               	addlw	48
  4541   00218C  6EDF               	movwf	indf2,c
  4542   00218E                     
  4543                           ; BSR set to: 0
  4544   00218E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4545   002190  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4546   002192                     
  4547                           ; BSR set to: 0
  4548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4549   002192  077A               	decf	efgtoa@w& (0+255),f,b
  4550   002194  A0D8               	btfss	status,0,c
  4551   002196  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4552   002198                     
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4555   002198  C082  F02A         	movff	efgtoa@h,___flsub@b
  4556   00219C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4557   0021A0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4558   0021A4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4559   0021A8  C086  F015         	movff	efgtoa@l,___flmul@a
  4560   0021AC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4561   0021B0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4562   0021B4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4563   0021B8  C091  F011         	movff	efgtoa@u,___flmul@b
  4564   0021BC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4565   0021C0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4566   0021C4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4567   0021C8  ECF6  F016         	call	___flmul	;wreg free
  4568   0021CC  C011  F02E         	movff	?___flmul,___flsub@a
  4569   0021D0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4570   0021D4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4571   0021D8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4572   0021DC  ECEC  F02E         	call	___flsub	;wreg free
  4573   0021E0  C02A  F082         	movff	?___flsub,efgtoa@h
  4574   0021E4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4575   0021E8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4576   0021EC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4577   0021F0                     
  4578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4579   0021F0  C091  F032         	movff	efgtoa@u,___fldiv@b
  4580   0021F4  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4581   0021F8  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4582   0021FC  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4583   002200  0E00               	movlw	0
  4584   002202  6E36               	movwf	___fldiv@a^0,c
  4585   002204  0E00               	movlw	0
  4586   002206  6E37               	movwf	(___fldiv@a+1)^0,c
  4587   002208  0E20               	movlw	32
  4588   00220A  6E38               	movwf	(___fldiv@a+2)^0,c
  4589   00220C  0E41               	movlw	65
  4590   00220E  6E39               	movwf	(___fldiv@a+3)^0,c
  4591   002210  EC0B  F019         	call	___fldiv	;wreg free
  4592   002214  C032  F091         	movff	?___fldiv,efgtoa@u
  4593   002218  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4594   00221C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4595   002220  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4596   002224                     
  4597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4598   002224  0100               	movlb	0	; () banked
  4599   002226  0769               	decf	efgtoa@ne& (0+255),f,b
  4600   002228  A0D8               	btfss	status,0,c
  4601   00222A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4602   00222C                     
  4603                           ; BSR set to: 0
  4604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4605   00222C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4606   00222E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4607   002230                     l5003:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4611   002230  5176               	movf	efgtoa@m& (0+255),w,b
  4612   002232  5D80               	subwf	efgtoa@i& (0+255),w,b
  4613   002234  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4614   002236  0A80               	xorlw	128
  4615   002238  6F67               	movwf	??_efgtoa& (0+255),b
  4616   00223A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4617   00223C  0A80               	xorlw	128
  4618   00223E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4619   002240  B0D8               	btfsc	status,0,c
  4620   002242  EF25  F011         	goto	u4951
  4621   002246  EF27  F011         	goto	u4950
  4622   00224A                     u4951:
  4623   00224A  EF35  F011         	goto	l5007
  4624   00224E                     u4950:
  4625   00224E                     
  4626                           ; BSR set to: 0
  4627   00224E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4628   002250  EF33  F011         	goto	u4961
  4629   002254  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4630   002256  E109               	bnz	u4960
  4631   002258  0E4B               	movlw	75
  4632   00225A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4633   00225C  A0D8               	btfss	status,0,c
  4634   00225E  EF33  F011         	goto	u4961
  4635   002262  EF35  F011         	goto	u4960
  4636   002266                     u4961:
  4637   002266  EF33  F010         	goto	l4963
  4638   00226A                     u4960:
  4639   00226A                     l5007:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4643   00226A  0E00               	movlw	0
  4644   00226C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4645   00226E  0E4F               	movlw	79
  4646   002270  6F80               	movwf	efgtoa@i& (0+255),b
  4647   002272                     
  4648                           ; BSR set to: 0
  4649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4650   002272  0EA0               	movlw	low _dbuf
  4651   002274  2580               	addwf	efgtoa@i& (0+255),w,b
  4652   002276  6ED9               	movwf	fsr2l,c
  4653   002278  0E02               	movlw	high _dbuf
  4654   00227A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4655   00227C  6EDA               	movwf	fsr2h,c
  4656   00227E  0E00               	movlw	0
  4657   002280  6EDF               	movwf	indf2,c
  4658   002282                     
  4659                           ; BSR set to: 0
  4660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4661   002282  0EA0               	movlw	low _dbuf
  4662   002284  6F67               	movwf	??_efgtoa& (0+255),b
  4663   002286  0E02               	movlw	high _dbuf
  4664   002288  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4665   00228A  518B               	movf	efgtoa@n& (0+255),w,b
  4666   00228C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4667   00228E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4668   002290  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4669   002292  5180               	movf	efgtoa@i& (0+255),w,b
  4670   002294  2567               	addwf	??_efgtoa& (0+255),w,b
  4671   002296  6E01               	movwf	memcpy@d1^0,c
  4672   002298  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4673   00229A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4674   00229C  6E02               	movwf	(memcpy@d1+1)^0,c
  4675   00229E  0EA0               	movlw	low _dbuf
  4676   0022A0  6E03               	movwf	memcpy@s1^0,c
  4677   0022A2  0E02               	movlw	high _dbuf
  4678   0022A4  6E04               	movwf	(memcpy@s1+1)^0,c
  4679   0022A6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4680   0022AA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4681   0022AE  ECB0  F02D         	call	_memcpy	;wreg free
  4682   0022B2                     
  4683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4684   0022B2  0100               	movlb	0	; () banked
  4685   0022B4  518B               	movf	efgtoa@n& (0+255),w,b
  4686   0022B6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4687   0022B8  6F8B               	movwf	efgtoa@n& (0+255),b
  4688   0022BA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4689   0022BC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4690   0022BE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4691   0022C0                     
  4692                           ; BSR set to: 0
  4693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4694   0022C0  518A               	movf	efgtoa@sign& (0+255),w,b
  4695   0022C2  A4D8               	btfss	status,2,c
  4696   0022C4  EF66  F011         	goto	u4971
  4697   0022C8  EF69  F011         	goto	u4970
  4698   0022CC                     u4971:
  4699   0022CC  0E01               	movlw	1
  4700   0022CE  EF6A  F011         	goto	u4980
  4701   0022D2                     u4970:
  4702   0022D2  0E00               	movlw	0
  4703   0022D4                     u4980:
  4704   0022D4  6F80               	movwf	efgtoa@i& (0+255),b
  4705   0022D6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4706   0022D8                     
  4707                           ; BSR set to: 0
  4708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4709   0022D8  518A               	movf	efgtoa@sign& (0+255),w,b
  4710   0022DA  B4D8               	btfsc	status,2,c
  4711   0022DC  EF72  F011         	goto	u4991
  4712   0022E0  EF74  F011         	goto	u4990
  4713   0022E4                     u4991:
  4714   0022E4  EF7F  F011         	goto	l5021
  4715   0022E8                     u4990:
  4716   0022E8                     
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4719   0022E8  078B               	decf	efgtoa@n& (0+255),f,b
  4720   0022EA  A0D8               	btfss	status,0,c
  4721   0022EC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4722   0022EE  0EA0               	movlw	low _dbuf
  4723   0022F0  258B               	addwf	efgtoa@n& (0+255),w,b
  4724   0022F2  6ED9               	movwf	fsr2l,c
  4725   0022F4  0E02               	movlw	high _dbuf
  4726   0022F6  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4727   0022F8  6EDA               	movwf	fsr2h,c
  4728   0022FA  C08A  FFDF         	movff	efgtoa@sign,indf2
  4729   0022FE                     l5021:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4733   0022FE  5180               	movf	efgtoa@i& (0+255),w,b
  4734   002300  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4735   002302  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4736   002304  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4737   002306                     
  4738                           ; BSR set to: 0
  4739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4740   002306  C060  F011         	movff	efgtoa@fp,pad@fp
  4741   00230A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4742   00230E  0EA0               	movlw	low _dbuf
  4743   002310  258B               	addwf	efgtoa@n& (0+255),w,b
  4744   002312  6E13               	movwf	pad@buf^0,c
  4745   002314  0E02               	movlw	high _dbuf
  4746   002316  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4747   002318  6E14               	movwf	(pad@buf+1)^0,c
  4748   00231A  C07A  F015         	movff	efgtoa@w,pad@p
  4749   00231E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4750   002322  ECCF  F02A         	call	_pad	;wreg free
  4751   002326                     l1438:
  4752   002326  0012               	return		;funcret
  4753   002328                     __end_of_efgtoa:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function _strcpy *****************
  4757 ;; Defined at:
  4758 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4761 ;;		 -> dbuf(80), 
  4762 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4763 ;;		 -> STR_6(4), STR_3(4), 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  d               2    6[COMRAM] PTR unsigned char 
  4766 ;;		 -> dbuf(80), 
  4767 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4768 ;;		 -> STR_6(4), STR_3(4), 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  2    0[COMRAM] PTR unsigned char 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;Total ram usage:        8 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_efgtoa
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text6
  4792   005E1E                     __ptext6:
  4793                           	callstack 0
  4794   005E1E                     _strcpy:
  4795                           	callstack 26
  4796   005E1E  C003  F005         	movff	strcpy@src,strcpy@s
  4797   005E22  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4798   005E26  C001  F007         	movff	strcpy@dest,strcpy@d
  4799   005E2A  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4800   005E2E                     l4627:
  4801   005E2E  C005  FFF6         	movff	strcpy@s,tblptrl
  4802   005E32  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4803   005E36  4A05               	infsnz	strcpy@s^0,f,c
  4804   005E38  2A06               	incf	(strcpy@s+1)^0,f,c
  4805   005E3A                     	if	0	;tblptru may be non-zero
  4806   005E3A                     	endif
  4807   005E3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4808   005E3A  0E00               	movlw	low (__mediumconst shr (0+16))
  4809   005E3C  6EF8               	movwf	tblptru,c
  4810   005E3E                     	endif
  4811   005E3E  C007  FFD9         	movff	strcpy@d,fsr2l
  4812   005E42  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4813   005E46  4A07               	infsnz	strcpy@d^0,f,c
  4814   005E48  2A08               	incf	(strcpy@d+1)^0,f,c
  4815   005E4A  0008               	tblrd		*
  4816   005E4C  CFF5 FFDF          	movff	tablat,indf2
  4817   005E50  50DF               	movf	indf2,w,c
  4818   005E52  A4D8               	btfss	status,2,c
  4819   005E54  EF2E  F02F         	goto	u4321
  4820   005E58  EF30  F02F         	goto	u4320
  4821   005E5C                     u4321:
  4822   005E5C  EF17  F02F         	goto	l4627
  4823   005E60                     u4320:
  4824   005E60  0012               	return		;funcret
  4825   005E62                     __end_of_strcpy:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function _memcpy *****************
  4829 ;; Defined at:
  4830 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  d1              2    0[COMRAM] PTR void 
  4833 ;;		 -> dbuf(80), 
  4834 ;;  s1              2    2[COMRAM] PTR const void 
  4835 ;;		 -> dbuf(80), 
  4836 ;;  n               2    4[COMRAM] unsigned int 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4839 ;;		 -> dbuf(80), 
  4840 ;;  d               2    6[COMRAM] PTR unsigned char 
  4841 ;;		 -> dbuf(80), 
  4842 ;;  tmp             1   10[COMRAM] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  2    0[COMRAM] PTR void 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4852 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;Total ram usage:       11 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_efgtoa
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text7
  4866   005B60                     __ptext7:
  4867                           	callstack 0
  4868   005B60                     _memcpy:
  4869                           	callstack 26
  4870   005B60  C003  F009         	movff	memcpy@s1,memcpy@s
  4871   005B64  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4872   005B68  C001  F007         	movff	memcpy@d1,memcpy@d
  4873   005B6C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4874   005B70  EFCA  F02D         	goto	l4671
  4875   005B74                     l4663:
  4876   005B74  C009  FFD9         	movff	memcpy@s,fsr2l
  4877   005B78  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4878   005B7C  50DF               	movf	indf2,w,c
  4879   005B7E  6E0B               	movwf	memcpy@tmp^0,c
  4880   005B80  4A09               	infsnz	memcpy@s^0,f,c
  4881   005B82  2A0A               	incf	(memcpy@s+1)^0,f,c
  4882   005B84  C007  FFD9         	movff	memcpy@d,fsr2l
  4883   005B88  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4884   005B8C  C00B  FFDF         	movff	memcpy@tmp,indf2
  4885   005B90  4A07               	infsnz	memcpy@d^0,f,c
  4886   005B92  2A08               	incf	(memcpy@d+1)^0,f,c
  4887   005B94                     l4671:
  4888   005B94  0605               	decf	memcpy@n^0,f,c
  4889   005B96  A0D8               	btfss	status,0,c
  4890   005B98  0606               	decf	(memcpy@n+1)^0,f,c
  4891   005B9A  2805               	incf	memcpy@n^0,w,c
  4892   005B9C  E106               	bnz	u4441
  4893   005B9E  2806               	incf	(memcpy@n+1)^0,w,c
  4894   005BA0  A4D8               	btfss	status,2,c
  4895   005BA2  EFD5  F02D         	goto	u4441
  4896   005BA6  EFD7  F02D         	goto	u4440
  4897   005BAA                     u4441:
  4898   005BAA  EFBA  F02D         	goto	l4663
  4899   005BAE                     u4440:
  4900   005BAE  0012               	return		;funcret
  4901   005BB0                     __end_of_memcpy:
  4902                           	callstack 0
  4903                           
  4904 ;; *************** function _labs *****************
  4905 ;; Defined at:
  4906 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  a               4    0[COMRAM] long 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  4    0[COMRAM] long 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4924 ;;Total ram usage:        8 bytes
  4925 ;; Hardware stack levels used: 1
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_efgtoa
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text8
  4934   00568C                     __ptext8:
  4935                           	callstack 0
  4936   00568C                     _labs:
  4937                           	callstack 26
  4938   00568C  BE04               	btfsc	(labs@a+3)^0,7,c
  4939   00568E  EF55  F02B         	goto	u4330
  4940   005692  5004               	movf	(labs@a+3)^0,w,c
  4941   005694  1003               	iorwf	(labs@a+2)^0,w,c
  4942   005696  1002               	iorwf	(labs@a+1)^0,w,c
  4943   005698  E106               	bnz	u4331
  4944   00569A  0401               	decf	labs@a^0,w,c
  4945   00569C  B0D8               	btfsc	status,0,c
  4946   00569E  EF53  F02B         	goto	u4331
  4947   0056A2  EF55  F02B         	goto	u4330
  4948   0056A6                     u4331:
  4949   0056A6  EF70  F02B         	goto	l1543
  4950   0056AA                     u4330:
  4951   0056AA  C001  F005         	movff	labs@a,??_labs
  4952   0056AE  C002  F006         	movff	labs@a+1,??_labs+1
  4953   0056B2  C003  F007         	movff	labs@a+2,??_labs+2
  4954   0056B6  C004  F008         	movff	labs@a+3,??_labs+3
  4955   0056BA  1E05               	comf	??_labs^0,f,c
  4956   0056BC  1E06               	comf	(??_labs+1)^0,f,c
  4957   0056BE  1E07               	comf	(??_labs+2)^0,f,c
  4958   0056C0  1E08               	comf	(??_labs+3)^0,f,c
  4959   0056C2  2A05               	incf	??_labs^0,f,c
  4960   0056C4  0E00               	movlw	0
  4961   0056C6  2206               	addwfc	(??_labs+1)^0,f,c
  4962   0056C8  2207               	addwfc	(??_labs+2)^0,f,c
  4963   0056CA  2208               	addwfc	(??_labs+3)^0,f,c
  4964   0056CC  C005  F001         	movff	??_labs,?_labs
  4965   0056D0  C006  F002         	movff	??_labs+1,?_labs+1
  4966   0056D4  C007  F003         	movff	??_labs+2,?_labs+2
  4967   0056D8  C008  F004         	movff	??_labs+3,?_labs+3
  4968   0056DC  EF78  F02B         	goto	l1546
  4969   0056E0                     l1543:
  4970   0056E0  C001  F001         	movff	labs@a,?_labs
  4971   0056E4  C002  F002         	movff	labs@a+1,?_labs+1
  4972   0056E8  C003  F003         	movff	labs@a+2,?_labs+2
  4973   0056EC  C004  F004         	movff	labs@a+3,?_labs+3
  4974   0056F0                     l1546:
  4975   0056F0  0012               	return		;funcret
  4976   0056F2                     __end_of_labs:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function _floorf *****************
  4980 ;; Defined at:
  4981 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  x               4   74[COMRAM] float 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  u               4   90[COMRAM] struct .
  4986 ;;  m               4   84[COMRAM] unsigned long 
  4987 ;;  e               2   88[COMRAM] int 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  4   74[COMRAM] float 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;Total ram usage:       20 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_efgtoa
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text9
  5011   00410E                     __ptext9:
  5012                           	callstack 0
  5013   00410E                     _floorf:
  5014                           	callstack 26
  5015   00410E  C0E5  F05B         	movff	floorf@F526,floorf@u
  5016   004112  C0E6  F05C         	movff	floorf@F526+1,floorf@u+1
  5017   004116  C0E7  F05D         	movff	floorf@F526+2,floorf@u+2
  5018   00411A  C0E8  F05E         	movff	floorf@F526+3,floorf@u+3
  5019   00411E  C04B  F05B         	movff	floorf@x,floorf@u
  5020   004122  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  5021   004126  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  5022   00412A  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  5023   00412E  0E81               	movlw	129
  5024   004130  6E4F               	movwf	??_floorf^0,c
  5025   004132  0EFF               	movlw	255
  5026   004134  6E50               	movwf	(??_floorf+1)^0,c
  5027   004136  C05B  F051         	movff	floorf@u,??_floorf+2
  5028   00413A  C05C  F052         	movff	floorf@u+1,??_floorf+3
  5029   00413E  C05D  F053         	movff	floorf@u+2,??_floorf+4
  5030   004142  C05E  F054         	movff	floorf@u+3,??_floorf+5
  5031   004146  0E18               	movlw	24
  5032   004148  EFAB  F020         	goto	u4340
  5033   00414C                     u4345:
  5034   00414C  90D8               	bcf	status,0,c
  5035   00414E  3254               	rrcf	(??_floorf+5)^0,f,c
  5036   004150  3253               	rrcf	(??_floorf+4)^0,f,c
  5037   004152  3252               	rrcf	(??_floorf+3)^0,f,c
  5038   004154  3251               	rrcf	(??_floorf+2)^0,f,c
  5039   004156                     u4340:
  5040   004156  2EE8               	decfsz	wreg,f,c
  5041   004158  EFA6  F020         	goto	u4345
  5042   00415C  5051               	movf	(??_floorf+2)^0,w,c
  5043   00415E  244F               	addwf	??_floorf^0,w,c
  5044   004160  6E59               	movwf	floorf@e^0,c
  5045   004162  0E00               	movlw	0
  5046   004164  2050               	addwfc	(??_floorf+1)^0,w,c
  5047   004166  6E5A               	movwf	(floorf@e+1)^0,c
  5048   004168  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5049   00416A  EFC0  F020         	goto	u4351
  5050   00416E  505A               	movf	(floorf@e+1)^0,w,c
  5051   004170  E109               	bnz	u4350
  5052   004172  0E17               	movlw	23
  5053   004174  5C59               	subwf	floorf@e^0,w,c
  5054   004176  A0D8               	btfss	status,0,c
  5055   004178  EFC0  F020         	goto	u4351
  5056   00417C  EFC2  F020         	goto	u4350
  5057   004180                     u4351:
  5058   004180  EFCC  F020         	goto	l4639
  5059   004184                     u4350:
  5060   004184                     l4637:
  5061   004184  C04B  F04B         	movff	floorf@x,?_floorf
  5062   004188  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  5063   00418C  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  5064   004190  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  5065   004194  EF8F  F021         	goto	l1532
  5066   004198                     l4639:
  5067   004198  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5068   00419A  EFD1  F020         	goto	u4361
  5069   00419E  EFD3  F020         	goto	u4360
  5070   0041A2                     u4361:
  5071   0041A2  EF43  F021         	goto	l4649
  5072   0041A6                     u4360:
  5073   0041A6  C059  F04F         	movff	floorf@e,??_floorf
  5074   0041AA  0EFF               	movlw	255
  5075   0041AC  6E50               	movwf	(??_floorf+1)^0,c
  5076   0041AE  0EFF               	movlw	255
  5077   0041B0  6E51               	movwf	(??_floorf+2)^0,c
  5078   0041B2  0E7F               	movlw	127
  5079   0041B4  6E52               	movwf	(??_floorf+3)^0,c
  5080   0041B6  0E00               	movlw	0
  5081   0041B8  6E53               	movwf	(??_floorf+4)^0,c
  5082   0041BA                     u4375:
  5083   0041BA  664F               	tstfsz	??_floorf^0,c
  5084   0041BC  EFE2  F020         	goto	u4376
  5085   0041C0  EFEA  F020         	goto	u4377
  5086   0041C4                     u4376:
  5087   0041C4  3453               	rlcf	(??_floorf+4)^0,w,c
  5088   0041C6  3253               	rrcf	(??_floorf+4)^0,f,c
  5089   0041C8  3252               	rrcf	(??_floorf+3)^0,f,c
  5090   0041CA  3251               	rrcf	(??_floorf+2)^0,f,c
  5091   0041CC  3250               	rrcf	(??_floorf+1)^0,f,c
  5092   0041CE  2E4F               	decfsz	??_floorf^0,f,c
  5093   0041D0  EFDD  F020         	goto	u4375
  5094   0041D4                     u4377:
  5095   0041D4  C050  F055         	movff	??_floorf+1,floorf@m
  5096   0041D8  C051  F056         	movff	??_floorf+2,floorf@m+1
  5097   0041DC  C052  F057         	movff	??_floorf+3,floorf@m+2
  5098   0041E0  C053  F058         	movff	??_floorf+4,floorf@m+3
  5099   0041E4  5055               	movf	floorf@m^0,w,c
  5100   0041E6  145B               	andwf	floorf@u^0,w,c
  5101   0041E8  6E4F               	movwf	??_floorf^0,c
  5102   0041EA  5056               	movf	(floorf@m+1)^0,w,c
  5103   0041EC  145C               	andwf	(floorf@u+1)^0,w,c
  5104   0041EE  6E50               	movwf	(??_floorf+1)^0,c
  5105   0041F0  5057               	movf	(floorf@m+2)^0,w,c
  5106   0041F2  145D               	andwf	(floorf@u+2)^0,w,c
  5107   0041F4  6E51               	movwf	(??_floorf+2)^0,c
  5108   0041F6  5058               	movf	(floorf@m+3)^0,w,c
  5109   0041F8  145E               	andwf	(floorf@u+3)^0,w,c
  5110   0041FA  6E52               	movwf	(??_floorf+3)^0,c
  5111   0041FC  504F               	movf	??_floorf^0,w,c
  5112   0041FE  1050               	iorwf	(??_floorf+1)^0,w,c
  5113   004200  1051               	iorwf	(??_floorf+2)^0,w,c
  5114   004202  1052               	iorwf	(??_floorf+3)^0,w,c
  5115   004204  A4D8               	btfss	status,2,c
  5116   004206  EF07  F021         	goto	u4381
  5117   00420A  EF09  F021         	goto	u4380
  5118   00420E                     u4381:
  5119   00420E  EF0B  F021         	goto	l4645
  5120   004212                     u4380:
  5121   004212  EFC2  F020         	goto	l4637
  5122   004216                     l4645:
  5123   004216  C05B  F04F         	movff	floorf@u,??_floorf
  5124   00421A  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5125   00421E  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5126   004222  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5127   004226  0E20               	movlw	32
  5128   004228  EF1B  F021         	goto	u4390
  5129   00422C                     u4395:
  5130   00422C  90D8               	bcf	status,0,c
  5131   00422E  3252               	rrcf	(??_floorf+3)^0,f,c
  5132   004230  3251               	rrcf	(??_floorf+2)^0,f,c
  5133   004232  3250               	rrcf	(??_floorf+1)^0,f,c
  5134   004234  324F               	rrcf	??_floorf^0,f,c
  5135   004236                     u4390:
  5136   004236  2EE8               	decfsz	wreg,f,c
  5137   004238  EF16  F021         	goto	u4395
  5138   00423C  504F               	movf	??_floorf^0,w,c
  5139   00423E  1050               	iorwf	(??_floorf+1)^0,w,c
  5140   004240  1051               	iorwf	(??_floorf+2)^0,w,c
  5141   004242  1052               	iorwf	(??_floorf+3)^0,w,c
  5142   004244  B4D8               	btfsc	status,2,c
  5143   004246  EF27  F021         	goto	u4401
  5144   00424A  EF29  F021         	goto	u4400
  5145   00424E                     u4401:
  5146   00424E  EF31  F021         	goto	l1535
  5147   004252                     u4400:
  5148   004252  5055               	movf	floorf@m^0,w,c
  5149   004254  265B               	addwf	floorf@u^0,f,c
  5150   004256  5056               	movf	(floorf@m+1)^0,w,c
  5151   004258  225C               	addwfc	(floorf@u+1)^0,f,c
  5152   00425A  5057               	movf	(floorf@m+2)^0,w,c
  5153   00425C  225D               	addwfc	(floorf@u+2)^0,f,c
  5154   00425E  5058               	movf	(floorf@m+3)^0,w,c
  5155   004260  225E               	addwfc	(floorf@u+3)^0,f,c
  5156   004262                     l1535:
  5157   004262  1C55               	comf	floorf@m^0,w,c
  5158   004264  6E4F               	movwf	??_floorf^0,c
  5159   004266  1C56               	comf	(floorf@m+1)^0,w,c
  5160   004268  6E50               	movwf	(??_floorf+1)^0,c
  5161   00426A  1C57               	comf	(floorf@m+2)^0,w,c
  5162   00426C  6E51               	movwf	(??_floorf+2)^0,c
  5163   00426E  1C58               	comf	(floorf@m+3)^0,w,c
  5164   004270  6E52               	movwf	(??_floorf+3)^0,c
  5165   004272  504F               	movf	??_floorf^0,w,c
  5166   004274  165B               	andwf	floorf@u^0,f,c
  5167   004276  5050               	movf	(??_floorf+1)^0,w,c
  5168   004278  165C               	andwf	(floorf@u+1)^0,f,c
  5169   00427A  5051               	movf	(??_floorf+2)^0,w,c
  5170   00427C  165D               	andwf	(floorf@u+2)^0,f,c
  5171   00427E  5052               	movf	(??_floorf+3)^0,w,c
  5172   004280  165E               	andwf	(floorf@u+3)^0,f,c
  5173   004282  EF87  F021         	goto	l4657
  5174   004286                     l4649:
  5175   004286  C05B  F04F         	movff	floorf@u,??_floorf
  5176   00428A  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5177   00428E  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5178   004292  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5179   004296  0E20               	movlw	32
  5180   004298  EF53  F021         	goto	u4410
  5181   00429C                     u4415:
  5182   00429C  90D8               	bcf	status,0,c
  5183   00429E  3252               	rrcf	(??_floorf+3)^0,f,c
  5184   0042A0  3251               	rrcf	(??_floorf+2)^0,f,c
  5185   0042A2  3250               	rrcf	(??_floorf+1)^0,f,c
  5186   0042A4  324F               	rrcf	??_floorf^0,f,c
  5187   0042A6                     u4410:
  5188   0042A6  2EE8               	decfsz	wreg,f,c
  5189   0042A8  EF4E  F021         	goto	u4415
  5190   0042AC  504F               	movf	??_floorf^0,w,c
  5191   0042AE  1050               	iorwf	(??_floorf+1)^0,w,c
  5192   0042B0  1051               	iorwf	(??_floorf+2)^0,w,c
  5193   0042B2  1052               	iorwf	(??_floorf+3)^0,w,c
  5194   0042B4  A4D8               	btfss	status,2,c
  5195   0042B6  EF5F  F021         	goto	u4421
  5196   0042BA  EF61  F021         	goto	u4420
  5197   0042BE                     u4421:
  5198   0042BE  EF6B  F021         	goto	l4653
  5199   0042C2                     u4420:
  5200   0042C2  0E00               	movlw	0
  5201   0042C4  6E5B               	movwf	floorf@u^0,c
  5202   0042C6  0E00               	movlw	0
  5203   0042C8  6E5C               	movwf	(floorf@u+1)^0,c
  5204   0042CA  0E00               	movlw	0
  5205   0042CC  6E5D               	movwf	(floorf@u+2)^0,c
  5206   0042CE  0E00               	movlw	0
  5207   0042D0  6E5E               	movwf	(floorf@u+3)^0,c
  5208   0042D2  EF87  F021         	goto	l4657
  5209   0042D6                     l4653:
  5210   0042D6  90D8               	bcf	status,0,c
  5211   0042D8  345B               	rlcf	floorf@u^0,w,c
  5212   0042DA  6E4F               	movwf	??_floorf^0,c
  5213   0042DC  345C               	rlcf	(floorf@u+1)^0,w,c
  5214   0042DE  6E50               	movwf	(??_floorf+1)^0,c
  5215   0042E0  345D               	rlcf	(floorf@u+2)^0,w,c
  5216   0042E2  6E51               	movwf	(??_floorf+2)^0,c
  5217   0042E4  345E               	rlcf	(floorf@u+3)^0,w,c
  5218   0042E6  6E52               	movwf	(??_floorf+3)^0,c
  5219   0042E8  504F               	movf	??_floorf^0,w,c
  5220   0042EA  1050               	iorwf	(??_floorf+1)^0,w,c
  5221   0042EC  1051               	iorwf	(??_floorf+2)^0,w,c
  5222   0042EE  1052               	iorwf	(??_floorf+3)^0,w,c
  5223   0042F0  B4D8               	btfsc	status,2,c
  5224   0042F2  EF7D  F021         	goto	u4431
  5225   0042F6  EF7F  F021         	goto	u4430
  5226   0042FA                     u4431:
  5227   0042FA  EF87  F021         	goto	l4657
  5228   0042FE                     u4430:
  5229   0042FE  0E00               	movlw	0
  5230   004300  6E5B               	movwf	floorf@u^0,c
  5231   004302  0E00               	movlw	0
  5232   004304  6E5C               	movwf	(floorf@u+1)^0,c
  5233   004306  0E80               	movlw	128
  5234   004308  6E5D               	movwf	(floorf@u+2)^0,c
  5235   00430A  0EBF               	movlw	191
  5236   00430C  6E5E               	movwf	(floorf@u+3)^0,c
  5237   00430E                     l4657:
  5238   00430E  C05B  F04B         	movff	floorf@u,?_floorf
  5239   004312  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5240   004316  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5241   00431A  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5242   00431E                     l1532:
  5243   00431E  0012               	return		;funcret
  5244   004320                     __end_of_floorf:
  5245                           	callstack 0
  5246                           
  5247 ;; *************** function ___fpclassifyf *****************
  5248 ;; Defined at:
  5249 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  x               4    0[COMRAM] float 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  u               4   10[COMRAM] struct .
  5254 ;;  e               2    8[COMRAM] int 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  2    0[COMRAM] int 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;Total ram usage:       14 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_efgtoa
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text10
  5278   004D16                     __ptext10:
  5279                           	callstack 0
  5280   004D16                     ___fpclassifyf:
  5281                           	callstack 26
  5282   004D16  C0E9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5283   004D1A  C0EA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5284   004D1E  C0EB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5285   004D22  C0EC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5286   004D26  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5287   004D2A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5288   004D2E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5289   004D32  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5290   004D36  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5291   004D3A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5292   004D3E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5293   004D42  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5294   004D46  0E18               	movlw	24
  5295   004D48  EFAB  F026         	goto	u4250
  5296   004D4C                     u4255:
  5297   004D4C  90D8               	bcf	status,0,c
  5298   004D4E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5299   004D50  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5300   004D52  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5301   004D54  3205               	rrcf	??___fpclassifyf^0,f,c
  5302   004D56                     u4250:
  5303   004D56  2EE8               	decfsz	wreg,f,c
  5304   004D58  EFA6  F026         	goto	u4255
  5305   004D5C  5005               	movf	??___fpclassifyf^0,w,c
  5306   004D5E  6E09               	movwf	___fpclassifyf@e^0,c
  5307   004D60  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5308   004D62  5009               	movf	___fpclassifyf@e^0,w,c
  5309   004D64  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5310   004D66  A4D8               	btfss	status,2,c
  5311   004D68  EFB8  F026         	goto	u4261
  5312   004D6C  EFBA  F026         	goto	u4260
  5313   004D70                     u4261:
  5314   004D70  EFDA  F026         	goto	l4615
  5315   004D74                     u4260:
  5316   004D74  90D8               	bcf	status,0,c
  5317   004D76  340B               	rlcf	___fpclassifyf@u^0,w,c
  5318   004D78  6E05               	movwf	??___fpclassifyf^0,c
  5319   004D7A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5320   004D7C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5321   004D7E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5322   004D80  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5323   004D82  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5324   004D84  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5325   004D86  5005               	movf	??___fpclassifyf^0,w,c
  5326   004D88  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5327   004D8A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5328   004D8C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5329   004D8E  A4D8               	btfss	status,2,c
  5330   004D90  EFCC  F026         	goto	u4271
  5331   004D94  EFCE  F026         	goto	u4270
  5332   004D98                     u4271:
  5333   004D98  EFD4  F026         	goto	l4611
  5334   004D9C                     u4270:
  5335   004D9C  0E00               	movlw	0
  5336   004D9E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5337   004DA0  0E02               	movlw	2
  5338   004DA2  6E01               	movwf	?___fpclassifyf^0,c
  5339   004DA4  EF09  F027         	goto	l1518
  5340   004DA8                     l4611:
  5341   004DA8  0E00               	movlw	0
  5342   004DAA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5343   004DAC  0E03               	movlw	3
  5344   004DAE  6E01               	movwf	?___fpclassifyf^0,c
  5345   004DB0  EF09  F027         	goto	l1518
  5346   004DB4                     l4615:
  5347   004DB4  2809               	incf	___fpclassifyf@e^0,w,c
  5348   004DB6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5349   004DB8  A4D8               	btfss	status,2,c
  5350   004DBA  EFE1  F026         	goto	u4281
  5351   004DBE  EFE3  F026         	goto	u4280
  5352   004DC2                     u4281:
  5353   004DC2  EF05  F027         	goto	l4621
  5354   004DC6                     u4280:
  5355   004DC6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5356   004DCA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5357   004DCE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5358   004DD2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5359   004DD6  0E09               	movlw	9
  5360   004DD8                     u4295:
  5361   004DD8  90D8               	bcf	status,0,c
  5362   004DDA  3605               	rlcf	??___fpclassifyf^0,f,c
  5363   004DDC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5364   004DDE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5365   004DE0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5366   004DE2  2EE8               	decfsz	wreg,f,c
  5367   004DE4  EFEC  F026         	goto	u4295
  5368   004DE8  5005               	movf	??___fpclassifyf^0,w,c
  5369   004DEA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5370   004DEC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5371   004DEE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5372   004DF0  B4D8               	btfsc	status,2,c
  5373   004DF2  EFFD  F026         	goto	u4301
  5374   004DF6  EF00  F027         	goto	u4300
  5375   004DFA                     u4301:
  5376   004DFA  0E01               	movlw	1
  5377   004DFC  EF01  F027         	goto	u4310
  5378   004E00                     u4300:
  5379   004E00  0E00               	movlw	0
  5380   004E02                     u4310:
  5381   004E02  6E01               	movwf	?___fpclassifyf^0,c
  5382   004E04  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5383   004E06  EF09  F027         	goto	l1518
  5384   004E0A                     l4621:
  5385   004E0A  0E00               	movlw	0
  5386   004E0C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5387   004E0E  0E04               	movlw	4
  5388   004E10  6E01               	movwf	?___fpclassifyf^0,c
  5389   004E12                     l1518:
  5390   004E12  0012               	return		;funcret
  5391   004E14                     __end_of___fpclassifyf:
  5392                           	callstack 0
  5393                           
  5394 ;; *************** function ___fltol *****************
  5395 ;; Defined at:
  5396 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  f1              4    0[COMRAM] int 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  exp1            1    9[COMRAM] unsigned char 
  5401 ;;  sign1           1    8[COMRAM] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  4    0[COMRAM] long 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;Total ram usage:       10 bytes
  5416 ;; Hardware stack levels used: 1
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_reverseOneBlock
  5421 ;;		_ForwardOneBlock
  5422 ;;		_Forwardhalfblock
  5423 ;;		_efgtoa
  5424 ;;		_Backhalfblock
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text11
  5429   004B0C                     __ptext11:
  5430                           	callstack 0
  5431   004B0C                     ___fltol:
  5432                           	callstack 26
  5433   004B0C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5434   004B0E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5435   004B10  6E0A               	movwf	___fltol@exp1^0,c
  5436   004B12  500A               	movf	___fltol@exp1^0,w,c
  5437   004B14  A4D8               	btfss	status,2,c
  5438   004B16  EF8F  F025         	goto	u4151
  5439   004B1A  EF91  F025         	goto	u4150
  5440   004B1E                     u4151:
  5441   004B1E  EF9B  F025         	goto	l4547
  5442   004B22                     u4150:
  5443   004B22                     l4543:
  5444   004B22  0E00               	movlw	0
  5445   004B24  6E01               	movwf	?___fltol^0,c
  5446   004B26  0E00               	movlw	0
  5447   004B28  6E02               	movwf	(?___fltol+1)^0,c
  5448   004B2A  0E00               	movlw	0
  5449   004B2C  6E03               	movwf	(?___fltol+2)^0,c
  5450   004B2E  0E00               	movlw	0
  5451   004B30  6E04               	movwf	(?___fltol+3)^0,c
  5452   004B32  EF08  F026         	goto	l991
  5453   004B36                     l4547:
  5454   004B36  C001  F005         	movff	___fltol@f1,??___fltol
  5455   004B3A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5456   004B3E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5457   004B42  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5458   004B46  0E20               	movlw	32
  5459   004B48  EFAB  F025         	goto	u4160
  5460   004B4C                     u4165:
  5461   004B4C  90D8               	bcf	status,0,c
  5462   004B4E  3208               	rrcf	(??___fltol+3)^0,f,c
  5463   004B50  3207               	rrcf	(??___fltol+2)^0,f,c
  5464   004B52  3206               	rrcf	(??___fltol+1)^0,f,c
  5465   004B54  3205               	rrcf	??___fltol^0,f,c
  5466   004B56                     u4160:
  5467   004B56  2EE8               	decfsz	wreg,f,c
  5468   004B58  EFA6  F025         	goto	u4165
  5469   004B5C  5005               	movf	??___fltol^0,w,c
  5470   004B5E  6E09               	movwf	___fltol@sign1^0,c
  5471   004B60  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5472   004B62  0EFF               	movlw	255
  5473   004B64  1601               	andwf	___fltol@f1^0,f,c
  5474   004B66  0EFF               	movlw	255
  5475   004B68  1602               	andwf	(___fltol@f1+1)^0,f,c
  5476   004B6A  0EFF               	movlw	255
  5477   004B6C  1603               	andwf	(___fltol@f1+2)^0,f,c
  5478   004B6E  0E00               	movlw	0
  5479   004B70  1604               	andwf	(___fltol@f1+3)^0,f,c
  5480   004B72  0E96               	movlw	150
  5481   004B74  5E0A               	subwf	___fltol@exp1^0,f,c
  5482   004B76  BE0A               	btfsc	___fltol@exp1^0,7,c
  5483   004B78  EFC2  F025         	goto	u4170
  5484   004B7C  EFC0  F025         	goto	u4171
  5485   004B80                     u4171:
  5486   004B80  EFD8  F025         	goto	l4567
  5487   004B84                     u4170:
  5488   004B84  500A               	movf	___fltol@exp1^0,w,c
  5489   004B86  0A80               	xorlw	128
  5490   004B88  0F97               	addlw	151
  5491   004B8A  B0D8               	btfsc	status,0,c
  5492   004B8C  EFCA  F025         	goto	u4181
  5493   004B90  EFCC  F025         	goto	u4180
  5494   004B94                     u4181:
  5495   004B94  EFCE  F025         	goto	l4563
  5496   004B98                     u4180:
  5497   004B98  EF91  F025         	goto	l4543
  5498   004B9C                     l4563:
  5499   004B9C  90D8               	bcf	status,0,c
  5500   004B9E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5501   004BA0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5502   004BA2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5503   004BA4  3201               	rrcf	___fltol@f1^0,f,c
  5504   004BA6  3E0A               	incfsz	___fltol@exp1^0,f,c
  5505   004BA8  EFCE  F025         	goto	l4563
  5506   004BAC  EFF0  F025         	goto	l4577
  5507   004BB0                     l4567:
  5508   004BB0  0E1F               	movlw	31
  5509   004BB2  640A               	cpfsgt	___fltol@exp1^0,c
  5510   004BB4  EFDE  F025         	goto	u4191
  5511   004BB8  EFE0  F025         	goto	u4190
  5512   004BBC                     u4191:
  5513   004BBC  EFE8  F025         	goto	l4575
  5514   004BC0                     u4190:
  5515   004BC0  EF91  F025         	goto	l4543
  5516   004BC4                     l4573:
  5517   004BC4  90D8               	bcf	status,0,c
  5518   004BC6  3601               	rlcf	___fltol@f1^0,f,c
  5519   004BC8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5520   004BCA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5521   004BCC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5522   004BCE  060A               	decf	___fltol@exp1^0,f,c
  5523   004BD0                     l4575:
  5524   004BD0  500A               	movf	___fltol@exp1^0,w,c
  5525   004BD2  A4D8               	btfss	status,2,c
  5526   004BD4  EFEE  F025         	goto	u4201
  5527   004BD8  EFF0  F025         	goto	u4200
  5528   004BDC                     u4201:
  5529   004BDC  EFE2  F025         	goto	l4573
  5530   004BE0                     u4200:
  5531   004BE0                     l4577:
  5532   004BE0  5009               	movf	___fltol@sign1^0,w,c
  5533   004BE2  B4D8               	btfsc	status,2,c
  5534   004BE4  EFF6  F025         	goto	u4211
  5535   004BE8  EFF8  F025         	goto	u4210
  5536   004BEC                     u4211:
  5537   004BEC  EF00  F026         	goto	l4581
  5538   004BF0                     u4210:
  5539   004BF0  1E04               	comf	(___fltol@f1+3)^0,f,c
  5540   004BF2  1E03               	comf	(___fltol@f1+2)^0,f,c
  5541   004BF4  1E02               	comf	(___fltol@f1+1)^0,f,c
  5542   004BF6  6C01               	negf	___fltol@f1^0,c
  5543   004BF8  0E00               	movlw	0
  5544   004BFA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5545   004BFC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5546   004BFE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5547   004C00                     l4581:
  5548   004C00  C001  F001         	movff	___fltol@f1,?___fltol
  5549   004C04  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5550   004C08  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5551   004C0C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5552   004C10                     l991:
  5553   004C10  0012               	return		;funcret
  5554   004C12                     __end_of___fltol:
  5555                           	callstack 0
  5556                           
  5557 ;; *************** function ___flneg *****************
  5558 ;; Defined at:
  5559 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  f1              4    0[COMRAM] long 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  4    0[COMRAM] long 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5577 ;;Total ram usage:        4 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_efgtoa
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text12
  5587   005FA4                     __ptext12:
  5588                           	callstack 0
  5589   005FA4                     ___flneg:
  5590                           	callstack 26
  5591   005FA4  5001               	movf	___flneg@f1^0,w,c
  5592   005FA6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5593   005FA8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5594   005FAA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5595   005FAC  B4D8               	btfsc	status,2,c
  5596   005FAE  EFDB  F02F         	goto	u4141
  5597   005FB2  EFDD  F02F         	goto	u4140
  5598   005FB6                     u4141:
  5599   005FB6  EFE5  F02F         	goto	l4537
  5600   005FBA                     u4140:
  5601   005FBA  0E00               	movlw	0
  5602   005FBC  1A01               	xorwf	___flneg@f1^0,f,c
  5603   005FBE  0E00               	movlw	0
  5604   005FC0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5605   005FC2  0E00               	movlw	0
  5606   005FC4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5607   005FC6  0E80               	movlw	128
  5608   005FC8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5609   005FCA                     l4537:
  5610   005FCA  C001  F001         	movff	___flneg@f1,?___flneg
  5611   005FCE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5612   005FD2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5613   005FD6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5614   005FDA  0012               	return		;funcret
  5615   005FDC                     __end_of___flneg:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function _dtoa *****************
  5619 ;; Defined at:
  5620 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5623 ;;		 -> sprintf@f(11), 
  5624 ;;  d               8   29[COMRAM] long long 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  n               8   51[COMRAM] long long 
  5627 ;;  i               2   59[COMRAM] int 
  5628 ;;  w               2   49[COMRAM] int 
  5629 ;;  p               2   47[COMRAM] int 
  5630 ;;  s               1   61[COMRAM] unsigned char 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5640 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5644 ;;Total ram usage:       35 bytes
  5645 ;; Hardware stack levels used: 1
  5646 ;; Hardware stack levels required when called: 4
  5647 ;; This function calls:
  5648 ;;		___aodiv
  5649 ;;		___aomod
  5650 ;;		_abs
  5651 ;;		_pad
  5652 ;; This function is called by:
  5653 ;;		_vfpfcnvrt
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text13
  5658   003E90                     __ptext13:
  5659                           	callstack 0
  5660   003E90                     _dtoa:
  5661                           	callstack 23
  5662   003E90                     
  5663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5664   003E90  C01E  F034         	movff	dtoa@d,dtoa@n
  5665   003E94  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5666   003E98  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5667   003E9C  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5668   003EA0  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5669   003EA4  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5670   003EA8  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5671   003EAC  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5672   003EB0                     
  5673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5674   003EB0  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5675   003EB2  EF5D  F01F         	goto	u4581
  5676   003EB6  EF60  F01F         	goto	u4580
  5677   003EBA                     u4581:
  5678   003EBA  0E01               	movlw	1
  5679   003EBC  EF61  F01F         	goto	u4590
  5680   003EC0                     u4580:
  5681   003EC0  0E00               	movlw	0
  5682   003EC2                     u4590:
  5683   003EC2  6E3E               	movwf	dtoa@s^0,c
  5684   003EC4                     
  5685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5686   003EC4  503E               	movf	dtoa@s^0,w,c
  5687   003EC6  B4D8               	btfsc	status,2,c
  5688   003EC8  EF68  F01F         	goto	u4601
  5689   003ECC  EF6A  F01F         	goto	u4600
  5690   003ED0                     u4601:
  5691   003ED0  EF7A  F01F         	goto	l4761
  5692   003ED4                     u4600:
  5693   003ED4                     
  5694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5695   003ED4  1E3B               	comf	(dtoa@n+7)^0,f,c
  5696   003ED6  1E3A               	comf	(dtoa@n+6)^0,f,c
  5697   003ED8  1E39               	comf	(dtoa@n+5)^0,f,c
  5698   003EDA  1E38               	comf	(dtoa@n+4)^0,f,c
  5699   003EDC  1E37               	comf	(dtoa@n+3)^0,f,c
  5700   003EDE  1E36               	comf	(dtoa@n+2)^0,f,c
  5701   003EE0  1E35               	comf	(dtoa@n+1)^0,f,c
  5702   003EE2  6C34               	negf	dtoa@n^0,c
  5703   003EE4  0E00               	movlw	0
  5704   003EE6  2235               	addwfc	(dtoa@n+1)^0,f,c
  5705   003EE8  2236               	addwfc	(dtoa@n+2)^0,f,c
  5706   003EEA  2237               	addwfc	(dtoa@n+3)^0,f,c
  5707   003EEC  2238               	addwfc	(dtoa@n+4)^0,f,c
  5708   003EEE  2239               	addwfc	(dtoa@n+5)^0,f,c
  5709   003EF0  223A               	addwfc	(dtoa@n+6)^0,f,c
  5710   003EF2  223B               	addwfc	(dtoa@n+7)^0,f,c
  5711   003EF4                     l4761:
  5712                           
  5713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5714   003EF4  0100               	movlb	0	; () banked
  5715   003EF6  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  5716   003EF8  EF88  F01F         	goto	u4610
  5717   003EFC  51F0               	movf	(_prec+1)& (0+255),w,b
  5718   003EFE  E106               	bnz	u4611
  5719   003F00  05EF               	decf	_prec& (0+255),w,b
  5720   003F02  B0D8               	btfsc	status,0,c
  5721   003F04  EF86  F01F         	goto	u4611
  5722   003F08  EF88  F01F         	goto	u4610
  5723   003F0C                     u4611:
  5724   003F0C  EF8E  F01F         	goto	l1413
  5725   003F10                     u4610:
  5726   003F10                     
  5727                           ; BSR set to: 0
  5728   003F10  0E00               	movlw	0
  5729   003F12  6E31               	movwf	(dtoa@p+1)^0,c
  5730   003F14  0E01               	movlw	1
  5731   003F16  6E30               	movwf	dtoa@p^0,c
  5732   003F18  EF92  F01F         	goto	l1415
  5733   003F1C                     l1413:
  5734                           
  5735                           ; BSR set to: 0
  5736   003F1C  C0EF  F030         	movff	_prec,dtoa@p
  5737   003F20  C0F0  F031         	movff	_prec+1,dtoa@p+1
  5738   003F24                     l1415:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5742   003F24  C0ED  F032         	movff	_width,dtoa@w
  5743   003F28  C0EE  F033         	movff	_width+1,dtoa@w+1
  5744   003F2C                     
  5745                           ; BSR set to: 0
  5746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5747   003F2C  503E               	movf	dtoa@s^0,w,c
  5748   003F2E  B4D8               	btfsc	status,2,c
  5749   003F30  EF9C  F01F         	goto	u4621
  5750   003F34  EF9E  F01F         	goto	u4620
  5751   003F38                     u4621:
  5752   003F38  EFB5  F01F         	goto	l1416
  5753   003F3C                     u4620:
  5754   003F3C                     
  5755                           ; BSR set to: 0
  5756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5757   003F3C  0632               	decf	dtoa@w^0,f,c
  5758   003F3E  A0D8               	btfss	status,0,c
  5759   003F40  0633               	decf	(dtoa@w+1)^0,f,c
  5760   003F42                     
  5761                           ; BSR set to: 0
  5762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5763   003F42  503E               	movf	dtoa@s^0,w,c
  5764   003F44  A4D8               	btfss	status,2,c
  5765   003F46  EFA7  F01F         	goto	u4631
  5766   003F4A  EFA9  F01F         	goto	u4630
  5767   003F4E                     u4631:
  5768   003F4E  EFAF  F01F         	goto	l4773
  5769   003F52                     u4630:
  5770   003F52                     
  5771                           ; BSR set to: 0
  5772   003F52  0E00               	movlw	0
  5773   003F54  6E2F               	movwf	(_dtoa$2741+1)^0,c
  5774   003F56  0E2B               	movlw	43
  5775   003F58  6E2E               	movwf	_dtoa$2741^0,c
  5776   003F5A  EFB3  F01F         	goto	l4775
  5777   003F5E                     l4773:
  5778                           
  5779                           ; BSR set to: 0
  5780   003F5E  0E00               	movlw	0
  5781   003F60  6E2F               	movwf	(_dtoa$2741+1)^0,c
  5782   003F62  0E2D               	movlw	45
  5783   003F64  6E2E               	movwf	_dtoa$2741^0,c
  5784   003F66                     l4775:
  5785                           
  5786                           ; BSR set to: 0
  5787   003F66  C02E  F03E         	movff	_dtoa$2741,dtoa@s
  5788   003F6A                     l1416:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5792   003F6A  0E00               	movlw	0
  5793   003F6C  6E3D               	movwf	(dtoa@i+1)^0,c
  5794   003F6E  0E4F               	movlw	79
  5795   003F70  6E3C               	movwf	dtoa@i^0,c
  5796   003F72                     
  5797                           ; BSR set to: 0
  5798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5799   003F72  0E00               	movlw	0
  5800   003F74  0102               	movlb	2	; () banked
  5801   003F76  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5802                           
  5803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5804   003F78  EF3A  F020         	goto	l4789
  5805   003F7C                     l4779:
  5806                           
  5807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5808   003F7C  063C               	decf	dtoa@i^0,f,c
  5809   003F7E  A0D8               	btfss	status,0,c
  5810   003F80  063D               	decf	(dtoa@i+1)^0,f,c
  5811   003F82                     
  5812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5813   003F82  0EA0               	movlw	low _dbuf
  5814   003F84  243C               	addwf	dtoa@i^0,w,c
  5815   003F86  6ED9               	movwf	fsr2l,c
  5816   003F88  0E02               	movlw	high _dbuf
  5817   003F8A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5818   003F8C  6EDA               	movwf	fsr2h,c
  5819   003F8E  C034  F001         	movff	dtoa@n,___aomod@dividend
  5820   003F92  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5821   003F96  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5822   003F9A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5823   003F9E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5824   003FA2  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5825   003FA6  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5826   003FAA  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5827   003FAE  0E0A               	movlw	10
  5828   003FB0  6E09               	movwf	___aomod@divisor^0,c
  5829   003FB2  0E00               	movlw	0
  5830   003FB4  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5831   003FB6  0E00               	movlw	0
  5832   003FB8  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5833   003FBA  0E00               	movlw	0
  5834   003FBC  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5835   003FBE  0E00               	movlw	0
  5836   003FC0  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5837   003FC2  0E00               	movlw	0
  5838   003FC4  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5839   003FC6  0E00               	movlw	0
  5840   003FC8  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5841   003FCA  0E00               	movlw	0
  5842   003FCC  6E10               	movwf	(___aomod@divisor+7)^0,c
  5843   003FCE  ECD4  F024         	call	___aomod	;wreg free
  5844   003FD2  C001  F026         	movff	?___aomod,??_dtoa
  5845   003FD6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5846   003FDA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5847   003FDE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5848   003FE2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5849   003FE6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5850   003FEA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5851   003FEE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5852   003FF2  C026  F013         	movff	??_dtoa,abs@a
  5853   003FF6  C027  F014         	movff	??_dtoa+1,abs@a+1
  5854   003FFA  EC74  F02F         	call	_abs	;wreg free
  5855   003FFE  5013               	movf	?_abs^0,w,c
  5856   004000  0F30               	addlw	48
  5857   004002  6EDF               	movwf	indf2,c
  5858   004004                     
  5859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5860   004004  0630               	decf	dtoa@p^0,f,c
  5861   004006  A0D8               	btfss	status,0,c
  5862   004008  0631               	decf	(dtoa@p+1)^0,f,c
  5863   00400A                     
  5864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5865   00400A  0632               	decf	dtoa@w^0,f,c
  5866   00400C  A0D8               	btfss	status,0,c
  5867   00400E  0633               	decf	(dtoa@w+1)^0,f,c
  5868   004010                     
  5869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5870   004010  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5871   004014  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5872   004018  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5873   00401C  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5874   004020  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5875   004024  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5876   004028  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5877   00402C  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5878   004030  0E0A               	movlw	10
  5879   004032  6E09               	movwf	___aodiv@divisor^0,c
  5880   004034  0E00               	movlw	0
  5881   004036  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5882   004038  0E00               	movlw	0
  5883   00403A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5884   00403C  0E00               	movlw	0
  5885   00403E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5886   004040  0E00               	movlw	0
  5887   004042  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5888   004044  0E00               	movlw	0
  5889   004046  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5890   004048  0E00               	movlw	0
  5891   00404A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5892   00404C  0E00               	movlw	0
  5893   00404E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5894   004050  EC5A  F023         	call	___aodiv	;wreg free
  5895   004054  C001  F034         	movff	?___aodiv,dtoa@n
  5896   004058  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5897   00405C  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5898   004060  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5899   004064  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5900   004068  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5901   00406C  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5902   004070  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5903   004074                     l4789:
  5904                           
  5905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5906   004074  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5907   004076  EF45  F020         	goto	u4641
  5908   00407A  503D               	movf	(dtoa@i+1)^0,w,c
  5909   00407C  E108               	bnz	u4640
  5910   00407E  043C               	decf	dtoa@i^0,w,c
  5911   004080  A0D8               	btfss	status,0,c
  5912   004082  EF45  F020         	goto	u4641
  5913   004086  EF47  F020         	goto	u4640
  5914   00408A                     u4641:
  5915   00408A  EF63  F020         	goto	l4795
  5916   00408E                     u4640:
  5917   00408E  5034               	movf	dtoa@n^0,w,c
  5918   004090  1035               	iorwf	(dtoa@n+1)^0,w,c
  5919   004092  1036               	iorwf	(dtoa@n+2)^0,w,c
  5920   004094  1037               	iorwf	(dtoa@n+3)^0,w,c
  5921   004096  1038               	iorwf	(dtoa@n+4)^0,w,c
  5922   004098  1039               	iorwf	(dtoa@n+5)^0,w,c
  5923   00409A  103A               	iorwf	(dtoa@n+6)^0,w,c
  5924   00409C  103B               	iorwf	(dtoa@n+7)^0,w,c
  5925   00409E  A4D8               	btfss	status,2,c
  5926   0040A0  EF54  F020         	goto	u4651
  5927   0040A4  EF56  F020         	goto	u4650
  5928   0040A8                     u4651:
  5929   0040A8  EFBE  F01F         	goto	l4779
  5930   0040AC                     u4650:
  5931   0040AC  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5932   0040AE  EF63  F020         	goto	u4660
  5933   0040B2  5031               	movf	(dtoa@p+1)^0,w,c
  5934   0040B4  E106               	bnz	u4661
  5935   0040B6  0430               	decf	dtoa@p^0,w,c
  5936   0040B8  B0D8               	btfsc	status,0,c
  5937   0040BA  EF61  F020         	goto	u4661
  5938   0040BE  EF63  F020         	goto	u4660
  5939   0040C2                     u4661:
  5940   0040C2  EFBE  F01F         	goto	l4779
  5941   0040C6                     u4660:
  5942   0040C6                     l4795:
  5943                           
  5944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5945   0040C6  503E               	movf	dtoa@s^0,w,c
  5946   0040C8  B4D8               	btfsc	status,2,c
  5947   0040CA  EF69  F020         	goto	u4671
  5948   0040CE  EF6B  F020         	goto	u4670
  5949   0040D2                     u4671:
  5950   0040D2  EF76  F020         	goto	l4801
  5951   0040D6                     u4670:
  5952   0040D6                     
  5953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5954   0040D6  063C               	decf	dtoa@i^0,f,c
  5955   0040D8  A0D8               	btfss	status,0,c
  5956   0040DA  063D               	decf	(dtoa@i+1)^0,f,c
  5957   0040DC                     
  5958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5959   0040DC  0EA0               	movlw	low _dbuf
  5960   0040DE  243C               	addwf	dtoa@i^0,w,c
  5961   0040E0  6ED9               	movwf	fsr2l,c
  5962   0040E2  0E02               	movlw	high _dbuf
  5963   0040E4  203D               	addwfc	(dtoa@i+1)^0,w,c
  5964   0040E6  6EDA               	movwf	fsr2h,c
  5965   0040E8  C03E  FFDF         	movff	dtoa@s,indf2
  5966   0040EC                     l4801:
  5967                           
  5968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5969   0040EC  C01C  F011         	movff	dtoa@fp,pad@fp
  5970   0040F0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5971   0040F4  0EA0               	movlw	low _dbuf
  5972   0040F6  243C               	addwf	dtoa@i^0,w,c
  5973   0040F8  6E13               	movwf	pad@buf^0,c
  5974   0040FA  0E02               	movlw	high _dbuf
  5975   0040FC  203D               	addwfc	(dtoa@i+1)^0,w,c
  5976   0040FE  6E14               	movwf	(pad@buf+1)^0,c
  5977   004100  C032  F015         	movff	dtoa@w,pad@p
  5978   004104  C033  F016         	movff	dtoa@w+1,pad@p+1
  5979   004108  ECCF  F02A         	call	_pad	;wreg free
  5980   00410C  0012               	return		;funcret
  5981   00410E                     __end_of_dtoa:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _pad *****************
  5985 ;; Defined at:
  5986 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5989 ;;		 -> sprintf@f(11), 
  5990 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5991 ;;		 -> dbuf(80), 
  5992 ;;  p               2   20[COMRAM] int 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  w               2   25[COMRAM] int 
  5995 ;;  i               2   23[COMRAM] int 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      void 
  5998 ;; Registers used:
  5999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6005 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;Total ram usage:       11 bytes
  6010 ;; Hardware stack levels used: 1
  6011 ;; Hardware stack levels required when called: 3
  6012 ;; This function calls:
  6013 ;;		_fputc
  6014 ;;		_fputs
  6015 ;; This function is called by:
  6016 ;;		_dtoa
  6017 ;;		_efgtoa
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text14
  6022   00559E                     __ptext14:
  6023                           	callstack 0
  6024   00559E                     _pad:
  6025                           	callstack 23
  6026   00559E                     
  6027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  6028   00559E  BE16               	btfsc	(pad@p+1)^0,7,c
  6029   0055A0  EFD4  F02A         	goto	u4221
  6030   0055A4  EFD6  F02A         	goto	u4220
  6031   0055A8                     u4221:
  6032   0055A8  EFDC  F02A         	goto	l4589
  6033   0055AC                     u4220:
  6034   0055AC  C015  F01A         	movff	pad@p,pad@w
  6035   0055B0  C016  F01B         	movff	pad@p+1,pad@w+1
  6036   0055B4  EFE0  F02A         	goto	l1404
  6037   0055B8                     l4589:
  6038   0055B8  0E00               	movlw	0
  6039   0055BA  6E1B               	movwf	(pad@w+1)^0,c
  6040   0055BC  0E00               	movlw	0
  6041   0055BE  6E1A               	movwf	pad@w^0,c
  6042   0055C0                     l1404:
  6043                           
  6044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6045   0055C0  0E00               	movlw	0
  6046   0055C2  6E19               	movwf	(pad@i+1)^0,c
  6047   0055C4  0E00               	movlw	0
  6048   0055C6  6E18               	movwf	pad@i^0,c
  6049                           
  6050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6051   0055C8  EFF2  F02A         	goto	l4595
  6052   0055CC                     l4591:
  6053                           
  6054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6055   0055CC  0E00               	movlw	0
  6056   0055CE  6E02               	movwf	(fputc@c+1)^0,c
  6057   0055D0  0E20               	movlw	32
  6058   0055D2  6E01               	movwf	fputc@c^0,c
  6059   0055D4  C011  F003         	movff	pad@fp,fputc@fp
  6060   0055D8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6061   0055DC  EC0A  F027         	call	_fputc	;wreg free
  6062   0055E0                     
  6063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6064   0055E0  4A18               	infsnz	pad@i^0,f,c
  6065   0055E2  2A19               	incf	(pad@i+1)^0,f,c
  6066   0055E4                     l4595:
  6067                           
  6068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6069   0055E4  501A               	movf	pad@w^0,w,c
  6070   0055E6  5C18               	subwf	pad@i^0,w,c
  6071   0055E8  5019               	movf	(pad@i+1)^0,w,c
  6072   0055EA  0A80               	xorlw	128
  6073   0055EC  6E17               	movwf	??_pad^0,c
  6074   0055EE  501B               	movf	(pad@w+1)^0,w,c
  6075   0055F0  0A80               	xorlw	128
  6076   0055F2  5817               	subwfb	??_pad^0,w,c
  6077   0055F4  A0D8               	btfss	status,0,c
  6078   0055F6  EFFF  F02A         	goto	u4231
  6079   0055FA  EF01  F02B         	goto	u4230
  6080   0055FE                     u4231:
  6081   0055FE  EFE6  F02A         	goto	l4591
  6082   005602                     u4230:
  6083   005602                     
  6084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6085   005602  C013  F00A         	movff	pad@buf,fputs@s
  6086   005606  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6087   00560A  C011  F00C         	movff	pad@fp,fputs@fp
  6088   00560E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6089   005612  EC31  F02F         	call	_fputs	;wreg free
  6090   005616  0012               	return		;funcret
  6091   005618                     __end_of_pad:
  6092                           	callstack 0
  6093                           
  6094 ;; *************** function _fputs *****************
  6095 ;; Defined at:
  6096 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6099 ;;		 -> dbuf(80), 
  6100 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6101 ;;		 -> sprintf@f(11), 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  i               2   14[COMRAM] int 
  6104 ;;  c               1   13[COMRAM] unsigned char 
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  2    9[COMRAM] int 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6115 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;Total ram usage:        7 bytes
  6119 ;; Hardware stack levels used: 1
  6120 ;; Hardware stack levels required when called: 2
  6121 ;; This function calls:
  6122 ;;		_fputc
  6123 ;; This function is called by:
  6124 ;;		_pad
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text15
  6129   005E62                     __ptext15:
  6130                           	callstack 0
  6131   005E62                     _fputs:
  6132                           	callstack 23
  6133   005E62  0E00               	movlw	0
  6134   005E64  6E10               	movwf	(fputs@i+1)^0,c
  6135   005E66  0E00               	movlw	0
  6136   005E68  6E0F               	movwf	fputs@i^0,c
  6137   005E6A  EF42  F02F         	goto	l4123
  6138   005E6E                     l4119:
  6139   005E6E  C00E  F001         	movff	fputs@c,fputc@c
  6140   005E72  6A02               	clrf	(fputc@c+1)^0,c
  6141   005E74  C00C  F003         	movff	fputs@fp,fputc@fp
  6142   005E78  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6143   005E7C  EC0A  F027         	call	_fputc	;wreg free
  6144   005E80  4A0F               	infsnz	fputs@i^0,f,c
  6145   005E82  2A10               	incf	(fputs@i+1)^0,f,c
  6146   005E84                     l4123:
  6147   005E84  500F               	movf	fputs@i^0,w,c
  6148   005E86  240A               	addwf	fputs@s^0,w,c
  6149   005E88  6ED9               	movwf	fsr2l,c
  6150   005E8A  5010               	movf	(fputs@i+1)^0,w,c
  6151   005E8C  200B               	addwfc	(fputs@s+1)^0,w,c
  6152   005E8E  6EDA               	movwf	fsr2h,c
  6153   005E90  50DF               	movf	indf2,w,c
  6154   005E92  6E0E               	movwf	fputs@c^0,c
  6155   005E94  500E               	movf	fputs@c^0,w,c
  6156   005E96  A4D8               	btfss	status,2,c
  6157   005E98  EF50  F02F         	goto	u3481
  6158   005E9C  EF52  F02F         	goto	u3480
  6159   005EA0                     u3481:
  6160   005EA0  EF37  F02F         	goto	l4119
  6161   005EA4                     u3480:
  6162   005EA4  0012               	return		;funcret
  6163   005EA6                     __end_of_fputs:
  6164                           	callstack 0
  6165                           
  6166 ;; *************** function _fputc *****************
  6167 ;; Defined at:
  6168 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  c               2    0[COMRAM] int 
  6171 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6172 ;;		 -> sprintf@f(11), 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  2    0[COMRAM] int 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;Total ram usage:        9 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; Hardware stack levels required when called: 1
  6191 ;; This function calls:
  6192 ;;		_putch
  6193 ;; This function is called by:
  6194 ;;		_pad
  6195 ;;		_vfpfcnvrt
  6196 ;;		_fputs
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text16
  6201   004E14                     __ptext16:
  6202                           	callstack 0
  6203   004E14                     _fputc:
  6204                           	callstack 26
  6205   004E14  5003               	movf	fputc@fp^0,w,c
  6206   004E16  1004               	iorwf	(fputc@fp+1)^0,w,c
  6207   004E18  B4D8               	btfsc	status,2,c
  6208   004E1A  EF11  F027         	goto	u3021
  6209   004E1E  EF13  F027         	goto	u3020
  6210   004E22                     u3021:
  6211   004E22  EF1C  F027         	goto	l3877
  6212   004E26                     u3020:
  6213   004E26  5003               	movf	fputc@fp^0,w,c
  6214   004E28  1004               	iorwf	(fputc@fp+1)^0,w,c
  6215   004E2A  A4D8               	btfss	status,2,c
  6216   004E2C  EF1A  F027         	goto	u3031
  6217   004E30  EF1C  F027         	goto	u3030
  6218   004E34                     u3031:
  6219   004E34  EF21  F027         	goto	l3879
  6220   004E38                     u3030:
  6221   004E38                     l3877:
  6222   004E38  5001               	movf	fputc@c^0,w,c
  6223   004E3A  ECE0  F030         	call	_putch
  6224   004E3E  EF6E  F027         	goto	l1564
  6225   004E42                     l3879:
  6226   004E42  EE20 F009          	lfsr	2,9
  6227   004E46  5003               	movf	fputc@fp^0,w,c
  6228   004E48  26D9               	addwf	fsr2l,f,c
  6229   004E4A  5004               	movf	(fputc@fp+1)^0,w,c
  6230   004E4C  22DA               	addwfc	fsr2h,f,c
  6231   004E4E  50DE               	movf	postinc2,w,c
  6232   004E50  10DE               	iorwf	postinc2,w,c
  6233   004E52  B4D8               	btfsc	status,2,c
  6234   004E54  EF2E  F027         	goto	u3041
  6235   004E58  EF30  F027         	goto	u3040
  6236   004E5C                     u3041:
  6237   004E5C  EF4B  F027         	goto	l3883
  6238   004E60                     u3040:
  6239   004E60  EE20 F009          	lfsr	2,9
  6240   004E64  5003               	movf	fputc@fp^0,w,c
  6241   004E66  26D9               	addwf	fsr2l,f,c
  6242   004E68  5004               	movf	(fputc@fp+1)^0,w,c
  6243   004E6A  22DA               	addwfc	fsr2h,f,c
  6244   004E6C  EE10 F003          	lfsr	1,3
  6245   004E70  5003               	movf	fputc@fp^0,w,c
  6246   004E72  26E1               	addwf	fsr1l,f,c
  6247   004E74  5004               	movf	(fputc@fp+1)^0,w,c
  6248   004E76  22E2               	addwfc	fsr1h,f,c
  6249   004E78  50DE               	movf	postinc2,w,c
  6250   004E7A  5CE6               	subwf	postinc1,w,c
  6251   004E7C  50E6               	movf	postinc1,w,c
  6252   004E7E  0A80               	xorlw	128
  6253   004E80  6E09               	movwf	(??_fputc+4)^0,c
  6254   004E82  50DE               	movf	postinc2,w,c
  6255   004E84  0A80               	xorlw	128
  6256   004E86  5809               	subwfb	(??_fputc+4)^0,w,c
  6257   004E88  B0D8               	btfsc	status,0,c
  6258   004E8A  EF49  F027         	goto	u3051
  6259   004E8E  EF4B  F027         	goto	u3050
  6260   004E92                     u3051:
  6261   004E92  EF6E  F027         	goto	l1564
  6262   004E96                     u3050:
  6263   004E96                     l3883:
  6264   004E96  EE20 F003          	lfsr	2,3
  6265   004E9A  5003               	movf	fputc@fp^0,w,c
  6266   004E9C  26D9               	addwf	fsr2l,f,c
  6267   004E9E  5004               	movf	(fputc@fp+1)^0,w,c
  6268   004EA0  22DA               	addwfc	fsr2h,f,c
  6269   004EA2  CFDE F005          	movff	postinc2,??_fputc
  6270   004EA6  CFDD F006          	movff	postdec2,??_fputc+1
  6271   004EAA  C003  FFD9         	movff	fputc@fp,fsr2l
  6272   004EAE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6273   004EB2  CFDE F007          	movff	postinc2,??_fputc+2
  6274   004EB6  CFDD F008          	movff	postdec2,??_fputc+3
  6275   004EBA  5005               	movf	??_fputc^0,w,c
  6276   004EBC  2407               	addwf	(??_fputc+2)^0,w,c
  6277   004EBE  6ED9               	movwf	fsr2l,c
  6278   004EC0  5006               	movf	(??_fputc+1)^0,w,c
  6279   004EC2  2008               	addwfc	(??_fputc+3)^0,w,c
  6280   004EC4  6EDA               	movwf	fsr2h,c
  6281   004EC6  C001  FFDF         	movff	fputc@c,indf2
  6282   004ECA  EE20 F003          	lfsr	2,3
  6283   004ECE  5003               	movf	fputc@fp^0,w,c
  6284   004ED0  26D9               	addwf	fsr2l,f,c
  6285   004ED2  5004               	movf	(fputc@fp+1)^0,w,c
  6286   004ED4  22DA               	addwfc	fsr2h,f,c
  6287   004ED6  2ADE               	incf	postinc2,f,c
  6288   004ED8  0E00               	movlw	0
  6289   004EDA  22DD               	addwfc	postdec2,f,c
  6290   004EDC                     l1564:
  6291   004EDC  0012               	return		;funcret
  6292   004EDE                     __end_of_fputc:
  6293                           	callstack 0
  6294                           
  6295 ;; *************** function _putch *****************
  6296 ;; Defined at:
  6297 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;  c               1    wreg     unsigned char 
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  c               1    0[COMRAM] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  1    wreg      void 
  6304 ;; Registers used:
  6305 ;;		wreg
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;Total ram usage:        0 bytes
  6316 ;; Hardware stack levels used: 1
  6317 ;; This function calls:
  6318 ;;		Nothing
  6319 ;; This function is called by:
  6320 ;;		_fputc
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           	psect	text17
  6325   0061C0                     __ptext17:
  6326                           	callstack 0
  6327   0061C0                     _putch:
  6328                           	callstack 26
  6329   0061C0  0012               	return		;funcret
  6330   0061C2                     __end_of_putch:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function _abs *****************
  6334 ;; Defined at:
  6335 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  a               2   18[COMRAM] int 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  2   18[COMRAM] int 
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;Total ram usage:        4 bytes
  6354 ;; Hardware stack levels used: 1
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_dtoa
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text18
  6363   005EE8                     __ptext18:
  6364                           	callstack 0
  6365   005EE8                     _abs:
  6366                           	callstack 26
  6367   005EE8  BE14               	btfsc	(abs@a+1)^0,7,c
  6368   005EEA  EF81  F02F         	goto	u4240
  6369   005EEE  5014               	movf	(abs@a+1)^0,w,c
  6370   005EF0  E106               	bnz	u4241
  6371   005EF2  0413               	decf	abs@a^0,w,c
  6372   005EF4  B0D8               	btfsc	status,0,c
  6373   005EF6  EF7F  F02F         	goto	u4241
  6374   005EFA  EF81  F02F         	goto	u4240
  6375   005EFE                     u4241:
  6376   005EFE  EF8F  F02F         	goto	l1523
  6377   005F02                     u4240:
  6378   005F02  C013  F015         	movff	abs@a,??_abs
  6379   005F06  C014  F016         	movff	abs@a+1,??_abs+1
  6380   005F0A  1E15               	comf	??_abs^0,f,c
  6381   005F0C  1E16               	comf	(??_abs+1)^0,f,c
  6382   005F0E  4A15               	infsnz	??_abs^0,f,c
  6383   005F10  2A16               	incf	(??_abs+1)^0,f,c
  6384   005F12  C015  F013         	movff	??_abs,?_abs
  6385   005F16  C016  F014         	movff	??_abs+1,?_abs+1
  6386   005F1A  EF93  F02F         	goto	l1526
  6387   005F1E                     l1523:
  6388   005F1E  C013  F013         	movff	abs@a,?_abs
  6389   005F22  C014  F014         	movff	abs@a+1,?_abs+1
  6390   005F26                     l1526:
  6391   005F26  0012               	return		;funcret
  6392   005F28                     __end_of_abs:
  6393                           	callstack 0
  6394                           
  6395 ;; *************** function ___aomod *****************
  6396 ;; Defined at:
  6397 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  dividend        8    0[COMRAM] long long 
  6400 ;;  divisor         8    8[COMRAM] long long 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  sign            1   17[COMRAM] unsigned char 
  6403 ;;  counter         1   16[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  8    0[COMRAM] long long 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6413 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;Total ram usage:       18 bytes
  6418 ;; Hardware stack levels used: 1
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_dtoa
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text19
  6427   0049A8                     __ptext19:
  6428                           	callstack 0
  6429   0049A8                     ___aomod:
  6430                           	callstack 26
  6431   0049A8  0E00               	movlw	0
  6432   0049AA  6E12               	movwf	___aomod@sign^0,c
  6433   0049AC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6434   0049AE  EFDD  F024         	goto	u3580
  6435   0049B2  EFDB  F024         	goto	u3581
  6436   0049B6                     u3581:
  6437   0049B6  EFEF  F024         	goto	l4193
  6438   0049BA                     u3580:
  6439   0049BA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6440   0049BC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6441   0049BE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6442   0049C0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6443   0049C2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6444   0049C4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6445   0049C6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6446   0049C8  6C01               	negf	___aomod@dividend^0,c
  6447   0049CA  0E00               	movlw	0
  6448   0049CC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6449   0049CE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6450   0049D0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6451   0049D2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6452   0049D4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6453   0049D6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6454   0049D8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6455   0049DA  0E01               	movlw	1
  6456   0049DC  6E12               	movwf	___aomod@sign^0,c
  6457   0049DE                     l4193:
  6458   0049DE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6459   0049E0  EFF6  F024         	goto	u3590
  6460   0049E4  EFF4  F024         	goto	u3591
  6461   0049E8                     u3591:
  6462   0049E8  EF06  F025         	goto	l4197
  6463   0049EC                     u3590:
  6464   0049EC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6465   0049EE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6466   0049F0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6467   0049F2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6468   0049F4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6469   0049F6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6470   0049F8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6471   0049FA  6C09               	negf	___aomod@divisor^0,c
  6472   0049FC  0E00               	movlw	0
  6473   0049FE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6474   004A00  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6475   004A02  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6476   004A04  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6477   004A06  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6478   004A08  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6479   004A0A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6480   004A0C                     l4197:
  6481   004A0C  5009               	movf	___aomod@divisor^0,w,c
  6482   004A0E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6483   004A10  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6484   004A12  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6485   004A14  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6486   004A16  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6487   004A18  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6488   004A1A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6489   004A1C  B4D8               	btfsc	status,2,c
  6490   004A1E  EF13  F025         	goto	u3601
  6491   004A22  EF15  F025         	goto	u3600
  6492   004A26                     u3601:
  6493   004A26  EF5D  F025         	goto	l4213
  6494   004A2A                     u3600:
  6495   004A2A  0E01               	movlw	1
  6496   004A2C  6E11               	movwf	___aomod@counter^0,c
  6497   004A2E  EF23  F025         	goto	l4203
  6498   004A32                     l4201:
  6499   004A32  90D8               	bcf	status,0,c
  6500   004A34  3609               	rlcf	___aomod@divisor^0,f,c
  6501   004A36  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6502   004A38  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6503   004A3A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6504   004A3C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6505   004A3E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6506   004A40  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6507   004A42  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6508   004A44  2A11               	incf	___aomod@counter^0,f,c
  6509   004A46                     l4203:
  6510   004A46  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6511   004A48  EF28  F025         	goto	u3611
  6512   004A4C  EF2A  F025         	goto	u3610
  6513   004A50                     u3611:
  6514   004A50  EF19  F025         	goto	l4201
  6515   004A54                     u3610:
  6516   004A54                     l4205:
  6517   004A54  5009               	movf	___aomod@divisor^0,w,c
  6518   004A56  5C01               	subwf	___aomod@dividend^0,w,c
  6519   004A58  500A               	movf	(___aomod@divisor+1)^0,w,c
  6520   004A5A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6521   004A5C  500B               	movf	(___aomod@divisor+2)^0,w,c
  6522   004A5E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6523   004A60  500C               	movf	(___aomod@divisor+3)^0,w,c
  6524   004A62  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6525   004A64  500D               	movf	(___aomod@divisor+4)^0,w,c
  6526   004A66  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6527   004A68  500E               	movf	(___aomod@divisor+5)^0,w,c
  6528   004A6A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6529   004A6C  500F               	movf	(___aomod@divisor+6)^0,w,c
  6530   004A6E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6531   004A70  5010               	movf	(___aomod@divisor+7)^0,w,c
  6532   004A72  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6533   004A74  A0D8               	btfss	status,0,c
  6534   004A76  EF3F  F025         	goto	u3621
  6535   004A7A  EF41  F025         	goto	u3620
  6536   004A7E                     u3621:
  6537   004A7E  EF51  F025         	goto	l4209
  6538   004A82                     u3620:
  6539   004A82  5009               	movf	___aomod@divisor^0,w,c
  6540   004A84  5E01               	subwf	___aomod@dividend^0,f,c
  6541   004A86  500A               	movf	(___aomod@divisor+1)^0,w,c
  6542   004A88  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6543   004A8A  500B               	movf	(___aomod@divisor+2)^0,w,c
  6544   004A8C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6545   004A8E  500C               	movf	(___aomod@divisor+3)^0,w,c
  6546   004A90  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6547   004A92  500D               	movf	(___aomod@divisor+4)^0,w,c
  6548   004A94  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6549   004A96  500E               	movf	(___aomod@divisor+5)^0,w,c
  6550   004A98  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6551   004A9A  500F               	movf	(___aomod@divisor+6)^0,w,c
  6552   004A9C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6553   004A9E  5010               	movf	(___aomod@divisor+7)^0,w,c
  6554   004AA0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6555   004AA2                     l4209:
  6556   004AA2  90D8               	bcf	status,0,c
  6557   004AA4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6558   004AA6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6559   004AA8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6560   004AAA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6561   004AAC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6562   004AAE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6563   004AB0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6564   004AB2  3209               	rrcf	___aomod@divisor^0,f,c
  6565   004AB4  2E11               	decfsz	___aomod@counter^0,f,c
  6566   004AB6  EF2A  F025         	goto	l4205
  6567   004ABA                     l4213:
  6568   004ABA  5012               	movf	___aomod@sign^0,w,c
  6569   004ABC  B4D8               	btfsc	status,2,c
  6570   004ABE  EF63  F025         	goto	u3631
  6571   004AC2  EF65  F025         	goto	u3630
  6572   004AC6                     u3631:
  6573   004AC6  EF75  F025         	goto	l4217
  6574   004ACA                     u3630:
  6575   004ACA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6576   004ACC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6577   004ACE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6578   004AD0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6579   004AD2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6580   004AD4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6581   004AD6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6582   004AD8  6C01               	negf	___aomod@dividend^0,c
  6583   004ADA  0E00               	movlw	0
  6584   004ADC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6585   004ADE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6586   004AE0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6587   004AE2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6588   004AE4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6589   004AE6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6590   004AE8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6591   004AEA                     l4217:
  6592   004AEA  C001  F001         	movff	___aomod@dividend,?___aomod
  6593   004AEE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6594   004AF2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6595   004AF6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6596   004AFA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6597   004AFE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6598   004B02  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6599   004B06  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6600   004B0A  0012               	return		;funcret
  6601   004B0C                     __end_of___aomod:
  6602                           	callstack 0
  6603                           
  6604 ;; *************** function ___aodiv *****************
  6605 ;; Defined at:
  6606 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  dividend        8    0[COMRAM] long long 
  6609 ;;  divisor         8    8[COMRAM] long long 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  quotient        8   18[COMRAM] long long 
  6612 ;;  sign            1   17[COMRAM] unsigned char 
  6613 ;;  counter         1   16[COMRAM] unsigned char 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  8    0[COMRAM] long long 
  6616 ;; Registers used:
  6617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6623 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;Total ram usage:       26 bytes
  6628 ;; Hardware stack levels used: 1
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_dtoa
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text20
  6637   0046B4                     __ptext20:
  6638                           	callstack 0
  6639   0046B4                     ___aodiv:
  6640                           	callstack 26
  6641   0046B4  0E00               	movlw	0
  6642   0046B6  6E12               	movwf	___aodiv@sign^0,c
  6643   0046B8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6644   0046BA  EF63  F023         	goto	u3510
  6645   0046BE  EF61  F023         	goto	u3511
  6646   0046C2                     u3511:
  6647   0046C2  EF75  F023         	goto	l4149
  6648   0046C6                     u3510:
  6649   0046C6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6650   0046C8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6651   0046CA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6652   0046CC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6653   0046CE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6654   0046D0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6655   0046D2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6656   0046D4  6C09               	negf	___aodiv@divisor^0,c
  6657   0046D6  0E00               	movlw	0
  6658   0046D8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6659   0046DA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6660   0046DC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6661   0046DE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6662   0046E0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6663   0046E2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6664   0046E4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6665   0046E6  0E01               	movlw	1
  6666   0046E8  6E12               	movwf	___aodiv@sign^0,c
  6667   0046EA                     l4149:
  6668   0046EA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6669   0046EC  EF7C  F023         	goto	u3520
  6670   0046F0  EF7A  F023         	goto	u3521
  6671   0046F4                     u3521:
  6672   0046F4  EF8E  F023         	goto	l4155
  6673   0046F8                     u3520:
  6674   0046F8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6675   0046FA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6676   0046FC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6677   0046FE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6678   004700  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6679   004702  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6680   004704  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6681   004706  6C01               	negf	___aodiv@dividend^0,c
  6682   004708  0E00               	movlw	0
  6683   00470A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6684   00470C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6685   00470E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6686   004710  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6687   004712  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6688   004714  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6689   004716  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6690   004718  0E01               	movlw	1
  6691   00471A  1A12               	xorwf	___aodiv@sign^0,f,c
  6692   00471C                     l4155:
  6693   00471C  EE20  F013         	lfsr	2,___aodiv@quotient
  6694   004720  0E07               	movlw	7
  6695   004722                     u3531:
  6696   004722  6ADE               	clrf	postinc2,c
  6697   004724  06E8               	decf	wreg,f,c
  6698   004726  E2FD               	bc	u3531
  6699   004728  5009               	movf	___aodiv@divisor^0,w,c
  6700   00472A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6701   00472C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6702   00472E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6703   004730  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6704   004732  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6705   004734  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6706   004736  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6707   004738  B4D8               	btfsc	status,2,c
  6708   00473A  EFA1  F023         	goto	u3541
  6709   00473E  EFA3  F023         	goto	u3540
  6710   004742                     u3541:
  6711   004742  EFF5  F023         	goto	l4177
  6712   004746                     u3540:
  6713   004746  0E01               	movlw	1
  6714   004748  6E11               	movwf	___aodiv@counter^0,c
  6715   00474A  EFB1  F023         	goto	l4163
  6716   00474E                     l4161:
  6717   00474E  90D8               	bcf	status,0,c
  6718   004750  3609               	rlcf	___aodiv@divisor^0,f,c
  6719   004752  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6720   004754  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6721   004756  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6722   004758  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6723   00475A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6724   00475C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6725   00475E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6726   004760  2A11               	incf	___aodiv@counter^0,f,c
  6727   004762                     l4163:
  6728   004762  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6729   004764  EFB6  F023         	goto	u3551
  6730   004768  EFB8  F023         	goto	u3550
  6731   00476C                     u3551:
  6732   00476C  EFA7  F023         	goto	l4161
  6733   004770                     u3550:
  6734   004770                     l4165:
  6735   004770  90D8               	bcf	status,0,c
  6736   004772  3613               	rlcf	___aodiv@quotient^0,f,c
  6737   004774  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6738   004776  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6739   004778  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6740   00477A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6741   00477C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6742   00477E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6743   004780  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6744   004782  5009               	movf	___aodiv@divisor^0,w,c
  6745   004784  5C01               	subwf	___aodiv@dividend^0,w,c
  6746   004786  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6747   004788  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6748   00478A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6749   00478C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6750   00478E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6751   004790  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6752   004792  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6753   004794  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6754   004796  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6755   004798  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6756   00479A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6757   00479C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6758   00479E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6759   0047A0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6760   0047A2  A0D8               	btfss	status,0,c
  6761   0047A4  EFD6  F023         	goto	u3561
  6762   0047A8  EFD8  F023         	goto	u3560
  6763   0047AC                     u3561:
  6764   0047AC  EFE9  F023         	goto	l4173
  6765   0047B0                     u3560:
  6766   0047B0  5009               	movf	___aodiv@divisor^0,w,c
  6767   0047B2  5E01               	subwf	___aodiv@dividend^0,f,c
  6768   0047B4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6769   0047B6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6770   0047B8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6771   0047BA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6772   0047BC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6773   0047BE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6774   0047C0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6775   0047C2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6776   0047C4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6777   0047C6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6778   0047C8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6779   0047CA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6780   0047CC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6781   0047CE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6782   0047D0  8013               	bsf	___aodiv@quotient^0,0,c
  6783   0047D2                     l4173:
  6784   0047D2  90D8               	bcf	status,0,c
  6785   0047D4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6786   0047D6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6787   0047D8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6788   0047DA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6789   0047DC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6790   0047DE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6791   0047E0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6792   0047E2  3209               	rrcf	___aodiv@divisor^0,f,c
  6793   0047E4  2E11               	decfsz	___aodiv@counter^0,f,c
  6794   0047E6  EFB8  F023         	goto	l4165
  6795   0047EA                     l4177:
  6796   0047EA  5012               	movf	___aodiv@sign^0,w,c
  6797   0047EC  B4D8               	btfsc	status,2,c
  6798   0047EE  EFFB  F023         	goto	u3571
  6799   0047F2  EFFD  F023         	goto	u3570
  6800   0047F6                     u3571:
  6801   0047F6  EF0D  F024         	goto	l4181
  6802   0047FA                     u3570:
  6803   0047FA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6804   0047FC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6805   0047FE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6806   004800  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6807   004802  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6808   004804  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6809   004806  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6810   004808  6C13               	negf	___aodiv@quotient^0,c
  6811   00480A  0E00               	movlw	0
  6812   00480C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6813   00480E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6814   004810  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6815   004812  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6816   004814  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6817   004816  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6818   004818  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6819   00481A                     l4181:
  6820   00481A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6821   00481E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6822   004822  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6823   004826  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6824   00482A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6825   00482E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6826   004832  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6827   004836  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6828   00483A  0012               	return		;funcret
  6829   00483C                     __end_of___aodiv:
  6830                           	callstack 0
  6831                           
  6832 ;; *************** function _sendStringSerial4 *****************
  6833 ;; Defined at:
  6834 ;;		line 33 in file "serial.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  string          2    1[COMRAM] PTR unsigned char 
  6837 ;;		 -> main@buf(100), 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;		None
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  1    wreg      void 
  6842 ;; Registers used:
  6843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;Total ram usage:        2 bytes
  6854 ;; Hardware stack levels used: 1
  6855 ;; Hardware stack levels required when called: 1
  6856 ;; This function calls:
  6857 ;;		_sendCharSerial4
  6858 ;; This function is called by:
  6859 ;;		_main
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text21
  6864   00604A                     __ptext21:
  6865                           	callstack 0
  6866   00604A                     _sendStringSerial4:
  6867                           	callstack 29
  6868   00604A                     
  6869                           ;serial.c: 34:     while (*string!=0){
  6870   00604A  EF30  F030         	goto	l5557
  6871   00604E                     l5553:
  6872                           
  6873                           ;serial.c: 35:         sendCharSerial4(*string++);
  6874   00604E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6875   006052  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6876   006056  50DF               	movf	indf2,w,c
  6877   006058  ECBB  F030         	call	_sendCharSerial4
  6878   00605C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6879   00605E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6880   006060                     l5557:
  6881                           
  6882                           ;serial.c: 34:     while (*string!=0){
  6883   006060  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6884   006064  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6885   006068  50DF               	movf	indf2,w,c
  6886   00606A  A4D8               	btfss	status,2,c
  6887   00606C  EF3A  F030         	goto	u5541
  6888   006070  EF3C  F030         	goto	u5540
  6889   006074                     u5541:
  6890   006074  EF27  F030         	goto	l5553
  6891   006078                     u5540:
  6892   006078  0012               	return		;funcret
  6893   00607A                     __end_of_sendStringSerial4:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function _sendCharSerial4 *****************
  6897 ;; Defined at:
  6898 ;;		line 26 in file "serial.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  charToSend      1    wreg     unsigned char 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  charToSend      1    0[COMRAM] unsigned char 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      void 
  6905 ;; Registers used:
  6906 ;;		wreg
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;Total ram usage:        1 bytes
  6917 ;; Hardware stack levels used: 1
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_sendStringSerial4
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text22
  6926   006176                     __ptext22:
  6927                           	callstack 0
  6928   006176                     _sendCharSerial4:
  6929                           	callstack 29
  6930                           
  6931                           ;incstack = 0
  6932                           ;sendCharSerial4@charToSend stored from wreg
  6933   006176  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6934   006178                     l209:
  6935   006178  010E               	movlb	14	; () banked
  6936   00617A  A537               	btfss	55,2,b	;volatile
  6937   00617C  EFC2  F030         	goto	u5071
  6938   006180  EFC4  F030         	goto	u5070
  6939   006184                     u5071:
  6940   006184  EFBC  F030         	goto	l209
  6941   006188                     u5070:
  6942   006188                     
  6943                           ; BSR set to: 14
  6944                           ;serial.c: 28:     TX4REG = charToSend;
  6945   006188  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6946   00618C                     
  6947                           ; BSR set to: 14
  6948   00618C  0012               	return		;funcret
  6949   00618E                     __end_of_sendCharSerial4:
  6950                           	callstack 0
  6951                           
  6952 ;; *************** function _readColours *****************
  6953 ;; Defined at:
  6954 ;;		line 105 in file "color.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  vals            2   11[COMRAM] PTR struct RGB
  6957 ;;		 -> vals(8), 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;Total ram usage:        2 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 3
  6976 ;; This function calls:
  6977 ;;		_color_read_Blue
  6978 ;;		_color_read_Green
  6979 ;;		_color_read_Red
  6980 ;;		_color_read_lum
  6981 ;; This function is called by:
  6982 ;;		_main
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text23
  6987   005758                     __ptext23:
  6988                           	callstack 0
  6989   005758                     _readColours:
  6990                           	callstack 27
  6991   005758                     
  6992                           ;color.c: 107:     vals ->R = color_read_Red();
  6993   005758  EC00  F02E         	call	_color_read_Red	;wreg free
  6994   00575C  C00C  FFD9         	movff	readColours@vals,fsr2l
  6995   005760  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6996   005764  C005  FFDE         	movff	?_color_read_Red,postinc2
  6997   005768  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6998                           
  6999                           ;color.c: 108:     vals ->B = color_read_Blue();
  7000   00576C  EC50  F02E         	call	_color_read_Blue	;wreg free
  7001   005770  EE20 F004          	lfsr	2,4
  7002   005774  500C               	movf	readColours@vals^0,w,c
  7003   005776  26D9               	addwf	fsr2l,f,c
  7004   005778  500D               	movf	(readColours@vals+1)^0,w,c
  7005   00577A  22DA               	addwfc	fsr2h,f,c
  7006   00577C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7007   005780  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7008                           
  7009                           ;color.c: 109:     vals ->G = color_read_Green();
  7010   005784  EC28  F02E         	call	_color_read_Green	;wreg free
  7011   005788  EE20 F002          	lfsr	2,2
  7012   00578C  500C               	movf	readColours@vals^0,w,c
  7013   00578E  26D9               	addwf	fsr2l,f,c
  7014   005790  500D               	movf	(readColours@vals+1)^0,w,c
  7015   005792  22DA               	addwfc	fsr2h,f,c
  7016   005794  C005  FFDE         	movff	?_color_read_Green,postinc2
  7017   005798  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7018                           
  7019                           ;color.c: 110:     vals ->L = color_read_lum();
  7020   00579C  ECD8  F02D         	call	_color_read_lum	;wreg free
  7021   0057A0  EE20 F006          	lfsr	2,6
  7022   0057A4  500C               	movf	readColours@vals^0,w,c
  7023   0057A6  26D9               	addwf	fsr2l,f,c
  7024   0057A8  500D               	movf	(readColours@vals+1)^0,w,c
  7025   0057AA  22DA               	addwfc	fsr2h,f,c
  7026   0057AC  C005  FFDE         	movff	?_color_read_lum,postinc2
  7027   0057B0  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  7028   0057B4  0012               	return		;funcret
  7029   0057B6                     __end_of_readColours:
  7030                           	callstack 0
  7031                           
  7032 ;; *************** function _color_read_lum *****************
  7033 ;; Defined at:
  7034 ;;		line 49 in file "color.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  tmp             2    9[COMRAM] unsigned int 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  2    4[COMRAM] unsigned int 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;Total ram usage:        7 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 2
  7055 ;; This function calls:
  7056 ;;		_I2C_2_Master_Read
  7057 ;;		_I2C_2_Master_RepStart
  7058 ;;		_I2C_2_Master_Start
  7059 ;;		_I2C_2_Master_Stop
  7060 ;;		_I2C_2_Master_Write
  7061 ;; This function is called by:
  7062 ;;		_readColours
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text24
  7067   005BB0                     __ptext24:
  7068                           	callstack 0
  7069   005BB0                     _color_read_lum:
  7070                           	callstack 27
  7071   005BB0                     
  7072                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  7073   005BB0  ECD7  F030         	call	_I2C_2_Master_Start	;wreg free
  7074                           
  7075                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  7076   005BB4  0E52               	movlw	82
  7077   005BB6  ECC7  F030         	call	_I2C_2_Master_Write
  7078                           
  7079                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  7080   005BBA  0EB4               	movlw	180
  7081   005BBC  ECC7  F030         	call	_I2C_2_Master_Write
  7082                           
  7083                           ;color.c: 55:  I2C_2_Master_RepStart();
  7084   005BC0  ECCD  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7085                           
  7086                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  7087   005BC4  0E53               	movlw	83
  7088   005BC6  ECC7  F030         	call	_I2C_2_Master_Write
  7089                           
  7090                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  7091   005BCA  0E01               	movlw	1
  7092   005BCC  EC53  F02F         	call	_I2C_2_Master_Read
  7093   005BD0  6E07               	movwf	??_color_read_lum^0,c
  7094   005BD2  5007               	movf	??_color_read_lum^0,w,c
  7095   005BD4  6E0A               	movwf	color_read_lum@tmp^0,c
  7096   005BD6  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  7097                           
  7098                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7099   005BD8  0E00               	movlw	0
  7100   005BDA  EC53  F02F         	call	_I2C_2_Master_Read
  7101   005BDE  6E07               	movwf	??_color_read_lum^0,c
  7102   005BE0  5007               	movf	??_color_read_lum^0,w,c
  7103   005BE2  6E09               	movwf	(??_color_read_lum+2)^0,c
  7104   005BE4  6A08               	clrf	(??_color_read_lum+1)^0,c
  7105   005BE6  500A               	movf	color_read_lum@tmp^0,w,c
  7106   005BE8  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  7107   005BEA  6E0A               	movwf	color_read_lum@tmp^0,c
  7108   005BEC  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  7109   005BEE  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  7110   005BF0  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  7111                           
  7112                           ;color.c: 59:  I2C_2_Master_Stop();
  7113   005BF2  ECD2  F030         	call	_I2C_2_Master_Stop	;wreg free
  7114   005BF6                     
  7115                           ;color.c: 60:  return tmp;
  7116   005BF6  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  7117   005BFA  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  7118   005BFE  0012               	return		;funcret
  7119   005C00                     __end_of_color_read_lum:
  7120                           	callstack 0
  7121                           
  7122 ;; *************** function _color_read_Red *****************
  7123 ;; Defined at:
  7124 ;;		line 63 in file "color.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;		None
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  tmp             2    9[COMRAM] unsigned int 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  2    4[COMRAM] unsigned int 
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7140 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7141 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7142 ;;Total ram usage:        7 bytes
  7143 ;; Hardware stack levels used: 1
  7144 ;; Hardware stack levels required when called: 2
  7145 ;; This function calls:
  7146 ;;		_I2C_2_Master_Read
  7147 ;;		_I2C_2_Master_RepStart
  7148 ;;		_I2C_2_Master_Start
  7149 ;;		_I2C_2_Master_Stop
  7150 ;;		_I2C_2_Master_Write
  7151 ;; This function is called by:
  7152 ;;		_readColours
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text25
  7157   005C00                     __ptext25:
  7158                           	callstack 0
  7159   005C00                     _color_read_Red:
  7160                           	callstack 27
  7161   005C00                     
  7162                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7163   005C00  ECD7  F030         	call	_I2C_2_Master_Start	;wreg free
  7164                           
  7165                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7166   005C04  0E52               	movlw	82
  7167   005C06  ECC7  F030         	call	_I2C_2_Master_Write
  7168                           
  7169                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7170   005C0A  0EB6               	movlw	182
  7171   005C0C  ECC7  F030         	call	_I2C_2_Master_Write
  7172                           
  7173                           ;color.c: 69:  I2C_2_Master_RepStart();
  7174   005C10  ECCD  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7175                           
  7176                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7177   005C14  0E53               	movlw	83
  7178   005C16  ECC7  F030         	call	_I2C_2_Master_Write
  7179                           
  7180                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7181   005C1A  0E01               	movlw	1
  7182   005C1C  EC53  F02F         	call	_I2C_2_Master_Read
  7183   005C20  6E07               	movwf	??_color_read_Red^0,c
  7184   005C22  5007               	movf	??_color_read_Red^0,w,c
  7185   005C24  6E0A               	movwf	color_read_Red@tmp^0,c
  7186   005C26  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7187                           
  7188                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7189   005C28  0E00               	movlw	0
  7190   005C2A  EC53  F02F         	call	_I2C_2_Master_Read
  7191   005C2E  6E07               	movwf	??_color_read_Red^0,c
  7192   005C30  5007               	movf	??_color_read_Red^0,w,c
  7193   005C32  6E09               	movwf	(??_color_read_Red+2)^0,c
  7194   005C34  6A08               	clrf	(??_color_read_Red+1)^0,c
  7195   005C36  500A               	movf	color_read_Red@tmp^0,w,c
  7196   005C38  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7197   005C3A  6E0A               	movwf	color_read_Red@tmp^0,c
  7198   005C3C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7199   005C3E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7200   005C40  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7201                           
  7202                           ;color.c: 73:  I2C_2_Master_Stop();
  7203   005C42  ECD2  F030         	call	_I2C_2_Master_Stop	;wreg free
  7204   005C46                     
  7205                           ;color.c: 74:  return tmp;
  7206   005C46  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7207   005C4A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7208   005C4E  0012               	return		;funcret
  7209   005C50                     __end_of_color_read_Red:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function _color_read_Green *****************
  7213 ;; Defined at:
  7214 ;;		line 76 in file "color.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  tmp             2    9[COMRAM] unsigned int 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  2    4[COMRAM] unsigned int 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7230 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;Total ram usage:        7 bytes
  7233 ;; Hardware stack levels used: 1
  7234 ;; Hardware stack levels required when called: 2
  7235 ;; This function calls:
  7236 ;;		_I2C_2_Master_Read
  7237 ;;		_I2C_2_Master_RepStart
  7238 ;;		_I2C_2_Master_Start
  7239 ;;		_I2C_2_Master_Stop
  7240 ;;		_I2C_2_Master_Write
  7241 ;; This function is called by:
  7242 ;;		_readColours
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text26
  7247   005C50                     __ptext26:
  7248                           	callstack 0
  7249   005C50                     _color_read_Green:
  7250                           	callstack 27
  7251   005C50                     
  7252                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7253   005C50  ECD7  F030         	call	_I2C_2_Master_Start	;wreg free
  7254                           
  7255                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7256   005C54  0E52               	movlw	82
  7257   005C56  ECC7  F030         	call	_I2C_2_Master_Write
  7258                           
  7259                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7260   005C5A  0EB8               	movlw	184
  7261   005C5C  ECC7  F030         	call	_I2C_2_Master_Write
  7262                           
  7263                           ;color.c: 82:  I2C_2_Master_RepStart();
  7264   005C60  ECCD  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7265                           
  7266                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7267   005C64  0E53               	movlw	83
  7268   005C66  ECC7  F030         	call	_I2C_2_Master_Write
  7269                           
  7270                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7271   005C6A  0E01               	movlw	1
  7272   005C6C  EC53  F02F         	call	_I2C_2_Master_Read
  7273   005C70  6E07               	movwf	??_color_read_Green^0,c
  7274   005C72  5007               	movf	??_color_read_Green^0,w,c
  7275   005C74  6E0A               	movwf	color_read_Green@tmp^0,c
  7276   005C76  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7277                           
  7278                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7279   005C78  0E00               	movlw	0
  7280   005C7A  EC53  F02F         	call	_I2C_2_Master_Read
  7281   005C7E  6E07               	movwf	??_color_read_Green^0,c
  7282   005C80  5007               	movf	??_color_read_Green^0,w,c
  7283   005C82  6E09               	movwf	(??_color_read_Green+2)^0,c
  7284   005C84  6A08               	clrf	(??_color_read_Green+1)^0,c
  7285   005C86  500A               	movf	color_read_Green@tmp^0,w,c
  7286   005C88  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7287   005C8A  6E0A               	movwf	color_read_Green@tmp^0,c
  7288   005C8C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7289   005C8E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7290   005C90  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7291                           
  7292                           ;color.c: 86:  I2C_2_Master_Stop();
  7293   005C92  ECD2  F030         	call	_I2C_2_Master_Stop	;wreg free
  7294   005C96                     
  7295                           ;color.c: 87:  return tmp;
  7296   005C96  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7297   005C9A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7298   005C9E  0012               	return		;funcret
  7299   005CA0                     __end_of_color_read_Green:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _color_read_Blue *****************
  7303 ;; Defined at:
  7304 ;;		line 90 in file "color.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  tmp             2    9[COMRAM] unsigned int 
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  2    4[COMRAM] unsigned int 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, status,0, cstack
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;Total ram usage:        7 bytes
  7323 ;; Hardware stack levels used: 1
  7324 ;; Hardware stack levels required when called: 2
  7325 ;; This function calls:
  7326 ;;		_I2C_2_Master_Read
  7327 ;;		_I2C_2_Master_RepStart
  7328 ;;		_I2C_2_Master_Start
  7329 ;;		_I2C_2_Master_Stop
  7330 ;;		_I2C_2_Master_Write
  7331 ;; This function is called by:
  7332 ;;		_readColours
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text27
  7337   005CA0                     __ptext27:
  7338                           	callstack 0
  7339   005CA0                     _color_read_Blue:
  7340                           	callstack 27
  7341   005CA0                     
  7342                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7343   005CA0  ECD7  F030         	call	_I2C_2_Master_Start	;wreg free
  7344                           
  7345                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7346   005CA4  0E52               	movlw	82
  7347   005CA6  ECC7  F030         	call	_I2C_2_Master_Write
  7348                           
  7349                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7350   005CAA  0EBA               	movlw	186
  7351   005CAC  ECC7  F030         	call	_I2C_2_Master_Write
  7352                           
  7353                           ;color.c: 96:  I2C_2_Master_RepStart();
  7354   005CB0  ECCD  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7355                           
  7356                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7357   005CB4  0E53               	movlw	83
  7358   005CB6  ECC7  F030         	call	_I2C_2_Master_Write
  7359                           
  7360                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7361   005CBA  0E01               	movlw	1
  7362   005CBC  EC53  F02F         	call	_I2C_2_Master_Read
  7363   005CC0  6E07               	movwf	??_color_read_Blue^0,c
  7364   005CC2  5007               	movf	??_color_read_Blue^0,w,c
  7365   005CC4  6E0A               	movwf	color_read_Blue@tmp^0,c
  7366   005CC6  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7367                           
  7368                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7369   005CC8  0E00               	movlw	0
  7370   005CCA  EC53  F02F         	call	_I2C_2_Master_Read
  7371   005CCE  6E07               	movwf	??_color_read_Blue^0,c
  7372   005CD0  5007               	movf	??_color_read_Blue^0,w,c
  7373   005CD2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7374   005CD4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7375   005CD6  500A               	movf	color_read_Blue@tmp^0,w,c
  7376   005CD8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7377   005CDA  6E0A               	movwf	color_read_Blue@tmp^0,c
  7378   005CDC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7379   005CDE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7380   005CE0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7381                           
  7382                           ;color.c: 100:  I2C_2_Master_Stop();
  7383   005CE2  ECD2  F030         	call	_I2C_2_Master_Stop	;wreg free
  7384   005CE6                     
  7385                           ;color.c: 101:  return tmp;
  7386   005CE6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7387   005CEA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7388   005CEE  0012               	return		;funcret
  7389   005CF0                     __end_of_color_read_Blue:
  7390                           	callstack 0
  7391                           
  7392 ;; *************** function _I2C_2_Master_RepStart *****************
  7393 ;; Defined at:
  7394 ;;		line 33 in file "i2c.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;		None
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;Total ram usage:        0 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 1
  7415 ;; This function calls:
  7416 ;;		_I2C_2_Master_Idle
  7417 ;; This function is called by:
  7418 ;;		_color_read_lum
  7419 ;;		_color_read_Red
  7420 ;;		_color_read_Green
  7421 ;;		_color_read_Blue
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text28
  7426   00619A                     __ptext28:
  7427                           	callstack 0
  7428   00619A                     _I2C_2_Master_RepStart:
  7429                           	callstack 27
  7430   00619A                     
  7431                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7432   00619A  EC52  F030         	call	_I2C_2_Master_Idle	;wreg free
  7433   00619E                     
  7434                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7435   00619E  010E               	movlb	14	; () banked
  7436   0061A0  83DA               	bsf	218,1,b	;volatile
  7437   0061A2                     
  7438                           ; BSR set to: 14
  7439   0061A2  0012               	return		;funcret
  7440   0061A4                     __end_of_I2C_2_Master_RepStart:
  7441                           	callstack 0
  7442                           
  7443 ;; *************** function _I2C_2_Master_Read *****************
  7444 ;; Defined at:
  7445 ;;		line 51 in file "i2c.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  ack             1    wreg     unsigned char 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  ack             1    2[COMRAM] unsigned char 
  7450 ;;  tmp             1    3[COMRAM] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      unsigned char 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;Total ram usage:        3 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 1
  7467 ;; This function calls:
  7468 ;;		_I2C_2_Master_Idle
  7469 ;; This function is called by:
  7470 ;;		_color_read_lum
  7471 ;;		_color_read_Red
  7472 ;;		_color_read_Green
  7473 ;;		_color_read_Blue
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text29
  7478   005EA6                     __ptext29:
  7479                           	callstack 0
  7480   005EA6                     _I2C_2_Master_Read:
  7481                           	callstack 27
  7482                           
  7483                           ; BSR set to: 14
  7484                           ;incstack = 0
  7485                           ;I2C_2_Master_Read@ack stored from wreg
  7486   005EA6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7487   005EA8                     
  7488                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7489   005EA8  EC52  F030         	call	_I2C_2_Master_Idle	;wreg free
  7490   005EAC                     
  7491                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7492   005EAC  010E               	movlb	14	; () banked
  7493   005EAE  87DA               	bsf	218,3,b	;volatile
  7494                           
  7495                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7496   005EB0  EC52  F030         	call	_I2C_2_Master_Idle	;wreg free
  7497   005EB4                     
  7498                           ;i2c.c: 57:   tmp = SSP2BUF;
  7499   005EB4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7500                           
  7501                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7502   005EB8  EC52  F030         	call	_I2C_2_Master_Idle	;wreg free
  7503   005EBC                     
  7504                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7505   005EBC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7506   005EBE  B4D8               	btfsc	status,2,c
  7507   005EC0  EF64  F02F         	goto	u5001
  7508   005EC4  EF68  F02F         	goto	u5000
  7509   005EC8                     u5001:
  7510   005EC8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7511   005ECA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7512   005ECC  EF69  F02F         	goto	u5018
  7513   005ED0                     u5000:
  7514   005ED0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7515   005ED2                     u5018:
  7516   005ED2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7517   005ED4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7518   005ED6  010E               	movlb	14	; () banked
  7519   005ED8  51DA               	movf	218,w,b	;volatile
  7520   005EDA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7521   005EDC  0BDF               	andlw	-33
  7522   005EDE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7523   005EE0  6FDA               	movwf	218,b	;volatile
  7524   005EE2                     
  7525                           ; BSR set to: 14
  7526                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7527   005EE2  89DA               	bsf	218,4,b	;volatile
  7528   005EE4                     
  7529                           ; BSR set to: 14
  7530                           ;i2c.c: 61:   return tmp;
  7531   005EE4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7532   005EE6                     
  7533                           ; BSR set to: 14
  7534   005EE6  0012               	return		;funcret
  7535   005EE8                     __end_of_I2C_2_Master_Read:
  7536                           	callstack 0
  7537                           
  7538 ;; *************** function _initUSART4 *****************
  7539 ;; Defined at:
  7540 ;;		line 4 in file "serial.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;		None
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, status,2
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7558 ;;Total ram usage:        0 bytes
  7559 ;; Hardware stack levels used: 1
  7560 ;; This function calls:
  7561 ;;		Nothing
  7562 ;; This function is called by:
  7563 ;;		_main
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text30
  7568   006158                     __ptext30:
  7569                           	callstack 0
  7570   006158                     _initUSART4:
  7571                           	callstack 30
  7572   006158                     
  7573                           ;serial.c: 5:     RC0PPS = 0x12;
  7574   006158  0E12               	movlw	18
  7575   00615A  010E               	movlb	14	; () banked
  7576   00615C  6F62               	movwf	98,b	;volatile
  7577                           
  7578                           ;serial.c: 6:     RX4PPS = 0x11;
  7579   00615E  0E11               	movlw	17
  7580   006160  6F15               	movwf	21,b	;volatile
  7581   006162                     
  7582                           ; BSR set to: 14
  7583                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7584   006162  97E9               	bcf	233,3,b	;volatile
  7585   006164                     
  7586                           ; BSR set to: 14
  7587                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7588   006164  95E8               	bcf	232,2,b	;volatile
  7589                           
  7590                           ;serial.c: 9:     SP4BRGL = 51;
  7591   006166  0E33               	movlw	51
  7592   006168  6FE5               	movwf	229,b	;volatile
  7593                           
  7594                           ;serial.c: 10:     SP4BRGH = 0;
  7595   00616A  0E00               	movlw	0
  7596   00616C  6FE6               	movwf	230,b	;volatile
  7597   00616E                     
  7598                           ; BSR set to: 14
  7599                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7600   00616E  89E7               	bsf	231,4,b	;volatile
  7601   006170                     
  7602                           ; BSR set to: 14
  7603                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7604   006170  8BE8               	bsf	232,5,b	;volatile
  7605   006172                     
  7606                           ; BSR set to: 14
  7607                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7608   006172  8FE7               	bsf	231,7,b	;volatile
  7609   006174                     
  7610                           ; BSR set to: 14
  7611   006174  0012               	return		;funcret
  7612   006176                     __end_of_initUSART4:
  7613                           	callstack 0
  7614                           
  7615 ;; *************** function _initDCmotorsPWM *****************
  7616 ;; Defined at:
  7617 ;;		line 6 in file "dc_motor.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  1    wreg      void 
  7624 ;; Registers used:
  7625 ;;		wreg, status,2
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;Total ram usage:        2 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; This function calls:
  7638 ;;		Nothing
  7639 ;; This function is called by:
  7640 ;;		_main
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text31
  7645   005416                     __ptext31:
  7646                           	callstack 0
  7647   005416                     _initDCmotorsPWM:
  7648                           	callstack 30
  7649   005416                     
  7650                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7651   005416  0E05               	movlw	5
  7652   005418  010E               	movlb	14	; () banked
  7653   00541A  6F74               	movwf	116,b	;volatile
  7654                           
  7655                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7656   00541C  0E06               	movlw	6
  7657   00541E  6F76               	movwf	118,b	;volatile
  7658                           
  7659                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7660   005420  0E07               	movlw	7
  7661   005422  6F69               	movwf	105,b	;volatile
  7662                           
  7663                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7664   005424  0E08               	movlw	8
  7665   005426  6F88               	movwf	136,b	;volatile
  7666   005428                     
  7667                           ; BSR set to: 14
  7668                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7669   005428  9485               	bcf	133,2,c	;volatile
  7670   00542A                     
  7671                           ; BSR set to: 14
  7672                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7673   00542A  9885               	bcf	133,4,c	;volatile
  7674   00542C                     
  7675                           ; BSR set to: 14
  7676                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7677   00542C  9E83               	bcf	131,7,c	;volatile
  7678   00542E                     
  7679                           ; BSR set to: 14
  7680                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7681   00542E  9C87               	bcf	135,6,c	;volatile
  7682                           
  7683                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7684   005430  50BD               	movf	189,w,c	;volatile
  7685   005432  0B8F               	andlw	-113
  7686   005434  0930               	iorlw	48
  7687   005436  6EBD               	movwf	189,c	;volatile
  7688                           
  7689                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7690   005438  0EE0               	movlw	-32
  7691   00543A  16BE               	andwf	190,f,c	;volatile
  7692                           
  7693                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7694   00543C  50BF               	movf	191,w,c	;volatile
  7695   00543E  0BF0               	andlw	-16
  7696   005440  0901               	iorlw	1
  7697   005442  6EBF               	movwf	191,c	;volatile
  7698   005444                     
  7699                           ; BSR set to: 14
  7700                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7701   005444  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7702   005448                     
  7703                           ; BSR set to: 14
  7704                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7705   005448  8EBD               	bsf	189,7,c	;volatile
  7706                           
  7707                           ;dc_motor.c: 34:     CCPR1H=0;
  7708   00544A  0E00               	movlw	0
  7709   00544C  6EAA               	movwf	170,c	;volatile
  7710                           
  7711                           ;dc_motor.c: 35:     CCPR2H=0;
  7712   00544E  0E00               	movlw	0
  7713   005450  6EA6               	movwf	166,c	;volatile
  7714                           
  7715                           ;dc_motor.c: 36:     CCPR3H=0;
  7716   005452  0E00               	movlw	0
  7717   005454  010F               	movlb	15	; () banked
  7718   005456  6F25               	movwf	37,b	;volatile
  7719                           
  7720                           ;dc_motor.c: 37:     CCPR4H=0;
  7721   005458  0E00               	movlw	0
  7722   00545A  6F21               	movwf	33,b	;volatile
  7723                           
  7724                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7725   00545C  0EFC               	movlw	-4
  7726   00545E  16AD               	andwf	173,f,c	;volatile
  7727                           
  7728                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7729   005460  0EF3               	movlw	-13
  7730   005462  16AD               	andwf	173,f,c	;volatile
  7731                           
  7732                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7733   005464  0ECF               	movlw	-49
  7734   005466  16AD               	andwf	173,f,c	;volatile
  7735                           
  7736                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7737   005468  0E3F               	movlw	-193
  7738   00546A  16AD               	andwf	173,f,c	;volatile
  7739   00546C                     
  7740                           ; BSR set to: 15
  7741                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7742   00546C  88AB               	bsf	171,4,c	;volatile
  7743                           
  7744                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7745   00546E  50AB               	movf	171,w,c	;volatile
  7746   005470  0BF0               	andlw	-16
  7747   005472  090C               	iorlw	12
  7748   005474  6EAB               	movwf	171,c	;volatile
  7749   005476                     
  7750                           ; BSR set to: 15
  7751                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7752   005476  8EAB               	bsf	171,7,c	;volatile
  7753   005478                     
  7754                           ; BSR set to: 15
  7755                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7756   005478  88A7               	bsf	167,4,c	;volatile
  7757                           
  7758                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7759   00547A  50A7               	movf	167,w,c	;volatile
  7760   00547C  0BF0               	andlw	-16
  7761   00547E  090C               	iorlw	12
  7762   005480  6EA7               	movwf	167,c	;volatile
  7763   005482                     
  7764                           ; BSR set to: 15
  7765                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7766   005482  8EA7               	bsf	167,7,c	;volatile
  7767   005484                     
  7768                           ; BSR set to: 15
  7769                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7770   005484  8926               	bsf	38,4,b	;volatile
  7771                           
  7772                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7773   005486  5126               	movf	38,w,b	;volatile
  7774   005488  0BF0               	andlw	-16
  7775   00548A  090C               	iorlw	12
  7776   00548C  6F26               	movwf	38,b	;volatile
  7777   00548E                     
  7778                           ; BSR set to: 15
  7779                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7780   00548E  8F26               	bsf	38,7,b	;volatile
  7781   005490                     
  7782                           ; BSR set to: 15
  7783                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7784   005490  8922               	bsf	34,4,b	;volatile
  7785                           
  7786                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7787   005492  5122               	movf	34,w,b	;volatile
  7788   005494  0BF0               	andlw	-16
  7789   005496  090C               	iorlw	12
  7790   005498  6F22               	movwf	34,b	;volatile
  7791   00549A                     
  7792                           ; BSR set to: 15
  7793                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7794   00549A  8F22               	bsf	34,7,b	;volatile
  7795   00549C                     
  7796                           ; BSR set to: 15
  7797   00549C  0012               	return		;funcret
  7798   00549E                     __end_of_initDCmotorsPWM:
  7799                           	callstack 0
  7800                           
  7801 ;; *************** function _go_Home *****************
  7802 ;; Defined at:
  7803 ;;		line 4 in file "Memory.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7806 ;;		 -> WayBack(50), 
  7807 ;;  Time_forward    2   37[COMRAM] PTR int 
  7808 ;;		 -> Time_forward(100), 
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  i               2   42[COMRAM] int 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;Total ram usage:        9 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 5
  7827 ;; This function calls:
  7828 ;;		_BlueMove
  7829 ;;		_GreenMove
  7830 ;;		_LightBlueMove
  7831 ;;		_OrangeMove
  7832 ;;		_RedMove
  7833 ;;		_ReversePink
  7834 ;;		_ReverseYellow
  7835 ;;		_reverseDetect
  7836 ;;		_timed_forward
  7837 ;; This function is called by:
  7838 ;;		_main
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text32
  7843   003BE4                     __ptext32:
  7844                           	callstack 0
  7845   003BE4                     _go_Home:
  7846                           	callstack 25
  7847   003BE4                     
  7848                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  7849   003BE4  C17E  F02B         	movff	_move_count,go_Home@i	;volatile
  7850   003BE8  C17F  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7851   003BEC                     l5689:
  7852   003BEC  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7853   003BEE  EFFD  F01D         	goto	u5680
  7854   003BF2  EFFB  F01D         	goto	u5681
  7855   003BF6                     u5681:
  7856   003BF6  EFFF  F01D         	goto	l5693
  7857   003BFA                     u5680:
  7858   003BFA  EF47  F01F         	goto	l661
  7859   003BFE                     l5693:
  7860                           
  7861                           ;Memory.c: 7:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7862   003BFE  0EC7               	movlw	low _motorL
  7863   003C00  6E14               	movwf	timed_forward@mL^0,c
  7864   003C02  0E01               	movlw	high _motorL
  7865   003C04  6E15               	movwf	(timed_forward@mL+1)^0,c
  7866   003C06  0EBE               	movlw	low _motorR
  7867   003C08  6E16               	movwf	timed_forward@mR^0,c
  7868   003C0A  0E01               	movlw	high _motorR
  7869   003C0C  6E17               	movwf	(timed_forward@mR+1)^0,c
  7870   003C0E  90D8               	bcf	status,0,c
  7871   003C10  342B               	rlcf	go_Home@i^0,w,c
  7872   003C12  6ED9               	movwf	fsr2l,c
  7873   003C14  342C               	rlcf	(go_Home@i+1)^0,w,c
  7874   003C16  6EDA               	movwf	fsr2h,c
  7875   003C18  5026               	movf	go_Home@Time_forward^0,w,c
  7876   003C1A  26D9               	addwf	fsr2l,f,c
  7877   003C1C  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7878   003C1E  22DA               	addwfc	fsr2h,f,c
  7879   003C20  CFDE F018          	movff	postinc2,timed_forward@time
  7880   003C24  CFDD F019          	movff	postdec2,timed_forward@time+1
  7881   003C28  EC25  F028         	call	_timed_forward	;wreg free
  7882   003C2C                     
  7883                           ;Memory.c: 12:         if (WayBack[i-1]==1){
  7884   003C2C  502B               	movf	go_Home@i^0,w,c
  7885   003C2E  2424               	addwf	go_Home@WayBack^0,w,c
  7886   003C30  6E28               	movwf	??_go_Home^0,c
  7887   003C32  502C               	movf	(go_Home@i+1)^0,w,c
  7888   003C34  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7889   003C36  6E29               	movwf	(??_go_Home+1)^0,c
  7890   003C38  0EFF               	movlw	255
  7891   003C3A  2428               	addwf	??_go_Home^0,w,c
  7892   003C3C  6ED9               	movwf	fsr2l,c
  7893   003C3E  0EFF               	movlw	255
  7894   003C40  2029               	addwfc	(??_go_Home+1)^0,w,c
  7895   003C42  6EDA               	movwf	fsr2h,c
  7896   003C44  04DE               	decf	postinc2,w,c
  7897   003C46  A4D8               	btfss	status,2,c
  7898   003C48  EF28  F01E         	goto	u5691
  7899   003C4C  EF2A  F01E         	goto	u5690
  7900   003C50                     u5691:
  7901   003C50  EF40  F01E         	goto	l5699
  7902   003C54                     u5690:
  7903   003C54                     
  7904                           ;Memory.c: 13:             reverseDetect(&motorL, &motorR);
  7905   003C54  0EC7               	movlw	low _motorL
  7906   003C56  6E1A               	movwf	reverseDetect@mL^0,c
  7907   003C58  0E01               	movlw	high _motorL
  7908   003C5A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7909   003C5C  0EBE               	movlw	low _motorR
  7910   003C5E  6E1C               	movwf	reverseDetect@mR^0,c
  7911   003C60  0E01               	movlw	high _motorR
  7912   003C62  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7913   003C64  EC35  F02C         	call	_reverseDetect	;wreg free
  7914                           
  7915                           ;Memory.c: 14:             GreenMove(&motorL, &motorR);
  7916   003C68  0EC7               	movlw	low _motorL
  7917   003C6A  6E20               	movwf	GreenMove@mL^0,c
  7918   003C6C  0E01               	movlw	high _motorL
  7919   003C6E  6E21               	movwf	(GreenMove@mL+1)^0,c
  7920   003C70  0EBE               	movlw	low _motorR
  7921   003C72  6E22               	movwf	GreenMove@mR^0,c
  7922   003C74  0E01               	movlw	high _motorR
  7923   003C76  6E23               	movwf	(GreenMove@mR+1)^0,c
  7924   003C78  ECB3  F02F         	call	_GreenMove	;wreg free
  7925                           
  7926                           ;Memory.c: 15:         }
  7927   003C7C  EF42  F01F         	goto	l5723
  7928   003C80                     l5699:
  7929   003C80  502B               	movf	go_Home@i^0,w,c
  7930   003C82  2424               	addwf	go_Home@WayBack^0,w,c
  7931   003C84  6E28               	movwf	??_go_Home^0,c
  7932   003C86  502C               	movf	(go_Home@i+1)^0,w,c
  7933   003C88  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7934   003C8A  6E29               	movwf	(??_go_Home+1)^0,c
  7935   003C8C  0EFF               	movlw	255
  7936   003C8E  2428               	addwf	??_go_Home^0,w,c
  7937   003C90  6ED9               	movwf	fsr2l,c
  7938   003C92  0EFF               	movlw	255
  7939   003C94  2029               	addwfc	(??_go_Home+1)^0,w,c
  7940   003C96  6EDA               	movwf	fsr2h,c
  7941   003C98  0E02               	movlw	2
  7942   003C9A  18DE               	xorwf	postinc2,w,c
  7943   003C9C  A4D8               	btfss	status,2,c
  7944   003C9E  EF53  F01E         	goto	u5701
  7945   003CA2  EF55  F01E         	goto	u5700
  7946   003CA6                     u5701:
  7947   003CA6  EF6B  F01E         	goto	l5703
  7948   003CAA                     u5700:
  7949   003CAA                     
  7950                           ;Memory.c: 17:             reverseDetect(&motorL, &motorR);
  7951   003CAA  0EC7               	movlw	low _motorL
  7952   003CAC  6E1A               	movwf	reverseDetect@mL^0,c
  7953   003CAE  0E01               	movlw	high _motorL
  7954   003CB0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7955   003CB2  0EBE               	movlw	low _motorR
  7956   003CB4  6E1C               	movwf	reverseDetect@mR^0,c
  7957   003CB6  0E01               	movlw	high _motorR
  7958   003CB8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7959   003CBA  EC35  F02C         	call	_reverseDetect	;wreg free
  7960                           
  7961                           ;Memory.c: 18:             LightBlueMove(&motorL, &motorR);
  7962   003CBE  0EC7               	movlw	low _motorL
  7963   003CC0  6E20               	movwf	LightBlueMove@mL^0,c
  7964   003CC2  0E01               	movlw	high _motorL
  7965   003CC4  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7966   003CC6  0EBE               	movlw	low _motorR
  7967   003CC8  6E22               	movwf	LightBlueMove@mR^0,c
  7968   003CCA  0E01               	movlw	high _motorR
  7969   003CCC  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7970   003CCE  EC0C  F02D         	call	_LightBlueMove	;wreg free
  7971                           
  7972                           ;Memory.c: 19:         }
  7973   003CD2  EF42  F01F         	goto	l5723
  7974   003CD6                     l5703:
  7975   003CD6  502B               	movf	go_Home@i^0,w,c
  7976   003CD8  2424               	addwf	go_Home@WayBack^0,w,c
  7977   003CDA  6E28               	movwf	??_go_Home^0,c
  7978   003CDC  502C               	movf	(go_Home@i+1)^0,w,c
  7979   003CDE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7980   003CE0  6E29               	movwf	(??_go_Home+1)^0,c
  7981   003CE2  0EFF               	movlw	255
  7982   003CE4  2428               	addwf	??_go_Home^0,w,c
  7983   003CE6  6ED9               	movwf	fsr2l,c
  7984   003CE8  0EFF               	movlw	255
  7985   003CEA  2029               	addwfc	(??_go_Home+1)^0,w,c
  7986   003CEC  6EDA               	movwf	fsr2h,c
  7987   003CEE  0E03               	movlw	3
  7988   003CF0  18DE               	xorwf	postinc2,w,c
  7989   003CF2  A4D8               	btfss	status,2,c
  7990   003CF4  EF7E  F01E         	goto	u5711
  7991   003CF8  EF80  F01E         	goto	u5710
  7992   003CFC                     u5711:
  7993   003CFC  EF96  F01E         	goto	l5707
  7994   003D00                     u5710:
  7995   003D00                     
  7996                           ;Memory.c: 21:             reverseDetect(&motorL, &motorR);
  7997   003D00  0EC7               	movlw	low _motorL
  7998   003D02  6E1A               	movwf	reverseDetect@mL^0,c
  7999   003D04  0E01               	movlw	high _motorL
  8000   003D06  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8001   003D08  0EBE               	movlw	low _motorR
  8002   003D0A  6E1C               	movwf	reverseDetect@mR^0,c
  8003   003D0C  0E01               	movlw	high _motorR
  8004   003D0E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8005   003D10  EC35  F02C         	call	_reverseDetect	;wreg free
  8006                           
  8007                           ;Memory.c: 22:             ReverseYellow(&motorL, &motorR);
  8008   003D14  0EC7               	movlw	low _motorL
  8009   003D16  6E20               	movwf	ReverseYellow@mL^0,c
  8010   003D18  0E01               	movlw	high _motorL
  8011   003D1A  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8012   003D1C  0EBE               	movlw	low _motorR
  8013   003D1E  6E22               	movwf	ReverseYellow@mR^0,c
  8014   003D20  0E01               	movlw	high _motorR
  8015   003D22  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8016   003D24  EC6F  F027         	call	_ReverseYellow	;wreg free
  8017                           
  8018                           ;Memory.c: 23:         }
  8019   003D28  EF42  F01F         	goto	l5723
  8020   003D2C                     l5707:
  8021   003D2C  502B               	movf	go_Home@i^0,w,c
  8022   003D2E  2424               	addwf	go_Home@WayBack^0,w,c
  8023   003D30  6E28               	movwf	??_go_Home^0,c
  8024   003D32  502C               	movf	(go_Home@i+1)^0,w,c
  8025   003D34  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8026   003D36  6E29               	movwf	(??_go_Home+1)^0,c
  8027   003D38  0EFF               	movlw	255
  8028   003D3A  2428               	addwf	??_go_Home^0,w,c
  8029   003D3C  6ED9               	movwf	fsr2l,c
  8030   003D3E  0EFF               	movlw	255
  8031   003D40  2029               	addwfc	(??_go_Home+1)^0,w,c
  8032   003D42  6EDA               	movwf	fsr2h,c
  8033   003D44  0E04               	movlw	4
  8034   003D46  18DE               	xorwf	postinc2,w,c
  8035   003D48  A4D8               	btfss	status,2,c
  8036   003D4A  EFA9  F01E         	goto	u5721
  8037   003D4E  EFAB  F01E         	goto	u5720
  8038   003D52                     u5721:
  8039   003D52  EFC1  F01E         	goto	l5711
  8040   003D56                     u5720:
  8041   003D56                     
  8042                           ;Memory.c: 25:             reverseDetect(&motorL, &motorR);
  8043   003D56  0EC7               	movlw	low _motorL
  8044   003D58  6E1A               	movwf	reverseDetect@mL^0,c
  8045   003D5A  0E01               	movlw	high _motorL
  8046   003D5C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8047   003D5E  0EBE               	movlw	low _motorR
  8048   003D60  6E1C               	movwf	reverseDetect@mR^0,c
  8049   003D62  0E01               	movlw	high _motorR
  8050   003D64  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8051   003D66  EC35  F02C         	call	_reverseDetect	;wreg free
  8052                           
  8053                           ;Memory.c: 26:             BlueMove(&motorL, &motorR);
  8054   003D6A  0EC7               	movlw	low _motorL
  8055   003D6C  6E20               	movwf	BlueMove@mL^0,c
  8056   003D6E  0E01               	movlw	high _motorL
  8057   003D70  6E21               	movwf	(BlueMove@mL+1)^0,c
  8058   003D72  0EBE               	movlw	low _motorR
  8059   003D74  6E22               	movwf	BlueMove@mR^0,c
  8060   003D76  0E01               	movlw	high _motorR
  8061   003D78  6E23               	movwf	(BlueMove@mR+1)^0,c
  8062   003D7A  EC79  F02B         	call	_BlueMove	;wreg free
  8063                           
  8064                           ;Memory.c: 27:         }
  8065   003D7E  EF42  F01F         	goto	l5723
  8066   003D82                     l5711:
  8067   003D82  502B               	movf	go_Home@i^0,w,c
  8068   003D84  2424               	addwf	go_Home@WayBack^0,w,c
  8069   003D86  6E28               	movwf	??_go_Home^0,c
  8070   003D88  502C               	movf	(go_Home@i+1)^0,w,c
  8071   003D8A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8072   003D8C  6E29               	movwf	(??_go_Home+1)^0,c
  8073   003D8E  0EFF               	movlw	255
  8074   003D90  2428               	addwf	??_go_Home^0,w,c
  8075   003D92  6ED9               	movwf	fsr2l,c
  8076   003D94  0EFF               	movlw	255
  8077   003D96  2029               	addwfc	(??_go_Home+1)^0,w,c
  8078   003D98  6EDA               	movwf	fsr2h,c
  8079   003D9A  0E05               	movlw	5
  8080   003D9C  18DE               	xorwf	postinc2,w,c
  8081   003D9E  A4D8               	btfss	status,2,c
  8082   003DA0  EFD4  F01E         	goto	u5731
  8083   003DA4  EFD6  F01E         	goto	u5730
  8084   003DA8                     u5731:
  8085   003DA8  EFEC  F01E         	goto	l5715
  8086   003DAC                     u5730:
  8087   003DAC                     
  8088                           ;Memory.c: 29:             reverseDetect(&motorL, &motorR);
  8089   003DAC  0EC7               	movlw	low _motorL
  8090   003DAE  6E1A               	movwf	reverseDetect@mL^0,c
  8091   003DB0  0E01               	movlw	high _motorL
  8092   003DB2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8093   003DB4  0EBE               	movlw	low _motorR
  8094   003DB6  6E1C               	movwf	reverseDetect@mR^0,c
  8095   003DB8  0E01               	movlw	high _motorR
  8096   003DBA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8097   003DBC  EC35  F02C         	call	_reverseDetect	;wreg free
  8098                           
  8099                           ;Memory.c: 30:             RedMove(&motorL, &motorR);
  8100   003DC0  0EC7               	movlw	low _motorL
  8101   003DC2  6E20               	movwf	RedMove@mL^0,c
  8102   003DC4  0E01               	movlw	high _motorL
  8103   003DC6  6E21               	movwf	(RedMove@mL+1)^0,c
  8104   003DC8  0EBE               	movlw	low _motorR
  8105   003DCA  6E22               	movwf	RedMove@mR^0,c
  8106   003DCC  0E01               	movlw	high _motorR
  8107   003DCE  6E23               	movwf	(RedMove@mR+1)^0,c
  8108   003DD0  EC94  F02F         	call	_RedMove	;wreg free
  8109                           
  8110                           ;Memory.c: 31:         }
  8111   003DD4  EF42  F01F         	goto	l5723
  8112   003DD8                     l5715:
  8113   003DD8  502B               	movf	go_Home@i^0,w,c
  8114   003DDA  2424               	addwf	go_Home@WayBack^0,w,c
  8115   003DDC  6E28               	movwf	??_go_Home^0,c
  8116   003DDE  502C               	movf	(go_Home@i+1)^0,w,c
  8117   003DE0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8118   003DE2  6E29               	movwf	(??_go_Home+1)^0,c
  8119   003DE4  0EFF               	movlw	255
  8120   003DE6  2428               	addwf	??_go_Home^0,w,c
  8121   003DE8  6ED9               	movwf	fsr2l,c
  8122   003DEA  0EFF               	movlw	255
  8123   003DEC  2029               	addwfc	(??_go_Home+1)^0,w,c
  8124   003DEE  6EDA               	movwf	fsr2h,c
  8125   003DF0  0E06               	movlw	6
  8126   003DF2  18DE               	xorwf	postinc2,w,c
  8127   003DF4  A4D8               	btfss	status,2,c
  8128   003DF6  EFFF  F01E         	goto	u5741
  8129   003DFA  EF01  F01F         	goto	u5740
  8130   003DFE                     u5741:
  8131   003DFE  EF17  F01F         	goto	l5719
  8132   003E02                     u5740:
  8133   003E02                     
  8134                           ;Memory.c: 33:             reverseDetect(&motorL, &motorR);
  8135   003E02  0EC7               	movlw	low _motorL
  8136   003E04  6E1A               	movwf	reverseDetect@mL^0,c
  8137   003E06  0E01               	movlw	high _motorL
  8138   003E08  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8139   003E0A  0EBE               	movlw	low _motorR
  8140   003E0C  6E1C               	movwf	reverseDetect@mR^0,c
  8141   003E0E  0E01               	movlw	high _motorR
  8142   003E10  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8143   003E12  EC35  F02C         	call	_reverseDetect	;wreg free
  8144                           
  8145                           ;Memory.c: 34:             OrangeMove(&motorL, &motorR);
  8146   003E16  0EC7               	movlw	low _motorL
  8147   003E18  6E20               	movwf	OrangeMove@mL^0,c
  8148   003E1A  0E01               	movlw	high _motorL
  8149   003E1C  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8150   003E1E  0EBE               	movlw	low _motorR
  8151   003E20  6E22               	movwf	OrangeMove@mR^0,c
  8152   003E22  0E01               	movlw	high _motorR
  8153   003E24  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8154   003E26  ECE3  F02C         	call	_OrangeMove	;wreg free
  8155                           
  8156                           ;Memory.c: 35:         }
  8157   003E2A  EF42  F01F         	goto	l5723
  8158   003E2E                     l5719:
  8159   003E2E  502B               	movf	go_Home@i^0,w,c
  8160   003E30  2424               	addwf	go_Home@WayBack^0,w,c
  8161   003E32  6E28               	movwf	??_go_Home^0,c
  8162   003E34  502C               	movf	(go_Home@i+1)^0,w,c
  8163   003E36  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8164   003E38  6E29               	movwf	(??_go_Home+1)^0,c
  8165   003E3A  0EFF               	movlw	255
  8166   003E3C  2428               	addwf	??_go_Home^0,w,c
  8167   003E3E  6ED9               	movwf	fsr2l,c
  8168   003E40  0EFF               	movlw	255
  8169   003E42  2029               	addwfc	(??_go_Home+1)^0,w,c
  8170   003E44  6EDA               	movwf	fsr2h,c
  8171   003E46  0E07               	movlw	7
  8172   003E48  18DE               	xorwf	postinc2,w,c
  8173   003E4A  A4D8               	btfss	status,2,c
  8174   003E4C  EF2A  F01F         	goto	u5751
  8175   003E50  EF2C  F01F         	goto	u5750
  8176   003E54                     u5751:
  8177   003E54  EF42  F01F         	goto	l655
  8178   003E58                     u5750:
  8179   003E58                     
  8180                           ;Memory.c: 37:             reverseDetect(&motorL, &motorR);
  8181   003E58  0EC7               	movlw	low _motorL
  8182   003E5A  6E1A               	movwf	reverseDetect@mL^0,c
  8183   003E5C  0E01               	movlw	high _motorL
  8184   003E5E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8185   003E60  0EBE               	movlw	low _motorR
  8186   003E62  6E1C               	movwf	reverseDetect@mR^0,c
  8187   003E64  0E01               	movlw	high _motorR
  8188   003E66  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8189   003E68  EC35  F02C         	call	_reverseDetect	;wreg free
  8190                           
  8191                           ;Memory.c: 38:             ReversePink(&motorL, &motorR);
  8192   003E6C  0EC7               	movlw	low _motorL
  8193   003E6E  6E20               	movwf	ReversePink@mL^0,c
  8194   003E70  0E01               	movlw	high _motorL
  8195   003E72  6E21               	movwf	(ReversePink@mL+1)^0,c
  8196   003E74  0EBE               	movlw	low _motorR
  8197   003E76  6E22               	movwf	ReversePink@mR^0,c
  8198   003E78  0E01               	movlw	high _motorR
  8199   003E7A  6E23               	movwf	(ReversePink@mR+1)^0,c
  8200   003E7C  ECCA  F027         	call	_ReversePink	;wreg free
  8201   003E80  EF42  F01F         	goto	l5723
  8202   003E84                     l655:
  8203   003E84                     l5723:
  8204                           
  8205                           ;Memory.c: 42:   }
  8206   003E84  062B               	decf	go_Home@i^0,f,c
  8207   003E86  A0D8               	btfss	status,0,c
  8208   003E88  062C               	decf	(go_Home@i+1)^0,f,c
  8209   003E8A  EFF6  F01D         	goto	l5689
  8210   003E8E                     l661:
  8211   003E8E  0012               	return		;funcret
  8212   003E90                     __end_of_go_Home:
  8213                           	callstack 0
  8214                           
  8215 ;; *************** function _timed_forward *****************
  8216 ;; Defined at:
  8217 ;;		line 165 in file "dc_motor.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8220 ;;		 -> motorL(9), 
  8221 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8222 ;;		 -> motorR(9), 
  8223 ;;  time            2   23[COMRAM] int 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8235 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8238 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;Total ram usage:        8 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 2
  8242 ;; This function calls:
  8243 ;;		_delayed_ms
  8244 ;;		_setMotorPWM
  8245 ;; This function is called by:
  8246 ;;		_go_Home
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text33
  8251   00504A                     __ptext33:
  8252                           	callstack 0
  8253   00504A                     _timed_forward:
  8254                           	callstack 27
  8255   00504A                     
  8256                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8257   00504A  EE20 F001          	lfsr	2,1
  8258   00504E  5014               	movf	timed_forward@mL^0,w,c
  8259   005050  26D9               	addwf	fsr2l,f,c
  8260   005052  5015               	movf	(timed_forward@mL+1)^0,w,c
  8261   005054  22DA               	addwfc	fsr2h,f,c
  8262   005056  0E01               	movlw	1
  8263   005058  6EDF               	movwf	indf2,c
  8264                           
  8265                           ;dc_motor.c: 169:     mR->direction =1;
  8266   00505A  EE20 F001          	lfsr	2,1
  8267   00505E  5016               	movf	timed_forward@mR^0,w,c
  8268   005060  26D9               	addwf	fsr2l,f,c
  8269   005062  5017               	movf	(timed_forward@mR+1)^0,w,c
  8270   005064  22DA               	addwfc	fsr2h,f,c
  8271   005066  0E01               	movlw	1
  8272   005068  6EDF               	movwf	indf2,c
  8273                           
  8274                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8275   00506A  EF5B  F028         	goto	l5235
  8276   00506E                     l5227:
  8277                           
  8278                           ;dc_motor.c: 172:         mL->power+=10;
  8279   00506E  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8280   005072  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8281   005076  0E0A               	movlw	10
  8282   005078  26DF               	addwf	indf2,f,c
  8283                           
  8284                           ;dc_motor.c: 173:         mR->power+=10;
  8285   00507A  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8286   00507E  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8287   005082  0E0A               	movlw	10
  8288   005084  26DF               	addwf	indf2,f,c
  8289   005086                     
  8290                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8291   005086  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8292   00508A  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8293   00508E  EC1E  F024         	call	_setMotorPWM	;wreg free
  8294   005092                     
  8295                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8296   005092  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8297   005096  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8298   00509A  EC1E  F024         	call	_setMotorPWM	;wreg free
  8299   00509E                     
  8300                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8301   00509E  0E02               	movlw	2
  8302   0050A0  6E1B               	movwf	(??_timed_forward+1)^0,c
  8303   0050A2  0EA0               	movlw	160
  8304   0050A4  6E1A               	movwf	??_timed_forward^0,c
  8305   0050A6  0E92               	movlw	146
  8306   0050A8                     u6137:
  8307   0050A8  2EE8               	decfsz	wreg,f,c
  8308   0050AA  D7FE               	bra	u6137
  8309   0050AC  2E1A               	decfsz	??_timed_forward^0,f,c
  8310   0050AE  D7FC               	bra	u6137
  8311   0050B0  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8312   0050B2  D7FA               	bra	u6137
  8313   0050B4  D000               	nop2	
  8314   0050B6                     l5235:
  8315   0050B6  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8316   0050BA  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8317   0050BE  0E1E               	movlw	30
  8318   0050C0  60DF               	cpfslt	indf2,c
  8319   0050C2  EF65  F028         	goto	u5081
  8320   0050C6  EF67  F028         	goto	u5080
  8321   0050CA                     u5081:
  8322   0050CA  EF73  F028         	goto	l5239
  8323   0050CE                     u5080:
  8324   0050CE  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8325   0050D2  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8326   0050D6  0E1D               	movlw	29
  8327   0050D8  64DF               	cpfsgt	indf2,c
  8328   0050DA  EF71  F028         	goto	u5091
  8329   0050DE  EF73  F028         	goto	u5090
  8330   0050E2                     u5091:
  8331   0050E2  EF37  F028         	goto	l5227
  8332   0050E6                     u5090:
  8333   0050E6                     l5239:
  8334                           
  8335                           ;dc_motor.c: 181:     delayed_ms(time);
  8336   0050E6  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8337   0050EA  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8338   0050EE  ECEE  F02F         	call	_delayed_ms	;wreg free
  8339   0050F2  0012               	return		;funcret
  8340   0050F4                     __end_of_timed_forward:
  8341                           	callstack 0
  8342                           
  8343 ;; *************** function _delayed_ms *****************
  8344 ;; Defined at:
  8345 ;;		line 39 in file "timers.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  time            2    0[COMRAM] int 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  i               2    3[COMRAM] unsigned int 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8363 ;;Total ram usage:        5 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_timed_forward
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text34
  8373   005FDC                     __ptext34:
  8374                           	callstack 0
  8375   005FDC                     _delayed_ms:
  8376                           	callstack 28
  8377   005FDC                     
  8378                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8379   005FDC  0E00               	movlw	0
  8380   005FDE  6E05               	movwf	(delayed_ms@i+1)^0,c
  8381   005FE0  0E00               	movlw	0
  8382   005FE2  6E04               	movwf	delayed_ms@i^0,c
  8383   005FE4  EFFE  F02F         	goto	l688
  8384   005FE8                     l5059:
  8385                           
  8386                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8387   005FE8  0E15               	movlw	21
  8388   005FEA  6E03               	movwf	??_delayed_ms^0,c
  8389   005FEC  0EC6               	movlw	198
  8390   005FEE                     u6147:
  8391   005FEE  2EE8               	decfsz	wreg,f,c
  8392   005FF0  D7FE               	bra	u6147
  8393   005FF2  2E03               	decfsz	??_delayed_ms^0,f,c
  8394   005FF4  D7FC               	bra	u6147
  8395   005FF6  D000               	nop2	
  8396   005FF8                     
  8397                           ;timers.c: 42:     }
  8398   005FF8  4A04               	infsnz	delayed_ms@i^0,f,c
  8399   005FFA  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8400   005FFC                     l688:
  8401   005FFC  5001               	movf	delayed_ms@time^0,w,c
  8402   005FFE  5C04               	subwf	delayed_ms@i^0,w,c
  8403   006000  5002               	movf	(delayed_ms@time+1)^0,w,c
  8404   006002  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8405   006004  A0D8               	btfss	status,0,c
  8406   006006  EF07  F030         	goto	u5021
  8407   00600A  EF09  F030         	goto	u5020
  8408   00600E                     u5021:
  8409   00600E  EFF4  F02F         	goto	l5059
  8410   006012                     u5020:
  8411   006012  0012               	return		;funcret
  8412   006014                     __end_of_delayed_ms:
  8413                           	callstack 0
  8414                           
  8415 ;; *************** function _ReverseYellow *****************
  8416 ;; Defined at:
  8417 ;;		line 334 in file "dc_motor.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8420 ;;		 -> motorL(9), 
  8421 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8422 ;;		 -> motorR(9), 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;		None
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  1    wreg      void 
  8427 ;; Registers used:
  8428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;Total ram usage:        4 bytes
  8439 ;; Hardware stack levels used: 1
  8440 ;; Hardware stack levels required when called: 4
  8441 ;; This function calls:
  8442 ;;		_ForwardOneBlock
  8443 ;;		_reverseDetect
  8444 ;;		_turnRight45
  8445 ;; This function is called by:
  8446 ;;		_go_Home
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text35
  8451   004EDE                     __ptext35:
  8452                           	callstack 0
  8453   004EDE                     _ReverseYellow:
  8454                           	callstack 25
  8455   004EDE                     
  8456                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8457   004EDE  0EC7               	movlw	low _motorL
  8458   004EE0  6E1A               	movwf	reverseDetect@mL^0,c
  8459   004EE2  0E01               	movlw	high _motorL
  8460   004EE4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8461   004EE6  0EBE               	movlw	low _motorR
  8462   004EE8  6E1C               	movwf	reverseDetect@mR^0,c
  8463   004EEA  0E01               	movlw	high _motorR
  8464   004EEC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8465   004EEE  EC35  F02C         	call	_reverseDetect	;wreg free
  8466                           
  8467                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8468   004EF2  0EC7               	movlw	low _motorL
  8469   004EF4  6E1A               	movwf	turnRight45@mL^0,c
  8470   004EF6  0E01               	movlw	high _motorL
  8471   004EF8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8472   004EFA  0EBE               	movlw	low _motorR
  8473   004EFC  6E1C               	movwf	turnRight45@mR^0,c
  8474   004EFE  0E01               	movlw	high _motorR
  8475   004F00  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8476   004F02  EC78  F02E         	call	_turnRight45	;wreg free
  8477                           
  8478                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8479   004F06  0EC7               	movlw	low _motorL
  8480   004F08  6E1A               	movwf	turnRight45@mL^0,c
  8481   004F0A  0E01               	movlw	high _motorL
  8482   004F0C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8483   004F0E  0EBE               	movlw	low _motorR
  8484   004F10  6E1C               	movwf	turnRight45@mR^0,c
  8485   004F12  0E01               	movlw	high _motorR
  8486   004F14  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8487   004F16  EC78  F02E         	call	_turnRight45	;wreg free
  8488                           
  8489                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  8490   004F1A  0EC7               	movlw	low _motorL
  8491   004F1C  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8492   004F1E  0E01               	movlw	high _motorL
  8493   004F20  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8494   004F22  0EBE               	movlw	low _motorR
  8495   004F24  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8496   004F26  0E01               	movlw	high _motorR
  8497   004F28  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8498   004F2A  ECDB  F02B         	call	_ForwardOneBlock	;wreg free
  8499                           
  8500                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  8501   004F2E  0EC7               	movlw	low _motorL
  8502   004F30  6E1A               	movwf	reverseDetect@mL^0,c
  8503   004F32  0E01               	movlw	high _motorL
  8504   004F34  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8505   004F36  0EBE               	movlw	low _motorR
  8506   004F38  6E1C               	movwf	reverseDetect@mR^0,c
  8507   004F3A  0E01               	movlw	high _motorR
  8508   004F3C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8509   004F3E  EC35  F02C         	call	_reverseDetect	;wreg free
  8510                           
  8511                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8512   004F42  0EC7               	movlw	low _motorL
  8513   004F44  6E1A               	movwf	turnRight45@mL^0,c
  8514   004F46  0E01               	movlw	high _motorL
  8515   004F48  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8516   004F4A  0EBE               	movlw	low _motorR
  8517   004F4C  6E1C               	movwf	turnRight45@mR^0,c
  8518   004F4E  0E01               	movlw	high _motorR
  8519   004F50  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8520   004F52  EC78  F02E         	call	_turnRight45	;wreg free
  8521                           
  8522                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8523   004F56  0EC7               	movlw	low _motorL
  8524   004F58  6E1A               	movwf	turnRight45@mL^0,c
  8525   004F5A  0E01               	movlw	high _motorL
  8526   004F5C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8527   004F5E  0EBE               	movlw	low _motorR
  8528   004F60  6E1C               	movwf	turnRight45@mR^0,c
  8529   004F62  0E01               	movlw	high _motorR
  8530   004F64  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8531   004F66  EC78  F02E         	call	_turnRight45	;wreg free
  8532                           
  8533                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8534   004F6A  0EC7               	movlw	low _motorL
  8535   004F6C  6E1A               	movwf	turnRight45@mL^0,c
  8536   004F6E  0E01               	movlw	high _motorL
  8537   004F70  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8538   004F72  0EBE               	movlw	low _motorR
  8539   004F74  6E1C               	movwf	turnRight45@mR^0,c
  8540   004F76  0E01               	movlw	high _motorR
  8541   004F78  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8542   004F7A  EC78  F02E         	call	_turnRight45	;wreg free
  8543                           
  8544                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  8545   004F7E  0EC7               	movlw	low _motorL
  8546   004F80  6E1A               	movwf	turnRight45@mL^0,c
  8547   004F82  0E01               	movlw	high _motorL
  8548   004F84  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8549   004F86  0EBE               	movlw	low _motorR
  8550   004F88  6E1C               	movwf	turnRight45@mR^0,c
  8551   004F8A  0E01               	movlw	high _motorR
  8552   004F8C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8553   004F8E  EC78  F02E         	call	_turnRight45	;wreg free
  8554   004F92  0012               	return		;funcret
  8555   004F94                     __end_of_ReverseYellow:
  8556                           	callstack 0
  8557                           
  8558 ;; *************** function _ReversePink *****************
  8559 ;; Defined at:
  8560 ;;		line 345 in file "dc_motor.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8563 ;;		 -> motorL(9), 
  8564 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8565 ;;		 -> motorR(9), 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8581 ;;Total ram usage:        4 bytes
  8582 ;; Hardware stack levels used: 1
  8583 ;; Hardware stack levels required when called: 4
  8584 ;; This function calls:
  8585 ;;		_ForwardOneBlock
  8586 ;;		_reverseDetect
  8587 ;;		_turnLeft45
  8588 ;; This function is called by:
  8589 ;;		_go_Home
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text36
  8594   004F94                     __ptext36:
  8595                           	callstack 0
  8596   004F94                     _ReversePink:
  8597                           	callstack 25
  8598   004F94                     
  8599                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  8600   004F94  0EC7               	movlw	low _motorL
  8601   004F96  6E1A               	movwf	reverseDetect@mL^0,c
  8602   004F98  0E01               	movlw	high _motorL
  8603   004F9A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8604   004F9C  0EBE               	movlw	low _motorR
  8605   004F9E  6E1C               	movwf	reverseDetect@mR^0,c
  8606   004FA0  0E01               	movlw	high _motorR
  8607   004FA2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8608   004FA4  EC35  F02C         	call	_reverseDetect	;wreg free
  8609                           
  8610                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8611   004FA8  0EC7               	movlw	low _motorL
  8612   004FAA  6E1A               	movwf	turnLeft45@mL^0,c
  8613   004FAC  0E01               	movlw	high _motorL
  8614   004FAE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8615   004FB0  0EBE               	movlw	low _motorR
  8616   004FB2  6E1C               	movwf	turnLeft45@mR^0,c
  8617   004FB4  0E01               	movlw	high _motorR
  8618   004FB6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8619   004FB8  EC9F  F02E         	call	_turnLeft45	;wreg free
  8620                           
  8621                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  8622   004FBC  0EC7               	movlw	low _motorL
  8623   004FBE  6E1A               	movwf	turnLeft45@mL^0,c
  8624   004FC0  0E01               	movlw	high _motorL
  8625   004FC2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8626   004FC4  0EBE               	movlw	low _motorR
  8627   004FC6  6E1C               	movwf	turnLeft45@mR^0,c
  8628   004FC8  0E01               	movlw	high _motorR
  8629   004FCA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8630   004FCC  EC9F  F02E         	call	_turnLeft45	;wreg free
  8631                           
  8632                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  8633   004FD0  0EC7               	movlw	low _motorL
  8634   004FD2  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8635   004FD4  0E01               	movlw	high _motorL
  8636   004FD6  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8637   004FD8  0EBE               	movlw	low _motorR
  8638   004FDA  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8639   004FDC  0E01               	movlw	high _motorR
  8640   004FDE  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8641   004FE0  ECDB  F02B         	call	_ForwardOneBlock	;wreg free
  8642                           
  8643                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  8644   004FE4  0EC7               	movlw	low _motorL
  8645   004FE6  6E1A               	movwf	reverseDetect@mL^0,c
  8646   004FE8  0E01               	movlw	high _motorL
  8647   004FEA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8648   004FEC  0EBE               	movlw	low _motorR
  8649   004FEE  6E1C               	movwf	reverseDetect@mR^0,c
  8650   004FF0  0E01               	movlw	high _motorR
  8651   004FF2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8652   004FF4  EC35  F02C         	call	_reverseDetect	;wreg free
  8653                           
  8654                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8655   004FF8  0EC7               	movlw	low _motorL
  8656   004FFA  6E1A               	movwf	turnLeft45@mL^0,c
  8657   004FFC  0E01               	movlw	high _motorL
  8658   004FFE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8659   005000  0EBE               	movlw	low _motorR
  8660   005002  6E1C               	movwf	turnLeft45@mR^0,c
  8661   005004  0E01               	movlw	high _motorR
  8662   005006  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8663   005008  EC9F  F02E         	call	_turnLeft45	;wreg free
  8664                           
  8665                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8666   00500C  0EC7               	movlw	low _motorL
  8667   00500E  6E1A               	movwf	turnLeft45@mL^0,c
  8668   005010  0E01               	movlw	high _motorL
  8669   005012  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8670   005014  0EBE               	movlw	low _motorR
  8671   005016  6E1C               	movwf	turnLeft45@mR^0,c
  8672   005018  0E01               	movlw	high _motorR
  8673   00501A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8674   00501C  EC9F  F02E         	call	_turnLeft45	;wreg free
  8675                           
  8676                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8677   005020  0EC7               	movlw	low _motorL
  8678   005022  6E1A               	movwf	turnLeft45@mL^0,c
  8679   005024  0E01               	movlw	high _motorL
  8680   005026  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8681   005028  0EBE               	movlw	low _motorR
  8682   00502A  6E1C               	movwf	turnLeft45@mR^0,c
  8683   00502C  0E01               	movlw	high _motorR
  8684   00502E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8685   005030  EC9F  F02E         	call	_turnLeft45	;wreg free
  8686                           
  8687                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  8688   005034  0EC7               	movlw	low _motorL
  8689   005036  6E1A               	movwf	turnLeft45@mL^0,c
  8690   005038  0E01               	movlw	high _motorL
  8691   00503A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8692   00503C  0EBE               	movlw	low _motorR
  8693   00503E  6E1C               	movwf	turnLeft45@mR^0,c
  8694   005040  0E01               	movlw	high _motorR
  8695   005042  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8696   005044  EC9F  F02E         	call	_turnLeft45	;wreg free
  8697   005048  0012               	return		;funcret
  8698   00504A                     __end_of_ReversePink:
  8699                           	callstack 0
  8700                           
  8701 ;; *************** function _ForwardOneBlock *****************
  8702 ;; Defined at:
  8703 ;;		line 238 in file "dc_motor.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8706 ;;		 -> motorL(9), 
  8707 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8708 ;;		 -> motorR(9), 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      void 
  8713 ;; Registers used:
  8714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;Total ram usage:        6 bytes
  8725 ;; Hardware stack levels used: 1
  8726 ;; Hardware stack levels required when called: 3
  8727 ;; This function calls:
  8728 ;;		_fullSpeedAhead
  8729 ;;		_stop
  8730 ;; This function is called by:
  8731 ;;		_ReverseYellow
  8732 ;;		_ReversePink
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text37
  8737   0057B6                     __ptext37:
  8738                           	callstack 0
  8739   0057B6                     _ForwardOneBlock:
  8740                           	callstack 25
  8741   0057B6                     
  8742                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8743   0057B6  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8744   0057BA  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8745   0057BE  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8746   0057C2  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8747   0057C6  ECBC  F029         	call	_fullSpeedAhead	;wreg free
  8748   0057CA                     
  8749                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8750   0057CA  0EA3               	movlw	163
  8751   0057CC  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8752   0057CE  0E57               	movlw	87
  8753   0057D0  6E1E               	movwf	??_ForwardOneBlock^0,c
  8754   0057D2  0E02               	movlw	2
  8755   0057D4                     u6157:
  8756   0057D4  2EE8               	decfsz	wreg,f,c
  8757   0057D6  D7FE               	bra	u6157
  8758   0057D8  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8759   0057DA  D7FC               	bra	u6157
  8760   0057DC  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8761   0057DE  D7FA               	bra	u6157
  8762   0057E0  D000               	nop2	
  8763   0057E2                     
  8764                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8765   0057E2  0EC7               	movlw	low _motorL
  8766   0057E4  6E14               	movwf	stop@mL^0,c
  8767   0057E6  0E01               	movlw	high _motorL
  8768   0057E8  6E15               	movwf	(stop@mL+1)^0,c
  8769   0057EA  0EBE               	movlw	low _motorR
  8770   0057EC  6E16               	movwf	stop@mR^0,c
  8771   0057EE  0E01               	movlw	high _motorR
  8772   0057F0  6E17               	movwf	(stop@mR+1)^0,c
  8773   0057F2  EC90  F02A         	call	_stop	;wreg free
  8774                           
  8775                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8776   0057F6  0E05               	movlw	5
  8777   0057F8  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8778   0057FA  0E0F               	movlw	15
  8779   0057FC  6E1E               	movwf	??_ForwardOneBlock^0,c
  8780   0057FE  0EF1               	movlw	241
  8781   005800                     u6167:
  8782   005800  2EE8               	decfsz	wreg,f,c
  8783   005802  D7FE               	bra	u6167
  8784   005804  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8785   005806  D7FC               	bra	u6167
  8786   005808  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8787   00580A  D7FA               	bra	u6167
  8788   00580C  F000               	nop	
  8789   00580E  0012               	return		;funcret
  8790   005810                     __end_of_ForwardOneBlock:
  8791                           	callstack 0
  8792                           
  8793 ;; *************** function _RedMove *****************
  8794 ;; Defined at:
  8795 ;;		line 262 in file "dc_motor.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8798 ;;		 -> motorL(9), 
  8799 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8800 ;;		 -> motorR(9), 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  1    wreg      void 
  8805 ;; Registers used:
  8806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;Total ram usage:        4 bytes
  8817 ;; Hardware stack levels used: 1
  8818 ;; Hardware stack levels required when called: 4
  8819 ;; This function calls:
  8820 ;;		_reverseDetect
  8821 ;;		_turnRight45
  8822 ;; This function is called by:
  8823 ;;		_main
  8824 ;;		_go_Home
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text38
  8829   005F28                     __ptext38:
  8830                           	callstack 0
  8831   005F28                     _RedMove:
  8832                           	callstack 25
  8833   005F28                     
  8834                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8835   005F28  0EC7               	movlw	low _motorL
  8836   005F2A  6E1A               	movwf	reverseDetect@mL^0,c
  8837   005F2C  0E01               	movlw	high _motorL
  8838   005F2E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8839   005F30  0EBE               	movlw	low _motorR
  8840   005F32  6E1C               	movwf	reverseDetect@mR^0,c
  8841   005F34  0E01               	movlw	high _motorR
  8842   005F36  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8843   005F38  EC35  F02C         	call	_reverseDetect	;wreg free
  8844                           
  8845                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8846   005F3C  0EC7               	movlw	low _motorL
  8847   005F3E  6E1A               	movwf	turnRight45@mL^0,c
  8848   005F40  0E01               	movlw	high _motorL
  8849   005F42  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8850   005F44  0EBE               	movlw	low _motorR
  8851   005F46  6E1C               	movwf	turnRight45@mR^0,c
  8852   005F48  0E01               	movlw	high _motorR
  8853   005F4A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8854   005F4C  EC78  F02E         	call	_turnRight45	;wreg free
  8855                           
  8856                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8857   005F50  0EC7               	movlw	low _motorL
  8858   005F52  6E1A               	movwf	turnRight45@mL^0,c
  8859   005F54  0E01               	movlw	high _motorL
  8860   005F56  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8861   005F58  0EBE               	movlw	low _motorR
  8862   005F5A  6E1C               	movwf	turnRight45@mR^0,c
  8863   005F5C  0E01               	movlw	high _motorR
  8864   005F5E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8865   005F60  EC78  F02E         	call	_turnRight45	;wreg free
  8866   005F64  0012               	return		;funcret
  8867   005F66                     __end_of_RedMove:
  8868                           	callstack 0
  8869                           
  8870 ;; *************** function _OrangeMove *****************
  8871 ;; Defined at:
  8872 ;;		line 308 in file "dc_motor.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8875 ;;		 -> motorL(9), 
  8876 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8877 ;;		 -> motorR(9), 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  1    wreg      void 
  8882 ;; Registers used:
  8883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8893 ;;Total ram usage:        4 bytes
  8894 ;; Hardware stack levels used: 1
  8895 ;; Hardware stack levels required when called: 4
  8896 ;; This function calls:
  8897 ;;		_reverseDetect
  8898 ;;		_turnRight45
  8899 ;; This function is called by:
  8900 ;;		_main
  8901 ;;		_go_Home
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text39
  8906   0059C6                     __ptext39:
  8907                           	callstack 0
  8908   0059C6                     _OrangeMove:
  8909                           	callstack 25
  8910   0059C6                     
  8911                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8912   0059C6  0EC7               	movlw	low _motorL
  8913   0059C8  6E1A               	movwf	reverseDetect@mL^0,c
  8914   0059CA  0E01               	movlw	high _motorL
  8915   0059CC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8916   0059CE  0EBE               	movlw	low _motorR
  8917   0059D0  6E1C               	movwf	reverseDetect@mR^0,c
  8918   0059D2  0E01               	movlw	high _motorR
  8919   0059D4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8920   0059D6  EC35  F02C         	call	_reverseDetect	;wreg free
  8921                           
  8922                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8923   0059DA  0EC7               	movlw	low _motorL
  8924   0059DC  6E1A               	movwf	turnRight45@mL^0,c
  8925   0059DE  0E01               	movlw	high _motorL
  8926   0059E0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8927   0059E2  0EBE               	movlw	low _motorR
  8928   0059E4  6E1C               	movwf	turnRight45@mR^0,c
  8929   0059E6  0E01               	movlw	high _motorR
  8930   0059E8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8931   0059EA  EC78  F02E         	call	_turnRight45	;wreg free
  8932                           
  8933                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8934   0059EE  0EC7               	movlw	low _motorL
  8935   0059F0  6E1A               	movwf	turnRight45@mL^0,c
  8936   0059F2  0E01               	movlw	high _motorL
  8937   0059F4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8938   0059F6  0EBE               	movlw	low _motorR
  8939   0059F8  6E1C               	movwf	turnRight45@mR^0,c
  8940   0059FA  0E01               	movlw	high _motorR
  8941   0059FC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8942   0059FE  EC78  F02E         	call	_turnRight45	;wreg free
  8943                           
  8944                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8945   005A02  0EC7               	movlw	low _motorL
  8946   005A04  6E1A               	movwf	turnRight45@mL^0,c
  8947   005A06  0E01               	movlw	high _motorL
  8948   005A08  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8949   005A0A  0EBE               	movlw	low _motorR
  8950   005A0C  6E1C               	movwf	turnRight45@mR^0,c
  8951   005A0E  0E01               	movlw	high _motorR
  8952   005A10  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8953   005A12  EC78  F02E         	call	_turnRight45	;wreg free
  8954   005A16  0012               	return		;funcret
  8955   005A18                     __end_of_OrangeMove:
  8956                           	callstack 0
  8957                           
  8958 ;; *************** function _LightBlueMove *****************
  8959 ;; Defined at:
  8960 ;;		line 317 in file "dc_motor.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8963 ;;		 -> motorL(9), 
  8964 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8965 ;;		 -> motorR(9), 
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;		None
  8968 ;; Return value:  Size  Location     Type
  8969 ;;                  1    wreg      void 
  8970 ;; Registers used:
  8971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8972 ;; Tracked objects:
  8973 ;;		On entry : 0/0
  8974 ;;		On exit  : 0/0
  8975 ;;		Unchanged: 0/0
  8976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8981 ;;Total ram usage:        4 bytes
  8982 ;; Hardware stack levels used: 1
  8983 ;; Hardware stack levels required when called: 4
  8984 ;; This function calls:
  8985 ;;		_reverseDetect
  8986 ;;		_turnLeft45
  8987 ;; This function is called by:
  8988 ;;		_main
  8989 ;;		_go_Home
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text40
  8994   005A18                     __ptext40:
  8995                           	callstack 0
  8996   005A18                     _LightBlueMove:
  8997                           	callstack 25
  8998   005A18                     
  8999                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  9000   005A18  0EC7               	movlw	low _motorL
  9001   005A1A  6E1A               	movwf	reverseDetect@mL^0,c
  9002   005A1C  0E01               	movlw	high _motorL
  9003   005A1E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9004   005A20  0EBE               	movlw	low _motorR
  9005   005A22  6E1C               	movwf	reverseDetect@mR^0,c
  9006   005A24  0E01               	movlw	high _motorR
  9007   005A26  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9008   005A28  EC35  F02C         	call	_reverseDetect	;wreg free
  9009                           
  9010                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  9011   005A2C  0EC7               	movlw	low _motorL
  9012   005A2E  6E1A               	movwf	turnLeft45@mL^0,c
  9013   005A30  0E01               	movlw	high _motorL
  9014   005A32  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9015   005A34  0EBE               	movlw	low _motorR
  9016   005A36  6E1C               	movwf	turnLeft45@mR^0,c
  9017   005A38  0E01               	movlw	high _motorR
  9018   005A3A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9019   005A3C  EC9F  F02E         	call	_turnLeft45	;wreg free
  9020                           
  9021                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  9022   005A40  0EC7               	movlw	low _motorL
  9023   005A42  6E1A               	movwf	turnLeft45@mL^0,c
  9024   005A44  0E01               	movlw	high _motorL
  9025   005A46  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9026   005A48  0EBE               	movlw	low _motorR
  9027   005A4A  6E1C               	movwf	turnLeft45@mR^0,c
  9028   005A4C  0E01               	movlw	high _motorR
  9029   005A4E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9030   005A50  EC9F  F02E         	call	_turnLeft45	;wreg free
  9031                           
  9032                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  9033   005A54  0EC7               	movlw	low _motorL
  9034   005A56  6E1A               	movwf	turnLeft45@mL^0,c
  9035   005A58  0E01               	movlw	high _motorL
  9036   005A5A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9037   005A5C  0EBE               	movlw	low _motorR
  9038   005A5E  6E1C               	movwf	turnLeft45@mR^0,c
  9039   005A60  0E01               	movlw	high _motorR
  9040   005A62  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9041   005A64  EC9F  F02E         	call	_turnLeft45	;wreg free
  9042   005A68  0012               	return		;funcret
  9043   005A6A                     __end_of_LightBlueMove:
  9044                           	callstack 0
  9045                           
  9046 ;; *************** function _GreenMove *****************
  9047 ;; Defined at:
  9048 ;;		line 270 in file "dc_motor.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9051 ;;		 -> motorL(9), 
  9052 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9053 ;;		 -> motorR(9), 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;		None
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;Total ram usage:        4 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 4
  9072 ;; This function calls:
  9073 ;;		_reverseDetect
  9074 ;;		_turnLeft45
  9075 ;; This function is called by:
  9076 ;;		_main
  9077 ;;		_go_Home
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text41
  9082   005F66                     __ptext41:
  9083                           	callstack 0
  9084   005F66                     _GreenMove:
  9085                           	callstack 25
  9086   005F66                     
  9087                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9088   005F66  0EC7               	movlw	low _motorL
  9089   005F68  6E1A               	movwf	reverseDetect@mL^0,c
  9090   005F6A  0E01               	movlw	high _motorL
  9091   005F6C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9092   005F6E  0EBE               	movlw	low _motorR
  9093   005F70  6E1C               	movwf	reverseDetect@mR^0,c
  9094   005F72  0E01               	movlw	high _motorR
  9095   005F74  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9096   005F76  EC35  F02C         	call	_reverseDetect	;wreg free
  9097                           
  9098                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9099   005F7A  0EC7               	movlw	low _motorL
  9100   005F7C  6E1A               	movwf	turnLeft45@mL^0,c
  9101   005F7E  0E01               	movlw	high _motorL
  9102   005F80  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9103   005F82  0EBE               	movlw	low _motorR
  9104   005F84  6E1C               	movwf	turnLeft45@mR^0,c
  9105   005F86  0E01               	movlw	high _motorR
  9106   005F88  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9107   005F8A  EC9F  F02E         	call	_turnLeft45	;wreg free
  9108                           
  9109                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9110   005F8E  0EC7               	movlw	low _motorL
  9111   005F90  6E1A               	movwf	turnLeft45@mL^0,c
  9112   005F92  0E01               	movlw	high _motorL
  9113   005F94  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9114   005F96  0EBE               	movlw	low _motorR
  9115   005F98  6E1C               	movwf	turnLeft45@mR^0,c
  9116   005F9A  0E01               	movlw	high _motorR
  9117   005F9C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9118   005F9E  EC9F  F02E         	call	_turnLeft45	;wreg free
  9119   005FA2  0012               	return		;funcret
  9120   005FA4                     __end_of_GreenMove:
  9121                           	callstack 0
  9122                           
  9123 ;; *************** function _BlueMove *****************
  9124 ;; Defined at:
  9125 ;;		line 278 in file "dc_motor.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9128 ;;		 -> motorL(9), 
  9129 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9130 ;;		 -> motorR(9), 
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;		None
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      void 
  9135 ;; Registers used:
  9136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9145 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;Total ram usage:        4 bytes
  9147 ;; Hardware stack levels used: 1
  9148 ;; Hardware stack levels required when called: 4
  9149 ;; This function calls:
  9150 ;;		_reverseDetect
  9151 ;;		_turnRight45
  9152 ;; This function is called by:
  9153 ;;		_main
  9154 ;;		_go_Home
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text42
  9159   0056F2                     __ptext42:
  9160                           	callstack 0
  9161   0056F2                     _BlueMove:
  9162                           	callstack 25
  9163   0056F2                     
  9164                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9165   0056F2  0EC7               	movlw	low _motorL
  9166   0056F4  6E1A               	movwf	reverseDetect@mL^0,c
  9167   0056F6  0E01               	movlw	high _motorL
  9168   0056F8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9169   0056FA  0EBE               	movlw	low _motorR
  9170   0056FC  6E1C               	movwf	reverseDetect@mR^0,c
  9171   0056FE  0E01               	movlw	high _motorR
  9172   005700  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9173   005702  EC35  F02C         	call	_reverseDetect	;wreg free
  9174                           
  9175                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9176   005706  0EC7               	movlw	low _motorL
  9177   005708  6E1A               	movwf	turnRight45@mL^0,c
  9178   00570A  0E01               	movlw	high _motorL
  9179   00570C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9180   00570E  0EBE               	movlw	low _motorR
  9181   005710  6E1C               	movwf	turnRight45@mR^0,c
  9182   005712  0E01               	movlw	high _motorR
  9183   005714  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9184   005716  EC78  F02E         	call	_turnRight45	;wreg free
  9185                           
  9186                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9187   00571A  0EC7               	movlw	low _motorL
  9188   00571C  6E1A               	movwf	turnRight45@mL^0,c
  9189   00571E  0E01               	movlw	high _motorL
  9190   005720  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9191   005722  0EBE               	movlw	low _motorR
  9192   005724  6E1C               	movwf	turnRight45@mR^0,c
  9193   005726  0E01               	movlw	high _motorR
  9194   005728  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9195   00572A  EC78  F02E         	call	_turnRight45	;wreg free
  9196                           
  9197                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9198   00572E  0EC7               	movlw	low _motorL
  9199   005730  6E1A               	movwf	turnRight45@mL^0,c
  9200   005732  0E01               	movlw	high _motorL
  9201   005734  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9202   005736  0EBE               	movlw	low _motorR
  9203   005738  6E1C               	movwf	turnRight45@mR^0,c
  9204   00573A  0E01               	movlw	high _motorR
  9205   00573C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9206   00573E  EC78  F02E         	call	_turnRight45	;wreg free
  9207                           
  9208                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9209   005742  0EC7               	movlw	low _motorL
  9210   005744  6E1A               	movwf	turnRight45@mL^0,c
  9211   005746  0E01               	movlw	high _motorL
  9212   005748  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9213   00574A  0EBE               	movlw	low _motorR
  9214   00574C  6E1C               	movwf	turnRight45@mR^0,c
  9215   00574E  0E01               	movlw	high _motorR
  9216   005750  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9217   005752  EC78  F02E         	call	_turnRight45	;wreg free
  9218   005756  0012               	return		;funcret
  9219   005758                     __end_of_BlueMove:
  9220                           	callstack 0
  9221                           
  9222 ;; *************** function _getTMR0val *****************
  9223 ;; Defined at:
  9224 ;;		line 28 in file "timers.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;		None
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  moving          2    0[COMRAM] int 
  9229 ;;  temp            2    0        unsigned int 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;Total ram usage:        2 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_main
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text43
  9253   0060CC                     __ptext43:
  9254                           	callstack 0
  9255   0060CC                     _getTMR0val:
  9256                           	callstack 30
  9257   0060CC  50D3               	movf	211,w,c	;volatile
  9258   0060CE                     
  9259                           ;timers.c: 32:     int moving=TMR0H<<8;
  9260   0060CE  50D4               	movf	212,w,c	;volatile
  9261   0060D0  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9262   0060D2  6A01               	clrf	getTMR0val@moving^0,c
  9263   0060D4                     
  9264                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9265   0060D4  90D8               	bcf	status,0,c
  9266   0060D6  0101               	movlb	1	; () banked
  9267   0060D8  357E               	rlcf	_move_count& (0+255),w,b	;volatile
  9268   0060DA  6ED9               	movwf	fsr2l,c
  9269   0060DC  357F               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9270   0060DE  6EDA               	movwf	fsr2h,c
  9271   0060E0  0E3C               	movlw	low _Time_forward
  9272   0060E2  26D9               	addwf	fsr2l,f,c
  9273   0060E4  0E02               	movlw	high _Time_forward
  9274   0060E6  22DA               	addwfc	fsr2h,f,c
  9275   0060E8  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9276   0060EC  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9277   0060F0                     
  9278                           ; BSR set to: 1
  9279   0060F0  0012               	return		;funcret
  9280   0060F2                     __end_of_getTMR0val:
  9281                           	callstack 0
  9282                           
  9283 ;; *************** function _colour_rel *****************
  9284 ;; Defined at:
  9285 ;;		line 114 in file "color.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  vals            2   74[COMRAM] PTR struct RGB
  9288 ;;		 -> vals(8), 
  9289 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9290 ;;		 -> rel(12), 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;  B               4   20[BANK0 ] float 
  9293 ;;  G               4   16[BANK0 ] float 
  9294 ;;  R               4   12[BANK0 ] float 
  9295 ;;  L               4    0[BANK0 ] float 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9306 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9308 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9309 ;;Total ram usage:       28 bytes
  9310 ;; Hardware stack levels used: 1
  9311 ;; Hardware stack levels required when called: 1
  9312 ;; This function calls:
  9313 ;;		___fladd
  9314 ;;		___fldiv
  9315 ;;		___xxtofl
  9316 ;; This function is called by:
  9317 ;;		_main
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text44
  9322   0035B0                     __ptext44:
  9323                           	callstack 0
  9324   0035B0                     _colour_rel:
  9325                           	callstack 29
  9326   0035B0                     
  9327                           ;color.c: 115:     float R = vals->R;
  9328   0035B0  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9329   0035B4  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9330   0035B8  CFDE F001          	movff	postinc2,___xxtofl@val
  9331   0035BC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9332   0035C0  0E00               	movlw	0
  9333   0035C2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9334   0035C4  0EFF               	movlw	-1
  9335   0035C6  6E03               	movwf	(___xxtofl@val+2)^0,c
  9336   0035C8  6E04               	movwf	(___xxtofl@val+3)^0,c
  9337   0035CA  0E01               	movlw	1
  9338   0035CC  EC80  F022         	call	___xxtofl
  9339   0035D0  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9340   0035D4  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9341   0035D8  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9342   0035DC  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9343                           
  9344                           ;color.c: 116:     float G = vals->G;
  9345   0035E0  EE20 F002          	lfsr	2,2
  9346   0035E4  504B               	movf	colour_rel@vals^0,w,c
  9347   0035E6  26D9               	addwf	fsr2l,f,c
  9348   0035E8  504C               	movf	(colour_rel@vals+1)^0,w,c
  9349   0035EA  22DA               	addwfc	fsr2h,f,c
  9350   0035EC  CFDE F001          	movff	postinc2,___xxtofl@val
  9351   0035F0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9352   0035F4  0E00               	movlw	0
  9353   0035F6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9354   0035F8  0EFF               	movlw	-1
  9355   0035FA  6E03               	movwf	(___xxtofl@val+2)^0,c
  9356   0035FC  6E04               	movwf	(___xxtofl@val+3)^0,c
  9357   0035FE  0E01               	movlw	1
  9358   003600  EC80  F022         	call	___xxtofl
  9359   003604  C001  F070         	movff	?___xxtofl,colour_rel@G
  9360   003608  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9361   00360C  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9362   003610  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9363                           
  9364                           ;color.c: 117:     float B = vals->B;
  9365   003614  EE20 F004          	lfsr	2,4
  9366   003618  504B               	movf	colour_rel@vals^0,w,c
  9367   00361A  26D9               	addwf	fsr2l,f,c
  9368   00361C  504C               	movf	(colour_rel@vals+1)^0,w,c
  9369   00361E  22DA               	addwfc	fsr2h,f,c
  9370   003620  CFDE F001          	movff	postinc2,___xxtofl@val
  9371   003624  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9372   003628  0E00               	movlw	0
  9373   00362A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9374   00362C  0EFF               	movlw	-1
  9375   00362E  6E03               	movwf	(___xxtofl@val+2)^0,c
  9376   003630  6E04               	movwf	(___xxtofl@val+3)^0,c
  9377   003632  0E01               	movlw	1
  9378   003634  EC80  F022         	call	___xxtofl
  9379   003638  C001  F074         	movff	?___xxtofl,colour_rel@B
  9380   00363C  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9381   003640  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9382   003644  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9383                           
  9384                           ;color.c: 118:     float L = vals->L;
  9385   003648  EE20 F006          	lfsr	2,6
  9386   00364C  504B               	movf	colour_rel@vals^0,w,c
  9387   00364E  26D9               	addwf	fsr2l,f,c
  9388   003650  504C               	movf	(colour_rel@vals+1)^0,w,c
  9389   003652  22DA               	addwfc	fsr2h,f,c
  9390   003654  CFDE F001          	movff	postinc2,___xxtofl@val
  9391   003658  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9392   00365C  0E00               	movlw	0
  9393   00365E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9394   003660  0EFF               	movlw	-1
  9395   003662  6E03               	movwf	(___xxtofl@val+2)^0,c
  9396   003664  6E04               	movwf	(___xxtofl@val+3)^0,c
  9397   003666  0E01               	movlw	1
  9398   003668  EC80  F022         	call	___xxtofl
  9399   00366C  C001  F060         	movff	?___xxtofl,colour_rel@L
  9400   003670  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9401   003674  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9402   003678  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9403   00367C                     
  9404                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9405   00367C  C070  F005         	movff	colour_rel@G,___fladd@a
  9406   003680  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9407   003684  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9408   003688  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9409   00368C  C06C  F001         	movff	colour_rel@R,___fladd@b
  9410   003690  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9411   003694  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9412   003698  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9413   00369C  EC96  F014         	call	___fladd	;wreg free
  9414   0036A0  C001  F064         	movff	?___fladd,_colour_rel$3142
  9415   0036A4  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9416   0036A8  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9417   0036AC  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9418   0036B0                     
  9419                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9420   0036B0  C074  F005         	movff	colour_rel@B,___fladd@a
  9421   0036B4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9422   0036B8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9423   0036BC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9424   0036C0  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9425   0036C4  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9426   0036C8  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9427   0036CC  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9428   0036D0  EC96  F014         	call	___fladd	;wreg free
  9429   0036D4  C001  F068         	movff	?___fladd,_colour_rel$3143
  9430   0036D8  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9431   0036DC  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9432   0036E0  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9433                           
  9434                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9435   0036E4  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9436   0036E8  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9437   0036EC  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9438   0036F0  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9439   0036F4  C060  F005         	movff	colour_rel@L,___fladd@a
  9440   0036F8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9441   0036FC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9442   003700  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9443   003704  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9444   003708  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9445   00370C  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9446   003710  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9447   003714  EC96  F014         	call	___fladd	;wreg free
  9448   003718  C001  F036         	movff	?___fladd,___fldiv@a
  9449   00371C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9450   003720  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9451   003724  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9452   003728  EC0B  F019         	call	___fldiv	;wreg free
  9453   00372C  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9454   003730  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9455   003734  C032  FFDE         	movff	?___fldiv,postinc2
  9456   003738  C033  FFDE         	movff	?___fldiv+1,postinc2
  9457   00373C  C034  FFDE         	movff	?___fldiv+2,postinc2
  9458   003740  C035  FFDE         	movff	?___fldiv+3,postinc2
  9459   003744                     
  9460                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9461   003744  C070  F005         	movff	colour_rel@G,___fladd@a
  9462   003748  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9463   00374C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9464   003750  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9465   003754  C06C  F001         	movff	colour_rel@R,___fladd@b
  9466   003758  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9467   00375C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9468   003760  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9469   003764  EC96  F014         	call	___fladd	;wreg free
  9470   003768  C001  F064         	movff	?___fladd,_colour_rel$3142
  9471   00376C  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9472   003770  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9473   003774  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9474   003778                     
  9475                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9476   003778  C074  F005         	movff	colour_rel@B,___fladd@a
  9477   00377C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9478   003780  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9479   003784  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9480   003788  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9481   00378C  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9482   003790  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9483   003794  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9484   003798  EC96  F014         	call	___fladd	;wreg free
  9485   00379C  C001  F068         	movff	?___fladd,_colour_rel$3143
  9486   0037A0  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9487   0037A4  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9488   0037A8  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9489                           
  9490                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9491   0037AC  C074  F032         	movff	colour_rel@B,___fldiv@b
  9492   0037B0  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9493   0037B4  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9494   0037B8  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9495   0037BC  C060  F005         	movff	colour_rel@L,___fladd@a
  9496   0037C0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9497   0037C4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9498   0037C8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9499   0037CC  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9500   0037D0  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9501   0037D4  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9502   0037D8  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9503   0037DC  EC96  F014         	call	___fladd	;wreg free
  9504   0037E0  C001  F036         	movff	?___fladd,___fldiv@a
  9505   0037E4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9506   0037E8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9507   0037EC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9508   0037F0  EC0B  F019         	call	___fldiv	;wreg free
  9509   0037F4  EE20 F008          	lfsr	2,8
  9510   0037F8  504D               	movf	colour_rel@rel^0,w,c
  9511   0037FA  26D9               	addwf	fsr2l,f,c
  9512   0037FC  504E               	movf	(colour_rel@rel+1)^0,w,c
  9513   0037FE  22DA               	addwfc	fsr2h,f,c
  9514   003800  C032  FFDE         	movff	?___fldiv,postinc2
  9515   003804  C033  FFDE         	movff	?___fldiv+1,postinc2
  9516   003808  C034  FFDE         	movff	?___fldiv+2,postinc2
  9517   00380C  C035  FFDE         	movff	?___fldiv+3,postinc2
  9518   003810                     
  9519                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9520   003810  C070  F005         	movff	colour_rel@G,___fladd@a
  9521   003814  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9522   003818  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9523   00381C  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9524   003820  C06C  F001         	movff	colour_rel@R,___fladd@b
  9525   003824  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9526   003828  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9527   00382C  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9528   003830  EC96  F014         	call	___fladd	;wreg free
  9529   003834  C001  F064         	movff	?___fladd,_colour_rel$3142
  9530   003838  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9531   00383C  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9532   003840  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9533   003844                     
  9534                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9535   003844  C074  F005         	movff	colour_rel@B,___fladd@a
  9536   003848  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9537   00384C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9538   003850  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9539   003854  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9540   003858  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9541   00385C  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9542   003860  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9543   003864  EC96  F014         	call	___fladd	;wreg free
  9544   003868  C001  F068         	movff	?___fladd,_colour_rel$3143
  9545   00386C  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9546   003870  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9547   003874  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9548                           
  9549                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9550   003878  C070  F032         	movff	colour_rel@G,___fldiv@b
  9551   00387C  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9552   003880  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9553   003884  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9554   003888  C060  F005         	movff	colour_rel@L,___fladd@a
  9555   00388C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9556   003890  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9557   003894  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9558   003898  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9559   00389C  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9560   0038A0  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9561   0038A4  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9562   0038A8  EC96  F014         	call	___fladd	;wreg free
  9563   0038AC  C001  F036         	movff	?___fladd,___fldiv@a
  9564   0038B0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9565   0038B4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9566   0038B8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9567   0038BC  EC0B  F019         	call	___fldiv	;wreg free
  9568   0038C0  EE20 F004          	lfsr	2,4
  9569   0038C4  504D               	movf	colour_rel@rel^0,w,c
  9570   0038C6  26D9               	addwf	fsr2l,f,c
  9571   0038C8  504E               	movf	(colour_rel@rel+1)^0,w,c
  9572   0038CA  22DA               	addwfc	fsr2h,f,c
  9573   0038CC  C032  FFDE         	movff	?___fldiv,postinc2
  9574   0038D0  C033  FFDE         	movff	?___fldiv+1,postinc2
  9575   0038D4  C034  FFDE         	movff	?___fldiv+2,postinc2
  9576   0038D8  C035  FFDE         	movff	?___fldiv+3,postinc2
  9577   0038DC  0012               	return		;funcret
  9578   0038DE                     __end_of_colour_rel:
  9579                           	callstack 0
  9580                           
  9581 ;; *************** function _color_click_init *****************
  9582 ;; Defined at:
  9583 ;;		line 7 in file "color.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg, status,2, status,0, cstack
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9601 ;;Total ram usage:        1 bytes
  9602 ;; Hardware stack levels used: 1
  9603 ;; Hardware stack levels required when called: 3
  9604 ;; This function calls:
  9605 ;;		_I2C_2_Master_Init
  9606 ;;		_color_writetoaddr
  9607 ;; This function is called by:
  9608 ;;		_main
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           	psect	text45
  9613   005A6A                     __ptext45:
  9614                           	callstack 0
  9615   005A6A                     _color_click_init:
  9616                           	callstack 27
  9617   005A6A                     
  9618                           ;color.c: 10:     I2C_2_Master_Init();
  9619   005A6A  EC3D  F030         	call	_I2C_2_Master_Init	;wreg free
  9620   005A6E                     
  9621                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9622   005A6E  0E01               	movlw	1
  9623   005A70  6E03               	movwf	color_writetoaddr@value^0,c
  9624   005A72  0E00               	movlw	0
  9625   005A74  EC8C  F030         	call	_color_writetoaddr
  9626   005A78                     
  9627                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9628   005A78  0E3F               	movlw	63
  9629   005A7A  6E05               	movwf	??_color_click_init^0,c
  9630   005A7C  0E55               	movlw	85
  9631   005A7E                     u6177:
  9632   005A7E  2EE8               	decfsz	wreg,f,c
  9633   005A80  D7FE               	bra	u6177
  9634   005A82  2E05               	decfsz	??_color_click_init^0,f,c
  9635   005A84  D7FC               	bra	u6177
  9636   005A86  F000               	nop	
  9637   005A88                     
  9638                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9639   005A88  0E03               	movlw	3
  9640   005A8A  6E03               	movwf	color_writetoaddr@value^0,c
  9641   005A8C  0E00               	movlw	0
  9642   005A8E  EC8C  F030         	call	_color_writetoaddr
  9643   005A92                     
  9644                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9645   005A92  0ED5               	movlw	213
  9646   005A94  6E03               	movwf	color_writetoaddr@value^0,c
  9647   005A96  0E01               	movlw	1
  9648   005A98  EC8C  F030         	call	_color_writetoaddr
  9649   005A9C                     
  9650                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9651   005A9C  0E00               	movlw	0
  9652   005A9E  6E03               	movwf	color_writetoaddr@value^0,c
  9653   005AA0  0E0F               	movlw	15
  9654   005AA2  EC8C  F030         	call	_color_writetoaddr
  9655   005AA6                     
  9656                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9657   005AA6  9287               	bcf	135,1,c	;volatile
  9658   005AA8                     
  9659                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9660   005AA8  9881               	bcf	129,4,c	;volatile
  9661   005AAA                     
  9662                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9663   005AAA  9E86               	bcf	134,7,c	;volatile
  9664   005AAC                     
  9665                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9666   005AAC  9684               	bcf	132,3,c	;volatile
  9667   005AAE                     
  9668                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9669   005AAE  9884               	bcf	132,4,c	;volatile
  9670   005AB0                     
  9671                           ;color.c: 28:     LATGbits.LATG1=0;
  9672   005AB0  927F               	bcf	127,1,c	;volatile
  9673   005AB2                     
  9674                           ;color.c: 29:     LATFbits.LATF7=0;
  9675   005AB2  9E7E               	bcf	126,7,c	;volatile
  9676   005AB4                     
  9677                           ;color.c: 30:     LATAbits.LATA4=0;
  9678   005AB4  9879               	bcf	121,4,c	;volatile
  9679   005AB6                     
  9680                           ;color.c: 32:     LATDbits.LATD3=0;
  9681   005AB6  967C               	bcf	124,3,c	;volatile
  9682   005AB8                     
  9683                           ;color.c: 33:     LATDbits.LATD4=0;
  9684   005AB8  987C               	bcf	124,4,c	;volatile
  9685   005ABA  0012               	return		;funcret
  9686   005ABC                     __end_of_color_click_init:
  9687                           	callstack 0
  9688                           
  9689 ;; *************** function _color_writetoaddr *****************
  9690 ;; Defined at:
  9691 ;;		line 41 in file "color.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  address         1    wreg     unsigned char 
  9694 ;;  value           1    2[COMRAM] unsigned char 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;  address         1    3[COMRAM] unsigned char 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		wreg, status,2, status,0, cstack
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9706 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9710 ;;Total ram usage:        2 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 2
  9713 ;; This function calls:
  9714 ;;		_I2C_2_Master_Start
  9715 ;;		_I2C_2_Master_Stop
  9716 ;;		_I2C_2_Master_Write
  9717 ;; This function is called by:
  9718 ;;		_color_click_init
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text46
  9723   006118                     __ptext46:
  9724                           	callstack 0
  9725   006118                     _color_writetoaddr:
  9726                           	callstack 27
  9727                           
  9728                           ;incstack = 0
  9729                           ;color_writetoaddr@address stored from wreg
  9730   006118  6E04               	movwf	color_writetoaddr@address^0,c
  9731   00611A                     
  9732                           ;color.c: 42:     I2C_2_Master_Start();
  9733   00611A  ECD7  F030         	call	_I2C_2_Master_Start	;wreg free
  9734                           
  9735                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9736   00611E  0E52               	movlw	82
  9737   006120  ECC7  F030         	call	_I2C_2_Master_Write
  9738                           
  9739                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9740   006124  5004               	movf	color_writetoaddr@address^0,w,c
  9741   006126  0980               	iorlw	128
  9742   006128  ECC7  F030         	call	_I2C_2_Master_Write
  9743                           
  9744                           ;color.c: 45:     I2C_2_Master_Write(value);
  9745   00612C  5003               	movf	color_writetoaddr@value^0,w,c
  9746   00612E  ECC7  F030         	call	_I2C_2_Master_Write
  9747                           
  9748                           ;color.c: 46:     I2C_2_Master_Stop();
  9749   006132  ECD2  F030         	call	_I2C_2_Master_Stop	;wreg free
  9750   006136  0012               	return		;funcret
  9751   006138                     __end_of_color_writetoaddr:
  9752                           	callstack 0
  9753                           
  9754 ;; *************** function _I2C_2_Master_Write *****************
  9755 ;; Defined at:
  9756 ;;		line 45 in file "i2c.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;  data_byte       1    wreg     unsigned char 
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;  data_byte       1    1[COMRAM] unsigned char 
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  1    wreg      void 
  9763 ;; Registers used:
  9764 ;;		wreg, status,2, status,0, cstack
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9774 ;;Total ram usage:        1 bytes
  9775 ;; Hardware stack levels used: 1
  9776 ;; Hardware stack levels required when called: 1
  9777 ;; This function calls:
  9778 ;;		_I2C_2_Master_Idle
  9779 ;; This function is called by:
  9780 ;;		_color_writetoaddr
  9781 ;;		_color_read_lum
  9782 ;;		_color_read_Red
  9783 ;;		_color_read_Green
  9784 ;;		_color_read_Blue
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text47
  9789   00618E                     __ptext47:
  9790                           	callstack 0
  9791   00618E                     _I2C_2_Master_Write:
  9792                           	callstack 27
  9793                           
  9794                           ;incstack = 0
  9795                           ;I2C_2_Master_Write@data_byte stored from wreg
  9796   00618E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9797   006190                     
  9798                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9799   006190  EC52  F030         	call	_I2C_2_Master_Idle	;wreg free
  9800   006194                     
  9801                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9802   006194  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9803   006198  0012               	return		;funcret
  9804   00619A                     __end_of_I2C_2_Master_Write:
  9805                           	callstack 0
  9806                           
  9807 ;; *************** function _I2C_2_Master_Stop *****************
  9808 ;; Defined at:
  9809 ;;		line 39 in file "i2c.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;		None
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;		None
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  1    wreg      void 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0, cstack
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;Total ram usage:        0 bytes
  9828 ;; Hardware stack levels used: 1
  9829 ;; Hardware stack levels required when called: 1
  9830 ;; This function calls:
  9831 ;;		_I2C_2_Master_Idle
  9832 ;; This function is called by:
  9833 ;;		_color_writetoaddr
  9834 ;;		_color_read_lum
  9835 ;;		_color_read_Red
  9836 ;;		_color_read_Green
  9837 ;;		_color_read_Blue
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text48
  9842   0061A4                     __ptext48:
  9843                           	callstack 0
  9844   0061A4                     _I2C_2_Master_Stop:
  9845                           	callstack 27
  9846   0061A4                     
  9847                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9848   0061A4  EC52  F030         	call	_I2C_2_Master_Idle	;wreg free
  9849   0061A8                     
  9850                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9851   0061A8  010E               	movlb	14	; () banked
  9852   0061AA  85DA               	bsf	218,2,b	;volatile
  9853   0061AC                     
  9854                           ; BSR set to: 14
  9855   0061AC  0012               	return		;funcret
  9856   0061AE                     __end_of_I2C_2_Master_Stop:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function _I2C_2_Master_Start *****************
  9860 ;; Defined at:
  9861 ;;		line 27 in file "i2c.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;		None
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0, cstack
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;Total ram usage:        0 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; Hardware stack levels required when called: 1
  9882 ;; This function calls:
  9883 ;;		_I2C_2_Master_Idle
  9884 ;; This function is called by:
  9885 ;;		_color_writetoaddr
  9886 ;;		_color_read_lum
  9887 ;;		_color_read_Red
  9888 ;;		_color_read_Green
  9889 ;;		_color_read_Blue
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text49
  9894   0061AE                     __ptext49:
  9895                           	callstack 0
  9896   0061AE                     _I2C_2_Master_Start:
  9897                           	callstack 27
  9898   0061AE                     
  9899                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9900   0061AE  EC52  F030         	call	_I2C_2_Master_Idle	;wreg free
  9901   0061B2                     
  9902                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9903   0061B2  010E               	movlb	14	; () banked
  9904   0061B4  81DA               	bsf	218,0,b	;volatile
  9905   0061B6                     
  9906                           ; BSR set to: 14
  9907   0061B6  0012               	return		;funcret
  9908   0061B8                     __end_of_I2C_2_Master_Start:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function _I2C_2_Master_Idle *****************
  9912 ;; Defined at:
  9913 ;;		line 22 in file "i2c.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9931 ;;Total ram usage:        1 bytes
  9932 ;; Hardware stack levels used: 1
  9933 ;; This function calls:
  9934 ;;		Nothing
  9935 ;; This function is called by:
  9936 ;;		_I2C_2_Master_Start
  9937 ;;		_I2C_2_Master_RepStart
  9938 ;;		_I2C_2_Master_Stop
  9939 ;;		_I2C_2_Master_Write
  9940 ;;		_I2C_2_Master_Read
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           	psect	text50
  9945   0060A4                     __ptext50:
  9946                           	callstack 0
  9947   0060A4                     _I2C_2_Master_Idle:
  9948                           	callstack 27
  9949   0060A4                     l143:
  9950   0060A4  010E               	movlb	14	; () banked
  9951   0060A6  B5D8               	btfsc	216,2,b	;volatile
  9952   0060A8  EF58  F030         	goto	u4451
  9953   0060AC  EF5A  F030         	goto	u4450
  9954   0060B0                     u4451:
  9955   0060B0  EF52  F030         	goto	l143
  9956   0060B4                     u4450:
  9957   0060B4                     
  9958                           ; BSR set to: 14
  9959   0060B4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9960   0060B8  0E1F               	movlw	31
  9961   0060BA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9962   0060BC  A4D8               	btfss	status,2,c
  9963   0060BE  EF63  F030         	goto	u4461
  9964   0060C2  EF65  F030         	goto	u4460
  9965   0060C6                     u4461:
  9966   0060C6  EF52  F030         	goto	l143
  9967   0060CA                     u4460:
  9968   0060CA                     
  9969                           ; BSR set to: 14
  9970   0060CA  0012               	return		;funcret
  9971   0060CC                     __end_of_I2C_2_Master_Idle:
  9972                           	callstack 0
  9973                           
  9974 ;; *************** function _I2C_2_Master_Init *****************
  9975 ;; Defined at:
  9976 ;;		line 4 in file "i2c.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;		None
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;		None
  9981 ;; Return value:  Size  Location     Type
  9982 ;;                  1    wreg      void 
  9983 ;; Registers used:
  9984 ;;		wreg, status,2
  9985 ;; Tracked objects:
  9986 ;;		On entry : 0/0
  9987 ;;		On exit  : 0/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9994 ;;Total ram usage:        0 bytes
  9995 ;; Hardware stack levels used: 1
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_color_click_init
 10000 ;;		_main
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           	psect	text51
 10005   00607A                     __ptext51:
 10006                           	callstack 0
 10007   00607A                     _I2C_2_Master_Init:
 10008                           	callstack 29
 10009   00607A                     
 10010                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 10011   00607A  010E               	movlb	14	; () banked
 10012   00607C  51D9               	movf	217,w,b	;volatile
 10013   00607E  0BF0               	andlw	-16
 10014   006080  0908               	iorlw	8
 10015   006082  6FD9               	movwf	217,b	;volatile
 10016   006084                     
 10017                           ; BSR set to: 14
 10018                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 10019   006084  8BD9               	bsf	217,5,b	;volatile
 10020                           
 10021                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 10022   006086  0E9F               	movlw	159
 10023   006088  6FD6               	movwf	214,b	;volatile
 10024   00608A                     
 10025                           ; BSR set to: 14
 10026                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 10027   00608A  8A84               	bsf	132,5,c	;volatile
 10028   00608C                     
 10029                           ; BSR set to: 14
 10030                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 10031   00608C  8C84               	bsf	132,6,c	;volatile
 10032   00608E                     
 10033                           ; BSR set to: 14
 10034                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 10035   00608E  9BA7               	bcf	167,5,b	;volatile
 10036   006090                     
 10037                           ; BSR set to: 14
 10038                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 10039   006090  9DA7               	bcf	167,6,b	;volatile
 10040                           
 10041                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 10042   006092  0E1D               	movlw	29
 10043   006094  6F1D               	movwf	29,b	;volatile
 10044                           
 10045                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 10046   006096  0E1E               	movlw	30
 10047   006098  6F1C               	movwf	28,b	;volatile
 10048                           
 10049                           ;i2c.c: 18:   RD5PPS=0x1C;
 10050   00609A  0E1C               	movlw	28
 10051   00609C  6F6F               	movwf	111,b	;volatile
 10052                           
 10053                           ;i2c.c: 19:   RD6PPS=0x1B;
 10054   00609E  0E1B               	movlw	27
 10055   0060A0  6F70               	movwf	112,b	;volatile
 10056   0060A2                     
 10057                           ; BSR set to: 14
 10058   0060A2  0012               	return		;funcret
 10059   0060A4                     __end_of_I2C_2_Master_Init:
 10060                           	callstack 0
 10061                           
 10062 ;; *************** function _YellowMove *****************
 10063 ;; Defined at:
 10064 ;;		line 288 in file "dc_motor.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10067 ;;		 -> motorL(9), 
 10068 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10069 ;;		 -> motorR(9), 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10085 ;;Total ram usage:        4 bytes
 10086 ;; Hardware stack levels used: 1
 10087 ;; Hardware stack levels required when called: 4
 10088 ;; This function calls:
 10089 ;;		_reverseDetect
 10090 ;;		_reverseOneBlock
 10091 ;;		_turnRight45
 10092 ;; This function is called by:
 10093 ;;		_main
 10094 ;; This function uses a non-reentrant model
 10095 ;;
 10096                           
 10097                           	psect	text52
 10098   005ABC                     __ptext52:
 10099                           	callstack 0
 10100   005ABC                     _YellowMove:
 10101                           	callstack 26
 10102   005ABC                     
 10103                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10104   005ABC  0EC7               	movlw	low _motorL
 10105   005ABE  6E1A               	movwf	reverseDetect@mL^0,c
 10106   005AC0  0E01               	movlw	high _motorL
 10107   005AC2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10108   005AC4  0EBE               	movlw	low _motorR
 10109   005AC6  6E1C               	movwf	reverseDetect@mR^0,c
 10110   005AC8  0E01               	movlw	high _motorR
 10111   005ACA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10112   005ACC  EC35  F02C         	call	_reverseDetect	;wreg free
 10113                           
 10114                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10115   005AD0  0EC7               	movlw	low _motorL
 10116   005AD2  6E1A               	movwf	reverseOneBlock@mL^0,c
 10117   005AD4  0E01               	movlw	high _motorL
 10118   005AD6  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10119   005AD8  0EBE               	movlw	low _motorR
 10120   005ADA  6E1C               	movwf	reverseOneBlock@mR^0,c
 10121   005ADC  0E01               	movlw	high _motorR
 10122   005ADE  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10123   005AE0  EC08  F02C         	call	_reverseOneBlock	;wreg free
 10124                           
 10125                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10126   005AE4  0EC7               	movlw	low _motorL
 10127   005AE6  6E1A               	movwf	turnRight45@mL^0,c
 10128   005AE8  0E01               	movlw	high _motorL
 10129   005AEA  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10130   005AEC  0EBE               	movlw	low _motorR
 10131   005AEE  6E1C               	movwf	turnRight45@mR^0,c
 10132   005AF0  0E01               	movlw	high _motorR
 10133   005AF2  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10134   005AF4  EC78  F02E         	call	_turnRight45	;wreg free
 10135                           
 10136                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10137   005AF8  0EC7               	movlw	low _motorL
 10138   005AFA  6E1A               	movwf	turnRight45@mL^0,c
 10139   005AFC  0E01               	movlw	high _motorL
 10140   005AFE  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10141   005B00  0EBE               	movlw	low _motorR
 10142   005B02  6E1C               	movwf	turnRight45@mR^0,c
 10143   005B04  0E01               	movlw	high _motorR
 10144   005B06  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10145   005B08  EC78  F02E         	call	_turnRight45	;wreg free
 10146   005B0C  0012               	return		;funcret
 10147   005B0E                     __end_of_YellowMove:
 10148                           	callstack 0
 10149                           
 10150 ;; *************** function _turnRight45 *****************
 10151 ;; Defined at:
 10152 ;;		line 211 in file "dc_motor.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10155 ;;		 -> motorL(9), 
 10156 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10157 ;;		 -> motorR(9), 
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;		None
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  1    wreg      void 
 10162 ;; Registers used:
 10163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10173 ;;Total ram usage:        6 bytes
 10174 ;; Hardware stack levels used: 1
 10175 ;; Hardware stack levels required when called: 3
 10176 ;; This function calls:
 10177 ;;		_TurnDelay
 10178 ;;		_stop
 10179 ;;		_turnRight
 10180 ;; This function is called by:
 10181 ;;		_RedMove
 10182 ;;		_BlueMove
 10183 ;;		_YellowMove
 10184 ;;		_OrangeMove
 10185 ;;		_ReverseYellow
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text53
 10190   005CF0                     __ptext53:
 10191                           	callstack 0
 10192   005CF0                     _turnRight45:
 10193                           	callstack 25
 10194   005CF0                     
 10195                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10196   005CF0  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10197   005CF4  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10198   005CF8  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10199   005CFC  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10200   005D00  ECCF  F028         	call	_turnRight	;wreg free
 10201   005D04                     
 10202                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10203   005D04  C0F9  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10204   005D08  C0FA  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10205   005D0C  EC0A  F030         	call	_TurnDelay	;wreg free
 10206   005D10                     
 10207                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10208   005D10  0EC7               	movlw	low _motorL
 10209   005D12  6E14               	movwf	stop@mL^0,c
 10210   005D14  0E01               	movlw	high _motorL
 10211   005D16  6E15               	movwf	(stop@mL+1)^0,c
 10212   005D18  0EBE               	movlw	low _motorR
 10213   005D1A  6E16               	movwf	stop@mR^0,c
 10214   005D1C  0E01               	movlw	high _motorR
 10215   005D1E  6E17               	movwf	(stop@mR+1)^0,c
 10216   005D20  EC90  F02A         	call	_stop	;wreg free
 10217   005D24                     
 10218                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10219   005D24  0E05               	movlw	5
 10220   005D26  6E1F               	movwf	(??_turnRight45+1)^0,c
 10221   005D28  0E0F               	movlw	15
 10222   005D2A  6E1E               	movwf	??_turnRight45^0,c
 10223   005D2C  0EF1               	movlw	241
 10224   005D2E                     u6187:
 10225   005D2E  2EE8               	decfsz	wreg,f,c
 10226   005D30  D7FE               	bra	u6187
 10227   005D32  2E1E               	decfsz	??_turnRight45^0,f,c
 10228   005D34  D7FC               	bra	u6187
 10229   005D36  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10230   005D38  D7FA               	bra	u6187
 10231   005D3A  F000               	nop	
 10232   005D3C  0012               	return		;funcret
 10233   005D3E                     __end_of_turnRight45:
 10234                           	callstack 0
 10235                           
 10236 ;; *************** function _turnRight *****************
 10237 ;; Defined at:
 10238 ;;		line 129 in file "dc_motor.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10241 ;;		 -> motorL(9), 
 10242 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10243 ;;		 -> motorR(9), 
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;		None
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      void 
 10248 ;; Registers used:
 10249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10257 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10258 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10259 ;;Total ram usage:        6 bytes
 10260 ;; Hardware stack levels used: 1
 10261 ;; Hardware stack levels required when called: 2
 10262 ;; This function calls:
 10263 ;;		_setMotorPWM
 10264 ;; This function is called by:
 10265 ;;		_turnRight45
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text54
 10270   00519E                     __ptext54:
 10271                           	callstack 0
 10272   00519E                     _turnRight:
 10273                           	callstack 25
 10274   00519E                     
 10275                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10276   00519E  EE20 F001          	lfsr	2,1
 10277   0051A2  5014               	movf	turnRight@mL^0,w,c
 10278   0051A4  26D9               	addwf	fsr2l,f,c
 10279   0051A6  5015               	movf	(turnRight@mL+1)^0,w,c
 10280   0051A8  22DA               	addwfc	fsr2h,f,c
 10281   0051AA  0E01               	movlw	1
 10282   0051AC  6EDF               	movwf	indf2,c
 10283                           
 10284                           ;dc_motor.c: 132:     mR->direction =0;
 10285   0051AE  EE20 F001          	lfsr	2,1
 10286   0051B2  5016               	movf	turnRight@mR^0,w,c
 10287   0051B4  26D9               	addwf	fsr2l,f,c
 10288   0051B6  5017               	movf	(turnRight@mR+1)^0,w,c
 10289   0051B8  22DA               	addwfc	fsr2h,f,c
 10290   0051BA  0E00               	movlw	0
 10291   0051BC  6EDF               	movwf	indf2,c
 10292                           
 10293                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10294   0051BE  EF05  F029         	goto	l4729
 10295   0051C2                     l4721:
 10296                           
 10297                           ;dc_motor.c: 136:         mL->power+=10;
 10298   0051C2  C014  FFD9         	movff	turnRight@mL,fsr2l
 10299   0051C6  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10300   0051CA  0E0A               	movlw	10
 10301   0051CC  26DF               	addwf	indf2,f,c
 10302                           
 10303                           ;dc_motor.c: 137:         mR->power+=10;
 10304   0051CE  C016  FFD9         	movff	turnRight@mR,fsr2l
 10305   0051D2  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10306   0051D6  0E0A               	movlw	10
 10307   0051D8  26DF               	addwf	indf2,f,c
 10308   0051DA                     
 10309                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10310   0051DA  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10311   0051DE  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10312   0051E2  EC1E  F024         	call	_setMotorPWM	;wreg free
 10313   0051E6                     
 10314                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10315   0051E6  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10316   0051EA  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10317   0051EE  EC1E  F024         	call	_setMotorPWM	;wreg free
 10318   0051F2                     
 10319                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10320   0051F2  0E02               	movlw	2
 10321   0051F4  6E19               	movwf	(??_turnRight+1)^0,c
 10322   0051F6  0EA0               	movlw	160
 10323   0051F8  6E18               	movwf	??_turnRight^0,c
 10324   0051FA  0E92               	movlw	146
 10325   0051FC                     u6197:
 10326   0051FC  2EE8               	decfsz	wreg,f,c
 10327   0051FE  D7FE               	bra	u6197
 10328   005200  2E18               	decfsz	??_turnRight^0,f,c
 10329   005202  D7FC               	bra	u6197
 10330   005204  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10331   005206  D7FA               	bra	u6197
 10332   005208  D000               	nop2	
 10333   00520A                     l4729:
 10334   00520A  C014  FFD9         	movff	turnRight@mL,fsr2l
 10335   00520E  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10336   005212  0E1E               	movlw	30
 10337   005214  60DF               	cpfslt	indf2,c
 10338   005216  EF0F  F029         	goto	u4531
 10339   00521A  EF11  F029         	goto	u4530
 10340   00521E                     u4531:
 10341   00521E  EF1D  F029         	goto	l512
 10342   005222                     u4530:
 10343   005222  C016  FFD9         	movff	turnRight@mR,fsr2l
 10344   005226  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10345   00522A  0E1D               	movlw	29
 10346   00522C  64DF               	cpfsgt	indf2,c
 10347   00522E  EF1B  F029         	goto	u4541
 10348   005232  EF1D  F029         	goto	u4540
 10349   005236                     u4541:
 10350   005236  EFE1  F028         	goto	l4721
 10351   00523A                     u4540:
 10352   00523A                     l512:
 10353   00523A  0012               	return		;funcret
 10354   00523C                     __end_of_turnRight:
 10355                           	callstack 0
 10356                           
 10357 ;; *************** function _Timer0_init *****************
 10358 ;; Defined at:
 10359 ;;		line 8 in file "timers.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;		None
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;		None
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      void 
 10366 ;; Registers used:
 10367 ;;		wreg, status,2
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;Total ram usage:        0 bytes
 10378 ;; Hardware stack levels used: 1
 10379 ;; This function calls:
 10380 ;;		Nothing
 10381 ;; This function is called by:
 10382 ;;		_main
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           	psect	text55
 10387   006138                     __ptext55:
 10388                           	callstack 0
 10389   006138                     _Timer0_init:
 10390                           	callstack 30
 10391   006138                     
 10392                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10393   006138  50D6               	movf	214,w,c	;volatile
 10394   00613A  0B1F               	andlw	-225
 10395   00613C  0940               	iorlw	64
 10396   00613E  6ED6               	movwf	214,c	;volatile
 10397   006140                     
 10398                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10399   006140  88D6               	bsf	214,4,c	;volatile
 10400                           
 10401                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
 10402   006142  50D6               	movf	214,w,c	;volatile
 10403   006144  0BF0               	andlw	-16
 10404   006146  090E               	iorlw	14
 10405   006148  6ED6               	movwf	214,c	;volatile
 10406   00614A                     
 10407                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10408   00614A  88D5               	bsf	213,4,c	;volatile
 10409                           
 10410                           ;timers.c: 16:     TMR0H=0;
 10411   00614C  0E00               	movlw	0
 10412   00614E  6ED4               	movwf	212,c	;volatile
 10413                           
 10414                           ;timers.c: 17:     TMR0L=0;
 10415   006150  0E00               	movlw	0
 10416   006152  6ED3               	movwf	211,c	;volatile
 10417   006154                     
 10418                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10419   006154  9ED5               	bcf	213,7,c	;volatile
 10420   006156  0012               	return		;funcret
 10421   006158                     __end_of_Timer0_init:
 10422                           	callstack 0
 10423                           
 10424 ;; *************** function _RetryMove *****************
 10425 ;; Defined at:
 10426 ;;		line 325 in file "dc_motor.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10429 ;;		 -> motorL(9), 
 10430 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10431 ;;		 -> motorR(9), 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;		None
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  1    wreg      void 
 10436 ;; Registers used:
 10437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10446 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;Total ram usage:        6 bytes
 10448 ;; Hardware stack levels used: 1
 10449 ;; Hardware stack levels required when called: 3
 10450 ;; This function calls:
 10451 ;;		_fullSpeedAhead
 10452 ;;		_fullSpeedBack
 10453 ;;		_stop
 10454 ;; This function is called by:
 10455 ;;		_main
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text56
 10460   00549E                     __ptext56:
 10461                           	callstack 0
 10462   00549E                     _RetryMove:
 10463                           	callstack 27
 10464   00549E                     
 10465                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
 10466   00549E  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
 10467   0054A2  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
 10468   0054A6  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
 10469   0054AA  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
 10470   0054AE  EC6D  F029         	call	_fullSpeedBack	;wreg free
 10471   0054B2                     
 10472                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10473   0054B2  0E29               	movlw	41
 10474   0054B4  6E1F               	movwf	(??_RetryMove+1)^0,c
 10475   0054B6  0E96               	movlw	150
 10476   0054B8  6E1E               	movwf	??_RetryMove^0,c
 10477   0054BA  0E7F               	movlw	127
 10478   0054BC                     u6207:
 10479   0054BC  2EE8               	decfsz	wreg,f,c
 10480   0054BE  D7FE               	bra	u6207
 10481   0054C0  2E1E               	decfsz	??_RetryMove^0,f,c
 10482   0054C2  D7FC               	bra	u6207
 10483   0054C4  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10484   0054C6  D7FA               	bra	u6207
 10485   0054C8  F000               	nop	
 10486   0054CA                     
 10487                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 10488   0054CA  0EC7               	movlw	low _motorL
 10489   0054CC  6E14               	movwf	stop@mL^0,c
 10490   0054CE  0E01               	movlw	high _motorL
 10491   0054D0  6E15               	movwf	(stop@mL+1)^0,c
 10492   0054D2  0EBE               	movlw	low _motorR
 10493   0054D4  6E16               	movwf	stop@mR^0,c
 10494   0054D6  0E01               	movlw	high _motorR
 10495   0054D8  6E17               	movwf	(stop@mR+1)^0,c
 10496   0054DA  EC90  F02A         	call	_stop	;wreg free
 10497   0054DE                     
 10498                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 10499   0054DE  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10500   0054E2  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10501   0054E6  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10502   0054EA  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10503   0054EE  ECBC  F029         	call	_fullSpeedAhead	;wreg free
 10504   0054F2                     
 10505                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10506   0054F2  0E29               	movlw	41
 10507   0054F4  6E1F               	movwf	(??_RetryMove+1)^0,c
 10508   0054F6  0E96               	movlw	150
 10509   0054F8  6E1E               	movwf	??_RetryMove^0,c
 10510   0054FA  0E7F               	movlw	127
 10511   0054FC                     u6217:
 10512   0054FC  2EE8               	decfsz	wreg,f,c
 10513   0054FE  D7FE               	bra	u6217
 10514   005500  2E1E               	decfsz	??_RetryMove^0,f,c
 10515   005502  D7FC               	bra	u6217
 10516   005504  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10517   005506  D7FA               	bra	u6217
 10518   005508  F000               	nop	
 10519                           
 10520                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 10521   00550A  0EC7               	movlw	low _motorL
 10522   00550C  6E14               	movwf	stop@mL^0,c
 10523   00550E  0E01               	movlw	high _motorL
 10524   005510  6E15               	movwf	(stop@mL+1)^0,c
 10525   005512  0EBE               	movlw	low _motorR
 10526   005514  6E16               	movwf	stop@mR^0,c
 10527   005516  0E01               	movlw	high _motorR
 10528   005518  6E17               	movwf	(stop@mR+1)^0,c
 10529   00551A  EC90  F02A         	call	_stop	;wreg free
 10530   00551E  0012               	return		;funcret
 10531   005520                     __end_of_RetryMove:
 10532                           	callstack 0
 10533                           
 10534 ;; *************** function _PinkMove *****************
 10535 ;; Defined at:
 10536 ;;		line 298 in file "dc_motor.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10539 ;;		 -> motorL(9), 
 10540 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10541 ;;		 -> motorR(9), 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;		None
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  1    wreg      void 
 10546 ;; Registers used:
 10547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10556 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;Total ram usage:        4 bytes
 10558 ;; Hardware stack levels used: 1
 10559 ;; Hardware stack levels required when called: 4
 10560 ;; This function calls:
 10561 ;;		_reverseDetect
 10562 ;;		_reverseOneBlock
 10563 ;;		_turnLeft45
 10564 ;; This function is called by:
 10565 ;;		_main
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text57
 10570   005B0E                     __ptext57:
 10571                           	callstack 0
 10572   005B0E                     _PinkMove:
 10573                           	callstack 26
 10574   005B0E                     
 10575                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10576   005B0E  0EC7               	movlw	low _motorL
 10577   005B10  6E1A               	movwf	reverseDetect@mL^0,c
 10578   005B12  0E01               	movlw	high _motorL
 10579   005B14  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10580   005B16  0EBE               	movlw	low _motorR
 10581   005B18  6E1C               	movwf	reverseDetect@mR^0,c
 10582   005B1A  0E01               	movlw	high _motorR
 10583   005B1C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10584   005B1E  EC35  F02C         	call	_reverseDetect	;wreg free
 10585                           
 10586                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10587   005B22  0EC7               	movlw	low _motorL
 10588   005B24  6E1A               	movwf	reverseOneBlock@mL^0,c
 10589   005B26  0E01               	movlw	high _motorL
 10590   005B28  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10591   005B2A  0EBE               	movlw	low _motorR
 10592   005B2C  6E1C               	movwf	reverseOneBlock@mR^0,c
 10593   005B2E  0E01               	movlw	high _motorR
 10594   005B30  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10595   005B32  EC08  F02C         	call	_reverseOneBlock	;wreg free
 10596                           
 10597                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10598   005B36  0EC7               	movlw	low _motorL
 10599   005B38  6E1A               	movwf	turnLeft45@mL^0,c
 10600   005B3A  0E01               	movlw	high _motorL
 10601   005B3C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10602   005B3E  0EBE               	movlw	low _motorR
 10603   005B40  6E1C               	movwf	turnLeft45@mR^0,c
 10604   005B42  0E01               	movlw	high _motorR
 10605   005B44  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10606   005B46  EC9F  F02E         	call	_turnLeft45	;wreg free
 10607                           
 10608                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10609   005B4A  0EC7               	movlw	low _motorL
 10610   005B4C  6E1A               	movwf	turnLeft45@mL^0,c
 10611   005B4E  0E01               	movlw	high _motorL
 10612   005B50  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10613   005B52  0EBE               	movlw	low _motorR
 10614   005B54  6E1C               	movwf	turnLeft45@mR^0,c
 10615   005B56  0E01               	movlw	high _motorR
 10616   005B58  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10617   005B5A  EC9F  F02E         	call	_turnLeft45	;wreg free
 10618   005B5E  0012               	return		;funcret
 10619   005B60                     __end_of_PinkMove:
 10620                           	callstack 0
 10621                           
 10622 ;; *************** function _turnLeft45 *****************
 10623 ;; Defined at:
 10624 ;;		line 218 in file "dc_motor.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10627 ;;		 -> motorL(9), 
 10628 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10629 ;;		 -> motorR(9), 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;		None
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1    wreg      void 
 10634 ;; Registers used:
 10635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10644 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10645 ;;Total ram usage:        6 bytes
 10646 ;; Hardware stack levels used: 1
 10647 ;; Hardware stack levels required when called: 3
 10648 ;; This function calls:
 10649 ;;		_TurnDelay
 10650 ;;		_stop
 10651 ;;		_turnLeft
 10652 ;; This function is called by:
 10653 ;;		_GreenMove
 10654 ;;		_PinkMove
 10655 ;;		_LightBlueMove
 10656 ;;		_ReversePink
 10657 ;;		_turnCalibration
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           	psect	text58
 10662   005D3E                     __ptext58:
 10663                           	callstack 0
 10664   005D3E                     _turnLeft45:
 10665                           	callstack 26
 10666   005D3E                     
 10667                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10668   005D3E  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10669   005D42  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10670   005D46  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10671   005D4A  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10672   005D4E  EC1E  F029         	call	_turnLeft	;wreg free
 10673   005D52                     
 10674                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10675   005D52  C0F9  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10676   005D56  C0FA  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10677   005D5A  EC0A  F030         	call	_TurnDelay	;wreg free
 10678   005D5E                     
 10679                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10680   005D5E  0EC7               	movlw	low _motorL
 10681   005D60  6E14               	movwf	stop@mL^0,c
 10682   005D62  0E01               	movlw	high _motorL
 10683   005D64  6E15               	movwf	(stop@mL+1)^0,c
 10684   005D66  0EBE               	movlw	low _motorR
 10685   005D68  6E16               	movwf	stop@mR^0,c
 10686   005D6A  0E01               	movlw	high _motorR
 10687   005D6C  6E17               	movwf	(stop@mR+1)^0,c
 10688   005D6E  EC90  F02A         	call	_stop	;wreg free
 10689   005D72                     
 10690                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10691   005D72  0E05               	movlw	5
 10692   005D74  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10693   005D76  0E0F               	movlw	15
 10694   005D78  6E1E               	movwf	??_turnLeft45^0,c
 10695   005D7A  0EF1               	movlw	241
 10696   005D7C                     u6227:
 10697   005D7C  2EE8               	decfsz	wreg,f,c
 10698   005D7E  D7FE               	bra	u6227
 10699   005D80  2E1E               	decfsz	??_turnLeft45^0,f,c
 10700   005D82  D7FC               	bra	u6227
 10701   005D84  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10702   005D86  D7FA               	bra	u6227
 10703   005D88  F000               	nop	
 10704   005D8A  0012               	return		;funcret
 10705   005D8C                     __end_of_turnLeft45:
 10706                           	callstack 0
 10707                           
 10708 ;; *************** function _turnLeft *****************
 10709 ;; Defined at:
 10710 ;;		line 111 in file "dc_motor.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10713 ;;		 -> motorL(9), 
 10714 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10715 ;;		 -> motorR(9), 
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;		None
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  1    wreg      void 
 10720 ;; Registers used:
 10721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;Total ram usage:        6 bytes
 10732 ;; Hardware stack levels used: 1
 10733 ;; Hardware stack levels required when called: 2
 10734 ;; This function calls:
 10735 ;;		_setMotorPWM
 10736 ;; This function is called by:
 10737 ;;		_turnLeft45
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text59
 10742   00523C                     __ptext59:
 10743                           	callstack 0
 10744   00523C                     _turnLeft:
 10745                           	callstack 26
 10746   00523C                     
 10747                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10748   00523C  EE20 F001          	lfsr	2,1
 10749   005240  5014               	movf	turnLeft@mL^0,w,c
 10750   005242  26D9               	addwf	fsr2l,f,c
 10751   005244  5015               	movf	(turnLeft@mL+1)^0,w,c
 10752   005246  22DA               	addwfc	fsr2h,f,c
 10753   005248  0E00               	movlw	0
 10754   00524A  6EDF               	movwf	indf2,c
 10755                           
 10756                           ;dc_motor.c: 114:     mR->direction =1;
 10757   00524C  EE20 F001          	lfsr	2,1
 10758   005250  5016               	movf	turnLeft@mR^0,w,c
 10759   005252  26D9               	addwf	fsr2l,f,c
 10760   005254  5017               	movf	(turnLeft@mR+1)^0,w,c
 10761   005256  22DA               	addwfc	fsr2h,f,c
 10762   005258  0E01               	movlw	1
 10763   00525A  6EDF               	movwf	indf2,c
 10764                           
 10765                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10766   00525C  EF54  F029         	goto	l4715
 10767   005260                     l4707:
 10768                           
 10769                           ;dc_motor.c: 118:         mL->power+=10;
 10770   005260  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10771   005264  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10772   005268  0E0A               	movlw	10
 10773   00526A  26DF               	addwf	indf2,f,c
 10774                           
 10775                           ;dc_motor.c: 119:         mR->power+=10;
 10776   00526C  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10777   005270  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10778   005274  0E0A               	movlw	10
 10779   005276  26DF               	addwf	indf2,f,c
 10780   005278                     
 10781                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10782   005278  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10783   00527C  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10784   005280  EC1E  F024         	call	_setMotorPWM	;wreg free
 10785   005284                     
 10786                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10787   005284  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10788   005288  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10789   00528C  EC1E  F024         	call	_setMotorPWM	;wreg free
 10790   005290                     
 10791                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10792   005290  0E02               	movlw	2
 10793   005292  6E19               	movwf	(??_turnLeft+1)^0,c
 10794   005294  0EA0               	movlw	160
 10795   005296  6E18               	movwf	??_turnLeft^0,c
 10796   005298  0E92               	movlw	146
 10797   00529A                     u6237:
 10798   00529A  2EE8               	decfsz	wreg,f,c
 10799   00529C  D7FE               	bra	u6237
 10800   00529E  2E18               	decfsz	??_turnLeft^0,f,c
 10801   0052A0  D7FC               	bra	u6237
 10802   0052A2  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10803   0052A4  D7FA               	bra	u6237
 10804   0052A6  D000               	nop2	
 10805   0052A8                     l4715:
 10806   0052A8  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10807   0052AC  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10808   0052B0  0E1E               	movlw	30
 10809   0052B2  60DF               	cpfslt	indf2,c
 10810   0052B4  EF5E  F029         	goto	u4511
 10811   0052B8  EF60  F029         	goto	u4510
 10812   0052BC                     u4511:
 10813   0052BC  EF6C  F029         	goto	l504
 10814   0052C0                     u4510:
 10815   0052C0  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10816   0052C4  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10817   0052C8  0E1D               	movlw	29
 10818   0052CA  64DF               	cpfsgt	indf2,c
 10819   0052CC  EF6A  F029         	goto	u4521
 10820   0052D0  EF6C  F029         	goto	u4520
 10821   0052D4                     u4521:
 10822   0052D4  EF30  F029         	goto	l4707
 10823   0052D8                     u4520:
 10824   0052D8                     l504:
 10825   0052D8  0012               	return		;funcret
 10826   0052DA                     __end_of_turnLeft:
 10827                           	callstack 0
 10828                           
 10829 ;; *************** function _TurnDelay *****************
 10830 ;; Defined at:
 10831 ;;		line 204 in file "dc_motor.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;  Turn45Delay     2    0[COMRAM] int 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;		None
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  1    wreg      void 
 10838 ;; Registers used:
 10839 ;;		wreg, status,2, status,0
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10849 ;;Total ram usage:        3 bytes
 10850 ;; Hardware stack levels used: 1
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_turnRight45
 10855 ;;		_turnLeft45
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text60
 10860   006014                     __ptext60:
 10861                           	callstack 0
 10862   006014                     _TurnDelay:
 10863                           	callstack 28
 10864   006014                     
 10865                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10866   006014  EF17  F030         	goto	l539
 10867   006018                     l4749:
 10868                           
 10869                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10870   006018  0E15               	movlw	21
 10871   00601A  6E03               	movwf	??_TurnDelay^0,c
 10872   00601C  0EC6               	movlw	198
 10873   00601E                     u6247:
 10874   00601E  2EE8               	decfsz	wreg,f,c
 10875   006020  D7FE               	bra	u6247
 10876   006022  2E03               	decfsz	??_TurnDelay^0,f,c
 10877   006024  D7FC               	bra	u6247
 10878   006026  D000               	nop2	
 10879   006028                     
 10880                           ;dc_motor.c: 207:         Turn45Delay--;
 10881   006028  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10882   00602A  A0D8               	btfss	status,0,c
 10883   00602C  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10884   00602E                     l539:
 10885                           
 10886                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10887   00602E  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10888   006030  EF24  F030         	goto	u4570
 10889   006034  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10890   006036  E106               	bnz	u4571
 10891   006038  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10892   00603A  B0D8               	btfsc	status,0,c
 10893   00603C  EF22  F030         	goto	u4571
 10894   006040  EF24  F030         	goto	u4570
 10895   006044                     u4571:
 10896   006044  EF0C  F030         	goto	l4749
 10897   006048                     u4570:
 10898   006048  0012               	return		;funcret
 10899   00604A                     __end_of_TurnDelay:
 10900                           	callstack 0
 10901                           
 10902 ;; *************** function _reverseOneBlock *****************
 10903 ;; Defined at:
 10904 ;;		line 232 in file "dc_motor.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10907 ;;		 -> motorL(9), 
 10908 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10909 ;;		 -> motorR(9), 
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;		None
 10912 ;; Return value:  Size  Location     Type
 10913 ;;                  1    wreg      void 
 10914 ;; Registers used:
 10915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10916 ;; Tracked objects:
 10917 ;;		On entry : 0/0
 10918 ;;		On exit  : 0/0
 10919 ;;		Unchanged: 0/0
 10920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;Total ram usage:        6 bytes
 10926 ;; Hardware stack levels used: 1
 10927 ;; Hardware stack levels required when called: 3
 10928 ;; This function calls:
 10929 ;;		_fullSpeedBack
 10930 ;;		_stop
 10931 ;; This function is called by:
 10932 ;;		_YellowMove
 10933 ;;		_PinkMove
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text61
 10938   005810                     __ptext61:
 10939                           	callstack 0
 10940   005810                     _reverseOneBlock:
 10941                           	callstack 26
 10942   005810                     
 10943                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10944   005810  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10945   005814  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10946   005818  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10947   00581C  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10948   005820  EC6D  F029         	call	_fullSpeedBack	;wreg free
 10949   005824                     
 10950                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10951   005824  0EA3               	movlw	163
 10952   005826  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10953   005828  0E57               	movlw	87
 10954   00582A  6E1E               	movwf	??_reverseOneBlock^0,c
 10955   00582C  0E02               	movlw	2
 10956   00582E                     u6257:
 10957   00582E  2EE8               	decfsz	wreg,f,c
 10958   005830  D7FE               	bra	u6257
 10959   005832  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10960   005834  D7FC               	bra	u6257
 10961   005836  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10962   005838  D7FA               	bra	u6257
 10963   00583A  D000               	nop2	
 10964   00583C                     
 10965                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10966   00583C  0EC7               	movlw	low _motorL
 10967   00583E  6E14               	movwf	stop@mL^0,c
 10968   005840  0E01               	movlw	high _motorL
 10969   005842  6E15               	movwf	(stop@mL+1)^0,c
 10970   005844  0EBE               	movlw	low _motorR
 10971   005846  6E16               	movwf	stop@mR^0,c
 10972   005848  0E01               	movlw	high _motorR
 10973   00584A  6E17               	movwf	(stop@mR+1)^0,c
 10974   00584C  EC90  F02A         	call	_stop	;wreg free
 10975                           
 10976                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10977   005850  0E05               	movlw	5
 10978   005852  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10979   005854  0E0F               	movlw	15
 10980   005856  6E1E               	movwf	??_reverseOneBlock^0,c
 10981   005858  0EF1               	movlw	241
 10982   00585A                     u6267:
 10983   00585A  2EE8               	decfsz	wreg,f,c
 10984   00585C  D7FE               	bra	u6267
 10985   00585E  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10986   005860  D7FC               	bra	u6267
 10987   005862  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10988   005864  D7FA               	bra	u6267
 10989   005866  F000               	nop	
 10990   005868  0012               	return		;funcret
 10991   00586A                     __end_of_reverseOneBlock:
 10992                           	callstack 0
 10993                           
 10994 ;; *************** function _reverseDetect *****************
 10995 ;; Defined at:
 10996 ;;		line 225 in file "dc_motor.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10999 ;;		 -> motorL(9), 
 11000 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11001 ;;		 -> motorR(9), 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;		None
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  1    wreg      void 
 11006 ;; Registers used:
 11007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11017 ;;Total ram usage:        6 bytes
 11018 ;; Hardware stack levels used: 1
 11019 ;; Hardware stack levels required when called: 3
 11020 ;; This function calls:
 11021 ;;		_fullSpeedBack
 11022 ;;		_stop
 11023 ;; This function is called by:
 11024 ;;		_RedMove
 11025 ;;		_GreenMove
 11026 ;;		_BlueMove
 11027 ;;		_YellowMove
 11028 ;;		_PinkMove
 11029 ;;		_OrangeMove
 11030 ;;		_LightBlueMove
 11031 ;;		_ReverseYellow
 11032 ;;		_ReversePink
 11033 ;;		_go_Home
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           
 11037                           	psect	text62
 11038   00586A                     __ptext62:
 11039                           	callstack 0
 11040   00586A                     _reverseDetect:
 11041                           	callstack 26
 11042   00586A                     
 11043                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 11044   00586A  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 11045   00586E  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 11046   005872  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 11047   005876  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 11048   00587A  EC6D  F029         	call	_fullSpeedBack	;wreg free
 11049   00587E                     
 11050                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 11051   00587E  0E11               	movlw	17
 11052   005880  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11053   005882  0E3C               	movlw	60
 11054   005884  6E1E               	movwf	??_reverseDetect^0,c
 11055   005886  0ECB               	movlw	203
 11056   005888                     u6277:
 11057   005888  2EE8               	decfsz	wreg,f,c
 11058   00588A  D7FE               	bra	u6277
 11059   00588C  2E1E               	decfsz	??_reverseDetect^0,f,c
 11060   00588E  D7FC               	bra	u6277
 11061   005890  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11062   005892  D7FA               	bra	u6277
 11063   005894  F000               	nop	
 11064   005896                     
 11065                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 11066   005896  0EC7               	movlw	low _motorL
 11067   005898  6E14               	movwf	stop@mL^0,c
 11068   00589A  0E01               	movlw	high _motorL
 11069   00589C  6E15               	movwf	(stop@mL+1)^0,c
 11070   00589E  0EBE               	movlw	low _motorR
 11071   0058A0  6E16               	movwf	stop@mR^0,c
 11072   0058A2  0E01               	movlw	high _motorR
 11073   0058A4  6E17               	movwf	(stop@mR+1)^0,c
 11074   0058A6  EC90  F02A         	call	_stop	;wreg free
 11075                           
 11076                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11077   0058AA  0E05               	movlw	5
 11078   0058AC  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11079   0058AE  0E0F               	movlw	15
 11080   0058B0  6E1E               	movwf	??_reverseDetect^0,c
 11081   0058B2  0EF1               	movlw	241
 11082   0058B4                     u6287:
 11083   0058B4  2EE8               	decfsz	wreg,f,c
 11084   0058B6  D7FE               	bra	u6287
 11085   0058B8  2E1E               	decfsz	??_reverseDetect^0,f,c
 11086   0058BA  D7FC               	bra	u6287
 11087   0058BC  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11088   0058BE  D7FA               	bra	u6287
 11089   0058C0  F000               	nop	
 11090   0058C2  0012               	return		;funcret
 11091   0058C4                     __end_of_reverseDetect:
 11092                           	callstack 0
 11093                           
 11094 ;; *************** function _fullSpeedBack *****************
 11095 ;; Defined at:
 11096 ;;		line 185 in file "dc_motor.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11099 ;;		 -> motorL(9), 
 11100 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11101 ;;		 -> motorR(9), 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;		None
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      void 
 11106 ;; Registers used:
 11107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;Total ram usage:        6 bytes
 11118 ;; Hardware stack levels used: 1
 11119 ;; Hardware stack levels required when called: 2
 11120 ;; This function calls:
 11121 ;;		_setMotorPWM
 11122 ;; This function is called by:
 11123 ;;		_reverseDetect
 11124 ;;		_reverseOneBlock
 11125 ;;		_RetryMove
 11126 ;;		_Backhalfblock
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text63
 11131   0052DA                     __ptext63:
 11132                           	callstack 0
 11133   0052DA                     _fullSpeedBack:
 11134                           	callstack 26
 11135   0052DA                     
 11136                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11137   0052DA  EE20 F001          	lfsr	2,1
 11138   0052DE  5014               	movf	fullSpeedBack@mL^0,w,c
 11139   0052E0  26D9               	addwf	fsr2l,f,c
 11140   0052E2  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11141   0052E4  22DA               	addwfc	fsr2h,f,c
 11142   0052E6  0E00               	movlw	0
 11143   0052E8  6EDF               	movwf	indf2,c
 11144                           
 11145                           ;dc_motor.c: 189:     mR->direction =0;
 11146   0052EA  EE20 F001          	lfsr	2,1
 11147   0052EE  5016               	movf	fullSpeedBack@mR^0,w,c
 11148   0052F0  26D9               	addwf	fsr2l,f,c
 11149   0052F2  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11150   0052F4  22DA               	addwfc	fsr2h,f,c
 11151   0052F6  0E00               	movlw	0
 11152   0052F8  6EDF               	movwf	indf2,c
 11153                           
 11154                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11155   0052FA  EFA3  F029         	goto	l4743
 11156   0052FE                     l4735:
 11157                           
 11158                           ;dc_motor.c: 192:         mL->power+=10;
 11159   0052FE  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11160   005302  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11161   005306  0E0A               	movlw	10
 11162   005308  26DF               	addwf	indf2,f,c
 11163                           
 11164                           ;dc_motor.c: 193:         mR->power+=10;
 11165   00530A  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11166   00530E  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11167   005312  0E0A               	movlw	10
 11168   005314  26DF               	addwf	indf2,f,c
 11169   005316                     
 11170                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11171   005316  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11172   00531A  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11173   00531E  EC1E  F024         	call	_setMotorPWM	;wreg free
 11174   005322                     
 11175                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11176   005322  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11177   005326  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11178   00532A  EC1E  F024         	call	_setMotorPWM	;wreg free
 11179   00532E                     
 11180                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11181   00532E  0E02               	movlw	2
 11182   005330  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11183   005332  0EA0               	movlw	160
 11184   005334  6E18               	movwf	??_fullSpeedBack^0,c
 11185   005336  0E92               	movlw	146
 11186   005338                     u6297:
 11187   005338  2EE8               	decfsz	wreg,f,c
 11188   00533A  D7FE               	bra	u6297
 11189   00533C  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11190   00533E  D7FC               	bra	u6297
 11191   005340  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11192   005342  D7FA               	bra	u6297
 11193   005344  D000               	nop2	
 11194   005346                     l4743:
 11195   005346  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11196   00534A  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11197   00534E  0E1E               	movlw	30
 11198   005350  60DF               	cpfslt	indf2,c
 11199   005352  EFAD  F029         	goto	u4551
 11200   005356  EFAF  F029         	goto	u4550
 11201   00535A                     u4551:
 11202   00535A  EFBB  F029         	goto	l536
 11203   00535E                     u4550:
 11204   00535E  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11205   005362  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11206   005366  0E1D               	movlw	29
 11207   005368  64DF               	cpfsgt	indf2,c
 11208   00536A  EFB9  F029         	goto	u4561
 11209   00536E  EFBB  F029         	goto	u4560
 11210   005372                     u4561:
 11211   005372  EF7F  F029         	goto	l4735
 11212   005376                     u4560:
 11213   005376                     l536:
 11214   005376  0012               	return		;funcret
 11215   005378                     __end_of_fullSpeedBack:
 11216                           	callstack 0
 11217                           
 11218 ;; *************** function _Interrupts_init *****************
 11219 ;; Defined at:
 11220 ;;		line 9 in file "interrupts.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;		None
 11223 ;; Auto vars:     Size  Location     Type
 11224 ;;		None
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  1    wreg      void 
 11227 ;; Registers used:
 11228 ;;		None
 11229 ;; Tracked objects:
 11230 ;;		On entry : 0/0
 11231 ;;		On exit  : 0/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11238 ;;Total ram usage:        0 bytes
 11239 ;; Hardware stack levels used: 1
 11240 ;; This function calls:
 11241 ;;		Nothing
 11242 ;; This function is called by:
 11243 ;;		_main
 11244 ;; This function uses a non-reentrant model
 11245 ;;
 11246                           
 11247                           	psect	text64
 11248   0061C2                     __ptext64:
 11249                           	callstack 0
 11250   0061C2                     _Interrupts_init:
 11251                           	callstack 30
 11252   0061C2  0012               	return		;funcret
 11253   0061C4                     __end_of_Interrupts_init:
 11254                           	callstack 0
 11255                           
 11256 ;; *************** function _Forwardhalfblock *****************
 11257 ;; Defined at:
 11258 ;;		line 245 in file "dc_motor.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11261 ;;		 -> motorL(9), 
 11262 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11263 ;;		 -> motorR(9), 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      void 
 11268 ;; Registers used:
 11269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11278 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11279 ;;Total ram usage:        6 bytes
 11280 ;; Hardware stack levels used: 1
 11281 ;; Hardware stack levels required when called: 3
 11282 ;; This function calls:
 11283 ;;		_fullSpeedAhead
 11284 ;;		_stop
 11285 ;; This function is called by:
 11286 ;;		_main
 11287 ;; This function uses a non-reentrant model
 11288 ;;
 11289                           
 11290                           	psect	text65
 11291   0058C4                     __ptext65:
 11292                           	callstack 0
 11293   0058C4                     _Forwardhalfblock:
 11294                           	callstack 27
 11295   0058C4                     
 11296                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11297   0058C4  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11298   0058C8  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11299   0058CC  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11300   0058D0  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11301   0058D4  ECBC  F029         	call	_fullSpeedAhead	;wreg free
 11302   0058D8                     
 11303                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11304   0058D8  0E52               	movlw	82
 11305   0058DA  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11306   0058DC  0E2B               	movlw	43
 11307   0058DE  6E1E               	movwf	??_Forwardhalfblock^0,c
 11308   0058E0  0E00               	movlw	0
 11309   0058E2                     u6307:
 11310   0058E2  2EE8               	decfsz	wreg,f,c
 11311   0058E4  D7FE               	bra	u6307
 11312   0058E6  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11313   0058E8  D7FC               	bra	u6307
 11314   0058EA  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11315   0058EC  D7FA               	bra	u6307
 11316   0058EE  D000               	nop2	
 11317   0058F0                     
 11318                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11319   0058F0  0EC7               	movlw	low _motorL
 11320   0058F2  6E14               	movwf	stop@mL^0,c
 11321   0058F4  0E01               	movlw	high _motorL
 11322   0058F6  6E15               	movwf	(stop@mL+1)^0,c
 11323   0058F8  0EBE               	movlw	low _motorR
 11324   0058FA  6E16               	movwf	stop@mR^0,c
 11325   0058FC  0E01               	movlw	high _motorR
 11326   0058FE  6E17               	movwf	(stop@mR+1)^0,c
 11327   005900  EC90  F02A         	call	_stop	;wreg free
 11328                           
 11329                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11330   005904  0E05               	movlw	5
 11331   005906  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11332   005908  0E0F               	movlw	15
 11333   00590A  6E1E               	movwf	??_Forwardhalfblock^0,c
 11334   00590C  0EF1               	movlw	241
 11335   00590E                     u6317:
 11336   00590E  2EE8               	decfsz	wreg,f,c
 11337   005910  D7FE               	bra	u6317
 11338   005912  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11339   005914  D7FC               	bra	u6317
 11340   005916  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11341   005918  D7FA               	bra	u6317
 11342   00591A  F000               	nop	
 11343   00591C  0012               	return		;funcret
 11344   00591E                     __end_of_Forwardhalfblock:
 11345                           	callstack 0
 11346                           
 11347 ;; *************** function _stop *****************
 11348 ;; Defined at:
 11349 ;;		line 93 in file "dc_motor.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11352 ;;		 -> motorL(9), 
 11353 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11354 ;;		 -> motorR(9), 
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;		None
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  1    wreg      void 
 11359 ;; Registers used:
 11360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11361 ;; Tracked objects:
 11362 ;;		On entry : 0/0
 11363 ;;		On exit  : 0/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11370 ;;Total ram usage:        6 bytes
 11371 ;; Hardware stack levels used: 1
 11372 ;; Hardware stack levels required when called: 2
 11373 ;; This function calls:
 11374 ;;		_setMotorPWM
 11375 ;; This function is called by:
 11376 ;;		_main
 11377 ;;		_turnRight45
 11378 ;;		_turnLeft45
 11379 ;;		_reverseDetect
 11380 ;;		_reverseOneBlock
 11381 ;;		_ForwardOneBlock
 11382 ;;		_Forwardhalfblock
 11383 ;;		_RetryMove
 11384 ;;		_Backhalfblock
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text66
 11389   005520                     __ptext66:
 11390                           	callstack 0
 11391   005520                     _stop:
 11392                           	callstack 26
 11393   005520                     
 11394                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11395   005520  EFB6  F02A         	goto	l4701
 11396   005524                     l4693:
 11397                           
 11398                           ;dc_motor.c: 97:         mL->power-=10;
 11399   005524  C014  FFD9         	movff	stop@mL,fsr2l
 11400   005528  C015  FFDA         	movff	stop@mL+1,fsr2h
 11401   00552C  0E0A               	movlw	10
 11402   00552E  5EDF               	subwf	indf2,f,c
 11403                           
 11404                           ;dc_motor.c: 98:         mR->power-=10;
 11405   005530  C016  FFD9         	movff	stop@mR,fsr2l
 11406   005534  C017  FFDA         	movff	stop@mR+1,fsr2h
 11407   005538  0E0A               	movlw	10
 11408   00553A  5EDF               	subwf	indf2,f,c
 11409   00553C                     
 11410                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11411   00553C  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11412   005540  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11413   005544  EC1E  F024         	call	_setMotorPWM	;wreg free
 11414   005548                     
 11415                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11416   005548  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11417   00554C  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11418   005550  EC1E  F024         	call	_setMotorPWM	;wreg free
 11419   005554                     
 11420                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11421   005554  0E02               	movlw	2
 11422   005556  6E19               	movwf	(??_stop+1)^0,c
 11423   005558  0EA0               	movlw	160
 11424   00555A  6E18               	movwf	??_stop^0,c
 11425   00555C  0E92               	movlw	146
 11426   00555E                     u6327:
 11427   00555E  2EE8               	decfsz	wreg,f,c
 11428   005560  D7FE               	bra	u6327
 11429   005562  2E18               	decfsz	??_stop^0,f,c
 11430   005564  D7FC               	bra	u6327
 11431   005566  2E19               	decfsz	(??_stop+1)^0,f,c
 11432   005568  D7FA               	bra	u6327
 11433   00556A  D000               	nop2	
 11434   00556C                     l4701:
 11435                           
 11436                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11437   00556C  C014  FFD9         	movff	stop@mL,fsr2l
 11438   005570  C015  FFDA         	movff	stop@mL+1,fsr2h
 11439   005574  50DF               	movf	indf2,w,c
 11440   005576  A4D8               	btfss	status,2,c
 11441   005578  EFC0  F02A         	goto	u4491
 11442   00557C  EFC2  F02A         	goto	u4490
 11443   005580                     u4491:
 11444   005580  EF92  F02A         	goto	l4693
 11445   005584                     u4490:
 11446   005584  C016  FFD9         	movff	stop@mR,fsr2l
 11447   005588  C017  FFDA         	movff	stop@mR+1,fsr2h
 11448   00558C  50DF               	movf	indf2,w,c
 11449   00558E  A4D8               	btfss	status,2,c
 11450   005590  EFCC  F02A         	goto	u4501
 11451   005594  EFCE  F02A         	goto	u4500
 11452   005598                     u4501:
 11453   005598  EF92  F02A         	goto	l4693
 11454   00559C                     u4500:
 11455   00559C  0012               	return		;funcret
 11456   00559E                     __end_of_stop:
 11457                           	callstack 0
 11458                           
 11459 ;; *************** function _fullSpeedAhead *****************
 11460 ;; Defined at:
 11461 ;;		line 147 in file "dc_motor.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11464 ;;		 -> motorL(9), 
 11465 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11466 ;;		 -> motorR(9), 
 11467 ;; Auto vars:     Size  Location     Type
 11468 ;;		None
 11469 ;; Return value:  Size  Location     Type
 11470 ;;                  1    wreg      void 
 11471 ;; Registers used:
 11472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11473 ;; Tracked objects:
 11474 ;;		On entry : 0/0
 11475 ;;		On exit  : 0/0
 11476 ;;		Unchanged: 0/0
 11477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11481 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;Total ram usage:        6 bytes
 11483 ;; Hardware stack levels used: 1
 11484 ;; Hardware stack levels required when called: 2
 11485 ;; This function calls:
 11486 ;;		_setMotorPWM
 11487 ;; This function is called by:
 11488 ;;		_main
 11489 ;;		_ForwardOneBlock
 11490 ;;		_Forwardhalfblock
 11491 ;;		_RetryMove
 11492 ;; This function uses a non-reentrant model
 11493 ;;
 11494                           
 11495                           	psect	text67
 11496   005378                     __ptext67:
 11497                           	callstack 0
 11498   005378                     _fullSpeedAhead:
 11499                           	callstack 25
 11500   005378                     
 11501                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11502   005378  EE20 F001          	lfsr	2,1
 11503   00537C  5014               	movf	fullSpeedAhead@mL^0,w,c
 11504   00537E  26D9               	addwf	fsr2l,f,c
 11505   005380  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11506   005382  22DA               	addwfc	fsr2h,f,c
 11507   005384  0E01               	movlw	1
 11508   005386  6EDF               	movwf	indf2,c
 11509                           
 11510                           ;dc_motor.c: 151:     mR->direction =1;
 11511   005388  EE20 F001          	lfsr	2,1
 11512   00538C  5016               	movf	fullSpeedAhead@mR^0,w,c
 11513   00538E  26D9               	addwf	fsr2l,f,c
 11514   005390  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11515   005392  22DA               	addwfc	fsr2h,f,c
 11516   005394  0E01               	movlw	1
 11517   005396  6EDF               	movwf	indf2,c
 11518                           
 11519                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11520   005398  EFF2  F029         	goto	l4687
 11521   00539C                     l4679:
 11522                           
 11523                           ;dc_motor.c: 154:         mL->power+=10;
 11524   00539C  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11525   0053A0  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11526   0053A4  0E0A               	movlw	10
 11527   0053A6  26DF               	addwf	indf2,f,c
 11528                           
 11529                           ;dc_motor.c: 155:         mR->power+=10;
 11530   0053A8  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11531   0053AC  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11532   0053B0  0E0A               	movlw	10
 11533   0053B2  26DF               	addwf	indf2,f,c
 11534   0053B4                     
 11535                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11536   0053B4  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11537   0053B8  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11538   0053BC  EC1E  F024         	call	_setMotorPWM	;wreg free
 11539   0053C0                     
 11540                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11541   0053C0  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11542   0053C4  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11543   0053C8  EC1E  F024         	call	_setMotorPWM	;wreg free
 11544   0053CC                     
 11545                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11546   0053CC  0E02               	movlw	2
 11547   0053CE  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11548   0053D0  0EA0               	movlw	160
 11549   0053D2  6E18               	movwf	??_fullSpeedAhead^0,c
 11550   0053D4  0E92               	movlw	146
 11551   0053D6                     u6337:
 11552   0053D6  2EE8               	decfsz	wreg,f,c
 11553   0053D8  D7FE               	bra	u6337
 11554   0053DA  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11555   0053DC  D7FC               	bra	u6337
 11556   0053DE  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11557   0053E0  D7FA               	bra	u6337
 11558   0053E2  D000               	nop2	
 11559   0053E4                     l4687:
 11560   0053E4  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11561   0053E8  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11562   0053EC  0E1E               	movlw	30
 11563   0053EE  60DF               	cpfslt	indf2,c
 11564   0053F0  EFFC  F029         	goto	u4471
 11565   0053F4  EFFE  F029         	goto	u4470
 11566   0053F8                     u4471:
 11567   0053F8  EF0A  F02A         	goto	l520
 11568   0053FC                     u4470:
 11569   0053FC  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11570   005400  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11571   005404  0E1D               	movlw	29
 11572   005406  64DF               	cpfsgt	indf2,c
 11573   005408  EF08  F02A         	goto	u4481
 11574   00540C  EF0A  F02A         	goto	u4480
 11575   005410                     u4481:
 11576   005410  EFCE  F029         	goto	l4679
 11577   005414                     u4480:
 11578   005414                     l520:
 11579   005414  0012               	return		;funcret
 11580   005416                     __end_of_fullSpeedAhead:
 11581                           	callstack 0
 11582                           
 11583 ;; *************** function _setMotorPWM *****************
 11584 ;; Defined at:
 11585 ;;		line 68 in file "dc_motor.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11588 ;;		 -> motorR(9), motorL(9), 
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;  negDuty         1   18[COMRAM] unsigned char 
 11591 ;;  posDuty         1   17[COMRAM] unsigned char 
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      void 
 11594 ;; Registers used:
 11595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11604 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11605 ;;Total ram usage:        6 bytes
 11606 ;; Hardware stack levels used: 1
 11607 ;; Hardware stack levels required when called: 1
 11608 ;; This function calls:
 11609 ;;		___lwdiv
 11610 ;;		___wmul
 11611 ;; This function is called by:
 11612 ;;		_stop
 11613 ;;		_turnLeft
 11614 ;;		_turnRight
 11615 ;;		_fullSpeedAhead
 11616 ;;		_timed_forward
 11617 ;;		_fullSpeedBack
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text68
 11622   00483C                     __ptext68:
 11623                           	callstack 0
 11624   00483C                     _setMotorPWM:
 11625                           	callstack 26
 11626   00483C                     
 11627                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11628   00483C  EE20 F002          	lfsr	2,2
 11629   004840  500E               	movf	setMotorPWM@m^0,w,c
 11630   004842  26D9               	addwf	fsr2l,f,c
 11631   004844  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11632   004846  22DA               	addwfc	fsr2h,f,c
 11633   004848  50DF               	movf	indf2,w,c
 11634   00484A  B4D8               	btfsc	status,2,c
 11635   00484C  EF2A  F024         	goto	u3491
 11636   004850  EF2C  F024         	goto	u3490
 11637   004854                     u3491:
 11638   004854  EF60  F024         	goto	l4131
 11639   004858                     u3490:
 11640   004858                     
 11641                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11642   004858  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11643   00485C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11644   004860  50DF               	movf	indf2,w,c
 11645   004862  6E10               	movwf	??_setMotorPWM^0,c
 11646   004864  5010               	movf	??_setMotorPWM^0,w,c
 11647   004866  6E01               	movwf	___wmul@multiplier^0,c
 11648   004868  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11649   00486A  EE20 F003          	lfsr	2,3
 11650   00486E  500E               	movf	setMotorPWM@m^0,w,c
 11651   004870  26D9               	addwf	fsr2l,f,c
 11652   004872  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11653   004874  22DA               	addwfc	fsr2h,f,c
 11654   004876  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11655   00487A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11656   00487E  EC79  F030         	call	___wmul	;wreg free
 11657   004882  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11658   004886  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11659   00488A  0E00               	movlw	0
 11660   00488C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11661   00488E  0E64               	movlw	100
 11662   004890  6E09               	movwf	___lwdiv@divisor^0,c
 11663   004892  EC0C  F02B         	call	___lwdiv	;wreg free
 11664   004896  EE20 F003          	lfsr	2,3
 11665   00489A  500E               	movf	setMotorPWM@m^0,w,c
 11666   00489C  26D9               	addwf	fsr2l,f,c
 11667   00489E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11668   0048A0  22DA               	addwfc	fsr2h,f,c
 11669   0048A2  50DF               	movf	indf2,w,c
 11670   0048A4  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11671   0048A6  5007               	movf	?___lwdiv^0,w,c
 11672   0048A8  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11673   0048AA  6E12               	movwf	setMotorPWM@posDuty^0,c
 11674   0048AC                     
 11675                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11676   0048AC  EE20 F003          	lfsr	2,3
 11677   0048B0  500E               	movf	setMotorPWM@m^0,w,c
 11678   0048B2  26D9               	addwf	fsr2l,f,c
 11679   0048B4  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11680   0048B6  22DA               	addwfc	fsr2h,f,c
 11681   0048B8  50DF               	movf	indf2,w,c
 11682   0048BA  6E13               	movwf	setMotorPWM@negDuty^0,c
 11683                           
 11684                           ;dc_motor.c: 75:     }
 11685   0048BC  EF83  F024         	goto	l4135
 11686   0048C0                     l4131:
 11687                           
 11688                           ;dc_motor.c: 77:         posDuty=0;
 11689   0048C0  0E00               	movlw	0
 11690   0048C2  6E12               	movwf	setMotorPWM@posDuty^0,c
 11691   0048C4                     
 11692                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11693   0048C4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11694   0048C8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11695   0048CC  50DF               	movf	indf2,w,c
 11696   0048CE  6E10               	movwf	??_setMotorPWM^0,c
 11697   0048D0  5010               	movf	??_setMotorPWM^0,w,c
 11698   0048D2  6E01               	movwf	___wmul@multiplier^0,c
 11699   0048D4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11700   0048D6  EE20 F003          	lfsr	2,3
 11701   0048DA  500E               	movf	setMotorPWM@m^0,w,c
 11702   0048DC  26D9               	addwf	fsr2l,f,c
 11703   0048DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11704   0048E0  22DA               	addwfc	fsr2h,f,c
 11705   0048E2  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11706   0048E6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11707   0048EA  EC79  F030         	call	___wmul	;wreg free
 11708   0048EE  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11709   0048F2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11710   0048F6  0E00               	movlw	0
 11711   0048F8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11712   0048FA  0E64               	movlw	100
 11713   0048FC  6E09               	movwf	___lwdiv@divisor^0,c
 11714   0048FE  EC0C  F02B         	call	___lwdiv	;wreg free
 11715   004902  5007               	movf	?___lwdiv^0,w,c
 11716   004904  6E13               	movwf	setMotorPWM@negDuty^0,c
 11717   004906                     l4135:
 11718                           
 11719                           ;dc_motor.c: 81:     if (m->direction) {
 11720   004906  EE20 F001          	lfsr	2,1
 11721   00490A  500E               	movf	setMotorPWM@m^0,w,c
 11722   00490C  26D9               	addwf	fsr2l,f,c
 11723   00490E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11724   004910  22DA               	addwfc	fsr2h,f,c
 11725   004912  50DF               	movf	indf2,w,c
 11726   004914  B4D8               	btfsc	status,2,c
 11727   004916  EF8F  F024         	goto	u3501
 11728   00491A  EF91  F024         	goto	u3500
 11729   00491E                     u3501:
 11730   00491E  EFB3  F024         	goto	l4139
 11731   004922                     u3500:
 11732   004922                     
 11733                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11734   004922  EE20 F005          	lfsr	2,5
 11735   004926  500E               	movf	setMotorPWM@m^0,w,c
 11736   004928  26D9               	addwf	fsr2l,f,c
 11737   00492A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11738   00492C  22DA               	addwfc	fsr2h,f,c
 11739   00492E  CFDE F010          	movff	postinc2,??_setMotorPWM
 11740   004932  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11741   004936  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11742   00493A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11743   00493E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11744                           
 11745                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11746   004942  EE20 F007          	lfsr	2,7
 11747   004946  500E               	movf	setMotorPWM@m^0,w,c
 11748   004948  26D9               	addwf	fsr2l,f,c
 11749   00494A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11750   00494C  22DA               	addwfc	fsr2h,f,c
 11751   00494E  CFDE F010          	movff	postinc2,??_setMotorPWM
 11752   004952  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11753   004956  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11754   00495A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11755   00495E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11756                           
 11757                           ;dc_motor.c: 86:     } else {
 11758   004962  EFD3  F024         	goto	l490
 11759   004966                     l4139:
 11760                           
 11761                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11762   004966  EE20 F005          	lfsr	2,5
 11763   00496A  500E               	movf	setMotorPWM@m^0,w,c
 11764   00496C  26D9               	addwf	fsr2l,f,c
 11765   00496E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11766   004970  22DA               	addwfc	fsr2h,f,c
 11767   004972  CFDE F010          	movff	postinc2,??_setMotorPWM
 11768   004976  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11769   00497A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11770   00497E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11771   004982  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11772                           
 11773                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11774   004986  EE20 F007          	lfsr	2,7
 11775   00498A  500E               	movf	setMotorPWM@m^0,w,c
 11776   00498C  26D9               	addwf	fsr2l,f,c
 11777   00498E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11778   004990  22DA               	addwfc	fsr2h,f,c
 11779   004992  CFDE F010          	movff	postinc2,??_setMotorPWM
 11780   004996  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11781   00499A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11782   00499E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11783   0049A2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11784   0049A6                     l490:
 11785   0049A6  0012               	return		;funcret
 11786   0049A8                     __end_of_setMotorPWM:
 11787                           	callstack 0
 11788                           
 11789 ;; *************** function ___wmul *****************
 11790 ;; Defined at:
 11791 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;  multiplier      2    0[COMRAM] unsigned int 
 11794 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11795 ;; Auto vars:     Size  Location     Type
 11796 ;;  product         2    4[COMRAM] unsigned int 
 11797 ;; Return value:  Size  Location     Type
 11798 ;;                  2    0[COMRAM] unsigned int 
 11799 ;; Registers used:
 11800 ;;		wreg, status,2, status,0, prodl, prodh
 11801 ;; Tracked objects:
 11802 ;;		On entry : 0/0
 11803 ;;		On exit  : 0/0
 11804 ;;		Unchanged: 0/0
 11805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11810 ;;Total ram usage:        6 bytes
 11811 ;; Hardware stack levels used: 1
 11812 ;; This function calls:
 11813 ;;		Nothing
 11814 ;; This function is called by:
 11815 ;;		_setMotorPWM
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text69
 11820   0060F2                     __ptext69:
 11821                           	callstack 0
 11822   0060F2                     ___wmul:
 11823                           	callstack 26
 11824   0060F2  5001               	movf	___wmul@multiplier^0,w,c
 11825   0060F4  0203               	mulwf	___wmul@multiplicand^0,c
 11826   0060F6  CFF3 F005          	movff	prodl,___wmul@product
 11827   0060FA  CFF4 F006          	movff	prodh,___wmul@product+1
 11828   0060FE  5001               	movf	___wmul@multiplier^0,w,c
 11829   006100  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11830   006102  50F3               	movf	243,w,c
 11831   006104  2606               	addwf	(___wmul@product+1)^0,f,c
 11832   006106  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11833   006108  0203               	mulwf	___wmul@multiplicand^0,c
 11834   00610A  50F3               	movf	243,w,c
 11835   00610C  2606               	addwf	(___wmul@product+1)^0,f,c
 11836   00610E  C005  F001         	movff	___wmul@product,?___wmul
 11837   006112  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11838   006116  0012               	return		;funcret
 11839   006118                     __end_of___wmul:
 11840                           	callstack 0
 11841                           
 11842 ;; *************** function ___lwdiv *****************
 11843 ;; Defined at:
 11844 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  dividend        2    6[COMRAM] unsigned int 
 11847 ;;  divisor         2    8[COMRAM] unsigned int 
 11848 ;; Auto vars:     Size  Location     Type
 11849 ;;  quotient        2   10[COMRAM] unsigned int 
 11850 ;;  counter         1   12[COMRAM] unsigned char 
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  2    6[COMRAM] unsigned int 
 11853 ;; Registers used:
 11854 ;;		wreg, status,2, status,0
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 0/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11861 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11863 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11864 ;;Total ram usage:        7 bytes
 11865 ;; Hardware stack levels used: 1
 11866 ;; This function calls:
 11867 ;;		Nothing
 11868 ;; This function is called by:
 11869 ;;		_setMotorPWM
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873                           	psect	text70
 11874   005618                     __ptext70:
 11875                           	callstack 0
 11876   005618                     ___lwdiv:
 11877                           	callstack 26
 11878   005618  0E00               	movlw	0
 11879   00561A  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11880   00561C  0E00               	movlw	0
 11881   00561E  6E0B               	movwf	___lwdiv@quotient^0,c
 11882   005620  5009               	movf	___lwdiv@divisor^0,w,c
 11883   005622  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11884   005624  B4D8               	btfsc	status,2,c
 11885   005626  EF17  F02B         	goto	u3451
 11886   00562A  EF19  F02B         	goto	u3450
 11887   00562E                     u3451:
 11888   00562E  EF41  F02B         	goto	l1185
 11889   005632                     u3450:
 11890   005632  0E01               	movlw	1
 11891   005634  6E0D               	movwf	___lwdiv@counter^0,c
 11892   005636  EF21  F02B         	goto	l4103
 11893   00563A                     l4101:
 11894   00563A  90D8               	bcf	status,0,c
 11895   00563C  3609               	rlcf	___lwdiv@divisor^0,f,c
 11896   00563E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11897   005640  2A0D               	incf	___lwdiv@counter^0,f,c
 11898   005642                     l4103:
 11899   005642  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11900   005644  EF26  F02B         	goto	u3461
 11901   005648  EF28  F02B         	goto	u3460
 11902   00564C                     u3461:
 11903   00564C  EF1D  F02B         	goto	l4101
 11904   005650                     u3460:
 11905   005650                     l4105:
 11906   005650  90D8               	bcf	status,0,c
 11907   005652  360B               	rlcf	___lwdiv@quotient^0,f,c
 11908   005654  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11909   005656  5009               	movf	___lwdiv@divisor^0,w,c
 11910   005658  5C07               	subwf	___lwdiv@dividend^0,w,c
 11911   00565A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11912   00565C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11913   00565E  A0D8               	btfss	status,0,c
 11914   005660  EF34  F02B         	goto	u3471
 11915   005664  EF36  F02B         	goto	u3470
 11916   005668                     u3471:
 11917   005668  EF3B  F02B         	goto	l4113
 11918   00566C                     u3470:
 11919   00566C  5009               	movf	___lwdiv@divisor^0,w,c
 11920   00566E  5E07               	subwf	___lwdiv@dividend^0,f,c
 11921   005670  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11922   005672  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11923   005674  800B               	bsf	___lwdiv@quotient^0,0,c
 11924   005676                     l4113:
 11925   005676  90D8               	bcf	status,0,c
 11926   005678  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11927   00567A  3209               	rrcf	___lwdiv@divisor^0,f,c
 11928   00567C  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11929   00567E  EF28  F02B         	goto	l4105
 11930   005682                     l1185:
 11931   005682  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11932   005686  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11933   00568A  0012               	return		;funcret
 11934   00568C                     __end_of___lwdiv:
 11935                           	callstack 0
 11936                           
 11937 ;; *************** function _Colour_decider *****************
 11938 ;; Defined at:
 11939 ;;		line 125 in file "color.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  vals            2   74[COMRAM] PTR struct RGB
 11942 ;;		 -> vals(8), 
 11943 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11944 ;;		 -> rel(12), 
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;  RGB_col        12    6[BANK0 ] float [3]
 11947 ;;  Hue             4   28[BANK0 ] float 
 11948 ;;  Cmin            4   22[BANK0 ] float 
 11949 ;;  Cmax            4   18[BANK0 ] float 
 11950 ;;  i               2   26[BANK0 ] int 
 11951 ;;  Cmax_i          2    4[BANK0 ] int 
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  2   74[COMRAM] int 
 11954 ;; Registers used:
 11955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11962 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11964 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11965 ;;Total ram usage:       38 bytes
 11966 ;; Hardware stack levels used: 1
 11967 ;; Hardware stack levels required when called: 2
 11968 ;; This function calls:
 11969 ;;		___fladd
 11970 ;;		___fldiv
 11971 ;;		___fleq
 11972 ;;		___flge
 11973 ;;		___flmul
 11974 ;;		___flsub
 11975 ;;		___xxtofl
 11976 ;; This function is called by:
 11977 ;;		_main
 11978 ;; This function uses a non-reentrant model
 11979 ;;
 11980                           
 11981                           	psect	text71
 11982   000E52                     __ptext71:
 11983                           	callstack 0
 11984   000E52                     _Colour_decider:
 11985                           	callstack 28
 11986   000E52                     
 11987                           ;color.c: 126:     float Cmax = 0;
 11988   000E52  0E00               	movlw	0
 11989   000E54  0100               	movlb	0	; () banked
 11990   000E56  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11991   000E58  0E00               	movlw	0
 11992   000E5A  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11993   000E5C  0E00               	movlw	0
 11994   000E5E  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11995   000E60  0E00               	movlw	0
 11996   000E62  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11997                           
 11998                           ;color.c: 127:     float Cmin= 100000;
 11999   000E64  0E00               	movlw	0
 12000   000E66  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12001   000E68  0E50               	movlw	80
 12002   000E6A  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12003   000E6C  0EC3               	movlw	195
 12004   000E6E  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12005   000E70  0E47               	movlw	71
 12006   000E72  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12007                           
 12008                           ;color.c: 128:     int Cmax_i =4;
 12009   000E74  0E00               	movlw	0
 12010   000E76  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12011   000E78  0E04               	movlw	4
 12012   000E7A  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12013   000E7C                     
 12014                           ; BSR set to: 0
 12015                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12016   000E7C  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12017   000E80  0E0B               	movlw	11
 12018   000E82                     u5211:
 12019   000E82  6ADE               	clrf	postinc2,c
 12020   000E84  06E8               	decf	wreg,f,c
 12021   000E86  E2FD               	bc	u5211
 12022   000E88                     
 12023                           ; BSR set to: 0
 12024   000E88  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12025   000E8C  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12026   000E90  CFDE F001          	movff	postinc2,___xxtofl@val
 12027   000E94  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12028   000E98  0E00               	movlw	0
 12029   000E9A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12030   000E9C  0EFF               	movlw	-1
 12031   000E9E  6E03               	movwf	(___xxtofl@val+2)^0,c
 12032   000EA0  6E04               	movwf	(___xxtofl@val+3)^0,c
 12033   000EA2  0E01               	movlw	1
 12034   000EA4  EC80  F022         	call	___xxtofl
 12035   000EA8  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12036   000EAC  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12037   000EB0  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12038   000EB4  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12039   000EB8  EE20 F002          	lfsr	2,2
 12040   000EBC  504B               	movf	Colour_decider@vals^0,w,c
 12041   000EBE  26D9               	addwf	fsr2l,f,c
 12042   000EC0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12043   000EC2  22DA               	addwfc	fsr2h,f,c
 12044   000EC4  CFDE F001          	movff	postinc2,___xxtofl@val
 12045   000EC8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12046   000ECC  0E00               	movlw	0
 12047   000ECE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12048   000ED0  0EFF               	movlw	-1
 12049   000ED2  6E03               	movwf	(___xxtofl@val+2)^0,c
 12050   000ED4  6E04               	movwf	(___xxtofl@val+3)^0,c
 12051   000ED6  0E01               	movlw	1
 12052   000ED8  EC80  F022         	call	___xxtofl
 12053   000EDC  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12054   000EE0  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12055   000EE4  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12056   000EE8  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12057   000EEC  EE20 F004          	lfsr	2,4
 12058   000EF0  504B               	movf	Colour_decider@vals^0,w,c
 12059   000EF2  26D9               	addwf	fsr2l,f,c
 12060   000EF4  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12061   000EF6  22DA               	addwfc	fsr2h,f,c
 12062   000EF8  CFDE F001          	movff	postinc2,___xxtofl@val
 12063   000EFC  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12064   000F00  0E00               	movlw	0
 12065   000F02  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12066   000F04  0EFF               	movlw	-1
 12067   000F06  6E03               	movwf	(___xxtofl@val+2)^0,c
 12068   000F08  6E04               	movwf	(___xxtofl@val+3)^0,c
 12069   000F0A  0E01               	movlw	1
 12070   000F0C  EC80  F022         	call	___xxtofl
 12071   000F10  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12072   000F14  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12073   000F18  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12074   000F1C  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12075   000F20                     
 12076                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12077   000F20  0E00               	movlw	0
 12078   000F22  0100               	movlb	0	; () banked
 12079   000F24  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12080   000F26  0E00               	movlw	0
 12081   000F28  6F7A               	movwf	Colour_decider@i& (0+255),b
 12082   000F2A                     l5371:
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12086   000F2A  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12087   000F2E  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12088   000F32  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12089   000F36  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12090   000F3A  0E66               	movlw	low Colour_decider@RGB_col
 12091   000F3C  6E4F               	movwf	??_Colour_decider^0,c
 12092   000F3E  0E00               	movlw	high Colour_decider@RGB_col
 12093   000F40  6E50               	movwf	(??_Colour_decider+1)^0,c
 12094   000F42  90D8               	bcf	status,0,c
 12095   000F44  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12096   000F46  6ED9               	movwf	fsr2l,c
 12097   000F48  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12098   000F4A  6EDA               	movwf	fsr2h,c
 12099   000F4C  90D8               	bcf	status,0,c
 12100   000F4E  36D9               	rlcf	fsr2l,f,c
 12101   000F50  36DA               	rlcf	fsr2h,f,c
 12102   000F52  504F               	movf	??_Colour_decider^0,w,c
 12103   000F54  26D9               	addwf	fsr2l,f,c
 12104   000F56  5050               	movf	(??_Colour_decider+1)^0,w,c
 12105   000F58  22DA               	addwfc	fsr2h,f,c
 12106   000F5A  CFDE F02E          	movff	postinc2,___flge@ff2
 12107   000F5E  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12108   000F62  CFDE F030          	movff	postinc2,___flge@ff2+2
 12109   000F66  CFDE F031          	movff	postinc2,___flge@ff2+3
 12110   000F6A  EC09  F026         	call	___flge	;wreg free
 12111   000F6E  B0D8               	btfsc	status,0,c
 12112   000F70  EFBC  F007         	goto	u5221
 12113   000F74  EFBE  F007         	goto	u5220
 12114   000F78                     u5221:
 12115   000F78  EFDB  F007         	goto	l5377
 12116   000F7C                     u5220:
 12117   000F7C                     
 12118                           ;color.c: 137:             Cmax=RGB_col[i];
 12119   000F7C  0E66               	movlw	low Colour_decider@RGB_col
 12120   000F7E  6E4F               	movwf	??_Colour_decider^0,c
 12121   000F80  0E00               	movlw	high Colour_decider@RGB_col
 12122   000F82  6E50               	movwf	(??_Colour_decider+1)^0,c
 12123   000F84  90D8               	bcf	status,0,c
 12124   000F86  0100               	movlb	0	; () banked
 12125   000F88  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12126   000F8A  6ED9               	movwf	fsr2l,c
 12127   000F8C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12128   000F8E  6EDA               	movwf	fsr2h,c
 12129   000F90  90D8               	bcf	status,0,c
 12130   000F92  36D9               	rlcf	fsr2l,f,c
 12131   000F94  36DA               	rlcf	fsr2h,f,c
 12132   000F96  504F               	movf	??_Colour_decider^0,w,c
 12133   000F98  26D9               	addwf	fsr2l,f,c
 12134   000F9A  5050               	movf	(??_Colour_decider+1)^0,w,c
 12135   000F9C  22DA               	addwfc	fsr2h,f,c
 12136   000F9E  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12137   000FA2  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12138   000FA6  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12139   000FAA  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12140   000FAE                     
 12141                           ; BSR set to: 0
 12142                           ;color.c: 138:             Cmax_i=i;
 12143   000FAE  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12144   000FB2  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12145   000FB6                     l5377:
 12146                           
 12147                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12148   000FB6  0E66               	movlw	low Colour_decider@RGB_col
 12149   000FB8  6E4F               	movwf	??_Colour_decider^0,c
 12150   000FBA  0E00               	movlw	high Colour_decider@RGB_col
 12151   000FBC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12152   000FBE  90D8               	bcf	status,0,c
 12153   000FC0  0100               	movlb	0	; () banked
 12154   000FC2  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12155   000FC4  6ED9               	movwf	fsr2l,c
 12156   000FC6  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12157   000FC8  6EDA               	movwf	fsr2h,c
 12158   000FCA  90D8               	bcf	status,0,c
 12159   000FCC  36D9               	rlcf	fsr2l,f,c
 12160   000FCE  36DA               	rlcf	fsr2h,f,c
 12161   000FD0  504F               	movf	??_Colour_decider^0,w,c
 12162   000FD2  26D9               	addwf	fsr2l,f,c
 12163   000FD4  5050               	movf	(??_Colour_decider+1)^0,w,c
 12164   000FD6  22DA               	addwfc	fsr2h,f,c
 12165   000FD8  CFDE F02A          	movff	postinc2,___flge@ff1
 12166   000FDC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12167   000FE0  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12168   000FE4  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12169   000FE8  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12170   000FEC  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12171   000FF0  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12172   000FF4  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12173   000FF8  EC09  F026         	call	___flge	;wreg free
 12174   000FFC  B0D8               	btfsc	status,0,c
 12175   000FFE  EF03  F008         	goto	u5231
 12176   001002  EF05  F008         	goto	u5230
 12177   001006                     u5231:
 12178   001006  EF1E  F008         	goto	l5381
 12179   00100A                     u5230:
 12180   00100A  0E66               	movlw	low Colour_decider@RGB_col
 12181   00100C  6E4F               	movwf	??_Colour_decider^0,c
 12182   00100E  0E00               	movlw	high Colour_decider@RGB_col
 12183   001010  6E50               	movwf	(??_Colour_decider+1)^0,c
 12184   001012  90D8               	bcf	status,0,c
 12185   001014  0100               	movlb	0	; () banked
 12186   001016  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12187   001018  6ED9               	movwf	fsr2l,c
 12188   00101A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12189   00101C  6EDA               	movwf	fsr2h,c
 12190   00101E  90D8               	bcf	status,0,c
 12191   001020  36D9               	rlcf	fsr2l,f,c
 12192   001022  36DA               	rlcf	fsr2h,f,c
 12193   001024  504F               	movf	??_Colour_decider^0,w,c
 12194   001026  26D9               	addwf	fsr2l,f,c
 12195   001028  5050               	movf	(??_Colour_decider+1)^0,w,c
 12196   00102A  22DA               	addwfc	fsr2h,f,c
 12197   00102C  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12198   001030  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12199   001034  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12200   001038  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12201   00103C                     l5381:
 12202                           
 12203                           ;color.c: 141:     }
 12204   00103C  0100               	movlb	0	; () banked
 12205   00103E  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12206   001040  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12207   001042                     
 12208                           ; BSR set to: 0
 12209   001042  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12210   001044  EF2D  F008         	goto	u5241
 12211   001048  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12212   00104A  E109               	bnz	u5240
 12213   00104C  0E03               	movlw	3
 12214   00104E  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12215   001050  A0D8               	btfss	status,0,c
 12216   001052  EF2D  F008         	goto	u5241
 12217   001056  EF2F  F008         	goto	u5240
 12218   00105A                     u5241:
 12219   00105A  EF95  F007         	goto	l5371
 12220   00105E                     u5240:
 12221   00105E                     
 12222                           ; BSR set to: 0
 12223                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12224   00105E  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12225   001062  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12226   001066  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12227   00106A  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12228   00106E  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12229   001072  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12230   001076  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12231   00107A  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12232   00107E  ECEC  F02E         	call	___flsub	;wreg free
 12233   001082  C02A  F032         	movff	?___flsub,___fleq@ff1
 12234   001086  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12235   00108A  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12236   00108E  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12237   001092  0E00               	movlw	0
 12238   001094  6E36               	movwf	___fleq@ff2^0,c
 12239   001096  0E00               	movlw	0
 12240   001098  6E37               	movwf	(___fleq@ff2+1)^0,c
 12241   00109A  0E00               	movlw	0
 12242   00109C  6E38               	movwf	(___fleq@ff2+2)^0,c
 12243   00109E  0E00               	movlw	0
 12244   0010A0  6E39               	movwf	(___fleq@ff2+3)^0,c
 12245   0010A2  EC7A  F028         	call	___fleq	;wreg free
 12246   0010A6  A0D8               	btfss	status,0,c
 12247   0010A8  EF58  F008         	goto	u5251
 12248   0010AC  EF5A  F008         	goto	u5250
 12249   0010B0                     u5251:
 12250   0010B0  EF60  F008         	goto	l5391
 12251   0010B4                     u5250:
 12252   0010B4                     l5387:
 12253   0010B4  0E00               	movlw	0
 12254   0010B6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12255   0010B8  0E00               	movlw	0
 12256   0010BA  6E4B               	movwf	?_Colour_decider^0,c
 12257   0010BC  EF96  F00C         	goto	l76
 12258   0010C0                     l5391:
 12259                           
 12260                           ;color.c: 146:     if (Cmax_i==0){
 12261   0010C0  0100               	movlb	0	; () banked
 12262   0010C2  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12263   0010C4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12264   0010C6  A4D8               	btfss	status,2,c
 12265   0010C8  EF68  F008         	goto	u5261
 12266   0010CC  EF6A  F008         	goto	u5260
 12267   0010D0                     u5261:
 12268   0010D0  EFDE  F008         	goto	l5399
 12269   0010D4                     u5260:
 12270   0010D4                     
 12271                           ; BSR set to: 0
 12272                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12273   0010D4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12274   0010D8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12275   0010DC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12276   0010E0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12277   0010E4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12278   0010E8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12279   0010EC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12280   0010F0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12281   0010F4  ECEC  F02E         	call	___flsub	;wreg free
 12282   0010F8  C02A  F036         	movff	?___flsub,___fldiv@a
 12283   0010FC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12284   001100  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12285   001104  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12286   001108  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12287   00110C  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12288   001110  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12289   001114  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12290   001118  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12291   00111C  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12292   001120  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12293   001124  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12294   001128  ECEC  F02E         	call	___flsub	;wreg free
 12295   00112C  C02A  F032         	movff	?___flsub,___fldiv@b
 12296   001130  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12297   001134  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12298   001138  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12299   00113C  EC0B  F019         	call	___fldiv	;wreg free
 12300   001140  C032  F011         	movff	?___fldiv,___flmul@b
 12301   001144  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12302   001148  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12303   00114C  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12304   001150  0E00               	movlw	0
 12305   001152  6E15               	movwf	___flmul@a^0,c
 12306   001154  0E00               	movlw	0
 12307   001156  6E16               	movwf	(___flmul@a+1)^0,c
 12308   001158  0E70               	movlw	112
 12309   00115A  6E17               	movwf	(___flmul@a+2)^0,c
 12310   00115C  0E42               	movlw	66
 12311   00115E  6E18               	movwf	(___flmul@a+3)^0,c
 12312   001160  ECF6  F016         	call	___flmul	;wreg free
 12313   001164  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12314   001168  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12315   00116C  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12316   001170  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12317   001174                     
 12318                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12319   001174  0100               	movlb	0	; () banked
 12320   001176  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12321   001178  EFC2  F008         	goto	u5270
 12322   00117C  EFC0  F008         	goto	u5271
 12323   001180                     u5271:
 12324   001180  EFBD  F009         	goto	l5409
 12325   001184                     u5270:
 12326   001184                     
 12327                           ; BSR set to: 0
 12328   001184  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12329   001188  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12330   00118C  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12331   001190  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12332   001194  0E00               	movlw	0
 12333   001196  6E05               	movwf	___fladd@a^0,c
 12334   001198  0E00               	movlw	0
 12335   00119A  6E06               	movwf	(___fladd@a+1)^0,c
 12336   00119C  0EB4               	movlw	180
 12337   00119E  6E07               	movwf	(___fladd@a+2)^0,c
 12338   0011A0  0E43               	movlw	67
 12339   0011A2  6E08               	movwf	(___fladd@a+3)^0,c
 12340   0011A4  EC96  F014         	call	___fladd	;wreg free
 12341   0011A8  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12342   0011AC  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12343   0011B0  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12344   0011B4  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12345   0011B8  EFBD  F009         	goto	l5409
 12346   0011BC                     l5399:
 12347                           
 12348                           ; BSR set to: 0
 12349   0011BC  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12350   0011BE  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12351   0011C0  A4D8               	btfss	status,2,c
 12352   0011C2  EFE5  F008         	goto	u5281
 12353   0011C6  EFE7  F008         	goto	u5280
 12354   0011CA                     u5281:
 12355   0011CA  EF53  F009         	goto	l5405
 12356   0011CE                     u5280:
 12357   0011CE                     
 12358                           ; BSR set to: 0
 12359                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12360   0011CE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12361   0011D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12362   0011D6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12363   0011DA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12364   0011DE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12365   0011E2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12366   0011E6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12367   0011EA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12368   0011EE  ECEC  F02E         	call	___flsub	;wreg free
 12369   0011F2  C02A  F036         	movff	?___flsub,___fldiv@a
 12370   0011F6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12371   0011FA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12372   0011FE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12373   001202  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12374   001206  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12375   00120A  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12376   00120E  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12377   001212  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12378   001216  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12379   00121A  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12380   00121E  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12381   001222  ECEC  F02E         	call	___flsub	;wreg free
 12382   001226  C02A  F032         	movff	?___flsub,___fldiv@b
 12383   00122A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12384   00122E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12385   001232  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12386   001236  EC0B  F019         	call	___fldiv	;wreg free
 12387   00123A  C032  F060         	movff	?___fldiv,_Colour_decider$3144
 12388   00123E  C033  F061         	movff	?___fldiv+1,_Colour_decider$3144+1
 12389   001242  C034  F062         	movff	?___fldiv+2,_Colour_decider$3144+2
 12390   001246  C035  F063         	movff	?___fldiv+3,_Colour_decider$3144+3
 12391   00124A                     
 12392                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12393   00124A  0E00               	movlw	0
 12394   00124C  6E05               	movwf	___fladd@a^0,c
 12395   00124E  0E00               	movlw	0
 12396   001250  6E06               	movwf	(___fladd@a+1)^0,c
 12397   001252  0E00               	movlw	0
 12398   001254  6E07               	movwf	(___fladd@a+2)^0,c
 12399   001256  0E40               	movlw	64
 12400   001258  6E08               	movwf	(___fladd@a+3)^0,c
 12401   00125A  C060  F001         	movff	_Colour_decider$3144,___fladd@b
 12402   00125E  C061  F002         	movff	_Colour_decider$3144+1,___fladd@b+1
 12403   001262  C062  F003         	movff	_Colour_decider$3144+2,___fladd@b+2
 12404   001266  C063  F004         	movff	_Colour_decider$3144+3,___fladd@b+3
 12405   00126A  EC96  F014         	call	___fladd	;wreg free
 12406   00126E  C001  F011         	movff	?___fladd,___flmul@b
 12407   001272  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12408   001276  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12409   00127A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12410   00127E  0E00               	movlw	0
 12411   001280  6E15               	movwf	___flmul@a^0,c
 12412   001282  0E00               	movlw	0
 12413   001284  6E16               	movwf	(___flmul@a+1)^0,c
 12414   001286  0E70               	movlw	112
 12415   001288  6E17               	movwf	(___flmul@a+2)^0,c
 12416   00128A  0E42               	movlw	66
 12417   00128C  6E18               	movwf	(___flmul@a+3)^0,c
 12418   00128E  ECF6  F016         	call	___flmul	;wreg free
 12419   001292  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12420   001296  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12421   00129A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12422   00129E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12423                           
 12424                           ;color.c: 155:     }
 12425   0012A2  EFBD  F009         	goto	l5409
 12426   0012A6                     l5405:
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12430   0012A6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12431   0012AA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12432   0012AE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12433   0012B2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12434   0012B6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12435   0012BA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12436   0012BE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12437   0012C2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12438   0012C6  ECEC  F02E         	call	___flsub	;wreg free
 12439   0012CA  C02A  F036         	movff	?___flsub,___fldiv@a
 12440   0012CE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12441   0012D2  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12442   0012D6  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12443   0012DA  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12444   0012DE  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12445   0012E2  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12446   0012E6  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12447   0012EA  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12448   0012EE  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12449   0012F2  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12450   0012F6  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12451   0012FA  ECEC  F02E         	call	___flsub	;wreg free
 12452   0012FE  C02A  F032         	movff	?___flsub,___fldiv@b
 12453   001302  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12454   001306  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12455   00130A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12456   00130E  EC0B  F019         	call	___fldiv	;wreg free
 12457   001312  C032  F060         	movff	?___fldiv,_Colour_decider$3144
 12458   001316  C033  F061         	movff	?___fldiv+1,_Colour_decider$3144+1
 12459   00131A  C034  F062         	movff	?___fldiv+2,_Colour_decider$3144+2
 12460   00131E  C035  F063         	movff	?___fldiv+3,_Colour_decider$3144+3
 12461   001322                     
 12462                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12463   001322  0E00               	movlw	0
 12464   001324  6E05               	movwf	___fladd@a^0,c
 12465   001326  0E00               	movlw	0
 12466   001328  6E06               	movwf	(___fladd@a+1)^0,c
 12467   00132A  0E80               	movlw	128
 12468   00132C  6E07               	movwf	(___fladd@a+2)^0,c
 12469   00132E  0E40               	movlw	64
 12470   001330  6E08               	movwf	(___fladd@a+3)^0,c
 12471   001332  C060  F001         	movff	_Colour_decider$3144,___fladd@b
 12472   001336  C061  F002         	movff	_Colour_decider$3144+1,___fladd@b+1
 12473   00133A  C062  F003         	movff	_Colour_decider$3144+2,___fladd@b+2
 12474   00133E  C063  F004         	movff	_Colour_decider$3144+3,___fladd@b+3
 12475   001342  EC96  F014         	call	___fladd	;wreg free
 12476   001346  C001  F011         	movff	?___fladd,___flmul@b
 12477   00134A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12478   00134E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12479   001352  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12480   001356  0E00               	movlw	0
 12481   001358  6E15               	movwf	___flmul@a^0,c
 12482   00135A  0E00               	movlw	0
 12483   00135C  6E16               	movwf	(___flmul@a+1)^0,c
 12484   00135E  0E70               	movlw	112
 12485   001360  6E17               	movwf	(___flmul@a+2)^0,c
 12486   001362  0E42               	movlw	66
 12487   001364  6E18               	movwf	(___flmul@a+3)^0,c
 12488   001366  ECF6  F016         	call	___flmul	;wreg free
 12489   00136A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12490   00136E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12491   001372  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12492   001376  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12493   00137A                     l5409:
 12494                           
 12495                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12496   00137A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12497   00137E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12498   001382  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12499   001386  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12500   00138A  0E00               	movlw	0
 12501   00138C  6E2E               	movwf	___flge@ff2^0,c
 12502   00138E  0E00               	movlw	0
 12503   001390  6E2F               	movwf	(___flge@ff2+1)^0,c
 12504   001392  0EA5               	movlw	165
 12505   001394  6E30               	movwf	(___flge@ff2+2)^0,c
 12506   001396  0E43               	movlw	67
 12507   001398  6E31               	movwf	(___flge@ff2+3)^0,c
 12508   00139A  EC09  F026         	call	___flge	;wreg free
 12509   00139E  A0D8               	btfss	status,0,c
 12510   0013A0  EFD4  F009         	goto	u5291
 12511   0013A4  EFD6  F009         	goto	u5290
 12512   0013A8                     u5291:
 12513   0013A8  EFF5  F009         	goto	l5419
 12514   0013AC                     u5290:
 12515   0013AC  0E00               	movlw	0
 12516   0013AE  6E2A               	movwf	___flge@ff1^0,c
 12517   0013B0  0E00               	movlw	0
 12518   0013B2  6E2B               	movwf	(___flge@ff1+1)^0,c
 12519   0013B4  0EB4               	movlw	180
 12520   0013B6  6E2C               	movwf	(___flge@ff1+2)^0,c
 12521   0013B8  0E43               	movlw	67
 12522   0013BA  6E2D               	movwf	(___flge@ff1+3)^0,c
 12523   0013BC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12524   0013C0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12525   0013C4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12526   0013C8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12527   0013CC  EC09  F026         	call	___flge	;wreg free
 12528   0013D0  A0D8               	btfss	status,0,c
 12529   0013D2  EFED  F009         	goto	u5301
 12530   0013D6  EFEF  F009         	goto	u5300
 12531   0013DA                     u5301:
 12532   0013DA  EFF5  F009         	goto	l5419
 12533   0013DE                     u5300:
 12534   0013DE                     
 12535                           ;color.c: 164:         return 1;
 12536   0013DE  0E00               	movlw	0
 12537   0013E0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12538   0013E2  0E01               	movlw	1
 12539   0013E4  6E4B               	movwf	?_Colour_decider^0,c
 12540   0013E6  EF96  F00C         	goto	l76
 12541   0013EA                     l5419:
 12542   0013EA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12543   0013EE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12544   0013F2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12545   0013F6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12546   0013FA  0E00               	movlw	0
 12547   0013FC  6E2E               	movwf	___flge@ff2^0,c
 12548   0013FE  0E00               	movlw	0
 12549   001400  6E2F               	movwf	(___flge@ff2+1)^0,c
 12550   001402  0EA0               	movlw	160
 12551   001404  6E30               	movwf	(___flge@ff2+2)^0,c
 12552   001406  0E40               	movlw	64
 12553   001408  6E31               	movwf	(___flge@ff2+3)^0,c
 12554   00140A  EC09  F026         	call	___flge	;wreg free
 12555   00140E  A0D8               	btfss	status,0,c
 12556   001410  EF0C  F00A         	goto	u5311
 12557   001414  EF0E  F00A         	goto	u5310
 12558   001418                     u5311:
 12559   001418  EF2D  F00A         	goto	l5429
 12560   00141C                     u5310:
 12561   00141C  0E00               	movlw	0
 12562   00141E  6E2A               	movwf	___flge@ff1^0,c
 12563   001420  0E00               	movlw	0
 12564   001422  6E2B               	movwf	(___flge@ff1+1)^0,c
 12565   001424  0E40               	movlw	64
 12566   001426  6E2C               	movwf	(___flge@ff1+2)^0,c
 12567   001428  0E41               	movlw	65
 12568   00142A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12569   00142C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12570   001430  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12571   001434  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12572   001438  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12573   00143C  EC09  F026         	call	___flge	;wreg free
 12574   001440  A0D8               	btfss	status,0,c
 12575   001442  EF25  F00A         	goto	u5321
 12576   001446  EF27  F00A         	goto	u5320
 12577   00144A                     u5321:
 12578   00144A  EF2D  F00A         	goto	l5429
 12579   00144E                     u5320:
 12580   00144E                     
 12581                           ;color.c: 168:         return 2;
 12582   00144E  0E00               	movlw	0
 12583   001450  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12584   001452  0E02               	movlw	2
 12585   001454  6E4B               	movwf	?_Colour_decider^0,c
 12586   001456  EF96  F00C         	goto	l76
 12587   00145A                     l5429:
 12588   00145A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12589   00145E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12590   001462  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12591   001466  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12592   00146A  0E00               	movlw	0
 12593   00146C  6E2E               	movwf	___flge@ff2^0,c
 12594   00146E  0E00               	movlw	0
 12595   001470  6E2F               	movwf	(___flge@ff2+1)^0,c
 12596   001472  0EA0               	movlw	160
 12597   001474  6E30               	movwf	(___flge@ff2+2)^0,c
 12598   001476  0E41               	movlw	65
 12599   001478  6E31               	movwf	(___flge@ff2+3)^0,c
 12600   00147A  EC09  F026         	call	___flge	;wreg free
 12601   00147E  A0D8               	btfss	status,0,c
 12602   001480  EF44  F00A         	goto	u5331
 12603   001484  EF46  F00A         	goto	u5330
 12604   001488                     u5331:
 12605   001488  EFC6  F00A         	goto	l5455
 12606   00148C                     u5330:
 12607   00148C  0E00               	movlw	0
 12608   00148E  6E2A               	movwf	___flge@ff1^0,c
 12609   001490  0E00               	movlw	0
 12610   001492  6E2B               	movwf	(___flge@ff1+1)^0,c
 12611   001494  0EE8               	movlw	232
 12612   001496  6E2C               	movwf	(___flge@ff1+2)^0,c
 12613   001498  0E41               	movlw	65
 12614   00149A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12615   00149C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12616   0014A0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12617   0014A4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12618   0014A8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12619   0014AC  EC09  F026         	call	___flge	;wreg free
 12620   0014B0  A0D8               	btfss	status,0,c
 12621   0014B2  EF5D  F00A         	goto	u5341
 12622   0014B6  EF5F  F00A         	goto	u5340
 12623   0014BA                     u5341:
 12624   0014BA  EFC6  F00A         	goto	l5455
 12625   0014BE                     u5340:
 12626   0014BE                     
 12627                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12628   0014BE  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12629   0014C2  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12630   0014C6  CFDE F02A          	movff	postinc2,___flge@ff1
 12631   0014CA  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12632   0014CE  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12633   0014D2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12634   0014D6  0ECD               	movlw	205
 12635   0014D8  6E2E               	movwf	___flge@ff2^0,c
 12636   0014DA  0ECC               	movlw	204
 12637   0014DC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12638   0014DE  0E4C               	movlw	76
 12639   0014E0  6E30               	movwf	(___flge@ff2+2)^0,c
 12640   0014E2  0E3E               	movlw	62
 12641   0014E4  6E31               	movwf	(___flge@ff2+3)^0,c
 12642   0014E6  EC09  F026         	call	___flge	;wreg free
 12643   0014EA  A0D8               	btfss	status,0,c
 12644   0014EC  EF7A  F00A         	goto	u5351
 12645   0014F0  EF7C  F00A         	goto	u5350
 12646   0014F4                     u5351:
 12647   0014F4  EF9B  F00A         	goto	l5443
 12648   0014F8                     u5350:
 12649   0014F8  0E00               	movlw	0
 12650   0014FA  6E2A               	movwf	___flge@ff1^0,c
 12651   0014FC  0E00               	movlw	0
 12652   0014FE  6E2B               	movwf	(___flge@ff1+1)^0,c
 12653   001500  0E80               	movlw	128
 12654   001502  6E2C               	movwf	(___flge@ff1+2)^0,c
 12655   001504  0E3E               	movlw	62
 12656   001506  6E2D               	movwf	(___flge@ff1+3)^0,c
 12657   001508  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12658   00150C  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12659   001510  CFDE F02E          	movff	postinc2,___flge@ff2
 12660   001514  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12661   001518  CFDE F030          	movff	postinc2,___flge@ff2+2
 12662   00151C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12663   001520  EC09  F026         	call	___flge	;wreg free
 12664   001524  A0D8               	btfss	status,0,c
 12665   001526  EF97  F00A         	goto	u5361
 12666   00152A  EF99  F00A         	goto	u5360
 12667   00152E                     u5361:
 12668   00152E  EF9B  F00A         	goto	l5443
 12669   001532                     u5360:
 12670   001532  EF5A  F008         	goto	l5387
 12671   001536                     l5443:
 12672   001536  EE20 F008          	lfsr	2,8
 12673   00153A  504D               	movf	Colour_decider@rel^0,w,c
 12674   00153C  26D9               	addwf	fsr2l,f,c
 12675   00153E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12676   001540  22DA               	addwfc	fsr2h,f,c
 12677   001542  CFDE F02A          	movff	postinc2,___flge@ff1
 12678   001546  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12679   00154A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12680   00154E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12681   001552  0E29               	movlw	41
 12682   001554  6E2E               	movwf	___flge@ff2^0,c
 12683   001556  0E5C               	movlw	92
 12684   001558  6E2F               	movwf	(___flge@ff2+1)^0,c
 12685   00155A  0E0F               	movlw	15
 12686   00155C  6E30               	movwf	(___flge@ff2+2)^0,c
 12687   00155E  0E3E               	movlw	62
 12688   001560  6E31               	movwf	(___flge@ff2+3)^0,c
 12689   001562  EC09  F026         	call	___flge	;wreg free
 12690   001566  A0D8               	btfss	status,0,c
 12691   001568  EFB8  F00A         	goto	u5371
 12692   00156C  EFBA  F00A         	goto	u5370
 12693   001570                     u5371:
 12694   001570  EFC0  F00A         	goto	l5451
 12695   001574                     u5370:
 12696   001574                     l5445:
 12697                           
 12698                           ;color.c: 179:             return 4;
 12699   001574  0E00               	movlw	0
 12700   001576  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12701   001578  0E04               	movlw	4
 12702   00157A  6E4B               	movwf	?_Colour_decider^0,c
 12703   00157C  EF96  F00C         	goto	l76
 12704   001580                     l5451:
 12705                           
 12706                           ;color.c: 182:             return 3;
 12707   001580  0E00               	movlw	0
 12708   001582  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12709   001584  0E03               	movlw	3
 12710   001586  6E4B               	movwf	?_Colour_decider^0,c
 12711   001588  EF96  F00C         	goto	l76
 12712   00158C                     l5455:
 12713   00158C  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12714   001590  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12715   001594  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12716   001598  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12717   00159C  0E00               	movlw	0
 12718   00159E  6E2E               	movwf	___flge@ff2^0,c
 12719   0015A0  0E00               	movlw	0
 12720   0015A2  6E2F               	movwf	(___flge@ff2+1)^0,c
 12721   0015A4  0E34               	movlw	52
 12722   0015A6  6E30               	movwf	(___flge@ff2+2)^0,c
 12723   0015A8  0E42               	movlw	66
 12724   0015AA  6E31               	movwf	(___flge@ff2+3)^0,c
 12725   0015AC  EC09  F026         	call	___flge	;wreg free
 12726   0015B0  A0D8               	btfss	status,0,c
 12727   0015B2  EFDD  F00A         	goto	u5381
 12728   0015B6  EFDF  F00A         	goto	u5380
 12729   0015BA                     u5381:
 12730   0015BA  EF44  F00B         	goto	l5479
 12731   0015BE                     u5380:
 12732   0015BE  0E00               	movlw	0
 12733   0015C0  6E2A               	movwf	___flge@ff1^0,c
 12734   0015C2  0E00               	movlw	0
 12735   0015C4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12736   0015C6  0EA0               	movlw	160
 12737   0015C8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12738   0015CA  0E42               	movlw	66
 12739   0015CC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12740   0015CE  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12741   0015D2  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12742   0015D6  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12743   0015DA  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12744   0015DE  EC09  F026         	call	___flge	;wreg free
 12745   0015E2  A0D8               	btfss	status,0,c
 12746   0015E4  EFF6  F00A         	goto	u5391
 12747   0015E8  EFF8  F00A         	goto	u5390
 12748   0015EC                     u5391:
 12749   0015EC  EF44  F00B         	goto	l5479
 12750   0015F0                     u5390:
 12751   0015F0                     
 12752                           ;color.c: 188:         if(0.15<=rel->B){
 12753   0015F0  EE20 F008          	lfsr	2,8
 12754   0015F4  504D               	movf	Colour_decider@rel^0,w,c
 12755   0015F6  26D9               	addwf	fsr2l,f,c
 12756   0015F8  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12757   0015FA  22DA               	addwfc	fsr2h,f,c
 12758   0015FC  CFDE F02A          	movff	postinc2,___flge@ff1
 12759   001600  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12760   001604  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12761   001608  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12762   00160C  0E9A               	movlw	154
 12763   00160E  6E2E               	movwf	___flge@ff2^0,c
 12764   001610  0E99               	movlw	153
 12765   001612  6E2F               	movwf	(___flge@ff2+1)^0,c
 12766   001614  0E19               	movlw	25
 12767   001616  6E30               	movwf	(___flge@ff2+2)^0,c
 12768   001618  0E3E               	movlw	62
 12769   00161A  6E31               	movwf	(___flge@ff2+3)^0,c
 12770   00161C  EC09  F026         	call	___flge	;wreg free
 12771   001620  A0D8               	btfss	status,0,c
 12772   001622  EF15  F00B         	goto	u5401
 12773   001626  EF17  F00B         	goto	u5400
 12774   00162A                     u5401:
 12775   00162A  EF19  F00B         	goto	l5467
 12776   00162E                     u5400:
 12777   00162E  EFBA  F00A         	goto	l5445
 12778   001632                     l5467:
 12779   001632  EE20 F008          	lfsr	2,8
 12780   001636  504D               	movf	Colour_decider@rel^0,w,c
 12781   001638  26D9               	addwf	fsr2l,f,c
 12782   00163A  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12783   00163C  22DA               	addwfc	fsr2h,f,c
 12784   00163E  CFDE F02A          	movff	postinc2,___flge@ff1
 12785   001642  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12786   001646  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12787   00164A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12788   00164E  0E8F               	movlw	143
 12789   001650  6E2E               	movwf	___flge@ff2^0,c
 12790   001652  0EC2               	movlw	194
 12791   001654  6E2F               	movwf	(___flge@ff2+1)^0,c
 12792   001656  0EF5               	movlw	245
 12793   001658  6E30               	movwf	(___flge@ff2+2)^0,c
 12794   00165A  0E3D               	movlw	61
 12795   00165C  6E31               	movwf	(___flge@ff2+3)^0,c
 12796   00165E  EC09  F026         	call	___flge	;wreg free
 12797   001662  A0D8               	btfss	status,0,c
 12798   001664  EF36  F00B         	goto	u5411
 12799   001668  EF38  F00B         	goto	u5410
 12800   00166C                     u5411:
 12801   00166C  EF3E  F00B         	goto	l5475
 12802   001670                     u5410:
 12803   001670                     l5469:
 12804                           
 12805                           ;color.c: 192:             return 6;
 12806   001670  0E00               	movlw	0
 12807   001672  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12808   001674  0E06               	movlw	6
 12809   001676  6E4B               	movwf	?_Colour_decider^0,c
 12810   001678  EF96  F00C         	goto	l76
 12811   00167C                     l5475:
 12812                           
 12813                           ;color.c: 195:             return 5;
 12814   00167C  0E00               	movlw	0
 12815   00167E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12816   001680  0E05               	movlw	5
 12817   001682  6E4B               	movwf	?_Colour_decider^0,c
 12818   001684  EF96  F00C         	goto	l76
 12819   001688                     l5479:
 12820   001688  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12821   00168C  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12822   001690  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12823   001694  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12824   001698  0E00               	movlw	0
 12825   00169A  6E2E               	movwf	___flge@ff2^0,c
 12826   00169C  0E00               	movlw	0
 12827   00169E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12828   0016A0  0EA2               	movlw	162
 12829   0016A2  6E30               	movwf	(___flge@ff2+2)^0,c
 12830   0016A4  0E42               	movlw	66
 12831   0016A6  6E31               	movwf	(___flge@ff2+3)^0,c
 12832   0016A8  EC09  F026         	call	___flge	;wreg free
 12833   0016AC  A0D8               	btfss	status,0,c
 12834   0016AE  EF5B  F00B         	goto	u5421
 12835   0016B2  EF5D  F00B         	goto	u5420
 12836   0016B6                     u5421:
 12837   0016B6  EF97  F00B         	goto	l5495
 12838   0016BA                     u5420:
 12839   0016BA  0E00               	movlw	0
 12840   0016BC  6E2A               	movwf	___flge@ff1^0,c
 12841   0016BE  0E00               	movlw	0
 12842   0016C0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12843   0016C2  0EE6               	movlw	230
 12844   0016C4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12845   0016C6  0E42               	movlw	66
 12846   0016C8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12847   0016CA  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12848   0016CE  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12849   0016D2  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12850   0016D6  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12851   0016DA  EC09  F026         	call	___flge	;wreg free
 12852   0016DE  A0D8               	btfss	status,0,c
 12853   0016E0  EF74  F00B         	goto	u5431
 12854   0016E4  EF76  F00B         	goto	u5430
 12855   0016E8                     u5431:
 12856   0016E8  EF97  F00B         	goto	l5495
 12857   0016EC                     u5430:
 12858   0016EC                     
 12859                           ;color.c: 201:         if(0.15<=rel->B){
 12860   0016EC  EE20 F008          	lfsr	2,8
 12861   0016F0  504D               	movf	Colour_decider@rel^0,w,c
 12862   0016F2  26D9               	addwf	fsr2l,f,c
 12863   0016F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12864   0016F6  22DA               	addwfc	fsr2h,f,c
 12865   0016F8  CFDE F02A          	movff	postinc2,___flge@ff1
 12866   0016FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12867   001700  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12868   001704  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12869   001708  0E9A               	movlw	154
 12870   00170A  6E2E               	movwf	___flge@ff2^0,c
 12871   00170C  0E99               	movlw	153
 12872   00170E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12873   001710  0E19               	movlw	25
 12874   001712  6E30               	movwf	(___flge@ff2+2)^0,c
 12875   001714  0E3E               	movlw	62
 12876   001716  6E31               	movwf	(___flge@ff2+3)^0,c
 12877   001718  EC09  F026         	call	___flge	;wreg free
 12878   00171C  A0D8               	btfss	status,0,c
 12879   00171E  EF93  F00B         	goto	u5441
 12880   001722  EF95  F00B         	goto	u5440
 12881   001726                     u5441:
 12882   001726  EF38  F00B         	goto	l5469
 12883   00172A                     u5440:
 12884   00172A  EFBA  F00A         	goto	l5445
 12885   00172E                     l5495:
 12886   00172E  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12887   001732  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12888   001736  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12889   00173A  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12890   00173E  0E00               	movlw	0
 12891   001740  6E2E               	movwf	___flge@ff2^0,c
 12892   001742  0E00               	movlw	0
 12893   001744  6E2F               	movwf	(___flge@ff2+1)^0,c
 12894   001746  0EF0               	movlw	240
 12895   001748  6E30               	movwf	(___flge@ff2+2)^0,c
 12896   00174A  0E41               	movlw	65
 12897   00174C  6E31               	movwf	(___flge@ff2+3)^0,c
 12898   00174E  EC09  F026         	call	___flge	;wreg free
 12899   001752  A0D8               	btfss	status,0,c
 12900   001754  EFAE  F00B         	goto	u5451
 12901   001758  EFB0  F00B         	goto	u5450
 12902   00175C                     u5451:
 12903   00175C  EFC9  F00B         	goto	l5499
 12904   001760                     u5450:
 12905   001760  0E00               	movlw	0
 12906   001762  6E2A               	movwf	___flge@ff1^0,c
 12907   001764  0E00               	movlw	0
 12908   001766  6E2B               	movwf	(___flge@ff1+1)^0,c
 12909   001768  0E68               	movlw	104
 12910   00176A  6E2C               	movwf	(___flge@ff1+2)^0,c
 12911   00176C  0E42               	movlw	66
 12912   00176E  6E2D               	movwf	(___flge@ff1+3)^0,c
 12913   001770  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12914   001774  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12915   001778  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12916   00177C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12917   001780  EC09  F026         	call	___flge	;wreg free
 12918   001784  B0D8               	btfsc	status,0,c
 12919   001786  EFC7  F00B         	goto	u5461
 12920   00178A  EFC9  F00B         	goto	u5460
 12921   00178E                     u5461:
 12922   00178E  EFBA  F00A         	goto	l5445
 12923   001792                     u5460:
 12924   001792                     l5499:
 12925   001792  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12926   001796  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12927   00179A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12928   00179E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12929   0017A2  0E00               	movlw	0
 12930   0017A4  6E2E               	movwf	___flge@ff2^0,c
 12931   0017A6  0E00               	movlw	0
 12932   0017A8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12933   0017AA  0EF0               	movlw	240
 12934   0017AC  6E30               	movwf	(___flge@ff2+2)^0,c
 12935   0017AE  0E42               	movlw	66
 12936   0017B0  6E31               	movwf	(___flge@ff2+3)^0,c
 12937   0017B2  EC09  F026         	call	___flge	;wreg free
 12938   0017B6  A0D8               	btfss	status,0,c
 12939   0017B8  EFE0  F00B         	goto	u5471
 12940   0017BC  EFE2  F00B         	goto	u5470
 12941   0017C0                     u5471:
 12942   0017C0  EFFD  F00B         	goto	l5509
 12943   0017C4                     u5470:
 12944   0017C4  0E00               	movlw	0
 12945   0017C6  6E2A               	movwf	___flge@ff1^0,c
 12946   0017C8  0E00               	movlw	0
 12947   0017CA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12948   0017CC  0E5C               	movlw	92
 12949   0017CE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12950   0017D0  0E43               	movlw	67
 12951   0017D2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12952   0017D4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12953   0017D8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12954   0017DC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12955   0017E0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12956   0017E4  EC09  F026         	call	___flge	;wreg free
 12957   0017E8  A0D8               	btfss	status,0,c
 12958   0017EA  EFF9  F00B         	goto	u5481
 12959   0017EE  EFFB  F00B         	goto	u5480
 12960   0017F2                     u5481:
 12961   0017F2  EFFD  F00B         	goto	l5509
 12962   0017F6                     u5480:
 12963   0017F6  EFBA  F00A         	goto	l5445
 12964   0017FA                     l5509:
 12965   0017FA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12966   0017FE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12967   001802  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12968   001806  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12969   00180A  0E00               	movlw	0
 12970   00180C  6E2E               	movwf	___flge@ff2^0,c
 12971   00180E  0E00               	movlw	0
 12972   001810  6E2F               	movwf	(___flge@ff2+1)^0,c
 12973   001812  0E60               	movlw	96
 12974   001814  6E30               	movwf	(___flge@ff2+2)^0,c
 12975   001816  0E41               	movlw	65
 12976   001818  6E31               	movwf	(___flge@ff2+3)^0,c
 12977   00181A  EC09  F026         	call	___flge	;wreg free
 12978   00181E  A0D8               	btfss	status,0,c
 12979   001820  EF14  F00C         	goto	u5491
 12980   001824  EF16  F00C         	goto	u5490
 12981   001828                     u5491:
 12982   001828  EF92  F00C         	goto	l5535
 12983   00182C                     u5490:
 12984   00182C  0E00               	movlw	0
 12985   00182E  6E2A               	movwf	___flge@ff1^0,c
 12986   001830  0E00               	movlw	0
 12987   001832  6E2B               	movwf	(___flge@ff1+1)^0,c
 12988   001834  0E98               	movlw	152
 12989   001836  6E2C               	movwf	(___flge@ff1+2)^0,c
 12990   001838  0E41               	movlw	65
 12991   00183A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12992   00183C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12993   001840  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12994   001844  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12995   001848  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12996   00184C  EC09  F026         	call	___flge	;wreg free
 12997   001850  A0D8               	btfss	status,0,c
 12998   001852  EF2D  F00C         	goto	u5501
 12999   001856  EF2F  F00C         	goto	u5500
 13000   00185A                     u5501:
 13001   00185A  EF92  F00C         	goto	l5535
 13002   00185E                     u5500:
 13003   00185E                     
 13004                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 13005   00185E  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13006   001862  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13007   001866  CFDE F02A          	movff	postinc2,___flge@ff1
 13008   00186A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13009   00186E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13010   001872  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13011   001876  0ECD               	movlw	205
 13012   001878  6E2E               	movwf	___flge@ff2^0,c
 13013   00187A  0ECC               	movlw	204
 13014   00187C  6E2F               	movwf	(___flge@ff2+1)^0,c
 13015   00187E  0E4C               	movlw	76
 13016   001880  6E30               	movwf	(___flge@ff2+2)^0,c
 13017   001882  0E3E               	movlw	62
 13018   001884  6E31               	movwf	(___flge@ff2+3)^0,c
 13019   001886  EC09  F026         	call	___flge	;wreg free
 13020   00188A  A0D8               	btfss	status,0,c
 13021   00188C  EF4A  F00C         	goto	u5511
 13022   001890  EF4C  F00C         	goto	u5510
 13023   001894                     u5511:
 13024   001894  EF6B  F00C         	goto	l5523
 13025   001898                     u5510:
 13026   001898  0E1F               	movlw	31
 13027   00189A  6E2A               	movwf	___flge@ff1^0,c
 13028   00189C  0E85               	movlw	133
 13029   00189E  6E2B               	movwf	(___flge@ff1+1)^0,c
 13030   0018A0  0E6B               	movlw	107
 13031   0018A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 13032   0018A4  0E3E               	movlw	62
 13033   0018A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 13034   0018A8  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13035   0018AC  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13036   0018B0  CFDE F02E          	movff	postinc2,___flge@ff2
 13037   0018B4  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13038   0018B8  CFDE F030          	movff	postinc2,___flge@ff2+2
 13039   0018BC  CFDE F031          	movff	postinc2,___flge@ff2+3
 13040   0018C0  EC09  F026         	call	___flge	;wreg free
 13041   0018C4  A0D8               	btfss	status,0,c
 13042   0018C6  EF67  F00C         	goto	u5521
 13043   0018CA  EF69  F00C         	goto	u5520
 13044   0018CE                     u5521:
 13045   0018CE  EF6B  F00C         	goto	l5523
 13046   0018D2                     u5520:
 13047   0018D2  EF5A  F008         	goto	l5387
 13048   0018D6                     l5523:
 13049   0018D6  EE20 F008          	lfsr	2,8
 13050   0018DA  504D               	movf	Colour_decider@rel^0,w,c
 13051   0018DC  26D9               	addwf	fsr2l,f,c
 13052   0018DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13053   0018E0  22DA               	addwfc	fsr2h,f,c
 13054   0018E2  CFDE F02A          	movff	postinc2,___flge@ff1
 13055   0018E6  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13056   0018EA  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13057   0018EE  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13058   0018F2  0E9A               	movlw	154
 13059   0018F4  6E2E               	movwf	___flge@ff2^0,c
 13060   0018F6  0E99               	movlw	153
 13061   0018F8  6E2F               	movwf	(___flge@ff2+1)^0,c
 13062   0018FA  0E19               	movlw	25
 13063   0018FC  6E30               	movwf	(___flge@ff2+2)^0,c
 13064   0018FE  0E3E               	movlw	62
 13065   001900  6E31               	movwf	(___flge@ff2+3)^0,c
 13066   001902  EC09  F026         	call	___flge	;wreg free
 13067   001906  A0D8               	btfss	status,0,c
 13068   001908  EF88  F00C         	goto	u5531
 13069   00190C  EF8A  F00C         	goto	u5530
 13070   001910                     u5531:
 13071   001910  EF8C  F00C         	goto	l5531
 13072   001914                     u5530:
 13073   001914  EFBA  F00A         	goto	l5445
 13074   001918                     l5531:
 13075                           
 13076                           ;color.c: 223:             return 7;
 13077   001918  0E00               	movlw	0
 13078   00191A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13079   00191C  0E07               	movlw	7
 13080   00191E  6E4B               	movwf	?_Colour_decider^0,c
 13081   001920  EF96  F00C         	goto	l76
 13082   001924                     l5535:
 13083                           
 13084                           ;color.c: 227:         return 10;
 13085   001924  0E00               	movlw	0
 13086   001926  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13087   001928  0E0A               	movlw	10
 13088   00192A  6E4B               	movwf	?_Colour_decider^0,c
 13089   00192C                     l76:
 13090   00192C  0012               	return		;funcret
 13091   00192E                     __end_of_Colour_decider:
 13092                           	callstack 0
 13093                           
 13094 ;; *************** function ___xxtofl *****************
 13095 ;; Defined at:
 13096 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;  sign            1    wreg     unsigned char 
 13099 ;;  val             4    0[COMRAM] long 
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;  sign            1    8[COMRAM] unsigned char 
 13102 ;;  arg             4   10[COMRAM] unsigned long 
 13103 ;;  exp             1    9[COMRAM] unsigned char 
 13104 ;; Return value:  Size  Location     Type
 13105 ;;                  4    0[COMRAM] unsigned char 
 13106 ;; Registers used:
 13107 ;;		wreg, status,2, status,0
 13108 ;; Tracked objects:
 13109 ;;		On entry : 0/0
 13110 ;;		On exit  : 0/0
 13111 ;;		Unchanged: 0/0
 13112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13114 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13115 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13116 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13117 ;;Total ram usage:       14 bytes
 13118 ;; Hardware stack levels used: 1
 13119 ;; This function calls:
 13120 ;;		Nothing
 13121 ;; This function is called by:
 13122 ;;		_colour_rel
 13123 ;;		_Colour_decider
 13124 ;;		_reverseOneBlock
 13125 ;;		_ForwardOneBlock
 13126 ;;		_Forwardhalfblock
 13127 ;;		_Backhalfblock
 13128 ;; This function uses a non-reentrant model
 13129 ;;
 13130                           
 13131                           	psect	text72
 13132   004500                     __ptext72:
 13133                           	callstack 0
 13134   004500                     ___xxtofl:
 13135                           	callstack 29
 13136                           
 13137                           ;incstack = 0
 13138                           ;___xxtofl@sign stored from wreg
 13139   004500  6E09               	movwf	___xxtofl@sign^0,c
 13140   004502  5009               	movf	___xxtofl@sign^0,w,c
 13141   004504  B4D8               	btfsc	status,2,c
 13142   004506  EF87  F022         	goto	u5101
 13143   00450A  EF89  F022         	goto	u5100
 13144   00450E                     u5101:
 13145   00450E  EFAB  F022         	goto	l1349
 13146   004512                     u5100:
 13147   004512  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13148   004514  EF90  F022         	goto	u5110
 13149   004518  EF8E  F022         	goto	u5111
 13150   00451C                     u5111:
 13151   00451C  EFAB  F022         	goto	l1349
 13152   004520                     u5110:
 13153   004520  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13154   004524  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13155   004528  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13156   00452C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13157   004530  1E05               	comf	??___xxtofl^0,f,c
 13158   004532  1E06               	comf	(??___xxtofl+1)^0,f,c
 13159   004534  1E07               	comf	(??___xxtofl+2)^0,f,c
 13160   004536  1E08               	comf	(??___xxtofl+3)^0,f,c
 13161   004538  2A05               	incf	??___xxtofl^0,f,c
 13162   00453A  0E00               	movlw	0
 13163   00453C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13164   00453E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13165   004540  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13166   004542  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13167   004546  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13168   00454A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13169   00454E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13170   004552  EFB3  F022         	goto	l5257
 13171   004556                     l1349:
 13172   004556  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13173   00455A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13174   00455E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13175   004562  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13176   004566                     l5257:
 13177   004566  5001               	movf	___xxtofl@val^0,w,c
 13178   004568  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13179   00456A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13180   00456C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13181   00456E  A4D8               	btfss	status,2,c
 13182   004570  EFBC  F022         	goto	u5121
 13183   004574  EFBE  F022         	goto	u5120
 13184   004578                     u5121:
 13185   004578  EFC8  F022         	goto	l5263
 13186   00457C                     u5120:
 13187   00457C  0E00               	movlw	0
 13188   00457E  6E01               	movwf	?___xxtofl^0,c
 13189   004580  0E00               	movlw	0
 13190   004582  6E02               	movwf	(?___xxtofl+1)^0,c
 13191   004584  0E00               	movlw	0
 13192   004586  6E03               	movwf	(?___xxtofl+2)^0,c
 13193   004588  0E00               	movlw	0
 13194   00458A  6E04               	movwf	(?___xxtofl+3)^0,c
 13195   00458C  EF59  F023         	goto	l1352
 13196   004590                     l5263:
 13197   004590  0E96               	movlw	150
 13198   004592  6E0A               	movwf	___xxtofl@exp^0,c
 13199   004594  EFD2  F022         	goto	l5267
 13200   004598                     l5265:
 13201   004598  2A0A               	incf	___xxtofl@exp^0,f,c
 13202   00459A  90D8               	bcf	status,0,c
 13203   00459C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13204   00459E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13205   0045A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13206   0045A2  320B               	rrcf	___xxtofl@arg^0,f,c
 13207   0045A4                     l5267:
 13208   0045A4  0E00               	movlw	0
 13209   0045A6  140B               	andwf	___xxtofl@arg^0,w,c
 13210   0045A8  6E05               	movwf	??___xxtofl^0,c
 13211   0045AA  0E00               	movlw	0
 13212   0045AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13213   0045AE  6E06               	movwf	(??___xxtofl+1)^0,c
 13214   0045B0  0E00               	movlw	0
 13215   0045B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13216   0045B4  6E07               	movwf	(??___xxtofl+2)^0,c
 13217   0045B6  0EFE               	movlw	254
 13218   0045B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13219   0045BA  6E08               	movwf	(??___xxtofl+3)^0,c
 13220   0045BC  5005               	movf	??___xxtofl^0,w,c
 13221   0045BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13222   0045C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13223   0045C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13224   0045C4  A4D8               	btfss	status,2,c
 13225   0045C6  EFE7  F022         	goto	u5131
 13226   0045CA  EFE9  F022         	goto	u5130
 13227   0045CE                     u5131:
 13228   0045CE  EFCC  F022         	goto	l5265
 13229   0045D2                     u5130:
 13230   0045D2  EFF7  F022         	goto	l1356
 13231   0045D6                     l5269:
 13232   0045D6  2A0A               	incf	___xxtofl@exp^0,f,c
 13233   0045D8  0E01               	movlw	1
 13234   0045DA  260B               	addwf	___xxtofl@arg^0,f,c
 13235   0045DC  0E00               	movlw	0
 13236   0045DE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13237   0045E0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13238   0045E2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13239   0045E4  90D8               	bcf	status,0,c
 13240   0045E6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13241   0045E8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13242   0045EA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13243   0045EC  320B               	rrcf	___xxtofl@arg^0,f,c
 13244   0045EE                     l1356:
 13245   0045EE  0E00               	movlw	0
 13246   0045F0  140B               	andwf	___xxtofl@arg^0,w,c
 13247   0045F2  6E05               	movwf	??___xxtofl^0,c
 13248   0045F4  0E00               	movlw	0
 13249   0045F6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13250   0045F8  6E06               	movwf	(??___xxtofl+1)^0,c
 13251   0045FA  0E00               	movlw	0
 13252   0045FC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13253   0045FE  6E07               	movwf	(??___xxtofl+2)^0,c
 13254   004600  0EFF               	movlw	255
 13255   004602  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13256   004604  6E08               	movwf	(??___xxtofl+3)^0,c
 13257   004606  5005               	movf	??___xxtofl^0,w,c
 13258   004608  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13259   00460A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13260   00460C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13261   00460E  A4D8               	btfss	status,2,c
 13262   004610  EF0C  F023         	goto	u5141
 13263   004614  EF0E  F023         	goto	u5140
 13264   004618                     u5141:
 13265   004618  EFEB  F022         	goto	l5269
 13266   00461C                     u5140:
 13267   00461C  EF16  F023         	goto	l5277
 13268   004620                     l5275:
 13269   004620  060A               	decf	___xxtofl@exp^0,f,c
 13270   004622  90D8               	bcf	status,0,c
 13271   004624  360B               	rlcf	___xxtofl@arg^0,f,c
 13272   004626  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13273   004628  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13274   00462A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13275   00462C                     l5277:
 13276   00462C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13277   00462E  EF1B  F023         	goto	u5151
 13278   004632  EF1D  F023         	goto	u5150
 13279   004636                     u5151:
 13280   004636  EF25  F023         	goto	l1363
 13281   00463A                     u5150:
 13282   00463A  0E02               	movlw	2
 13283   00463C  600A               	cpfslt	___xxtofl@exp^0,c
 13284   00463E  EF23  F023         	goto	u5161
 13285   004642  EF25  F023         	goto	u5160
 13286   004646                     u5161:
 13287   004646  EF10  F023         	goto	l5275
 13288   00464A                     u5160:
 13289   00464A                     l1363:
 13290   00464A  B00A               	btfsc	___xxtofl@exp^0,0,c
 13291   00464C  EF2A  F023         	goto	u5171
 13292   004650  EF2C  F023         	goto	u5170
 13293   004654                     u5171:
 13294   004654  EF2D  F023         	goto	l5283
 13295   004658                     u5170:
 13296   004658  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13297   00465A                     l5283:
 13298   00465A  90D8               	bcf	status,0,c
 13299   00465C  320A               	rrcf	___xxtofl@exp^0,f,c
 13300   00465E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13301   004662  6A06               	clrf	(??___xxtofl+1)^0,c
 13302   004664  6A07               	clrf	(??___xxtofl+2)^0,c
 13303   004666  6A08               	clrf	(??___xxtofl+3)^0,c
 13304   004668  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13305   00466C  6A07               	clrf	(??___xxtofl+2)^0,c
 13306   00466E  6A06               	clrf	(??___xxtofl+1)^0,c
 13307   004670  6A05               	clrf	??___xxtofl^0,c
 13308   004672  5005               	movf	??___xxtofl^0,w,c
 13309   004674  120B               	iorwf	___xxtofl@arg^0,f,c
 13310   004676  5006               	movf	(??___xxtofl+1)^0,w,c
 13311   004678  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13312   00467A  5007               	movf	(??___xxtofl+2)^0,w,c
 13313   00467C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13314   00467E  5008               	movf	(??___xxtofl+3)^0,w,c
 13315   004680  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13316   004682  5009               	movf	___xxtofl@sign^0,w,c
 13317   004684  B4D8               	btfsc	status,2,c
 13318   004686  EF47  F023         	goto	u5181
 13319   00468A  EF49  F023         	goto	u5180
 13320   00468E                     u5181:
 13321   00468E  EF51  F023         	goto	l5293
 13322   004692                     u5180:
 13323   004692  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13324   004694  EF50  F023         	goto	u5190
 13325   004698  EF4E  F023         	goto	u5191
 13326   00469C                     u5191:
 13327   00469C  EF51  F023         	goto	l5293
 13328   0046A0                     u5190:
 13329   0046A0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13330   0046A2                     l5293:
 13331   0046A2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13332   0046A6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13333   0046AA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13334   0046AE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13335   0046B2                     l1352:
 13336   0046B2  0012               	return		;funcret
 13337   0046B4                     __end_of___xxtofl:
 13338                           	callstack 0
 13339                           
 13340 ;; *************** function ___flsub *****************
 13341 ;; Defined at:
 13342 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;  b               4   41[COMRAM] unsigned char 
 13345 ;;  a               4   45[COMRAM] unsigned char 
 13346 ;; Auto vars:     Size  Location     Type
 13347 ;;		None
 13348 ;; Return value:  Size  Location     Type
 13349 ;;                  4   41[COMRAM] unsigned char 
 13350 ;; Registers used:
 13351 ;;		wreg, status,2, status,0, cstack
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13357 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13360 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13361 ;;Total ram usage:        8 bytes
 13362 ;; Hardware stack levels used: 1
 13363 ;; Hardware stack levels required when called: 1
 13364 ;; This function calls:
 13365 ;;		___fladd
 13366 ;; This function is called by:
 13367 ;;		_Colour_decider
 13368 ;;		_efgtoa
 13369 ;; This function uses a non-reentrant model
 13370 ;;
 13371                           
 13372                           	psect	text73
 13373   005DD8                     __ptext73:
 13374                           	callstack 0
 13375   005DD8                     ___flsub:
 13376                           	callstack 25
 13377   005DD8  0E00               	movlw	0
 13378   005DDA  1A2E               	xorwf	___flsub@a^0,f,c
 13379   005DDC  0E00               	movlw	0
 13380   005DDE  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13381   005DE0  0E00               	movlw	0
 13382   005DE2  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13383   005DE4  0E80               	movlw	128
 13384   005DE6  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13385   005DE8  C02A  F001         	movff	___flsub@b,___fladd@b
 13386   005DEC  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13387   005DF0  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13388   005DF4  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13389   005DF8  C02E  F005         	movff	___flsub@a,___fladd@a
 13390   005DFC  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13391   005E00  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13392   005E04  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13393   005E08  EC96  F014         	call	___fladd	;wreg free
 13394   005E0C  C001  F02A         	movff	?___fladd,?___flsub
 13395   005E10  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13396   005E14  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13397   005E18  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13398   005E1C  0012               	return		;funcret
 13399   005E1E                     __end_of___flsub:
 13400                           	callstack 0
 13401                           
 13402 ;; *************** function ___fladd *****************
 13403 ;; Defined at:
 13404 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;  b               4    0[COMRAM] unsigned char 
 13407 ;;  a               4    4[COMRAM] unsigned char 
 13408 ;; Auto vars:     Size  Location     Type
 13409 ;;  grs             1   15[COMRAM] unsigned char 
 13410 ;;  bexp            1   14[COMRAM] unsigned char 
 13411 ;;  aexp            1   13[COMRAM] unsigned char 
 13412 ;;  signs           1   12[COMRAM] unsigned char 
 13413 ;; Return value:  Size  Location     Type
 13414 ;;                  4    0[COMRAM] unsigned char 
 13415 ;; Registers used:
 13416 ;;		wreg, status,2, status,0
 13417 ;; Tracked objects:
 13418 ;;		On entry : 0/0
 13419 ;;		On exit  : 0/0
 13420 ;;		Unchanged: 0/0
 13421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13422 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13423 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13424 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13425 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13426 ;;Total ram usage:       16 bytes
 13427 ;; Hardware stack levels used: 1
 13428 ;; This function calls:
 13429 ;;		Nothing
 13430 ;; This function is called by:
 13431 ;;		_colour_rel
 13432 ;;		_Colour_decider
 13433 ;;		___flsub
 13434 ;;		_efgtoa
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           	psect	text74
 13439   00292C                     __ptext74:
 13440                           	callstack 0
 13441   00292C                     ___fladd:
 13442                           	callstack 25
 13443   00292C  5004               	movf	(___fladd@b+3)^0,w,c
 13444   00292E  0B80               	andlw	128
 13445   002930  6E0D               	movwf	___fladd@signs^0,c
 13446   002932  5004               	movf	(___fladd@b+3)^0,w,c
 13447   002934  2404               	addwf	(___fladd@b+3)^0,w,c
 13448   002936  6E0F               	movwf	___fladd@bexp^0,c
 13449   002938  AE03               	btfss	(___fladd@b+2)^0,7,c
 13450   00293A  EFA1  F014         	goto	u3061
 13451   00293E  EFA3  F014         	goto	u3060
 13452   002942                     u3061:
 13453   002942  EFA4  F014         	goto	l3899
 13454   002946                     u3060:
 13455   002946  800F               	bsf	___fladd@bexp^0,0,c
 13456   002948                     l3899:
 13457   002948  500F               	movf	___fladd@bexp^0,w,c
 13458   00294A  B4D8               	btfsc	status,2,c
 13459   00294C  EFAA  F014         	goto	u3071
 13460   002950  EFAC  F014         	goto	u3070
 13461   002954                     u3071:
 13462   002954  EFC1  F014         	goto	l3909
 13463   002958                     u3070:
 13464   002958  280F               	incf	___fladd@bexp^0,w,c
 13465   00295A  A4D8               	btfss	status,2,c
 13466   00295C  EFB2  F014         	goto	u3081
 13467   002960  EFB4  F014         	goto	u3080
 13468   002964                     u3081:
 13469   002964  EFBC  F014         	goto	l3905
 13470   002968                     u3080:
 13471   002968  0E00               	movlw	0
 13472   00296A  6E01               	movwf	___fladd@b^0,c
 13473   00296C  0E00               	movlw	0
 13474   00296E  6E02               	movwf	(___fladd@b+1)^0,c
 13475   002970  0E00               	movlw	0
 13476   002972  6E03               	movwf	(___fladd@b+2)^0,c
 13477   002974  0E00               	movlw	0
 13478   002976  6E04               	movwf	(___fladd@b+3)^0,c
 13479   002978                     l3905:
 13480   002978  8E03               	bsf	(___fladd@b+2)^0,7,c
 13481   00297A  0E00               	movlw	0
 13482   00297C  6E04               	movwf	(___fladd@b+3)^0,c
 13483   00297E  EFC9  F014         	goto	l3911
 13484   002982                     l3909:
 13485   002982  0E00               	movlw	0
 13486   002984  6E01               	movwf	___fladd@b^0,c
 13487   002986  0E00               	movlw	0
 13488   002988  6E02               	movwf	(___fladd@b+1)^0,c
 13489   00298A  0E00               	movlw	0
 13490   00298C  6E03               	movwf	(___fladd@b+2)^0,c
 13491   00298E  0E00               	movlw	0
 13492   002990  6E04               	movwf	(___fladd@b+3)^0,c
 13493   002992                     l3911:
 13494   002992  5008               	movf	(___fladd@a+3)^0,w,c
 13495   002994  0B80               	andlw	128
 13496   002996  6E0E               	movwf	___fladd@aexp^0,c
 13497   002998  500D               	movf	___fladd@signs^0,w,c
 13498   00299A  180E               	xorwf	___fladd@aexp^0,w,c
 13499   00299C  B4D8               	btfsc	status,2,c
 13500   00299E  EFD3  F014         	goto	u3091
 13501   0029A2  EFD5  F014         	goto	u3090
 13502   0029A6                     u3091:
 13503   0029A6  EFD6  F014         	goto	l3917
 13504   0029AA                     u3090:
 13505   0029AA  8C0D               	bsf	___fladd@signs^0,6,c
 13506   0029AC                     l3917:
 13507   0029AC  5008               	movf	(___fladd@a+3)^0,w,c
 13508   0029AE  2408               	addwf	(___fladd@a+3)^0,w,c
 13509   0029B0  6E0E               	movwf	___fladd@aexp^0,c
 13510   0029B2  AE07               	btfss	(___fladd@a+2)^0,7,c
 13511   0029B4  EFDE  F014         	goto	u3101
 13512   0029B8  EFE0  F014         	goto	u3100
 13513   0029BC                     u3101:
 13514   0029BC  EFE1  F014         	goto	l3923
 13515   0029C0                     u3100:
 13516   0029C0  800E               	bsf	___fladd@aexp^0,0,c
 13517   0029C2                     l3923:
 13518   0029C2  500E               	movf	___fladd@aexp^0,w,c
 13519   0029C4  B4D8               	btfsc	status,2,c
 13520   0029C6  EFE7  F014         	goto	u3111
 13521   0029CA  EFE9  F014         	goto	u3110
 13522   0029CE                     u3111:
 13523   0029CE  EFFE  F014         	goto	l3933
 13524   0029D2                     u3110:
 13525   0029D2  280E               	incf	___fladd@aexp^0,w,c
 13526   0029D4  A4D8               	btfss	status,2,c
 13527   0029D6  EFEF  F014         	goto	u3121
 13528   0029DA  EFF1  F014         	goto	u3120
 13529   0029DE                     u3121:
 13530   0029DE  EFF9  F014         	goto	l3929
 13531   0029E2                     u3120:
 13532   0029E2  0E00               	movlw	0
 13533   0029E4  6E05               	movwf	___fladd@a^0,c
 13534   0029E6  0E00               	movlw	0
 13535   0029E8  6E06               	movwf	(___fladd@a+1)^0,c
 13536   0029EA  0E00               	movlw	0
 13537   0029EC  6E07               	movwf	(___fladd@a+2)^0,c
 13538   0029EE  0E00               	movlw	0
 13539   0029F0  6E08               	movwf	(___fladd@a+3)^0,c
 13540   0029F2                     l3929:
 13541   0029F2  8E07               	bsf	(___fladd@a+2)^0,7,c
 13542   0029F4  0E00               	movlw	0
 13543   0029F6  6E08               	movwf	(___fladd@a+3)^0,c
 13544   0029F8  EF06  F015         	goto	l3935
 13545   0029FC                     l3933:
 13546   0029FC  0E00               	movlw	0
 13547   0029FE  6E05               	movwf	___fladd@a^0,c
 13548   002A00  0E00               	movlw	0
 13549   002A02  6E06               	movwf	(___fladd@a+1)^0,c
 13550   002A04  0E00               	movlw	0
 13551   002A06  6E07               	movwf	(___fladd@a+2)^0,c
 13552   002A08  0E00               	movlw	0
 13553   002A0A  6E08               	movwf	(___fladd@a+3)^0,c
 13554   002A0C                     l3935:
 13555   002A0C  500F               	movf	___fladd@bexp^0,w,c
 13556   002A0E  5C0E               	subwf	___fladd@aexp^0,w,c
 13557   002A10  B0D8               	btfsc	status,0,c
 13558   002A12  EF0D  F015         	goto	u3131
 13559   002A16  EF0F  F015         	goto	u3130
 13560   002A1A                     u3131:
 13561   002A1A  EF36  F015         	goto	l3971
 13562   002A1E                     u3130:
 13563   002A1E  AC0D               	btfss	___fladd@signs^0,6,c
 13564   002A20  EF14  F015         	goto	u3141
 13565   002A24  EF16  F015         	goto	u3140
 13566   002A28                     u3141:
 13567   002A28  EF18  F015         	goto	l3941
 13568   002A2C                     u3140:
 13569   002A2C  0E80               	movlw	128
 13570   002A2E  1A0D               	xorwf	___fladd@signs^0,f,c
 13571   002A30                     l3941:
 13572   002A30  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13573   002A34  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13574   002A38  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13575   002A3C  C001  F010         	movff	___fladd@b,___fladd@grs
 13576   002A40  C005  F001         	movff	___fladd@a,___fladd@b
 13577   002A44  C010  F005         	movff	___fladd@grs,___fladd@a
 13578   002A48  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13579   002A4C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13580   002A50  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13581   002A54  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13582   002A58  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13583   002A5C  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13584   002A60  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13585   002A64  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13586   002A68  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13587   002A6C                     l3971:
 13588   002A6C  0E00               	movlw	0
 13589   002A6E  6E10               	movwf	___fladd@grs^0,c
 13590   002A70  500F               	movf	___fladd@bexp^0,w,c
 13591   002A72  C00E  F009         	movff	___fladd@aexp,??___fladd
 13592   002A76  6A0A               	clrf	(??___fladd+1)^0,c
 13593   002A78  5E09               	subwf	??___fladd^0,f,c
 13594   002A7A  0E00               	movlw	0
 13595   002A7C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13596   002A7E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13597   002A80  EF4B  F015         	goto	u3151
 13598   002A84  500A               	movf	(??___fladd+1)^0,w,c
 13599   002A86  E109               	bnz	u3150
 13600   002A88  0E1A               	movlw	26
 13601   002A8A  5C09               	subwf	??___fladd^0,w,c
 13602   002A8C  A0D8               	btfss	status,0,c
 13603   002A8E  EF4B  F015         	goto	u3151
 13604   002A92  EF4D  F015         	goto	u3150
 13605   002A96                     u3151:
 13606   002A96  EF84  F015         	goto	l1223
 13607   002A9A                     u3150:
 13608   002A9A  5001               	movf	___fladd@b^0,w,c
 13609   002A9C  1002               	iorwf	(___fladd@b+1)^0,w,c
 13610   002A9E  1003               	iorwf	(___fladd@b+2)^0,w,c
 13611   002AA0  1004               	iorwf	(___fladd@b+3)^0,w,c
 13612   002AA2  A4D8               	btfss	status,2,c
 13613   002AA4  EF56  F015         	goto	u3161
 13614   002AA8  EF59  F015         	goto	u3160
 13615   002AAC                     u3161:
 13616   002AAC  0E01               	movlw	1
 13617   002AAE  EF5A  F015         	goto	u3170
 13618   002AB2                     u3160:
 13619   002AB2  0E00               	movlw	0
 13620   002AB4                     u3170:
 13621   002AB4  6E10               	movwf	___fladd@grs^0,c
 13622   002AB6  0E00               	movlw	0
 13623   002AB8  6E01               	movwf	___fladd@b^0,c
 13624   002ABA  0E00               	movlw	0
 13625   002ABC  6E02               	movwf	(___fladd@b+1)^0,c
 13626   002ABE  0E00               	movlw	0
 13627   002AC0  6E03               	movwf	(___fladd@b+2)^0,c
 13628   002AC2  0E00               	movlw	0
 13629   002AC4  6E04               	movwf	(___fladd@b+3)^0,c
 13630   002AC6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13631   002ACA  EF8D  F015         	goto	l1222
 13632   002ACE                     l1224:
 13633   002ACE  A010               	btfss	___fladd@grs^0,0,c
 13634   002AD0  EF6C  F015         	goto	u3181
 13635   002AD4  EF6E  F015         	goto	u3180
 13636   002AD8                     u3181:
 13637   002AD8  EF74  F015         	goto	l3983
 13638   002ADC                     u3180:
 13639   002ADC  90D8               	bcf	status,0,c
 13640   002ADE  3010               	rrcf	___fladd@grs^0,w,c
 13641   002AE0  0901               	iorlw	1
 13642   002AE2  6E10               	movwf	___fladd@grs^0,c
 13643   002AE4  EF76  F015         	goto	l3985
 13644   002AE8                     l3983:
 13645   002AE8  90D8               	bcf	status,0,c
 13646   002AEA  3210               	rrcf	___fladd@grs^0,f,c
 13647   002AEC                     l3985:
 13648   002AEC  A001               	btfss	___fladd@b^0,0,c
 13649   002AEE  EF7B  F015         	goto	u3191
 13650   002AF2  EF7D  F015         	goto	u3190
 13651   002AF6                     u3191:
 13652   002AF6  EF7E  F015         	goto	l3989
 13653   002AFA                     u3190:
 13654   002AFA  8E10               	bsf	___fladd@grs^0,7,c
 13655   002AFC                     l3989:
 13656   002AFC  3404               	rlcf	(___fladd@b+3)^0,w,c
 13657   002AFE  3204               	rrcf	(___fladd@b+3)^0,f,c
 13658   002B00  3203               	rrcf	(___fladd@b+2)^0,f,c
 13659   002B02  3202               	rrcf	(___fladd@b+1)^0,f,c
 13660   002B04  3201               	rrcf	___fladd@b^0,f,c
 13661   002B06  2A0F               	incf	___fladd@bexp^0,f,c
 13662   002B08                     l1223:
 13663   002B08  500E               	movf	___fladd@aexp^0,w,c
 13664   002B0A  5C0F               	subwf	___fladd@bexp^0,w,c
 13665   002B0C  A0D8               	btfss	status,0,c
 13666   002B0E  EF8B  F015         	goto	u3201
 13667   002B12  EF8D  F015         	goto	u3200
 13668   002B16                     u3201:
 13669   002B16  EF67  F015         	goto	l1224
 13670   002B1A                     u3200:
 13671   002B1A                     l1222:
 13672   002B1A  BC0D               	btfsc	___fladd@signs^0,6,c
 13673   002B1C  EF92  F015         	goto	u3211
 13674   002B20  EF94  F015         	goto	u3210
 13675   002B24                     u3211:
 13676   002B24  EFD4  F015         	goto	l4017
 13677   002B28                     u3210:
 13678   002B28  500F               	movf	___fladd@bexp^0,w,c
 13679   002B2A  A4D8               	btfss	status,2,c
 13680   002B2C  EF9A  F015         	goto	u3221
 13681   002B30  EF9C  F015         	goto	u3220
 13682   002B34                     u3221:
 13683   002B34  EFA6  F015         	goto	l3999
 13684   002B38                     u3220:
 13685   002B38  0E00               	movlw	0
 13686   002B3A  6E01               	movwf	?___fladd^0,c
 13687   002B3C  0E00               	movlw	0
 13688   002B3E  6E02               	movwf	(?___fladd+1)^0,c
 13689   002B40  0E00               	movlw	0
 13690   002B42  6E03               	movwf	(?___fladd+2)^0,c
 13691   002B44  0E00               	movlw	0
 13692   002B46  6E04               	movwf	(?___fladd+3)^0,c
 13693   002B48  EFF5  F016         	goto	l1231
 13694   002B4C                     l3999:
 13695   002B4C  5005               	movf	___fladd@a^0,w,c
 13696   002B4E  2601               	addwf	___fladd@b^0,f,c
 13697   002B50  5006               	movf	(___fladd@a+1)^0,w,c
 13698   002B52  2202               	addwfc	(___fladd@b+1)^0,f,c
 13699   002B54  5007               	movf	(___fladd@a+2)^0,w,c
 13700   002B56  2203               	addwfc	(___fladd@b+2)^0,f,c
 13701   002B58  5008               	movf	(___fladd@a+3)^0,w,c
 13702   002B5A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13703   002B5C  A004               	btfss	(___fladd@b+3)^0,0,c
 13704   002B5E  EFB3  F015         	goto	u3231
 13705   002B62  EFB5  F015         	goto	u3230
 13706   002B66                     u3231:
 13707   002B66  EF61  F016         	goto	l4053
 13708   002B6A                     u3230:
 13709   002B6A  A010               	btfss	___fladd@grs^0,0,c
 13710   002B6C  EFBA  F015         	goto	u3241
 13711   002B70  EFBC  F015         	goto	u3240
 13712   002B74                     u3241:
 13713   002B74  EFC2  F015         	goto	l4007
 13714   002B78                     u3240:
 13715   002B78  90D8               	bcf	status,0,c
 13716   002B7A  3010               	rrcf	___fladd@grs^0,w,c
 13717   002B7C  0901               	iorlw	1
 13718   002B7E  6E10               	movwf	___fladd@grs^0,c
 13719   002B80  EFC4  F015         	goto	l4009
 13720   002B84                     l4007:
 13721   002B84  90D8               	bcf	status,0,c
 13722   002B86  3210               	rrcf	___fladd@grs^0,f,c
 13723   002B88                     l4009:
 13724   002B88  A001               	btfss	___fladd@b^0,0,c
 13725   002B8A  EFC9  F015         	goto	u3251
 13726   002B8E  EFCB  F015         	goto	u3250
 13727   002B92                     u3251:
 13728   002B92  EFCC  F015         	goto	l4013
 13729   002B96                     u3250:
 13730   002B96  8E10               	bsf	___fladd@grs^0,7,c
 13731   002B98                     l4013:
 13732   002B98  3404               	rlcf	(___fladd@b+3)^0,w,c
 13733   002B9A  3204               	rrcf	(___fladd@b+3)^0,f,c
 13734   002B9C  3203               	rrcf	(___fladd@b+2)^0,f,c
 13735   002B9E  3202               	rrcf	(___fladd@b+1)^0,f,c
 13736   002BA0  3201               	rrcf	___fladd@b^0,f,c
 13737   002BA2  2A0F               	incf	___fladd@bexp^0,f,c
 13738   002BA4  EF61  F016         	goto	l4053
 13739   002BA8                     l4017:
 13740   002BA8  5005               	movf	___fladd@a^0,w,c
 13741   002BAA  5C01               	subwf	___fladd@b^0,w,c
 13742   002BAC  5006               	movf	(___fladd@a+1)^0,w,c
 13743   002BAE  5802               	subwfb	(___fladd@b+1)^0,w,c
 13744   002BB0  5007               	movf	(___fladd@a+2)^0,w,c
 13745   002BB2  5803               	subwfb	(___fladd@b+2)^0,w,c
 13746   002BB4  5004               	movf	(___fladd@b+3)^0,w,c
 13747   002BB6  0A80               	xorlw	128
 13748   002BB8  6E09               	movwf	??___fladd^0,c
 13749   002BBA  5008               	movf	(___fladd@a+3)^0,w,c
 13750   002BBC  0A80               	xorlw	128
 13751   002BBE  5809               	subwfb	??___fladd^0,w,c
 13752   002BC0  B0D8               	btfsc	status,0,c
 13753   002BC2  EFE5  F015         	goto	u3261
 13754   002BC6  EFE7  F015         	goto	u3260
 13755   002BCA                     u3261:
 13756   002BCA  EF12  F016         	goto	l4027
 13757   002BCE                     u3260:
 13758   002BCE  5001               	movf	___fladd@b^0,w,c
 13759   002BD0  5C05               	subwf	___fladd@a^0,w,c
 13760   002BD2  6E09               	movwf	??___fladd^0,c
 13761   002BD4  5002               	movf	(___fladd@b+1)^0,w,c
 13762   002BD6  5806               	subwfb	(___fladd@a+1)^0,w,c
 13763   002BD8  6E0A               	movwf	(??___fladd+1)^0,c
 13764   002BDA  5003               	movf	(___fladd@b+2)^0,w,c
 13765   002BDC  5807               	subwfb	(___fladd@a+2)^0,w,c
 13766   002BDE  6E0B               	movwf	(??___fladd+2)^0,c
 13767   002BE0  5004               	movf	(___fladd@b+3)^0,w,c
 13768   002BE2  5808               	subwfb	(___fladd@a+3)^0,w,c
 13769   002BE4  6E0C               	movwf	(??___fladd+3)^0,c
 13770   002BE6  0EFF               	movlw	255
 13771   002BE8  2409               	addwf	??___fladd^0,w,c
 13772   002BEA  6E01               	movwf	___fladd@b^0,c
 13773   002BEC  0EFF               	movlw	255
 13774   002BEE  200A               	addwfc	(??___fladd+1)^0,w,c
 13775   002BF0  6E02               	movwf	(___fladd@b+1)^0,c
 13776   002BF2  0EFF               	movlw	255
 13777   002BF4  200B               	addwfc	(??___fladd+2)^0,w,c
 13778   002BF6  6E03               	movwf	(___fladd@b+2)^0,c
 13779   002BF8  0EFF               	movlw	255
 13780   002BFA  200C               	addwfc	(??___fladd+3)^0,w,c
 13781   002BFC  6E04               	movwf	(___fladd@b+3)^0,c
 13782   002BFE  0E80               	movlw	128
 13783   002C00  1A0D               	xorwf	___fladd@signs^0,f,c
 13784   002C02  6C10               	negf	___fladd@grs^0,c
 13785   002C04  5010               	movf	___fladd@grs^0,w,c
 13786   002C06  A4D8               	btfss	status,2,c
 13787   002C08  EF08  F016         	goto	u3271
 13788   002C0C  EF0A  F016         	goto	u3270
 13789   002C10                     u3271:
 13790   002C10  EF1A  F016         	goto	l1239
 13791   002C14                     u3270:
 13792   002C14  0E01               	movlw	1
 13793   002C16  2601               	addwf	___fladd@b^0,f,c
 13794   002C18  0E00               	movlw	0
 13795   002C1A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13796   002C1C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13797   002C1E  2204               	addwfc	(___fladd@b+3)^0,f,c
 13798   002C20  EF1A  F016         	goto	l1239
 13799   002C24                     l4027:
 13800   002C24  5005               	movf	___fladd@a^0,w,c
 13801   002C26  5E01               	subwf	___fladd@b^0,f,c
 13802   002C28  5006               	movf	(___fladd@a+1)^0,w,c
 13803   002C2A  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13804   002C2C  5007               	movf	(___fladd@a+2)^0,w,c
 13805   002C2E  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13806   002C30  5008               	movf	(___fladd@a+3)^0,w,c
 13807   002C32  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13808   002C34                     l1239:
 13809   002C34  5001               	movf	___fladd@b^0,w,c
 13810   002C36  1002               	iorwf	(___fladd@b+1)^0,w,c
 13811   002C38  1003               	iorwf	(___fladd@b+2)^0,w,c
 13812   002C3A  1004               	iorwf	(___fladd@b+3)^0,w,c
 13813   002C3C  A4D8               	btfss	status,2,c
 13814   002C3E  EF23  F016         	goto	u3281
 13815   002C42  EF25  F016         	goto	u3280
 13816   002C46                     u3281:
 13817   002C46  EF5A  F016         	goto	l4051
 13818   002C4A                     u3280:
 13819   002C4A  5010               	movf	___fladd@grs^0,w,c
 13820   002C4C  A4D8               	btfss	status,2,c
 13821   002C4E  EF2B  F016         	goto	u3291
 13822   002C52  EF2D  F016         	goto	u3290
 13823   002C56                     u3291:
 13824   002C56  EF5A  F016         	goto	l4051
 13825   002C5A                     u3290:
 13826   002C5A  0E00               	movlw	0
 13827   002C5C  6E01               	movwf	?___fladd^0,c
 13828   002C5E  0E00               	movlw	0
 13829   002C60  6E02               	movwf	(?___fladd+1)^0,c
 13830   002C62  0E00               	movlw	0
 13831   002C64  6E03               	movwf	(?___fladd+2)^0,c
 13832   002C66  0E00               	movlw	0
 13833   002C68  6E04               	movwf	(?___fladd+3)^0,c
 13834   002C6A  EFF5  F016         	goto	l1231
 13835   002C6E                     l4035:
 13836   002C6E  90D8               	bcf	status,0,c
 13837   002C70  3601               	rlcf	___fladd@b^0,f,c
 13838   002C72  3602               	rlcf	(___fladd@b+1)^0,f,c
 13839   002C74  3603               	rlcf	(___fladd@b+2)^0,f,c
 13840   002C76  3604               	rlcf	(___fladd@b+3)^0,f,c
 13841   002C78  AE10               	btfss	___fladd@grs^0,7,c
 13842   002C7A  EF41  F016         	goto	u3301
 13843   002C7E  EF43  F016         	goto	u3300
 13844   002C82                     u3301:
 13845   002C82  EF44  F016         	goto	l4041
 13846   002C86                     u3300:
 13847   002C86  8001               	bsf	___fladd@b^0,0,c
 13848   002C88                     l4041:
 13849   002C88  A010               	btfss	___fladd@grs^0,0,c
 13850   002C8A  EF49  F016         	goto	u3311
 13851   002C8E  EF4B  F016         	goto	u3310
 13852   002C92                     u3311:
 13853   002C92  EF4F  F016         	goto	l4045
 13854   002C96                     u3310:
 13855   002C96  80D8               	bsf	status,0,c
 13856   002C98  3610               	rlcf	___fladd@grs^0,f,c
 13857   002C9A  EF51  F016         	goto	l4047
 13858   002C9E                     l4045:
 13859   002C9E  90D8               	bcf	status,0,c
 13860   002CA0  3610               	rlcf	___fladd@grs^0,f,c
 13861   002CA2                     l4047:
 13862   002CA2  500F               	movf	___fladd@bexp^0,w,c
 13863   002CA4  B4D8               	btfsc	status,2,c
 13864   002CA6  EF57  F016         	goto	u3321
 13865   002CAA  EF59  F016         	goto	u3320
 13866   002CAE                     u3321:
 13867   002CAE  EF5A  F016         	goto	l4051
 13868   002CB2                     u3320:
 13869   002CB2  060F               	decf	___fladd@bexp^0,f,c
 13870   002CB4                     l4051:
 13871   002CB4  AE03               	btfss	(___fladd@b+2)^0,7,c
 13872   002CB6  EF5F  F016         	goto	u3331
 13873   002CBA  EF61  F016         	goto	u3330
 13874   002CBE                     u3331:
 13875   002CBE  EF37  F016         	goto	l4035
 13876   002CC2                     u3330:
 13877   002CC2                     l4053:
 13878   002CC2  0E00               	movlw	0
 13879   002CC4  6E0E               	movwf	___fladd@aexp^0,c
 13880   002CC6  AE10               	btfss	___fladd@grs^0,7,c
 13881   002CC8  EF68  F016         	goto	u3341
 13882   002CCC  EF6A  F016         	goto	u3340
 13883   002CD0                     u3341:
 13884   002CD0  EF82  F016         	goto	l1248
 13885   002CD4                     u3340:
 13886   002CD4  C010  F009         	movff	___fladd@grs,??___fladd
 13887   002CD8  0E7F               	movlw	127
 13888   002CDA  1609               	andwf	??___fladd^0,f,c
 13889   002CDC  B4D8               	btfsc	status,2,c
 13890   002CDE  EF73  F016         	goto	u3351
 13891   002CE2  EF75  F016         	goto	u3350
 13892   002CE6                     u3351:
 13893   002CE6  EF79  F016         	goto	l1249
 13894   002CEA                     u3350:
 13895   002CEA                     l4059:
 13896   002CEA  0E01               	movlw	1
 13897   002CEC  6E0E               	movwf	___fladd@aexp^0,c
 13898   002CEE  EF82  F016         	goto	l1248
 13899   002CF2                     l1249:
 13900   002CF2  A001               	btfss	___fladd@b^0,0,c
 13901   002CF4  EF7E  F016         	goto	u3361
 13902   002CF8  EF80  F016         	goto	u3360
 13903   002CFC                     u3361:
 13904   002CFC  EF82  F016         	goto	l1248
 13905   002D00                     u3360:
 13906   002D00  EF75  F016         	goto	l4059
 13907   002D04                     l1248:
 13908   002D04  500E               	movf	___fladd@aexp^0,w,c
 13909   002D06  B4D8               	btfsc	status,2,c
 13910   002D08  EF88  F016         	goto	u3371
 13911   002D0C  EF8A  F016         	goto	u3370
 13912   002D10                     u3371:
 13913   002D10  EFB5  F016         	goto	l4071
 13914   002D14                     u3370:
 13915   002D14  0E01               	movlw	1
 13916   002D16  2601               	addwf	___fladd@b^0,f,c
 13917   002D18  0E00               	movlw	0
 13918   002D1A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13919   002D1C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13920   002D1E  2204               	addwfc	(___fladd@b+3)^0,f,c
 13921   002D20  A004               	btfss	(___fladd@b+3)^0,0,c
 13922   002D22  EF95  F016         	goto	u3381
 13923   002D26  EF97  F016         	goto	u3380
 13924   002D2A                     u3381:
 13925   002D2A  EFB5  F016         	goto	l4071
 13926   002D2E                     u3380:
 13927   002D2E  C001  F009         	movff	___fladd@b,??___fladd
 13928   002D32  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13929   002D36  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13930   002D3A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13931   002D3E  340C               	rlcf	(??___fladd+3)^0,w,c
 13932   002D40  320C               	rrcf	(??___fladd+3)^0,f,c
 13933   002D42  320B               	rrcf	(??___fladd+2)^0,f,c
 13934   002D44  320A               	rrcf	(??___fladd+1)^0,f,c
 13935   002D46  3209               	rrcf	??___fladd^0,f,c
 13936   002D48  C009  F001         	movff	??___fladd,___fladd@b
 13937   002D4C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13938   002D50  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13939   002D54  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13940   002D58  280F               	incf	___fladd@bexp^0,w,c
 13941   002D5A  B4D8               	btfsc	status,2,c
 13942   002D5C  EFB2  F016         	goto	u3391
 13943   002D60  EFB4  F016         	goto	u3390
 13944   002D64                     u3391:
 13945   002D64  EFB5  F016         	goto	l4071
 13946   002D68                     u3390:
 13947   002D68  2A0F               	incf	___fladd@bexp^0,f,c
 13948   002D6A                     l4071:
 13949   002D6A  280F               	incf	___fladd@bexp^0,w,c
 13950   002D6C  B4D8               	btfsc	status,2,c
 13951   002D6E  EFBB  F016         	goto	u3401
 13952   002D72  EFBD  F016         	goto	u3400
 13953   002D76                     u3401:
 13954   002D76  EFC5  F016         	goto	l4075
 13955   002D7A                     u3400:
 13956   002D7A  500F               	movf	___fladd@bexp^0,w,c
 13957   002D7C  A4D8               	btfss	status,2,c
 13958   002D7E  EFC3  F016         	goto	u3411
 13959   002D82  EFC5  F016         	goto	u3410
 13960   002D86                     u3411:
 13961   002D86  EFD7  F016         	goto	l4079
 13962   002D8A                     u3410:
 13963   002D8A                     l4075:
 13964   002D8A  0E00               	movlw	0
 13965   002D8C  6E01               	movwf	___fladd@b^0,c
 13966   002D8E  0E00               	movlw	0
 13967   002D90  6E02               	movwf	(___fladd@b+1)^0,c
 13968   002D92  0E00               	movlw	0
 13969   002D94  6E03               	movwf	(___fladd@b+2)^0,c
 13970   002D96  0E00               	movlw	0
 13971   002D98  6E04               	movwf	(___fladd@b+3)^0,c
 13972   002D9A  500F               	movf	___fladd@bexp^0,w,c
 13973   002D9C  A4D8               	btfss	status,2,c
 13974   002D9E  EFD3  F016         	goto	u3421
 13975   002DA2  EFD5  F016         	goto	u3420
 13976   002DA6                     u3421:
 13977   002DA6  EFD7  F016         	goto	l4079
 13978   002DAA                     u3420:
 13979   002DAA  0E00               	movlw	0
 13980   002DAC  6E0D               	movwf	___fladd@signs^0,c
 13981   002DAE                     l4079:
 13982   002DAE  A00F               	btfss	___fladd@bexp^0,0,c
 13983   002DB0  EFDC  F016         	goto	u3431
 13984   002DB4  EFDE  F016         	goto	u3430
 13985   002DB8                     u3431:
 13986   002DB8  EFE1  F016         	goto	l4083
 13987   002DBC                     u3430:
 13988   002DBC  8E03               	bsf	(___fladd@b+2)^0,7,c
 13989   002DBE  EFE2  F016         	goto	l4085
 13990   002DC2                     l4083:
 13991   002DC2  9E03               	bcf	(___fladd@b+2)^0,7,c
 13992   002DC4                     l4085:
 13993   002DC4  90D8               	bcf	status,0,c
 13994   002DC6  300F               	rrcf	___fladd@bexp^0,w,c
 13995   002DC8  6E04               	movwf	(___fladd@b+3)^0,c
 13996   002DCA  AE0D               	btfss	___fladd@signs^0,7,c
 13997   002DCC  EFEA  F016         	goto	u3441
 13998   002DD0  EFEC  F016         	goto	u3440
 13999   002DD4                     u3441:
 14000   002DD4  EFED  F016         	goto	l4091
 14001   002DD8                     u3440:
 14002   002DD8  8E04               	bsf	(___fladd@b+3)^0,7,c
 14003   002DDA                     l4091:
 14004   002DDA  C001  F001         	movff	___fladd@b,?___fladd
 14005   002DDE  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14006   002DE2  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14007   002DE6  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14008   002DEA                     l1231:
 14009   002DEA  0012               	return		;funcret
 14010   002DEC                     __end_of___fladd:
 14011                           	callstack 0
 14012                           
 14013 ;; *************** function ___flmul *****************
 14014 ;; Defined at:
 14015 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;  b               4   16[COMRAM] unsigned char 
 14018 ;;  a               4   20[COMRAM] unsigned char 
 14019 ;; Auto vars:     Size  Location     Type
 14020 ;;  prod            4   35[COMRAM] struct .
 14021 ;;  grs             4   29[COMRAM] unsigned long 
 14022 ;;  temp            2   39[COMRAM] struct .
 14023 ;;  bexp            1   34[COMRAM] unsigned char 
 14024 ;;  aexp            1   33[COMRAM] unsigned char 
 14025 ;;  sign            1   28[COMRAM] unsigned char 
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  4   16[COMRAM] unsigned char 
 14028 ;; Registers used:
 14029 ;;		wreg, status,2, status,0, prodl, prodh
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14035 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14036 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14038 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14039 ;;Total ram usage:       25 bytes
 14040 ;; Hardware stack levels used: 1
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		_Colour_decider
 14045 ;;		_reverseOneBlock
 14046 ;;		_ForwardOneBlock
 14047 ;;		_Forwardhalfblock
 14048 ;;		_efgtoa
 14049 ;;		_Backhalfblock
 14050 ;; This function uses a non-reentrant model
 14051 ;;
 14052                           
 14053                           	psect	text75
 14054   002DEC                     __ptext75:
 14055                           	callstack 0
 14056   002DEC                     ___flmul:
 14057                           	callstack 26
 14058   002DEC  5014               	movf	(___flmul@b+3)^0,w,c
 14059   002DEE  0B80               	andlw	128
 14060   002DF0  6E1D               	movwf	___flmul@sign^0,c
 14061   002DF2  5014               	movf	(___flmul@b+3)^0,w,c
 14062   002DF4  2414               	addwf	(___flmul@b+3)^0,w,c
 14063   002DF6  6E23               	movwf	___flmul@bexp^0,c
 14064   002DF8  AE13               	btfss	(___flmul@b+2)^0,7,c
 14065   002DFA  EF01  F017         	goto	u3871
 14066   002DFE  EF03  F017         	goto	u3870
 14067   002E02                     u3871:
 14068   002E02  EF04  F017         	goto	l4365
 14069   002E06                     u3870:
 14070   002E06  8023               	bsf	___flmul@bexp^0,0,c
 14071   002E08                     l4365:
 14072   002E08  5023               	movf	___flmul@bexp^0,w,c
 14073   002E0A  B4D8               	btfsc	status,2,c
 14074   002E0C  EF0A  F017         	goto	u3881
 14075   002E10  EF0C  F017         	goto	u3880
 14076   002E14                     u3881:
 14077   002E14  EF1F  F017         	goto	l4373
 14078   002E18                     u3880:
 14079   002E18  2823               	incf	___flmul@bexp^0,w,c
 14080   002E1A  A4D8               	btfss	status,2,c
 14081   002E1C  EF12  F017         	goto	u3891
 14082   002E20  EF14  F017         	goto	u3890
 14083   002E24                     u3891:
 14084   002E24  EF1C  F017         	goto	l4371
 14085   002E28                     u3890:
 14086   002E28  0E00               	movlw	0
 14087   002E2A  6E11               	movwf	___flmul@b^0,c
 14088   002E2C  0E00               	movlw	0
 14089   002E2E  6E12               	movwf	(___flmul@b+1)^0,c
 14090   002E30  0E00               	movlw	0
 14091   002E32  6E13               	movwf	(___flmul@b+2)^0,c
 14092   002E34  0E00               	movlw	0
 14093   002E36  6E14               	movwf	(___flmul@b+3)^0,c
 14094   002E38                     l4371:
 14095   002E38  8E13               	bsf	(___flmul@b+2)^0,7,c
 14096   002E3A  EF27  F017         	goto	l4375
 14097   002E3E                     l4373:
 14098   002E3E  0E00               	movlw	0
 14099   002E40  6E11               	movwf	___flmul@b^0,c
 14100   002E42  0E00               	movlw	0
 14101   002E44  6E12               	movwf	(___flmul@b+1)^0,c
 14102   002E46  0E00               	movlw	0
 14103   002E48  6E13               	movwf	(___flmul@b+2)^0,c
 14104   002E4A  0E00               	movlw	0
 14105   002E4C  6E14               	movwf	(___flmul@b+3)^0,c
 14106   002E4E                     l4375:
 14107   002E4E  5018               	movf	(___flmul@a+3)^0,w,c
 14108   002E50  0B80               	andlw	128
 14109   002E52  1A1D               	xorwf	___flmul@sign^0,f,c
 14110   002E54  5018               	movf	(___flmul@a+3)^0,w,c
 14111   002E56  2418               	addwf	(___flmul@a+3)^0,w,c
 14112   002E58  6E22               	movwf	___flmul@aexp^0,c
 14113   002E5A  AE17               	btfss	(___flmul@a+2)^0,7,c
 14114   002E5C  EF32  F017         	goto	u3901
 14115   002E60  EF34  F017         	goto	u3900
 14116   002E64                     u3901:
 14117   002E64  EF35  F017         	goto	l4383
 14118   002E68                     u3900:
 14119   002E68  8022               	bsf	___flmul@aexp^0,0,c
 14120   002E6A                     l4383:
 14121   002E6A  5022               	movf	___flmul@aexp^0,w,c
 14122   002E6C  B4D8               	btfsc	status,2,c
 14123   002E6E  EF3B  F017         	goto	u3911
 14124   002E72  EF3D  F017         	goto	u3910
 14125   002E76                     u3911:
 14126   002E76  EF50  F017         	goto	l4391
 14127   002E7A                     u3910:
 14128   002E7A  2822               	incf	___flmul@aexp^0,w,c
 14129   002E7C  A4D8               	btfss	status,2,c
 14130   002E7E  EF43  F017         	goto	u3921
 14131   002E82  EF45  F017         	goto	u3920
 14132   002E86                     u3921:
 14133   002E86  EF4D  F017         	goto	l4389
 14134   002E8A                     u3920:
 14135   002E8A  0E00               	movlw	0
 14136   002E8C  6E15               	movwf	___flmul@a^0,c
 14137   002E8E  0E00               	movlw	0
 14138   002E90  6E16               	movwf	(___flmul@a+1)^0,c
 14139   002E92  0E00               	movlw	0
 14140   002E94  6E17               	movwf	(___flmul@a+2)^0,c
 14141   002E96  0E00               	movlw	0
 14142   002E98  6E18               	movwf	(___flmul@a+3)^0,c
 14143   002E9A                     l4389:
 14144   002E9A  8E17               	bsf	(___flmul@a+2)^0,7,c
 14145   002E9C  EF58  F017         	goto	l1308
 14146   002EA0                     l4391:
 14147   002EA0  0E00               	movlw	0
 14148   002EA2  6E15               	movwf	___flmul@a^0,c
 14149   002EA4  0E00               	movlw	0
 14150   002EA6  6E16               	movwf	(___flmul@a+1)^0,c
 14151   002EA8  0E00               	movlw	0
 14152   002EAA  6E17               	movwf	(___flmul@a+2)^0,c
 14153   002EAC  0E00               	movlw	0
 14154   002EAE  6E18               	movwf	(___flmul@a+3)^0,c
 14155   002EB0                     l1308:
 14156   002EB0  5022               	movf	___flmul@aexp^0,w,c
 14157   002EB2  B4D8               	btfsc	status,2,c
 14158   002EB4  EF5E  F017         	goto	u3931
 14159   002EB8  EF60  F017         	goto	u3930
 14160   002EBC                     u3931:
 14161   002EBC  EF68  F017         	goto	l4395
 14162   002EC0                     u3930:
 14163   002EC0  5023               	movf	___flmul@bexp^0,w,c
 14164   002EC2  A4D8               	btfss	status,2,c
 14165   002EC4  EF66  F017         	goto	u3941
 14166   002EC8  EF68  F017         	goto	u3940
 14167   002ECC                     u3941:
 14168   002ECC  EF72  F017         	goto	l4399
 14169   002ED0                     u3940:
 14170   002ED0                     l4395:
 14171   002ED0  0E00               	movlw	0
 14172   002ED2  6E11               	movwf	?___flmul^0,c
 14173   002ED4  0E00               	movlw	0
 14174   002ED6  6E12               	movwf	(?___flmul+1)^0,c
 14175   002ED8  0E00               	movlw	0
 14176   002EDA  6E13               	movwf	(?___flmul+2)^0,c
 14177   002EDC  0E00               	movlw	0
 14178   002EDE  6E14               	movwf	(?___flmul+3)^0,c
 14179   002EE0  EF0A  F019         	goto	l1312
 14180   002EE4                     l4399:
 14181   002EE4  5017               	movf	(___flmul@a+2)^0,w,c
 14182   002EE6  0211               	mulwf	___flmul@b^0,c
 14183   002EE8  CFF3 F028          	movff	prodl,___flmul@temp
 14184   002EEC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14185   002EF0  5028               	movf	___flmul@temp^0,w,c
 14186   002EF2  6E1E               	movwf	___flmul@grs^0,c
 14187   002EF4  6A1F               	clrf	(___flmul@grs+1)^0,c
 14188   002EF6  6A20               	clrf	(___flmul@grs+2)^0,c
 14189   002EF8  6A21               	clrf	(___flmul@grs+3)^0,c
 14190   002EFA  5029               	movf	(___flmul@temp+1)^0,w,c
 14191   002EFC  6E24               	movwf	___flmul@prod^0,c
 14192   002EFE  6A25               	clrf	(___flmul@prod+1)^0,c
 14193   002F00  6A26               	clrf	(___flmul@prod+2)^0,c
 14194   002F02  6A27               	clrf	(___flmul@prod+3)^0,c
 14195   002F04  5016               	movf	(___flmul@a+1)^0,w,c
 14196   002F06  0212               	mulwf	(___flmul@b+1)^0,c
 14197   002F08  CFF3 F028          	movff	prodl,___flmul@temp
 14198   002F0C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14199   002F10  5028               	movf	___flmul@temp^0,w,c
 14200   002F12  261E               	addwf	___flmul@grs^0,f,c
 14201   002F14  0E00               	movlw	0
 14202   002F16  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14203   002F18  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14204   002F1A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14205   002F1C  5029               	movf	(___flmul@temp+1)^0,w,c
 14206   002F1E  2624               	addwf	___flmul@prod^0,f,c
 14207   002F20  0E00               	movlw	0
 14208   002F22  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14209   002F24  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14210   002F26  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14211   002F28  5015               	movf	___flmul@a^0,w,c
 14212   002F2A  0213               	mulwf	(___flmul@b+2)^0,c
 14213   002F2C  CFF3 F028          	movff	prodl,___flmul@temp
 14214   002F30  CFF4 F029          	movff	prodh,___flmul@temp+1
 14215   002F34  5028               	movf	___flmul@temp^0,w,c
 14216   002F36  261E               	addwf	___flmul@grs^0,f,c
 14217   002F38  0E00               	movlw	0
 14218   002F3A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14219   002F3C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14220   002F3E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14221   002F40  5029               	movf	(___flmul@temp+1)^0,w,c
 14222   002F42  2624               	addwf	___flmul@prod^0,f,c
 14223   002F44  0E00               	movlw	0
 14224   002F46  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14225   002F48  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14226   002F4A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14227   002F4C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14228   002F50  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14229   002F54  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14230   002F58  6A1E               	clrf	___flmul@grs^0,c
 14231   002F5A  5015               	movf	___flmul@a^0,w,c
 14232   002F5C  0212               	mulwf	(___flmul@b+1)^0,c
 14233   002F5E  CFF3 F028          	movff	prodl,___flmul@temp
 14234   002F62  CFF4 F029          	movff	prodh,___flmul@temp+1
 14235   002F66  5028               	movf	___flmul@temp^0,w,c
 14236   002F68  261E               	addwf	___flmul@grs^0,f,c
 14237   002F6A  5029               	movf	(___flmul@temp+1)^0,w,c
 14238   002F6C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14239   002F6E  0E00               	movlw	0
 14240   002F70  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14241   002F72  0E00               	movlw	0
 14242   002F74  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14243   002F76  5016               	movf	(___flmul@a+1)^0,w,c
 14244   002F78  0211               	mulwf	___flmul@b^0,c
 14245   002F7A  CFF3 F028          	movff	prodl,___flmul@temp
 14246   002F7E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14247   002F82  5028               	movf	___flmul@temp^0,w,c
 14248   002F84  261E               	addwf	___flmul@grs^0,f,c
 14249   002F86  5029               	movf	(___flmul@temp+1)^0,w,c
 14250   002F88  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14251   002F8A  0E00               	movlw	0
 14252   002F8C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14253   002F8E  0E00               	movlw	0
 14254   002F90  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14255   002F92  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14256   002F96  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14257   002F9A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14258   002F9E  6A1E               	clrf	___flmul@grs^0,c
 14259   002FA0  5015               	movf	___flmul@a^0,w,c
 14260   002FA2  0211               	mulwf	___flmul@b^0,c
 14261   002FA4  CFF3 F028          	movff	prodl,___flmul@temp
 14262   002FA8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14263   002FAC  5028               	movf	___flmul@temp^0,w,c
 14264   002FAE  261E               	addwf	___flmul@grs^0,f,c
 14265   002FB0  5029               	movf	(___flmul@temp+1)^0,w,c
 14266   002FB2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14267   002FB4  0E00               	movlw	0
 14268   002FB6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14269   002FB8  0E00               	movlw	0
 14270   002FBA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14271   002FBC  5017               	movf	(___flmul@a+2)^0,w,c
 14272   002FBE  0212               	mulwf	(___flmul@b+1)^0,c
 14273   002FC0  CFF3 F028          	movff	prodl,___flmul@temp
 14274   002FC4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14275   002FC8  5028               	movf	___flmul@temp^0,w,c
 14276   002FCA  2624               	addwf	___flmul@prod^0,f,c
 14277   002FCC  5029               	movf	(___flmul@temp+1)^0,w,c
 14278   002FCE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14279   002FD0  0E00               	movlw	0
 14280   002FD2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14281   002FD4  0E00               	movlw	0
 14282   002FD6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14283   002FD8  5016               	movf	(___flmul@a+1)^0,w,c
 14284   002FDA  0213               	mulwf	(___flmul@b+2)^0,c
 14285   002FDC  CFF3 F028          	movff	prodl,___flmul@temp
 14286   002FE0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14287   002FE4  5028               	movf	___flmul@temp^0,w,c
 14288   002FE6  2624               	addwf	___flmul@prod^0,f,c
 14289   002FE8  5029               	movf	(___flmul@temp+1)^0,w,c
 14290   002FEA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14291   002FEC  0E00               	movlw	0
 14292   002FEE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14293   002FF0  0E00               	movlw	0
 14294   002FF2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14295   002FF4  5017               	movf	(___flmul@a+2)^0,w,c
 14296   002FF6  0213               	mulwf	(___flmul@b+2)^0,c
 14297   002FF8  CFF3 F028          	movff	prodl,___flmul@temp
 14298   002FFC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14299   003000  5028               	movf	___flmul@temp^0,w,c
 14300   003002  6E19               	movwf	??___flmul^0,c
 14301   003004  5029               	movf	(___flmul@temp+1)^0,w,c
 14302   003006  6E1A               	movwf	(??___flmul+1)^0,c
 14303   003008  6A1B               	clrf	(??___flmul+2)^0,c
 14304   00300A  6A1C               	clrf	(??___flmul+3)^0,c
 14305   00300C  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14306   003010  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14307   003014  C019  F01A         	movff	??___flmul,??___flmul+1
 14308   003018  6A19               	clrf	??___flmul^0,c
 14309   00301A  5019               	movf	??___flmul^0,w,c
 14310   00301C  2624               	addwf	___flmul@prod^0,f,c
 14311   00301E  501A               	movf	(??___flmul+1)^0,w,c
 14312   003020  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14313   003022  501B               	movf	(??___flmul+2)^0,w,c
 14314   003024  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14315   003026  501C               	movf	(??___flmul+3)^0,w,c
 14316   003028  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14317   00302A  C01E  F019         	movff	___flmul@grs,??___flmul
 14318   00302E  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14319   003032  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14320   003036  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14321   00303A  0E19               	movlw	25
 14322   00303C  EF25  F018         	goto	u3950
 14323   003040                     u3955:
 14324   003040  90D8               	bcf	status,0,c
 14325   003042  321C               	rrcf	(??___flmul+3)^0,f,c
 14326   003044  321B               	rrcf	(??___flmul+2)^0,f,c
 14327   003046  321A               	rrcf	(??___flmul+1)^0,f,c
 14328   003048  3219               	rrcf	??___flmul^0,f,c
 14329   00304A                     u3950:
 14330   00304A  2EE8               	decfsz	wreg,f,c
 14331   00304C  EF20  F018         	goto	u3955
 14332   003050  5019               	movf	??___flmul^0,w,c
 14333   003052  2624               	addwf	___flmul@prod^0,f,c
 14334   003054  501A               	movf	(??___flmul+1)^0,w,c
 14335   003056  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14336   003058  501B               	movf	(??___flmul+2)^0,w,c
 14337   00305A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14338   00305C  501C               	movf	(??___flmul+3)^0,w,c
 14339   00305E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14340   003060  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14341   003064  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14342   003068  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14343   00306C  6A1E               	clrf	___flmul@grs^0,c
 14344   00306E  5022               	movf	___flmul@aexp^0,w,c
 14345   003070  C023  F019         	movff	___flmul@bexp,??___flmul
 14346   003074  6A1A               	clrf	(??___flmul+1)^0,c
 14347   003076  2619               	addwf	??___flmul^0,f,c
 14348   003078  0E00               	movlw	0
 14349   00307A  221A               	addwfc	(??___flmul+1)^0,f,c
 14350   00307C  0E82               	movlw	130
 14351   00307E  2419               	addwf	??___flmul^0,w,c
 14352   003080  6E28               	movwf	___flmul@temp^0,c
 14353   003082  0EFF               	movlw	255
 14354   003084  201A               	addwfc	(??___flmul+1)^0,w,c
 14355   003086  6E29               	movwf	(___flmul@temp+1)^0,c
 14356   003088  EF5B  F018         	goto	l4447
 14357   00308C                     l4441:
 14358   00308C  90D8               	bcf	status,0,c
 14359   00308E  3624               	rlcf	___flmul@prod^0,f,c
 14360   003090  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14361   003092  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14362   003094  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14363   003096  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14364   003098  EF50  F018         	goto	u3961
 14365   00309C  EF52  F018         	goto	u3960
 14366   0030A0                     u3961:
 14367   0030A0  EF53  F018         	goto	l1315
 14368   0030A4                     u3960:
 14369   0030A4  8024               	bsf	___flmul@prod^0,0,c
 14370   0030A6                     l1315:
 14371   0030A6  90D8               	bcf	status,0,c
 14372   0030A8  361E               	rlcf	___flmul@grs^0,f,c
 14373   0030AA  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14374   0030AC  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14375   0030AE  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14376   0030B0  0628               	decf	___flmul@temp^0,f,c
 14377   0030B2  A0D8               	btfss	status,0,c
 14378   0030B4  0629               	decf	(___flmul@temp+1)^0,f,c
 14379   0030B6                     l4447:
 14380   0030B6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14381   0030B8  EF60  F018         	goto	u3971
 14382   0030BC  EF62  F018         	goto	u3970
 14383   0030C0                     u3971:
 14384   0030C0  EF46  F018         	goto	l4441
 14385   0030C4                     u3970:
 14386   0030C4  0E00               	movlw	0
 14387   0030C6  6E22               	movwf	___flmul@aexp^0,c
 14388   0030C8  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14389   0030CA  EF69  F018         	goto	u3981
 14390   0030CE  EF6B  F018         	goto	u3980
 14391   0030D2                     u3981:
 14392   0030D2  EF8F  F018         	goto	l1317
 14393   0030D6                     u3980:
 14394   0030D6  0EFF               	movlw	255
 14395   0030D8  141E               	andwf	___flmul@grs^0,w,c
 14396   0030DA  6E19               	movwf	??___flmul^0,c
 14397   0030DC  0EFF               	movlw	255
 14398   0030DE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14399   0030E0  6E1A               	movwf	(??___flmul+1)^0,c
 14400   0030E2  0EFF               	movlw	255
 14401   0030E4  1420               	andwf	(___flmul@grs+2)^0,w,c
 14402   0030E6  6E1B               	movwf	(??___flmul+2)^0,c
 14403   0030E8  0E7F               	movlw	127
 14404   0030EA  1421               	andwf	(___flmul@grs+3)^0,w,c
 14405   0030EC  6E1C               	movwf	(??___flmul+3)^0,c
 14406   0030EE  5019               	movf	??___flmul^0,w,c
 14407   0030F0  101A               	iorwf	(??___flmul+1)^0,w,c
 14408   0030F2  101B               	iorwf	(??___flmul+2)^0,w,c
 14409   0030F4  101C               	iorwf	(??___flmul+3)^0,w,c
 14410   0030F6  B4D8               	btfsc	status,2,c
 14411   0030F8  EF80  F018         	goto	u3991
 14412   0030FC  EF82  F018         	goto	u3990
 14413   003100                     u3991:
 14414   003100  EF86  F018         	goto	l1318
 14415   003104                     u3990:
 14416   003104                     l4455:
 14417   003104  0E01               	movlw	1
 14418   003106  6E22               	movwf	___flmul@aexp^0,c
 14419   003108  EF8F  F018         	goto	l1317
 14420   00310C                     l1318:
 14421   00310C  A024               	btfss	___flmul@prod^0,0,c
 14422   00310E  EF8B  F018         	goto	u4001
 14423   003112  EF8D  F018         	goto	u4000
 14424   003116                     u4001:
 14425   003116  EF8F  F018         	goto	l1317
 14426   00311A                     u4000:
 14427   00311A  EF82  F018         	goto	l4455
 14428   00311E                     l1317:
 14429   00311E  5022               	movf	___flmul@aexp^0,w,c
 14430   003120  B4D8               	btfsc	status,2,c
 14431   003122  EF95  F018         	goto	u4011
 14432   003126  EF97  F018         	goto	u4010
 14433   00312A                     u4011:
 14434   00312A  EFBB  F018         	goto	l4467
 14435   00312E                     u4010:
 14436   00312E  0E01               	movlw	1
 14437   003130  2624               	addwf	___flmul@prod^0,f,c
 14438   003132  0E00               	movlw	0
 14439   003134  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14440   003136  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14441   003138  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14442   00313A  A027               	btfss	(___flmul@prod+3)^0,0,c
 14443   00313C  EFA2  F018         	goto	u4021
 14444   003140  EFA4  F018         	goto	u4020
 14445   003144                     u4021:
 14446   003144  EFBB  F018         	goto	l4467
 14447   003148                     u4020:
 14448   003148  C024  F019         	movff	___flmul@prod,??___flmul
 14449   00314C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14450   003150  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14451   003154  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14452   003158  341C               	rlcf	(??___flmul+3)^0,w,c
 14453   00315A  321C               	rrcf	(??___flmul+3)^0,f,c
 14454   00315C  321B               	rrcf	(??___flmul+2)^0,f,c
 14455   00315E  321A               	rrcf	(??___flmul+1)^0,f,c
 14456   003160  3219               	rrcf	??___flmul^0,f,c
 14457   003162  C019  F024         	movff	??___flmul,___flmul@prod
 14458   003166  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14459   00316A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14460   00316E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14461   003172  4A28               	infsnz	___flmul@temp^0,f,c
 14462   003174  2A29               	incf	(___flmul@temp+1)^0,f,c
 14463   003176                     l4467:
 14464   003176  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14465   003178  EFC6  F018         	goto	u4031
 14466   00317C  5029               	movf	(___flmul@temp+1)^0,w,c
 14467   00317E  E108               	bnz	u4030
 14468   003180  2828               	incf	___flmul@temp^0,w,c
 14469   003182  A0D8               	btfss	status,0,c
 14470   003184  EFC6  F018         	goto	u4031
 14471   003188  EFC8  F018         	goto	u4030
 14472   00318C                     u4031:
 14473   00318C  EFD2  F018         	goto	l4471
 14474   003190                     u4030:
 14475   003190  0E00               	movlw	0
 14476   003192  6E24               	movwf	___flmul@prod^0,c
 14477   003194  0E00               	movlw	0
 14478   003196  6E25               	movwf	(___flmul@prod+1)^0,c
 14479   003198  0E80               	movlw	128
 14480   00319A  6E26               	movwf	(___flmul@prod+2)^0,c
 14481   00319C  0E7F               	movlw	127
 14482   00319E  6E27               	movwf	(___flmul@prod+3)^0,c
 14483   0031A0  EF00  F019         	goto	l4483
 14484   0031A4                     l4471:
 14485   0031A4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14486   0031A6  EFDF  F018         	goto	u4040
 14487   0031AA  5029               	movf	(___flmul@temp+1)^0,w,c
 14488   0031AC  E106               	bnz	u4041
 14489   0031AE  0428               	decf	___flmul@temp^0,w,c
 14490   0031B0  B0D8               	btfsc	status,0,c
 14491   0031B2  EFDD  F018         	goto	u4041
 14492   0031B6  EFDF  F018         	goto	u4040
 14493   0031BA                     u4041:
 14494   0031BA  EFEB  F018         	goto	l1325
 14495   0031BE                     u4040:
 14496   0031BE  0E00               	movlw	0
 14497   0031C0  6E24               	movwf	___flmul@prod^0,c
 14498   0031C2  0E00               	movlw	0
 14499   0031C4  6E25               	movwf	(___flmul@prod+1)^0,c
 14500   0031C6  0E00               	movlw	0
 14501   0031C8  6E26               	movwf	(___flmul@prod+2)^0,c
 14502   0031CA  0E00               	movlw	0
 14503   0031CC  6E27               	movwf	(___flmul@prod+3)^0,c
 14504   0031CE  0E00               	movlw	0
 14505   0031D0  6E1D               	movwf	___flmul@sign^0,c
 14506   0031D2  EF00  F019         	goto	l4483
 14507   0031D6                     l1325:
 14508   0031D6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14509   0031DA  0EFF               	movlw	255
 14510   0031DC  1624               	andwf	___flmul@prod^0,f,c
 14511   0031DE  0EFF               	movlw	255
 14512   0031E0  1625               	andwf	(___flmul@prod+1)^0,f,c
 14513   0031E2  0E7F               	movlw	127
 14514   0031E4  1626               	andwf	(___flmul@prod+2)^0,f,c
 14515   0031E6  0E00               	movlw	0
 14516   0031E8  1627               	andwf	(___flmul@prod+3)^0,f,c
 14517   0031EA  A023               	btfss	___flmul@bexp^0,0,c
 14518   0031EC  EFFA  F018         	goto	u4051
 14519   0031F0  EFFC  F018         	goto	u4050
 14520   0031F4                     u4051:
 14521   0031F4  EFFD  F018         	goto	l4481
 14522   0031F8                     u4050:
 14523   0031F8  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14524   0031FA                     l4481:
 14525   0031FA  90D8               	bcf	status,0,c
 14526   0031FC  3023               	rrcf	___flmul@bexp^0,w,c
 14527   0031FE  6E27               	movwf	(___flmul@prod+3)^0,c
 14528   003200                     l4483:
 14529   003200  501D               	movf	___flmul@sign^0,w,c
 14530   003202  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14531   003204  C024  F011         	movff	___flmul@prod,?___flmul
 14532   003208  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14533   00320C  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14534   003210  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14535   003214                     l1312:
 14536   003214  0012               	return		;funcret
 14537   003216                     __end_of___flmul:
 14538                           	callstack 0
 14539                           
 14540 ;; *************** function ___flge *****************
 14541 ;; Defined at:
 14542 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;  ff1             4   41[COMRAM] unsigned char 
 14545 ;;  ff2             4   45[COMRAM] unsigned char 
 14546 ;; Auto vars:     Size  Location     Type
 14547 ;;		None
 14548 ;; Return value:  Size  Location     Type
 14549 ;;		None               void
 14550 ;; Registers used:
 14551 ;;		wreg, status,2, status,0
 14552 ;; Tracked objects:
 14553 ;;		On entry : 0/0
 14554 ;;		On exit  : 0/0
 14555 ;;		Unchanged: 0/0
 14556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14557 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14559 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14560 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14561 ;;Total ram usage:       12 bytes
 14562 ;; Hardware stack levels used: 1
 14563 ;; This function calls:
 14564 ;;		Nothing
 14565 ;; This function is called by:
 14566 ;;		_Colour_decider
 14567 ;;		_efgtoa
 14568 ;; This function uses a non-reentrant model
 14569 ;;
 14570                           
 14571                           	psect	text76
 14572   004C12                     __ptext76:
 14573                           	callstack 0
 14574   004C12                     ___flge:
 14575                           	callstack 26
 14576   004C12  0E00               	movlw	0
 14577   004C14  142A               	andwf	___flge@ff1^0,w,c
 14578   004C16  6E32               	movwf	??___flge^0,c
 14579   004C18  0E00               	movlw	0
 14580   004C1A  142B               	andwf	(___flge@ff1+1)^0,w,c
 14581   004C1C  6E33               	movwf	(??___flge+1)^0,c
 14582   004C1E  0E80               	movlw	128
 14583   004C20  142C               	andwf	(___flge@ff1+2)^0,w,c
 14584   004C22  6E34               	movwf	(??___flge+2)^0,c
 14585   004C24  0E7F               	movlw	127
 14586   004C26  142D               	andwf	(___flge@ff1+3)^0,w,c
 14587   004C28  6E35               	movwf	(??___flge+3)^0,c
 14588   004C2A  5032               	movf	??___flge^0,w,c
 14589   004C2C  1033               	iorwf	(??___flge+1)^0,w,c
 14590   004C2E  1034               	iorwf	(??___flge+2)^0,w,c
 14591   004C30  1035               	iorwf	(??___flge+3)^0,w,c
 14592   004C32  A4D8               	btfss	status,2,c
 14593   004C34  EF1E  F026         	goto	u4091
 14594   004C38  EF20  F026         	goto	u4090
 14595   004C3C                     u4091:
 14596   004C3C  EF28  F026         	goto	l4515
 14597   004C40                     u4090:
 14598   004C40  0E00               	movlw	0
 14599   004C42  6E2A               	movwf	___flge@ff1^0,c
 14600   004C44  0E00               	movlw	0
 14601   004C46  6E2B               	movwf	(___flge@ff1+1)^0,c
 14602   004C48  0E00               	movlw	0
 14603   004C4A  6E2C               	movwf	(___flge@ff1+2)^0,c
 14604   004C4C  0E00               	movlw	0
 14605   004C4E  6E2D               	movwf	(___flge@ff1+3)^0,c
 14606   004C50                     l4515:
 14607   004C50  0E00               	movlw	0
 14608   004C52  142E               	andwf	___flge@ff2^0,w,c
 14609   004C54  6E32               	movwf	??___flge^0,c
 14610   004C56  0E00               	movlw	0
 14611   004C58  142F               	andwf	(___flge@ff2+1)^0,w,c
 14612   004C5A  6E33               	movwf	(??___flge+1)^0,c
 14613   004C5C  0E80               	movlw	128
 14614   004C5E  1430               	andwf	(___flge@ff2+2)^0,w,c
 14615   004C60  6E34               	movwf	(??___flge+2)^0,c
 14616   004C62  0E7F               	movlw	127
 14617   004C64  1431               	andwf	(___flge@ff2+3)^0,w,c
 14618   004C66  6E35               	movwf	(??___flge+3)^0,c
 14619   004C68  5032               	movf	??___flge^0,w,c
 14620   004C6A  1033               	iorwf	(??___flge+1)^0,w,c
 14621   004C6C  1034               	iorwf	(??___flge+2)^0,w,c
 14622   004C6E  1035               	iorwf	(??___flge+3)^0,w,c
 14623   004C70  A4D8               	btfss	status,2,c
 14624   004C72  EF3D  F026         	goto	u4101
 14625   004C76  EF3F  F026         	goto	u4100
 14626   004C7A                     u4101:
 14627   004C7A  EF47  F026         	goto	l4519
 14628   004C7E                     u4100:
 14629   004C7E  0E00               	movlw	0
 14630   004C80  6E2E               	movwf	___flge@ff2^0,c
 14631   004C82  0E00               	movlw	0
 14632   004C84  6E2F               	movwf	(___flge@ff2+1)^0,c
 14633   004C86  0E00               	movlw	0
 14634   004C88  6E30               	movwf	(___flge@ff2+2)^0,c
 14635   004C8A  0E00               	movlw	0
 14636   004C8C  6E31               	movwf	(___flge@ff2+3)^0,c
 14637   004C8E                     l4519:
 14638   004C8E  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14639   004C90  EF4C  F026         	goto	u4111
 14640   004C94  EF4E  F026         	goto	u4110
 14641   004C98                     u4111:
 14642   004C98  EF57  F026         	goto	l4523
 14643   004C9C                     u4110:
 14644   004C9C  6C2A               	negf	___flge@ff1^0,c
 14645   004C9E  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14646   004CA0  B0D8               	btfsc	status,0,c
 14647   004CA2  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14648   004CA4  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14649   004CA6  B0D8               	btfsc	status,0,c
 14650   004CA8  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14651   004CAA  0E80               	movlw	128
 14652   004CAC  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14653   004CAE                     l4523:
 14654   004CAE  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14655   004CB0  EF5C  F026         	goto	u4121
 14656   004CB4  EF5E  F026         	goto	u4120
 14657   004CB8                     u4121:
 14658   004CB8  EF67  F026         	goto	l959
 14659   004CBC                     u4120:
 14660   004CBC  6C2E               	negf	___flge@ff2^0,c
 14661   004CBE  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14662   004CC0  B0D8               	btfsc	status,0,c
 14663   004CC2  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14664   004CC4  1E30               	comf	(___flge@ff2+2)^0,f,c
 14665   004CC6  B0D8               	btfsc	status,0,c
 14666   004CC8  2A30               	incf	(___flge@ff2+2)^0,f,c
 14667   004CCA  0E80               	movlw	128
 14668   004CCC  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14669   004CCE                     l959:
 14670   004CCE  0E00               	movlw	0
 14671   004CD0  1A2A               	xorwf	___flge@ff1^0,f,c
 14672   004CD2  0E00               	movlw	0
 14673   004CD4  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14674   004CD6  0E00               	movlw	0
 14675   004CD8  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14676   004CDA  0E80               	movlw	128
 14677   004CDC  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14678   004CDE  0E00               	movlw	0
 14679   004CE0  1A2E               	xorwf	___flge@ff2^0,f,c
 14680   004CE2  0E00               	movlw	0
 14681   004CE4  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14682   004CE6  0E00               	movlw	0
 14683   004CE8  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14684   004CEA  0E80               	movlw	128
 14685   004CEC  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14686   004CEE  502E               	movf	___flge@ff2^0,w,c
 14687   004CF0  5C2A               	subwf	___flge@ff1^0,w,c
 14688   004CF2  502F               	movf	(___flge@ff2+1)^0,w,c
 14689   004CF4  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14690   004CF6  5030               	movf	(___flge@ff2+2)^0,w,c
 14691   004CF8  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14692   004CFA  5031               	movf	(___flge@ff2+3)^0,w,c
 14693   004CFC  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14694   004CFE  B0D8               	btfsc	status,0,c
 14695   004D00  EF84  F026         	goto	u4131
 14696   004D04  EF86  F026         	goto	u4130
 14697   004D08                     u4131:
 14698   004D08  EF89  F026         	goto	l4529
 14699   004D0C                     u4130:
 14700   004D0C  90D8               	bcf	status,0,c
 14701   004D0E  EF8A  F026         	goto	l964
 14702   004D12                     l4529:
 14703   004D12  80D8               	bsf	status,0,c
 14704   004D14                     l964:
 14705   004D14  0012               	return		;funcret
 14706   004D16                     __end_of___flge:
 14707                           	callstack 0
 14708                           
 14709 ;; *************** function ___fleq *****************
 14710 ;; Defined at:
 14711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14712 ;; Parameters:    Size  Location     Type
 14713 ;;  ff1             4   49[COMRAM] unsigned char 
 14714 ;;  ff2             4   53[COMRAM] unsigned char 
 14715 ;; Auto vars:     Size  Location     Type
 14716 ;;		None
 14717 ;; Return value:  Size  Location     Type
 14718 ;;		None               void
 14719 ;; Registers used:
 14720 ;;		wreg, status,2, status,0
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14726 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14728 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14729 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14730 ;;Total ram usage:       12 bytes
 14731 ;; Hardware stack levels used: 1
 14732 ;; This function calls:
 14733 ;;		Nothing
 14734 ;; This function is called by:
 14735 ;;		_Colour_decider
 14736 ;;		_efgtoa
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740                           	psect	text77
 14741   0050F4                     __ptext77:
 14742                           	callstack 0
 14743   0050F4                     ___fleq:
 14744                           	callstack 26
 14745   0050F4  0E00               	movlw	0
 14746   0050F6  1432               	andwf	___fleq@ff1^0,w,c
 14747   0050F8  6E3A               	movwf	??___fleq^0,c
 14748   0050FA  0E00               	movlw	0
 14749   0050FC  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14750   0050FE  6E3B               	movwf	(??___fleq+1)^0,c
 14751   005100  0E80               	movlw	128
 14752   005102  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14753   005104  6E3C               	movwf	(??___fleq+2)^0,c
 14754   005106  0E7F               	movlw	127
 14755   005108  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14756   00510A  6E3D               	movwf	(??___fleq+3)^0,c
 14757   00510C  503A               	movf	??___fleq^0,w,c
 14758   00510E  103B               	iorwf	(??___fleq+1)^0,w,c
 14759   005110  103C               	iorwf	(??___fleq+2)^0,w,c
 14760   005112  103D               	iorwf	(??___fleq+3)^0,w,c
 14761   005114  A4D8               	btfss	status,2,c
 14762   005116  EF8F  F028         	goto	u4061
 14763   00511A  EF91  F028         	goto	u4060
 14764   00511E                     u4061:
 14765   00511E  EF99  F028         	goto	l4499
 14766   005122                     u4060:
 14767   005122  0E00               	movlw	0
 14768   005124  6E32               	movwf	___fleq@ff1^0,c
 14769   005126  0E00               	movlw	0
 14770   005128  6E33               	movwf	(___fleq@ff1+1)^0,c
 14771   00512A  0E00               	movlw	0
 14772   00512C  6E34               	movwf	(___fleq@ff1+2)^0,c
 14773   00512E  0E00               	movlw	0
 14774   005130  6E35               	movwf	(___fleq@ff1+3)^0,c
 14775   005132                     l4499:
 14776   005132  0E00               	movlw	0
 14777   005134  1436               	andwf	___fleq@ff2^0,w,c
 14778   005136  6E3A               	movwf	??___fleq^0,c
 14779   005138  0E00               	movlw	0
 14780   00513A  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14781   00513C  6E3B               	movwf	(??___fleq+1)^0,c
 14782   00513E  0E80               	movlw	128
 14783   005140  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14784   005142  6E3C               	movwf	(??___fleq+2)^0,c
 14785   005144  0E7F               	movlw	127
 14786   005146  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14787   005148  6E3D               	movwf	(??___fleq+3)^0,c
 14788   00514A  503A               	movf	??___fleq^0,w,c
 14789   00514C  103B               	iorwf	(??___fleq+1)^0,w,c
 14790   00514E  103C               	iorwf	(??___fleq+2)^0,w,c
 14791   005150  103D               	iorwf	(??___fleq+3)^0,w,c
 14792   005152  A4D8               	btfss	status,2,c
 14793   005154  EFAE  F028         	goto	u4071
 14794   005158  EFB0  F028         	goto	u4070
 14795   00515C                     u4071:
 14796   00515C  EFB8  F028         	goto	l4503
 14797   005160                     u4070:
 14798   005160  0E00               	movlw	0
 14799   005162  6E36               	movwf	___fleq@ff2^0,c
 14800   005164  0E00               	movlw	0
 14801   005166  6E37               	movwf	(___fleq@ff2+1)^0,c
 14802   005168  0E00               	movlw	0
 14803   00516A  6E38               	movwf	(___fleq@ff2+2)^0,c
 14804   00516C  0E00               	movlw	0
 14805   00516E  6E39               	movwf	(___fleq@ff2+3)^0,c
 14806   005170                     l4503:
 14807   005170  5036               	movf	___fleq@ff2^0,w,c
 14808   005172  1832               	xorwf	___fleq@ff1^0,w,c
 14809   005174  E10F               	bnz	u4080
 14810   005176  5037               	movf	(___fleq@ff2+1)^0,w,c
 14811   005178  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14812   00517A  E10C               	bnz	u4080
 14813   00517C  5038               	movf	(___fleq@ff2+2)^0,w,c
 14814   00517E  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14815   005180  E109               	bnz	u4080
 14816   005182  5039               	movf	(___fleq@ff2+3)^0,w,c
 14817   005184  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14818   005186  B4D8               	btfsc	status,2,c
 14819   005188  EFC8  F028         	goto	u4081
 14820   00518C  EFCA  F028         	goto	u4080
 14821   005190                     u4081:
 14822   005190  EFCD  F028         	goto	l4507
 14823   005194                     u4080:
 14824   005194  90D8               	bcf	status,0,c
 14825   005196  EFCE  F028         	goto	l953
 14826   00519A                     l4507:
 14827   00519A  80D8               	bsf	status,0,c
 14828   00519C                     l953:
 14829   00519C  0012               	return		;funcret
 14830   00519E                     __end_of___fleq:
 14831                           	callstack 0
 14832                           
 14833 ;; *************** function ___fldiv *****************
 14834 ;; Defined at:
 14835 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14836 ;; Parameters:    Size  Location     Type
 14837 ;;  b               4   49[COMRAM] unsigned char 
 14838 ;;  a               4   53[COMRAM] unsigned char 
 14839 ;; Auto vars:     Size  Location     Type
 14840 ;;  grs             4   68[COMRAM] unsigned long 
 14841 ;;  rem             4   61[COMRAM] unsigned long 
 14842 ;;  new_exp         2   66[COMRAM] short 
 14843 ;;  aexp            1   73[COMRAM] unsigned char 
 14844 ;;  bexp            1   72[COMRAM] unsigned char 
 14845 ;;  sign            1   65[COMRAM] unsigned char 
 14846 ;; Return value:  Size  Location     Type
 14847 ;;                  4   49[COMRAM] unsigned char 
 14848 ;; Registers used:
 14849 ;;		wreg, status,2, status,0
 14850 ;; Tracked objects:
 14851 ;;		On entry : 0/0
 14852 ;;		On exit  : 0/0
 14853 ;;		Unchanged: 0/0
 14854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14855 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14856 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14858 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14859 ;;Total ram usage:       25 bytes
 14860 ;; Hardware stack levels used: 1
 14861 ;; This function calls:
 14862 ;;		Nothing
 14863 ;; This function is called by:
 14864 ;;		_colour_rel
 14865 ;;		_Colour_decider
 14866 ;;		_efgtoa
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870                           	psect	text78
 14871   003216                     __ptext78:
 14872                           	callstack 0
 14873   003216                     ___fldiv:
 14874                           	callstack 26
 14875   003216  5035               	movf	(___fldiv@b+3)^0,w,c
 14876   003218  0B80               	andlw	128
 14877   00321A  6E42               	movwf	___fldiv@sign^0,c
 14878   00321C  5035               	movf	(___fldiv@b+3)^0,w,c
 14879   00321E  2435               	addwf	(___fldiv@b+3)^0,w,c
 14880   003220  6E49               	movwf	___fldiv@bexp^0,c
 14881   003222  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14882   003224  EF16  F019         	goto	u3641
 14883   003228  EF18  F019         	goto	u3640
 14884   00322C                     u3641:
 14885   00322C  EF19  F019         	goto	l4227
 14886   003230                     u3640:
 14887   003230  8049               	bsf	___fldiv@bexp^0,0,c
 14888   003232                     l4227:
 14889   003232  5049               	movf	___fldiv@bexp^0,w,c
 14890   003234  B4D8               	btfsc	status,2,c
 14891   003236  EF1F  F019         	goto	u3651
 14892   00323A  EF21  F019         	goto	u3650
 14893   00323E                     u3651:
 14894   00323E  EF36  F019         	goto	l4237
 14895   003242                     u3650:
 14896   003242  2849               	incf	___fldiv@bexp^0,w,c
 14897   003244  A4D8               	btfss	status,2,c
 14898   003246  EF27  F019         	goto	u3661
 14899   00324A  EF29  F019         	goto	u3660
 14900   00324E                     u3661:
 14901   00324E  EF31  F019         	goto	l4233
 14902   003252                     u3660:
 14903   003252  0E00               	movlw	0
 14904   003254  6E32               	movwf	___fldiv@b^0,c
 14905   003256  0E00               	movlw	0
 14906   003258  6E33               	movwf	(___fldiv@b+1)^0,c
 14907   00325A  0E00               	movlw	0
 14908   00325C  6E34               	movwf	(___fldiv@b+2)^0,c
 14909   00325E  0E00               	movlw	0
 14910   003260  6E35               	movwf	(___fldiv@b+3)^0,c
 14911   003262                     l4233:
 14912   003262  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14913   003264  0E00               	movlw	0
 14914   003266  6E35               	movwf	(___fldiv@b+3)^0,c
 14915   003268  EF3E  F019         	goto	l4239
 14916   00326C                     l4237:
 14917   00326C  0E00               	movlw	0
 14918   00326E  6E32               	movwf	___fldiv@b^0,c
 14919   003270  0E00               	movlw	0
 14920   003272  6E33               	movwf	(___fldiv@b+1)^0,c
 14921   003274  0E00               	movlw	0
 14922   003276  6E34               	movwf	(___fldiv@b+2)^0,c
 14923   003278  0E00               	movlw	0
 14924   00327A  6E35               	movwf	(___fldiv@b+3)^0,c
 14925   00327C                     l4239:
 14926   00327C  5039               	movf	(___fldiv@a+3)^0,w,c
 14927   00327E  0B80               	andlw	128
 14928   003280  1A42               	xorwf	___fldiv@sign^0,f,c
 14929   003282  5039               	movf	(___fldiv@a+3)^0,w,c
 14930   003284  2439               	addwf	(___fldiv@a+3)^0,w,c
 14931   003286  6E4A               	movwf	___fldiv@aexp^0,c
 14932   003288  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14933   00328A  EF49  F019         	goto	u3671
 14934   00328E  EF4B  F019         	goto	u3670
 14935   003292                     u3671:
 14936   003292  EF4C  F019         	goto	l4247
 14937   003296                     u3670:
 14938   003296  804A               	bsf	___fldiv@aexp^0,0,c
 14939   003298                     l4247:
 14940   003298  504A               	movf	___fldiv@aexp^0,w,c
 14941   00329A  B4D8               	btfsc	status,2,c
 14942   00329C  EF52  F019         	goto	u3681
 14943   0032A0  EF54  F019         	goto	u3680
 14944   0032A4                     u3681:
 14945   0032A4  EF69  F019         	goto	l4257
 14946   0032A8                     u3680:
 14947   0032A8  284A               	incf	___fldiv@aexp^0,w,c
 14948   0032AA  A4D8               	btfss	status,2,c
 14949   0032AC  EF5A  F019         	goto	u3691
 14950   0032B0  EF5C  F019         	goto	u3690
 14951   0032B4                     u3691:
 14952   0032B4  EF64  F019         	goto	l4253
 14953   0032B8                     u3690:
 14954   0032B8  0E00               	movlw	0
 14955   0032BA  6E36               	movwf	___fldiv@a^0,c
 14956   0032BC  0E00               	movlw	0
 14957   0032BE  6E37               	movwf	(___fldiv@a+1)^0,c
 14958   0032C0  0E00               	movlw	0
 14959   0032C2  6E38               	movwf	(___fldiv@a+2)^0,c
 14960   0032C4  0E00               	movlw	0
 14961   0032C6  6E39               	movwf	(___fldiv@a+3)^0,c
 14962   0032C8                     l4253:
 14963   0032C8  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14964   0032CA  0E00               	movlw	0
 14965   0032CC  6E39               	movwf	(___fldiv@a+3)^0,c
 14966   0032CE  EF71  F019         	goto	l4259
 14967   0032D2                     l4257:
 14968   0032D2  0E00               	movlw	0
 14969   0032D4  6E36               	movwf	___fldiv@a^0,c
 14970   0032D6  0E00               	movlw	0
 14971   0032D8  6E37               	movwf	(___fldiv@a+1)^0,c
 14972   0032DA  0E00               	movlw	0
 14973   0032DC  6E38               	movwf	(___fldiv@a+2)^0,c
 14974   0032DE  0E00               	movlw	0
 14975   0032E0  6E39               	movwf	(___fldiv@a+3)^0,c
 14976   0032E2                     l4259:
 14977   0032E2  5036               	movf	___fldiv@a^0,w,c
 14978   0032E4  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14979   0032E6  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14980   0032E8  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14981   0032EA  A4D8               	btfss	status,2,c
 14982   0032EC  EF7A  F019         	goto	u3701
 14983   0032F0  EF7C  F019         	goto	u3700
 14984   0032F4                     u3701:
 14985   0032F4  EF94  F019         	goto	l4271
 14986   0032F8                     u3700:
 14987   0032F8  0E00               	movlw	0
 14988   0032FA  6E32               	movwf	___fldiv@b^0,c
 14989   0032FC  0E00               	movlw	0
 14990   0032FE  6E33               	movwf	(___fldiv@b+1)^0,c
 14991   003300  0E00               	movlw	0
 14992   003302  6E34               	movwf	(___fldiv@b+2)^0,c
 14993   003304  0E00               	movlw	0
 14994   003306  6E35               	movwf	(___fldiv@b+3)^0,c
 14995   003308  0E80               	movlw	128
 14996   00330A  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14997   00330C  0E7F               	movlw	127
 14998   00330E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14999   003310                     l4265:
 15000   003310  5042               	movf	___fldiv@sign^0,w,c
 15001   003312  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15002   003314  C032  F032         	movff	___fldiv@b,?___fldiv
 15003   003318  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15004   00331C  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15005   003320  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15006   003324  EFD7  F01A         	goto	l1276
 15007   003328                     l4271:
 15008   003328  5049               	movf	___fldiv@bexp^0,w,c
 15009   00332A  A4D8               	btfss	status,2,c
 15010   00332C  EF9A  F019         	goto	u3711
 15011   003330  EF9C  F019         	goto	u3710
 15012   003334                     u3711:
 15013   003334  EFA6  F019         	goto	l4279
 15014   003338                     u3710:
 15015   003338  0E00               	movlw	0
 15016   00333A  6E32               	movwf	?___fldiv^0,c
 15017   00333C  0E00               	movlw	0
 15018   00333E  6E33               	movwf	(?___fldiv+1)^0,c
 15019   003340  0E00               	movlw	0
 15020   003342  6E34               	movwf	(?___fldiv+2)^0,c
 15021   003344  0E00               	movlw	0
 15022   003346  6E35               	movwf	(?___fldiv+3)^0,c
 15023   003348  EFD7  F01A         	goto	l1276
 15024   00334C                     l4279:
 15025   00334C  504A               	movf	___fldiv@aexp^0,w,c
 15026   00334E  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15027   003352  6A3B               	clrf	(??___fldiv+1)^0,c
 15028   003354  5E3A               	subwf	??___fldiv^0,f,c
 15029   003356  0E00               	movlw	0
 15030   003358  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15031   00335A  0E7F               	movlw	127
 15032   00335C  243A               	addwf	??___fldiv^0,w,c
 15033   00335E  6E43               	movwf	___fldiv@new_exp^0,c
 15034   003360  0E00               	movlw	0
 15035   003362  203B               	addwfc	(??___fldiv+1)^0,w,c
 15036   003364  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15037   003366  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15038   00336A  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15039   00336E  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15040   003372  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15041   003376  0E00               	movlw	0
 15042   003378  6E32               	movwf	___fldiv@b^0,c
 15043   00337A  0E00               	movlw	0
 15044   00337C  6E33               	movwf	(___fldiv@b+1)^0,c
 15045   00337E  0E00               	movlw	0
 15046   003380  6E34               	movwf	(___fldiv@b+2)^0,c
 15047   003382  0E00               	movlw	0
 15048   003384  6E35               	movwf	(___fldiv@b+3)^0,c
 15049   003386  0E00               	movlw	0
 15050   003388  6E45               	movwf	___fldiv@grs^0,c
 15051   00338A  0E00               	movlw	0
 15052   00338C  6E46               	movwf	(___fldiv@grs+1)^0,c
 15053   00338E  0E00               	movlw	0
 15054   003390  6E47               	movwf	(___fldiv@grs+2)^0,c
 15055   003392  0E00               	movlw	0
 15056   003394  6E48               	movwf	(___fldiv@grs+3)^0,c
 15057   003396  0E00               	movlw	0
 15058   003398  6E4A               	movwf	___fldiv@aexp^0,c
 15059   00339A  EF07  F01A         	goto	l1278
 15060   00339E                     l4289:
 15061   00339E  504A               	movf	___fldiv@aexp^0,w,c
 15062   0033A0  B4D8               	btfsc	status,2,c
 15063   0033A2  EFD5  F019         	goto	u3721
 15064   0033A6  EFD7  F019         	goto	u3720
 15065   0033AA                     u3721:
 15066   0033AA  EFEE  F019         	goto	l4297
 15067   0033AE                     u3720:
 15068   0033AE  90D8               	bcf	status,0,c
 15069   0033B0  363E               	rlcf	___fldiv@rem^0,f,c
 15070   0033B2  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15071   0033B4  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15072   0033B6  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15073   0033B8  90D8               	bcf	status,0,c
 15074   0033BA  3632               	rlcf	___fldiv@b^0,f,c
 15075   0033BC  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15076   0033BE  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15077   0033C0  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15078   0033C2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15079   0033C4  EFE6  F019         	goto	u3731
 15080   0033C8  EFE8  F019         	goto	u3730
 15081   0033CC                     u3731:
 15082   0033CC  EFE9  F019         	goto	l1281
 15083   0033D0                     u3730:
 15084   0033D0  8032               	bsf	___fldiv@b^0,0,c
 15085   0033D2                     l1281:
 15086   0033D2  90D8               	bcf	status,0,c
 15087   0033D4  3645               	rlcf	___fldiv@grs^0,f,c
 15088   0033D6  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15089   0033D8  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15090   0033DA  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15091   0033DC                     l4297:
 15092   0033DC  5036               	movf	___fldiv@a^0,w,c
 15093   0033DE  5C3E               	subwf	___fldiv@rem^0,w,c
 15094   0033E0  5037               	movf	(___fldiv@a+1)^0,w,c
 15095   0033E2  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15096   0033E4  5038               	movf	(___fldiv@a+2)^0,w,c
 15097   0033E6  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15098   0033E8  5039               	movf	(___fldiv@a+3)^0,w,c
 15099   0033EA  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15100   0033EC  A0D8               	btfss	status,0,c
 15101   0033EE  EFFB  F019         	goto	u3741
 15102   0033F2  EFFD  F019         	goto	u3740
 15103   0033F6                     u3741:
 15104   0033F6  EF06  F01A         	goto	l4303
 15105   0033FA                     u3740:
 15106   0033FA  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15107   0033FC  5036               	movf	___fldiv@a^0,w,c
 15108   0033FE  5E3E               	subwf	___fldiv@rem^0,f,c
 15109   003400  5037               	movf	(___fldiv@a+1)^0,w,c
 15110   003402  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15111   003404  5038               	movf	(___fldiv@a+2)^0,w,c
 15112   003406  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15113   003408  5039               	movf	(___fldiv@a+3)^0,w,c
 15114   00340A  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15115   00340C                     l4303:
 15116   00340C  2A4A               	incf	___fldiv@aexp^0,f,c
 15117   00340E                     l1278:
 15118   00340E  0E19               	movlw	25
 15119   003410  644A               	cpfsgt	___fldiv@aexp^0,c
 15120   003412  EF0D  F01A         	goto	u3751
 15121   003416  EF0F  F01A         	goto	u3750
 15122   00341A                     u3751:
 15123   00341A  EFCF  F019         	goto	l4289
 15124   00341E                     u3750:
 15125   00341E  503E               	movf	___fldiv@rem^0,w,c
 15126   003420  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15127   003422  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15128   003424  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15129   003426  B4D8               	btfsc	status,2,c
 15130   003428  EF18  F01A         	goto	u3761
 15131   00342C  EF1A  F01A         	goto	u3760
 15132   003430                     u3761:
 15133   003430  EF32  F01A         	goto	l4315
 15134   003434                     u3760:
 15135   003434  8045               	bsf	___fldiv@grs^0,0,c
 15136   003436  EF32  F01A         	goto	l4315
 15137   00343A                     l4309:
 15138   00343A  90D8               	bcf	status,0,c
 15139   00343C  3632               	rlcf	___fldiv@b^0,f,c
 15140   00343E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15141   003440  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15142   003442  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15143   003444  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15144   003446  EF27  F01A         	goto	u3771
 15145   00344A  EF29  F01A         	goto	u3770
 15146   00344E                     u3771:
 15147   00344E  EF2A  F01A         	goto	l1287
 15148   003452                     u3770:
 15149   003452  8032               	bsf	___fldiv@b^0,0,c
 15150   003454                     l1287:
 15151   003454  90D8               	bcf	status,0,c
 15152   003456  3645               	rlcf	___fldiv@grs^0,f,c
 15153   003458  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15154   00345A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15155   00345C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15156   00345E  0643               	decf	___fldiv@new_exp^0,f,c
 15157   003460  A0D8               	btfss	status,0,c
 15158   003462  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15159   003464                     l4315:
 15160   003464  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15161   003466  EF37  F01A         	goto	u3781
 15162   00346A  EF39  F01A         	goto	u3780
 15163   00346E                     u3781:
 15164   00346E  EF1D  F01A         	goto	l4309
 15165   003472                     u3780:
 15166   003472  0E00               	movlw	0
 15167   003474  6E4A               	movwf	___fldiv@aexp^0,c
 15168   003476  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15169   003478  EF40  F01A         	goto	u3791
 15170   00347C  EF42  F01A         	goto	u3790
 15171   003480                     u3791:
 15172   003480  EF66  F01A         	goto	l1289
 15173   003484                     u3790:
 15174   003484  0EFF               	movlw	255
 15175   003486  1445               	andwf	___fldiv@grs^0,w,c
 15176   003488  6E3A               	movwf	??___fldiv^0,c
 15177   00348A  0EFF               	movlw	255
 15178   00348C  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15179   00348E  6E3B               	movwf	(??___fldiv+1)^0,c
 15180   003490  0EFF               	movlw	255
 15181   003492  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15182   003494  6E3C               	movwf	(??___fldiv+2)^0,c
 15183   003496  0E7F               	movlw	127
 15184   003498  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15185   00349A  6E3D               	movwf	(??___fldiv+3)^0,c
 15186   00349C  503A               	movf	??___fldiv^0,w,c
 15187   00349E  103B               	iorwf	(??___fldiv+1)^0,w,c
 15188   0034A0  103C               	iorwf	(??___fldiv+2)^0,w,c
 15189   0034A2  103D               	iorwf	(??___fldiv+3)^0,w,c
 15190   0034A4  B4D8               	btfsc	status,2,c
 15191   0034A6  EF57  F01A         	goto	u3801
 15192   0034AA  EF59  F01A         	goto	u3800
 15193   0034AE                     u3801:
 15194   0034AE  EF5D  F01A         	goto	l1290
 15195   0034B2                     u3800:
 15196   0034B2                     l4323:
 15197   0034B2  0E01               	movlw	1
 15198   0034B4  6E4A               	movwf	___fldiv@aexp^0,c
 15199   0034B6  EF66  F01A         	goto	l1289
 15200   0034BA                     l1290:
 15201   0034BA  A032               	btfss	___fldiv@b^0,0,c
 15202   0034BC  EF62  F01A         	goto	u3811
 15203   0034C0  EF64  F01A         	goto	u3810
 15204   0034C4                     u3811:
 15205   0034C4  EF66  F01A         	goto	l1289
 15206   0034C8                     u3810:
 15207   0034C8  EF59  F01A         	goto	l4323
 15208   0034CC                     l1289:
 15209   0034CC  504A               	movf	___fldiv@aexp^0,w,c
 15210   0034CE  B4D8               	btfsc	status,2,c
 15211   0034D0  EF6C  F01A         	goto	u3821
 15212   0034D4  EF6E  F01A         	goto	u3820
 15213   0034D8                     u3821:
 15214   0034D8  EF92  F01A         	goto	l4335
 15215   0034DC                     u3820:
 15216   0034DC  0E01               	movlw	1
 15217   0034DE  2632               	addwf	___fldiv@b^0,f,c
 15218   0034E0  0E00               	movlw	0
 15219   0034E2  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15220   0034E4  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15221   0034E6  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15222   0034E8  A035               	btfss	(___fldiv@b+3)^0,0,c
 15223   0034EA  EF79  F01A         	goto	u3831
 15224   0034EE  EF7B  F01A         	goto	u3830
 15225   0034F2                     u3831:
 15226   0034F2  EF92  F01A         	goto	l4335
 15227   0034F6                     u3830:
 15228   0034F6  C032  F03A         	movff	___fldiv@b,??___fldiv
 15229   0034FA  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15230   0034FE  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15231   003502  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15232   003506  343D               	rlcf	(??___fldiv+3)^0,w,c
 15233   003508  323D               	rrcf	(??___fldiv+3)^0,f,c
 15234   00350A  323C               	rrcf	(??___fldiv+2)^0,f,c
 15235   00350C  323B               	rrcf	(??___fldiv+1)^0,f,c
 15236   00350E  323A               	rrcf	??___fldiv^0,f,c
 15237   003510  C03A  F032         	movff	??___fldiv,___fldiv@b
 15238   003514  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15239   003518  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15240   00351C  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15241   003520  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15242   003522  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15243   003524                     l4335:
 15244   003524  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15245   003526  EF9D  F01A         	goto	u3841
 15246   00352A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15247   00352C  E108               	bnz	u3840
 15248   00352E  2843               	incf	___fldiv@new_exp^0,w,c
 15249   003530  A0D8               	btfss	status,0,c
 15250   003532  EF9D  F01A         	goto	u3841
 15251   003536  EF9F  F01A         	goto	u3840
 15252   00353A                     u3841:
 15253   00353A  EFAA  F01A         	goto	l4339
 15254   00353E                     u3840:
 15255   00353E  0E00               	movlw	0
 15256   003540  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15257   003542  6843               	setf	___fldiv@new_exp^0,c
 15258   003544  0E00               	movlw	0
 15259   003546  6E32               	movwf	___fldiv@b^0,c
 15260   003548  0E00               	movlw	0
 15261   00354A  6E33               	movwf	(___fldiv@b+1)^0,c
 15262   00354C  0E00               	movlw	0
 15263   00354E  6E34               	movwf	(___fldiv@b+2)^0,c
 15264   003550  0E00               	movlw	0
 15265   003552  6E35               	movwf	(___fldiv@b+3)^0,c
 15266   003554                     l4339:
 15267   003554  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15268   003556  EFB7  F01A         	goto	u3850
 15269   00355A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15270   00355C  E106               	bnz	u3851
 15271   00355E  0443               	decf	___fldiv@new_exp^0,w,c
 15272   003560  B0D8               	btfsc	status,0,c
 15273   003562  EFB5  F01A         	goto	u3851
 15274   003566  EFB7  F01A         	goto	u3850
 15275   00356A                     u3851:
 15276   00356A  EFC5  F01A         	goto	l4343
 15277   00356E                     u3850:
 15278   00356E  0E00               	movlw	0
 15279   003570  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15280   003572  0E00               	movlw	0
 15281   003574  6E43               	movwf	___fldiv@new_exp^0,c
 15282   003576  0E00               	movlw	0
 15283   003578  6E32               	movwf	___fldiv@b^0,c
 15284   00357A  0E00               	movlw	0
 15285   00357C  6E33               	movwf	(___fldiv@b+1)^0,c
 15286   00357E  0E00               	movlw	0
 15287   003580  6E34               	movwf	(___fldiv@b+2)^0,c
 15288   003582  0E00               	movlw	0
 15289   003584  6E35               	movwf	(___fldiv@b+3)^0,c
 15290   003586  0E00               	movlw	0
 15291   003588  6E42               	movwf	___fldiv@sign^0,c
 15292   00358A                     l4343:
 15293   00358A  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15294   00358E  A049               	btfss	___fldiv@bexp^0,0,c
 15295   003590  EFCC  F01A         	goto	u3861
 15296   003594  EFCE  F01A         	goto	u3860
 15297   003598                     u3861:
 15298   003598  EFD1  F01A         	goto	l4349
 15299   00359C                     u3860:
 15300   00359C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15301   00359E  EFD2  F01A         	goto	l4351
 15302   0035A2                     l4349:
 15303   0035A2  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15304   0035A4                     l4351:
 15305   0035A4  90D8               	bcf	status,0,c
 15306   0035A6  3049               	rrcf	___fldiv@bexp^0,w,c
 15307   0035A8  6E35               	movwf	(___fldiv@b+3)^0,c
 15308   0035AA  EF88  F019         	goto	l4265
 15309   0035AE                     l1276:
 15310   0035AE  0012               	return		;funcret
 15311   0035B0                     __end_of___fldiv:
 15312                           	callstack 0
 15313                           
 15314                           	psect	rparam
 15315   000000                     
 15316                           	psect	idloc
 15317                           
 15318                           ;Config register IDLOC0 @ 0x200000
 15319                           ;	unspecified, using default values
 15320   200000                     	org	2097152
 15321   200000  0FFF               	dw	4095
 15322                           
 15323                           ;Config register IDLOC1 @ 0x200002
 15324                           ;	unspecified, using default values
 15325   200002                     	org	2097154
 15326   200002  0FFF               	dw	4095
 15327                           
 15328                           ;Config register IDLOC2 @ 0x200004
 15329                           ;	unspecified, using default values
 15330   200004                     	org	2097156
 15331   200004  0FFF               	dw	4095
 15332                           
 15333                           ;Config register IDLOC3 @ 0x200006
 15334                           ;	unspecified, using default values
 15335   200006                     	org	2097158
 15336   200006  0FFF               	dw	4095
 15337                           
 15338                           ;Config register IDLOC4 @ 0x200008
 15339                           ;	unspecified, using default values
 15340   200008                     	org	2097160
 15341   200008  0FFF               	dw	4095
 15342                           
 15343                           ;Config register IDLOC5 @ 0x20000A
 15344                           ;	unspecified, using default values
 15345   20000A                     	org	2097162
 15346   20000A  0FFF               	dw	4095
 15347                           
 15348                           ;Config register IDLOC6 @ 0x20000C
 15349                           ;	unspecified, using default values
 15350   20000C                     	org	2097164
 15351   20000C  0FFF               	dw	4095
 15352                           
 15353                           ;Config register IDLOC7 @ 0x20000E
 15354                           ;	unspecified, using default values
 15355   20000E                     	org	2097166
 15356   20000E  0FFF               	dw	4095
 15357                           
 15358                           	psect	config
 15359                           
 15360                           ;Config register CONFIG1L @ 0x300000
 15361                           ;	External Oscillator mode Selection bits
 15362                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15363                           ;	Power-up default value for COSC bits
 15364                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15365   300000                     	org	3145728
 15366   300000  AA                 	db	170
 15367                           
 15368                           ;Config register CONFIG1H @ 0x300001
 15369                           ;	unspecified, using default values
 15370                           ;	Clock Out Enable bit
 15371                           ;	CLKOUTEN = 0x1, unprogrammed default
 15372                           ;	Clock Switch Enable bit
 15373                           ;	CSWEN = 0x1, unprogrammed default
 15374                           ;	Fail-Safe Clock Monitor Enable bit
 15375                           ;	FCMEN = 0x1, unprogrammed default
 15376   300001                     	org	3145729
 15377   300001  FF                 	db	255
 15378                           
 15379                           ;Config register CONFIG2L @ 0x300002
 15380                           ;	unspecified, using default values
 15381                           ;	Master Clear Enable bit
 15382                           ;	MCLRE = 0x1, unprogrammed default
 15383                           ;	Power-up Timer Enable bit
 15384                           ;	PWRTE = 0x1, unprogrammed default
 15385                           ;	Low-power BOR enable bit
 15386                           ;	LPBOREN = 0x1, unprogrammed default
 15387                           ;	Brown-out Reset Enable bits
 15388                           ;	BOREN = 0x3, unprogrammed default
 15389   300002                     	org	3145730
 15390   300002  FF                 	db	255
 15391                           
 15392                           ;Config register CONFIG2H @ 0x300003
 15393                           ;	unspecified, using default values
 15394                           ;	Brown Out Reset Voltage selection bits
 15395                           ;	BORV = 0x3, unprogrammed default
 15396                           ;	ZCD Disable bit
 15397                           ;	ZCD = 0x1, unprogrammed default
 15398                           ;	PPSLOCK bit One-Way Set Enable bit
 15399                           ;	PPS1WAY = 0x1, unprogrammed default
 15400                           ;	Stack Full/Underflow Reset Enable bit
 15401                           ;	STVREN = 0x1, unprogrammed default
 15402                           ;	Debugger Enable bit
 15403                           ;	DEBUG = 0x1, unprogrammed default
 15404                           ;	Extended Instruction Set Enable bit
 15405                           ;	XINST = 0x1, unprogrammed default
 15406   300003                     	org	3145731
 15407   300003  FF                 	db	255
 15408                           
 15409                           ;Config register CONFIG3L @ 0x300004
 15410                           ;	WDT Period Select bits
 15411                           ;	WDTCPS = 0x1F, unprogrammed default
 15412                           ;	WDT operating mode
 15413                           ;	WDTE = OFF, WDT Disabled
 15414   300004                     	org	3145732
 15415   300004  9F                 	db	159
 15416                           
 15417                           ;Config register CONFIG3H @ 0x300005
 15418                           ;	unspecified, using default values
 15419                           ;	WDT Window Select bits
 15420                           ;	WDTCWS = 0x7, unprogrammed default
 15421                           ;	WDT input clock selector
 15422                           ;	WDTCCS = 0x7, unprogrammed default
 15423   300005                     	org	3145733
 15424   300005  FF                 	db	255
 15425                           
 15426                           ;Config register CONFIG4L @ 0x300006
 15427                           ;	unspecified, using default values
 15428                           ;	Write Protection Block 0
 15429                           ;	WRT0 = 0x1, unprogrammed default
 15430                           ;	Write Protection Block 1
 15431                           ;	WRT1 = 0x1, unprogrammed default
 15432                           ;	Write Protection Block 2
 15433                           ;	WRT2 = 0x1, unprogrammed default
 15434                           ;	Write Protection Block 3
 15435                           ;	WRT3 = 0x1, unprogrammed default
 15436                           ;	Write Protection Block 3
 15437                           ;	WRT4 = 0x1, unprogrammed default
 15438                           ;	Write Protection Block 3
 15439                           ;	WRT5 = 0x1, unprogrammed default
 15440                           ;	Write Protection Block 3
 15441                           ;	WRT6 = 0x1, unprogrammed default
 15442                           ;	Write Protection Block 3
 15443                           ;	WRT7 = 0x1, unprogrammed default
 15444   300006                     	org	3145734
 15445   300006  FF                 	db	255
 15446                           
 15447                           ;Config register CONFIG4H @ 0x300007
 15448                           ;	unspecified, using default values
 15449                           ;	Configuration Register Write Protection bit
 15450                           ;	WRTC = 0x1, unprogrammed default
 15451                           ;	Boot Block Write Protection bit
 15452                           ;	WRTB = 0x1, unprogrammed default
 15453                           ;	Data EEPROM Write Protection bit
 15454                           ;	WRTD = 0x1, unprogrammed default
 15455                           ;	Scanner Enable bit
 15456                           ;	SCANE = 0x1, unprogrammed default
 15457                           ;	Low Voltage Programming Enable bit
 15458                           ;	LVP = 0x1, unprogrammed default
 15459   300007                     	org	3145735
 15460   300007  FF                 	db	255
 15461                           
 15462                           ;Config register CONFIG5L @ 0x300008
 15463                           ;	unspecified, using default values
 15464                           ;	UserNVM Program Memory Code Protection bit
 15465                           ;	CP = 0x1, unprogrammed default
 15466                           ;	DataNVM Memory Code Protection bit
 15467                           ;	CPD = 0x1, unprogrammed default
 15468   300008                     	org	3145736
 15469   300008  FF                 	db	255
 15470                           
 15471                           ;Config register CONFIG5H @ 0x300009
 15472                           ;	unspecified, using default values
 15473   300009                     	org	3145737
 15474   300009  FF                 	db	255
 15475                           
 15476                           ;Config register CONFIG6L @ 0x30000A
 15477                           ;	unspecified, using default values
 15478                           ;	Table Read Protection Block 0
 15479                           ;	EBTR0 = 0x1, unprogrammed default
 15480                           ;	Table Read Protection Block 1
 15481                           ;	EBTR1 = 0x1, unprogrammed default
 15482                           ;	Table Read Protection Block 2
 15483                           ;	EBTR2 = 0x1, unprogrammed default
 15484                           ;	Table Read Protection Block 3
 15485                           ;	EBTR3 = 0x1, unprogrammed default
 15486                           ;	Table Read Protection Block 4
 15487                           ;	EBTR4 = 0x1, unprogrammed default
 15488                           ;	Table Read Protection Block 5
 15489                           ;	EBTR5 = 0x1, unprogrammed default
 15490                           ;	Table Read Protection Block 6
 15491                           ;	EBTR6 = 0x1, unprogrammed default
 15492                           ;	Table Read Protection Block 7
 15493                           ;	EBTR7 = 0x1, unprogrammed default
 15494   30000A                     	org	3145738
 15495   30000A  FF                 	db	255
 15496                           
 15497                           ;Config register CONFIG6H @ 0x30000B
 15498                           ;	unspecified, using default values
 15499                           ;	Boot Block Table Read Protection bit
 15500                           ;	EBTRB = 0x1, unprogrammed default
 15501   30000B                     	org	3145739
 15502   30000B  FF                 	db	255
 15503                           tosu	equ	0xFFF
 15504                           tosh	equ	0xFFE
 15505                           tosl	equ	0xFFD
 15506                           stkptr	equ	0xFFC
 15507                           pclatu	equ	0xFFB
 15508                           pclath	equ	0xFFA
 15509                           pcl	equ	0xFF9
 15510                           tblptru	equ	0xFF8
 15511                           tblptrh	equ	0xFF7
 15512                           tblptrl	equ	0xFF6
 15513                           tablat	equ	0xFF5
 15514                           prodh	equ	0xFF4
 15515                           prodl	equ	0xFF3
 15516                           indf0	equ	0xFEF
 15517                           postinc0	equ	0xFEE
 15518                           postdec0	equ	0xFED
 15519                           preinc0	equ	0xFEC
 15520                           plusw0	equ	0xFEB
 15521                           fsr0h	equ	0xFEA
 15522                           fsr0l	equ	0xFE9
 15523                           wreg	equ	0xFE8
 15524                           indf1	equ	0xFE7
 15525                           postinc1	equ	0xFE6
 15526                           postdec1	equ	0xFE5
 15527                           preinc1	equ	0xFE4
 15528                           plusw1	equ	0xFE3
 15529                           fsr1h	equ	0xFE2
 15530                           fsr1l	equ	0xFE1
 15531                           bsr	equ	0xFE0
 15532                           indf2	equ	0xFDF
 15533                           postinc2	equ	0xFDE
 15534                           postdec2	equ	0xFDD
 15535                           preinc2	equ	0xFDC
 15536                           plusw2	equ	0xFDB
 15537                           fsr2h	equ	0xFDA
 15538                           fsr2l	equ	0xFD9
 15539                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    0
    Data        7
    BSS         381
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    113     158
    BANK1           256    114     216
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2713$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2629$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2629$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               116   116      0  408381
                                            111 BANK0      2     2      0
                                              0 BANK1    114   114      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9201
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   36181
                                             80 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35674
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35321
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29475
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  158658
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   19139
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25733
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9859
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25733
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9482
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3937
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   24299
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     72      D8       7       84.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhllh      13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhlllh      E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhllll      1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      60        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 21:57:35 2023

               _color_read_Red 5C00                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5BB0                   ___fldiv@sign 0042                _color_read_Blue 5CA0  
                           l51 5BFE                             l60 5CEE                             l45 5ABA  
                           l54 5C4E                             l63 57B4                             l48 6136  
                           l57 5C9E                             l66 38DC                             l76 192C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 4320  
             _color_read_Green 5C50                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 6174                            l140 60A2                            l212 618C  
                          l143 60A4                            l152 61A2                            l161 5EE6  
                          l209 6178                            l146 60CA                            l218 6078  
                          l155 61AC                            l149 61B6                            l158 6198  
                          l520 5414                            l256 61C2                            l504 52D8  
                          l512 523A                            l600 4408                            l601 4478  
                          l409 289A                            l602 4440                            l418 2928  
                          l542 6048                            l551 58C2                            l607 4494  
                          l560 591C                            l536 5376                            l528 50F2  
                          l608 44E4                            l545 5D3C                            l609 44FE  
                          l490 49A6                            l554 5868                            l539 602E  
                          l483 549C                            l387 240C                            l548 5D8A  
                          l572 5756                            l581 5A16                            l557 580E  
                          l661 3E8E                            l821 4B0A                            l566 5F64  
                          l590 4F92                            l575 5B0C                            l655 3E84  
                          l496 559C                            l584 5A68                            l808 483A  
                          l569 5FA2                            l593 5048                            l578 5B5E  
                          l682 6156                            l587 551E                            l691 6012  
                          l596 44AE                            l685 60F0                            l597 433E  
                          l694 6116                            l599 4394                            l688 5FFC  
                          l953 519C                            l964 4D14                            l959 4CCE  
                          l991 4C10                            l968 5FDA                            _abs 5EE8  
                          _pad 559E                            _rel 01B2                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           ?_abs 0013                           l1222 2B1A  
                         l1231 2DEA                           l1223 2B08                           l1312 3214  
                         l1224 2ACE                           l1315 30A6                           l1308 2EB0  
                         l1404 55C0                           l1325 31D6                           l1317 311E  
                         l1413 3F1C                           l1318 310C                           l1239 2C34  
                         l1415 3F24                           l1248 2D04                           l1264 5E1C  
                         l1352 46B2                           l1192 568A                           l1408 5616  
                         l1416 3F6A                           l1281 33D2                           l1249 2CF2  
                         l4001 2B5C                           l1185 5682                           l1441 1CC0  
                         l1290 34BA                           l4011 2B96                           l4003 2B6A  
                         l1363 464A                           l1523 5F1E                           l1427 410C  
                         l1443 1B06                           l1276 35AE                           l1356 45EE  
                         l1532 431E                           l1508 5972                           l1372 59C4  
                         l4021 2C02                           l4013 2B98                           l4005 2B78  
                         l1349 4556                           l4101 563A                           l1278 340E  
                         l1526 5F26                           l1518 4E12                           l1438 2326  
                         l1287 3454                           l4031 2C5A                           l4023 2C04  
                         l4015 2BA2                           l4007 2B84                           l4111 5674  
                         l4103 5642                           l1535 4262                           l1543 56E0  
                         l1471 2108                           l1552 5BAE                           l1289 34CC  
                         l4041 2C88                           l4025 2C14                           l4009 2B88  
                         l4017 2BA8                           l4113 5676                           l4105 5650  
                         l4201 4A32                           l4121 5E80                           l5001 222C  
                         l1546 56F0                           l4043 2C96                           l4035 2C6E  
                         l4051 2CB4                           l4019 2BCE                           l4027 2C24  
                         l4115 567C                           l4107 5656                           l4131 48C0  
                         l4211 4AB4                           l4203 4A46                           l4123 5E84  
                         l5011 2282                           l5003 2230                           l1564 4EDC  
                         l1572 5EA4                           l4301 33FC                           l4221 3216  
                         l4045 2C9E                           l4037 2C78                           l4029 2C4A  
                         l4053 2CC2                           l4109 566C                           l4133 48C4  
                         l4125 483C                           l4141 46B4                           l4205 4A54  
                         l4213 4ABA                           l4117 5E62                           l1581 5E60  
                         l5021 22FE                           l5013 22B2                           l5005 224E  
                         l5101 3936                           l1486 3BE2                           l4311 3444  
                         l4303 340C                           l4231 3252                           l4223 3222  
                         l4063 2D14                           l4071 2D6A                           l4055 2CC6  
                         l4047 2CA2                           l4039 2C86                           l4135 4906  
                         l4127 4858                           l5031 6190                           l4151 46F8  
                         l4143 46B8                           l4215 4ACA                           l4207 4A82  
                         l1575 61C0                           l4119 5E6E                           l5023 2306  
                         l5015 22C0                           l5007 226A                           l5111 39FC  
                         l5103 3956                           l4321 3484                           l4313 3452  
                         l4305 341E                           l4241 3282                           l4233 3262  
                         l4225 3230                           l4401 2EF0                           l4081 2DBC  
                         l4073 2D7A                           l4065 2D20                           l4057 2CD4  
                         l4049 2CB2                           l4137 4922                           l4129 48AC  
                         l5033 6194                           l5041 619E                           l5201 5C96  
                         l4161 474E                           l4153 4718                           l4145 46C6  
                         l4217 4AEA                           l4209 4AA2                           l5017 22D8  
                         l5009 2272                           l5113 3A0C                           l5105 3976  
                         l6001 284E                           l4331 34F6                           l4323 34B2  
                         l4307 3434                           l4315 3464                           l4251 32B8  
                         l4243 3288                           l4235 3264                           l4227 3232  
                         l4411 2F40                           l4403 2EFA                           l4091 2DDA  
                         l4083 2DC2                           l4075 2D8A                           l4067 2D2E  
                         l4059 2CEA                           l4139 4966                           l5027 61AE  
                         l5035 61A4                           l5051 5EE2                           l5043 5EA8  
                         l5211 6178                           l4171 47D0                           l4163 4762  
                         l4155 471C                           l4147 46E6                           l5019 22E8  
                         l5115 3A22                           l5123 3A3A                           l5107 39CC  
                         l6011 2908                           l6003 2862                           l4341 356E  
                         l4333 3520                           l4317 3472                           l4309 343A  
                         l4261 32F8                           l4253 32C8                           l4245 3296  
                         l4229 3242                           l4237 326C                           l4501 5160  
                         l4421 2F82                           l4413 2F4C                           l4405 2F10  
                         l4085 2DC4                           l4077 2DAA                           l4069 2D68  
                         l5029 61B2                           l5037 61A8                           l5221 5F66  
                         l5061 5FF8                           l5053 5EE4                           l5045 5EAC  
                         l5205 5CA0                           l5213 6188                           l4181 481A  
                         l4173 47D2                           l4165 4770                           l4157 4728  
                         l4149 46EA                           l5133 3AF8                           l5117 3A2A  
                         l5125 3A6C                           l5301 5948                           l6005 288C  
                         l6013 2914                           l4351 35A4                           l4343 358A  
                         l4327 34DC                           l4335 3524                           l4319 3476  
                         l4263 3308                           l4271 3328                           l4255 32CA  
                         l4247 3298                           l4239 327C                           l4503 5170  
                         l4511 4C12                           l4431 2FE4                           l4423 2F92  
                         l4415 2F5A                           l4407 2F1C                           l4087 2DCA  
                         l4079 2DAE                           l4095 5618                           l5071 5D3E  
                         l5063 5CF0                           l5311 5A78                           l5223 5A18  
                         l5215 5F28                           l5231 5092                           l5047 5EB4  
                         l5039 619A                           l5207 5CE6                           l4175 47E4  
                         l4167 4782                           l4159 4746                           l4191 49DA  
                         l5143 3B74                           l5135 3B22                           l5127 3A90  
                         l5119 3A32                           l5303 5968                           l6007 289E  
                         l4345 358E                           l4337 353E                           l4329 34E8  
                         l4281 3366                           l4273 3338                           l4265 3310  
                         l4249 32A8                           l4257 32D2                           l4505 5194  
                         l4521 4C9C                           l4513 4C40                           l4441 308C  
                         l4433 3000                           l4425 2FAC                           l4417 2F66  
                         l4409 2F34                           l4361 2DF8                           l4089 2DD8  
                         l5401 11CE                           l4097 5620                           l5081 587E  
                         l5241 5810                           l5073 5D52                           l5065 5D04  
                         l5321 5AA8                           l5313 5A88                           l5217 59C6  
                         l5057 5FDC                           l5233 509E                           l5225 504A  
                         l5049 5EBC                           l4169 47B0                           l4177 47EA  
                         l4193 49DE                           l4185 49A8                           l4601 5F02  
                         l5137 3B42                           l5129 3AC4                           l5145 3BA4  
                         l6009 28BA                           l4347 359C                           l4339 3554  
                         l4291 33AE                           l4283 3376                           l4275 3338  
                         l4267 3314                           l4259 32E2                           l4507 519A  
                         l4523 4CAE                           l4515 4C50                           l4451 30C8  
                         l4443 3096                           l4435 302A                           l4427 2FBC  
                         l4419 2F76                           l4371 2E38                           l4363 2E06  
                         l5251 4502                           l5411 13AC                           l5403 124A  
                         l4099 5632                           l5083 5896                           l5243 5824  
                         l5075 5D5E                           l5067 5D10                           l5331 5AB2  
                         l5323 5AAA                           l5315 5A92                           l5307 5A6A  
                         l5219 56F2                           l5059 5FE8                           l5227 506E  
                         l5235 50B6                           l4179 47FA                           l4195 49EC  
                         l4187 49AC                           l4611 4DA8                           l4603 4D16  
                         l5091 38DE                           l4349 35A2                           l4293 33C2  
                         l4285 3386                           l4525 4CBC                           l4517 4C7E  
                         l4461 313A                           l4453 30D6                           l4445 30A4  
                         l4437 3060                           l4429 2FD8                           l4381 2E68  
                         l4373 2E3E                           l4365 2E08                           l3901 2958  
                         l5253 4512                           l5501 17C4                           l5421 141C  
                         l5413 13DE                           l5405 12A6                           l4701 556C  
                         l5245 583C                           l5077 5D72                           l5069 5D24  
                         l5181 608E                           l5173 607A                           l5333 5AB4  
                         l5325 5AAC                           l5317 5A9C                           l5309 5A6E  
                         l5341 35B0                           l5085 57B6                           l5237 50CE  
                         l5229 5086                           l4197 4A0C                           l4189 49BA  
                         l4533 5FA4                           l4541 4B0C                           l4621 4E0A  
                         l4605 4D36                           l5093 3906                           l5149 3BB6  
                         ?_pad 0011                           l4295 33D0                           l4287 3396  
                         l4279 334C                           l4527 4D0C                           l4519 4C8E  
                         l4471 31A4                           l4463 3148                           l4455 3104  
                         l4447 30B6                           l4439 306E                           l4391 2EA0  
                         l4383 2E6A                           l4375 2E4E                           l4367 2E18  
                         l4359 2DEC                           l3911 2992                           l3903 2968  
                         l5271 45D8                           l5263 4590                           l5255 4520  
                         l5511 182C                           l5431 148C                           l5423 144E  
                         l5407 1322                           l4703 5584                           l5079 586A  
                         l4711 5284                           l5183 6090                           l5175 6084  
                         l5335 5AB6                           l5327 5AAE                           l5319 5AA6  
                         l5351 3810                           l5343 367C                           l5087 57CA  
                         l5247 4EDE                           l5239 50E6                           l4199 4A2A  
                         l4535 5FBA                           l4551 4B62                           l4543 4B22  
                         l4607 4D74                           l4615 4DB4                           l4631 56AA  
                         l5095 3914                           l4297 33DC                           l4289 339E  
                         l4529 4D12                           l4481 31FA                           l4473 31BE  
                         l4465 3172                           l4449 30C4                           l4393 2EC0  
                         l4385 2E7A                           l4377 2E54                           l4369 2E28  
                         l3921 29C0                           l3913 2998                           l3905 2978  
                         l5281 4658                           l5273 45E4                           l5265 4598  
                         l5257 4566                           l5513 185E                           l5433 14BE  
                         l5409 137A                           l5361 0EB8                           l4713 5290  
                         l4705 523C                           l5601 6138                           l4721 51C2  
                         l5177 608A                           l5185 611A                           l5337 5AB8  
                         l5329 5AB0                           l5353 3844                           l5345 36B0  
                         l5089 57E2                           l5249 4F94                           l5193 5C00  
                         l4801 40EC                           l4537 5FCA                           l4553 4B72  
                         l4617 4DC6                           l4609 4D9C                           l4641 41A6  
                         l4633 410E                           l4625 5E1E                           l5097 3922  
                         l4299 33FA                           l4475 31DA                           l4483 3200  
                         l4459 312E                           l4467 3176                           l4395 2ED0  
                         l4387 2E8A                           l4379 2E5A                           l3931 29F4  
                         l3923 29C2                           l3915 29AA                           l3907 297A  
                         l4491 5DE8                           l5291 46A0                           l5283 465A  
                         l5275 4620                           l5267 45A4                           l5259 457C  
                         l5531 1918                           l5515 1898                           l5523 18D6  
                         l5451 1580                           l5435 14F8                           l5443 1536  
                         l5419 13EA                           l5371 0F2A                           l5363 0EEC  
                         l5355 0E52                           l4707 5260                           l4715 52A8  
                         l5603 6140                           l4731 5222                           l4723 51DA  
                         l5179 608C                           l5347 3744                           l5195 5C46  
                         l5187 5BB0                           l5339 5758                           l4563 4B9C  
                         l4555 4B76                           l4547 4B36                           l4651 42C2  
                         l4635 412E                           l4627 5E2E                           l4811 1952  
                         l6155 3A4E                           l5099 3926                           l5611 4322  
                         l4485 3204                           l4477 31EA                           l4469 3190  
                         l4389 2E9A                           l3941 2A30                           l3925 29D2  
                         l3933 29FC                           l3917 29AC                           l3909 2982  
                         l5293 46A2                           l5285 465E                           l5277 462C  
                         l5269 45D6                           l5509 17FA                           l5445 1574  
                         l5429 145A                           l5381 103C                           l5373 0F7C  
                         l5365 0F20                           l5357 0E7C                           l4741 532E  
                         l4733 52DA                           l4717 52C0                           l4709 5278  
                         l5605 614A                           l4725 51E6                           l5349 3778  
                         l5701 3CAA                           l5541 6162                           l5189 5BF6  
                         l4581 4C00                           l4573 4BC4                           l4565 4BA6  
                         l4557 4B84                           l4549 4B60                           l4653 42D6  
                         l4645 4216                           l4637 4184                           l4629 568C  
                         l4661 5B60                           l4901 1CF4                           l4821 199C  
                         l4813 1956                           l4805 192E                           l6157 3B0C  
                         l5621 4400                           l5613 4340                           l4495 50F4  
                         l4479 31F8                           l4399 2EE4                           l3951 2A44  
                         l3943 2A34                           l3935 2A0C                           l3927 29E2  
                         l3919 29B2                           l5287 4682                           l5279 463A  
                         l5535 1924                           l5455 158C                           l5391 10C0  
                         l5383 1042                           l5375 0FAE                           l5359 0E88  
                         l4735 52FE                           l4743 5346                           l4751 6028  
                         l5607 6154                           l4727 51F2                           l4719 519E  
                         l5711 3D82                           l5703 3CD6                           l5543 6164  
                         l5199 5C50                           l5551 604A                           l4591 55CC  
                         l4575 4BD0                           l4567 4BB0                           l4655 42FE  
                         l4647 4252                           l4639 4198                           l4663 5B74  
                         l4671 5B94                           l4911 1D42                           l4903 1CF8  
                         l4831 19EA                           l4823 19AC                           l4815 197A  
                         l4807 1934                           l6159 3B96                           l5631 443A  
                         l5623 4402                           l5615 4396                           l4497 5122  
                         l3961 2A58                           l3953 2A48                           l3945 2A38  
                         l3937 2A1E                           l3929 29F2                           l4489 5DD8  
                         l5289 4692                           l5481 16BA                           l5457 15BE  
                         l5393 10D4                           l5385 105E                           l5377 0FB6  
                         l4681 53B4                           l4745 535E                           l4737 5316  
                         l4729 520A                           l4673 60A4                           l5721 3E58  
                         l5713 3DAC                           l5705 3D00                           l5545 616E  
                         l5553 604E                           l3881 4E60                           l3873 4E14  
                         l4593 55E0                           l4585 559E                           l4761 3EF4  
                         l4753 3E90                           l4577 4BE0                           l4657 430E  
                         l4649 4286                           l4665 5B80                           l4921 1DDA  
                         l4905 1D0A                           l4913 1D4A                           l4841 1A26  
                         l4833 19FC                           l4825 19B8                           l4817 1984  
                         l4809 1944                           l5297 591E                           l5633 444E  
                         l5625 4416                           l5617 43E4                           l5641 4478  
                         l5609 4320                           l5801 235C                           l4499 5132  
                         l3963 2A5C                           l3955 2A4C                           l3947 2A3C  
                         l3939 2A2C                           l3971 2A6C                           l5483 16EC  
                         l5475 167C                           l5467 1632                           l5459 15F0  
                         l5395 1174                           l5387 10B4                           l5379 100A  
                         l4683 53C0                           l4691 5520                           l4739 5322  
                         l4747 6014                           l4675 60B4                           l5651 60CE  
                         l5715 3DD8                           l5707 3D2C                           l5723 3E84  
                         l5571 5416                           l5547 6170                           l5539 6158  
                         l5555 605C                           l3883 4E96                           l3875 4E26  
                         l4595 55E4                           l4587 55AC                           l4771 3F52  
                         l4763 3F10                           l4755 3EB0                           l4579 4BF0  
                         l4667 5B84                           l4931 1EBE                           l4923 1E32  
                         l4915 1D52                           l4907 1D18                           l4851 1A88  
                         l4843 1A30                           l4835 1A00                           l4827 19C0  
                         l4819 198C                           l5299 592A                           l5643 4486  
                         l5635 4458                           l5627 4420                           l5619 43E8  
                         l5811 2366                           l5803 235E                           l3981 2ADC  
                         l3973 2A70                           l3965 2A60                           l3957 2A50  
                         l3949 2A40                           l3893 292C                           l5469 1670  
                         l5397 1184                           l4685 53CC                           l4677 5378  
                         l4693 5524                           l4749 6018                           l5661 549E  
                         l5653 60D4                           l5717 3E02                           l5709 3D56  
                         l5581 5444                           l5573 5428                           l5549 6172  
                         l5557 6060                           l3877 4E38                           l4597 5602  
                         l4589 55B8                           l4781 3F82                           l4773 3F5E  
                         l4765 3F2C                           l4757 3EC4                           l4669 5B90  
                         l4941 1F58                           l4933 1EF0                           l4925 1E66  
                         l4917 1D62                           l4909 1D30                           l4853 1A8C  
                         l4837 1A06                           l4829 19C4                           l5645 4496  
                         l5637 445A                           l5629 4422                           l5901 253E  
                         l5821 2370                           l5813 2368                           l5805 2360  
                         l3991 2B06                           l3983 2AE8                           l3975 2A9A  
                         l3967 2A64                           l3959 2A54                           l3895 2938  
                         l5495 172E                           l5479 1688                           l5399 11BC  
                         l3887 60F2                           l4679 539C                           l4687 53E4  
                         l4695 553C                           l5655 58C4                           l5663 54B2  
                         l5719 3E2E                           l5591 5482                           l5583 5448  
                         l5575 542A                           l4599 5EE8                           l3879 4E42  
                         l4791 408E                           l4783 4004                           l4775 3F66  
                         l4767 3F3C                           l4759 3ED4                           l4951 2030  
                         l4943 1F8C                           l4935 1F06                           l4919 1D76  
                         l4927 1E6C                           l4871 1B16                           l4855 1A92  
                         l4839 1A0E                           l4847 1A50                           l5671 5974  
                         l5647 44E6                           l5639 4472                           l5911 2586  
                         l5903 2546                           l5831 2380                           l5823 2372  
                         l5815 236A                           l5807 2362                           l3993 2B28  
                         l3985 2AEC                           l3977 2AB6                           l3969 2A68  
                         l3897 2946                           l5497 1760                           l3889 610E  
                         l4689 53FC                           l4697 5548                           l5657 58D8  
                         l5665 54CA                           l5649 60CC                           l5593 5484  
                         l5585 546C                           l5577 542C                           l4793 40AC  
                         l4785 400A                           l4777 3F72                           l4769 3F42  
                         l4961 205A                           l4945 1FE2                           l4953 2034  
                         l4937 1F38                           l4929 1E8A                           l4881 1BFE  
                         l4873 1B1C                           l4857 1A9A                           l4849 1A76  
                         l4865 1AB6                           l5673 5986                           l5921 25F2  
                         l5913 25BA                           l5905 255A                           l5841 23A0  
                         l5833 2384                           l5825 2374                           l5817 236C  
                         l5809 2364                           l3995 2B38                           l3987 2AFA  
                         l3979 2AC6                           l3899 2948                           l5499 1792  
                         l4699 5554                           l5659 58F0                           l5667 54DE  
                         l5683 5ABC                           l5595 548E                           l5587 5476  
                         l5579 542E                           l4795 40C6                           l4787 4010  
                         l4779 3F7C                           l4971 2128                           l4963 2066  
                         l4955 2044                           l4947 1FE8                           l4939 1F48  
                         l4883 1C12                           l4891 1C8E                           l4875 1B50  
                         l4867 1AD0                           l5675 598E                           l5931 2638  
                         l5923 25F6                           l5915 25C6                           l5907 2578  
                         l5851 23C0                           l5843 23A4                           l5835 238C  
                         l5827 2376                           l5819 236E                           l5771 2328  
                         l3989 2AFC                           l5685 5B0E                           l5669 54F2  
                         l5693 3BFE                           l5597 5490                           l5589 5478  
                         l4797 40D6                           l4789 4074                           l4981 215A  
                         l4973 2138                           l4965 20DE                           l4957 204C  
                         l4949 201C                           l4893 1CC8                           l4885 1C46  
                         l4877 1B8E                           l5677 5996                           l5941 267E  
                         l5933 263C                           l5917 25DA                           l5925 260C  
                         l5909 2580                           l5861 23DC                           l5853 23C8  
                         l5845 23A8                           l5837 2394                           l5829 237C  
                         l5781 2344                           l5773 232C                           l3999 2B4C  
                         l5695 3C2C                           l5687 3BE4                           l5599 549A  
                         l4799 40DC                           l4991 218E                           l4983 215E  
                         l4975 213C                           l4967 20FE                           l4959 2052  
                         l4895 1CD8                           l4887 1C4E                           l4879 1BC0  
                         l5679 59B2                           l5951 26C4                           l5943 2682  
                         l5927 2620                           l5935 2652                           l5919 25EE  
                         l5871 243A                           l5863 23F0                           l5855 23D0  
                         l5847 23B0                           l5839 239C                           l5791 2350  
                         l5783 2348                           l5775 2330                           l5697 3C54  
                         l5689 3BEC                           l4993 2192                           l4985 2164  
                         l4977 2142                           l4969 211A                           l4897 1CE4  
                         l5961 270A                           l5953 26C8                           l5937 2666  
                         l5945 2698                           l5929 2634                           l5881 2494  
                         l5873 2442                           l5865 23F2                           l5857 23D8  
                         l5849 23B8                           l5793 2354                           l5785 234A  
                         l5777 2334                           l5699 3C80                           l4995 2198  
                         l4979 214A                           l4987 216A                           l4899 1CEC  
                         l5971 2750                           l5963 270E                           l5947 26AC  
                         l5955 26DE                           l5939 267A                           l5891 24E0  
                         l5883 2498                           l5875 2456                           l5867 241A  
                         l5859 23DC                           l5795 2356                           l5787 234C  
                         l5779 2338                           l4997 21F0                           l4989 217C  
                         l5981 2796                           l5973 2754                           l5957 26F2  
                         l5965 2724                           l5949 26C0                           l5893 24F8  
                         l5885 249C                           l5877 2462                           l5869 2434  
                         l5797 2358                           l5789 234E                           l4999 2224  
                         l5991 27DC                           l5983 279A                           l5967 2738  
                         l5975 276A                           l5959 2706                           l5895 2514  
                         l5887 24B0                           l5879 2476                           l5799 235A  
                         l5993 27F0                           l5977 277E                           l5985 27B0  
                         l5969 274C                           l5897 252E                           l5889 24C4  
                         l5995 281A                           l5987 27C4                           l5979 2792  
                         l5899 2536                           l5997 2824                           l5989 27C8  
                         l5999 283C                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E26                           STR_3 0E49  
                         STR_6 0E4D                           u3100 29C0                           u3020 4E26  
                         u3101 29BC                           u3021 4E22                           u3110 29D2  
                         u3030 4E38                           u3111 29CE                           u3031 4E34  
                         u4000 311A                           u3200 2B1A                           u3120 29E2  
                         u3040 4E60                   _BAUD4CONbits 000EE9                           u4001 3116  
                         u3201 2B16                           u3121 29DE                           u3041 4E5C  
                         u4010 312E                           u3210 2B28                           u3130 2A1E  
                         u3050 4E96                           u4011 312A                           u3211 2B24  
                         u3131 2A1A                           u3051 4E92                           u4100 4C7E  
                         u4020 3148                           u3300 2C86                           u3220 2B38  
                         u3140 2A2C                           u3060 2946                           u4101 4C7A  
                         u4021 3144                           u3301 2C82                           u3221 2B34  
                         u3141 2A28                           u3061 2942                           u4110 4C9C  
                         u4030 3190                           u3310 2C96                           u3230 2B6A  
                         u3150 2A9A                           u3070 2958                           u4111 4C98  
                         u4031 318C                           u3311 2C92                           u3231 2B66  
                         u3151 2A96                           u3071 2954                           u4120 4CBC  
                         u4040 31BE                           u3400 2D7A                           u3320 2CB2  
                         u3240 2B78                           u3160 2AB2                           u3080 2968  
                         u5000 5ED0                           u4200 4BE0                           u4121 4CB8  
                         u4041 31BA                           u3401 2D76                           u3321 2CAE  
                         u3241 2B74                           u3161 2AAC                           u3081 2964  
                         u5001 5EC8                           u4201 4BDC                           u4130 4D0C  
                         u4050 31F8                           u3410 2D8A                           u3330 2CC2  
                         u3250 2B96                           u3170 2AB4                           u3090 29AA  
                         u4210 4BF0                           _T2PR 000FBC                           u4131 4D08  
                         u4051 31F4                           u3411 2D86                           u3331 2CBE  
                         u3251 2B92                           u3091 29A6                           u4211 4BEC  
                         u4060 5122                           u3420 2DAA                           u3340 2CD4  
                         u3260 2BCE                           u3180 2ADC                           u5100 4512  
                         u3500 4922                           u5020 6012                           u4220 55AC  
                         u4140 5FBA                           u4300 4E00                           u4061 511E  
                         u3421 2DA6                           u3341 2CD0                           u3261 2BCA  
                         u3181 2AD8                           u5101 450E                           u3501 491E  
                         u5021 600E                           u4221 55A8                           u4141 5FB6  
                         u4301 4DFA                           u4070 5160                           u3430 2DBC  
                         u3350 2CEA                           u3270 2C14                           u3190 2AFA  
                         u5110 4520                           u3510 46C6                           u4230 5602  
                         u4150 4B22                           u4310 4E02                           u5030 3906  
                         u4071 515C                           u3431 2DB8                           u3351 2CE6  
                         u3271 2C10                           u3191 2AF6                           u5111 451C  
                         u3511 46C2                           u4231 55FE                           u4151 4B1E  
                         u5031 3902                           u4080 5194                           u3440 2DD8  
                         u3360 2D00                           u3280 2C4A                           u5120 457C  
                         u3520 46F8                           u3600 4A2A                           u4240 5F02  
                         u4160 4B56                           u4400 4252                           u4320 5E60  
                         u5040 3956                           u5200 5968                           u4081 5190  
                         u3441 2DD4                           u3361 2CFC                           u3281 2C46  
                         u5121 4578                           u3521 46F4                           u3601 4A26  
                         u4241 5EFE                           u4401 424E                           u4321 5E5C  
                         u5041 3952                           u5201 5964                           u4090 4C40  
                         u3370 2D14                           u3290 2C5A                           u5130 45D2  
                         u3450 5632                           u5018 5ED2                           u3610 4A54  
                         u4170 4B84                           u4250 4D56                           u4410 42A6  
                         u4330 56AA                           u5050 3976                           u4091 4C3C  
                         u3371 2D10                           u3291 2C56                           u5131 45CE  
                         u5211 0E82                           u3451 562E                           u3531 4722  
                         u3611 4A50                           u4171 4B80                           u4331 56A6  
                         u5051 3972                           u3700 32F8                           u3380 2D2E  
                         u5140 461C                           u5300 13DE                           u5220 0F7C  
                         u3460 5650                           u4500 559C                           u3540 4746  
                         u3620 4A82                           u4180 4B98                           u4260 4D74  
                         u4420 42C2                           u4340 4156                           u5060 3A8C  
                         u3701 32F4                           u3381 2D2A                           u5141 4618  
                         u5301 13DA                           u5221 0F78                           u3461 564C  
                         u4501 5598                           u3541 4742                           u3621 4A7E  
                         u4181 4B94                           u4165 4B4C                           u4261 4D70  
                         u4421 42BE                           u5061 3A88                           u3710 3338  
                         u3390 2D68                           u5150 463A                           u5310 141C  
                         u5230 100A                           u3470 566C                           u4510 52C0  
                         u5070 6188                           u3550 4770                           u3630 4ACA  
                         u4190 4BC0                           u4270 4D9C                           u4430 42FE  
                         u4350 4184                           u3711 3334                           u3391 2D64  
                         u5151 4636                           u5311 1418                           u5231 1006  
                         u3471 5668                           u4511 52BC                           u5071 6184  
                         u3551 476C                           u3631 4AC6                           u4191 4BBC  
                         u4271 4D98                           u4255 4D4C                           u4431 42FA  
                         u4415 429C                           u4351 4180                           u3800 34B2  
                         u3720 33AE                           u3640 3230                           u5160 464A  
                         u5400 162E                           u5320 144E                           u5240 105E  
                         u4520 52D8                           u5080 50CE                           u3560 47B0  
                         u3480 5EA4                           u4600 3ED4                           u4280 4DC6  
                         u4360 41A6                           u4440 5BAE                           u3801 34AE  
                         u3721 33AA                           u3641 322C                           u5161 4646  
                         u5401 162A                           u5321 144A                           u5241 105A  
                         u4521 52D4                           u5081 50CA                           u3561 47AC  
                         u3481 5EA0                           u4601 3ED0                           u4281 4DC2  
                         u4361 41A2                           u4345 414C                           u4441 5BAA  
                         u3810 34C8                           u3730 33D0                           u3650 3242  
                         u5170 4658                           u5410 1670                           u5330 148C  
                         u5250 10B4                           u3490 4858                           u4530 5222  
                         u4450 60B4                           u5090 50E6                           u3570 47FA  
                         u4610 3F10                           u3811 34C4                           u3731 33CC  
                         u3651 323E                           u5171 4654                           u5411 166C  
                         u5331 1488                           u5251 10B0                           u3491 4854  
                         u4531 521E                           u4451 60B0                           u5091 50E2  
                         u3571 47F6                           u4611 3F0C                           u6107 4464  
                         u6027 23FE                           u3820 34DC                           u3740 33FA  
                         u3660 3252                           u3900 2E68                           u5180 4692  
                         u5500 185E                           u5420 16BA                           u5340 14BE  
                         u5260 10D4                           u4540 523A                           u4460 60CA  
                         u3580 49BA                           u4620 3F3C                           u4380 4212  
                         u4700 19AC                           u3821 34D8                           u3741 33F6  
                         u3661 324E                           u3901 2E64                           u5181 468E  
                         u5501 185A                           u5421 16B6                           u5341 14BA  
                         u5261 10D0                           u4541 5236                           u4461 60C6  
                         u3581 49B6                           u4621 3F38                           u4381 420E  
                         u4701 19A8                           u6117 44A0                           u6037 2426  
                         u3830 34F6                           u3750 341E                           u3670 3296  
                         u3910 2E7A                           u5190 46A0                           u5510 1898  
                         u5430 16EC                           u5350 14F8                           u5270 1184  
                         u4470 53FC                           u4550 535E                           u3590 49EC  
                         u4630 3F52                           u4390 4236                           u4710 19EA  
                         u3831 34F2                           u3751 341A                           u3671 3292  
                         u3911 2E76                           u5191 469C                           u5511 1894  
                         u5431 16E8                           u5351 14F4                           u5271 1180  
                         u4471 53F8                           u4551 535A                           u6207 54BC  
                         u3591 49E8                           u4631 3F4E                           u4295 4DD8  
                         u4375 41BA                           u4711 19E6                           u6127 44F0  
                         u6047 24D0                           u3840 353E                           u3760 3434  
                         u3680 32A8                           u3920 2E8A                           u5520 18D2  
                         u5440 172A                           u5360 1532                           u5280 11CE  
                         u4480 5414                           u4560 5376                           u4640 408E  
                         u4376 41C4                           u4800 1CC0                           u4720 19FC  
                         u5600 43E4                           u3841 353A                           u3761 3430  
                         u3681 32A4                           u3921 2E86                           u5521 18CE  
                         u5441 1726                           u5361 152E                           u5281 11CA  
                         u4481 5410                           u4561 5372                           u6217 54FC  
                         u6137 50A8                           u4641 408A                           u4377 41D4  
                         u4801 1CBC                           u4721 19F8                           u5601 43E0  
                         u6057 24EC                           u3850 356E                           u3770 3452  
                         u3690 32B8                           u3930 2EC0                           u5530 1914  
                         u5450 1760                           u5370 1574                           u5290 13AC  
                         u4490 5584                           u4570 6048                           u4650 40AC  
                         u4810 1CD8                           u4730 1A76                           u5610 4416  
                         u3851 356A                           u3771 344E                           u3691 32B4  
                         u3931 2EBC                           u5531 1910                           u5451 175C  
                         u5371 1570                           u5291 13A8                           u4491 5580  
                         u6307 58E2                           u4571 6044                           u6227 5D7C  
                         u6147 5FEE                           u4651 40A8                           u4395 422C  
                         u4811 1CD4                           u4731 1A72                           u5611 4412  
                         u6067 432C                           u3860 359C                           u3780 3472  
                         u3940 2ED0                           u5460 1792                           u5380 15BE  
                         u5700 3CAA                           u5540 6078                           u4660 40C6  
                         u4580 3EC0                           u4900 2030                           u4820 1D0A  
                         u4740 1A88                           u5620 444E                           u3861 3598  
                         u3781 346E                           u3941 2ECC                           u5461 178E  
                         u5381 15BA                           u6317 590E                           u6237 529A  
                         u6157 57D4                           u5701 3CA6                           u5541 6074  
                         u4661 40C2                           u4581 3EBA                           u4901 202C  
                         u4821 1D06                           u4741 1A84                           u5621 444A  
                         u6077 43A0                           u3790 3484                           u3950 304A  
                         u3870 2E06                           u5470 17C4                           u5390 15F0  
                         u5710 3D00                           u4670 40D6                           u4590 3EC2  
                         u4910 20DE                           u4830 1D18                           u4750 1B02  
                         u5630 4486                           u3791 3480                           u3871 2E02  
                         u5471 17C0                           u5391 15EC                           u6327 555E  
                         u6247 601E                           u6167 5800                           u5711 3CFC  
                         u4671 40D2                           u4911 20DA                           u4831 1D14  
                         u4751 1AFE                           u5631 4482                           u6087 43F2  
                         u3960 30A4                           u3880 2E18                           u5480 17F6  
                         u5720 3D56                           u4920 211A                           u4840 1D42  
                         u4760 1B8E                           u4680 1952                           u5640 4494  
                         u3961 30A0                           u3881 2E14                           u5481 17F2  
                         u6337 53D6                           u6257 582E                           u6177 5A7E  
                         u5721 3D52                           u4921 2116                           u4841 1D3E  
                         u4761 1B8A                           u4681 194E                           u5641 4490  
                         u6097 442C                           u3970 30C4                           u3890 2E28  
                         u5490 182C                           u5730 3DAC                           u4930 2128  
                         u4850 1E8A                           u4770 1BC0                           u4690 199C  
                         u5650 44BE                           u5810 241A                           u3971 30C0  
                         u3955 3040                           u3891 2E24                           u5491 1828  
                         u6267 585A                           u6187 5D2E                           u5731 3DA8  
                         u4931 2124                           u4851 1E86                           u4771 1BBC  
                         u4691 1998                           u5651 44B8                           u5811 2416  
                         u3980 30D6                           u5740 3E02                           u4940 217C  
                         u4860 1EF0                           u4780 1BFE                           u5660 44D2  
                         u5652 44C0                           u5580 43BE                           u5900 2738  
                         u5820 2494                           u3981 30D2                           u6277 5888  
                         u6197 51FC                           u5741 3DFE                           u4941 2178  
                         u4861 1EEC                           u4781 1BFA                           u5661 44CC  
                         u5581 43B8                           u5901 2734                           u5821 2490  
                         u3990 3104                           u5750 3E58                           u4950 224E  
                         u4870 1F38                           u4790 1C8A                           u5670 44E4  
                         u5662 44D4                           u5590 43D2                           u5582 43C0  
                         u5910 277E                           u5830 252E                           u3991 3100  
                         u6287 58B4                           u5751 3E54                           u4951 224A  
                         u4871 1F34                           u4791 1C86                           u5671 44E0  
                         u5591 43CC                           u5911 277A                           u5831 252A  
                         u5680 3BFA                           u4960 226A                           u4880 1F48  
                         u5592 43D4                           u5920 27C4                           u5840 2578  
                         u6297 5338                           u5681 3BF6                           u4961 2266  
                         u4881 1F44                           u5921 27C0                           u5841 2574  
                         u5690 3C54                           u4970 22D2                           u4890 1FE2  
                         u5930 27DC                           u5850 25DA                           u5691 3C50  
                         u4971 22CC                           u4891 1FDE                           u5931 27D8  
                         u5851 25D6                           u4980 22D4                           u5940 284E  
                         u5860 2620                           u5941 284A                           u5861 261C  
                         u4990 22E8                           u5950 2928                           u5870 2666  
                         u4991 22E4                           u5951 2924                           u5871 2662  
                         u5880 26AC                           u5881 26A8                           u5890 26F2  
                         u5891 26EE                  _LightBlueMove 5A18                           abs@a 0013  
                         _dbuf 02A0                           _labs 568C                           _main 2328  
                         _dtoa 3E90                           _prec 00EF                           _vals 01D0  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           _stop 5520  
                ___fpclassifyf 4D16                           prodh 000FF4                           prodl 000FF3  
                         start 0000                ___fldiv@new_exp 0043         __end_of_color_read_Red 5C50  
       __end_of_color_read_lum 5C00                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5F66                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5CF0  
              _RunOneBlockTime 00F7                  ___fltol@sign1 0009                __end_of___aodiv 483C  
                        ?_labs 0001                __end_of___fladd 2DEC                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4B0C                __end_of___fldiv 35B0  
              __end_of___flneg 5FDC                __end_of___flmul 3216                __end_of___flsub 5E1E  
              __end_of___fltol 4C12                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 568C                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3E90        __end_of_sendCharSerial4 618E  
   __end_of_I2C_2_Master_Start 61B8     __end_of_I2C_2_Master_Write 619A                   YellowMove@mL 0020  
                        _flags 00F3                   YellowMove@mR 0022                          _fputc 4E14  
                        _fputs 5E62                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00FB                          _width 00ED  
                        _putch 61C0                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                   main@run_flag 0168                          status 000FD8  
              __end_of_sprintf 59C6                 ?___fpclassifyf 0001        __end_of_color_read_Blue 5CF0  
        _I2C_2_Master_RepStart 619A               __end_of_BlueMove 5758                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 5D8C        __end_of_turnCalibration 4500                _reverseOneBlock 5810  
                 __end_of_labs 56F2                   __end_of_main 292C                   __end_of_dtoa 410E  
                 __end_of_stop 559E                _colour_rel$3142 0064                _colour_rel$3143 0068  
                       ??_labs 0005                         ??_main 00CF                         ??_dtoa 0026  
        __end_of_ReverseYellow 4F94               __end_of_PinkMove 5B60                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88       __end_of_color_click_init 5ABC                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 59C6               __end_of___xxtofl 46B4  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 4C12  
                       ___fleq 50F4                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 60F2              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 192E                      ??___lwdiv 000B                         _floorf 410E  
                       _memcpy 5B60                         clear_0 5DB2                         clear_1 5DBE  
                       clear_2 5DCA                         _motorL 01C7                         _motorR 01BE  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5E1E                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 5974                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 52DA  
                   ___flge@ff1 002A                     _YellowMove 5ABC                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 5DD2        __end_of_reverseOneBlock 586A                     ___flneg@f1 0001  
     __end_of_color_read_Green 5CA0         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 61C2  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 52DA  
                 __pidataBANK0 61B8                  __end_of_fputc 4EDE                  __end_of_fputs 5EA6  
                __end_of_putch 61C2              __end_of_GreenMove 5FA4            __end_of_Timer0_init 6158  
          __end_of_ReversePink 504A                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 0172          __end_of_reverseDetect 58C4  
                      ??_putch 0001                     __pbssBANK0 00D1                     __pbssBANK1 0172  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 58C4                     _getTMR0val 60CC  
            __end_of_RetryMove 5520                      ?_PinkMove 0020              _color_writetoaddr 6118  
                   _delayed_ms 5FDC                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
            __end_of_TurnDelay 604A          __end_of_timed_forward 50F4            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 35B0  
      __end_of_Interrupts_init 61C4         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 016C               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 6138                        _RedMove 5F28             _I2C_2_Master_Start 61AE  
                   ??_PinkMove 0024                     _initUSART4 6158             _I2C_2_Master_Write 618E  
                      __Hparam 0000                        _WayBack 0180                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 6138                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4F94                        ___aodiv 46B4  
                      ___fladd 292C                        ___aomod 49A8                        ___fldiv 3216  
                      ___flneg 5FA4                        ___flmul 2DEC                        ___flsub 5DD8  
                      ___fltol 4B0C            ?_I2C_2_Master_Start 0001                        ___lwdiv 5618  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 5D8C  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3BE4  
                      __ptext0 2328                        __ptext1 4320                        __ptext2 5974  
                      __ptext3 591E                        __ptext4 38DE                        __ptext5 192E  
                      __ptext6 5E1E                        __ptext7 5B60                        __ptext8 568C  
                      __ptext9 410E                      _T2CONbits 000FBD                     ??___xxtofl 0005  
               main@lost_count 016A                      _T2HLTbits 000FBE                        efgtoa@c 0066  
                      efgtoa@d 0074                        efgtoa@e 0078                        efgtoa@f 0062  
                      efgtoa@g 008D                        efgtoa@h 0082                        efgtoa@i 0080  
                      efgtoa@l 0086                        efgtoa@m 0076                        efgtoa@n 008B  
                      efgtoa@p 006B                        efgtoa@t 006D                        efgtoa@u 0091  
                      efgtoa@w 007A                  _RxBufWriteCnt 00F6              color_read_lum@tmp 000A  
                      main@buf 0100                        _sprintf 5974           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 5DD2                        floorf@e 0059  
                      floorf@m 0055                        floorf@u 005B                        floorf@x 004B  
                      memcpy@d 0007                        memcpy@n 0005                        memcpy@s 0009  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 017E  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
            __end_of_vfpfcnvrt 3BE4                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F9  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 5416                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 523C  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 016E                   _EUSART4RXbuf 00D1  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 5D3E                 __end_of___flge 4D16  
               __end_of___fleq 519E                 _fullSpeedAhead 5378                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 6118  
               __end_of_efgtoa 2328                 __end_of_floorf 4320                 __end_of_memcpy 5BB0  
                   floorf@F526 00E5       __end_of_Forwardhalfblock 591E                      _GreenMove 5F66  
               __end_of_strcpy 5E62            start_initialization 5D8C                    __end_of_abs 5F28  
                  __end_of_pad 5618                  _TxBufWriteCnt 005F          __end_of_LightBlueMove 5A6A  
                 ??_OrangeMove 0024          __end_of___fpclassifyf 4E14            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 549E                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 5416  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 549E  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F7                _ForwardOneBlock 57B6  
                     ??_floorf 004F                       ??_memcpy 0007                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 4EDE  
                    ___fldiv@a 0036                      ___fldiv@b 0032                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 5A18  
                    ___flmul@a 0015                      ___flmul@b 0011                    __pbssCOMRAM 005F  
                    ___flsub@a 002E                      ___flsub@b 002A                      _TurnDelay 6014  
                __pcstackBANK0 0060                  __pcstackBANK1 0100               ___aodiv@dividend 0001  
                 ??_YellowMove 0024          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
                  _efgtoa$2772 006F               ___lwdiv@dividend 0007                      _dtoa$2741 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                 ?_ReversePink 0020                     ?_RetryMove 001A                timed_forward@mL 0014  
                     ?___aodiv 0001                timed_forward@mR 0016                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$3144 0060                       ?___lwdiv 0007  
              main@colour_1291 0166                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 5B0E           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              timed_forward@time 0018            __end_of_readColours 57B6  
            _I2C_2_Master_Idle 60A4              _I2C_2_Master_Init 607A              _I2C_2_Master_Read 5EA6  
            _I2C_2_Master_Stop 61A4                     ?_TurnDelay 0001                   _RxBufReadCnt 00F5  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0001  
               colour_rel@vals 004B              _sendStringSerial4 604A            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 5810                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                      _lost_flag 00F1                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E52            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 38DE      __end_of_I2C_2_Master_Idle 60CC      __end_of_I2C_2_Master_Init 60A4  
    __end_of_I2C_2_Master_Read 5EE8              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 61AE  
                 setMotorPWM@m 000E                       _DataFlag 00FD    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 60F2  
                 _TxBufReadCnt 00F4                       _BlueMove 56F2                      _turnRight 519E  
           __end_of_delayed_ms 6014                     vfpfcnvrt@c 00A5              ??_turnCalibration 0024  
                    copy_data0 5DA0      __end_of_sendStringSerial4 607A                   ??_colour_rel 004F  
                _reverseDetect 586A  __end_of_I2C_2_Master_RepStart 61A4             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 49A8                   ??_initUSART4 0001                       _PinkMove 5B0E  
                     __Hrparam 0000         __end_of_Colour_decider 192E                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 5378                    ??_RetryMove 001E           TurnDelay@Turn45Delay 0001  
                  _readColours 5758                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 38DE  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E9                     _ANSELFbits 000EB4  
                _timed_forward 504A                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 4500                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 6176                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4D16                       __ptext11 4B0C  
                     __ptext20 46B4                       __ptext12 5FA4                       __ptext21 604A  
                     __ptext13 3E90                       __ptext30 6158                       __ptext22 6176  
                     __ptext14 559E                       __ptext31 5416                       __ptext23 5758  
                     __ptext15 5E62                       __ptext40 5A18                       __ptext32 3BE4  
                     __ptext24 5BB0                       __ptext16 4E14                       __ptext41 5F66  
                     __ptext33 504A                       __ptext25 5C00                       __ptext17 61C0  
                     __ptext50 60A4                       __ptext42 56F2                       __ptext34 5FDC  
                     __ptext26 5C50                       __ptext18 5EE8                       __ptext51 607A  
                     __ptext43 60CC                       __ptext35 4EDE                       __ptext27 5CA0  
                     __ptext19 49A8                       __ptext60 6014                       __ptext52 5ABC  
                     __ptext44 35B0                       __ptext36 4F94                       __ptext28 619A  
                     __ptext61 5810                       __ptext53 5CF0                       __ptext45 5A6A  
                     __ptext37 57B6                       __ptext29 5EA6                       __ptext70 5618  
                     __ptext62 586A                       __ptext54 519E                       __ptext46 6118  
                     __ptext38 5F28                       __ptext71 0E52                       __ptext63 52DA  
                     __ptext55 6138                       __ptext47 618E                       __ptext39 59C6  
                     __ptext72 4500                       __ptext64 61C2                       __ptext56 549E  
                     __ptext48 61A4                       __ptext73 5DD8                       __ptext65 58C4  
                     __ptext57 5B0E                       __ptext49 61AE                       __ptext74 292C  
                     __ptext66 5520                       __ptext58 5D3E                       __ptext75 2DEC  
                     __ptext67 5378                       __ptext59 523C                       __ptext76 4C12  
                     __ptext68 483C                       __ptext77 50F4                       __ptext69 60F2  
                     __ptext78 3216                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       _vfprintf 591E                  ??_turnRight45 001E  
                     main@temp 0164                       _turnLeft 523C               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
              main@prev_colour 0170                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 483C                  turnRight45@mL 001A                  turnRight45@mR 001C  
                    sprintf@ap 00C2               ??_fullSpeedAhead 0018                      strcpy@src 0003  
                 ??_turnLeft45 001E                     BlueMove@mL 0020                     BlueMove@mR 0022  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 5A6A                       sprintf@f 00C4  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 5D3E                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 5D8C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 6176                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
