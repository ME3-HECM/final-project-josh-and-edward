

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 22:19:01 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99   000000                     
   100                           ; Generated 06/04/2022 GMT
   101                           ; 
   102                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F67K40 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134   000000                     
   135                           	psect	idataBANK0
   136   0061BA                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _RunOneBlockTime
   140   0061BA  07D0               	dw	2000
   141                           
   142                           ;initializer for _Turn45Delay
   143   0061BC  00DC               	dw	220
   144                           
   145                           ;initializer for _power
   146   0061BE  001E               	dw	30
   147                           
   148                           ;initializer for _DataFlag
   149   0061C0  01                 	db	1
   150   000000                     _TRISEbits	set	3973
   151   000000                     _TMR0H	set	4052
   152   000000                     _LATHbits	set	3968
   153   000000                     _TX4REG	set	3812
   154   000000                     _RC4STAbits	set	3815
   155   000000                     _SP4BRGH	set	3814
   156   000000                     _SSP2CON2bits	set	3802
   157   000000                     _RX4PPS	set	3605
   158   000000                     _SSP2CLKPPS	set	3612
   159   000000                     _SSP2DATPPS	set	3613
   160   000000                     _ANSELDbits	set	3751
   161   000000                     _SSP2ADD	set	3798
   162   000000                     _SSP2CON1bits	set	3801
   163   000000                     _LATAbits	set	3961
   164   000000                     _LATFbits	set	3966
   165   000000                     _LATGbits	set	3967
   166   000000                     _TRISAbits	set	3969
   167   000000                     _TRISGbits	set	3975
   168   000000                     _PORTFbits	set	3982
   169   000000                     _TRISHbits	set	3976
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE4bits	set	3629
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _T2PR	set	4028
   196   000000                     _T2CONbits	set	4029
   197   000000                     _TMR0L	set	4051
   198   000000                     _T0CON0bits	set	4053
   199   000000                     _CCP2CONbits	set	4007
   200   000000                     _CCP3CONbits	set	3878
   201   000000                     _CCP4CONbits	set	3874
   202   000000                     _T0CON1bits	set	4054
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213   000E01  72                 	db	114	;'r'
   214   000E02  65                 	db	101	;'e'
   215   000E03  64                 	db	100	;'d'
   216   000E04  3D                 	db	61	;'='
   217   000E05  25                 	db	37
   218   000E06  64                 	db	100	;'d'
   219   000E07  20                 	db	32
   220   000E08  67                 	db	103	;'g'
   221   000E09  72                 	db	114	;'r'
   222   000E0A  65                 	db	101	;'e'
   223   000E0B  65                 	db	101	;'e'
   224   000E0C  6E                 	db	110	;'n'
   225   000E0D  3D                 	db	61	;'='
   226   000E0E  25                 	db	37
   227   000E0F  64                 	db	100	;'d'
   228   000E10  20                 	db	32
   229   000E11  62                 	db	98	;'b'
   230   000E12  6C                 	db	108	;'l'
   231   000E13  75                 	db	117	;'u'
   232   000E14  65                 	db	101	;'e'
   233   000E15  3D                 	db	61	;'='
   234   000E16  25                 	db	37
   235   000E17  64                 	db	100	;'d'
   236   000E18  20                 	db	32
   237   000E19  63                 	db	99	;'c'
   238   000E1A  6F                 	db	111	;'o'
   239   000E1B  6C                 	db	108	;'l'
   240   000E1C  6F                 	db	111	;'o'
   241   000E1D  75                 	db	117	;'u'
   242   000E1E  72                 	db	114	;'r'
   243   000E1F  3D                 	db	61	;'='
   244   000E20  25                 	db	37
   245   000E21  64                 	db	100	;'d'
   246   000E22  20                 	db	32
   247   000E23  0D                 	db	13
   248   000E24  0A                 	db	10
   249   000E25  00                 	db	0
   250   000E26                     STR_2:
   251   000E26  72                 	db	114	;'r'
   252   000E27  65                 	db	101	;'e'
   253   000E28  64                 	db	100	;'d'
   254   000E29  3D                 	db	61	;'='
   255   000E2A  25                 	db	37
   256   000E2B  66                 	db	102	;'f'
   257   000E2C  20                 	db	32
   258   000E2D  67                 	db	103	;'g'
   259   000E2E  72                 	db	114	;'r'
   260   000E2F  65                 	db	101	;'e'
   261   000E30  65                 	db	101	;'e'
   262   000E31  6E                 	db	110	;'n'
   263   000E32  3D                 	db	61	;'='
   264   000E33  25                 	db	37
   265   000E34  66                 	db	102	;'f'
   266   000E35  20                 	db	32
   267   000E36  62                 	db	98	;'b'
   268   000E37  6C                 	db	108	;'l'
   269   000E38  75                 	db	117	;'u'
   270   000E39  65                 	db	101	;'e'
   271   000E3A  3D                 	db	61	;'='
   272   000E3B  25                 	db	37
   273   000E3C  66                 	db	102	;'f'
   274   000E3D  20                 	db	32
   275   000E3E  6C                 	db	108	;'l'
   276   000E3F  75                 	db	117	;'u'
   277   000E40  6D                 	db	109	;'m'
   278   000E41  3D                 	db	61	;'='
   279   000E42  25                 	db	37
   280   000E43  64                 	db	100	;'d'
   281   000E44  20                 	db	32
   282   000E45  20                 	db	32
   283   000E46  0D                 	db	13
   284   000E47  0A                 	db	10
   285   000E48  00                 	db	0
   286   000E49                     STR_3:
   287   000E49  69                 	db	105	;'i'
   288   000E4A  6E                 	db	110	;'n'
   289   000E4B  66                 	db	102	;'f'
   290   000E4C  00                 	db	0
   291   000E4D                     STR_6:
   292   000E4D  6E                 	db	110	;'n'
   293   000E4E  61                 	db	97	;'a'
   294   000E4F  6E                 	db	110	;'n'
   295   000E50  00                 	db	0
   296   000E51  00                 	db	0	; dummy byte at the end
   297   000000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301   005D8E                     __pcinit:
   302                           	callstack 0
   303   005D8E                     start_initialization:
   304                           	callstack 0
   305   005D8E                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK0 (7 bytes)
   309                           ; load TBLPTR registers with __pidataBANK0
   310   005D8E  0EBA               	movlw	low __pidataBANK0
   311   005D90  6EF6               	movwf	tblptrl,c
   312   005D92  0E61               	movlw	high __pidataBANK0
   313   005D94  6EF7               	movwf	tblptrh,c
   314   005D96  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   315   005D98  6EF8               	movwf	tblptru,c
   316   005D9A  EE00  F0F7         	lfsr	0,__pdataBANK0
   317   005D9E  EE10 F007          	lfsr	1,7
   318   005DA2                     copy_data0:
   319   005DA2  0009               	tblrd		*+
   320   005DA4  CFF5 FFEE          	movff	tablat,postinc0
   321   005DA8  50E5               	movf	postdec1,w,c
   322   005DAA  50E1               	movf	fsr1l,w,c
   323   005DAC  E1FA               	bnz	copy_data0
   324                           
   325                           ; Clear objects allocated to BANK2 (240 bytes)
   326   005DAE  EE02  F000         	lfsr	0,__pbssBANK2
   327   005DB2  0EF0               	movlw	240
   328   005DB4                     clear_0:
   329   005DB4  6AEE               	clrf	postinc0,c
   330   005DB6  06E8               	decf	wreg,f,c
   331   005DB8  E1FD               	bnz	clear_0
   332                           
   333                           ; Clear objects allocated to BANK1 (102 bytes)
   334   005DBA  EE01  F072         	lfsr	0,__pbssBANK1
   335   005DBE  0E66               	movlw	102
   336   005DC0                     clear_1:
   337   005DC0  6AEE               	clrf	postinc0,c
   338   005DC2  06E8               	decf	wreg,f,c
   339   005DC4  E1FD               	bnz	clear_1
   340                           
   341                           ; Clear objects allocated to BANK0 (38 bytes)
   342   005DC6  EE00  F0D1         	lfsr	0,__pbssBANK0
   343   005DCA  0E26               	movlw	38
   344   005DCC                     clear_2:
   345   005DCC  6AEE               	clrf	postinc0,c
   346   005DCE  06E8               	decf	wreg,f,c
   347   005DD0  E1FD               	bnz	clear_2
   348                           
   349                           ; Clear objects allocated to COMRAM (1 bytes)
   350   005DD2  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   351   005DD4                     end_of_initialization:
   352                           	callstack 0
   353   005DD4                     __end_of__initialization:
   354                           	callstack 0
   355   005DD4  0100               	movlb	0
   356   005DD6  EF94  F011         	goto	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMRAM
   359   00005F                     __pbssCOMRAM:
   360                           	callstack 0
   361   00005F                     _TxBufWriteCnt:
   362                           	callstack 0
   363   00005F                     	ds	1
   364                           
   365                           	psect	bssBANK0
   366   0000D1                     __pbssBANK0:
   367                           	callstack 0
   368   0000D1                     _EUSART4RXbuf:
   369                           	callstack 0
   370   0000D1                     	ds	20
   371   0000E5                     floorf@F526:
   372                           	callstack 0
   373   0000E5                     	ds	4
   374   0000E9                     ___fpclassifyf@F465:
   375                           	callstack 0
   376   0000E9                     	ds	4
   377   0000ED                     _width:
   378                           	callstack 0
   379   0000ED                     	ds	2
   380   0000EF                     _prec:
   381                           	callstack 0
   382   0000EF                     	ds	2
   383   0000F1                     _lost_flag:
   384                           	callstack 0
   385   0000F1                     	ds	2
   386   0000F3                     _flags:
   387                           	callstack 0
   388   0000F3                     	ds	1
   389   0000F4                     _TxBufReadCnt:
   390                           	callstack 0
   391   0000F4                     	ds	1
   392   0000F5                     _RxBufReadCnt:
   393                           	callstack 0
   394   0000F5                     	ds	1
   395   0000F6                     _RxBufWriteCnt:
   396                           	callstack 0
   397   0000F6                     	ds	1
   398                           
   399                           	psect	dataBANK0
   400   0000F7                     __pdataBANK0:
   401                           	callstack 0
   402   0000F7                     _RunOneBlockTime:
   403                           	callstack 0
   404   0000F7                     	ds	2
   405   0000F9                     _Turn45Delay:
   406                           	callstack 0
   407   0000F9                     	ds	2
   408   0000FB                     _power:
   409                           	callstack 0
   410   0000FB                     	ds	2
   411   0000FD                     _DataFlag:
   412                           	callstack 0
   413   0000FD                     	ds	1
   414                           
   415                           	psect	bssBANK1
   416   000172                     __pbssBANK1:
   417                           	callstack 0
   418   000172                     	ds	12
   419   00017E                     _move_count:
   420                           	callstack 0
   421   00017E                     	ds	2
   422   000180                     _WayBack:
   423                           	callstack 0
   424   000180                     	ds	50
   425   0001B2                     _rel:
   426                           	callstack 0
   427   0001B2                     	ds	12
   428   0001BE                     _motorR:
   429                           	callstack 0
   430   0001BE                     	ds	9
   431   0001C7                     _motorL:
   432                           	callstack 0
   433   0001C7                     	ds	9
   434   0001D0                     _vals:
   435                           	callstack 0
   436   0001D0                     	ds	8
   437                           
   438                           	psect	bssBANK2
   439   000200                     __pbssBANK2:
   440                           	callstack 0
   441   000200                     _EUSART4TXbuf:
   442                           	callstack 0
   443   000200                     	ds	60
   444   00023C                     _Time_forward:
   445                           	callstack 0
   446   00023C                     	ds	100
   447   0002A0                     _dbuf:
   448                           	callstack 0
   449   0002A0                     	ds	80
   450                           
   451                           	psect	cstackBANK1
   452   000100                     __pcstackBANK1:
   453                           	callstack 0
   454   000100                     main@buf:
   455                           	callstack 0
   456                           
   457                           ; 100 bytes @ 0x0
   458   000100                     	ds	100
   459   000164                     main@temp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x64
   463   000164                     	ds	2
   464   000166                     main@colour_1291:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x66
   468   000166                     	ds	2
   469   000168                     main@run_flag:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x68
   473   000168                     	ds	2
   474   00016A                     main@lost_count:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x6A
   478   00016A                     	ds	2
   479   00016C                     main@consecuitive:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x6C
   483   00016C                     	ds	2
   484   00016E                     main@colour:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x6E
   488   00016E                     	ds	2
   489   000170                     main@prev_colour:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x70
   493   000170                     	ds	2
   494                           
   495                           	psect	cstackBANK0
   496   000060                     __pcstackBANK0:
   497                           	callstack 0
   498   000060                     efgtoa@fp:
   499                           	callstack 0
   500   000060                     colour_rel@L:
   501                           	callstack 0
   502   000060                     _Colour_decider$3144:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x0
   506   000060                     	ds	2
   507   000062                     efgtoa@f:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x2
   511   000062                     	ds	2
   512   000064                     Colour_decider@Cmax_i:
   513                           	callstack 0
   514   000064                     _colour_rel$3142:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x4
   518   000064                     	ds	2
   519   000066                     efgtoa@c:
   520                           	callstack 0
   521   000066                     Colour_decider@RGB_col:
   522                           	callstack 0
   523                           
   524                           ; 12 bytes @ 0x6
   525   000066                     	ds	1
   526   000067                     ??_efgtoa:
   527                           
   528                           ; 1 bytes @ 0x7
   529   000067                     	ds	1
   530   000068                     _colour_rel$3143:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x8
   534   000068                     	ds	1
   535   000069                     efgtoa@ne:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x9
   539   000069                     	ds	2
   540   00006B                     efgtoa@p:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0xB
   544   00006B                     	ds	1
   545   00006C                     colour_rel@R:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0xC
   549   00006C                     	ds	1
   550   00006D                     efgtoa@t:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xD
   554   00006D                     	ds	2
   555   00006F                     _efgtoa$2772:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0xF
   559   00006F                     	ds	1
   560   000070                     colour_rel@G:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x10
   564   000070                     	ds	1
   565   000071                     efgtoa@pp:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x11
   569   000071                     	ds	1
   570   000072                     efgtoa@mode:
   571                           	callstack 0
   572   000072                     Colour_decider@Cmax:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x12
   576   000072                     	ds	1
   577   000073                     efgtoa@nmode:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x13
   581   000073                     	ds	1
   582   000074                     efgtoa@d:
   583                           	callstack 0
   584   000074                     colour_rel@B:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x14
   588   000074                     	ds	2
   589   000076                     efgtoa@m:
   590                           	callstack 0
   591   000076                     Colour_decider@Cmin:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x16
   595   000076                     	ds	2
   596   000078                     efgtoa@e:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x18
   600   000078                     	ds	2
   601   00007A                     Colour_decider@i:
   602                           	callstack 0
   603   00007A                     efgtoa@w:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x1A
   607   00007A                     	ds	2
   608   00007C                     Colour_decider@Hue:
   609                           	callstack 0
   610   00007C                     efgtoa@ou:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x1C
   614   00007C                     	ds	4
   615   000080                     efgtoa@i:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x20
   619   000080                     	ds	2
   620   000082                     efgtoa@h:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x22
   624   000082                     	ds	4
   625   000086                     efgtoa@l:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x26
   629   000086                     	ds	4
   630   00008A                     efgtoa@sign:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x2A
   634   00008A                     	ds	1
   635   00008B                     efgtoa@n:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x2B
   639   00008B                     	ds	2
   640   00008D                     efgtoa@g:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x2D
   644   00008D                     	ds	4
   645   000091                     efgtoa@u:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x31
   649   000091                     	ds	4
   650   000095                     vfpfcnvrt@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x35
   654   000095                     	ds	2
   655   000097                     vfpfcnvrt@fmt:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x37
   659   000097                     	ds	2
   660   000099                     vfpfcnvrt@ap:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x39
   664   000099                     	ds	2
   665   00009B                     ??_vfpfcnvrt:
   666                           
   667                           ; 1 bytes @ 0x3B
   668   00009B                     	ds	2
   669   00009D                     vfpfcnvrt@convarg:
   670                           	callstack 0
   671                           
   672                           ; 8 bytes @ 0x3D
   673   00009D                     	ds	8
   674   0000A5                     vfpfcnvrt@c:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x45
   678   0000A5                     	ds	1
   679   0000A6                     vfpfcnvrt@cp:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x46
   683   0000A6                     	ds	2
   684   0000A8                     ?_vfprintf:
   685                           	callstack 0
   686   0000A8                     vfprintf@fp:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x48
   690   0000A8                     	ds	2
   691   0000AA                     vfprintf@fmt:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x4A
   695   0000AA                     	ds	2
   696   0000AC                     vfprintf@ap:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x4C
   700   0000AC                     	ds	2
   701   0000AE                     vfprintf@cfmt:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x4E
   705   0000AE                     	ds	2
   706   0000B0                     ?_sprintf:
   707                           	callstack 0
   708   0000B0                     sprintf@s:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x50
   712   0000B0                     	ds	2
   713   0000B2                     sprintf@fmt:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x52
   717   0000B2                     	ds	16
   718   0000C2                     sprintf@ap:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x62
   722   0000C2                     	ds	2
   723   0000C4                     sprintf@f:
   724                           	callstack 0
   725                           
   726                           ; 11 bytes @ 0x64
   727   0000C4                     	ds	11
   728   0000CF                     ??_main:
   729                           
   730                           ; 1 bytes @ 0x6F
   731   0000CF                     	ds	2
   732                           
   733                           	psect	cstackCOMRAM
   734   000001                     __pcstackCOMRAM:
   735                           	callstack 0
   736   000001                     ??_I2C_2_Master_Idle:
   737   000001                     ?___fpclassifyf:
   738                           	callstack 0
   739   000001                     ?___wmul:
   740                           	callstack 0
   741   000001                     ?___fladd:
   742                           	callstack 0
   743   000001                     ?_labs:
   744                           	callstack 0
   745   000001                     ?___flneg:
   746                           	callstack 0
   747   000001                     ?___fltol:
   748                           	callstack 0
   749   000001                     ?___xxtofl:
   750                           	callstack 0
   751   000001                     ?___aodiv:
   752                           	callstack 0
   753   000001                     ?___aomod:
   754                           	callstack 0
   755   000001                     sendCharSerial4@charToSend:
   756                           	callstack 0
   757   000001                     initDCmotorsPWM@PWMperiod:
   758                           	callstack 0
   759   000001                     TurnDelay@Turn45Delay:
   760                           	callstack 0
   761   000001                     getTMR0val@moving:
   762                           	callstack 0
   763   000001                     delayed_ms@time:
   764                           	callstack 0
   765   000001                     ___wmul@multiplier:
   766                           	callstack 0
   767   000001                     memcpy@d1:
   768                           	callstack 0
   769   000001                     fputc@c:
   770                           	callstack 0
   771   000001                     strcpy@dest:
   772                           	callstack 0
   773   000001                     ___flneg@f1:
   774                           	callstack 0
   775   000001                     ___fltol@f1:
   776                           	callstack 0
   777   000001                     ___fladd@b:
   778                           	callstack 0
   779   000001                     ___xxtofl@val:
   780                           	callstack 0
   781   000001                     ___fpclassifyf@x:
   782                           	callstack 0
   783   000001                     labs@a:
   784                           	callstack 0
   785   000001                     ___aodiv@dividend:
   786                           	callstack 0
   787   000001                     ___aomod@dividend:
   788                           	callstack 0
   789                           
   790                           ; 8 bytes @ 0x0
   791   000001                     	ds	1
   792   000002                     ??_I2C_2_Master_Read:
   793   000002                     I2C_2_Master_Write@data_byte:
   794                           	callstack 0
   795   000002                     sendStringSerial4@string:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x1
   799   000002                     	ds	1
   800   000003                     ??_delayed_ms:
   801   000003                     ??_TurnDelay:
   802   000003                     color_writetoaddr@value:
   803                           	callstack 0
   804   000003                     I2C_2_Master_Read@ack:
   805                           	callstack 0
   806   000003                     ___wmul@multiplicand:
   807                           	callstack 0
   808   000003                     memcpy@s1:
   809                           	callstack 0
   810   000003                     fputc@fp:
   811                           	callstack 0
   812   000003                     strcpy@src:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816   000003                     	ds	1
   817   000004                     color_writetoaddr@address:
   818                           	callstack 0
   819   000004                     I2C_2_Master_Read@tmp:
   820                           	callstack 0
   821   000004                     delayed_ms@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x3
   825   000004                     	ds	1
   826   000005                     ??_fputc:
   827   000005                     ??___fpclassifyf:
   828   000005                     ??_labs:
   829   000005                     ??_color_click_init:
   830   000005                     ??___fltol:
   831   000005                     ??___xxtofl:
   832   000005                     ?_color_read_lum:
   833                           	callstack 0
   834   000005                     ?_color_read_Red:
   835                           	callstack 0
   836   000005                     ?_color_read_Green:
   837                           	callstack 0
   838   000005                     ?_color_read_Blue:
   839                           	callstack 0
   840   000005                     ___wmul@product:
   841                           	callstack 0
   842   000005                     memcpy@n:
   843                           	callstack 0
   844   000005                     strcpy@s:
   845                           	callstack 0
   846   000005                     ___fladd@a:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x4
   850   000005                     	ds	2
   851   000007                     ??_color_read_lum:
   852   000007                     ??_color_read_Red:
   853   000007                     ??_color_read_Green:
   854   000007                     ??_color_read_Blue:
   855   000007                     ?___lwdiv:
   856                           	callstack 0
   857   000007                     ___lwdiv@dividend:
   858                           	callstack 0
   859   000007                     memcpy@d:
   860                           	callstack 0
   861   000007                     strcpy@d:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x6
   865   000007                     	ds	2
   866   000009                     ??___fladd:
   867   000009                     ___fltol@sign1:
   868                           	callstack 0
   869   000009                     ___xxtofl@sign:
   870                           	callstack 0
   871   000009                     ___lwdiv@divisor:
   872                           	callstack 0
   873   000009                     ___fpclassifyf@e:
   874                           	callstack 0
   875   000009                     memcpy@s:
   876                           	callstack 0
   877   000009                     ___aodiv@divisor:
   878                           	callstack 0
   879   000009                     ___aomod@divisor:
   880                           	callstack 0
   881                           
   882                           ; 8 bytes @ 0x8
   883   000009                     	ds	1
   884   00000A                     ___fltol@exp1:
   885                           	callstack 0
   886   00000A                     ___xxtofl@exp:
   887                           	callstack 0
   888   00000A                     color_read_lum@tmp:
   889                           	callstack 0
   890   00000A                     color_read_Red@tmp:
   891                           	callstack 0
   892   00000A                     color_read_Green@tmp:
   893                           	callstack 0
   894   00000A                     color_read_Blue@tmp:
   895                           	callstack 0
   896   00000A                     fputs@s:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x9
   900   00000A                     	ds	1
   901   00000B                     memcpy@tmp:
   902                           	callstack 0
   903   00000B                     ___lwdiv@quotient:
   904                           	callstack 0
   905   00000B                     ___xxtofl@arg:
   906                           	callstack 0
   907   00000B                     ___fpclassifyf@u:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0xA
   911   00000B                     	ds	1
   912   00000C                     readColours@vals:
   913                           	callstack 0
   914   00000C                     fputs@fp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0xB
   918   00000C                     	ds	1
   919   00000D                     ___lwdiv@counter:
   920                           	callstack 0
   921   00000D                     ___fladd@signs:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0xC
   925   00000D                     	ds	1
   926   00000E                     ___fladd@aexp:
   927                           	callstack 0
   928   00000E                     fputs@c:
   929                           	callstack 0
   930   00000E                     setMotorPWM@m:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xD
   934   00000E                     	ds	1
   935   00000F                     ___fladd@bexp:
   936                           	callstack 0
   937   00000F                     fputs@i:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0xE
   941   00000F                     	ds	1
   942   000010                     ??_setMotorPWM:
   943   000010                     ___fladd@grs:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0xF
   947   000010                     	ds	1
   948   000011                     ?___flmul:
   949                           	callstack 0
   950   000011                     ___aodiv@counter:
   951                           	callstack 0
   952   000011                     ___aomod@counter:
   953                           	callstack 0
   954   000011                     pad@fp:
   955                           	callstack 0
   956   000011                     ___flmul@b:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x10
   960   000011                     	ds	1
   961   000012                     setMotorPWM@posDuty:
   962                           	callstack 0
   963   000012                     ___aodiv@sign:
   964                           	callstack 0
   965   000012                     ___aomod@sign:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x11
   969   000012                     	ds	1
   970   000013                     ?_abs:
   971                           	callstack 0
   972   000013                     setMotorPWM@negDuty:
   973                           	callstack 0
   974   000013                     pad@buf:
   975                           	callstack 0
   976   000013                     abs@a:
   977                           	callstack 0
   978   000013                     ___aodiv@quotient:
   979                           	callstack 0
   980                           
   981                           ; 8 bytes @ 0x12
   982   000013                     	ds	1
   983   000014                     stop@mL:
   984                           	callstack 0
   985   000014                     turnLeft@mL:
   986                           	callstack 0
   987   000014                     turnRight@mL:
   988                           	callstack 0
   989   000014                     fullSpeedAhead@mL:
   990                           	callstack 0
   991   000014                     timed_forward@mL:
   992                           	callstack 0
   993   000014                     fullSpeedBack@mL:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x13
   997   000014                     	ds	1
   998   000015                     ??_abs:
   999   000015                     pad@p:
  1000                           	callstack 0
  1001   000015                     ___flmul@a:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x14
  1005   000015                     	ds	1
  1006   000016                     stop@mR:
  1007                           	callstack 0
  1008   000016                     turnLeft@mR:
  1009                           	callstack 0
  1010   000016                     turnRight@mR:
  1011                           	callstack 0
  1012   000016                     fullSpeedAhead@mR:
  1013                           	callstack 0
  1014   000016                     timed_forward@mR:
  1015                           	callstack 0
  1016   000016                     fullSpeedBack@mR:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x15
  1020   000016                     	ds	1
  1021   000017                     ??_pad:
  1022                           
  1023                           ; 1 bytes @ 0x16
  1024   000017                     	ds	1
  1025   000018                     ??_fullSpeedAhead:
  1026   000018                     ??_stop:
  1027   000018                     ??_turnLeft:
  1028   000018                     ??_turnRight:
  1029   000018                     ??_fullSpeedBack:
  1030   000018                     timed_forward@time:
  1031                           	callstack 0
  1032   000018                     pad@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x17
  1036   000018                     	ds	1
  1037   000019                     ??___flmul:
  1038                           
  1039                           ; 1 bytes @ 0x18
  1040   000019                     	ds	1
  1041   00001A                     ??_timed_forward:
  1042   00001A                     turnRight45@mL:
  1043                           	callstack 0
  1044   00001A                     turnLeft45@mL:
  1045                           	callstack 0
  1046   00001A                     reverseDetect@mL:
  1047                           	callstack 0
  1048   00001A                     reverseOneBlock@mL:
  1049                           	callstack 0
  1050   00001A                     ForwardOneBlock@mL:
  1051                           	callstack 0
  1052   00001A                     Forwardhalfblock@mL:
  1053                           	callstack 0
  1054   00001A                     RetryMove@mL:
  1055                           	callstack 0
  1056   00001A                     pad@w:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x19
  1060   00001A                     	ds	2
  1061   00001C                     turnRight45@mR:
  1062                           	callstack 0
  1063   00001C                     turnLeft45@mR:
  1064                           	callstack 0
  1065   00001C                     reverseDetect@mR:
  1066                           	callstack 0
  1067   00001C                     reverseOneBlock@mR:
  1068                           	callstack 0
  1069   00001C                     ForwardOneBlock@mR:
  1070                           	callstack 0
  1071   00001C                     Forwardhalfblock@mR:
  1072                           	callstack 0
  1073   00001C                     RetryMove@mR:
  1074                           	callstack 0
  1075   00001C                     dtoa@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x1B
  1079   00001C                     	ds	1
  1080   00001D                     ___flmul@sign:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x1C
  1084   00001D                     	ds	1
  1085   00001E                     ??_Forwardhalfblock:
  1086   00001E                     ??_RetryMove:
  1087   00001E                     ??_turnRight45:
  1088   00001E                     ??_turnLeft45:
  1089   00001E                     ??_reverseDetect:
  1090   00001E                     ??_reverseOneBlock:
  1091   00001E                     ??_ForwardOneBlock:
  1092   00001E                     ___flmul@grs:
  1093                           	callstack 0
  1094   00001E                     dtoa@d:
  1095                           	callstack 0
  1096                           
  1097                           ; 8 bytes @ 0x1D
  1098   00001E                     	ds	2
  1099   000020                     RedMove@mL:
  1100                           	callstack 0
  1101   000020                     GreenMove@mL:
  1102                           	callstack 0
  1103   000020                     BlueMove@mL:
  1104                           	callstack 0
  1105   000020                     YellowMove@mL:
  1106                           	callstack 0
  1107   000020                     PinkMove@mL:
  1108                           	callstack 0
  1109   000020                     OrangeMove@mL:
  1110                           	callstack 0
  1111   000020                     LightBlueMove@mL:
  1112                           	callstack 0
  1113   000020                     ReverseYellow@mL:
  1114                           	callstack 0
  1115   000020                     ReversePink@mL:
  1116                           	callstack 0
  1117   000020                     turnCalibration@mL:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x1F
  1121   000020                     	ds	2
  1122   000022                     ___flmul@aexp:
  1123                           	callstack 0
  1124   000022                     RedMove@mR:
  1125                           	callstack 0
  1126   000022                     GreenMove@mR:
  1127                           	callstack 0
  1128   000022                     BlueMove@mR:
  1129                           	callstack 0
  1130   000022                     YellowMove@mR:
  1131                           	callstack 0
  1132   000022                     PinkMove@mR:
  1133                           	callstack 0
  1134   000022                     OrangeMove@mR:
  1135                           	callstack 0
  1136   000022                     LightBlueMove@mR:
  1137                           	callstack 0
  1138   000022                     ReverseYellow@mR:
  1139                           	callstack 0
  1140   000022                     ReversePink@mR:
  1141                           	callstack 0
  1142   000022                     turnCalibration@mR:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x21
  1146   000022                     	ds	1
  1147   000023                     ___flmul@bexp:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x22
  1151   000023                     	ds	1
  1152   000024                     ??_turnCalibration:
  1153   000024                     go_Home@WayBack:
  1154                           	callstack 0
  1155   000024                     ___flmul@prod:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x23
  1159   000024                     	ds	2
  1160   000026                     ??_dtoa:
  1161   000026                     go_Home@Time_forward:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x25
  1165   000026                     	ds	2
  1166   000028                     ??_go_Home:
  1167   000028                     ___flmul@temp:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x27
  1171   000028                     	ds	2
  1172   00002A                     ?___flsub:
  1173                           	callstack 0
  1174   00002A                     ___flge@ff1:
  1175                           	callstack 0
  1176   00002A                     ___flsub@b:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x29
  1180   00002A                     	ds	1
  1181   00002B                     go_Home@i:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x2A
  1185   00002B                     	ds	3
  1186   00002E                     _dtoa$2741:
  1187                           	callstack 0
  1188   00002E                     ___flge@ff2:
  1189                           	callstack 0
  1190   00002E                     ___flsub@a:
  1191                           	callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x2D
  1194   00002E                     	ds	2
  1195   000030                     dtoa@p:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x2F
  1199   000030                     	ds	2
  1200   000032                     ??___flge:
  1201   000032                     ?___fldiv:
  1202                           	callstack 0
  1203   000032                     dtoa@w:
  1204                           	callstack 0
  1205   000032                     ___fleq@ff1:
  1206                           	callstack 0
  1207   000032                     ___fldiv@b:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x31
  1211   000032                     	ds	2
  1212   000034                     dtoa@n:
  1213                           	callstack 0
  1214                           
  1215                           ; 8 bytes @ 0x33
  1216   000034                     	ds	2
  1217   000036                     ___fleq@ff2:
  1218                           	callstack 0
  1219   000036                     ___fldiv@a:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x35
  1223   000036                     	ds	4
  1224   00003A                     ??___fldiv:
  1225   00003A                     ??___fleq:
  1226                           
  1227                           ; 1 bytes @ 0x39
  1228   00003A                     	ds	2
  1229   00003C                     dtoa@i:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x3B
  1233   00003C                     	ds	2
  1234   00003E                     dtoa@s:
  1235                           	callstack 0
  1236   00003E                     ___fldiv@rem:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x3D
  1240   00003E                     	ds	4
  1241   000042                     ___fldiv@sign:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x41
  1245   000042                     	ds	1
  1246   000043                     ___fldiv@new_exp:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x42
  1250   000043                     	ds	2
  1251   000045                     ___fldiv@grs:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x44
  1255   000045                     	ds	4
  1256   000049                     ___fldiv@bexp:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x48
  1260   000049                     	ds	1
  1261   00004A                     ___fldiv@aexp:
  1262                           	callstack 0
  1263                           
  1264                           ; 1 bytes @ 0x49
  1265   00004A                     	ds	1
  1266   00004B                     ?_Colour_decider:
  1267                           	callstack 0
  1268   00004B                     ?_floorf:
  1269                           	callstack 0
  1270   00004B                     colour_rel@vals:
  1271                           	callstack 0
  1272   00004B                     Colour_decider@vals:
  1273                           	callstack 0
  1274   00004B                     floorf@x:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0x4A
  1278   00004B                     	ds	2
  1279   00004D                     colour_rel@rel:
  1280                           	callstack 0
  1281   00004D                     Colour_decider@rel:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x4C
  1285   00004D                     	ds	2
  1286   00004F                     ??_floorf:
  1287   00004F                     ??_Colour_decider:
  1288                           
  1289                           ; 1 bytes @ 0x4E
  1290   00004F                     	ds	6
  1291   000055                     floorf@m:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x54
  1295   000055                     	ds	4
  1296   000059                     floorf@e:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x58
  1300   000059                     	ds	2
  1301   00005B                     floorf@u:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x5A
  1305   00005B                     	ds	4
  1306   00005F                     
  1307                           ; 1 bytes @ 0x5E
  1308 ;;
  1309 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1310 ;;
  1311 ;; *************** function _main *****************
  1312 ;; Defined at:
  1313 ;;		line 30 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  colour          2  110[BANK1 ] int 
  1318 ;;  colour          2  102[BANK1 ] int 
  1319 ;;  temp            2  100[BANK1 ] int 
  1320 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1321 ;;  prev_colour     2  112[BANK1 ] int 
  1322 ;;  consecuitive    2  108[BANK1 ] int 
  1323 ;;  lost_count      2  106[BANK1 ] int 
  1324 ;;  run_flag        2  104[BANK1 ] int 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;      Locals:         0       0     114       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;      Totals:         0       2     114       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1338 ;;Total ram usage:      116 bytes
  1339 ;; Hardware stack levels required when called: 8
  1340 ;; This function calls:
  1341 ;;		_BlueMove
  1342 ;;		_Colour_decider
  1343 ;;		_Forwardhalfblock
  1344 ;;		_GreenMove
  1345 ;;		_I2C_2_Master_Init
  1346 ;;		_Interrupts_init
  1347 ;;		_LightBlueMove
  1348 ;;		_OrangeMove
  1349 ;;		_PinkMove
  1350 ;;		_RedMove
  1351 ;;		_RetryMove
  1352 ;;		_Timer0_init
  1353 ;;		_YellowMove
  1354 ;;		_color_click_init
  1355 ;;		_colour_rel
  1356 ;;		_fullSpeedAhead
  1357 ;;		_getTMR0val
  1358 ;;		_go_Home
  1359 ;;		_initDCmotorsPWM
  1360 ;;		_initUSART4
  1361 ;;		_readColours
  1362 ;;		_sendStringSerial4
  1363 ;;		_sprintf
  1364 ;;		_stop
  1365 ;;		_turnCalibration
  1366 ;; This function is called by:
  1367 ;;		Startup code after reset
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text0
  1372   002328                     __ptext0:
  1373                           	callstack 0
  1374   002328                     _main:
  1375                           	callstack 23
  1376   002328                     
  1377                           ;main.c: 31:     initUSART4();
  1378   002328  ECAD  F030         	call	_initUSART4	;wreg free
  1379   00232C                     
  1380                           ;main.c: 32:     Interrupts_init();
  1381   00232C  ECE2  F030         	call	_Interrupts_init	;wreg free
  1382   002330                     
  1383                           ;main.c: 33:     color_click_init();
  1384   002330  EC36  F02D         	call	_color_click_init	;wreg free
  1385   002334                     
  1386                           ;main.c: 34:     I2C_2_Master_Init();
  1387   002334  EC3E  F030         	call	_I2C_2_Master_Init	;wreg free
  1388   002338                     
  1389                           ;main.c: 35:     initDCmotorsPWM(200);
  1390   002338  0E00               	movlw	0
  1391   00233A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1392   00233C  0EC8               	movlw	200
  1393   00233E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1394   002340  EC0C  F02A         	call	_initDCmotorsPWM	;wreg free
  1395   002344                     
  1396                           ;main.c: 36:     Timer0_init();
  1397   002344  EC9D  F030         	call	_Timer0_init	;wreg free
  1398   002348                     
  1399                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1400   002348  9287               	bcf	135,1,c	;volatile
  1401   00234A                     
  1402                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1403   00234A  9881               	bcf	129,4,c	;volatile
  1404   00234C                     
  1405                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1406   00234C  9E86               	bcf	134,7,c	;volatile
  1407   00234E                     
  1408                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1409   00234E  8486               	bsf	134,2,c	;volatile
  1410   002350                     
  1411                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1412   002350  010E               	movlb	14	; () banked
  1413   002352  95B4               	bcf	180,2,b	;volatile
  1414   002354                     
  1415                           ; BSR set to: 14
  1416                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1417   002354  8686               	bsf	134,3,c	;volatile
  1418   002356                     
  1419                           ; BSR set to: 14
  1420                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1421   002356  97B4               	bcf	180,3,b	;volatile
  1422   002358                     
  1423                           ; BSR set to: 14
  1424                           ;main.c: 46:     LATGbits.LATG1=1;
  1425   002358  827F               	bsf	127,1,c	;volatile
  1426   00235A                     
  1427                           ; BSR set to: 14
  1428                           ;main.c: 47:     LATAbits.LATA4=1;
  1429   00235A  8879               	bsf	121,4,c	;volatile
  1430   00235C                     
  1431                           ; BSR set to: 14
  1432                           ;main.c: 48:     LATFbits.LATF7=1;
  1433   00235C  8E7E               	bsf	126,7,c	;volatile
  1434   00235E                     
  1435                           ; BSR set to: 14
  1436                           ;main.c: 51:     LATDbits.LATD7=0;
  1437   00235E  9E7C               	bcf	124,7,c	;volatile
  1438   002360                     
  1439                           ; BSR set to: 14
  1440                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1441   002360  9E84               	bcf	132,7,c	;volatile
  1442   002362                     
  1443                           ; BSR set to: 14
  1444                           ;main.c: 53:     LATHbits.LATH3=0;
  1445   002362  9680               	bcf	128,3,c	;volatile
  1446   002364                     
  1447                           ; BSR set to: 14
  1448                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1449   002364  9688               	bcf	136,3,c	;volatile
  1450   002366                     
  1451                           ; BSR set to: 14
  1452                           ;main.c: 57:     LATHbits.LATH0=0;
  1453   002366  9080               	bcf	128,0,c	;volatile
  1454   002368                     
  1455                           ; BSR set to: 14
  1456                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1457   002368  9088               	bcf	136,0,c	;volatile
  1458   00236A                     
  1459                           ; BSR set to: 14
  1460                           ;main.c: 61:     LATFbits.LATF0=0;
  1461   00236A  907E               	bcf	126,0,c	;volatile
  1462   00236C                     
  1463                           ; BSR set to: 14
  1464                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1465   00236C  9086               	bcf	134,0,c	;volatile
  1466   00236E                     
  1467                           ; BSR set to: 14
  1468                           ;main.c: 65:     LATDbits.LATD4=0;
  1469   00236E  987C               	bcf	124,4,c	;volatile
  1470   002370                     
  1471                           ; BSR set to: 14
  1472                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1473   002370  9884               	bcf	132,4,c	;volatile
  1474   002372                     
  1475                           ; BSR set to: 14
  1476                           ;main.c: 69:     LATDbits.LATD3=0;
  1477   002372  967C               	bcf	124,3,c	;volatile
  1478   002374                     
  1479                           ; BSR set to: 14
  1480                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1481   002374  9684               	bcf	132,3,c	;volatile
  1482   002376                     
  1483                           ; BSR set to: 14
  1484                           ;main.c: 75:     motorL.power=0;
  1485   002376  0E00               	movlw	0
  1486   002378  0101               	movlb	1	; () banked
  1487   00237A  6FC7               	movwf	_motorL& (0+255),b
  1488   00237C                     
  1489                           ; BSR set to: 1
  1490                           ;main.c: 76:     motorL.direction=1;
  1491   00237C  0E01               	movlw	1
  1492   00237E  6FC8               	movwf	(_motorL+1)& (0+255),b
  1493   002380                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 77:     motorL.brakemode=1;
  1496   002380  0E01               	movlw	1
  1497   002382  6FC9               	movwf	(_motorL+2)& (0+255),b
  1498   002384                     
  1499                           ; BSR set to: 1
  1500                           ;main.c: 78:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1501   002384  0EAA               	movlw	170
  1502   002386  6FCC               	movwf	(_motorL+5)& (0+255),b
  1503   002388  0E0F               	movlw	15
  1504   00238A  6FCD               	movwf	(_motorL+6)& (0+255),b
  1505   00238C                     
  1506                           ; BSR set to: 1
  1507                           ;main.c: 79:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1508   00238C  0EA6               	movlw	166
  1509   00238E  6FCE               	movwf	(_motorL+7)& (0+255),b
  1510   002390  0E0F               	movlw	15
  1511   002392  6FCF               	movwf	(_motorL+8)& (0+255),b
  1512   002394                     
  1513                           ; BSR set to: 1
  1514                           ;main.c: 80:     motorL.PWMperiod=200;
  1515   002394  0E00               	movlw	0
  1516   002396  6FCB               	movwf	(_motorL+4)& (0+255),b
  1517   002398  0EC8               	movlw	200
  1518   00239A  6FCA               	movwf	(_motorL+3)& (0+255),b
  1519   00239C                     
  1520                           ; BSR set to: 1
  1521                           ;main.c: 81:     motorR.power=0;
  1522   00239C  0E00               	movlw	0
  1523   00239E  6FBE               	movwf	_motorR& (0+255),b
  1524   0023A0                     
  1525                           ; BSR set to: 1
  1526                           ;main.c: 82:     motorR.direction=1;
  1527   0023A0  0E01               	movlw	1
  1528   0023A2  6FBF               	movwf	(_motorR+1)& (0+255),b
  1529   0023A4                     
  1530                           ; BSR set to: 1
  1531                           ;main.c: 83:     motorR.brakemode=1;
  1532   0023A4  0E01               	movlw	1
  1533   0023A6  6FC0               	movwf	(_motorR+2)& (0+255),b
  1534   0023A8                     
  1535                           ; BSR set to: 1
  1536                           ;main.c: 84:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1537   0023A8  0E25               	movlw	37
  1538   0023AA  6FC3               	movwf	(_motorR+5)& (0+255),b
  1539   0023AC  0E0F               	movlw	15
  1540   0023AE  6FC4               	movwf	(_motorR+6)& (0+255),b
  1541   0023B0                     
  1542                           ; BSR set to: 1
  1543                           ;main.c: 85:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1544   0023B0  0E21               	movlw	33
  1545   0023B2  6FC5               	movwf	(_motorR+7)& (0+255),b
  1546   0023B4  0E0F               	movlw	15
  1547   0023B6  6FC6               	movwf	(_motorR+8)& (0+255),b
  1548   0023B8                     
  1549                           ; BSR set to: 1
  1550                           ;main.c: 86:     motorR.PWMperiod=200;
  1551   0023B8  0E00               	movlw	0
  1552   0023BA  6FC2               	movwf	(_motorR+4)& (0+255),b
  1553   0023BC  0EC8               	movlw	200
  1554   0023BE  6FC1               	movwf	(_motorR+3)& (0+255),b
  1555   0023C0                     
  1556                           ; BSR set to: 1
  1557                           ;main.c: 88:     int consecuitive=0;
  1558   0023C0  0E00               	movlw	0
  1559   0023C2  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1560   0023C4  0E00               	movlw	0
  1561   0023C6  6F6C               	movwf	main@consecuitive& (0+255),b
  1562   0023C8                     
  1563                           ; BSR set to: 1
  1564                           ;main.c: 89:     int prev_colour =0;
  1565   0023C8  0E00               	movlw	0
  1566   0023CA  6F71               	movwf	(main@prev_colour+1)& (0+255),b
  1567   0023CC  0E00               	movlw	0
  1568   0023CE  6F70               	movwf	main@prev_colour& (0+255),b
  1569   0023D0                     
  1570                           ; BSR set to: 1
  1571                           ;main.c: 90:     int run_flag=1;
  1572   0023D0  0E00               	movlw	0
  1573   0023D2  6F69               	movwf	(main@run_flag+1)& (0+255),b
  1574   0023D4  0E01               	movlw	1
  1575   0023D6  6F68               	movwf	main@run_flag& (0+255),b
  1576   0023D8                     
  1577                           ; BSR set to: 1
  1578                           ;main.c: 91:     move_count=-1;
  1579   0023D8  697E               	setf	_move_count& (0+255),b	;volatile
  1580   0023DA  697F               	setf	(_move_count+1)& (0+255),b	;volatile
  1581   0023DC                     
  1582                           ; BSR set to: 1
  1583                           ;main.c: 93:     turnCalibration(&motorL,&motorR);
  1584   0023DC  0EC7               	movlw	low _motorL
  1585   0023DE  6E20               	movwf	turnCalibration@mL^0,c
  1586   0023E0  0E01               	movlw	high _motorL
  1587   0023E2  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1588   0023E4  0EBE               	movlw	low _motorR
  1589   0023E6  6E22               	movwf	turnCalibration@mR^0,c
  1590   0023E8  0E01               	movlw	high _motorR
  1591   0023EA  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1592   0023EC  EC91  F021         	call	_turnCalibration	;wreg free
  1593   0023F0                     
  1594                           ;main.c: 95:     LATFbits.LATF0=0;
  1595   0023F0  907E               	bcf	126,0,c	;volatile
  1596   0023F2                     
  1597                           ;main.c: 96:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1598   0023F2  0E52               	movlw	82
  1599   0023F4  0100               	movlb	0	; () banked
  1600   0023F6  6FD0               	movwf	(??_main+1)& (0+255),b
  1601   0023F8  0E2B               	movlw	43
  1602   0023FA  6FCF               	movwf	??_main& (0+255),b
  1603   0023FC  0E00               	movlw	0
  1604   0023FE                     u6027:
  1605   0023FE  2EE8               	decfsz	wreg,f,c
  1606   002400  D7FE               	bra	u6027
  1607   002402  2FCF               	decfsz	??_main& (0+255),f,b
  1608   002404  D7FC               	bra	u6027
  1609   002406  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1610   002408  D7FA               	bra	u6027
  1611   00240A  F000               	nop	
  1612   00240C                     l387:
  1613   00240C  B48E               	btfsc	142,2,c	;volatile
  1614   00240E  EF0B  F012         	goto	u5811
  1615   002412  EF0D  F012         	goto	u5810
  1616   002416                     u5811:
  1617   002416  EF06  F012         	goto	l387
  1618   00241A                     u5810:
  1619   00241A                     
  1620                           ;main.c: 99:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1621   00241A  0E52               	movlw	82
  1622   00241C  0100               	movlb	0	; () banked
  1623   00241E  6FD0               	movwf	(??_main+1)& (0+255),b
  1624   002420  0E2B               	movlw	43
  1625   002422  6FCF               	movwf	??_main& (0+255),b
  1626   002424  0E00               	movlw	0
  1627   002426                     u6037:
  1628   002426  2EE8               	decfsz	wreg,f,c
  1629   002428  D7FE               	bra	u6037
  1630   00242A  2FCF               	decfsz	??_main& (0+255),f,b
  1631   00242C  D7FC               	bra	u6037
  1632   00242E  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1633   002430  D7FA               	bra	u6037
  1634   002432  F000               	nop	
  1635   002434                     
  1636                           ;main.c: 100:     T0CON0bits.T0EN=1;
  1637   002434  8ED5               	bsf	213,7,c	;volatile
  1638                           
  1639                           ;main.c: 101:     while (run_flag)
  1640   002436  EF8B  F014         	goto	l6013
  1641   00243A                     l5871:
  1642                           
  1643                           ; BSR set to: 1
  1644                           ;main.c: 102:     {;main.c: 103:         lost_count=0;
  1645   00243A  0E00               	movlw	0
  1646   00243C  6F6B               	movwf	(main@lost_count+1)& (0+255),b
  1647   00243E  0E00               	movlw	0
  1648   002440  6F6A               	movwf	main@lost_count& (0+255),b
  1649   002442                     
  1650                           ; BSR set to: 1
  1651                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1652   002442  0EC7               	movlw	low _motorL
  1653   002444  6E14               	movwf	fullSpeedAhead@mL^0,c
  1654   002446  0E01               	movlw	high _motorL
  1655   002448  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1656   00244A  0EBE               	movlw	low _motorR
  1657   00244C  6E16               	movwf	fullSpeedAhead@mR^0,c
  1658   00244E  0E01               	movlw	high _motorR
  1659   002450  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1660   002452  ECBD  F029         	call	_fullSpeedAhead	;wreg free
  1661   002456                     
  1662                           ;main.c: 106:         readColours(&vals);
  1663   002456  0ED0               	movlw	low _vals
  1664   002458  6E0C               	movwf	readColours@vals^0,c
  1665   00245A  0E01               	movlw	high _vals
  1666   00245C  6E0D               	movwf	(readColours@vals+1)^0,c
  1667   00245E  ECAD  F02B         	call	_readColours	;wreg free
  1668   002462                     
  1669                           ;main.c: 109:         colour_rel(&vals, &rel);
  1670   002462  0ED0               	movlw	low _vals
  1671   002464  6E4B               	movwf	colour_rel@vals^0,c
  1672   002466  0E01               	movlw	high _vals
  1673   002468  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1674   00246A  0EB2               	movlw	low _rel
  1675   00246C  6E4D               	movwf	colour_rel@rel^0,c
  1676   00246E  0E01               	movlw	high _rel
  1677   002470  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1678   002472  ECD9  F01A         	call	_colour_rel	;wreg free
  1679   002476                     
  1680                           ;main.c: 112:         if (vals.L>=500){
  1681   002476  0101               	movlb	1	; () banked
  1682   002478  BFD7               	btfsc	(_vals+7)& (0+255),7,b
  1683   00247A  EF48  F012         	goto	u5821
  1684   00247E  0EF4               	movlw	244
  1685   002480  5DD6               	subwf	(_vals+6)& (0+255),w,b
  1686   002482  0E01               	movlw	1
  1687   002484  59D7               	subwfb	(_vals+7)& (0+255),w,b
  1688   002486  A0D8               	btfss	status,0,c
  1689   002488  EF48  F012         	goto	u5821
  1690   00248C  EF4A  F012         	goto	u5820
  1691   002490                     u5821:
  1692   002490  EF50  F014         	goto	l6007
  1693   002494                     u5820:
  1694   002494                     
  1695                           ; BSR set to: 1
  1696                           ;main.c: 113:             move_count++;
  1697   002494  4B7E               	infsnz	_move_count& (0+255),f,b	;volatile
  1698   002496  2B7F               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1699   002498                     
  1700                           ; BSR set to: 1
  1701                           ;main.c: 114:             getTMR0val();
  1702   002498  EC67  F030         	call	_getTMR0val	;wreg free
  1703   00249C                     
  1704                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1705   00249C  0EC7               	movlw	low _motorL
  1706   00249E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1707   0024A0  0E01               	movlw	high _motorL
  1708   0024A2  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1709   0024A4  0EBE               	movlw	low _motorR
  1710   0024A6  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1711   0024A8  0E01               	movlw	high _motorR
  1712   0024AA  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1713   0024AC  EC63  F02C         	call	_Forwardhalfblock	;wreg free
  1714   0024B0                     
  1715                           ;main.c: 118:             stop(&motorL, &motorR);
  1716   0024B0  0EC7               	movlw	low _motorL
  1717   0024B2  6E14               	movwf	stop@mL^0,c
  1718   0024B4  0E01               	movlw	high _motorL
  1719   0024B6  6E15               	movwf	(stop@mL+1)^0,c
  1720   0024B8  0EBE               	movlw	low _motorR
  1721   0024BA  6E16               	movwf	stop@mR^0,c
  1722   0024BC  0E01               	movlw	high _motorR
  1723   0024BE  6E17               	movwf	(stop@mR+1)^0,c
  1724   0024C0  EC91  F02A         	call	_stop	;wreg free
  1725   0024C4                     
  1726                           ;main.c: 119:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1727   0024C4  0E11               	movlw	17
  1728   0024C6  0100               	movlb	0	; () banked
  1729   0024C8  6FD0               	movwf	(??_main+1)& (0+255),b
  1730   0024CA  0E3C               	movlw	60
  1731   0024CC  6FCF               	movwf	??_main& (0+255),b
  1732   0024CE  0ECB               	movlw	203
  1733   0024D0                     u6047:
  1734   0024D0  2EE8               	decfsz	wreg,f,c
  1735   0024D2  D7FE               	bra	u6047
  1736   0024D4  2FCF               	decfsz	??_main& (0+255),f,b
  1737   0024D6  D7FC               	bra	u6047
  1738   0024D8  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1739   0024DA  D7FA               	bra	u6047
  1740                           
  1741                           ;main.c: 126:             while (consecuitive<3){
  1742   0024DC  EFAE  F012         	goto	l5905
  1743   0024E0                     l5891:
  1744                           
  1745                           ; BSR set to: 1
  1746                           ;main.c: 127:                 _delay((unsigned long)((300)*(64000000/4000.0)));
  1747   0024E0  0E19               	movlw	25
  1748   0024E2  0100               	movlb	0	; () banked
  1749   0024E4  6FD0               	movwf	(??_main+1)& (0+255),b
  1750   0024E6  0E5A               	movlw	90
  1751   0024E8  6FCF               	movwf	??_main& (0+255),b
  1752   0024EA  0EB1               	movlw	177
  1753   0024EC                     u6057:
  1754   0024EC  2EE8               	decfsz	wreg,f,c
  1755   0024EE  D7FE               	bra	u6057
  1756   0024F0  2FCF               	decfsz	??_main& (0+255),f,b
  1757   0024F2  D7FC               	bra	u6057
  1758   0024F4  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1759   0024F6  D7FA               	bra	u6057
  1760   0024F8  D000               	nop2	
  1761   0024FA                     
  1762                           ;main.c: 128:                 int colour = Colour_decider(&vals, &rel);
  1763   0024FA  0ED0               	movlw	low _vals
  1764   0024FC  6E4B               	movwf	Colour_decider@vals^0,c
  1765   0024FE  0E01               	movlw	high _vals
  1766   002500  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1767   002502  0EB2               	movlw	low _rel
  1768   002504  6E4D               	movwf	Colour_decider@rel^0,c
  1769   002506  0E01               	movlw	high _rel
  1770   002508  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1771   00250A  EC29  F007         	call	_Colour_decider	;wreg free
  1772   00250E  C04B  F16E         	movff	?_Colour_decider,main@colour
  1773   002512  C04C  F16F         	movff	?_Colour_decider+1,main@colour+1
  1774   002516                     
  1775                           ;main.c: 129:                 if (colour==prev_colour){
  1776   002516  0101               	movlb	1	; () banked
  1777   002518  5170               	movf	main@prev_colour& (0+255),w,b
  1778   00251A  196E               	xorwf	main@colour& (0+255),w,b
  1779   00251C  E107               	bnz	u5831
  1780   00251E  5171               	movf	(main@prev_colour+1)& (0+255),w,b
  1781   002520  196F               	xorwf	(main@colour+1)& (0+255),w,b
  1782   002522  A4D8               	btfss	status,2,c
  1783   002524  EF96  F012         	goto	u5831
  1784   002528  EF98  F012         	goto	u5830
  1785   00252C                     u5831:
  1786   00252C  EF9C  F012         	goto	l5899
  1787   002530                     u5830:
  1788   002530                     
  1789                           ; BSR set to: 1
  1790                           ;main.c: 130:                     consecuitive++;
  1791   002530  4B6C               	infsnz	main@consecuitive& (0+255),f,b
  1792   002532  2B6D               	incf	(main@consecuitive+1)& (0+255),f,b
  1793                           
  1794                           ;main.c: 131:                 }
  1795   002534  EFA0  F012         	goto	l5901
  1796   002538                     l5899:
  1797                           
  1798                           ; BSR set to: 1
  1799                           ;main.c: 133:                     consecuitive=0;
  1800   002538  0E00               	movlw	0
  1801   00253A  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1802   00253C  0E00               	movlw	0
  1803   00253E  6F6C               	movwf	main@consecuitive& (0+255),b
  1804   002540                     l5901:
  1805                           
  1806                           ; BSR set to: 1
  1807                           ;main.c: 135:                 prev_colour=colour;
  1808   002540  C16E  F170         	movff	main@colour,main@prev_colour
  1809   002544  C16F  F171         	movff	main@colour+1,main@prev_colour+1
  1810   002548                     
  1811                           ; BSR set to: 1
  1812                           ;main.c: 136:                 RetryMove(&motorL, &motorR);
  1813   002548  0EC7               	movlw	low _motorL
  1814   00254A  6E1A               	movwf	RetryMove@mL^0,c
  1815   00254C  0E01               	movlw	high _motorL
  1816   00254E  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1817   002550  0EBE               	movlw	low _motorR
  1818   002552  6E1C               	movwf	RetryMove@mR^0,c
  1819   002554  0E01               	movlw	high _motorR
  1820   002556  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1821   002558  EC50  F02A         	call	_RetryMove	;wreg free
  1822   00255C                     l5905:
  1823                           
  1824                           ;main.c: 126:             while (consecuitive<3){
  1825   00255C  0101               	movlb	1	; () banked
  1826   00255E  BF6D               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1827   002560  EFBB  F012         	goto	u5841
  1828   002564  516D               	movf	(main@consecuitive+1)& (0+255),w,b
  1829   002566  E109               	bnz	u5840
  1830   002568  0E03               	movlw	3
  1831   00256A  5D6C               	subwf	main@consecuitive& (0+255),w,b
  1832   00256C  A0D8               	btfss	status,0,c
  1833   00256E  EFBB  F012         	goto	u5841
  1834   002572  EFBD  F012         	goto	u5840
  1835   002576                     u5841:
  1836   002576  EF70  F012         	goto	l5891
  1837   00257A                     u5840:
  1838   00257A                     
  1839                           ; BSR set to: 1
  1840                           ;main.c: 138:             consecuitive=0;
  1841   00257A  0E00               	movlw	0
  1842   00257C  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1843   00257E  0E00               	movlw	0
  1844   002580  6F6C               	movwf	main@consecuitive& (0+255),b
  1845   002582                     
  1846                           ; BSR set to: 1
  1847                           ;main.c: 139:             int temp=TMR0L;
  1848   002582  CFD3 F164          	movff	4051,main@temp	;volatile
  1849   002586  6B65               	clrf	(main@temp+1)& (0+255),b
  1850   002588                     
  1851                           ; BSR set to: 1
  1852                           ;main.c: 140:             sprintf(buf,"red=%d green=%d blue=%d colour=%d \r\n",vals.R, v
      +                          als.G,vals.B,TMR0H);
  1853   002588  0E00               	movlw	low main@buf
  1854   00258A  0100               	movlb	0	; () banked
  1855   00258C  6FB0               	movwf	sprintf@s& (0+255),b
  1856   00258E  0E01               	movlw	high main@buf
  1857   002590  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1858   002592  0E01               	movlw	low STR_1
  1859   002594  6FB2               	movwf	sprintf@fmt& (0+255),b
  1860   002596  0E0E               	movlw	high STR_1
  1861   002598  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1862   00259A  C1D0  F0B4         	movff	_vals,?_sprintf+4
  1863   00259E  C1D1  F0B5         	movff	_vals+1,?_sprintf+5
  1864   0025A2  C1D2  F0B6         	movff	_vals+2,?_sprintf+6
  1865   0025A6  C1D3  F0B7         	movff	_vals+3,?_sprintf+7
  1866   0025AA  C1D4  F0B8         	movff	_vals+4,?_sprintf+8
  1867   0025AE  C1D5  F0B9         	movff	_vals+5,?_sprintf+9
  1868   0025B2  CFD4 F0BA          	movff	4052,?_sprintf+10	;volatile
  1869   0025B6  6BBB               	clrf	(?_sprintf+11)& (0+255),b
  1870   0025B8  ECBB  F02C         	call	_sprintf	;wreg free
  1871   0025BC                     
  1872                           ;main.c: 143:             sendStringSerial4(buf);
  1873   0025BC  0E00               	movlw	low main@buf
  1874   0025BE  6E02               	movwf	sendStringSerial4@string^0,c
  1875   0025C0  0E01               	movlw	high main@buf
  1876   0025C2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1877   0025C4  EC26  F030         	call	_sendStringSerial4	;wreg free
  1878   0025C8                     
  1879                           ;main.c: 145:             if (prev_colour==1){
  1880   0025C8  0101               	movlb	1	; () banked
  1881   0025CA  0570               	decf	main@prev_colour& (0+255),w,b
  1882   0025CC  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1883   0025CE  A4D8               	btfss	status,2,c
  1884   0025D0  EFEC  F012         	goto	u5851
  1885   0025D4  EFEE  F012         	goto	u5850
  1886   0025D8                     u5851:
  1887   0025D8  EF07  F013         	goto	l5925
  1888   0025DC                     u5850:
  1889   0025DC                     
  1890                           ; BSR set to: 1
  1891                           ;main.c: 146:                 RedMove(&motorL, &motorR);
  1892   0025DC  0EC7               	movlw	low _motorL
  1893   0025DE  6E20               	movwf	RedMove@mL^0,c
  1894   0025E0  0E01               	movlw	high _motorL
  1895   0025E2  6E21               	movwf	(RedMove@mL+1)^0,c
  1896   0025E4  0EBE               	movlw	low _motorR
  1897   0025E6  6E22               	movwf	RedMove@mR^0,c
  1898   0025E8  0E01               	movlw	high _motorR
  1899   0025EA  6E23               	movwf	(RedMove@mR+1)^0,c
  1900   0025EC  EC95  F02F         	call	_RedMove	;wreg free
  1901   0025F0                     
  1902                           ;main.c: 147:                 TMR0H=0;
  1903   0025F0  0E00               	movlw	0
  1904   0025F2  6ED4               	movwf	212,c	;volatile
  1905   0025F4                     
  1906                           ;main.c: 148:                 TMR0L=0;
  1907   0025F4  0E00               	movlw	0
  1908   0025F6  6ED3               	movwf	211,c	;volatile
  1909   0025F8                     
  1910                           ;main.c: 149:                 WayBack[move_count]=1;
  1911   0025F8  0E80               	movlw	low _WayBack
  1912   0025FA  0101               	movlb	1	; () banked
  1913   0025FC  257E               	addwf	_move_count& (0+255),w,b	;volatile
  1914   0025FE  6ED9               	movwf	fsr2l,c
  1915   002600  0E01               	movlw	high _WayBack
  1916   002602  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1917   002604  6EDA               	movwf	fsr2h,c
  1918   002606  0E01               	movlw	1
  1919   002608  6EDF               	movwf	indf2,c
  1920                           
  1921                           ;main.c: 150:             }
  1922   00260A  EF8B  F014         	goto	l6013
  1923   00260E                     l5925:
  1924                           
  1925                           ; BSR set to: 1
  1926   00260E  0E02               	movlw	2
  1927   002610  1970               	xorwf	main@prev_colour& (0+255),w,b
  1928   002612  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1929   002614  A4D8               	btfss	status,2,c
  1930   002616  EF0F  F013         	goto	u5861
  1931   00261A  EF11  F013         	goto	u5860
  1932   00261E                     u5861:
  1933   00261E  EF2A  F013         	goto	l5935
  1934   002622                     u5860:
  1935   002622                     
  1936                           ; BSR set to: 1
  1937                           ;main.c: 152:                 OrangeMove(&motorL, &motorR);
  1938   002622  0EC7               	movlw	low _motorL
  1939   002624  6E20               	movwf	OrangeMove@mL^0,c
  1940   002626  0E01               	movlw	high _motorL
  1941   002628  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1942   00262A  0EBE               	movlw	low _motorR
  1943   00262C  6E22               	movwf	OrangeMove@mR^0,c
  1944   00262E  0E01               	movlw	high _motorR
  1945   002630  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1946   002632  ECE4  F02C         	call	_OrangeMove	;wreg free
  1947   002636                     
  1948                           ;main.c: 153:                 TMR0H=0;
  1949   002636  0E00               	movlw	0
  1950   002638  6ED4               	movwf	212,c	;volatile
  1951   00263A                     
  1952                           ;main.c: 154:                 TMR0L=0;
  1953   00263A  0E00               	movlw	0
  1954   00263C  6ED3               	movwf	211,c	;volatile
  1955   00263E                     
  1956                           ;main.c: 155:                 WayBack[move_count]=2;
  1957   00263E  0E80               	movlw	low _WayBack
  1958   002640  0101               	movlb	1	; () banked
  1959   002642  257E               	addwf	_move_count& (0+255),w,b	;volatile
  1960   002644  6ED9               	movwf	fsr2l,c
  1961   002646  0E01               	movlw	high _WayBack
  1962   002648  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1963   00264A  6EDA               	movwf	fsr2h,c
  1964   00264C  0E02               	movlw	2
  1965   00264E  6EDF               	movwf	indf2,c
  1966                           
  1967                           ;main.c: 156:             }
  1968   002650  EF8B  F014         	goto	l6013
  1969   002654                     l5935:
  1970                           
  1971                           ; BSR set to: 1
  1972   002654  0E03               	movlw	3
  1973   002656  1970               	xorwf	main@prev_colour& (0+255),w,b
  1974   002658  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1975   00265A  A4D8               	btfss	status,2,c
  1976   00265C  EF32  F013         	goto	u5871
  1977   002660  EF34  F013         	goto	u5870
  1978   002664                     u5871:
  1979   002664  EF4D  F013         	goto	l5945
  1980   002668                     u5870:
  1981   002668                     
  1982                           ; BSR set to: 1
  1983                           ;main.c: 158:                 YellowMove(&motorL, &motorR);
  1984   002668  0EC7               	movlw	low _motorL
  1985   00266A  6E20               	movwf	YellowMove@mL^0,c
  1986   00266C  0E01               	movlw	high _motorL
  1987   00266E  6E21               	movwf	(YellowMove@mL+1)^0,c
  1988   002670  0EBE               	movlw	low _motorR
  1989   002672  6E22               	movwf	YellowMove@mR^0,c
  1990   002674  0E01               	movlw	high _motorR
  1991   002676  6E23               	movwf	(YellowMove@mR+1)^0,c
  1992   002678  EC5F  F02D         	call	_YellowMove	;wreg free
  1993   00267C                     
  1994                           ;main.c: 159:                 TMR0H=0;
  1995   00267C  0E00               	movlw	0
  1996   00267E  6ED4               	movwf	212,c	;volatile
  1997   002680                     
  1998                           ;main.c: 160:                 TMR0L=0;
  1999   002680  0E00               	movlw	0
  2000   002682  6ED3               	movwf	211,c	;volatile
  2001   002684                     
  2002                           ;main.c: 161:                 WayBack[move_count]=3;
  2003   002684  0E80               	movlw	low _WayBack
  2004   002686  0101               	movlb	1	; () banked
  2005   002688  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2006   00268A  6ED9               	movwf	fsr2l,c
  2007   00268C  0E01               	movlw	high _WayBack
  2008   00268E  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2009   002690  6EDA               	movwf	fsr2h,c
  2010   002692  0E03               	movlw	3
  2011   002694  6EDF               	movwf	indf2,c
  2012                           
  2013                           ;main.c: 162:             }
  2014   002696  EF8B  F014         	goto	l6013
  2015   00269A                     l5945:
  2016                           
  2017                           ; BSR set to: 1
  2018   00269A  0E04               	movlw	4
  2019   00269C  1970               	xorwf	main@prev_colour& (0+255),w,b
  2020   00269E  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2021   0026A0  A4D8               	btfss	status,2,c
  2022   0026A2  EF55  F013         	goto	u5881
  2023   0026A6  EF57  F013         	goto	u5880
  2024   0026AA                     u5881:
  2025   0026AA  EF70  F013         	goto	l5955
  2026   0026AE                     u5880:
  2027   0026AE                     
  2028                           ; BSR set to: 1
  2029                           ;main.c: 164:                 BlueMove(&motorL, &motorR);
  2030   0026AE  0EC7               	movlw	low _motorL
  2031   0026B0  6E20               	movwf	BlueMove@mL^0,c
  2032   0026B2  0E01               	movlw	high _motorL
  2033   0026B4  6E21               	movwf	(BlueMove@mL+1)^0,c
  2034   0026B6  0EBE               	movlw	low _motorR
  2035   0026B8  6E22               	movwf	BlueMove@mR^0,c
  2036   0026BA  0E01               	movlw	high _motorR
  2037   0026BC  6E23               	movwf	(BlueMove@mR+1)^0,c
  2038   0026BE  EC7A  F02B         	call	_BlueMove	;wreg free
  2039   0026C2                     
  2040                           ;main.c: 165:                 TMR0H=0;
  2041   0026C2  0E00               	movlw	0
  2042   0026C4  6ED4               	movwf	212,c	;volatile
  2043   0026C6                     
  2044                           ;main.c: 166:                 TMR0L=0;
  2045   0026C6  0E00               	movlw	0
  2046   0026C8  6ED3               	movwf	211,c	;volatile
  2047   0026CA                     
  2048                           ;main.c: 167:                 WayBack[move_count]=4;
  2049   0026CA  0E80               	movlw	low _WayBack
  2050   0026CC  0101               	movlb	1	; () banked
  2051   0026CE  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2052   0026D0  6ED9               	movwf	fsr2l,c
  2053   0026D2  0E01               	movlw	high _WayBack
  2054   0026D4  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2055   0026D6  6EDA               	movwf	fsr2h,c
  2056   0026D8  0E04               	movlw	4
  2057   0026DA  6EDF               	movwf	indf2,c
  2058                           
  2059                           ;main.c: 168:             }
  2060   0026DC  EF8B  F014         	goto	l6013
  2061   0026E0                     l5955:
  2062                           
  2063                           ; BSR set to: 1
  2064   0026E0  0E05               	movlw	5
  2065   0026E2  1970               	xorwf	main@prev_colour& (0+255),w,b
  2066   0026E4  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2067   0026E6  A4D8               	btfss	status,2,c
  2068   0026E8  EF78  F013         	goto	u5891
  2069   0026EC  EF7A  F013         	goto	u5890
  2070   0026F0                     u5891:
  2071   0026F0  EF93  F013         	goto	l5965
  2072   0026F4                     u5890:
  2073   0026F4                     
  2074                           ; BSR set to: 1
  2075                           ;main.c: 170:                 GreenMove(&motorL, &motorR);
  2076   0026F4  0EC7               	movlw	low _motorL
  2077   0026F6  6E20               	movwf	GreenMove@mL^0,c
  2078   0026F8  0E01               	movlw	high _motorL
  2079   0026FA  6E21               	movwf	(GreenMove@mL+1)^0,c
  2080   0026FC  0EBE               	movlw	low _motorR
  2081   0026FE  6E22               	movwf	GreenMove@mR^0,c
  2082   002700  0E01               	movlw	high _motorR
  2083   002702  6E23               	movwf	(GreenMove@mR+1)^0,c
  2084   002704  ECB4  F02F         	call	_GreenMove	;wreg free
  2085   002708                     
  2086                           ;main.c: 171:                 TMR0H=0;
  2087   002708  0E00               	movlw	0
  2088   00270A  6ED4               	movwf	212,c	;volatile
  2089   00270C                     
  2090                           ;main.c: 172:                 TMR0L=0;
  2091   00270C  0E00               	movlw	0
  2092   00270E  6ED3               	movwf	211,c	;volatile
  2093   002710                     
  2094                           ;main.c: 173:                 WayBack[move_count]=5;
  2095   002710  0E80               	movlw	low _WayBack
  2096   002712  0101               	movlb	1	; () banked
  2097   002714  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2098   002716  6ED9               	movwf	fsr2l,c
  2099   002718  0E01               	movlw	high _WayBack
  2100   00271A  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2101   00271C  6EDA               	movwf	fsr2h,c
  2102   00271E  0E05               	movlw	5
  2103   002720  6EDF               	movwf	indf2,c
  2104                           
  2105                           ;main.c: 174:             }
  2106   002722  EF8B  F014         	goto	l6013
  2107   002726                     l5965:
  2108                           
  2109                           ; BSR set to: 1
  2110   002726  0E06               	movlw	6
  2111   002728  1970               	xorwf	main@prev_colour& (0+255),w,b
  2112   00272A  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2113   00272C  A4D8               	btfss	status,2,c
  2114   00272E  EF9B  F013         	goto	u5901
  2115   002732  EF9D  F013         	goto	u5900
  2116   002736                     u5901:
  2117   002736  EFB6  F013         	goto	l5975
  2118   00273A                     u5900:
  2119   00273A                     
  2120                           ; BSR set to: 1
  2121                           ;main.c: 176:                 LightBlueMove(&motorL, &motorR);
  2122   00273A  0EC7               	movlw	low _motorL
  2123   00273C  6E20               	movwf	LightBlueMove@mL^0,c
  2124   00273E  0E01               	movlw	high _motorL
  2125   002740  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2126   002742  0EBE               	movlw	low _motorR
  2127   002744  6E22               	movwf	LightBlueMove@mR^0,c
  2128   002746  0E01               	movlw	high _motorR
  2129   002748  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2130   00274A  EC0D  F02D         	call	_LightBlueMove	;wreg free
  2131   00274E                     
  2132                           ;main.c: 177:                 TMR0H=0;
  2133   00274E  0E00               	movlw	0
  2134   002750  6ED4               	movwf	212,c	;volatile
  2135   002752                     
  2136                           ;main.c: 178:                 TMR0L=0;
  2137   002752  0E00               	movlw	0
  2138   002754  6ED3               	movwf	211,c	;volatile
  2139   002756                     
  2140                           ;main.c: 179:                 WayBack[move_count]=6;
  2141   002756  0E80               	movlw	low _WayBack
  2142   002758  0101               	movlb	1	; () banked
  2143   00275A  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2144   00275C  6ED9               	movwf	fsr2l,c
  2145   00275E  0E01               	movlw	high _WayBack
  2146   002760  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2147   002762  6EDA               	movwf	fsr2h,c
  2148   002764  0E06               	movlw	6
  2149   002766  6EDF               	movwf	indf2,c
  2150                           
  2151                           ;main.c: 180:             }
  2152   002768  EF8B  F014         	goto	l6013
  2153   00276C                     l5975:
  2154                           
  2155                           ; BSR set to: 1
  2156   00276C  0E07               	movlw	7
  2157   00276E  1970               	xorwf	main@prev_colour& (0+255),w,b
  2158   002770  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2159   002772  A4D8               	btfss	status,2,c
  2160   002774  EFBE  F013         	goto	u5911
  2161   002778  EFC0  F013         	goto	u5910
  2162   00277C                     u5911:
  2163   00277C  EFD9  F013         	goto	l5985
  2164   002780                     u5910:
  2165   002780                     
  2166                           ; BSR set to: 1
  2167                           ;main.c: 182:                 PinkMove(&motorL, &motorR);
  2168   002780  0EC7               	movlw	low _motorL
  2169   002782  6E20               	movwf	PinkMove@mL^0,c
  2170   002784  0E01               	movlw	high _motorL
  2171   002786  6E21               	movwf	(PinkMove@mL+1)^0,c
  2172   002788  0EBE               	movlw	low _motorR
  2173   00278A  6E22               	movwf	PinkMove@mR^0,c
  2174   00278C  0E01               	movlw	high _motorR
  2175   00278E  6E23               	movwf	(PinkMove@mR+1)^0,c
  2176   002790  EC88  F02D         	call	_PinkMove	;wreg free
  2177   002794                     
  2178                           ;main.c: 183:                 TMR0H=0;
  2179   002794  0E00               	movlw	0
  2180   002796  6ED4               	movwf	212,c	;volatile
  2181   002798                     
  2182                           ;main.c: 184:                 TMR0L=0;
  2183   002798  0E00               	movlw	0
  2184   00279A  6ED3               	movwf	211,c	;volatile
  2185   00279C                     
  2186                           ;main.c: 185:                 WayBack[move_count]=7;
  2187   00279C  0E80               	movlw	low _WayBack
  2188   00279E  0101               	movlb	1	; () banked
  2189   0027A0  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2190   0027A2  6ED9               	movwf	fsr2l,c
  2191   0027A4  0E01               	movlw	high _WayBack
  2192   0027A6  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2193   0027A8  6EDA               	movwf	fsr2h,c
  2194   0027AA  0E07               	movlw	7
  2195   0027AC  6EDF               	movwf	indf2,c
  2196                           
  2197                           ;main.c: 186:             }
  2198   0027AE  EF8B  F014         	goto	l6013
  2199   0027B2                     l5985:
  2200                           
  2201                           ; BSR set to: 1
  2202   0027B2  0E0A               	movlw	10
  2203   0027B4  1970               	xorwf	main@prev_colour& (0+255),w,b
  2204   0027B6  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2205   0027B8  A4D8               	btfss	status,2,c
  2206   0027BA  EFE1  F013         	goto	u5921
  2207   0027BE  EFE3  F013         	goto	u5920
  2208   0027C2                     u5921:
  2209   0027C2  EF1F  F014         	goto	l5999
  2210   0027C6                     u5920:
  2211   0027C6                     
  2212                           ; BSR set to: 1
  2213                           ;main.c: 188:                 lost_count++;
  2214   0027C6  4B6A               	infsnz	main@lost_count& (0+255),f,b
  2215   0027C8  2B6B               	incf	(main@lost_count+1)& (0+255),f,b
  2216   0027CA                     
  2217                           ; BSR set to: 1
  2218                           ;main.c: 189:                 if (lost_count==4){
  2219   0027CA  0E04               	movlw	4
  2220   0027CC  196A               	xorwf	main@lost_count& (0+255),w,b
  2221   0027CE  116B               	iorwf	(main@lost_count+1)& (0+255),w,b
  2222   0027D0  A4D8               	btfss	status,2,c
  2223   0027D2  EFED  F013         	goto	u5931
  2224   0027D6  EFEF  F013         	goto	u5930
  2225   0027DA                     u5931:
  2226   0027DA  EF13  F014         	goto	l5997
  2227   0027DE                     u5930:
  2228   0027DE                     
  2229                           ; BSR set to: 1
  2230                           ;main.c: 190:                     BlueMove(&motorL, &motorR);
  2231   0027DE  0EC7               	movlw	low _motorL
  2232   0027E0  6E20               	movwf	BlueMove@mL^0,c
  2233   0027E2  0E01               	movlw	high _motorL
  2234   0027E4  6E21               	movwf	(BlueMove@mL+1)^0,c
  2235   0027E6  0EBE               	movlw	low _motorR
  2236   0027E8  6E22               	movwf	BlueMove@mR^0,c
  2237   0027EA  0E01               	movlw	high _motorR
  2238   0027EC  6E23               	movwf	(BlueMove@mR+1)^0,c
  2239   0027EE  EC7A  F02B         	call	_BlueMove	;wreg free
  2240   0027F2                     
  2241                           ;main.c: 191:                     T0CON0bits.T0EN=0;
  2242   0027F2  9ED5               	bcf	213,7,c	;volatile
  2243                           
  2244                           ;main.c: 192:                     go_Home(WayBack, Time_forward);
  2245   0027F4  0E80               	movlw	low _WayBack
  2246   0027F6  6E24               	movwf	go_Home@WayBack^0,c
  2247   0027F8  0E01               	movlw	high _WayBack
  2248   0027FA  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2249   0027FC  0E3C               	movlw	low _Time_forward
  2250   0027FE  6E26               	movwf	go_Home@Time_forward^0,c
  2251   002800  0E02               	movlw	high _Time_forward
  2252   002802  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2253   002804  ECF3  F01D         	call	_go_Home	;wreg free
  2254                           
  2255                           ;main.c: 193:                     stop(&motorL, &motorR);
  2256   002808  0EC7               	movlw	low _motorL
  2257   00280A  6E14               	movwf	stop@mL^0,c
  2258   00280C  0E01               	movlw	high _motorL
  2259   00280E  6E15               	movwf	(stop@mL+1)^0,c
  2260   002810  0EBE               	movlw	low _motorR
  2261   002812  6E16               	movwf	stop@mR^0,c
  2262   002814  0E01               	movlw	high _motorR
  2263   002816  6E17               	movwf	(stop@mR+1)^0,c
  2264   002818  EC91  F02A         	call	_stop	;wreg free
  2265   00281C                     
  2266                           ;main.c: 194:                     run_flag=0;
  2267   00281C  0E00               	movlw	0
  2268   00281E  0101               	movlb	1	; () banked
  2269   002820  6F69               	movwf	(main@run_flag+1)& (0+255),b
  2270   002822  0E00               	movlw	0
  2271   002824  6F68               	movwf	main@run_flag& (0+255),b
  2272   002826                     l5997:
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;main.c: 196:                 RetryMove(&motorL, &motorR);
  2276   002826  0EC7               	movlw	low _motorL
  2277   002828  6E1A               	movwf	RetryMove@mL^0,c
  2278   00282A  0E01               	movlw	high _motorL
  2279   00282C  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2280   00282E  0EBE               	movlw	low _motorR
  2281   002830  6E1C               	movwf	RetryMove@mR^0,c
  2282   002832  0E01               	movlw	high _motorR
  2283   002834  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2284   002836  EC50  F02A         	call	_RetryMove	;wreg free
  2285                           
  2286                           ;main.c: 197:             }
  2287   00283A  EF8B  F014         	goto	l6013
  2288   00283E                     l5999:
  2289                           
  2290                           ; BSR set to: 1
  2291   00283E  5170               	movf	main@prev_colour& (0+255),w,b
  2292   002840  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2293   002842  A4D8               	btfss	status,2,c
  2294   002844  EF26  F014         	goto	u5941
  2295   002848  EF28  F014         	goto	u5940
  2296   00284C                     u5941:
  2297   00284C  EF4E  F014         	goto	l409
  2298   002850                     u5940:
  2299   002850                     
  2300                           ; BSR set to: 1
  2301                           ;main.c: 199:                 BlueMove(&motorL, &motorR);
  2302   002850  0EC7               	movlw	low _motorL
  2303   002852  6E20               	movwf	BlueMove@mL^0,c
  2304   002854  0E01               	movlw	high _motorL
  2305   002856  6E21               	movwf	(BlueMove@mL+1)^0,c
  2306   002858  0EBE               	movlw	low _motorR
  2307   00285A  6E22               	movwf	BlueMove@mR^0,c
  2308   00285C  0E01               	movlw	high _motorR
  2309   00285E  6E23               	movwf	(BlueMove@mR+1)^0,c
  2310   002860  EC7A  F02B         	call	_BlueMove	;wreg free
  2311   002864                     
  2312                           ;main.c: 200:                 T0CON0bits.T0EN=0;
  2313   002864  9ED5               	bcf	213,7,c	;volatile
  2314                           
  2315                           ;main.c: 201:                 go_Home(WayBack, Time_forward);
  2316   002866  0E80               	movlw	low _WayBack
  2317   002868  6E24               	movwf	go_Home@WayBack^0,c
  2318   00286A  0E01               	movlw	high _WayBack
  2319   00286C  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2320   00286E  0E3C               	movlw	low _Time_forward
  2321   002870  6E26               	movwf	go_Home@Time_forward^0,c
  2322   002872  0E02               	movlw	high _Time_forward
  2323   002874  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2324   002876  ECF3  F01D         	call	_go_Home	;wreg free
  2325                           
  2326                           ;main.c: 202:                 stop(&motorL, &motorR);
  2327   00287A  0EC7               	movlw	low _motorL
  2328   00287C  6E14               	movwf	stop@mL^0,c
  2329   00287E  0E01               	movlw	high _motorL
  2330   002880  6E15               	movwf	(stop@mL+1)^0,c
  2331   002882  0EBE               	movlw	low _motorR
  2332   002884  6E16               	movwf	stop@mR^0,c
  2333   002886  0E01               	movlw	high _motorR
  2334   002888  6E17               	movwf	(stop@mR+1)^0,c
  2335   00288A  EC91  F02A         	call	_stop	;wreg free
  2336   00288E                     
  2337                           ;main.c: 203:                 run_flag=0;
  2338   00288E  0E00               	movlw	0
  2339   002890  0101               	movlb	1	; () banked
  2340   002892  6F69               	movwf	(main@run_flag+1)& (0+255),b
  2341   002894  0E00               	movlw	0
  2342   002896  6F68               	movwf	main@run_flag& (0+255),b
  2343   002898  EF8B  F014         	goto	l6013
  2344   00289C                     l409:
  2345                           
  2346                           ; BSR set to: 1
  2347   00289C  EF8B  F014         	goto	l6013
  2348   0028A0                     l6007:
  2349                           
  2350                           ; BSR set to: 1
  2351                           ;main.c: 206:                 int colour = Colour_decider(&vals, &rel);
  2352   0028A0  0ED0               	movlw	low _vals
  2353   0028A2  6E4B               	movwf	Colour_decider@vals^0,c
  2354   0028A4  0E01               	movlw	high _vals
  2355   0028A6  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  2356   0028A8  0EB2               	movlw	low _rel
  2357   0028AA  6E4D               	movwf	Colour_decider@rel^0,c
  2358   0028AC  0E01               	movlw	high _rel
  2359   0028AE  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  2360   0028B0  EC29  F007         	call	_Colour_decider	;wreg free
  2361   0028B4  C04B  F166         	movff	?_Colour_decider,main@colour_1291
  2362   0028B8  C04C  F167         	movff	?_Colour_decider+1,main@colour_1291+1
  2363   0028BC                     
  2364                           ;main.c: 207:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d  \r\n",rel.R, 
      +                          rel.G,rel.B,vals.L);
  2365   0028BC  0E00               	movlw	low main@buf
  2366   0028BE  0100               	movlb	0	; () banked
  2367   0028C0  6FB0               	movwf	sprintf@s& (0+255),b
  2368   0028C2  0E01               	movlw	high main@buf
  2369   0028C4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2370   0028C6  0E26               	movlw	low STR_2
  2371   0028C8  6FB2               	movwf	sprintf@fmt& (0+255),b
  2372   0028CA  0E0E               	movlw	high STR_2
  2373   0028CC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2374   0028CE  C1B2  F0B4         	movff	_rel,?_sprintf+4
  2375   0028D2  C1B3  F0B5         	movff	_rel+1,?_sprintf+5
  2376   0028D6  C1B4  F0B6         	movff	_rel+2,?_sprintf+6
  2377   0028DA  C1B5  F0B7         	movff	_rel+3,?_sprintf+7
  2378   0028DE  C1B6  F0B8         	movff	_rel+4,?_sprintf+8
  2379   0028E2  C1B7  F0B9         	movff	_rel+5,?_sprintf+9
  2380   0028E6  C1B8  F0BA         	movff	_rel+6,?_sprintf+10
  2381   0028EA  C1B9  F0BB         	movff	_rel+7,?_sprintf+11
  2382   0028EE  C1BA  F0BC         	movff	_rel+8,?_sprintf+12
  2383   0028F2  C1BB  F0BD         	movff	_rel+9,?_sprintf+13
  2384   0028F6  C1BC  F0BE         	movff	_rel+10,?_sprintf+14
  2385   0028FA  C1BD  F0BF         	movff	_rel+11,?_sprintf+15
  2386   0028FE  C1D6  F0C0         	movff	_vals+6,?_sprintf+16
  2387   002902  C1D7  F0C1         	movff	_vals+7,?_sprintf+17
  2388   002906  ECBB  F02C         	call	_sprintf	;wreg free
  2389   00290A                     
  2390                           ;main.c: 208:                 sendStringSerial4(buf);
  2391   00290A  0E00               	movlw	low main@buf
  2392   00290C  6E02               	movwf	sendStringSerial4@string^0,c
  2393   00290E  0E01               	movlw	high main@buf
  2394   002910  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2395   002912  EC26  F030         	call	_sendStringSerial4	;wreg free
  2396   002916                     l6013:
  2397                           
  2398                           ;main.c: 101:     while (run_flag)
  2399   002916  0101               	movlb	1	; () banked
  2400   002918  5168               	movf	main@run_flag& (0+255),w,b
  2401   00291A  1169               	iorwf	(main@run_flag+1)& (0+255),w,b
  2402   00291C  A4D8               	btfss	status,2,c
  2403   00291E  EF93  F014         	goto	u5951
  2404   002922  EF95  F014         	goto	u5950
  2405   002926                     u5951:
  2406   002926  EF1D  F012         	goto	l5871
  2407   00292A                     u5950:
  2408   00292A                     
  2409                           ; BSR set to: 1
  2410   00292A  EF00  F000         	goto	start
  2411   00292E                     __end_of_main:
  2412                           	callstack 0
  2413                           
  2414 ;; *************** function _turnCalibration *****************
  2415 ;; Defined at:
  2416 ;;		line 357 in file "dc_motor.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2419 ;;		 -> motorL(9), 
  2420 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2421 ;;		 -> motorR(9), 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;Total ram usage:        6 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 4
  2440 ;; This function calls:
  2441 ;;		_turnLeft45
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text1
  2448   004322                     __ptext1:
  2449                           	callstack 0
  2450   004322                     _turnCalibration:
  2451                           	callstack 26
  2452   004322                     
  2453                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  2454   004322  807E               	bsf	126,0,c	;volatile
  2455   004324                     
  2456                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2457   004324  0E52               	movlw	82
  2458   004326  6E25               	movwf	(??_turnCalibration+1)^0,c
  2459   004328  0E2B               	movlw	43
  2460   00432A  6E24               	movwf	??_turnCalibration^0,c
  2461   00432C  0E00               	movlw	0
  2462   00432E                     u6067:
  2463   00432E  2EE8               	decfsz	wreg,f,c
  2464   004330  D7FE               	bra	u6067
  2465   004332  2E24               	decfsz	??_turnCalibration^0,f,c
  2466   004334  D7FC               	bra	u6067
  2467   004336  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2468   004338  D7FA               	bra	u6067
  2469   00433A  D000               	nop2	
  2470                           
  2471                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2472   00433C  EF58  F022         	goto	l596
  2473   004340                     l597:
  2474                           
  2475                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  2476   004340  867C               	bsf	124,3,c	;volatile
  2477   004342                     
  2478                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2479   004342  0EC7               	movlw	low _motorL
  2480   004344  6E1A               	movwf	turnLeft45@mL^0,c
  2481   004346  0E01               	movlw	high _motorL
  2482   004348  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2483   00434A  0EBE               	movlw	low _motorR
  2484   00434C  6E1C               	movwf	turnLeft45@mR^0,c
  2485   00434E  0E01               	movlw	high _motorR
  2486   004350  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2487   004352  ECA0  F02E         	call	_turnLeft45	;wreg free
  2488                           
  2489                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2490   004356  0EC7               	movlw	low _motorL
  2491   004358  6E1A               	movwf	turnLeft45@mL^0,c
  2492   00435A  0E01               	movlw	high _motorL
  2493   00435C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2494   00435E  0EBE               	movlw	low _motorR
  2495   004360  6E1C               	movwf	turnLeft45@mR^0,c
  2496   004362  0E01               	movlw	high _motorR
  2497   004364  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2498   004366  ECA0  F02E         	call	_turnLeft45	;wreg free
  2499                           
  2500                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2501   00436A  0EC7               	movlw	low _motorL
  2502   00436C  6E1A               	movwf	turnLeft45@mL^0,c
  2503   00436E  0E01               	movlw	high _motorL
  2504   004370  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2505   004372  0EBE               	movlw	low _motorR
  2506   004374  6E1C               	movwf	turnLeft45@mR^0,c
  2507   004376  0E01               	movlw	high _motorR
  2508   004378  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2509   00437A  ECA0  F02E         	call	_turnLeft45	;wreg free
  2510                           
  2511                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  2512   00437E  0EC7               	movlw	low _motorL
  2513   004380  6E1A               	movwf	turnLeft45@mL^0,c
  2514   004382  0E01               	movlw	high _motorL
  2515   004384  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2516   004386  0EBE               	movlw	low _motorR
  2517   004388  6E1C               	movwf	turnLeft45@mR^0,c
  2518   00438A  0E01               	movlw	high _motorR
  2519   00438C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2520   00438E  ECA0  F02E         	call	_turnLeft45	;wreg free
  2521                           
  2522                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2523   004392  EF3D  F022         	goto	l5641
  2524   004396                     l599:
  2525                           
  2526                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  2527   004396  887C               	bsf	124,4,c	;volatile
  2528   004398                     
  2529                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2530   004398  0EA3               	movlw	163
  2531   00439A  6E25               	movwf	(??_turnCalibration+1)^0,c
  2532   00439C  0E57               	movlw	87
  2533   00439E  6E24               	movwf	??_turnCalibration^0,c
  2534   0043A0  0E02               	movlw	2
  2535   0043A2                     u6077:
  2536   0043A2  2EE8               	decfsz	wreg,f,c
  2537   0043A4  D7FE               	bra	u6077
  2538   0043A6  2E24               	decfsz	??_turnCalibration^0,f,c
  2539   0043A8  D7FC               	bra	u6077
  2540   0043AA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2541   0043AC  D7FA               	bra	u6077
  2542   0043AE  D000               	nop2	
  2543                           
  2544                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2545   0043B0  A48E               	btfss	142,2,c	;volatile
  2546   0043B2  EFDD  F021         	goto	u5581
  2547   0043B6  EFE0  F021         	goto	u5580
  2548   0043BA                     u5581:
  2549   0043BA  0E01               	movlw	1
  2550   0043BC  EFE1  F021         	goto	u5582
  2551   0043C0                     u5580:
  2552   0043C0  0E00               	movlw	0
  2553   0043C2                     u5582:
  2554   0043C2  6E24               	movwf	??_turnCalibration^0,c
  2555   0043C4  A68E               	btfss	142,3,c	;volatile
  2556   0043C6  EFE7  F021         	goto	u5591
  2557   0043CA  EFEA  F021         	goto	u5590
  2558   0043CE                     u5591:
  2559   0043CE  0E01               	movlw	1
  2560   0043D0  EFEB  F021         	goto	u5592
  2561   0043D4                     u5590:
  2562   0043D4  0E00               	movlw	0
  2563   0043D6                     u5592:
  2564   0043D6  1424               	andwf	??_turnCalibration^0,w,c
  2565   0043D8  A0E8               	btfss	wreg,0,c
  2566   0043DA  EFF1  F021         	goto	u5601
  2567   0043DE  EFF3  F021         	goto	u5600
  2568   0043E2                     u5601:
  2569   0043E2  EF05  F022         	goto	l600
  2570   0043E6                     u5600:
  2571   0043E6                     
  2572                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  2573   0043E6  8680               	bsf	128,3,c	;volatile
  2574                           
  2575                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  2576   0043E8  8E7C               	bsf	124,7,c	;volatile
  2577   0043EA                     
  2578                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2579   0043EA  0E52               	movlw	82
  2580   0043EC  6E25               	movwf	(??_turnCalibration+1)^0,c
  2581   0043EE  0E2B               	movlw	43
  2582   0043F0  6E24               	movwf	??_turnCalibration^0,c
  2583   0043F2  0E00               	movlw	0
  2584   0043F4                     u6087:
  2585   0043F4  2EE8               	decfsz	wreg,f,c
  2586   0043F6  D7FE               	bra	u6087
  2587   0043F8  2E24               	decfsz	??_turnCalibration^0,f,c
  2588   0043FA  D7FC               	bra	u6087
  2589   0043FC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2590   0043FE  D7FA               	bra	u6087
  2591   004400  D000               	nop2	
  2592   004402                     
  2593                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  2594   004402  9680               	bcf	128,3,c	;volatile
  2595   004404                     
  2596                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  2597   004404  9E7C               	bcf	124,7,c	;volatile
  2598                           
  2599                           ;dc_motor.c: 380:             }
  2600   004406  EF3D  F022         	goto	l5641
  2601   00440A                     l600:
  2602   00440A  B68E               	btfsc	142,3,c	;volatile
  2603   00440C  EF0A  F022         	goto	u5611
  2604   004410  EF0C  F022         	goto	u5610
  2605   004414                     u5611:
  2606   004414  EF21  F022         	goto	l602
  2607   004418                     u5610:
  2608   004418                     
  2609                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2610   004418  0E0A               	movlw	10
  2611   00441A  0100               	movlb	0	; () banked
  2612   00441C  27F9               	addwf	_Turn45Delay& (0+255),f,b
  2613   00441E  0E00               	movlw	0
  2614   004420  23FA               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2615   004422                     
  2616                           ; BSR set to: 0
  2617                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2618   004422  8680               	bsf	128,3,c	;volatile
  2619   004424                     
  2620                           ; BSR set to: 0
  2621                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2622   004424  0E52               	movlw	82
  2623   004426  6E25               	movwf	(??_turnCalibration+1)^0,c
  2624   004428  0E2B               	movlw	43
  2625   00442A  6E24               	movwf	??_turnCalibration^0,c
  2626   00442C  0E00               	movlw	0
  2627   00442E                     u6097:
  2628   00442E  2EE8               	decfsz	wreg,f,c
  2629   004430  D7FE               	bra	u6097
  2630   004432  2E24               	decfsz	??_turnCalibration^0,f,c
  2631   004434  D7FC               	bra	u6097
  2632   004436  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2633   004438  D7FA               	bra	u6097
  2634   00443A  D000               	nop2	
  2635   00443C                     
  2636                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2637   00443C  9680               	bcf	128,3,c	;volatile
  2638                           
  2639                           ;dc_motor.c: 387:             }
  2640   00443E  EF3D  F022         	goto	l5641
  2641   004442                     l602:
  2642   004442  B48E               	btfsc	142,2,c	;volatile
  2643   004444  EF26  F022         	goto	u5621
  2644   004448  EF28  F022         	goto	u5620
  2645   00444C                     u5621:
  2646   00444C  EF3D  F022         	goto	l601
  2647   004450                     u5620:
  2648   004450                     
  2649                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2650   004450  0100               	movlb	0	; () banked
  2651   004452  0EF6               	movlw	246
  2652   004454  27F9               	addwf	_Turn45Delay& (0+255),f,b
  2653   004456  0EFF               	movlw	255
  2654   004458  23FA               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2655   00445A                     
  2656                           ; BSR set to: 0
  2657                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2658   00445A  8E7C               	bsf	124,7,c	;volatile
  2659   00445C                     
  2660                           ; BSR set to: 0
  2661                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2662   00445C  0E52               	movlw	82
  2663   00445E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2664   004460  0E2B               	movlw	43
  2665   004462  6E24               	movwf	??_turnCalibration^0,c
  2666   004464  0E00               	movlw	0
  2667   004466                     u6107:
  2668   004466  2EE8               	decfsz	wreg,f,c
  2669   004468  D7FE               	bra	u6107
  2670   00446A  2E24               	decfsz	??_turnCalibration^0,f,c
  2671   00446C  D7FC               	bra	u6107
  2672   00446E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2673   004470  D7FA               	bra	u6107
  2674   004472  D000               	nop2	
  2675   004474                     
  2676                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2677   004474  9E7C               	bcf	124,7,c	;volatile
  2678   004476  EF3D  F022         	goto	l5641
  2679   00447A                     l601:
  2680   00447A                     l5641:
  2681                           
  2682                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2683   00447A  A48E               	btfss	142,2,c	;volatile
  2684   00447C  EF42  F022         	goto	u5631
  2685   004480  EF44  F022         	goto	u5630
  2686   004484                     u5631:
  2687   004484  EF4B  F022         	goto	l607
  2688   004488                     u5630:
  2689   004488  B68E               	btfsc	142,3,c	;volatile
  2690   00448A  EF49  F022         	goto	u5641
  2691   00448E  EF4B  F022         	goto	u5640
  2692   004492                     u5641:
  2693   004492  EFCB  F021         	goto	l599
  2694   004496                     u5640:
  2695   004496                     l607:
  2696                           
  2697                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2698   004496  987C               	bcf	124,4,c	;volatile
  2699   004498                     
  2700                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2701   004498  0EA3               	movlw	163
  2702   00449A  6E25               	movwf	(??_turnCalibration+1)^0,c
  2703   00449C  0E57               	movlw	87
  2704   00449E  6E24               	movwf	??_turnCalibration^0,c
  2705   0044A0  0E02               	movlw	2
  2706   0044A2                     u6117:
  2707   0044A2  2EE8               	decfsz	wreg,f,c
  2708   0044A4  D7FE               	bra	u6117
  2709   0044A6  2E24               	decfsz	??_turnCalibration^0,f,c
  2710   0044A8  D7FC               	bra	u6117
  2711   0044AA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2712   0044AC  D7FA               	bra	u6117
  2713   0044AE  D000               	nop2	
  2714   0044B0                     l596:
  2715                           
  2716                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2717   0044B0  A68E               	btfss	142,3,c	;volatile
  2718   0044B2  EF5D  F022         	goto	u5651
  2719   0044B6  EF60  F022         	goto	u5650
  2720   0044BA                     u5651:
  2721   0044BA  0E01               	movlw	1
  2722   0044BC  EF61  F022         	goto	u5652
  2723   0044C0                     u5650:
  2724   0044C0  0E00               	movlw	0
  2725   0044C2                     u5652:
  2726   0044C2  6E24               	movwf	??_turnCalibration^0,c
  2727   0044C4  A48E               	btfss	142,2,c	;volatile
  2728   0044C6  EF67  F022         	goto	u5661
  2729   0044CA  EF6A  F022         	goto	u5660
  2730   0044CE                     u5661:
  2731   0044CE  0E01               	movlw	1
  2732   0044D0  EF6B  F022         	goto	u5662
  2733   0044D4                     u5660:
  2734   0044D4  0E00               	movlw	0
  2735   0044D6                     u5662:
  2736   0044D6  1424               	andwf	??_turnCalibration^0,w,c
  2737   0044D8  A0E8               	btfss	wreg,0,c
  2738   0044DA  EF71  F022         	goto	u5671
  2739   0044DE  EF73  F022         	goto	u5670
  2740   0044E2                     u5671:
  2741   0044E2  EFA0  F021         	goto	l597
  2742   0044E6                     u5670:
  2743   0044E6                     
  2744                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2745   0044E6  967C               	bcf	124,3,c	;volatile
  2746   0044E8                     
  2747                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2748   0044E8  0EA3               	movlw	163
  2749   0044EA  6E25               	movwf	(??_turnCalibration+1)^0,c
  2750   0044EC  0E57               	movlw	87
  2751   0044EE  6E24               	movwf	??_turnCalibration^0,c
  2752   0044F0  0E02               	movlw	2
  2753   0044F2                     u6127:
  2754   0044F2  2EE8               	decfsz	wreg,f,c
  2755   0044F4  D7FE               	bra	u6127
  2756   0044F6  2E24               	decfsz	??_turnCalibration^0,f,c
  2757   0044F8  D7FC               	bra	u6127
  2758   0044FA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2759   0044FC  D7FA               	bra	u6127
  2760   0044FE  D000               	nop2	
  2761   004500  0012               	return		;funcret
  2762   004502                     __end_of_turnCalibration:
  2763                           	callstack 0
  2764                           
  2765 ;; *************** function _sprintf *****************
  2766 ;; Defined at:
  2767 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2770 ;;		 -> main@buf(100), 
  2771 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2772 ;;		 -> STR_2(35), STR_1(37), 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  f              11  100[BANK0 ] struct _IO_FILE
  2775 ;;  ap              2   98[BANK0 ] PTR void [1]
  2776 ;;		 -> ?_sprintf(2), 
  2777 ;;  ret             2    0        int 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2   80[BANK0 ] int 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2787 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;Total ram usage:       31 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 7
  2794 ;; This function calls:
  2795 ;;		_vfprintf
  2796 ;; This function is called by:
  2797 ;;		_main
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text2
  2802   005976                     __ptext2:
  2803                           	callstack 0
  2804   005976                     _sprintf:
  2805                           	callstack 23
  2806   005976  0EB4               	movlw	low (?_sprintf+4)
  2807   005978  0100               	movlb	0	; () banked
  2808   00597A  6FC2               	movwf	sprintf@ap& (0+255),b
  2809   00597C  0E00               	movlw	high (?_sprintf+4)
  2810   00597E  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  2811   005980  C0B0  F0C4         	movff	sprintf@s,sprintf@f
  2812   005984  C0B1  F0C5         	movff	sprintf@s+1,sprintf@f+1
  2813   005988                     
  2814                           ; BSR set to: 0
  2815   005988  0E00               	movlw	0
  2816   00598A  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  2817   00598C  0E00               	movlw	0
  2818   00598E  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  2819   005990                     
  2820                           ; BSR set to: 0
  2821   005990  0E00               	movlw	0
  2822   005992  6FCE               	movwf	(sprintf@f+10)& (0+255),b
  2823   005994  0E00               	movlw	0
  2824   005996  6FCD               	movwf	(sprintf@f+9)& (0+255),b
  2825   005998                     
  2826                           ; BSR set to: 0
  2827   005998  0EC4               	movlw	low sprintf@f
  2828   00599A  6FA8               	movwf	vfprintf@fp& (0+255),b
  2829   00599C  0E00               	movlw	high sprintf@f
  2830   00599E  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2831   0059A0  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2832   0059A4  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2833   0059A8  0EC2               	movlw	low sprintf@ap
  2834   0059AA  6FAC               	movwf	vfprintf@ap& (0+255),b
  2835   0059AC  0E00               	movlw	high sprintf@ap
  2836   0059AE  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2837   0059B0  EC90  F02C         	call	_vfprintf	;wreg free
  2838   0059B4  0100               	movlb	0	; () banked
  2839   0059B6  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  2840   0059B8  25B0               	addwf	sprintf@s& (0+255),w,b
  2841   0059BA  6ED9               	movwf	fsr2l,c
  2842   0059BC  51C8               	movf	(sprintf@f+4)& (0+255),w,b
  2843   0059BE  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2844   0059C0  6EDA               	movwf	fsr2h,c
  2845   0059C2  0E00               	movlw	0
  2846   0059C4  6EDF               	movwf	indf2,c
  2847   0059C6                     
  2848                           ; BSR set to: 0
  2849   0059C6  0012               	return		;funcret
  2850   0059C8                     __end_of_sprintf:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function _vfprintf *****************
  2854 ;; Defined at:
  2855 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2858 ;;		 -> sprintf@f(11), 
  2859 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2860 ;;		 -> STR_2(35), STR_1(37), 
  2861 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2862 ;;		 -> sprintf@ap(2), 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2865 ;;		 -> STR_2(35), STR_1(37), 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2   72[BANK0 ] int 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2875 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;Total ram usage:        8 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 6
  2882 ;; This function calls:
  2883 ;;		_vfpfcnvrt
  2884 ;; This function is called by:
  2885 ;;		_sprintf
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text3
  2890   005920                     __ptext3:
  2891                           	callstack 0
  2892   005920                     _vfprintf:
  2893                           	callstack 23
  2894   005920                     
  2895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2896   005920  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2897   005924  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2900   005928  EFA5  F02C         	goto	l5301
  2901   00592C                     l5299:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2904   00592C  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2905   005930  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2906   005934  0EAE               	movlw	low vfprintf@cfmt
  2907   005936  0100               	movlb	0	; () banked
  2908   005938  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2909   00593A  0E00               	movlw	high vfprintf@cfmt
  2910   00593C  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2911   00593E  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2912   005942  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2913   005946  EC70  F01C         	call	_vfpfcnvrt	;wreg free
  2914   00594A                     l5301:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2917   00594A  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2918   00594E  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2919   005952                     	if	0	;tblptru may be non-zero
  2920   005952                     	endif
  2921   005952                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2922   005952  0E00               	movlw	low (__mediumconst shr (0+16))
  2923   005954  6EF8               	movwf	tblptru,c
  2924   005956                     	endif
  2925   005956  0008               	tblrd		*
  2926   005958  50F5               	movf	tablat,w,c
  2927   00595A  0900               	iorlw	0
  2928   00595C  A4D8               	btfss	status,2,c
  2929   00595E  EFB3  F02C         	goto	u5201
  2930   005962  EFB5  F02C         	goto	u5200
  2931   005966                     u5201:
  2932   005966  EF96  F02C         	goto	l5299
  2933   00596A                     u5200:
  2934   00596A                     
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2936   00596A  0E00               	movlw	0
  2937   00596C  0100               	movlb	0	; () banked
  2938   00596E  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2939   005970  0E00               	movlw	0
  2940   005972  6FA8               	movwf	?_vfprintf& (0+255),b
  2941   005974                     
  2942                           ; BSR set to: 0
  2943   005974  0012               	return		;funcret
  2944   005976                     __end_of_vfprintf:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _vfpfcnvrt *****************
  2948 ;; Defined at:
  2949 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2952 ;;		 -> sprintf@f(11), 
  2953 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2954 ;;		 -> vfprintf@cfmt(2), 
  2955 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2956 ;;		 -> sprintf@ap(2), 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  convarg         8   61[BANK0 ] struct .
  2959 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2960 ;;		 -> STR_2(35), STR_1(37), 
  2961 ;;  i               2    0        int 
  2962 ;;  done            2    0        int 
  2963 ;;  c               1   69[BANK0 ] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2973 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;Total ram usage:       19 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 5
  2980 ;; This function calls:
  2981 ;;		_dtoa
  2982 ;;		_efgtoa
  2983 ;;		_fputc
  2984 ;; This function is called by:
  2985 ;;		_vfprintf
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text4
  2990   0038E0                     __ptext4:
  2991                           	callstack 0
  2992   0038E0                     _vfpfcnvrt:
  2993                           	callstack 23
  2994   0038E0                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2996   0038E0  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2997   0038E4  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2998   0038E8  CFDE FFF6          	movff	postinc2,tblptrl
  2999   0038EC  CFDD FFF7          	movff	postdec2,tblptrh
  3000   0038F0                     	if	0	;tblptru may be non-zero
  3001   0038F0                     	endif
  3002   0038F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3003   0038F0  0E00               	movlw	low (__mediumconst shr (0+16))
  3004   0038F2  6EF8               	movwf	tblptru,c
  3005   0038F4                     	endif
  3006   0038F4  0008               	tblrd		*
  3007   0038F6  50F5               	movf	tablat,w,c
  3008   0038F8  0A25               	xorlw	37
  3009   0038FA  A4D8               	btfss	status,2,c
  3010   0038FC  EF82  F01C         	goto	u5031
  3011   003900  EF84  F01C         	goto	u5030
  3012   003904                     u5031:
  3013   003904  EFDC  F01D         	goto	l5149
  3014   003908                     u5030:
  3015   003908                     
  3016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3017   003908  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3018   00390C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3019   003910  2ADE               	incf	postinc2,f,c
  3020   003912  0E00               	movlw	0
  3021   003914  22DD               	addwfc	postdec2,f,c
  3022   003916                     
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3024   003916  0E00               	movlw	0
  3025   003918  0100               	movlb	0	; () banked
  3026   00391A  6FEE               	movwf	(_width+1)& (0+255),b
  3027   00391C  0E00               	movlw	0
  3028   00391E  6FED               	movwf	_width& (0+255),b
  3029   003920  C0ED  F0F3         	movff	_width,_flags
  3030   003924                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3033   003924  69EF               	setf	_prec& (0+255),b
  3034   003926  69F0               	setf	(_prec+1)& (0+255),b
  3035   003928                     
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3038   003928  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3039   00392C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3040   003930  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3041   003934  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3042   003938                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3045   003938  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3046   00393C  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3047   003940                     	if	0	;tblptru may be non-zero
  3048   003940                     	endif
  3049   003940                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3050   003940  0E00               	movlw	low (__mediumconst shr (0+16))
  3051   003942  6EF8               	movwf	tblptru,c
  3052   003944                     	endif
  3053   003944  0008               	tblrd		*
  3054   003946  50F5               	movf	tablat,w,c
  3055   003948  0A64               	xorlw	100
  3056   00394A  B4D8               	btfsc	status,2,c
  3057   00394C  EFAA  F01C         	goto	u5041
  3058   003950  EFAC  F01C         	goto	u5040
  3059   003954                     u5041:
  3060   003954  EFBC  F01C         	goto	l5105
  3061   003958                     u5040:
  3062   003958                     
  3063                           ; BSR set to: 0
  3064   003958  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3065   00395C  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3066   003960                     	if	0	;tblptru may be non-zero
  3067   003960                     	endif
  3068   003960                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3069   003960  0E00               	movlw	low (__mediumconst shr (0+16))
  3070   003962  6EF8               	movwf	tblptru,c
  3071   003964                     	endif
  3072   003964  0008               	tblrd		*
  3073   003966  50F5               	movf	tablat,w,c
  3074   003968  0A69               	xorlw	105
  3075   00396A  A4D8               	btfss	status,2,c
  3076   00396C  EFBA  F01C         	goto	u5051
  3077   003970  EFBC  F01C         	goto	u5050
  3078   003974                     u5051:
  3079   003974  EFFF  F01C         	goto	l5111
  3080   003978                     u5050:
  3081   003978                     l5105:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3085   003978  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3086   00397C  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3087   003980  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3088   003984  0E02               	movlw	2
  3089   003986  26DE               	addwf	postinc2,f,c
  3090   003988  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3091   00398C  0E00               	movlw	0
  3092   00398E  22DD               	addwfc	postdec2,f,c
  3093   003990  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3094   003994  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3095   003998  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3096   00399C  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  3097   0039A0  0E00               	movlw	0
  3098   0039A2  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3099   0039A4  0EFF               	movlw	-1
  3100   0039A6  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3101   0039A8  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3102   0039AA  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3103   0039AC  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3104   0039AE  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3105   0039B0  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3108   0039B2  0E01               	movlw	1
  3109   0039B4  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3110   0039B6  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3111   0039B8  0E00               	movlw	0
  3112   0039BA  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3113   0039BC  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3114   0039BE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3115   0039C2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3116   0039C6  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3117   0039CA  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3118   0039CE                     
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3121   0039CE  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3122   0039D2  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3123   0039D6  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3124   0039DA  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3125   0039DE  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3126   0039E2  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3127   0039E6  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3128   0039EA  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3129   0039EE  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3130   0039F2  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3131   0039F6  EC49  F01F         	call	_dtoa	;wreg free
  3132   0039FA  EFF2  F01D         	goto	l1486
  3133   0039FE                     l5111:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3137   0039FE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3138   003A02  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3139   003A06  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3140   003A0A  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3141   003A0E                     
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3144   003A0E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3145   003A12  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3146   003A16                     	if	0	;tblptru may be non-zero
  3147   003A16                     	endif
  3148   003A16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3149   003A16  0E00               	movlw	low (__mediumconst shr (0+16))
  3150   003A18  6EF8               	movwf	tblptru,c
  3151   003A1A                     	endif
  3152   003A1A  0008               	tblrd		*
  3153   003A1C  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3156   003A20  EF1E  F01D         	goto	l5123
  3157   003A24                     l5115:
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3161   003A24  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3162   003A26  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3165   003A28  EF37  F01D         	goto	l5125
  3166   003A2C                     l5117:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3170   003A2C  0E6C               	movlw	108
  3171   003A2E  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3174   003A30  EF37  F01D         	goto	l5125
  3175   003A34                     l5119:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3179   003A34  0E00               	movlw	0
  3180   003A36  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3183   003A38  EF37  F01D         	goto	l5125
  3184   003A3C                     l5123:
  3185                           
  3186                           ; BSR set to: 0
  3187   003A3C  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3188   003A3E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3189   003A40  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3190                           
  3191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3192                           ; Switch size 1, requested type "simple"
  3193                           ; Number of cases is 1, Range of values is 0 to 0
  3194                           ; switch strategies available:
  3195                           ; Name         Instructions Cycles
  3196                           ; simple_byte            4     3 (average)
  3197                           ;	Chosen strategy is simple_byte
  3198   003A42  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3199   003A44  0A00               	xorlw	0	; case 0
  3200   003A46  B4D8               	btfsc	status,2,c
  3201   003A48  EF28  F01D         	goto	l6155
  3202   003A4C  EF1A  F01D         	goto	l5119
  3203   003A50                     l6155:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ; Switch size 1, requested type "simple"
  3207                           ; Number of cases is 3, Range of values is 76 to 108
  3208                           ; switch strategies available:
  3209                           ; Name         Instructions Cycles
  3210                           ; simple_byte           10     6 (average)
  3211                           ;	Chosen strategy is simple_byte
  3212   003A50  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3213   003A52  0A4C               	xorlw	76	; case 76
  3214   003A54  B4D8               	btfsc	status,2,c
  3215   003A56  EF12  F01D         	goto	l5115
  3216   003A5A  0A2A               	xorlw	42	; case 102
  3217   003A5C  B4D8               	btfsc	status,2,c
  3218   003A5E  EF16  F01D         	goto	l5117
  3219   003A62  0A0A               	xorlw	10	; case 108
  3220   003A64  B4D8               	btfsc	status,2,c
  3221   003A66  EF12  F01D         	goto	l5115
  3222   003A6A  EF1A  F01D         	goto	l5119
  3223   003A6E                     l5125:
  3224                           
  3225                           ; BSR set to: 0
  3226   003A6E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3227   003A72  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3228   003A76                     	if	0	;tblptru may be non-zero
  3229   003A76                     	endif
  3230   003A76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3231   003A76  0E00               	movlw	low (__mediumconst shr (0+16))
  3232   003A78  6EF8               	movwf	tblptru,c
  3233   003A7A                     	endif
  3234   003A7A  0008               	tblrd		*
  3235   003A7C  50F5               	movf	tablat,w,c
  3236   003A7E  0A66               	xorlw	102
  3237   003A80  A4D8               	btfss	status,2,c
  3238   003A82  EF45  F01D         	goto	u5061
  3239   003A86  EF47  F01D         	goto	u5060
  3240   003A8A                     u5061:
  3241   003A8A  EFD3  F01D         	goto	l5145
  3242   003A8E                     u5060:
  3243   003A8E  EF7D  F01D         	goto	l5133
  3244   003A92                     l5127:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3248   003A92  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3249   003A96  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3250   003A9A  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3251   003A9E  0E04               	movlw	4
  3252   003AA0  26DE               	addwf	postinc2,f,c
  3253   003AA2  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3254   003AA6  0E00               	movlw	0
  3255   003AA8  22DD               	addwfc	postdec2,f,c
  3256   003AAA  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3257   003AAE  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3258   003AB2  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3259   003AB6  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3260   003ABA  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3261   003ABE  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3264   003AC2  EF92  F01D         	goto	l5135
  3265   003AC6                     l5129:
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3269   003AC6  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3270   003ACA  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3271   003ACE  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3272   003AD2  0E04               	movlw	4
  3273   003AD4  26DE               	addwf	postinc2,f,c
  3274   003AD6  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3275   003ADA  0E00               	movlw	0
  3276   003ADC  22DD               	addwfc	postdec2,f,c
  3277   003ADE  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3278   003AE2  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3279   003AE6  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3280   003AEA  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3281   003AEE  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3282   003AF2  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3285   003AF6  EF92  F01D         	goto	l5135
  3286   003AFA                     l5133:
  3287                           
  3288                           ; BSR set to: 0
  3289   003AFA  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3290   003AFC  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3291   003AFE  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3292                           
  3293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3294                           ; Switch size 1, requested type "simple"
  3295                           ; Number of cases is 1, Range of values is 0 to 0
  3296                           ; switch strategies available:
  3297                           ; Name         Instructions Cycles
  3298                           ; simple_byte            4     3 (average)
  3299                           ;	Chosen strategy is simple_byte
  3300   003B00  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3301   003B02  0A00               	xorlw	0	; case 0
  3302   003B04  B4D8               	btfsc	status,2,c
  3303   003B06  EF87  F01D         	goto	l6157
  3304   003B0A  EF92  F01D         	goto	l5135
  3305   003B0E                     l6157:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ; Switch size 1, requested type "simple"
  3309                           ; Number of cases is 2, Range of values is 76 to 108
  3310                           ; switch strategies available:
  3311                           ; Name         Instructions Cycles
  3312                           ; simple_byte            7     4 (average)
  3313                           ;	Chosen strategy is simple_byte
  3314   003B0E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3315   003B10  0A4C               	xorlw	76	; case 76
  3316   003B12  B4D8               	btfsc	status,2,c
  3317   003B14  EF63  F01D         	goto	l5129
  3318   003B18  0A20               	xorlw	32	; case 108
  3319   003B1A  B4D8               	btfsc	status,2,c
  3320   003B1C  EF49  F01D         	goto	l5127
  3321   003B20  EF92  F01D         	goto	l5135
  3322   003B24                     l5135:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3326   003B24  0E01               	movlw	1
  3327   003B26  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3328   003B28  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3329   003B2A  0E00               	movlw	0
  3330   003B2C  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3331   003B2E  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3332   003B30  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3333   003B34  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3334   003B38  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3335   003B3C  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3338   003B40  EFBB  F01D         	goto	l5143
  3339   003B44                     l5137:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3343   003B44  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3344   003B48  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3345   003B4C  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3346   003B50  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3347   003B54  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3348   003B58  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3349   003B5C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3350   003B60  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3351   003B64                     	if	0	;tblptru may be non-zero
  3352   003B64                     	endif
  3353   003B64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3354   003B64  0E00               	movlw	low (__mediumconst shr (0+16))
  3355   003B66  6EF8               	movwf	tblptru,c
  3356   003B68                     	endif
  3357   003B68  0008               	tblrd		*
  3358   003B6A  CFF5 F066          	movff	tablat,efgtoa@c
  3359   003B6E  EC97  F00C         	call	_efgtoa	;wreg free
  3360   003B72  EFF2  F01D         	goto	l1486
  3361   003B76                     l5143:
  3362                           
  3363                           ; BSR set to: 0
  3364   003B76  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3365   003B7A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3366   003B7E                     	if	0	;tblptru may be non-zero
  3367   003B7E                     	endif
  3368   003B7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3369   003B7E  0E00               	movlw	low (__mediumconst shr (0+16))
  3370   003B80  6EF8               	movwf	tblptru,c
  3371   003B82                     	endif
  3372   003B82  0008               	tblrd		*
  3373   003B84  50F5               	movf	tablat,w,c
  3374   003B86  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3375   003B88  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3376                           
  3377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3378                           ; Switch size 1, requested type "simple"
  3379                           ; Number of cases is 1, Range of values is 0 to 0
  3380                           ; switch strategies available:
  3381                           ; Name         Instructions Cycles
  3382                           ; simple_byte            4     3 (average)
  3383                           ;	Chosen strategy is simple_byte
  3384   003B8A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3385   003B8C  0A00               	xorlw	0	; case 0
  3386   003B8E  B4D8               	btfsc	status,2,c
  3387   003B90  EFCC  F01D         	goto	l6159
  3388   003B94  EFD3  F01D         	goto	l5145
  3389   003B98                     l6159:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ; Switch size 1, requested type "simple"
  3393                           ; Number of cases is 1, Range of values is 102 to 102
  3394                           ; switch strategies available:
  3395                           ; Name         Instructions Cycles
  3396                           ; simple_byte            4     3 (average)
  3397                           ;	Chosen strategy is simple_byte
  3398   003B98  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3399   003B9A  0A66               	xorlw	102	; case 102
  3400   003B9C  B4D8               	btfsc	status,2,c
  3401   003B9E  EFA2  F01D         	goto	l5137
  3402   003BA2  EFD3  F01D         	goto	l5145
  3403   003BA6                     l5145:
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3406   003BA6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3407   003BAA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3408   003BAE  2ADE               	incf	postinc2,f,c
  3409   003BB0  0E00               	movlw	0
  3410   003BB2  22DD               	addwfc	postdec2,f,c
  3411   003BB4  EFF2  F01D         	goto	l1486
  3412   003BB8                     l5149:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3415   003BB8  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3416   003BBC  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3417   003BC0  CFDE FFF6          	movff	postinc2,tblptrl
  3418   003BC4  CFDD FFF7          	movff	postdec2,tblptrh
  3419   003BC8                     	if	0	;tblptru may be non-zero
  3420   003BC8                     	endif
  3421   003BC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3422   003BC8  0E00               	movlw	low (__mediumconst shr (0+16))
  3423   003BCA  6EF8               	movwf	tblptru,c
  3424   003BCC                     	endif
  3425   003BCC  0008               	tblrd		*
  3426   003BCE  50F5               	movf	tablat,w,c
  3427   003BD0  6E01               	movwf	fputc@c^0,c
  3428   003BD2  6A02               	clrf	(fputc@c+1)^0,c
  3429   003BD4  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3430   003BD8  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3431   003BDC  EC0B  F027         	call	_fputc	;wreg free
  3432   003BE0  EFD3  F01D         	goto	l5145
  3433   003BE4                     l1486:
  3434   003BE4  0012               	return		;funcret
  3435   003BE6                     __end_of_vfpfcnvrt:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _efgtoa *****************
  3439 ;; Defined at:
  3440 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3443 ;;		 -> sprintf@f(11), 
  3444 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3445 ;;  c               1    6[BANK0 ] unsigned char 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  u               4   49[BANK0 ] struct flui
  3448 ;;  g               4   45[BANK0 ] struct flui
  3449 ;;  l               4   38[BANK0 ] struct flui
  3450 ;;  h               4   34[BANK0 ] struct flui
  3451 ;;  ou              4   28[BANK0 ] struct flui
  3452 ;;  n               2   43[BANK0 ] int 
  3453 ;;  i               2   32[BANK0 ] int 
  3454 ;;  w               2   26[BANK0 ] int 
  3455 ;;  e               2   24[BANK0 ] int 
  3456 ;;  m               2   22[BANK0 ] int 
  3457 ;;  d               2   20[BANK0 ] int 
  3458 ;;  t               2   13[BANK0 ] int 
  3459 ;;  p               2   11[BANK0 ] int 
  3460 ;;  ne              2    9[BANK0 ] int 
  3461 ;;  sign            1   42[BANK0 ] unsigned char 
  3462 ;;  nmode           1   19[BANK0 ] unsigned char 
  3463 ;;  mode            1   18[BANK0 ] unsigned char 
  3464 ;;  pp              1   17[BANK0 ] unsigned char 
  3465 ;;  esign           1    0        unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3475 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;Total ram usage:       53 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 4
  3482 ;; This function calls:
  3483 ;;		___fladd
  3484 ;;		___fldiv
  3485 ;;		___fleq
  3486 ;;		___flge
  3487 ;;		___flmul
  3488 ;;		___flneg
  3489 ;;		___flsub
  3490 ;;		___fltol
  3491 ;;		___fpclassifyf
  3492 ;;		_floorf
  3493 ;;		_labs
  3494 ;;		_memcpy
  3495 ;;		_pad
  3496 ;;		_strcpy
  3497 ;; This function is called by:
  3498 ;;		_vfpfcnvrt
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text5
  3503   00192E                     __ptext5:
  3504                           	callstack 0
  3505   00192E                     _efgtoa:
  3506                           	callstack 23
  3507   00192E                     
  3508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3509   00192E  0E00               	movlw	0
  3510   001930  0100               	movlb	0	; () banked
  3511   001932  6F8A               	movwf	efgtoa@sign& (0+255),b
  3512   001934                     
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3515   001934  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3516   001938  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3517   00193C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3518   001940  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3519   001944                     
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3522   001944  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3523   001946  EFA9  F00C         	goto	u4680
  3524   00194A  EFA7  F00C         	goto	u4681
  3525   00194E                     u4681:
  3526   00194E  EFBD  F00C         	goto	l4815
  3527   001952                     u4680:
  3528   001952                     
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3531   001952  0E01               	movlw	1
  3532   001954  6F8A               	movwf	efgtoa@sign& (0+255),b
  3533   001956                     
  3534                           ; BSR set to: 0
  3535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3536   001956  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3537   00195A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3538   00195E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3539   001962  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3540   001966  ECD3  F02F         	call	___flneg	;wreg free
  3541   00196A  C001  F08D         	movff	?___flneg,efgtoa@g
  3542   00196E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3543   001972  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3544   001976  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3545   00197A                     l4815:
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3548   00197A  0E00               	movlw	0
  3549   00197C  0100               	movlb	0	; () banked
  3550   00197E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3551   001980  0E00               	movlw	0
  3552   001982  6F8B               	movwf	efgtoa@n& (0+255),b
  3553   001984                     
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3556   001984  C0ED  F07A         	movff	_width,efgtoa@w
  3557   001988  C0EE  F07B         	movff	_width+1,efgtoa@w+1
  3558   00198C                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3561   00198C  518A               	movf	efgtoa@sign& (0+255),w,b
  3562   00198E  B4D8               	btfsc	status,2,c
  3563   001990  EFCC  F00C         	goto	u4691
  3564   001994  EFCE  F00C         	goto	u4690
  3565   001998                     u4691:
  3566   001998  EFE2  F00C         	goto	l4829
  3567   00199C                     u4690:
  3568   00199C                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3571   00199C  518A               	movf	efgtoa@sign& (0+255),w,b
  3572   00199E  A4D8               	btfss	status,2,c
  3573   0019A0  EFD4  F00C         	goto	u4701
  3574   0019A4  EFD6  F00C         	goto	u4700
  3575   0019A8                     u4701:
  3576   0019A8  EFDC  F00C         	goto	l4825
  3577   0019AC                     u4700:
  3578   0019AC                     
  3579                           ; BSR set to: 0
  3580   0019AC  0E00               	movlw	0
  3581   0019AE  6F70               	movwf	(_efgtoa$2772+1)& (0+255),b
  3582   0019B0  0E2B               	movlw	43
  3583   0019B2  6F6F               	movwf	_efgtoa$2772& (0+255),b
  3584   0019B4  EFE0  F00C         	goto	l4827
  3585   0019B8                     l4825:
  3586                           
  3587                           ; BSR set to: 0
  3588   0019B8  0E00               	movlw	0
  3589   0019BA  6F70               	movwf	(_efgtoa$2772+1)& (0+255),b
  3590   0019BC  0E2D               	movlw	45
  3591   0019BE  6F6F               	movwf	_efgtoa$2772& (0+255),b
  3592   0019C0                     l4827:
  3593                           
  3594                           ; BSR set to: 0
  3595   0019C0  C06F  F08A         	movff	_efgtoa$2772,efgtoa@sign
  3596   0019C4                     l4829:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3600   0019C4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3601   0019C8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3602   0019CC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3603   0019D0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3604   0019D4  EC8C  F026         	call	___fpclassifyf	;wreg free
  3605   0019D8  0401               	decf	?___fpclassifyf^0,w,c
  3606   0019DA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3607   0019DC  A4D8               	btfss	status,2,c
  3608   0019DE  EFF3  F00C         	goto	u4711
  3609   0019E2  EFF5  F00C         	goto	u4710
  3610   0019E6                     u4711:
  3611   0019E6  EF28  F00D         	goto	l4847
  3612   0019EA                     u4710:
  3613   0019EA                     
  3614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3615   0019EA  0100               	movlb	0	; () banked
  3616   0019EC  518A               	movf	efgtoa@sign& (0+255),w,b
  3617   0019EE  B4D8               	btfsc	status,2,c
  3618   0019F0  EFFC  F00C         	goto	u4721
  3619   0019F4  EFFE  F00C         	goto	u4720
  3620   0019F8                     u4721:
  3621   0019F8  EF07  F00D         	goto	l4839
  3622   0019FC                     u4720:
  3623   0019FC                     
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3626   0019FC  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3627   001A00                     
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3630   001A00  077A               	decf	efgtoa@w& (0+255),f,b
  3631   001A02  A0D8               	btfss	status,0,c
  3632   001A04  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3633   001A06                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3636   001A06  0E00               	movlw	0
  3637   001A08  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3638   001A0A  0E01               	movlw	1
  3639   001A0C  6F8B               	movwf	efgtoa@n& (0+255),b
  3640   001A0E                     l4839:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3644   001A0E  0EA0               	movlw	low _dbuf
  3645   001A10  258B               	addwf	efgtoa@n& (0+255),w,b
  3646   001A12  6E01               	movwf	strcpy@dest^0,c
  3647   001A14  0E02               	movlw	high _dbuf
  3648   001A16  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3649   001A18  6E02               	movwf	(strcpy@dest+1)^0,c
  3650   001A1A  0E49               	movlw	low STR_3
  3651   001A1C  6E03               	movwf	strcpy@src^0,c
  3652   001A1E  0E0E               	movlw	high STR_3
  3653   001A20  6E04               	movwf	(strcpy@src+1)^0,c
  3654   001A22  EC10  F02F         	call	_strcpy	;wreg free
  3655   001A26                     l4841:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3658   001A26  0100               	movlb	0	; () banked
  3659   001A28  0EFD               	movlw	253
  3660   001A2A  277A               	addwf	efgtoa@w& (0+255),f,b
  3661   001A2C  0EFF               	movlw	255
  3662   001A2E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3663   001A30                     
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3666   001A30  C060  F011         	movff	efgtoa@fp,pad@fp
  3667   001A34  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3668   001A38  0EA0               	movlw	low _dbuf
  3669   001A3A  6E13               	movwf	pad@buf^0,c
  3670   001A3C  0E02               	movlw	high _dbuf
  3671   001A3E  6E14               	movwf	(pad@buf+1)^0,c
  3672   001A40  C07A  F015         	movff	efgtoa@w,pad@p
  3673   001A44  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3674   001A48  ECD0  F02A         	call	_pad	;wreg free
  3675   001A4C  EF93  F011         	goto	l1438
  3676   001A50                     l4847:
  3677                           
  3678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3679   001A50  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3680   001A54  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3681   001A58  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3682   001A5C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3683   001A60  EC8C  F026         	call	___fpclassifyf	;wreg free
  3684   001A64  5001               	movf	?___fpclassifyf^0,w,c
  3685   001A66  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3686   001A68  A4D8               	btfss	status,2,c
  3687   001A6A  EF39  F00D         	goto	u4731
  3688   001A6E  EF3B  F00D         	goto	u4730
  3689   001A72                     u4731:
  3690   001A72  EF5B  F00D         	goto	l4865
  3691   001A76                     u4730:
  3692   001A76                     
  3693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3694   001A76  0100               	movlb	0	; () banked
  3695   001A78  518A               	movf	efgtoa@sign& (0+255),w,b
  3696   001A7A  B4D8               	btfsc	status,2,c
  3697   001A7C  EF42  F00D         	goto	u4741
  3698   001A80  EF44  F00D         	goto	u4740
  3699   001A84                     u4741:
  3700   001A84  EF4D  F00D         	goto	l4857
  3701   001A88                     u4740:
  3702   001A88                     
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3705   001A88  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3706   001A8C                     
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3709   001A8C  077A               	decf	efgtoa@w& (0+255),f,b
  3710   001A8E  A0D8               	btfss	status,0,c
  3711   001A90  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3712   001A92                     
  3713                           ; BSR set to: 0
  3714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3715   001A92  0E00               	movlw	0
  3716   001A94  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3717   001A96  0E01               	movlw	1
  3718   001A98  6F8B               	movwf	efgtoa@n& (0+255),b
  3719   001A9A                     l4857:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3723   001A9A  0EA0               	movlw	low _dbuf
  3724   001A9C  258B               	addwf	efgtoa@n& (0+255),w,b
  3725   001A9E  6E01               	movwf	strcpy@dest^0,c
  3726   001AA0  0E02               	movlw	high _dbuf
  3727   001AA2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3728   001AA4  6E02               	movwf	(strcpy@dest+1)^0,c
  3729   001AA6  0E4D               	movlw	low STR_6
  3730   001AA8  6E03               	movwf	strcpy@src^0,c
  3731   001AAA  0E0E               	movlw	high STR_6
  3732   001AAC  6E04               	movwf	(strcpy@src+1)^0,c
  3733   001AAE  EC10  F02F         	call	_strcpy	;wreg free
  3734   001AB2  EF13  F00D         	goto	l4841
  3735   001AB6                     l4865:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3738   001AB6  0E00               	movlw	0
  3739   001AB8  0100               	movlb	0	; () banked
  3740   001ABA  6F91               	movwf	efgtoa@u& (0+255),b
  3741   001ABC  0E00               	movlw	0
  3742   001ABE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3743   001AC0  0E80               	movlw	128
  3744   001AC2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3745   001AC4  0E3F               	movlw	63
  3746   001AC6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3749   001AC8  0E00               	movlw	0
  3750   001ACA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3751   001ACC  0E00               	movlw	0
  3752   001ACE  6F78               	movwf	efgtoa@e& (0+255),b
  3753   001AD0                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3756   001AD0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3757   001AD4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3758   001AD8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3759   001ADC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3760   001AE0  0E00               	movlw	0
  3761   001AE2  6E36               	movwf	___fleq@ff2^0,c
  3762   001AE4  0E00               	movlw	0
  3763   001AE6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3764   001AE8  0E00               	movlw	0
  3765   001AEA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3766   001AEC  0E00               	movlw	0
  3767   001AEE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3768   001AF0  EC7B  F028         	call	___fleq	;wreg free
  3769   001AF4  B0D8               	btfsc	status,0,c
  3770   001AF6  EF7F  F00D         	goto	u4751
  3771   001AFA  EF81  F00D         	goto	u4750
  3772   001AFE                     u4751:
  3773   001AFE  EF60  F00E         	goto	l1441
  3774   001B02                     u4750:
  3775   001B02  EF8E  F00D         	goto	l4873
  3776   001B06                     l1443:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3779   001B06  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3780   001B0A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3781   001B0E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3782   001B12  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3783   001B16                     
  3784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3785   001B16  0100               	movlb	0	; () banked
  3786   001B18  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3787   001B1A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3788   001B1C                     l4873:
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3791   001B1C  C091  F011         	movff	efgtoa@u,___flmul@b
  3792   001B20  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3793   001B24  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3794   001B28  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3795   001B2C  0E00               	movlw	0
  3796   001B2E  6E15               	movwf	___flmul@a^0,c
  3797   001B30  0E00               	movlw	0
  3798   001B32  6E16               	movwf	(___flmul@a+1)^0,c
  3799   001B34  0E20               	movlw	32
  3800   001B36  6E17               	movwf	(___flmul@a+2)^0,c
  3801   001B38  0E41               	movlw	65
  3802   001B3A  6E18               	movwf	(___flmul@a+3)^0,c
  3803   001B3C  ECF7  F016         	call	___flmul	;wreg free
  3804   001B40  C011  F07C         	movff	?___flmul,efgtoa@ou
  3805   001B44  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3806   001B48  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3807   001B4C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3808   001B50  0100               	movlb	0	; () banked
  3809   001B52  517C               	movf	efgtoa@ou& (0+255),w,b
  3810   001B54  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3811   001B56  6E01               	movwf	labs@a^0,c
  3812   001B58  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3813   001B5A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3814   001B5C  6E02               	movwf	(labs@a+1)^0,c
  3815   001B5E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3816   001B60  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3817   001B62  6E03               	movwf	(labs@a+2)^0,c
  3818   001B64  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3819   001B66  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3820   001B68  6E04               	movwf	(labs@a+3)^0,c
  3821   001B6A  EC47  F02B         	call	_labs	;wreg free
  3822   001B6E  BE04               	btfsc	(?_labs+3)^0,7,c
  3823   001B70  EFC5  F00D         	goto	u4761
  3824   001B74  5004               	movf	(?_labs+3)^0,w,c
  3825   001B76  1003               	iorwf	(?_labs+2)^0,w,c
  3826   001B78  1002               	iorwf	(?_labs+1)^0,w,c
  3827   001B7A  E109               	bnz	u4760
  3828   001B7C  0E02               	movlw	2
  3829   001B7E  5C01               	subwf	?_labs^0,w,c
  3830   001B80  A0D8               	btfss	status,0,c
  3831   001B82  EFC5  F00D         	goto	u4761
  3832   001B86  EFC7  F00D         	goto	u4760
  3833   001B8A                     u4761:
  3834   001B8A  EF83  F00D         	goto	l1443
  3835   001B8E                     u4760:
  3836   001B8E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3837   001B92  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3838   001B96  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3839   001B9A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3840   001B9E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3841   001BA2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3842   001BA6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3843   001BAA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3844   001BAE  EC0A  F026         	call	___flge	;wreg free
  3845   001BB2  A0D8               	btfss	status,0,c
  3846   001BB4  EFDE  F00D         	goto	u4771
  3847   001BB8  EFE0  F00D         	goto	u4770
  3848   001BBC                     u4771:
  3849   001BBC  EF83  F00D         	goto	l1443
  3850   001BC0                     u4770:
  3851   001BC0                     
  3852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3853   001BC0  0100               	movlb	0	; () banked
  3854   001BC2  5191               	movf	efgtoa@u& (0+255),w,b
  3855   001BC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3856   001BC6  6E01               	movwf	labs@a^0,c
  3857   001BC8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3858   001BCA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3859   001BCC  6E02               	movwf	(labs@a+1)^0,c
  3860   001BCE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3861   001BD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3862   001BD2  6E03               	movwf	(labs@a+2)^0,c
  3863   001BD4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3864   001BD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3865   001BD8  6E04               	movwf	(labs@a+3)^0,c
  3866   001BDA  EC47  F02B         	call	_labs	;wreg free
  3867   001BDE  BE04               	btfsc	(?_labs+3)^0,7,c
  3868   001BE0  EFFF  F00D         	goto	u4780
  3869   001BE4  5004               	movf	(?_labs+3)^0,w,c
  3870   001BE6  1003               	iorwf	(?_labs+2)^0,w,c
  3871   001BE8  1002               	iorwf	(?_labs+1)^0,w,c
  3872   001BEA  E107               	bnz	u4781
  3873   001BEC  0E02               	movlw	2
  3874   001BEE  5C01               	subwf	?_labs^0,w,c
  3875   001BF0  B0D8               	btfsc	status,0,c
  3876   001BF2  EFFD  F00D         	goto	u4781
  3877   001BF6  EFFF  F00D         	goto	u4780
  3878   001BFA                     u4781:
  3879   001BFA  EF47  F00E         	goto	l4891
  3880   001BFE                     u4780:
  3881   001BFE                     l4881:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3884   001BFE  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3885   001C02  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3886   001C06  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3887   001C0A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3890   001C0E  EF60  F00E         	goto	l1441
  3891   001C12                     l4883:
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3894   001C12  C091  F032         	movff	efgtoa@u,___fldiv@b
  3895   001C16  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3896   001C1A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3897   001C1E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3898   001C22  0E00               	movlw	0
  3899   001C24  6E36               	movwf	___fldiv@a^0,c
  3900   001C26  0E00               	movlw	0
  3901   001C28  6E37               	movwf	(___fldiv@a+1)^0,c
  3902   001C2A  0E20               	movlw	32
  3903   001C2C  6E38               	movwf	(___fldiv@a+2)^0,c
  3904   001C2E  0E41               	movlw	65
  3905   001C30  6E39               	movwf	(___fldiv@a+3)^0,c
  3906   001C32  EC0C  F019         	call	___fldiv	;wreg free
  3907   001C36  C032  F091         	movff	?___fldiv,efgtoa@u
  3908   001C3A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3909   001C3E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3910   001C42  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3911   001C46                     
  3912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3913   001C46  0100               	movlb	0	; () banked
  3914   001C48  0778               	decf	efgtoa@e& (0+255),f,b
  3915   001C4A  A0D8               	btfss	status,0,c
  3916   001C4C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3917   001C4E                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3920   001C4E  5191               	movf	efgtoa@u& (0+255),w,b
  3921   001C50  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3922   001C52  6E01               	movwf	labs@a^0,c
  3923   001C54  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3924   001C56  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3925   001C58  6E02               	movwf	(labs@a+1)^0,c
  3926   001C5A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3927   001C5C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3928   001C5E  6E03               	movwf	(labs@a+2)^0,c
  3929   001C60  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3930   001C62  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3931   001C64  6E04               	movwf	(labs@a+3)^0,c
  3932   001C66  EC47  F02B         	call	_labs	;wreg free
  3933   001C6A  BE04               	btfsc	(?_labs+3)^0,7,c
  3934   001C6C  EF45  F00E         	goto	u4790
  3935   001C70  5004               	movf	(?_labs+3)^0,w,c
  3936   001C72  1003               	iorwf	(?_labs+2)^0,w,c
  3937   001C74  1002               	iorwf	(?_labs+1)^0,w,c
  3938   001C76  E107               	bnz	u4791
  3939   001C78  0E02               	movlw	2
  3940   001C7A  5C01               	subwf	?_labs^0,w,c
  3941   001C7C  B0D8               	btfsc	status,0,c
  3942   001C7E  EF43  F00E         	goto	u4791
  3943   001C82  EF45  F00E         	goto	u4790
  3944   001C86                     u4791:
  3945   001C86  EF47  F00E         	goto	l4891
  3946   001C8A                     u4790:
  3947   001C8A  EFFF  F00D         	goto	l4881
  3948   001C8E                     l4891:
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3951   001C8E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3952   001C92  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3953   001C96  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3954   001C9A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3955   001C9E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3956   001CA2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3957   001CA6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3958   001CAA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3959   001CAE  EC0A  F026         	call	___flge	;wreg free
  3960   001CB2  A0D8               	btfss	status,0,c
  3961   001CB4  EF5E  F00E         	goto	u4801
  3962   001CB8  EF60  F00E         	goto	u4800
  3963   001CBC                     u4801:
  3964   001CBC  EF09  F00E         	goto	l4883
  3965   001CC0                     u4800:
  3966   001CC0                     l1441:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3969   001CC0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3970                           
  3971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3972   001CC4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3973   001CC8                     
  3974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3975   001CC8  0100               	movlb	0	; () banked
  3976   001CCA  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  3977   001CCC  EF6A  F00E         	goto	u4811
  3978   001CD0  EF6C  F00E         	goto	u4810
  3979   001CD4                     u4811:
  3980   001CD4  EF72  F00E         	goto	l4897
  3981   001CD8                     u4810:
  3982   001CD8                     
  3983                           ; BSR set to: 0
  3984   001CD8  C0EF  F06B         	movff	_prec,efgtoa@p
  3985   001CDC  C0F0  F06C         	movff	_prec+1,efgtoa@p+1
  3986   001CE0  EF76  F00E         	goto	l4899
  3987   001CE4                     l4897:
  3988                           
  3989                           ; BSR set to: 0
  3990   001CE4  0E00               	movlw	0
  3991   001CE6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3992   001CE8  0E06               	movlw	6
  3993   001CEA  6F6B               	movwf	efgtoa@p& (0+255),b
  3994   001CEC                     l4899:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3998   001CEC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3999   001CF0  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  4000   001CF4                     
  4001                           ; BSR set to: 0
  4002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4003   001CF4  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4004   001CF6  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4005   001CF8                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4008   001CF8  0E66               	movlw	102
  4009   001CFA  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4010   001CFC  A4D8               	btfss	status,2,c
  4011   001CFE  EF83  F00E         	goto	u4821
  4012   001D02  EF85  F00E         	goto	u4820
  4013   001D06                     u4821:
  4014   001D06  EFA5  F00E         	goto	l4913
  4015   001D0A                     u4820:
  4016   001D0A                     
  4017                           ; BSR set to: 0
  4018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4019   001D0A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4020   001D0C  EF8C  F00E         	goto	u4830
  4021   001D10  EF8A  F00E         	goto	u4831
  4022   001D14                     u4831:
  4023   001D14  EF98  F00E         	goto	l4909
  4024   001D18                     u4830:
  4025   001D18                     
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4028   001D18  0E00               	movlw	0
  4029   001D1A  6F91               	movwf	efgtoa@u& (0+255),b
  4030   001D1C  0E00               	movlw	0
  4031   001D1E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  4032   001D20  0E80               	movlw	128
  4033   001D22  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  4034   001D24  0E3F               	movlw	63
  4035   001D26  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  4036                           
  4037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4038   001D28  0E00               	movlw	0
  4039   001D2A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  4040   001D2C  0E00               	movlw	0
  4041   001D2E  6F78               	movwf	efgtoa@e& (0+255),b
  4042   001D30                     l4909:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4046   001D30  0E67               	movlw	103
  4047   001D32  1972               	xorwf	efgtoa@mode& (0+255),w,b
  4048   001D34  B4D8               	btfsc	status,2,c
  4049   001D36  EF9F  F00E         	goto	u4841
  4050   001D3A  EFA1  F00E         	goto	u4840
  4051   001D3E                     u4841:
  4052   001D3E  EFA5  F00E         	goto	l4913
  4053   001D42                     u4840:
  4054   001D42                     
  4055                           ; BSR set to: 0
  4056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4057   001D42  5178               	movf	efgtoa@e& (0+255),w,b
  4058   001D44  2776               	addwf	efgtoa@m& (0+255),f,b
  4059   001D46  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  4060   001D48  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4061   001D4A                     l4913:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4065   001D4A  0E00               	movlw	0
  4066   001D4C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4067   001D4E  0E00               	movlw	0
  4068   001D50  6F80               	movwf	efgtoa@i& (0+255),b
  4069   001D52                     
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4072   001D52  C08D  F082         	movff	efgtoa@g,efgtoa@h
  4073   001D56  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4074   001D5A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4075   001D5E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4076   001D62                     
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4079   001D62  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  4080   001D66  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  4081   001D6A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  4082   001D6E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  4083                           
  4084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4085   001D72  EF36  F00F         	goto	l4927
  4086   001D76                     l4919:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4090   001D76  C082  F032         	movff	efgtoa@h,___fldiv@b
  4091   001D7A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4092   001D7E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4093   001D82  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4094   001D86  C091  F036         	movff	efgtoa@u,___fldiv@a
  4095   001D8A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4096   001D8E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4097   001D92  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4098   001D96  EC0C  F019         	call	___fldiv	;wreg free
  4099   001D9A  C032  F04B         	movff	?___fldiv,floorf@x
  4100   001D9E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4101   001DA2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4102   001DA6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4103   001DAA  EC88  F020         	call	_floorf	;wreg free
  4104   001DAE  C04B  F086         	movff	?_floorf,efgtoa@l
  4105   001DB2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4106   001DB6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4107   001DBA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4110   001DBE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4111   001DC2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4112   001DC6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4113   001DCA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4114   001DCE  EC87  F025         	call	___fltol	;wreg free
  4115   001DD2  C001  F074         	movff	?___fltol,efgtoa@d
  4116   001DD6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4117   001DDA                     
  4118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4119   001DDA  C082  F02A         	movff	efgtoa@h,___flsub@b
  4120   001DDE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4121   001DE2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4122   001DE6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4123   001DEA  C086  F015         	movff	efgtoa@l,___flmul@a
  4124   001DEE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4125   001DF2  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4126   001DF6  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4127   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  4128   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4129   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4130   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4131   001E0A  ECF7  F016         	call	___flmul	;wreg free
  4132   001E0E  C011  F02E         	movff	?___flmul,___flsub@a
  4133   001E12  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4134   001E16  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4135   001E1A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4136   001E1E  ECED  F02E         	call	___flsub	;wreg free
  4137   001E22  C02A  F082         	movff	?___flsub,efgtoa@h
  4138   001E26  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4139   001E2A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4140   001E2E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4141   001E32                     
  4142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4143   001E32  C091  F032         	movff	efgtoa@u,___fldiv@b
  4144   001E36  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4145   001E3A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4146   001E3E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4147   001E42  0E00               	movlw	0
  4148   001E44  6E36               	movwf	___fldiv@a^0,c
  4149   001E46  0E00               	movlw	0
  4150   001E48  6E37               	movwf	(___fldiv@a+1)^0,c
  4151   001E4A  0E20               	movlw	32
  4152   001E4C  6E38               	movwf	(___fldiv@a+2)^0,c
  4153   001E4E  0E41               	movlw	65
  4154   001E50  6E39               	movwf	(___fldiv@a+3)^0,c
  4155   001E52  EC0C  F019         	call	___fldiv	;wreg free
  4156   001E56  C032  F091         	movff	?___fldiv,efgtoa@u
  4157   001E5A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4158   001E5E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4159   001E62  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4160   001E66                     
  4161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4162   001E66  0100               	movlb	0	; () banked
  4163   001E68  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4164   001E6A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4165   001E6C                     l4927:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4169   001E6C  5176               	movf	efgtoa@m& (0+255),w,b
  4170   001E6E  5D80               	subwf	efgtoa@i& (0+255),w,b
  4171   001E70  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4172   001E72  0A80               	xorlw	128
  4173   001E74  6F67               	movwf	??_efgtoa& (0+255),b
  4174   001E76  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4175   001E78  0A80               	xorlw	128
  4176   001E7A  5967               	subwfb	??_efgtoa& (0+255),w,b
  4177   001E7C  A0D8               	btfss	status,0,c
  4178   001E7E  EF43  F00F         	goto	u4851
  4179   001E82  EF45  F00F         	goto	u4850
  4180   001E86                     u4851:
  4181   001E86  EFBB  F00E         	goto	l4919
  4182   001E8A                     u4850:
  4183   001E8A                     
  4184                           ; BSR set to: 0
  4185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4186   001E8A  C091  F011         	movff	efgtoa@u,___flmul@b
  4187   001E8E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4188   001E92  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4189   001E96  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4190   001E9A  0E00               	movlw	0
  4191   001E9C  6E15               	movwf	___flmul@a^0,c
  4192   001E9E  0E00               	movlw	0
  4193   001EA0  6E16               	movwf	(___flmul@a+1)^0,c
  4194   001EA2  0EA0               	movlw	160
  4195   001EA4  6E17               	movwf	(___flmul@a+2)^0,c
  4196   001EA6  0E40               	movlw	64
  4197   001EA8  6E18               	movwf	(___flmul@a+3)^0,c
  4198   001EAA  ECF7  F016         	call	___flmul	;wreg free
  4199   001EAE  C011  F086         	movff	?___flmul,efgtoa@l
  4200   001EB2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4201   001EB6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4202   001EBA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4203   001EBE                     
  4204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4205   001EBE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4206   001EC2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4207   001EC6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4208   001ECA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4209   001ECE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4210   001ED2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4211   001ED6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4212   001EDA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4213   001EDE  EC0A  F026         	call	___flge	;wreg free
  4214   001EE2  B0D8               	btfsc	status,0,c
  4215   001EE4  EF76  F00F         	goto	u4861
  4216   001EE8  EF78  F00F         	goto	u4860
  4217   001EEC                     u4861:
  4218   001EEC  EF83  F00F         	goto	l4935
  4219   001EF0                     u4860:
  4220   001EF0                     
  4221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4222   001EF0  0E00               	movlw	0
  4223   001EF2  0100               	movlb	0	; () banked
  4224   001EF4  6F86               	movwf	efgtoa@l& (0+255),b
  4225   001EF6  0E00               	movlw	0
  4226   001EF8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4227   001EFA  0E00               	movlw	0
  4228   001EFC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4229   001EFE  0E00               	movlw	0
  4230   001F00  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4233   001F02  EFAC  F00F         	goto	l4941
  4234   001F06                     l4935:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4237   001F06  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4238   001F0A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4239   001F0E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4240   001F12  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4241   001F16  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4242   001F1A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4243   001F1E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4244   001F22  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4245   001F26  EC7B  F028         	call	___fleq	;wreg free
  4246   001F2A  A0D8               	btfss	status,0,c
  4247   001F2C  EF9A  F00F         	goto	u4871
  4248   001F30  EF9C  F00F         	goto	u4870
  4249   001F34                     u4871:
  4250   001F34  EFAC  F00F         	goto	l4941
  4251   001F38                     u4870:
  4252   001F38  0100               	movlb	0	; () banked
  4253   001F3A  B174               	btfsc	efgtoa@d& (0+255),0,b
  4254   001F3C  EFA2  F00F         	goto	u4881
  4255   001F40  EFA4  F00F         	goto	u4880
  4256   001F44                     u4881:
  4257   001F44  EFAC  F00F         	goto	l4941
  4258   001F48                     u4880:
  4259   001F48                     
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4262   001F48  0E00               	movlw	0
  4263   001F4A  6F86               	movwf	efgtoa@l& (0+255),b
  4264   001F4C  0E00               	movlw	0
  4265   001F4E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4266   001F50  0E00               	movlw	0
  4267   001F52  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4268   001F54  0E00               	movlw	0
  4269   001F56  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4270   001F58                     l4941:
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4273   001F58  C08D  F001         	movff	efgtoa@g,___fladd@b
  4274   001F5C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4275   001F60  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4276   001F64  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4277   001F68  C086  F005         	movff	efgtoa@l,___fladd@a
  4278   001F6C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4279   001F70  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4280   001F74  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4281   001F78  EC97  F014         	call	___fladd	;wreg free
  4282   001F7C  C001  F082         	movff	?___fladd,efgtoa@h
  4283   001F80  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4284   001F84  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4285   001F88  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4286   001F8C                     
  4287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4288   001F8C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4289   001F90  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4290   001F94  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4291   001F98  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4292   001F9C  0E00               	movlw	0
  4293   001F9E  6E15               	movwf	___flmul@a^0,c
  4294   001FA0  0E00               	movlw	0
  4295   001FA2  6E16               	movwf	(___flmul@a+1)^0,c
  4296   001FA4  0E20               	movlw	32
  4297   001FA6  6E17               	movwf	(___flmul@a+2)^0,c
  4298   001FA8  0E41               	movlw	65
  4299   001FAA  6E18               	movwf	(___flmul@a+3)^0,c
  4300   001FAC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4301   001FB0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4302   001FB4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4303   001FB8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4304   001FBC  ECF7  F016         	call	___flmul	;wreg free
  4305   001FC0  C011  F02E         	movff	?___flmul,___flge@ff2
  4306   001FC4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4307   001FC8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4308   001FCC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4309   001FD0  EC0A  F026         	call	___flge	;wreg free
  4310   001FD4  A0D8               	btfss	status,0,c
  4311   001FD6  EFEF  F00F         	goto	u4891
  4312   001FDA  EFF1  F00F         	goto	u4890
  4313   001FDE                     u4891:
  4314   001FDE  EF1A  F010         	goto	l4953
  4315   001FE2                     u4890:
  4316   001FE2                     
  4317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4318   001FE2  0100               	movlb	0	; () banked
  4319   001FE4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4320   001FE6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4321   001FE8                     
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4324   001FE8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4325   001FEC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4326   001FF0  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4327   001FF4  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4328   001FF8  0E00               	movlw	0
  4329   001FFA  6E15               	movwf	___flmul@a^0,c
  4330   001FFC  0E00               	movlw	0
  4331   001FFE  6E16               	movwf	(___flmul@a+1)^0,c
  4332   002000  0E20               	movlw	32
  4333   002002  6E17               	movwf	(___flmul@a+2)^0,c
  4334   002004  0E41               	movlw	65
  4335   002006  6E18               	movwf	(___flmul@a+3)^0,c
  4336   002008  ECF7  F016         	call	___flmul	;wreg free
  4337   00200C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4338   002010  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4339   002014  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4340   002018  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4341   00201C                     
  4342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4343   00201C  0E66               	movlw	102
  4344   00201E  0100               	movlb	0	; () banked
  4345   002020  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4346   002022  A4D8               	btfss	status,2,c
  4347   002024  EF16  F010         	goto	u4901
  4348   002028  EF18  F010         	goto	u4900
  4349   00202C                     u4901:
  4350   00202C  EF1A  F010         	goto	l4953
  4351   002030                     u4900:
  4352   002030                     
  4353                           ; BSR set to: 0
  4354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4355   002030  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4356   002032  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4357   002034                     l4953:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4360   002034  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4361   002038  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4362   00203C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4363   002040  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4364   002044                     
  4365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4366   002044  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4367   002048  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4368   00204C                     
  4369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4370   00204C  0E00               	movlw	0
  4371   00204E  0100               	movlb	0	; () banked
  4372   002050  6F71               	movwf	efgtoa@pp& (0+255),b
  4373   002052                     
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4376   002052  0E00               	movlw	0
  4377   002054  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4378   002056  0E00               	movlw	0
  4379   002058  6F6D               	movwf	efgtoa@t& (0+255),b
  4380   00205A                     
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4383   00205A  0E00               	movlw	0
  4384   00205C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4385   00205E  0E00               	movlw	0
  4386   002060  6F80               	movwf	efgtoa@i& (0+255),b
  4387                           
  4388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4389   002062  EF18  F011         	goto	l5003
  4390   002066                     l4963:
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4394   002066  C082  F032         	movff	efgtoa@h,___fldiv@b
  4395   00206A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4396   00206E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4397   002072  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4398   002076  C091  F036         	movff	efgtoa@u,___fldiv@a
  4399   00207A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4400   00207E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4401   002082  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4402   002086  EC0C  F019         	call	___fldiv	;wreg free
  4403   00208A  C032  F04B         	movff	?___fldiv,floorf@x
  4404   00208E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4405   002092  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4406   002096  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4407   00209A  EC88  F020         	call	_floorf	;wreg free
  4408   00209E  C04B  F086         	movff	?_floorf,efgtoa@l
  4409   0020A2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4410   0020A6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4411   0020AA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4412                           
  4413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4414   0020AE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4415   0020B2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4416   0020B6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4417   0020BA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4418   0020BE  EC87  F025         	call	___fltol	;wreg free
  4419   0020C2  BE02               	btfsc	(?___fltol+1)^0,7,c
  4420   0020C4  EF6F  F010         	goto	u4910
  4421   0020C8  5002               	movf	(?___fltol+1)^0,w,c
  4422   0020CA  E107               	bnz	u4911
  4423   0020CC  0E0A               	movlw	10
  4424   0020CE  5C01               	subwf	?___fltol^0,w,c
  4425   0020D0  B0D8               	btfsc	status,0,c
  4426   0020D2  EF6D  F010         	goto	u4911
  4427   0020D6  EF6F  F010         	goto	u4910
  4428   0020DA                     u4911:
  4429   0020DA  EF7F  F010         	goto	l4967
  4430   0020DE                     u4910:
  4431   0020DE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4432   0020E2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4433   0020E6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4434   0020EA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4435   0020EE  EC87  F025         	call	___fltol	;wreg free
  4436   0020F2  C001  F074         	movff	?___fltol,efgtoa@d
  4437   0020F6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4438   0020FA  EF84  F010         	goto	l1471
  4439   0020FE                     l4967:
  4440   0020FE  0E00               	movlw	0
  4441   002100  0100               	movlb	0	; () banked
  4442   002102  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4443   002104  0E09               	movlw	9
  4444   002106  6F74               	movwf	efgtoa@d& (0+255),b
  4445   002108                     l1471:
  4446                           
  4447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4448   002108  0100               	movlb	0	; () banked
  4449   00210A  5171               	movf	efgtoa@pp& (0+255),w,b
  4450   00210C  A4D8               	btfss	status,2,c
  4451   00210E  EF8B  F010         	goto	u4921
  4452   002112  EF8D  F010         	goto	u4920
  4453   002116                     u4921:
  4454   002116  EFB5  F010         	goto	l4987
  4455   00211A                     u4920:
  4456   00211A                     
  4457                           ; BSR set to: 0
  4458   00211A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4459   00211C  EF94  F010         	goto	u4930
  4460   002120  EF92  F010         	goto	u4931
  4461   002124                     u4931:
  4462   002124  EFB5  F010         	goto	l4987
  4463   002128                     u4930:
  4464   002128                     
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4467   002128  0EA0               	movlw	low _dbuf
  4468   00212A  258B               	addwf	efgtoa@n& (0+255),w,b
  4469   00212C  6ED9               	movwf	fsr2l,c
  4470   00212E  0E02               	movlw	high _dbuf
  4471   002130  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4472   002132  6EDA               	movwf	fsr2h,c
  4473   002134  0E2E               	movlw	46
  4474   002136  6EDF               	movwf	indf2,c
  4475   002138                     
  4476                           ; BSR set to: 0
  4477   002138  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4478   00213A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4479   00213C                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4482   00213C  077A               	decf	efgtoa@w& (0+255),f,b
  4483   00213E  A0D8               	btfss	status,0,c
  4484   002140  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4485   002142                     
  4486                           ; BSR set to: 0
  4487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4488   002142  0E01               	movlw	1
  4489   002144  6F71               	movwf	efgtoa@pp& (0+255),b
  4490   002146  EFB5  F010         	goto	l4987
  4491   00214A                     l4979:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4495   00214A  0EA0               	movlw	low _dbuf
  4496   00214C  258B               	addwf	efgtoa@n& (0+255),w,b
  4497   00214E  6ED9               	movwf	fsr2l,c
  4498   002150  0E02               	movlw	high _dbuf
  4499   002152  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4500   002154  6EDA               	movwf	fsr2h,c
  4501   002156  0E30               	movlw	48
  4502   002158  6EDF               	movwf	indf2,c
  4503   00215A                     
  4504                           ; BSR set to: 0
  4505   00215A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4506   00215C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4507   00215E                     
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4510   00215E  077A               	decf	efgtoa@w& (0+255),f,b
  4511   002160  A0D8               	btfss	status,0,c
  4512   002162  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4513   002164                     
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4516   002164  076D               	decf	efgtoa@t& (0+255),f,b
  4517   002166  A0D8               	btfss	status,0,c
  4518   002168  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4519   00216A                     l4987:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4523   00216A  516D               	movf	efgtoa@t& (0+255),w,b
  4524   00216C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4525   00216E  A4D8               	btfss	status,2,c
  4526   002170  EFBC  F010         	goto	u4941
  4527   002174  EFBE  F010         	goto	u4940
  4528   002178                     u4941:
  4529   002178  EFA5  F010         	goto	l4979
  4530   00217C                     u4940:
  4531   00217C                     
  4532                           ; BSR set to: 0
  4533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4534   00217C  0EA0               	movlw	low _dbuf
  4535   00217E  258B               	addwf	efgtoa@n& (0+255),w,b
  4536   002180  6ED9               	movwf	fsr2l,c
  4537   002182  0E02               	movlw	high _dbuf
  4538   002184  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4539   002186  6EDA               	movwf	fsr2h,c
  4540   002188  5174               	movf	efgtoa@d& (0+255),w,b
  4541   00218A  0F30               	addlw	48
  4542   00218C  6EDF               	movwf	indf2,c
  4543   00218E                     
  4544                           ; BSR set to: 0
  4545   00218E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4546   002190  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4547   002192                     
  4548                           ; BSR set to: 0
  4549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4550   002192  077A               	decf	efgtoa@w& (0+255),f,b
  4551   002194  A0D8               	btfss	status,0,c
  4552   002196  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4553   002198                     
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4556   002198  C082  F02A         	movff	efgtoa@h,___flsub@b
  4557   00219C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4558   0021A0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4559   0021A4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4560   0021A8  C086  F015         	movff	efgtoa@l,___flmul@a
  4561   0021AC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4562   0021B0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4563   0021B4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4564   0021B8  C091  F011         	movff	efgtoa@u,___flmul@b
  4565   0021BC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4566   0021C0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4567   0021C4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4568   0021C8  ECF7  F016         	call	___flmul	;wreg free
  4569   0021CC  C011  F02E         	movff	?___flmul,___flsub@a
  4570   0021D0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4571   0021D4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4572   0021D8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4573   0021DC  ECED  F02E         	call	___flsub	;wreg free
  4574   0021E0  C02A  F082         	movff	?___flsub,efgtoa@h
  4575   0021E4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4576   0021E8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4577   0021EC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4578   0021F0                     
  4579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4580   0021F0  C091  F032         	movff	efgtoa@u,___fldiv@b
  4581   0021F4  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4582   0021F8  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4583   0021FC  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4584   002200  0E00               	movlw	0
  4585   002202  6E36               	movwf	___fldiv@a^0,c
  4586   002204  0E00               	movlw	0
  4587   002206  6E37               	movwf	(___fldiv@a+1)^0,c
  4588   002208  0E20               	movlw	32
  4589   00220A  6E38               	movwf	(___fldiv@a+2)^0,c
  4590   00220C  0E41               	movlw	65
  4591   00220E  6E39               	movwf	(___fldiv@a+3)^0,c
  4592   002210  EC0C  F019         	call	___fldiv	;wreg free
  4593   002214  C032  F091         	movff	?___fldiv,efgtoa@u
  4594   002218  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4595   00221C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4596   002220  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4597   002224                     
  4598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4599   002224  0100               	movlb	0	; () banked
  4600   002226  0769               	decf	efgtoa@ne& (0+255),f,b
  4601   002228  A0D8               	btfss	status,0,c
  4602   00222A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4603   00222C                     
  4604                           ; BSR set to: 0
  4605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4606   00222C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4607   00222E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4608   002230                     l5003:
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4612   002230  5176               	movf	efgtoa@m& (0+255),w,b
  4613   002232  5D80               	subwf	efgtoa@i& (0+255),w,b
  4614   002234  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4615   002236  0A80               	xorlw	128
  4616   002238  6F67               	movwf	??_efgtoa& (0+255),b
  4617   00223A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4618   00223C  0A80               	xorlw	128
  4619   00223E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4620   002240  B0D8               	btfsc	status,0,c
  4621   002242  EF25  F011         	goto	u4951
  4622   002246  EF27  F011         	goto	u4950
  4623   00224A                     u4951:
  4624   00224A  EF35  F011         	goto	l5007
  4625   00224E                     u4950:
  4626   00224E                     
  4627                           ; BSR set to: 0
  4628   00224E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4629   002250  EF33  F011         	goto	u4961
  4630   002254  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4631   002256  E109               	bnz	u4960
  4632   002258  0E4B               	movlw	75
  4633   00225A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4634   00225C  A0D8               	btfss	status,0,c
  4635   00225E  EF33  F011         	goto	u4961
  4636   002262  EF35  F011         	goto	u4960
  4637   002266                     u4961:
  4638   002266  EF33  F010         	goto	l4963
  4639   00226A                     u4960:
  4640   00226A                     l5007:
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4644   00226A  0E00               	movlw	0
  4645   00226C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4646   00226E  0E4F               	movlw	79
  4647   002270  6F80               	movwf	efgtoa@i& (0+255),b
  4648   002272                     
  4649                           ; BSR set to: 0
  4650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4651   002272  0EA0               	movlw	low _dbuf
  4652   002274  2580               	addwf	efgtoa@i& (0+255),w,b
  4653   002276  6ED9               	movwf	fsr2l,c
  4654   002278  0E02               	movlw	high _dbuf
  4655   00227A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4656   00227C  6EDA               	movwf	fsr2h,c
  4657   00227E  0E00               	movlw	0
  4658   002280  6EDF               	movwf	indf2,c
  4659   002282                     
  4660                           ; BSR set to: 0
  4661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4662   002282  0EA0               	movlw	low _dbuf
  4663   002284  6F67               	movwf	??_efgtoa& (0+255),b
  4664   002286  0E02               	movlw	high _dbuf
  4665   002288  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4666   00228A  518B               	movf	efgtoa@n& (0+255),w,b
  4667   00228C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4668   00228E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4669   002290  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4670   002292  5180               	movf	efgtoa@i& (0+255),w,b
  4671   002294  2567               	addwf	??_efgtoa& (0+255),w,b
  4672   002296  6E01               	movwf	memcpy@d1^0,c
  4673   002298  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4674   00229A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4675   00229C  6E02               	movwf	(memcpy@d1+1)^0,c
  4676   00229E  0EA0               	movlw	low _dbuf
  4677   0022A0  6E03               	movwf	memcpy@s1^0,c
  4678   0022A2  0E02               	movlw	high _dbuf
  4679   0022A4  6E04               	movwf	(memcpy@s1+1)^0,c
  4680   0022A6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4681   0022AA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4682   0022AE  ECB1  F02D         	call	_memcpy	;wreg free
  4683   0022B2                     
  4684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4685   0022B2  0100               	movlb	0	; () banked
  4686   0022B4  518B               	movf	efgtoa@n& (0+255),w,b
  4687   0022B6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4688   0022B8  6F8B               	movwf	efgtoa@n& (0+255),b
  4689   0022BA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4690   0022BC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4691   0022BE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4692   0022C0                     
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4695   0022C0  518A               	movf	efgtoa@sign& (0+255),w,b
  4696   0022C2  A4D8               	btfss	status,2,c
  4697   0022C4  EF66  F011         	goto	u4971
  4698   0022C8  EF69  F011         	goto	u4970
  4699   0022CC                     u4971:
  4700   0022CC  0E01               	movlw	1
  4701   0022CE  EF6A  F011         	goto	u4980
  4702   0022D2                     u4970:
  4703   0022D2  0E00               	movlw	0
  4704   0022D4                     u4980:
  4705   0022D4  6F80               	movwf	efgtoa@i& (0+255),b
  4706   0022D6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4707   0022D8                     
  4708                           ; BSR set to: 0
  4709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4710   0022D8  518A               	movf	efgtoa@sign& (0+255),w,b
  4711   0022DA  B4D8               	btfsc	status,2,c
  4712   0022DC  EF72  F011         	goto	u4991
  4713   0022E0  EF74  F011         	goto	u4990
  4714   0022E4                     u4991:
  4715   0022E4  EF7F  F011         	goto	l5021
  4716   0022E8                     u4990:
  4717   0022E8                     
  4718                           ; BSR set to: 0
  4719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4720   0022E8  078B               	decf	efgtoa@n& (0+255),f,b
  4721   0022EA  A0D8               	btfss	status,0,c
  4722   0022EC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4723   0022EE  0EA0               	movlw	low _dbuf
  4724   0022F0  258B               	addwf	efgtoa@n& (0+255),w,b
  4725   0022F2  6ED9               	movwf	fsr2l,c
  4726   0022F4  0E02               	movlw	high _dbuf
  4727   0022F6  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4728   0022F8  6EDA               	movwf	fsr2h,c
  4729   0022FA  C08A  FFDF         	movff	efgtoa@sign,indf2
  4730   0022FE                     l5021:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4734   0022FE  5180               	movf	efgtoa@i& (0+255),w,b
  4735   002300  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4736   002302  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4737   002304  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4738   002306                     
  4739                           ; BSR set to: 0
  4740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4741   002306  C060  F011         	movff	efgtoa@fp,pad@fp
  4742   00230A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4743   00230E  0EA0               	movlw	low _dbuf
  4744   002310  258B               	addwf	efgtoa@n& (0+255),w,b
  4745   002312  6E13               	movwf	pad@buf^0,c
  4746   002314  0E02               	movlw	high _dbuf
  4747   002316  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4748   002318  6E14               	movwf	(pad@buf+1)^0,c
  4749   00231A  C07A  F015         	movff	efgtoa@w,pad@p
  4750   00231E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4751   002322  ECD0  F02A         	call	_pad	;wreg free
  4752   002326                     l1438:
  4753   002326  0012               	return		;funcret
  4754   002328                     __end_of_efgtoa:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _strcpy *****************
  4758 ;; Defined at:
  4759 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4762 ;;		 -> dbuf(80), 
  4763 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4764 ;;		 -> STR_6(4), STR_3(4), 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  d               2    6[COMRAM] PTR unsigned char 
  4767 ;;		 -> dbuf(80), 
  4768 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4769 ;;		 -> STR_6(4), STR_3(4), 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  2    0[COMRAM] PTR unsigned char 
  4772 ;; Registers used:
  4773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;Total ram usage:        8 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_efgtoa
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text6
  4793   005E20                     __ptext6:
  4794                           	callstack 0
  4795   005E20                     _strcpy:
  4796                           	callstack 26
  4797   005E20  C003  F005         	movff	strcpy@src,strcpy@s
  4798   005E24  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4799   005E28  C001  F007         	movff	strcpy@dest,strcpy@d
  4800   005E2C  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4801   005E30                     l4627:
  4802   005E30  C005  FFF6         	movff	strcpy@s,tblptrl
  4803   005E34  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4804   005E38  4A05               	infsnz	strcpy@s^0,f,c
  4805   005E3A  2A06               	incf	(strcpy@s+1)^0,f,c
  4806   005E3C                     	if	0	;tblptru may be non-zero
  4807   005E3C                     	endif
  4808   005E3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4809   005E3C  0E00               	movlw	low (__mediumconst shr (0+16))
  4810   005E3E  6EF8               	movwf	tblptru,c
  4811   005E40                     	endif
  4812   005E40  C007  FFD9         	movff	strcpy@d,fsr2l
  4813   005E44  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4814   005E48  4A07               	infsnz	strcpy@d^0,f,c
  4815   005E4A  2A08               	incf	(strcpy@d+1)^0,f,c
  4816   005E4C  0008               	tblrd		*
  4817   005E4E  CFF5 FFDF          	movff	tablat,indf2
  4818   005E52  50DF               	movf	indf2,w,c
  4819   005E54  A4D8               	btfss	status,2,c
  4820   005E56  EF2F  F02F         	goto	u4321
  4821   005E5A  EF31  F02F         	goto	u4320
  4822   005E5E                     u4321:
  4823   005E5E  EF18  F02F         	goto	l4627
  4824   005E62                     u4320:
  4825   005E62  0012               	return		;funcret
  4826   005E64                     __end_of_strcpy:
  4827                           	callstack 0
  4828                           
  4829 ;; *************** function _memcpy *****************
  4830 ;; Defined at:
  4831 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  d1              2    0[COMRAM] PTR void 
  4834 ;;		 -> dbuf(80), 
  4835 ;;  s1              2    2[COMRAM] PTR const void 
  4836 ;;		 -> dbuf(80), 
  4837 ;;  n               2    4[COMRAM] unsigned int 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4840 ;;		 -> dbuf(80), 
  4841 ;;  d               2    6[COMRAM] PTR unsigned char 
  4842 ;;		 -> dbuf(80), 
  4843 ;;  tmp             1   10[COMRAM] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  2    0[COMRAM] PTR void 
  4846 ;; Registers used:
  4847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4853 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;Total ram usage:       11 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_efgtoa
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text7
  4867   005B62                     __ptext7:
  4868                           	callstack 0
  4869   005B62                     _memcpy:
  4870                           	callstack 26
  4871   005B62  C003  F009         	movff	memcpy@s1,memcpy@s
  4872   005B66  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4873   005B6A  C001  F007         	movff	memcpy@d1,memcpy@d
  4874   005B6E  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4875   005B72  EFCB  F02D         	goto	l4671
  4876   005B76                     l4663:
  4877   005B76  C009  FFD9         	movff	memcpy@s,fsr2l
  4878   005B7A  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4879   005B7E  50DF               	movf	indf2,w,c
  4880   005B80  6E0B               	movwf	memcpy@tmp^0,c
  4881   005B82  4A09               	infsnz	memcpy@s^0,f,c
  4882   005B84  2A0A               	incf	(memcpy@s+1)^0,f,c
  4883   005B86  C007  FFD9         	movff	memcpy@d,fsr2l
  4884   005B8A  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4885   005B8E  C00B  FFDF         	movff	memcpy@tmp,indf2
  4886   005B92  4A07               	infsnz	memcpy@d^0,f,c
  4887   005B94  2A08               	incf	(memcpy@d+1)^0,f,c
  4888   005B96                     l4671:
  4889   005B96  0605               	decf	memcpy@n^0,f,c
  4890   005B98  A0D8               	btfss	status,0,c
  4891   005B9A  0606               	decf	(memcpy@n+1)^0,f,c
  4892   005B9C  2805               	incf	memcpy@n^0,w,c
  4893   005B9E  E106               	bnz	u4441
  4894   005BA0  2806               	incf	(memcpy@n+1)^0,w,c
  4895   005BA2  A4D8               	btfss	status,2,c
  4896   005BA4  EFD6  F02D         	goto	u4441
  4897   005BA8  EFD8  F02D         	goto	u4440
  4898   005BAC                     u4441:
  4899   005BAC  EFBB  F02D         	goto	l4663
  4900   005BB0                     u4440:
  4901   005BB0  0012               	return		;funcret
  4902   005BB2                     __end_of_memcpy:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _labs *****************
  4906 ;; Defined at:
  4907 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  a               4    0[COMRAM] long 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  4    0[COMRAM] long 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;Total ram usage:        8 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_efgtoa
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text8
  4935   00568E                     __ptext8:
  4936                           	callstack 0
  4937   00568E                     _labs:
  4938                           	callstack 26
  4939   00568E  BE04               	btfsc	(labs@a+3)^0,7,c
  4940   005690  EF56  F02B         	goto	u4330
  4941   005694  5004               	movf	(labs@a+3)^0,w,c
  4942   005696  1003               	iorwf	(labs@a+2)^0,w,c
  4943   005698  1002               	iorwf	(labs@a+1)^0,w,c
  4944   00569A  E106               	bnz	u4331
  4945   00569C  0401               	decf	labs@a^0,w,c
  4946   00569E  B0D8               	btfsc	status,0,c
  4947   0056A0  EF54  F02B         	goto	u4331
  4948   0056A4  EF56  F02B         	goto	u4330
  4949   0056A8                     u4331:
  4950   0056A8  EF71  F02B         	goto	l1543
  4951   0056AC                     u4330:
  4952   0056AC  C001  F005         	movff	labs@a,??_labs
  4953   0056B0  C002  F006         	movff	labs@a+1,??_labs+1
  4954   0056B4  C003  F007         	movff	labs@a+2,??_labs+2
  4955   0056B8  C004  F008         	movff	labs@a+3,??_labs+3
  4956   0056BC  1E05               	comf	??_labs^0,f,c
  4957   0056BE  1E06               	comf	(??_labs+1)^0,f,c
  4958   0056C0  1E07               	comf	(??_labs+2)^0,f,c
  4959   0056C2  1E08               	comf	(??_labs+3)^0,f,c
  4960   0056C4  2A05               	incf	??_labs^0,f,c
  4961   0056C6  0E00               	movlw	0
  4962   0056C8  2206               	addwfc	(??_labs+1)^0,f,c
  4963   0056CA  2207               	addwfc	(??_labs+2)^0,f,c
  4964   0056CC  2208               	addwfc	(??_labs+3)^0,f,c
  4965   0056CE  C005  F001         	movff	??_labs,?_labs
  4966   0056D2  C006  F002         	movff	??_labs+1,?_labs+1
  4967   0056D6  C007  F003         	movff	??_labs+2,?_labs+2
  4968   0056DA  C008  F004         	movff	??_labs+3,?_labs+3
  4969   0056DE  EF79  F02B         	goto	l1546
  4970   0056E2                     l1543:
  4971   0056E2  C001  F001         	movff	labs@a,?_labs
  4972   0056E6  C002  F002         	movff	labs@a+1,?_labs+1
  4973   0056EA  C003  F003         	movff	labs@a+2,?_labs+2
  4974   0056EE  C004  F004         	movff	labs@a+3,?_labs+3
  4975   0056F2                     l1546:
  4976   0056F2  0012               	return		;funcret
  4977   0056F4                     __end_of_labs:
  4978                           	callstack 0
  4979                           
  4980 ;; *************** function _floorf *****************
  4981 ;; Defined at:
  4982 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  x               4   74[COMRAM] float 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  u               4   90[COMRAM] struct .
  4987 ;;  m               4   84[COMRAM] unsigned long 
  4988 ;;  e               2   88[COMRAM] int 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  4   74[COMRAM] float 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;Total ram usage:       20 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_efgtoa
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text9
  5012   004110                     __ptext9:
  5013                           	callstack 0
  5014   004110                     _floorf:
  5015                           	callstack 26
  5016   004110  C0E5  F05B         	movff	floorf@F526,floorf@u
  5017   004114  C0E6  F05C         	movff	floorf@F526+1,floorf@u+1
  5018   004118  C0E7  F05D         	movff	floorf@F526+2,floorf@u+2
  5019   00411C  C0E8  F05E         	movff	floorf@F526+3,floorf@u+3
  5020   004120  C04B  F05B         	movff	floorf@x,floorf@u
  5021   004124  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  5022   004128  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  5023   00412C  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  5024   004130  0E81               	movlw	129
  5025   004132  6E4F               	movwf	??_floorf^0,c
  5026   004134  0EFF               	movlw	255
  5027   004136  6E50               	movwf	(??_floorf+1)^0,c
  5028   004138  C05B  F051         	movff	floorf@u,??_floorf+2
  5029   00413C  C05C  F052         	movff	floorf@u+1,??_floorf+3
  5030   004140  C05D  F053         	movff	floorf@u+2,??_floorf+4
  5031   004144  C05E  F054         	movff	floorf@u+3,??_floorf+5
  5032   004148  0E18               	movlw	24
  5033   00414A  EFAC  F020         	goto	u4340
  5034   00414E                     u4345:
  5035   00414E  90D8               	bcf	status,0,c
  5036   004150  3254               	rrcf	(??_floorf+5)^0,f,c
  5037   004152  3253               	rrcf	(??_floorf+4)^0,f,c
  5038   004154  3252               	rrcf	(??_floorf+3)^0,f,c
  5039   004156  3251               	rrcf	(??_floorf+2)^0,f,c
  5040   004158                     u4340:
  5041   004158  2EE8               	decfsz	wreg,f,c
  5042   00415A  EFA7  F020         	goto	u4345
  5043   00415E  5051               	movf	(??_floorf+2)^0,w,c
  5044   004160  244F               	addwf	??_floorf^0,w,c
  5045   004162  6E59               	movwf	floorf@e^0,c
  5046   004164  0E00               	movlw	0
  5047   004166  2050               	addwfc	(??_floorf+1)^0,w,c
  5048   004168  6E5A               	movwf	(floorf@e+1)^0,c
  5049   00416A  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5050   00416C  EFC1  F020         	goto	u4351
  5051   004170  505A               	movf	(floorf@e+1)^0,w,c
  5052   004172  E109               	bnz	u4350
  5053   004174  0E17               	movlw	23
  5054   004176  5C59               	subwf	floorf@e^0,w,c
  5055   004178  A0D8               	btfss	status,0,c
  5056   00417A  EFC1  F020         	goto	u4351
  5057   00417E  EFC3  F020         	goto	u4350
  5058   004182                     u4351:
  5059   004182  EFCD  F020         	goto	l4639
  5060   004186                     u4350:
  5061   004186                     l4637:
  5062   004186  C04B  F04B         	movff	floorf@x,?_floorf
  5063   00418A  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  5064   00418E  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  5065   004192  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  5066   004196  EF90  F021         	goto	l1532
  5067   00419A                     l4639:
  5068   00419A  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5069   00419C  EFD2  F020         	goto	u4361
  5070   0041A0  EFD4  F020         	goto	u4360
  5071   0041A4                     u4361:
  5072   0041A4  EF44  F021         	goto	l4649
  5073   0041A8                     u4360:
  5074   0041A8  C059  F04F         	movff	floorf@e,??_floorf
  5075   0041AC  0EFF               	movlw	255
  5076   0041AE  6E50               	movwf	(??_floorf+1)^0,c
  5077   0041B0  0EFF               	movlw	255
  5078   0041B2  6E51               	movwf	(??_floorf+2)^0,c
  5079   0041B4  0E7F               	movlw	127
  5080   0041B6  6E52               	movwf	(??_floorf+3)^0,c
  5081   0041B8  0E00               	movlw	0
  5082   0041BA  6E53               	movwf	(??_floorf+4)^0,c
  5083   0041BC                     u4375:
  5084   0041BC  664F               	tstfsz	??_floorf^0,c
  5085   0041BE  EFE3  F020         	goto	u4376
  5086   0041C2  EFEB  F020         	goto	u4377
  5087   0041C6                     u4376:
  5088   0041C6  3453               	rlcf	(??_floorf+4)^0,w,c
  5089   0041C8  3253               	rrcf	(??_floorf+4)^0,f,c
  5090   0041CA  3252               	rrcf	(??_floorf+3)^0,f,c
  5091   0041CC  3251               	rrcf	(??_floorf+2)^0,f,c
  5092   0041CE  3250               	rrcf	(??_floorf+1)^0,f,c
  5093   0041D0  2E4F               	decfsz	??_floorf^0,f,c
  5094   0041D2  EFDE  F020         	goto	u4375
  5095   0041D6                     u4377:
  5096   0041D6  C050  F055         	movff	??_floorf+1,floorf@m
  5097   0041DA  C051  F056         	movff	??_floorf+2,floorf@m+1
  5098   0041DE  C052  F057         	movff	??_floorf+3,floorf@m+2
  5099   0041E2  C053  F058         	movff	??_floorf+4,floorf@m+3
  5100   0041E6  5055               	movf	floorf@m^0,w,c
  5101   0041E8  145B               	andwf	floorf@u^0,w,c
  5102   0041EA  6E4F               	movwf	??_floorf^0,c
  5103   0041EC  5056               	movf	(floorf@m+1)^0,w,c
  5104   0041EE  145C               	andwf	(floorf@u+1)^0,w,c
  5105   0041F0  6E50               	movwf	(??_floorf+1)^0,c
  5106   0041F2  5057               	movf	(floorf@m+2)^0,w,c
  5107   0041F4  145D               	andwf	(floorf@u+2)^0,w,c
  5108   0041F6  6E51               	movwf	(??_floorf+2)^0,c
  5109   0041F8  5058               	movf	(floorf@m+3)^0,w,c
  5110   0041FA  145E               	andwf	(floorf@u+3)^0,w,c
  5111   0041FC  6E52               	movwf	(??_floorf+3)^0,c
  5112   0041FE  504F               	movf	??_floorf^0,w,c
  5113   004200  1050               	iorwf	(??_floorf+1)^0,w,c
  5114   004202  1051               	iorwf	(??_floorf+2)^0,w,c
  5115   004204  1052               	iorwf	(??_floorf+3)^0,w,c
  5116   004206  A4D8               	btfss	status,2,c
  5117   004208  EF08  F021         	goto	u4381
  5118   00420C  EF0A  F021         	goto	u4380
  5119   004210                     u4381:
  5120   004210  EF0C  F021         	goto	l4645
  5121   004214                     u4380:
  5122   004214  EFC3  F020         	goto	l4637
  5123   004218                     l4645:
  5124   004218  C05B  F04F         	movff	floorf@u,??_floorf
  5125   00421C  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5126   004220  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5127   004224  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5128   004228  0E20               	movlw	32
  5129   00422A  EF1C  F021         	goto	u4390
  5130   00422E                     u4395:
  5131   00422E  90D8               	bcf	status,0,c
  5132   004230  3252               	rrcf	(??_floorf+3)^0,f,c
  5133   004232  3251               	rrcf	(??_floorf+2)^0,f,c
  5134   004234  3250               	rrcf	(??_floorf+1)^0,f,c
  5135   004236  324F               	rrcf	??_floorf^0,f,c
  5136   004238                     u4390:
  5137   004238  2EE8               	decfsz	wreg,f,c
  5138   00423A  EF17  F021         	goto	u4395
  5139   00423E  504F               	movf	??_floorf^0,w,c
  5140   004240  1050               	iorwf	(??_floorf+1)^0,w,c
  5141   004242  1051               	iorwf	(??_floorf+2)^0,w,c
  5142   004244  1052               	iorwf	(??_floorf+3)^0,w,c
  5143   004246  B4D8               	btfsc	status,2,c
  5144   004248  EF28  F021         	goto	u4401
  5145   00424C  EF2A  F021         	goto	u4400
  5146   004250                     u4401:
  5147   004250  EF32  F021         	goto	l1535
  5148   004254                     u4400:
  5149   004254  5055               	movf	floorf@m^0,w,c
  5150   004256  265B               	addwf	floorf@u^0,f,c
  5151   004258  5056               	movf	(floorf@m+1)^0,w,c
  5152   00425A  225C               	addwfc	(floorf@u+1)^0,f,c
  5153   00425C  5057               	movf	(floorf@m+2)^0,w,c
  5154   00425E  225D               	addwfc	(floorf@u+2)^0,f,c
  5155   004260  5058               	movf	(floorf@m+3)^0,w,c
  5156   004262  225E               	addwfc	(floorf@u+3)^0,f,c
  5157   004264                     l1535:
  5158   004264  1C55               	comf	floorf@m^0,w,c
  5159   004266  6E4F               	movwf	??_floorf^0,c
  5160   004268  1C56               	comf	(floorf@m+1)^0,w,c
  5161   00426A  6E50               	movwf	(??_floorf+1)^0,c
  5162   00426C  1C57               	comf	(floorf@m+2)^0,w,c
  5163   00426E  6E51               	movwf	(??_floorf+2)^0,c
  5164   004270  1C58               	comf	(floorf@m+3)^0,w,c
  5165   004272  6E52               	movwf	(??_floorf+3)^0,c
  5166   004274  504F               	movf	??_floorf^0,w,c
  5167   004276  165B               	andwf	floorf@u^0,f,c
  5168   004278  5050               	movf	(??_floorf+1)^0,w,c
  5169   00427A  165C               	andwf	(floorf@u+1)^0,f,c
  5170   00427C  5051               	movf	(??_floorf+2)^0,w,c
  5171   00427E  165D               	andwf	(floorf@u+2)^0,f,c
  5172   004280  5052               	movf	(??_floorf+3)^0,w,c
  5173   004282  165E               	andwf	(floorf@u+3)^0,f,c
  5174   004284  EF88  F021         	goto	l4657
  5175   004288                     l4649:
  5176   004288  C05B  F04F         	movff	floorf@u,??_floorf
  5177   00428C  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5178   004290  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5179   004294  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5180   004298  0E20               	movlw	32
  5181   00429A  EF54  F021         	goto	u4410
  5182   00429E                     u4415:
  5183   00429E  90D8               	bcf	status,0,c
  5184   0042A0  3252               	rrcf	(??_floorf+3)^0,f,c
  5185   0042A2  3251               	rrcf	(??_floorf+2)^0,f,c
  5186   0042A4  3250               	rrcf	(??_floorf+1)^0,f,c
  5187   0042A6  324F               	rrcf	??_floorf^0,f,c
  5188   0042A8                     u4410:
  5189   0042A8  2EE8               	decfsz	wreg,f,c
  5190   0042AA  EF4F  F021         	goto	u4415
  5191   0042AE  504F               	movf	??_floorf^0,w,c
  5192   0042B0  1050               	iorwf	(??_floorf+1)^0,w,c
  5193   0042B2  1051               	iorwf	(??_floorf+2)^0,w,c
  5194   0042B4  1052               	iorwf	(??_floorf+3)^0,w,c
  5195   0042B6  A4D8               	btfss	status,2,c
  5196   0042B8  EF60  F021         	goto	u4421
  5197   0042BC  EF62  F021         	goto	u4420
  5198   0042C0                     u4421:
  5199   0042C0  EF6C  F021         	goto	l4653
  5200   0042C4                     u4420:
  5201   0042C4  0E00               	movlw	0
  5202   0042C6  6E5B               	movwf	floorf@u^0,c
  5203   0042C8  0E00               	movlw	0
  5204   0042CA  6E5C               	movwf	(floorf@u+1)^0,c
  5205   0042CC  0E00               	movlw	0
  5206   0042CE  6E5D               	movwf	(floorf@u+2)^0,c
  5207   0042D0  0E00               	movlw	0
  5208   0042D2  6E5E               	movwf	(floorf@u+3)^0,c
  5209   0042D4  EF88  F021         	goto	l4657
  5210   0042D8                     l4653:
  5211   0042D8  90D8               	bcf	status,0,c
  5212   0042DA  345B               	rlcf	floorf@u^0,w,c
  5213   0042DC  6E4F               	movwf	??_floorf^0,c
  5214   0042DE  345C               	rlcf	(floorf@u+1)^0,w,c
  5215   0042E0  6E50               	movwf	(??_floorf+1)^0,c
  5216   0042E2  345D               	rlcf	(floorf@u+2)^0,w,c
  5217   0042E4  6E51               	movwf	(??_floorf+2)^0,c
  5218   0042E6  345E               	rlcf	(floorf@u+3)^0,w,c
  5219   0042E8  6E52               	movwf	(??_floorf+3)^0,c
  5220   0042EA  504F               	movf	??_floorf^0,w,c
  5221   0042EC  1050               	iorwf	(??_floorf+1)^0,w,c
  5222   0042EE  1051               	iorwf	(??_floorf+2)^0,w,c
  5223   0042F0  1052               	iorwf	(??_floorf+3)^0,w,c
  5224   0042F2  B4D8               	btfsc	status,2,c
  5225   0042F4  EF7E  F021         	goto	u4431
  5226   0042F8  EF80  F021         	goto	u4430
  5227   0042FC                     u4431:
  5228   0042FC  EF88  F021         	goto	l4657
  5229   004300                     u4430:
  5230   004300  0E00               	movlw	0
  5231   004302  6E5B               	movwf	floorf@u^0,c
  5232   004304  0E00               	movlw	0
  5233   004306  6E5C               	movwf	(floorf@u+1)^0,c
  5234   004308  0E80               	movlw	128
  5235   00430A  6E5D               	movwf	(floorf@u+2)^0,c
  5236   00430C  0EBF               	movlw	191
  5237   00430E  6E5E               	movwf	(floorf@u+3)^0,c
  5238   004310                     l4657:
  5239   004310  C05B  F04B         	movff	floorf@u,?_floorf
  5240   004314  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5241   004318  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5242   00431C  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5243   004320                     l1532:
  5244   004320  0012               	return		;funcret
  5245   004322                     __end_of_floorf:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function ___fpclassifyf *****************
  5249 ;; Defined at:
  5250 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  x               4    0[COMRAM] float 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  u               4   10[COMRAM] struct .
  5255 ;;  e               2    8[COMRAM] int 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  2    0[COMRAM] int 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;Total ram usage:       14 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_efgtoa
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text10
  5279   004D18                     __ptext10:
  5280                           	callstack 0
  5281   004D18                     ___fpclassifyf:
  5282                           	callstack 26
  5283   004D18  C0E9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5284   004D1C  C0EA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5285   004D20  C0EB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5286   004D24  C0EC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5287   004D28  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5288   004D2C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5289   004D30  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5290   004D34  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5291   004D38  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5292   004D3C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5293   004D40  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5294   004D44  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5295   004D48  0E18               	movlw	24
  5296   004D4A  EFAC  F026         	goto	u4250
  5297   004D4E                     u4255:
  5298   004D4E  90D8               	bcf	status,0,c
  5299   004D50  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5300   004D52  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5301   004D54  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5302   004D56  3205               	rrcf	??___fpclassifyf^0,f,c
  5303   004D58                     u4250:
  5304   004D58  2EE8               	decfsz	wreg,f,c
  5305   004D5A  EFA7  F026         	goto	u4255
  5306   004D5E  5005               	movf	??___fpclassifyf^0,w,c
  5307   004D60  6E09               	movwf	___fpclassifyf@e^0,c
  5308   004D62  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5309   004D64  5009               	movf	___fpclassifyf@e^0,w,c
  5310   004D66  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5311   004D68  A4D8               	btfss	status,2,c
  5312   004D6A  EFB9  F026         	goto	u4261
  5313   004D6E  EFBB  F026         	goto	u4260
  5314   004D72                     u4261:
  5315   004D72  EFDB  F026         	goto	l4615
  5316   004D76                     u4260:
  5317   004D76  90D8               	bcf	status,0,c
  5318   004D78  340B               	rlcf	___fpclassifyf@u^0,w,c
  5319   004D7A  6E05               	movwf	??___fpclassifyf^0,c
  5320   004D7C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5321   004D7E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5322   004D80  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5323   004D82  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5324   004D84  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5325   004D86  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5326   004D88  5005               	movf	??___fpclassifyf^0,w,c
  5327   004D8A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5328   004D8C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5329   004D8E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5330   004D90  A4D8               	btfss	status,2,c
  5331   004D92  EFCD  F026         	goto	u4271
  5332   004D96  EFCF  F026         	goto	u4270
  5333   004D9A                     u4271:
  5334   004D9A  EFD5  F026         	goto	l4611
  5335   004D9E                     u4270:
  5336   004D9E  0E00               	movlw	0
  5337   004DA0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5338   004DA2  0E02               	movlw	2
  5339   004DA4  6E01               	movwf	?___fpclassifyf^0,c
  5340   004DA6  EF0A  F027         	goto	l1518
  5341   004DAA                     l4611:
  5342   004DAA  0E00               	movlw	0
  5343   004DAC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5344   004DAE  0E03               	movlw	3
  5345   004DB0  6E01               	movwf	?___fpclassifyf^0,c
  5346   004DB2  EF0A  F027         	goto	l1518
  5347   004DB6                     l4615:
  5348   004DB6  2809               	incf	___fpclassifyf@e^0,w,c
  5349   004DB8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5350   004DBA  A4D8               	btfss	status,2,c
  5351   004DBC  EFE2  F026         	goto	u4281
  5352   004DC0  EFE4  F026         	goto	u4280
  5353   004DC4                     u4281:
  5354   004DC4  EF06  F027         	goto	l4621
  5355   004DC8                     u4280:
  5356   004DC8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5357   004DCC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5358   004DD0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5359   004DD4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5360   004DD8  0E09               	movlw	9
  5361   004DDA                     u4295:
  5362   004DDA  90D8               	bcf	status,0,c
  5363   004DDC  3605               	rlcf	??___fpclassifyf^0,f,c
  5364   004DDE  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5365   004DE0  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5366   004DE2  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5367   004DE4  2EE8               	decfsz	wreg,f,c
  5368   004DE6  EFED  F026         	goto	u4295
  5369   004DEA  5005               	movf	??___fpclassifyf^0,w,c
  5370   004DEC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5371   004DEE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5372   004DF0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5373   004DF2  B4D8               	btfsc	status,2,c
  5374   004DF4  EFFE  F026         	goto	u4301
  5375   004DF8  EF01  F027         	goto	u4300
  5376   004DFC                     u4301:
  5377   004DFC  0E01               	movlw	1
  5378   004DFE  EF02  F027         	goto	u4310
  5379   004E02                     u4300:
  5380   004E02  0E00               	movlw	0
  5381   004E04                     u4310:
  5382   004E04  6E01               	movwf	?___fpclassifyf^0,c
  5383   004E06  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5384   004E08  EF0A  F027         	goto	l1518
  5385   004E0C                     l4621:
  5386   004E0C  0E00               	movlw	0
  5387   004E0E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5388   004E10  0E04               	movlw	4
  5389   004E12  6E01               	movwf	?___fpclassifyf^0,c
  5390   004E14                     l1518:
  5391   004E14  0012               	return		;funcret
  5392   004E16                     __end_of___fpclassifyf:
  5393                           	callstack 0
  5394                           
  5395 ;; *************** function ___fltol *****************
  5396 ;; Defined at:
  5397 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  f1              4    0[COMRAM] int 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  exp1            1    9[COMRAM] unsigned char 
  5402 ;;  sign1           1    8[COMRAM] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  4    0[COMRAM] long 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;Total ram usage:       10 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_reverseOneBlock
  5422 ;;		_ForwardOneBlock
  5423 ;;		_Forwardhalfblock
  5424 ;;		_efgtoa
  5425 ;;		_Backhalfblock
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text11
  5430   004B0E                     __ptext11:
  5431                           	callstack 0
  5432   004B0E                     ___fltol:
  5433                           	callstack 26
  5434   004B0E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5435   004B10  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5436   004B12  6E0A               	movwf	___fltol@exp1^0,c
  5437   004B14  500A               	movf	___fltol@exp1^0,w,c
  5438   004B16  A4D8               	btfss	status,2,c
  5439   004B18  EF90  F025         	goto	u4151
  5440   004B1C  EF92  F025         	goto	u4150
  5441   004B20                     u4151:
  5442   004B20  EF9C  F025         	goto	l4547
  5443   004B24                     u4150:
  5444   004B24                     l4543:
  5445   004B24  0E00               	movlw	0
  5446   004B26  6E01               	movwf	?___fltol^0,c
  5447   004B28  0E00               	movlw	0
  5448   004B2A  6E02               	movwf	(?___fltol+1)^0,c
  5449   004B2C  0E00               	movlw	0
  5450   004B2E  6E03               	movwf	(?___fltol+2)^0,c
  5451   004B30  0E00               	movlw	0
  5452   004B32  6E04               	movwf	(?___fltol+3)^0,c
  5453   004B34  EF09  F026         	goto	l991
  5454   004B38                     l4547:
  5455   004B38  C001  F005         	movff	___fltol@f1,??___fltol
  5456   004B3C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5457   004B40  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5458   004B44  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5459   004B48  0E20               	movlw	32
  5460   004B4A  EFAC  F025         	goto	u4160
  5461   004B4E                     u4165:
  5462   004B4E  90D8               	bcf	status,0,c
  5463   004B50  3208               	rrcf	(??___fltol+3)^0,f,c
  5464   004B52  3207               	rrcf	(??___fltol+2)^0,f,c
  5465   004B54  3206               	rrcf	(??___fltol+1)^0,f,c
  5466   004B56  3205               	rrcf	??___fltol^0,f,c
  5467   004B58                     u4160:
  5468   004B58  2EE8               	decfsz	wreg,f,c
  5469   004B5A  EFA7  F025         	goto	u4165
  5470   004B5E  5005               	movf	??___fltol^0,w,c
  5471   004B60  6E09               	movwf	___fltol@sign1^0,c
  5472   004B62  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5473   004B64  0EFF               	movlw	255
  5474   004B66  1601               	andwf	___fltol@f1^0,f,c
  5475   004B68  0EFF               	movlw	255
  5476   004B6A  1602               	andwf	(___fltol@f1+1)^0,f,c
  5477   004B6C  0EFF               	movlw	255
  5478   004B6E  1603               	andwf	(___fltol@f1+2)^0,f,c
  5479   004B70  0E00               	movlw	0
  5480   004B72  1604               	andwf	(___fltol@f1+3)^0,f,c
  5481   004B74  0E96               	movlw	150
  5482   004B76  5E0A               	subwf	___fltol@exp1^0,f,c
  5483   004B78  BE0A               	btfsc	___fltol@exp1^0,7,c
  5484   004B7A  EFC3  F025         	goto	u4170
  5485   004B7E  EFC1  F025         	goto	u4171
  5486   004B82                     u4171:
  5487   004B82  EFD9  F025         	goto	l4567
  5488   004B86                     u4170:
  5489   004B86  500A               	movf	___fltol@exp1^0,w,c
  5490   004B88  0A80               	xorlw	128
  5491   004B8A  0F97               	addlw	151
  5492   004B8C  B0D8               	btfsc	status,0,c
  5493   004B8E  EFCB  F025         	goto	u4181
  5494   004B92  EFCD  F025         	goto	u4180
  5495   004B96                     u4181:
  5496   004B96  EFCF  F025         	goto	l4563
  5497   004B9A                     u4180:
  5498   004B9A  EF92  F025         	goto	l4543
  5499   004B9E                     l4563:
  5500   004B9E  90D8               	bcf	status,0,c
  5501   004BA0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5502   004BA2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5503   004BA4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5504   004BA6  3201               	rrcf	___fltol@f1^0,f,c
  5505   004BA8  3E0A               	incfsz	___fltol@exp1^0,f,c
  5506   004BAA  EFCF  F025         	goto	l4563
  5507   004BAE  EFF1  F025         	goto	l4577
  5508   004BB2                     l4567:
  5509   004BB2  0E1F               	movlw	31
  5510   004BB4  640A               	cpfsgt	___fltol@exp1^0,c
  5511   004BB6  EFDF  F025         	goto	u4191
  5512   004BBA  EFE1  F025         	goto	u4190
  5513   004BBE                     u4191:
  5514   004BBE  EFE9  F025         	goto	l4575
  5515   004BC2                     u4190:
  5516   004BC2  EF92  F025         	goto	l4543
  5517   004BC6                     l4573:
  5518   004BC6  90D8               	bcf	status,0,c
  5519   004BC8  3601               	rlcf	___fltol@f1^0,f,c
  5520   004BCA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5521   004BCC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5522   004BCE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5523   004BD0  060A               	decf	___fltol@exp1^0,f,c
  5524   004BD2                     l4575:
  5525   004BD2  500A               	movf	___fltol@exp1^0,w,c
  5526   004BD4  A4D8               	btfss	status,2,c
  5527   004BD6  EFEF  F025         	goto	u4201
  5528   004BDA  EFF1  F025         	goto	u4200
  5529   004BDE                     u4201:
  5530   004BDE  EFE3  F025         	goto	l4573
  5531   004BE2                     u4200:
  5532   004BE2                     l4577:
  5533   004BE2  5009               	movf	___fltol@sign1^0,w,c
  5534   004BE4  B4D8               	btfsc	status,2,c
  5535   004BE6  EFF7  F025         	goto	u4211
  5536   004BEA  EFF9  F025         	goto	u4210
  5537   004BEE                     u4211:
  5538   004BEE  EF01  F026         	goto	l4581
  5539   004BF2                     u4210:
  5540   004BF2  1E04               	comf	(___fltol@f1+3)^0,f,c
  5541   004BF4  1E03               	comf	(___fltol@f1+2)^0,f,c
  5542   004BF6  1E02               	comf	(___fltol@f1+1)^0,f,c
  5543   004BF8  6C01               	negf	___fltol@f1^0,c
  5544   004BFA  0E00               	movlw	0
  5545   004BFC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5546   004BFE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5547   004C00  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5548   004C02                     l4581:
  5549   004C02  C001  F001         	movff	___fltol@f1,?___fltol
  5550   004C06  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5551   004C0A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5552   004C0E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5553   004C12                     l991:
  5554   004C12  0012               	return		;funcret
  5555   004C14                     __end_of___fltol:
  5556                           	callstack 0
  5557                           
  5558 ;; *************** function ___flneg *****************
  5559 ;; Defined at:
  5560 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  f1              4    0[COMRAM] long 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  4    0[COMRAM] long 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5577 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5578 ;;Total ram usage:        4 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_efgtoa
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text12
  5588   005FA6                     __ptext12:
  5589                           	callstack 0
  5590   005FA6                     ___flneg:
  5591                           	callstack 26
  5592   005FA6  5001               	movf	___flneg@f1^0,w,c
  5593   005FA8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5594   005FAA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5595   005FAC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5596   005FAE  B4D8               	btfsc	status,2,c
  5597   005FB0  EFDC  F02F         	goto	u4141
  5598   005FB4  EFDE  F02F         	goto	u4140
  5599   005FB8                     u4141:
  5600   005FB8  EFE6  F02F         	goto	l4537
  5601   005FBC                     u4140:
  5602   005FBC  0E00               	movlw	0
  5603   005FBE  1A01               	xorwf	___flneg@f1^0,f,c
  5604   005FC0  0E00               	movlw	0
  5605   005FC2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5606   005FC4  0E00               	movlw	0
  5607   005FC6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5608   005FC8  0E80               	movlw	128
  5609   005FCA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5610   005FCC                     l4537:
  5611   005FCC  C001  F001         	movff	___flneg@f1,?___flneg
  5612   005FD0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5613   005FD4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5614   005FD8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5615   005FDC  0012               	return		;funcret
  5616   005FDE                     __end_of___flneg:
  5617                           	callstack 0
  5618                           
  5619 ;; *************** function _dtoa *****************
  5620 ;; Defined at:
  5621 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5624 ;;		 -> sprintf@f(11), 
  5625 ;;  d               8   29[COMRAM] long long 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  n               8   51[COMRAM] long long 
  5628 ;;  i               2   59[COMRAM] int 
  5629 ;;  w               2   49[COMRAM] int 
  5630 ;;  p               2   47[COMRAM] int 
  5631 ;;  s               1   61[COMRAM] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5641 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5644 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5645 ;;Total ram usage:       35 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 4
  5648 ;; This function calls:
  5649 ;;		___aodiv
  5650 ;;		___aomod
  5651 ;;		_abs
  5652 ;;		_pad
  5653 ;; This function is called by:
  5654 ;;		_vfpfcnvrt
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text13
  5659   003E92                     __ptext13:
  5660                           	callstack 0
  5661   003E92                     _dtoa:
  5662                           	callstack 23
  5663   003E92                     
  5664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5665   003E92  C01E  F034         	movff	dtoa@d,dtoa@n
  5666   003E96  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5667   003E9A  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5668   003E9E  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5669   003EA2  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5670   003EA6  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5671   003EAA  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5672   003EAE  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5673   003EB2                     
  5674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5675   003EB2  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5676   003EB4  EF5E  F01F         	goto	u4581
  5677   003EB8  EF61  F01F         	goto	u4580
  5678   003EBC                     u4581:
  5679   003EBC  0E01               	movlw	1
  5680   003EBE  EF62  F01F         	goto	u4590
  5681   003EC2                     u4580:
  5682   003EC2  0E00               	movlw	0
  5683   003EC4                     u4590:
  5684   003EC4  6E3E               	movwf	dtoa@s^0,c
  5685   003EC6                     
  5686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5687   003EC6  503E               	movf	dtoa@s^0,w,c
  5688   003EC8  B4D8               	btfsc	status,2,c
  5689   003ECA  EF69  F01F         	goto	u4601
  5690   003ECE  EF6B  F01F         	goto	u4600
  5691   003ED2                     u4601:
  5692   003ED2  EF7B  F01F         	goto	l4761
  5693   003ED6                     u4600:
  5694   003ED6                     
  5695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5696   003ED6  1E3B               	comf	(dtoa@n+7)^0,f,c
  5697   003ED8  1E3A               	comf	(dtoa@n+6)^0,f,c
  5698   003EDA  1E39               	comf	(dtoa@n+5)^0,f,c
  5699   003EDC  1E38               	comf	(dtoa@n+4)^0,f,c
  5700   003EDE  1E37               	comf	(dtoa@n+3)^0,f,c
  5701   003EE0  1E36               	comf	(dtoa@n+2)^0,f,c
  5702   003EE2  1E35               	comf	(dtoa@n+1)^0,f,c
  5703   003EE4  6C34               	negf	dtoa@n^0,c
  5704   003EE6  0E00               	movlw	0
  5705   003EE8  2235               	addwfc	(dtoa@n+1)^0,f,c
  5706   003EEA  2236               	addwfc	(dtoa@n+2)^0,f,c
  5707   003EEC  2237               	addwfc	(dtoa@n+3)^0,f,c
  5708   003EEE  2238               	addwfc	(dtoa@n+4)^0,f,c
  5709   003EF0  2239               	addwfc	(dtoa@n+5)^0,f,c
  5710   003EF2  223A               	addwfc	(dtoa@n+6)^0,f,c
  5711   003EF4  223B               	addwfc	(dtoa@n+7)^0,f,c
  5712   003EF6                     l4761:
  5713                           
  5714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5715   003EF6  0100               	movlb	0	; () banked
  5716   003EF8  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  5717   003EFA  EF89  F01F         	goto	u4610
  5718   003EFE  51F0               	movf	(_prec+1)& (0+255),w,b
  5719   003F00  E106               	bnz	u4611
  5720   003F02  05EF               	decf	_prec& (0+255),w,b
  5721   003F04  B0D8               	btfsc	status,0,c
  5722   003F06  EF87  F01F         	goto	u4611
  5723   003F0A  EF89  F01F         	goto	u4610
  5724   003F0E                     u4611:
  5725   003F0E  EF8F  F01F         	goto	l1413
  5726   003F12                     u4610:
  5727   003F12                     
  5728                           ; BSR set to: 0
  5729   003F12  0E00               	movlw	0
  5730   003F14  6E31               	movwf	(dtoa@p+1)^0,c
  5731   003F16  0E01               	movlw	1
  5732   003F18  6E30               	movwf	dtoa@p^0,c
  5733   003F1A  EF93  F01F         	goto	l1415
  5734   003F1E                     l1413:
  5735                           
  5736                           ; BSR set to: 0
  5737   003F1E  C0EF  F030         	movff	_prec,dtoa@p
  5738   003F22  C0F0  F031         	movff	_prec+1,dtoa@p+1
  5739   003F26                     l1415:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5743   003F26  C0ED  F032         	movff	_width,dtoa@w
  5744   003F2A  C0EE  F033         	movff	_width+1,dtoa@w+1
  5745   003F2E                     
  5746                           ; BSR set to: 0
  5747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5748   003F2E  503E               	movf	dtoa@s^0,w,c
  5749   003F30  B4D8               	btfsc	status,2,c
  5750   003F32  EF9D  F01F         	goto	u4621
  5751   003F36  EF9F  F01F         	goto	u4620
  5752   003F3A                     u4621:
  5753   003F3A  EFB6  F01F         	goto	l1416
  5754   003F3E                     u4620:
  5755   003F3E                     
  5756                           ; BSR set to: 0
  5757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5758   003F3E  0632               	decf	dtoa@w^0,f,c
  5759   003F40  A0D8               	btfss	status,0,c
  5760   003F42  0633               	decf	(dtoa@w+1)^0,f,c
  5761   003F44                     
  5762                           ; BSR set to: 0
  5763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5764   003F44  503E               	movf	dtoa@s^0,w,c
  5765   003F46  A4D8               	btfss	status,2,c
  5766   003F48  EFA8  F01F         	goto	u4631
  5767   003F4C  EFAA  F01F         	goto	u4630
  5768   003F50                     u4631:
  5769   003F50  EFB0  F01F         	goto	l4773
  5770   003F54                     u4630:
  5771   003F54                     
  5772                           ; BSR set to: 0
  5773   003F54  0E00               	movlw	0
  5774   003F56  6E2F               	movwf	(_dtoa$2741+1)^0,c
  5775   003F58  0E2B               	movlw	43
  5776   003F5A  6E2E               	movwf	_dtoa$2741^0,c
  5777   003F5C  EFB4  F01F         	goto	l4775
  5778   003F60                     l4773:
  5779                           
  5780                           ; BSR set to: 0
  5781   003F60  0E00               	movlw	0
  5782   003F62  6E2F               	movwf	(_dtoa$2741+1)^0,c
  5783   003F64  0E2D               	movlw	45
  5784   003F66  6E2E               	movwf	_dtoa$2741^0,c
  5785   003F68                     l4775:
  5786                           
  5787                           ; BSR set to: 0
  5788   003F68  C02E  F03E         	movff	_dtoa$2741,dtoa@s
  5789   003F6C                     l1416:
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5793   003F6C  0E00               	movlw	0
  5794   003F6E  6E3D               	movwf	(dtoa@i+1)^0,c
  5795   003F70  0E4F               	movlw	79
  5796   003F72  6E3C               	movwf	dtoa@i^0,c
  5797   003F74                     
  5798                           ; BSR set to: 0
  5799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5800   003F74  0E00               	movlw	0
  5801   003F76  0102               	movlb	2	; () banked
  5802   003F78  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5803                           
  5804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5805   003F7A  EF3B  F020         	goto	l4789
  5806   003F7E                     l4779:
  5807                           
  5808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5809   003F7E  063C               	decf	dtoa@i^0,f,c
  5810   003F80  A0D8               	btfss	status,0,c
  5811   003F82  063D               	decf	(dtoa@i+1)^0,f,c
  5812   003F84                     
  5813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5814   003F84  0EA0               	movlw	low _dbuf
  5815   003F86  243C               	addwf	dtoa@i^0,w,c
  5816   003F88  6ED9               	movwf	fsr2l,c
  5817   003F8A  0E02               	movlw	high _dbuf
  5818   003F8C  203D               	addwfc	(dtoa@i+1)^0,w,c
  5819   003F8E  6EDA               	movwf	fsr2h,c
  5820   003F90  C034  F001         	movff	dtoa@n,___aomod@dividend
  5821   003F94  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5822   003F98  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5823   003F9C  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5824   003FA0  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5825   003FA4  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5826   003FA8  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5827   003FAC  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5828   003FB0  0E0A               	movlw	10
  5829   003FB2  6E09               	movwf	___aomod@divisor^0,c
  5830   003FB4  0E00               	movlw	0
  5831   003FB6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5832   003FB8  0E00               	movlw	0
  5833   003FBA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5834   003FBC  0E00               	movlw	0
  5835   003FBE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5836   003FC0  0E00               	movlw	0
  5837   003FC2  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5838   003FC4  0E00               	movlw	0
  5839   003FC6  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5840   003FC8  0E00               	movlw	0
  5841   003FCA  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5842   003FCC  0E00               	movlw	0
  5843   003FCE  6E10               	movwf	(___aomod@divisor+7)^0,c
  5844   003FD0  ECD5  F024         	call	___aomod	;wreg free
  5845   003FD4  C001  F026         	movff	?___aomod,??_dtoa
  5846   003FD8  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5847   003FDC  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5848   003FE0  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5849   003FE4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5850   003FE8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5851   003FEC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5852   003FF0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5853   003FF4  C026  F013         	movff	??_dtoa,abs@a
  5854   003FF8  C027  F014         	movff	??_dtoa+1,abs@a+1
  5855   003FFC  EC75  F02F         	call	_abs	;wreg free
  5856   004000  5013               	movf	?_abs^0,w,c
  5857   004002  0F30               	addlw	48
  5858   004004  6EDF               	movwf	indf2,c
  5859   004006                     
  5860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5861   004006  0630               	decf	dtoa@p^0,f,c
  5862   004008  A0D8               	btfss	status,0,c
  5863   00400A  0631               	decf	(dtoa@p+1)^0,f,c
  5864   00400C                     
  5865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5866   00400C  0632               	decf	dtoa@w^0,f,c
  5867   00400E  A0D8               	btfss	status,0,c
  5868   004010  0633               	decf	(dtoa@w+1)^0,f,c
  5869   004012                     
  5870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5871   004012  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5872   004016  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5873   00401A  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5874   00401E  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5875   004022  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5876   004026  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5877   00402A  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5878   00402E  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5879   004032  0E0A               	movlw	10
  5880   004034  6E09               	movwf	___aodiv@divisor^0,c
  5881   004036  0E00               	movlw	0
  5882   004038  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5883   00403A  0E00               	movlw	0
  5884   00403C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5885   00403E  0E00               	movlw	0
  5886   004040  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5887   004042  0E00               	movlw	0
  5888   004044  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5889   004046  0E00               	movlw	0
  5890   004048  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5891   00404A  0E00               	movlw	0
  5892   00404C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5893   00404E  0E00               	movlw	0
  5894   004050  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5895   004052  EC5B  F023         	call	___aodiv	;wreg free
  5896   004056  C001  F034         	movff	?___aodiv,dtoa@n
  5897   00405A  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5898   00405E  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5899   004062  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5900   004066  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5901   00406A  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5902   00406E  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5903   004072  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5904   004076                     l4789:
  5905                           
  5906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5907   004076  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5908   004078  EF46  F020         	goto	u4641
  5909   00407C  503D               	movf	(dtoa@i+1)^0,w,c
  5910   00407E  E108               	bnz	u4640
  5911   004080  043C               	decf	dtoa@i^0,w,c
  5912   004082  A0D8               	btfss	status,0,c
  5913   004084  EF46  F020         	goto	u4641
  5914   004088  EF48  F020         	goto	u4640
  5915   00408C                     u4641:
  5916   00408C  EF64  F020         	goto	l4795
  5917   004090                     u4640:
  5918   004090  5034               	movf	dtoa@n^0,w,c
  5919   004092  1035               	iorwf	(dtoa@n+1)^0,w,c
  5920   004094  1036               	iorwf	(dtoa@n+2)^0,w,c
  5921   004096  1037               	iorwf	(dtoa@n+3)^0,w,c
  5922   004098  1038               	iorwf	(dtoa@n+4)^0,w,c
  5923   00409A  1039               	iorwf	(dtoa@n+5)^0,w,c
  5924   00409C  103A               	iorwf	(dtoa@n+6)^0,w,c
  5925   00409E  103B               	iorwf	(dtoa@n+7)^0,w,c
  5926   0040A0  A4D8               	btfss	status,2,c
  5927   0040A2  EF55  F020         	goto	u4651
  5928   0040A6  EF57  F020         	goto	u4650
  5929   0040AA                     u4651:
  5930   0040AA  EFBF  F01F         	goto	l4779
  5931   0040AE                     u4650:
  5932   0040AE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5933   0040B0  EF64  F020         	goto	u4660
  5934   0040B4  5031               	movf	(dtoa@p+1)^0,w,c
  5935   0040B6  E106               	bnz	u4661
  5936   0040B8  0430               	decf	dtoa@p^0,w,c
  5937   0040BA  B0D8               	btfsc	status,0,c
  5938   0040BC  EF62  F020         	goto	u4661
  5939   0040C0  EF64  F020         	goto	u4660
  5940   0040C4                     u4661:
  5941   0040C4  EFBF  F01F         	goto	l4779
  5942   0040C8                     u4660:
  5943   0040C8                     l4795:
  5944                           
  5945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5946   0040C8  503E               	movf	dtoa@s^0,w,c
  5947   0040CA  B4D8               	btfsc	status,2,c
  5948   0040CC  EF6A  F020         	goto	u4671
  5949   0040D0  EF6C  F020         	goto	u4670
  5950   0040D4                     u4671:
  5951   0040D4  EF77  F020         	goto	l4801
  5952   0040D8                     u4670:
  5953   0040D8                     
  5954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5955   0040D8  063C               	decf	dtoa@i^0,f,c
  5956   0040DA  A0D8               	btfss	status,0,c
  5957   0040DC  063D               	decf	(dtoa@i+1)^0,f,c
  5958   0040DE                     
  5959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5960   0040DE  0EA0               	movlw	low _dbuf
  5961   0040E0  243C               	addwf	dtoa@i^0,w,c
  5962   0040E2  6ED9               	movwf	fsr2l,c
  5963   0040E4  0E02               	movlw	high _dbuf
  5964   0040E6  203D               	addwfc	(dtoa@i+1)^0,w,c
  5965   0040E8  6EDA               	movwf	fsr2h,c
  5966   0040EA  C03E  FFDF         	movff	dtoa@s,indf2
  5967   0040EE                     l4801:
  5968                           
  5969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5970   0040EE  C01C  F011         	movff	dtoa@fp,pad@fp
  5971   0040F2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5972   0040F6  0EA0               	movlw	low _dbuf
  5973   0040F8  243C               	addwf	dtoa@i^0,w,c
  5974   0040FA  6E13               	movwf	pad@buf^0,c
  5975   0040FC  0E02               	movlw	high _dbuf
  5976   0040FE  203D               	addwfc	(dtoa@i+1)^0,w,c
  5977   004100  6E14               	movwf	(pad@buf+1)^0,c
  5978   004102  C032  F015         	movff	dtoa@w,pad@p
  5979   004106  C033  F016         	movff	dtoa@w+1,pad@p+1
  5980   00410A  ECD0  F02A         	call	_pad	;wreg free
  5981   00410E  0012               	return		;funcret
  5982   004110                     __end_of_dtoa:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _pad *****************
  5986 ;; Defined at:
  5987 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5990 ;;		 -> sprintf@f(11), 
  5991 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5992 ;;		 -> dbuf(80), 
  5993 ;;  p               2   20[COMRAM] int 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  w               2   25[COMRAM] int 
  5996 ;;  i               2   23[COMRAM] int 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;Total ram usage:       11 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; Hardware stack levels required when called: 3
  6013 ;; This function calls:
  6014 ;;		_fputc
  6015 ;;		_fputs
  6016 ;; This function is called by:
  6017 ;;		_dtoa
  6018 ;;		_efgtoa
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text14
  6023   0055A0                     __ptext14:
  6024                           	callstack 0
  6025   0055A0                     _pad:
  6026                           	callstack 23
  6027   0055A0                     
  6028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  6029   0055A0  BE16               	btfsc	(pad@p+1)^0,7,c
  6030   0055A2  EFD5  F02A         	goto	u4221
  6031   0055A6  EFD7  F02A         	goto	u4220
  6032   0055AA                     u4221:
  6033   0055AA  EFDD  F02A         	goto	l4589
  6034   0055AE                     u4220:
  6035   0055AE  C015  F01A         	movff	pad@p,pad@w
  6036   0055B2  C016  F01B         	movff	pad@p+1,pad@w+1
  6037   0055B6  EFE1  F02A         	goto	l1404
  6038   0055BA                     l4589:
  6039   0055BA  0E00               	movlw	0
  6040   0055BC  6E1B               	movwf	(pad@w+1)^0,c
  6041   0055BE  0E00               	movlw	0
  6042   0055C0  6E1A               	movwf	pad@w^0,c
  6043   0055C2                     l1404:
  6044                           
  6045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6046   0055C2  0E00               	movlw	0
  6047   0055C4  6E19               	movwf	(pad@i+1)^0,c
  6048   0055C6  0E00               	movlw	0
  6049   0055C8  6E18               	movwf	pad@i^0,c
  6050                           
  6051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6052   0055CA  EFF3  F02A         	goto	l4595
  6053   0055CE                     l4591:
  6054                           
  6055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6056   0055CE  0E00               	movlw	0
  6057   0055D0  6E02               	movwf	(fputc@c+1)^0,c
  6058   0055D2  0E20               	movlw	32
  6059   0055D4  6E01               	movwf	fputc@c^0,c
  6060   0055D6  C011  F003         	movff	pad@fp,fputc@fp
  6061   0055DA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6062   0055DE  EC0B  F027         	call	_fputc	;wreg free
  6063   0055E2                     
  6064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6065   0055E2  4A18               	infsnz	pad@i^0,f,c
  6066   0055E4  2A19               	incf	(pad@i+1)^0,f,c
  6067   0055E6                     l4595:
  6068                           
  6069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6070   0055E6  501A               	movf	pad@w^0,w,c
  6071   0055E8  5C18               	subwf	pad@i^0,w,c
  6072   0055EA  5019               	movf	(pad@i+1)^0,w,c
  6073   0055EC  0A80               	xorlw	128
  6074   0055EE  6E17               	movwf	??_pad^0,c
  6075   0055F0  501B               	movf	(pad@w+1)^0,w,c
  6076   0055F2  0A80               	xorlw	128
  6077   0055F4  5817               	subwfb	??_pad^0,w,c
  6078   0055F6  A0D8               	btfss	status,0,c
  6079   0055F8  EF00  F02B         	goto	u4231
  6080   0055FC  EF02  F02B         	goto	u4230
  6081   005600                     u4231:
  6082   005600  EFE7  F02A         	goto	l4591
  6083   005604                     u4230:
  6084   005604                     
  6085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6086   005604  C013  F00A         	movff	pad@buf,fputs@s
  6087   005608  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6088   00560C  C011  F00C         	movff	pad@fp,fputs@fp
  6089   005610  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6090   005614  EC32  F02F         	call	_fputs	;wreg free
  6091   005618  0012               	return		;funcret
  6092   00561A                     __end_of_pad:
  6093                           	callstack 0
  6094                           
  6095 ;; *************** function _fputs *****************
  6096 ;; Defined at:
  6097 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6100 ;;		 -> dbuf(80), 
  6101 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6102 ;;		 -> sprintf@f(11), 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  i               2   14[COMRAM] int 
  6105 ;;  c               1   13[COMRAM] unsigned char 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  2    9[COMRAM] int 
  6108 ;; Registers used:
  6109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;Total ram usage:        7 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 2
  6122 ;; This function calls:
  6123 ;;		_fputc
  6124 ;; This function is called by:
  6125 ;;		_pad
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text15
  6130   005E64                     __ptext15:
  6131                           	callstack 0
  6132   005E64                     _fputs:
  6133                           	callstack 23
  6134   005E64  0E00               	movlw	0
  6135   005E66  6E10               	movwf	(fputs@i+1)^0,c
  6136   005E68  0E00               	movlw	0
  6137   005E6A  6E0F               	movwf	fputs@i^0,c
  6138   005E6C  EF43  F02F         	goto	l4123
  6139   005E70                     l4119:
  6140   005E70  C00E  F001         	movff	fputs@c,fputc@c
  6141   005E74  6A02               	clrf	(fputc@c+1)^0,c
  6142   005E76  C00C  F003         	movff	fputs@fp,fputc@fp
  6143   005E7A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6144   005E7E  EC0B  F027         	call	_fputc	;wreg free
  6145   005E82  4A0F               	infsnz	fputs@i^0,f,c
  6146   005E84  2A10               	incf	(fputs@i+1)^0,f,c
  6147   005E86                     l4123:
  6148   005E86  500F               	movf	fputs@i^0,w,c
  6149   005E88  240A               	addwf	fputs@s^0,w,c
  6150   005E8A  6ED9               	movwf	fsr2l,c
  6151   005E8C  5010               	movf	(fputs@i+1)^0,w,c
  6152   005E8E  200B               	addwfc	(fputs@s+1)^0,w,c
  6153   005E90  6EDA               	movwf	fsr2h,c
  6154   005E92  50DF               	movf	indf2,w,c
  6155   005E94  6E0E               	movwf	fputs@c^0,c
  6156   005E96  500E               	movf	fputs@c^0,w,c
  6157   005E98  A4D8               	btfss	status,2,c
  6158   005E9A  EF51  F02F         	goto	u3481
  6159   005E9E  EF53  F02F         	goto	u3480
  6160   005EA2                     u3481:
  6161   005EA2  EF38  F02F         	goto	l4119
  6162   005EA6                     u3480:
  6163   005EA6  0012               	return		;funcret
  6164   005EA8                     __end_of_fputs:
  6165                           	callstack 0
  6166                           
  6167 ;; *************** function _fputc *****************
  6168 ;; Defined at:
  6169 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  c               2    0[COMRAM] int 
  6172 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6173 ;;		 -> sprintf@f(11), 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;		None
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  2    0[COMRAM] int 
  6178 ;; Registers used:
  6179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6189 ;;Total ram usage:        9 bytes
  6190 ;; Hardware stack levels used: 1
  6191 ;; Hardware stack levels required when called: 1
  6192 ;; This function calls:
  6193 ;;		_putch
  6194 ;; This function is called by:
  6195 ;;		_pad
  6196 ;;		_vfpfcnvrt
  6197 ;;		_fputs
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text16
  6202   004E16                     __ptext16:
  6203                           	callstack 0
  6204   004E16                     _fputc:
  6205                           	callstack 26
  6206   004E16  5003               	movf	fputc@fp^0,w,c
  6207   004E18  1004               	iorwf	(fputc@fp+1)^0,w,c
  6208   004E1A  B4D8               	btfsc	status,2,c
  6209   004E1C  EF12  F027         	goto	u3021
  6210   004E20  EF14  F027         	goto	u3020
  6211   004E24                     u3021:
  6212   004E24  EF1D  F027         	goto	l3877
  6213   004E28                     u3020:
  6214   004E28  5003               	movf	fputc@fp^0,w,c
  6215   004E2A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6216   004E2C  A4D8               	btfss	status,2,c
  6217   004E2E  EF1B  F027         	goto	u3031
  6218   004E32  EF1D  F027         	goto	u3030
  6219   004E36                     u3031:
  6220   004E36  EF22  F027         	goto	l3879
  6221   004E3A                     u3030:
  6222   004E3A                     l3877:
  6223   004E3A  5001               	movf	fputc@c^0,w,c
  6224   004E3C  ECE1  F030         	call	_putch
  6225   004E40  EF6F  F027         	goto	l1564
  6226   004E44                     l3879:
  6227   004E44  EE20 F009          	lfsr	2,9
  6228   004E48  5003               	movf	fputc@fp^0,w,c
  6229   004E4A  26D9               	addwf	fsr2l,f,c
  6230   004E4C  5004               	movf	(fputc@fp+1)^0,w,c
  6231   004E4E  22DA               	addwfc	fsr2h,f,c
  6232   004E50  50DE               	movf	postinc2,w,c
  6233   004E52  10DE               	iorwf	postinc2,w,c
  6234   004E54  B4D8               	btfsc	status,2,c
  6235   004E56  EF2F  F027         	goto	u3041
  6236   004E5A  EF31  F027         	goto	u3040
  6237   004E5E                     u3041:
  6238   004E5E  EF4C  F027         	goto	l3883
  6239   004E62                     u3040:
  6240   004E62  EE20 F009          	lfsr	2,9
  6241   004E66  5003               	movf	fputc@fp^0,w,c
  6242   004E68  26D9               	addwf	fsr2l,f,c
  6243   004E6A  5004               	movf	(fputc@fp+1)^0,w,c
  6244   004E6C  22DA               	addwfc	fsr2h,f,c
  6245   004E6E  EE10 F003          	lfsr	1,3
  6246   004E72  5003               	movf	fputc@fp^0,w,c
  6247   004E74  26E1               	addwf	fsr1l,f,c
  6248   004E76  5004               	movf	(fputc@fp+1)^0,w,c
  6249   004E78  22E2               	addwfc	fsr1h,f,c
  6250   004E7A  50DE               	movf	postinc2,w,c
  6251   004E7C  5CE6               	subwf	postinc1,w,c
  6252   004E7E  50E6               	movf	postinc1,w,c
  6253   004E80  0A80               	xorlw	128
  6254   004E82  6E09               	movwf	(??_fputc+4)^0,c
  6255   004E84  50DE               	movf	postinc2,w,c
  6256   004E86  0A80               	xorlw	128
  6257   004E88  5809               	subwfb	(??_fputc+4)^0,w,c
  6258   004E8A  B0D8               	btfsc	status,0,c
  6259   004E8C  EF4A  F027         	goto	u3051
  6260   004E90  EF4C  F027         	goto	u3050
  6261   004E94                     u3051:
  6262   004E94  EF6F  F027         	goto	l1564
  6263   004E98                     u3050:
  6264   004E98                     l3883:
  6265   004E98  EE20 F003          	lfsr	2,3
  6266   004E9C  5003               	movf	fputc@fp^0,w,c
  6267   004E9E  26D9               	addwf	fsr2l,f,c
  6268   004EA0  5004               	movf	(fputc@fp+1)^0,w,c
  6269   004EA2  22DA               	addwfc	fsr2h,f,c
  6270   004EA4  CFDE F005          	movff	postinc2,??_fputc
  6271   004EA8  CFDD F006          	movff	postdec2,??_fputc+1
  6272   004EAC  C003  FFD9         	movff	fputc@fp,fsr2l
  6273   004EB0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6274   004EB4  CFDE F007          	movff	postinc2,??_fputc+2
  6275   004EB8  CFDD F008          	movff	postdec2,??_fputc+3
  6276   004EBC  5005               	movf	??_fputc^0,w,c
  6277   004EBE  2407               	addwf	(??_fputc+2)^0,w,c
  6278   004EC0  6ED9               	movwf	fsr2l,c
  6279   004EC2  5006               	movf	(??_fputc+1)^0,w,c
  6280   004EC4  2008               	addwfc	(??_fputc+3)^0,w,c
  6281   004EC6  6EDA               	movwf	fsr2h,c
  6282   004EC8  C001  FFDF         	movff	fputc@c,indf2
  6283   004ECC  EE20 F003          	lfsr	2,3
  6284   004ED0  5003               	movf	fputc@fp^0,w,c
  6285   004ED2  26D9               	addwf	fsr2l,f,c
  6286   004ED4  5004               	movf	(fputc@fp+1)^0,w,c
  6287   004ED6  22DA               	addwfc	fsr2h,f,c
  6288   004ED8  2ADE               	incf	postinc2,f,c
  6289   004EDA  0E00               	movlw	0
  6290   004EDC  22DD               	addwfc	postdec2,f,c
  6291   004EDE                     l1564:
  6292   004EDE  0012               	return		;funcret
  6293   004EE0                     __end_of_fputc:
  6294                           	callstack 0
  6295                           
  6296 ;; *************** function _putch *****************
  6297 ;; Defined at:
  6298 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  c               1    wreg     unsigned char 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  c               1    0[COMRAM] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      void 
  6305 ;; Registers used:
  6306 ;;		wreg
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;Total ram usage:        0 bytes
  6317 ;; Hardware stack levels used: 1
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_fputc
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text17
  6326   0061C2                     __ptext17:
  6327                           	callstack 0
  6328   0061C2                     _putch:
  6329                           	callstack 26
  6330   0061C2  0012               	return		;funcret
  6331   0061C4                     __end_of_putch:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _abs *****************
  6335 ;; Defined at:
  6336 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  a               2   18[COMRAM] int 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  2   18[COMRAM] int 
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;Total ram usage:        4 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_dtoa
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text18
  6364   005EEA                     __ptext18:
  6365                           	callstack 0
  6366   005EEA                     _abs:
  6367                           	callstack 26
  6368   005EEA  BE14               	btfsc	(abs@a+1)^0,7,c
  6369   005EEC  EF82  F02F         	goto	u4240
  6370   005EF0  5014               	movf	(abs@a+1)^0,w,c
  6371   005EF2  E106               	bnz	u4241
  6372   005EF4  0413               	decf	abs@a^0,w,c
  6373   005EF6  B0D8               	btfsc	status,0,c
  6374   005EF8  EF80  F02F         	goto	u4241
  6375   005EFC  EF82  F02F         	goto	u4240
  6376   005F00                     u4241:
  6377   005F00  EF90  F02F         	goto	l1523
  6378   005F04                     u4240:
  6379   005F04  C013  F015         	movff	abs@a,??_abs
  6380   005F08  C014  F016         	movff	abs@a+1,??_abs+1
  6381   005F0C  1E15               	comf	??_abs^0,f,c
  6382   005F0E  1E16               	comf	(??_abs+1)^0,f,c
  6383   005F10  4A15               	infsnz	??_abs^0,f,c
  6384   005F12  2A16               	incf	(??_abs+1)^0,f,c
  6385   005F14  C015  F013         	movff	??_abs,?_abs
  6386   005F18  C016  F014         	movff	??_abs+1,?_abs+1
  6387   005F1C  EF94  F02F         	goto	l1526
  6388   005F20                     l1523:
  6389   005F20  C013  F013         	movff	abs@a,?_abs
  6390   005F24  C014  F014         	movff	abs@a+1,?_abs+1
  6391   005F28                     l1526:
  6392   005F28  0012               	return		;funcret
  6393   005F2A                     __end_of_abs:
  6394                           	callstack 0
  6395                           
  6396 ;; *************** function ___aomod *****************
  6397 ;; Defined at:
  6398 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  dividend        8    0[COMRAM] long long 
  6401 ;;  divisor         8    8[COMRAM] long long 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  sign            1   17[COMRAM] unsigned char 
  6404 ;;  counter         1   16[COMRAM] unsigned char 
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  8    0[COMRAM] long long 
  6407 ;; Registers used:
  6408 ;;		wreg, status,2, status,0
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6414 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;Total ram usage:       18 bytes
  6419 ;; Hardware stack levels used: 1
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_dtoa
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text19
  6428   0049AA                     __ptext19:
  6429                           	callstack 0
  6430   0049AA                     ___aomod:
  6431                           	callstack 26
  6432   0049AA  0E00               	movlw	0
  6433   0049AC  6E12               	movwf	___aomod@sign^0,c
  6434   0049AE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6435   0049B0  EFDE  F024         	goto	u3580
  6436   0049B4  EFDC  F024         	goto	u3581
  6437   0049B8                     u3581:
  6438   0049B8  EFF0  F024         	goto	l4193
  6439   0049BC                     u3580:
  6440   0049BC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6441   0049BE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6442   0049C0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6443   0049C2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6444   0049C4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6445   0049C6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6446   0049C8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6447   0049CA  6C01               	negf	___aomod@dividend^0,c
  6448   0049CC  0E00               	movlw	0
  6449   0049CE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6450   0049D0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6451   0049D2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6452   0049D4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6453   0049D6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6454   0049D8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6455   0049DA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6456   0049DC  0E01               	movlw	1
  6457   0049DE  6E12               	movwf	___aomod@sign^0,c
  6458   0049E0                     l4193:
  6459   0049E0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6460   0049E2  EFF7  F024         	goto	u3590
  6461   0049E6  EFF5  F024         	goto	u3591
  6462   0049EA                     u3591:
  6463   0049EA  EF07  F025         	goto	l4197
  6464   0049EE                     u3590:
  6465   0049EE  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6466   0049F0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6467   0049F2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6468   0049F4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6469   0049F6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6470   0049F8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6471   0049FA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6472   0049FC  6C09               	negf	___aomod@divisor^0,c
  6473   0049FE  0E00               	movlw	0
  6474   004A00  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6475   004A02  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6476   004A04  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6477   004A06  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6478   004A08  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6479   004A0A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6480   004A0C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6481   004A0E                     l4197:
  6482   004A0E  5009               	movf	___aomod@divisor^0,w,c
  6483   004A10  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6484   004A12  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6485   004A14  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6486   004A16  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6487   004A18  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6488   004A1A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6489   004A1C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6490   004A1E  B4D8               	btfsc	status,2,c
  6491   004A20  EF14  F025         	goto	u3601
  6492   004A24  EF16  F025         	goto	u3600
  6493   004A28                     u3601:
  6494   004A28  EF5E  F025         	goto	l4213
  6495   004A2C                     u3600:
  6496   004A2C  0E01               	movlw	1
  6497   004A2E  6E11               	movwf	___aomod@counter^0,c
  6498   004A30  EF24  F025         	goto	l4203
  6499   004A34                     l4201:
  6500   004A34  90D8               	bcf	status,0,c
  6501   004A36  3609               	rlcf	___aomod@divisor^0,f,c
  6502   004A38  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6503   004A3A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6504   004A3C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6505   004A3E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6506   004A40  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6507   004A42  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6508   004A44  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6509   004A46  2A11               	incf	___aomod@counter^0,f,c
  6510   004A48                     l4203:
  6511   004A48  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6512   004A4A  EF29  F025         	goto	u3611
  6513   004A4E  EF2B  F025         	goto	u3610
  6514   004A52                     u3611:
  6515   004A52  EF1A  F025         	goto	l4201
  6516   004A56                     u3610:
  6517   004A56                     l4205:
  6518   004A56  5009               	movf	___aomod@divisor^0,w,c
  6519   004A58  5C01               	subwf	___aomod@dividend^0,w,c
  6520   004A5A  500A               	movf	(___aomod@divisor+1)^0,w,c
  6521   004A5C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6522   004A5E  500B               	movf	(___aomod@divisor+2)^0,w,c
  6523   004A60  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6524   004A62  500C               	movf	(___aomod@divisor+3)^0,w,c
  6525   004A64  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6526   004A66  500D               	movf	(___aomod@divisor+4)^0,w,c
  6527   004A68  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6528   004A6A  500E               	movf	(___aomod@divisor+5)^0,w,c
  6529   004A6C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6530   004A6E  500F               	movf	(___aomod@divisor+6)^0,w,c
  6531   004A70  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6532   004A72  5010               	movf	(___aomod@divisor+7)^0,w,c
  6533   004A74  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6534   004A76  A0D8               	btfss	status,0,c
  6535   004A78  EF40  F025         	goto	u3621
  6536   004A7C  EF42  F025         	goto	u3620
  6537   004A80                     u3621:
  6538   004A80  EF52  F025         	goto	l4209
  6539   004A84                     u3620:
  6540   004A84  5009               	movf	___aomod@divisor^0,w,c
  6541   004A86  5E01               	subwf	___aomod@dividend^0,f,c
  6542   004A88  500A               	movf	(___aomod@divisor+1)^0,w,c
  6543   004A8A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6544   004A8C  500B               	movf	(___aomod@divisor+2)^0,w,c
  6545   004A8E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6546   004A90  500C               	movf	(___aomod@divisor+3)^0,w,c
  6547   004A92  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6548   004A94  500D               	movf	(___aomod@divisor+4)^0,w,c
  6549   004A96  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6550   004A98  500E               	movf	(___aomod@divisor+5)^0,w,c
  6551   004A9A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6552   004A9C  500F               	movf	(___aomod@divisor+6)^0,w,c
  6553   004A9E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6554   004AA0  5010               	movf	(___aomod@divisor+7)^0,w,c
  6555   004AA2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6556   004AA4                     l4209:
  6557   004AA4  90D8               	bcf	status,0,c
  6558   004AA6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6559   004AA8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6560   004AAA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6561   004AAC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6562   004AAE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6563   004AB0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6564   004AB2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6565   004AB4  3209               	rrcf	___aomod@divisor^0,f,c
  6566   004AB6  2E11               	decfsz	___aomod@counter^0,f,c
  6567   004AB8  EF2B  F025         	goto	l4205
  6568   004ABC                     l4213:
  6569   004ABC  5012               	movf	___aomod@sign^0,w,c
  6570   004ABE  B4D8               	btfsc	status,2,c
  6571   004AC0  EF64  F025         	goto	u3631
  6572   004AC4  EF66  F025         	goto	u3630
  6573   004AC8                     u3631:
  6574   004AC8  EF76  F025         	goto	l4217
  6575   004ACC                     u3630:
  6576   004ACC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6577   004ACE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6578   004AD0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6579   004AD2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6580   004AD4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6581   004AD6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6582   004AD8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6583   004ADA  6C01               	negf	___aomod@dividend^0,c
  6584   004ADC  0E00               	movlw	0
  6585   004ADE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6586   004AE0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6587   004AE2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6588   004AE4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6589   004AE6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6590   004AE8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6591   004AEA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6592   004AEC                     l4217:
  6593   004AEC  C001  F001         	movff	___aomod@dividend,?___aomod
  6594   004AF0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6595   004AF4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6596   004AF8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6597   004AFC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6598   004B00  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6599   004B04  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6600   004B08  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6601   004B0C  0012               	return		;funcret
  6602   004B0E                     __end_of___aomod:
  6603                           	callstack 0
  6604                           
  6605 ;; *************** function ___aodiv *****************
  6606 ;; Defined at:
  6607 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  dividend        8    0[COMRAM] long long 
  6610 ;;  divisor         8    8[COMRAM] long long 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  quotient        8   18[COMRAM] long long 
  6613 ;;  sign            1   17[COMRAM] unsigned char 
  6614 ;;  counter         1   16[COMRAM] unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  8    0[COMRAM] long long 
  6617 ;; Registers used:
  6618 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6624 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;Total ram usage:       26 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_dtoa
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text20
  6638   0046B6                     __ptext20:
  6639                           	callstack 0
  6640   0046B6                     ___aodiv:
  6641                           	callstack 26
  6642   0046B6  0E00               	movlw	0
  6643   0046B8  6E12               	movwf	___aodiv@sign^0,c
  6644   0046BA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6645   0046BC  EF64  F023         	goto	u3510
  6646   0046C0  EF62  F023         	goto	u3511
  6647   0046C4                     u3511:
  6648   0046C4  EF76  F023         	goto	l4149
  6649   0046C8                     u3510:
  6650   0046C8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6651   0046CA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6652   0046CC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6653   0046CE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6654   0046D0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6655   0046D2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6656   0046D4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6657   0046D6  6C09               	negf	___aodiv@divisor^0,c
  6658   0046D8  0E00               	movlw	0
  6659   0046DA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6660   0046DC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6661   0046DE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6662   0046E0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6663   0046E2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6664   0046E4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6665   0046E6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6666   0046E8  0E01               	movlw	1
  6667   0046EA  6E12               	movwf	___aodiv@sign^0,c
  6668   0046EC                     l4149:
  6669   0046EC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6670   0046EE  EF7D  F023         	goto	u3520
  6671   0046F2  EF7B  F023         	goto	u3521
  6672   0046F6                     u3521:
  6673   0046F6  EF8F  F023         	goto	l4155
  6674   0046FA                     u3520:
  6675   0046FA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6676   0046FC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6677   0046FE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6678   004700  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6679   004702  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6680   004704  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6681   004706  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6682   004708  6C01               	negf	___aodiv@dividend^0,c
  6683   00470A  0E00               	movlw	0
  6684   00470C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6685   00470E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6686   004710  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6687   004712  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6688   004714  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6689   004716  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6690   004718  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6691   00471A  0E01               	movlw	1
  6692   00471C  1A12               	xorwf	___aodiv@sign^0,f,c
  6693   00471E                     l4155:
  6694   00471E  EE20  F013         	lfsr	2,___aodiv@quotient
  6695   004722  0E07               	movlw	7
  6696   004724                     u3531:
  6697   004724  6ADE               	clrf	postinc2,c
  6698   004726  06E8               	decf	wreg,f,c
  6699   004728  E2FD               	bc	u3531
  6700   00472A  5009               	movf	___aodiv@divisor^0,w,c
  6701   00472C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6702   00472E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6703   004730  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6704   004732  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6705   004734  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6706   004736  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6707   004738  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6708   00473A  B4D8               	btfsc	status,2,c
  6709   00473C  EFA2  F023         	goto	u3541
  6710   004740  EFA4  F023         	goto	u3540
  6711   004744                     u3541:
  6712   004744  EFF6  F023         	goto	l4177
  6713   004748                     u3540:
  6714   004748  0E01               	movlw	1
  6715   00474A  6E11               	movwf	___aodiv@counter^0,c
  6716   00474C  EFB2  F023         	goto	l4163
  6717   004750                     l4161:
  6718   004750  90D8               	bcf	status,0,c
  6719   004752  3609               	rlcf	___aodiv@divisor^0,f,c
  6720   004754  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6721   004756  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6722   004758  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6723   00475A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6724   00475C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6725   00475E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6726   004760  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6727   004762  2A11               	incf	___aodiv@counter^0,f,c
  6728   004764                     l4163:
  6729   004764  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6730   004766  EFB7  F023         	goto	u3551
  6731   00476A  EFB9  F023         	goto	u3550
  6732   00476E                     u3551:
  6733   00476E  EFA8  F023         	goto	l4161
  6734   004772                     u3550:
  6735   004772                     l4165:
  6736   004772  90D8               	bcf	status,0,c
  6737   004774  3613               	rlcf	___aodiv@quotient^0,f,c
  6738   004776  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6739   004778  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6740   00477A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6741   00477C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6742   00477E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6743   004780  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6744   004782  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6745   004784  5009               	movf	___aodiv@divisor^0,w,c
  6746   004786  5C01               	subwf	___aodiv@dividend^0,w,c
  6747   004788  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6748   00478A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6749   00478C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6750   00478E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6751   004790  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6752   004792  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6753   004794  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6754   004796  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6755   004798  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6756   00479A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6757   00479C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6758   00479E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6759   0047A0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6760   0047A2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6761   0047A4  A0D8               	btfss	status,0,c
  6762   0047A6  EFD7  F023         	goto	u3561
  6763   0047AA  EFD9  F023         	goto	u3560
  6764   0047AE                     u3561:
  6765   0047AE  EFEA  F023         	goto	l4173
  6766   0047B2                     u3560:
  6767   0047B2  5009               	movf	___aodiv@divisor^0,w,c
  6768   0047B4  5E01               	subwf	___aodiv@dividend^0,f,c
  6769   0047B6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6770   0047B8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6771   0047BA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6772   0047BC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6773   0047BE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6774   0047C0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6775   0047C2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6776   0047C4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6777   0047C6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6778   0047C8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6779   0047CA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6780   0047CC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6781   0047CE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6782   0047D0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6783   0047D2  8013               	bsf	___aodiv@quotient^0,0,c
  6784   0047D4                     l4173:
  6785   0047D4  90D8               	bcf	status,0,c
  6786   0047D6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6787   0047D8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6788   0047DA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6789   0047DC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6790   0047DE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6791   0047E0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6792   0047E2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6793   0047E4  3209               	rrcf	___aodiv@divisor^0,f,c
  6794   0047E6  2E11               	decfsz	___aodiv@counter^0,f,c
  6795   0047E8  EFB9  F023         	goto	l4165
  6796   0047EC                     l4177:
  6797   0047EC  5012               	movf	___aodiv@sign^0,w,c
  6798   0047EE  B4D8               	btfsc	status,2,c
  6799   0047F0  EFFC  F023         	goto	u3571
  6800   0047F4  EFFE  F023         	goto	u3570
  6801   0047F8                     u3571:
  6802   0047F8  EF0E  F024         	goto	l4181
  6803   0047FC                     u3570:
  6804   0047FC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6805   0047FE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6806   004800  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6807   004802  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6808   004804  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6809   004806  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6810   004808  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6811   00480A  6C13               	negf	___aodiv@quotient^0,c
  6812   00480C  0E00               	movlw	0
  6813   00480E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6814   004810  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6815   004812  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6816   004814  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6817   004816  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6818   004818  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6819   00481A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6820   00481C                     l4181:
  6821   00481C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6822   004820  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6823   004824  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6824   004828  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6825   00482C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6826   004830  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6827   004834  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6828   004838  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6829   00483C  0012               	return		;funcret
  6830   00483E                     __end_of___aodiv:
  6831                           	callstack 0
  6832                           
  6833 ;; *************** function _sendStringSerial4 *****************
  6834 ;; Defined at:
  6835 ;;		line 33 in file "serial.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  string          2    1[COMRAM] PTR unsigned char 
  6838 ;;		 -> main@buf(100), 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;Total ram usage:        2 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 1
  6857 ;; This function calls:
  6858 ;;		_sendCharSerial4
  6859 ;; This function is called by:
  6860 ;;		_main
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text21
  6865   00604C                     __ptext21:
  6866                           	callstack 0
  6867   00604C                     _sendStringSerial4:
  6868                           	callstack 29
  6869   00604C                     
  6870                           ;serial.c: 34:     while (*string!=0){
  6871   00604C  EF31  F030         	goto	l5557
  6872   006050                     l5553:
  6873                           
  6874                           ;serial.c: 35:         sendCharSerial4(*string++);
  6875   006050  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6876   006054  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6877   006058  50DF               	movf	indf2,w,c
  6878   00605A  ECBC  F030         	call	_sendCharSerial4
  6879   00605E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6880   006060  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6881   006062                     l5557:
  6882                           
  6883                           ;serial.c: 34:     while (*string!=0){
  6884   006062  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6885   006066  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6886   00606A  50DF               	movf	indf2,w,c
  6887   00606C  A4D8               	btfss	status,2,c
  6888   00606E  EF3B  F030         	goto	u5541
  6889   006072  EF3D  F030         	goto	u5540
  6890   006076                     u5541:
  6891   006076  EF28  F030         	goto	l5553
  6892   00607A                     u5540:
  6893   00607A  0012               	return		;funcret
  6894   00607C                     __end_of_sendStringSerial4:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function _sendCharSerial4 *****************
  6898 ;; Defined at:
  6899 ;;		line 26 in file "serial.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  charToSend      1    wreg     unsigned char 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  charToSend      1    0[COMRAM] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      void 
  6906 ;; Registers used:
  6907 ;;		wreg
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;Total ram usage:        1 bytes
  6918 ;; Hardware stack levels used: 1
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_sendStringSerial4
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text22
  6927   006178                     __ptext22:
  6928                           	callstack 0
  6929   006178                     _sendCharSerial4:
  6930                           	callstack 29
  6931                           
  6932                           ;incstack = 0
  6933                           ;sendCharSerial4@charToSend stored from wreg
  6934   006178  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6935   00617A                     l209:
  6936   00617A  010E               	movlb	14	; () banked
  6937   00617C  A537               	btfss	55,2,b	;volatile
  6938   00617E  EFC3  F030         	goto	u5071
  6939   006182  EFC5  F030         	goto	u5070
  6940   006186                     u5071:
  6941   006186  EFBD  F030         	goto	l209
  6942   00618A                     u5070:
  6943   00618A                     
  6944                           ; BSR set to: 14
  6945                           ;serial.c: 28:     TX4REG = charToSend;
  6946   00618A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6947   00618E                     
  6948                           ; BSR set to: 14
  6949   00618E  0012               	return		;funcret
  6950   006190                     __end_of_sendCharSerial4:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _readColours *****************
  6954 ;; Defined at:
  6955 ;;		line 105 in file "color.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  vals            2   11[COMRAM] PTR struct RGB
  6958 ;;		 -> vals(8), 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6974 ;;Total ram usage:        2 bytes
  6975 ;; Hardware stack levels used: 1
  6976 ;; Hardware stack levels required when called: 3
  6977 ;; This function calls:
  6978 ;;		_color_read_Blue
  6979 ;;		_color_read_Green
  6980 ;;		_color_read_Red
  6981 ;;		_color_read_lum
  6982 ;; This function is called by:
  6983 ;;		_main
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text23
  6988   00575A                     __ptext23:
  6989                           	callstack 0
  6990   00575A                     _readColours:
  6991                           	callstack 27
  6992   00575A                     
  6993                           ;color.c: 107:     vals ->R = color_read_Red();
  6994   00575A  EC01  F02E         	call	_color_read_Red	;wreg free
  6995   00575E  C00C  FFD9         	movff	readColours@vals,fsr2l
  6996   005762  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6997   005766  C005  FFDE         	movff	?_color_read_Red,postinc2
  6998   00576A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6999                           
  7000                           ;color.c: 108:     vals ->B = color_read_Blue();
  7001   00576E  EC51  F02E         	call	_color_read_Blue	;wreg free
  7002   005772  EE20 F004          	lfsr	2,4
  7003   005776  500C               	movf	readColours@vals^0,w,c
  7004   005778  26D9               	addwf	fsr2l,f,c
  7005   00577A  500D               	movf	(readColours@vals+1)^0,w,c
  7006   00577C  22DA               	addwfc	fsr2h,f,c
  7007   00577E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7008   005782  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7009                           
  7010                           ;color.c: 109:     vals ->G = color_read_Green();
  7011   005786  EC29  F02E         	call	_color_read_Green	;wreg free
  7012   00578A  EE20 F002          	lfsr	2,2
  7013   00578E  500C               	movf	readColours@vals^0,w,c
  7014   005790  26D9               	addwf	fsr2l,f,c
  7015   005792  500D               	movf	(readColours@vals+1)^0,w,c
  7016   005794  22DA               	addwfc	fsr2h,f,c
  7017   005796  C005  FFDE         	movff	?_color_read_Green,postinc2
  7018   00579A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7019                           
  7020                           ;color.c: 110:     vals ->L = color_read_lum();
  7021   00579E  ECD9  F02D         	call	_color_read_lum	;wreg free
  7022   0057A2  EE20 F006          	lfsr	2,6
  7023   0057A6  500C               	movf	readColours@vals^0,w,c
  7024   0057A8  26D9               	addwf	fsr2l,f,c
  7025   0057AA  500D               	movf	(readColours@vals+1)^0,w,c
  7026   0057AC  22DA               	addwfc	fsr2h,f,c
  7027   0057AE  C005  FFDE         	movff	?_color_read_lum,postinc2
  7028   0057B2  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  7029   0057B6  0012               	return		;funcret
  7030   0057B8                     __end_of_readColours:
  7031                           	callstack 0
  7032                           
  7033 ;; *************** function _color_read_lum *****************
  7034 ;; Defined at:
  7035 ;;		line 49 in file "color.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  tmp             2    9[COMRAM] unsigned int 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  2    4[COMRAM] unsigned int 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2, status,0, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7053 ;;Total ram usage:        7 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 2
  7056 ;; This function calls:
  7057 ;;		_I2C_2_Master_Read
  7058 ;;		_I2C_2_Master_RepStart
  7059 ;;		_I2C_2_Master_Start
  7060 ;;		_I2C_2_Master_Stop
  7061 ;;		_I2C_2_Master_Write
  7062 ;; This function is called by:
  7063 ;;		_readColours
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text24
  7068   005BB2                     __ptext24:
  7069                           	callstack 0
  7070   005BB2                     _color_read_lum:
  7071                           	callstack 27
  7072   005BB2                     
  7073                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  7074   005BB2  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  7075                           
  7076                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  7077   005BB6  0E52               	movlw	82
  7078   005BB8  ECC8  F030         	call	_I2C_2_Master_Write
  7079                           
  7080                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  7081   005BBC  0EB4               	movlw	180
  7082   005BBE  ECC8  F030         	call	_I2C_2_Master_Write
  7083                           
  7084                           ;color.c: 55:  I2C_2_Master_RepStart();
  7085   005BC2  ECCE  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7086                           
  7087                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  7088   005BC6  0E53               	movlw	83
  7089   005BC8  ECC8  F030         	call	_I2C_2_Master_Write
  7090                           
  7091                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  7092   005BCC  0E01               	movlw	1
  7093   005BCE  EC54  F02F         	call	_I2C_2_Master_Read
  7094   005BD2  6E07               	movwf	??_color_read_lum^0,c
  7095   005BD4  5007               	movf	??_color_read_lum^0,w,c
  7096   005BD6  6E0A               	movwf	color_read_lum@tmp^0,c
  7097   005BD8  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  7098                           
  7099                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7100   005BDA  0E00               	movlw	0
  7101   005BDC  EC54  F02F         	call	_I2C_2_Master_Read
  7102   005BE0  6E07               	movwf	??_color_read_lum^0,c
  7103   005BE2  5007               	movf	??_color_read_lum^0,w,c
  7104   005BE4  6E09               	movwf	(??_color_read_lum+2)^0,c
  7105   005BE6  6A08               	clrf	(??_color_read_lum+1)^0,c
  7106   005BE8  500A               	movf	color_read_lum@tmp^0,w,c
  7107   005BEA  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  7108   005BEC  6E0A               	movwf	color_read_lum@tmp^0,c
  7109   005BEE  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  7110   005BF0  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  7111   005BF2  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  7112                           
  7113                           ;color.c: 59:  I2C_2_Master_Stop();
  7114   005BF4  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  7115   005BF8                     
  7116                           ;color.c: 60:  return tmp;
  7117   005BF8  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  7118   005BFC  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  7119   005C00  0012               	return		;funcret
  7120   005C02                     __end_of_color_read_lum:
  7121                           	callstack 0
  7122                           
  7123 ;; *************** function _color_read_Red *****************
  7124 ;; Defined at:
  7125 ;;		line 63 in file "color.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  tmp             2    9[COMRAM] unsigned int 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  2    4[COMRAM] unsigned int 
  7132 ;; Registers used:
  7133 ;;		wreg, status,2, status,0, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7141 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7142 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7143 ;;Total ram usage:        7 bytes
  7144 ;; Hardware stack levels used: 1
  7145 ;; Hardware stack levels required when called: 2
  7146 ;; This function calls:
  7147 ;;		_I2C_2_Master_Read
  7148 ;;		_I2C_2_Master_RepStart
  7149 ;;		_I2C_2_Master_Start
  7150 ;;		_I2C_2_Master_Stop
  7151 ;;		_I2C_2_Master_Write
  7152 ;; This function is called by:
  7153 ;;		_readColours
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text25
  7158   005C02                     __ptext25:
  7159                           	callstack 0
  7160   005C02                     _color_read_Red:
  7161                           	callstack 27
  7162   005C02                     
  7163                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7164   005C02  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  7165                           
  7166                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7167   005C06  0E52               	movlw	82
  7168   005C08  ECC8  F030         	call	_I2C_2_Master_Write
  7169                           
  7170                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7171   005C0C  0EB6               	movlw	182
  7172   005C0E  ECC8  F030         	call	_I2C_2_Master_Write
  7173                           
  7174                           ;color.c: 69:  I2C_2_Master_RepStart();
  7175   005C12  ECCE  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7176                           
  7177                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7178   005C16  0E53               	movlw	83
  7179   005C18  ECC8  F030         	call	_I2C_2_Master_Write
  7180                           
  7181                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7182   005C1C  0E01               	movlw	1
  7183   005C1E  EC54  F02F         	call	_I2C_2_Master_Read
  7184   005C22  6E07               	movwf	??_color_read_Red^0,c
  7185   005C24  5007               	movf	??_color_read_Red^0,w,c
  7186   005C26  6E0A               	movwf	color_read_Red@tmp^0,c
  7187   005C28  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7188                           
  7189                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7190   005C2A  0E00               	movlw	0
  7191   005C2C  EC54  F02F         	call	_I2C_2_Master_Read
  7192   005C30  6E07               	movwf	??_color_read_Red^0,c
  7193   005C32  5007               	movf	??_color_read_Red^0,w,c
  7194   005C34  6E09               	movwf	(??_color_read_Red+2)^0,c
  7195   005C36  6A08               	clrf	(??_color_read_Red+1)^0,c
  7196   005C38  500A               	movf	color_read_Red@tmp^0,w,c
  7197   005C3A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7198   005C3C  6E0A               	movwf	color_read_Red@tmp^0,c
  7199   005C3E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7200   005C40  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7201   005C42  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7202                           
  7203                           ;color.c: 73:  I2C_2_Master_Stop();
  7204   005C44  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  7205   005C48                     
  7206                           ;color.c: 74:  return tmp;
  7207   005C48  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7208   005C4C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7209   005C50  0012               	return		;funcret
  7210   005C52                     __end_of_color_read_Red:
  7211                           	callstack 0
  7212                           
  7213 ;; *************** function _color_read_Green *****************
  7214 ;; Defined at:
  7215 ;;		line 76 in file "color.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;		None
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  tmp             2    9[COMRAM] unsigned int 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  2    4[COMRAM] unsigned int 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;Total ram usage:        7 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 2
  7236 ;; This function calls:
  7237 ;;		_I2C_2_Master_Read
  7238 ;;		_I2C_2_Master_RepStart
  7239 ;;		_I2C_2_Master_Start
  7240 ;;		_I2C_2_Master_Stop
  7241 ;;		_I2C_2_Master_Write
  7242 ;; This function is called by:
  7243 ;;		_readColours
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text26
  7248   005C52                     __ptext26:
  7249                           	callstack 0
  7250   005C52                     _color_read_Green:
  7251                           	callstack 27
  7252   005C52                     
  7253                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7254   005C52  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  7255                           
  7256                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7257   005C56  0E52               	movlw	82
  7258   005C58  ECC8  F030         	call	_I2C_2_Master_Write
  7259                           
  7260                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7261   005C5C  0EB8               	movlw	184
  7262   005C5E  ECC8  F030         	call	_I2C_2_Master_Write
  7263                           
  7264                           ;color.c: 82:  I2C_2_Master_RepStart();
  7265   005C62  ECCE  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7266                           
  7267                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7268   005C66  0E53               	movlw	83
  7269   005C68  ECC8  F030         	call	_I2C_2_Master_Write
  7270                           
  7271                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7272   005C6C  0E01               	movlw	1
  7273   005C6E  EC54  F02F         	call	_I2C_2_Master_Read
  7274   005C72  6E07               	movwf	??_color_read_Green^0,c
  7275   005C74  5007               	movf	??_color_read_Green^0,w,c
  7276   005C76  6E0A               	movwf	color_read_Green@tmp^0,c
  7277   005C78  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7278                           
  7279                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7280   005C7A  0E00               	movlw	0
  7281   005C7C  EC54  F02F         	call	_I2C_2_Master_Read
  7282   005C80  6E07               	movwf	??_color_read_Green^0,c
  7283   005C82  5007               	movf	??_color_read_Green^0,w,c
  7284   005C84  6E09               	movwf	(??_color_read_Green+2)^0,c
  7285   005C86  6A08               	clrf	(??_color_read_Green+1)^0,c
  7286   005C88  500A               	movf	color_read_Green@tmp^0,w,c
  7287   005C8A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7288   005C8C  6E0A               	movwf	color_read_Green@tmp^0,c
  7289   005C8E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7290   005C90  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7291   005C92  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7292                           
  7293                           ;color.c: 86:  I2C_2_Master_Stop();
  7294   005C94  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  7295   005C98                     
  7296                           ;color.c: 87:  return tmp;
  7297   005C98  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7298   005C9C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7299   005CA0  0012               	return		;funcret
  7300   005CA2                     __end_of_color_read_Green:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function _color_read_Blue *****************
  7304 ;; Defined at:
  7305 ;;		line 90 in file "color.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  tmp             2    9[COMRAM] unsigned int 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  2    4[COMRAM] unsigned int 
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0, cstack
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;Total ram usage:        7 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; Hardware stack levels required when called: 2
  7326 ;; This function calls:
  7327 ;;		_I2C_2_Master_Read
  7328 ;;		_I2C_2_Master_RepStart
  7329 ;;		_I2C_2_Master_Start
  7330 ;;		_I2C_2_Master_Stop
  7331 ;;		_I2C_2_Master_Write
  7332 ;; This function is called by:
  7333 ;;		_readColours
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text27
  7338   005CA2                     __ptext27:
  7339                           	callstack 0
  7340   005CA2                     _color_read_Blue:
  7341                           	callstack 27
  7342   005CA2                     
  7343                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7344   005CA2  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  7345                           
  7346                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7347   005CA6  0E52               	movlw	82
  7348   005CA8  ECC8  F030         	call	_I2C_2_Master_Write
  7349                           
  7350                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7351   005CAC  0EBA               	movlw	186
  7352   005CAE  ECC8  F030         	call	_I2C_2_Master_Write
  7353                           
  7354                           ;color.c: 96:  I2C_2_Master_RepStart();
  7355   005CB2  ECCE  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7356                           
  7357                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7358   005CB6  0E53               	movlw	83
  7359   005CB8  ECC8  F030         	call	_I2C_2_Master_Write
  7360                           
  7361                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7362   005CBC  0E01               	movlw	1
  7363   005CBE  EC54  F02F         	call	_I2C_2_Master_Read
  7364   005CC2  6E07               	movwf	??_color_read_Blue^0,c
  7365   005CC4  5007               	movf	??_color_read_Blue^0,w,c
  7366   005CC6  6E0A               	movwf	color_read_Blue@tmp^0,c
  7367   005CC8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7368                           
  7369                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7370   005CCA  0E00               	movlw	0
  7371   005CCC  EC54  F02F         	call	_I2C_2_Master_Read
  7372   005CD0  6E07               	movwf	??_color_read_Blue^0,c
  7373   005CD2  5007               	movf	??_color_read_Blue^0,w,c
  7374   005CD4  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7375   005CD6  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7376   005CD8  500A               	movf	color_read_Blue@tmp^0,w,c
  7377   005CDA  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7378   005CDC  6E0A               	movwf	color_read_Blue@tmp^0,c
  7379   005CDE  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7380   005CE0  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7381   005CE2  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7382                           
  7383                           ;color.c: 100:  I2C_2_Master_Stop();
  7384   005CE4  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  7385   005CE8                     
  7386                           ;color.c: 101:  return tmp;
  7387   005CE8  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7388   005CEC  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7389   005CF0  0012               	return		;funcret
  7390   005CF2                     __end_of_color_read_Blue:
  7391                           	callstack 0
  7392                           
  7393 ;; *************** function _I2C_2_Master_RepStart *****************
  7394 ;; Defined at:
  7395 ;;		line 33 in file "i2c.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;		None
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;Total ram usage:        0 bytes
  7414 ;; Hardware stack levels used: 1
  7415 ;; Hardware stack levels required when called: 1
  7416 ;; This function calls:
  7417 ;;		_I2C_2_Master_Idle
  7418 ;; This function is called by:
  7419 ;;		_color_read_lum
  7420 ;;		_color_read_Red
  7421 ;;		_color_read_Green
  7422 ;;		_color_read_Blue
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text28
  7427   00619C                     __ptext28:
  7428                           	callstack 0
  7429   00619C                     _I2C_2_Master_RepStart:
  7430                           	callstack 27
  7431   00619C                     
  7432                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7433   00619C  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  7434   0061A0                     
  7435                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7436   0061A0  010E               	movlb	14	; () banked
  7437   0061A2  83DA               	bsf	218,1,b	;volatile
  7438   0061A4                     
  7439                           ; BSR set to: 14
  7440   0061A4  0012               	return		;funcret
  7441   0061A6                     __end_of_I2C_2_Master_RepStart:
  7442                           	callstack 0
  7443                           
  7444 ;; *************** function _I2C_2_Master_Read *****************
  7445 ;; Defined at:
  7446 ;;		line 51 in file "i2c.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  ack             1    wreg     unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  ack             1    2[COMRAM] unsigned char 
  7451 ;;  tmp             1    3[COMRAM] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      unsigned char 
  7454 ;; Registers used:
  7455 ;;		wreg, status,2, status,0, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;Total ram usage:        3 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; Hardware stack levels required when called: 1
  7468 ;; This function calls:
  7469 ;;		_I2C_2_Master_Idle
  7470 ;; This function is called by:
  7471 ;;		_color_read_lum
  7472 ;;		_color_read_Red
  7473 ;;		_color_read_Green
  7474 ;;		_color_read_Blue
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text29
  7479   005EA8                     __ptext29:
  7480                           	callstack 0
  7481   005EA8                     _I2C_2_Master_Read:
  7482                           	callstack 27
  7483                           
  7484                           ; BSR set to: 14
  7485                           ;incstack = 0
  7486                           ;I2C_2_Master_Read@ack stored from wreg
  7487   005EA8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7488   005EAA                     
  7489                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7490   005EAA  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  7491   005EAE                     
  7492                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7493   005EAE  010E               	movlb	14	; () banked
  7494   005EB0  87DA               	bsf	218,3,b	;volatile
  7495                           
  7496                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7497   005EB2  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  7498   005EB6                     
  7499                           ;i2c.c: 57:   tmp = SSP2BUF;
  7500   005EB6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7501                           
  7502                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7503   005EBA  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  7504   005EBE                     
  7505                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7506   005EBE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7507   005EC0  B4D8               	btfsc	status,2,c
  7508   005EC2  EF65  F02F         	goto	u5001
  7509   005EC6  EF69  F02F         	goto	u5000
  7510   005ECA                     u5001:
  7511   005ECA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7512   005ECC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7513   005ECE  EF6A  F02F         	goto	u5018
  7514   005ED2                     u5000:
  7515   005ED2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7516   005ED4                     u5018:
  7517   005ED4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7518   005ED6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7519   005ED8  010E               	movlb	14	; () banked
  7520   005EDA  51DA               	movf	218,w,b	;volatile
  7521   005EDC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7522   005EDE  0BDF               	andlw	-33
  7523   005EE0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7524   005EE2  6FDA               	movwf	218,b	;volatile
  7525   005EE4                     
  7526                           ; BSR set to: 14
  7527                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7528   005EE4  89DA               	bsf	218,4,b	;volatile
  7529   005EE6                     
  7530                           ; BSR set to: 14
  7531                           ;i2c.c: 61:   return tmp;
  7532   005EE6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7533   005EE8                     
  7534                           ; BSR set to: 14
  7535   005EE8  0012               	return		;funcret
  7536   005EEA                     __end_of_I2C_2_Master_Read:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function _initUSART4 *****************
  7540 ;; Defined at:
  7541 ;;		line 4 in file "serial.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;		None
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7559 ;;Total ram usage:        0 bytes
  7560 ;; Hardware stack levels used: 1
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		_main
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text30
  7569   00615A                     __ptext30:
  7570                           	callstack 0
  7571   00615A                     _initUSART4:
  7572                           	callstack 30
  7573   00615A                     
  7574                           ;serial.c: 5:     RC0PPS = 0x12;
  7575   00615A  0E12               	movlw	18
  7576   00615C  010E               	movlb	14	; () banked
  7577   00615E  6F62               	movwf	98,b	;volatile
  7578                           
  7579                           ;serial.c: 6:     RX4PPS = 0x11;
  7580   006160  0E11               	movlw	17
  7581   006162  6F15               	movwf	21,b	;volatile
  7582   006164                     
  7583                           ; BSR set to: 14
  7584                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7585   006164  97E9               	bcf	233,3,b	;volatile
  7586   006166                     
  7587                           ; BSR set to: 14
  7588                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7589   006166  95E8               	bcf	232,2,b	;volatile
  7590                           
  7591                           ;serial.c: 9:     SP4BRGL = 51;
  7592   006168  0E33               	movlw	51
  7593   00616A  6FE5               	movwf	229,b	;volatile
  7594                           
  7595                           ;serial.c: 10:     SP4BRGH = 0;
  7596   00616C  0E00               	movlw	0
  7597   00616E  6FE6               	movwf	230,b	;volatile
  7598   006170                     
  7599                           ; BSR set to: 14
  7600                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7601   006170  89E7               	bsf	231,4,b	;volatile
  7602   006172                     
  7603                           ; BSR set to: 14
  7604                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7605   006172  8BE8               	bsf	232,5,b	;volatile
  7606   006174                     
  7607                           ; BSR set to: 14
  7608                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7609   006174  8FE7               	bsf	231,7,b	;volatile
  7610   006176                     
  7611                           ; BSR set to: 14
  7612   006176  0012               	return		;funcret
  7613   006178                     __end_of_initUSART4:
  7614                           	callstack 0
  7615                           
  7616 ;; *************** function _initDCmotorsPWM *****************
  7617 ;; Defined at:
  7618 ;;		line 6 in file "dc_motor.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;Total ram usage:        2 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text31
  7646   005418                     __ptext31:
  7647                           	callstack 0
  7648   005418                     _initDCmotorsPWM:
  7649                           	callstack 30
  7650   005418                     
  7651                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7652   005418  0E05               	movlw	5
  7653   00541A  010E               	movlb	14	; () banked
  7654   00541C  6F74               	movwf	116,b	;volatile
  7655                           
  7656                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7657   00541E  0E06               	movlw	6
  7658   005420  6F76               	movwf	118,b	;volatile
  7659                           
  7660                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7661   005422  0E07               	movlw	7
  7662   005424  6F69               	movwf	105,b	;volatile
  7663                           
  7664                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7665   005426  0E08               	movlw	8
  7666   005428  6F88               	movwf	136,b	;volatile
  7667   00542A                     
  7668                           ; BSR set to: 14
  7669                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7670   00542A  9485               	bcf	133,2,c	;volatile
  7671   00542C                     
  7672                           ; BSR set to: 14
  7673                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7674   00542C  9885               	bcf	133,4,c	;volatile
  7675   00542E                     
  7676                           ; BSR set to: 14
  7677                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7678   00542E  9E83               	bcf	131,7,c	;volatile
  7679   005430                     
  7680                           ; BSR set to: 14
  7681                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7682   005430  9C87               	bcf	135,6,c	;volatile
  7683                           
  7684                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7685   005432  50BD               	movf	189,w,c	;volatile
  7686   005434  0B8F               	andlw	-113
  7687   005436  0930               	iorlw	48
  7688   005438  6EBD               	movwf	189,c	;volatile
  7689                           
  7690                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7691   00543A  0EE0               	movlw	-32
  7692   00543C  16BE               	andwf	190,f,c	;volatile
  7693                           
  7694                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7695   00543E  50BF               	movf	191,w,c	;volatile
  7696   005440  0BF0               	andlw	-16
  7697   005442  0901               	iorlw	1
  7698   005444  6EBF               	movwf	191,c	;volatile
  7699   005446                     
  7700                           ; BSR set to: 14
  7701                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7702   005446  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7703   00544A                     
  7704                           ; BSR set to: 14
  7705                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7706   00544A  8EBD               	bsf	189,7,c	;volatile
  7707                           
  7708                           ;dc_motor.c: 34:     CCPR1H=0;
  7709   00544C  0E00               	movlw	0
  7710   00544E  6EAA               	movwf	170,c	;volatile
  7711                           
  7712                           ;dc_motor.c: 35:     CCPR2H=0;
  7713   005450  0E00               	movlw	0
  7714   005452  6EA6               	movwf	166,c	;volatile
  7715                           
  7716                           ;dc_motor.c: 36:     CCPR3H=0;
  7717   005454  0E00               	movlw	0
  7718   005456  010F               	movlb	15	; () banked
  7719   005458  6F25               	movwf	37,b	;volatile
  7720                           
  7721                           ;dc_motor.c: 37:     CCPR4H=0;
  7722   00545A  0E00               	movlw	0
  7723   00545C  6F21               	movwf	33,b	;volatile
  7724                           
  7725                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7726   00545E  0EFC               	movlw	-4
  7727   005460  16AD               	andwf	173,f,c	;volatile
  7728                           
  7729                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7730   005462  0EF3               	movlw	-13
  7731   005464  16AD               	andwf	173,f,c	;volatile
  7732                           
  7733                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7734   005466  0ECF               	movlw	-49
  7735   005468  16AD               	andwf	173,f,c	;volatile
  7736                           
  7737                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7738   00546A  0E3F               	movlw	-193
  7739   00546C  16AD               	andwf	173,f,c	;volatile
  7740   00546E                     
  7741                           ; BSR set to: 15
  7742                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7743   00546E  88AB               	bsf	171,4,c	;volatile
  7744                           
  7745                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7746   005470  50AB               	movf	171,w,c	;volatile
  7747   005472  0BF0               	andlw	-16
  7748   005474  090C               	iorlw	12
  7749   005476  6EAB               	movwf	171,c	;volatile
  7750   005478                     
  7751                           ; BSR set to: 15
  7752                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7753   005478  8EAB               	bsf	171,7,c	;volatile
  7754   00547A                     
  7755                           ; BSR set to: 15
  7756                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7757   00547A  88A7               	bsf	167,4,c	;volatile
  7758                           
  7759                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7760   00547C  50A7               	movf	167,w,c	;volatile
  7761   00547E  0BF0               	andlw	-16
  7762   005480  090C               	iorlw	12
  7763   005482  6EA7               	movwf	167,c	;volatile
  7764   005484                     
  7765                           ; BSR set to: 15
  7766                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7767   005484  8EA7               	bsf	167,7,c	;volatile
  7768   005486                     
  7769                           ; BSR set to: 15
  7770                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7771   005486  8926               	bsf	38,4,b	;volatile
  7772                           
  7773                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7774   005488  5126               	movf	38,w,b	;volatile
  7775   00548A  0BF0               	andlw	-16
  7776   00548C  090C               	iorlw	12
  7777   00548E  6F26               	movwf	38,b	;volatile
  7778   005490                     
  7779                           ; BSR set to: 15
  7780                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7781   005490  8F26               	bsf	38,7,b	;volatile
  7782   005492                     
  7783                           ; BSR set to: 15
  7784                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7785   005492  8922               	bsf	34,4,b	;volatile
  7786                           
  7787                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7788   005494  5122               	movf	34,w,b	;volatile
  7789   005496  0BF0               	andlw	-16
  7790   005498  090C               	iorlw	12
  7791   00549A  6F22               	movwf	34,b	;volatile
  7792   00549C                     
  7793                           ; BSR set to: 15
  7794                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7795   00549C  8F22               	bsf	34,7,b	;volatile
  7796   00549E                     
  7797                           ; BSR set to: 15
  7798   00549E  0012               	return		;funcret
  7799   0054A0                     __end_of_initDCmotorsPWM:
  7800                           	callstack 0
  7801                           
  7802 ;; *************** function _go_Home *****************
  7803 ;; Defined at:
  7804 ;;		line 4 in file "Memory.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7807 ;;		 -> WayBack(50), 
  7808 ;;  Time_forward    2   37[COMRAM] PTR int 
  7809 ;;		 -> Time_forward(100), 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  i               2   42[COMRAM] int 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7825 ;;Total ram usage:        9 bytes
  7826 ;; Hardware stack levels used: 1
  7827 ;; Hardware stack levels required when called: 5
  7828 ;; This function calls:
  7829 ;;		_BlueMove
  7830 ;;		_GreenMove
  7831 ;;		_LightBlueMove
  7832 ;;		_OrangeMove
  7833 ;;		_RedMove
  7834 ;;		_ReversePink
  7835 ;;		_ReverseYellow
  7836 ;;		_reverseDetect
  7837 ;;		_timed_forward
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text32
  7844   003BE6                     __ptext32:
  7845                           	callstack 0
  7846   003BE6                     _go_Home:
  7847                           	callstack 25
  7848   003BE6                     
  7849                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  7850   003BE6  C17E  F02B         	movff	_move_count,go_Home@i	;volatile
  7851   003BEA  C17F  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7852   003BEE                     l5689:
  7853   003BEE  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7854   003BF0  EFFE  F01D         	goto	u5680
  7855   003BF4  EFFC  F01D         	goto	u5681
  7856   003BF8                     u5681:
  7857   003BF8  EF00  F01E         	goto	l5693
  7858   003BFC                     u5680:
  7859   003BFC  EF48  F01F         	goto	l661
  7860   003C00                     l5693:
  7861                           
  7862                           ;Memory.c: 7:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7863   003C00  0EC7               	movlw	low _motorL
  7864   003C02  6E14               	movwf	timed_forward@mL^0,c
  7865   003C04  0E01               	movlw	high _motorL
  7866   003C06  6E15               	movwf	(timed_forward@mL+1)^0,c
  7867   003C08  0EBE               	movlw	low _motorR
  7868   003C0A  6E16               	movwf	timed_forward@mR^0,c
  7869   003C0C  0E01               	movlw	high _motorR
  7870   003C0E  6E17               	movwf	(timed_forward@mR+1)^0,c
  7871   003C10  90D8               	bcf	status,0,c
  7872   003C12  342B               	rlcf	go_Home@i^0,w,c
  7873   003C14  6ED9               	movwf	fsr2l,c
  7874   003C16  342C               	rlcf	(go_Home@i+1)^0,w,c
  7875   003C18  6EDA               	movwf	fsr2h,c
  7876   003C1A  5026               	movf	go_Home@Time_forward^0,w,c
  7877   003C1C  26D9               	addwf	fsr2l,f,c
  7878   003C1E  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7879   003C20  22DA               	addwfc	fsr2h,f,c
  7880   003C22  CFDE F018          	movff	postinc2,timed_forward@time
  7881   003C26  CFDD F019          	movff	postdec2,timed_forward@time+1
  7882   003C2A  EC26  F028         	call	_timed_forward	;wreg free
  7883   003C2E                     
  7884                           ;Memory.c: 12:         if (WayBack[i-1]==1){
  7885   003C2E  502B               	movf	go_Home@i^0,w,c
  7886   003C30  2424               	addwf	go_Home@WayBack^0,w,c
  7887   003C32  6E28               	movwf	??_go_Home^0,c
  7888   003C34  502C               	movf	(go_Home@i+1)^0,w,c
  7889   003C36  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7890   003C38  6E29               	movwf	(??_go_Home+1)^0,c
  7891   003C3A  0EFF               	movlw	255
  7892   003C3C  2428               	addwf	??_go_Home^0,w,c
  7893   003C3E  6ED9               	movwf	fsr2l,c
  7894   003C40  0EFF               	movlw	255
  7895   003C42  2029               	addwfc	(??_go_Home+1)^0,w,c
  7896   003C44  6EDA               	movwf	fsr2h,c
  7897   003C46  04DE               	decf	postinc2,w,c
  7898   003C48  A4D8               	btfss	status,2,c
  7899   003C4A  EF29  F01E         	goto	u5691
  7900   003C4E  EF2B  F01E         	goto	u5690
  7901   003C52                     u5691:
  7902   003C52  EF41  F01E         	goto	l5699
  7903   003C56                     u5690:
  7904   003C56                     
  7905                           ;Memory.c: 13:             reverseDetect(&motorL, &motorR);
  7906   003C56  0EC7               	movlw	low _motorL
  7907   003C58  6E1A               	movwf	reverseDetect@mL^0,c
  7908   003C5A  0E01               	movlw	high _motorL
  7909   003C5C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7910   003C5E  0EBE               	movlw	low _motorR
  7911   003C60  6E1C               	movwf	reverseDetect@mR^0,c
  7912   003C62  0E01               	movlw	high _motorR
  7913   003C64  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7914   003C66  EC36  F02C         	call	_reverseDetect	;wreg free
  7915                           
  7916                           ;Memory.c: 14:             GreenMove(&motorL, &motorR);
  7917   003C6A  0EC7               	movlw	low _motorL
  7918   003C6C  6E20               	movwf	GreenMove@mL^0,c
  7919   003C6E  0E01               	movlw	high _motorL
  7920   003C70  6E21               	movwf	(GreenMove@mL+1)^0,c
  7921   003C72  0EBE               	movlw	low _motorR
  7922   003C74  6E22               	movwf	GreenMove@mR^0,c
  7923   003C76  0E01               	movlw	high _motorR
  7924   003C78  6E23               	movwf	(GreenMove@mR+1)^0,c
  7925   003C7A  ECB4  F02F         	call	_GreenMove	;wreg free
  7926                           
  7927                           ;Memory.c: 15:         }
  7928   003C7E  EF43  F01F         	goto	l5723
  7929   003C82                     l5699:
  7930   003C82  502B               	movf	go_Home@i^0,w,c
  7931   003C84  2424               	addwf	go_Home@WayBack^0,w,c
  7932   003C86  6E28               	movwf	??_go_Home^0,c
  7933   003C88  502C               	movf	(go_Home@i+1)^0,w,c
  7934   003C8A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7935   003C8C  6E29               	movwf	(??_go_Home+1)^0,c
  7936   003C8E  0EFF               	movlw	255
  7937   003C90  2428               	addwf	??_go_Home^0,w,c
  7938   003C92  6ED9               	movwf	fsr2l,c
  7939   003C94  0EFF               	movlw	255
  7940   003C96  2029               	addwfc	(??_go_Home+1)^0,w,c
  7941   003C98  6EDA               	movwf	fsr2h,c
  7942   003C9A  0E02               	movlw	2
  7943   003C9C  18DE               	xorwf	postinc2,w,c
  7944   003C9E  A4D8               	btfss	status,2,c
  7945   003CA0  EF54  F01E         	goto	u5701
  7946   003CA4  EF56  F01E         	goto	u5700
  7947   003CA8                     u5701:
  7948   003CA8  EF6C  F01E         	goto	l5703
  7949   003CAC                     u5700:
  7950   003CAC                     
  7951                           ;Memory.c: 17:             reverseDetect(&motorL, &motorR);
  7952   003CAC  0EC7               	movlw	low _motorL
  7953   003CAE  6E1A               	movwf	reverseDetect@mL^0,c
  7954   003CB0  0E01               	movlw	high _motorL
  7955   003CB2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7956   003CB4  0EBE               	movlw	low _motorR
  7957   003CB6  6E1C               	movwf	reverseDetect@mR^0,c
  7958   003CB8  0E01               	movlw	high _motorR
  7959   003CBA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7960   003CBC  EC36  F02C         	call	_reverseDetect	;wreg free
  7961                           
  7962                           ;Memory.c: 18:             LightBlueMove(&motorL, &motorR);
  7963   003CC0  0EC7               	movlw	low _motorL
  7964   003CC2  6E20               	movwf	LightBlueMove@mL^0,c
  7965   003CC4  0E01               	movlw	high _motorL
  7966   003CC6  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7967   003CC8  0EBE               	movlw	low _motorR
  7968   003CCA  6E22               	movwf	LightBlueMove@mR^0,c
  7969   003CCC  0E01               	movlw	high _motorR
  7970   003CCE  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7971   003CD0  EC0D  F02D         	call	_LightBlueMove	;wreg free
  7972                           
  7973                           ;Memory.c: 19:         }
  7974   003CD4  EF43  F01F         	goto	l5723
  7975   003CD8                     l5703:
  7976   003CD8  502B               	movf	go_Home@i^0,w,c
  7977   003CDA  2424               	addwf	go_Home@WayBack^0,w,c
  7978   003CDC  6E28               	movwf	??_go_Home^0,c
  7979   003CDE  502C               	movf	(go_Home@i+1)^0,w,c
  7980   003CE0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7981   003CE2  6E29               	movwf	(??_go_Home+1)^0,c
  7982   003CE4  0EFF               	movlw	255
  7983   003CE6  2428               	addwf	??_go_Home^0,w,c
  7984   003CE8  6ED9               	movwf	fsr2l,c
  7985   003CEA  0EFF               	movlw	255
  7986   003CEC  2029               	addwfc	(??_go_Home+1)^0,w,c
  7987   003CEE  6EDA               	movwf	fsr2h,c
  7988   003CF0  0E03               	movlw	3
  7989   003CF2  18DE               	xorwf	postinc2,w,c
  7990   003CF4  A4D8               	btfss	status,2,c
  7991   003CF6  EF7F  F01E         	goto	u5711
  7992   003CFA  EF81  F01E         	goto	u5710
  7993   003CFE                     u5711:
  7994   003CFE  EF97  F01E         	goto	l5707
  7995   003D02                     u5710:
  7996   003D02                     
  7997                           ;Memory.c: 21:             reverseDetect(&motorL, &motorR);
  7998   003D02  0EC7               	movlw	low _motorL
  7999   003D04  6E1A               	movwf	reverseDetect@mL^0,c
  8000   003D06  0E01               	movlw	high _motorL
  8001   003D08  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8002   003D0A  0EBE               	movlw	low _motorR
  8003   003D0C  6E1C               	movwf	reverseDetect@mR^0,c
  8004   003D0E  0E01               	movlw	high _motorR
  8005   003D10  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8006   003D12  EC36  F02C         	call	_reverseDetect	;wreg free
  8007                           
  8008                           ;Memory.c: 22:             ReverseYellow(&motorL, &motorR);
  8009   003D16  0EC7               	movlw	low _motorL
  8010   003D18  6E20               	movwf	ReverseYellow@mL^0,c
  8011   003D1A  0E01               	movlw	high _motorL
  8012   003D1C  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8013   003D1E  0EBE               	movlw	low _motorR
  8014   003D20  6E22               	movwf	ReverseYellow@mR^0,c
  8015   003D22  0E01               	movlw	high _motorR
  8016   003D24  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8017   003D26  EC70  F027         	call	_ReverseYellow	;wreg free
  8018                           
  8019                           ;Memory.c: 23:         }
  8020   003D2A  EF43  F01F         	goto	l5723
  8021   003D2E                     l5707:
  8022   003D2E  502B               	movf	go_Home@i^0,w,c
  8023   003D30  2424               	addwf	go_Home@WayBack^0,w,c
  8024   003D32  6E28               	movwf	??_go_Home^0,c
  8025   003D34  502C               	movf	(go_Home@i+1)^0,w,c
  8026   003D36  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8027   003D38  6E29               	movwf	(??_go_Home+1)^0,c
  8028   003D3A  0EFF               	movlw	255
  8029   003D3C  2428               	addwf	??_go_Home^0,w,c
  8030   003D3E  6ED9               	movwf	fsr2l,c
  8031   003D40  0EFF               	movlw	255
  8032   003D42  2029               	addwfc	(??_go_Home+1)^0,w,c
  8033   003D44  6EDA               	movwf	fsr2h,c
  8034   003D46  0E04               	movlw	4
  8035   003D48  18DE               	xorwf	postinc2,w,c
  8036   003D4A  A4D8               	btfss	status,2,c
  8037   003D4C  EFAA  F01E         	goto	u5721
  8038   003D50  EFAC  F01E         	goto	u5720
  8039   003D54                     u5721:
  8040   003D54  EFC2  F01E         	goto	l5711
  8041   003D58                     u5720:
  8042   003D58                     
  8043                           ;Memory.c: 25:             reverseDetect(&motorL, &motorR);
  8044   003D58  0EC7               	movlw	low _motorL
  8045   003D5A  6E1A               	movwf	reverseDetect@mL^0,c
  8046   003D5C  0E01               	movlw	high _motorL
  8047   003D5E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8048   003D60  0EBE               	movlw	low _motorR
  8049   003D62  6E1C               	movwf	reverseDetect@mR^0,c
  8050   003D64  0E01               	movlw	high _motorR
  8051   003D66  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8052   003D68  EC36  F02C         	call	_reverseDetect	;wreg free
  8053                           
  8054                           ;Memory.c: 26:             BlueMove(&motorL, &motorR);
  8055   003D6C  0EC7               	movlw	low _motorL
  8056   003D6E  6E20               	movwf	BlueMove@mL^0,c
  8057   003D70  0E01               	movlw	high _motorL
  8058   003D72  6E21               	movwf	(BlueMove@mL+1)^0,c
  8059   003D74  0EBE               	movlw	low _motorR
  8060   003D76  6E22               	movwf	BlueMove@mR^0,c
  8061   003D78  0E01               	movlw	high _motorR
  8062   003D7A  6E23               	movwf	(BlueMove@mR+1)^0,c
  8063   003D7C  EC7A  F02B         	call	_BlueMove	;wreg free
  8064                           
  8065                           ;Memory.c: 27:         }
  8066   003D80  EF43  F01F         	goto	l5723
  8067   003D84                     l5711:
  8068   003D84  502B               	movf	go_Home@i^0,w,c
  8069   003D86  2424               	addwf	go_Home@WayBack^0,w,c
  8070   003D88  6E28               	movwf	??_go_Home^0,c
  8071   003D8A  502C               	movf	(go_Home@i+1)^0,w,c
  8072   003D8C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8073   003D8E  6E29               	movwf	(??_go_Home+1)^0,c
  8074   003D90  0EFF               	movlw	255
  8075   003D92  2428               	addwf	??_go_Home^0,w,c
  8076   003D94  6ED9               	movwf	fsr2l,c
  8077   003D96  0EFF               	movlw	255
  8078   003D98  2029               	addwfc	(??_go_Home+1)^0,w,c
  8079   003D9A  6EDA               	movwf	fsr2h,c
  8080   003D9C  0E05               	movlw	5
  8081   003D9E  18DE               	xorwf	postinc2,w,c
  8082   003DA0  A4D8               	btfss	status,2,c
  8083   003DA2  EFD5  F01E         	goto	u5731
  8084   003DA6  EFD7  F01E         	goto	u5730
  8085   003DAA                     u5731:
  8086   003DAA  EFED  F01E         	goto	l5715
  8087   003DAE                     u5730:
  8088   003DAE                     
  8089                           ;Memory.c: 29:             reverseDetect(&motorL, &motorR);
  8090   003DAE  0EC7               	movlw	low _motorL
  8091   003DB0  6E1A               	movwf	reverseDetect@mL^0,c
  8092   003DB2  0E01               	movlw	high _motorL
  8093   003DB4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8094   003DB6  0EBE               	movlw	low _motorR
  8095   003DB8  6E1C               	movwf	reverseDetect@mR^0,c
  8096   003DBA  0E01               	movlw	high _motorR
  8097   003DBC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8098   003DBE  EC36  F02C         	call	_reverseDetect	;wreg free
  8099                           
  8100                           ;Memory.c: 30:             RedMove(&motorL, &motorR);
  8101   003DC2  0EC7               	movlw	low _motorL
  8102   003DC4  6E20               	movwf	RedMove@mL^0,c
  8103   003DC6  0E01               	movlw	high _motorL
  8104   003DC8  6E21               	movwf	(RedMove@mL+1)^0,c
  8105   003DCA  0EBE               	movlw	low _motorR
  8106   003DCC  6E22               	movwf	RedMove@mR^0,c
  8107   003DCE  0E01               	movlw	high _motorR
  8108   003DD0  6E23               	movwf	(RedMove@mR+1)^0,c
  8109   003DD2  EC95  F02F         	call	_RedMove	;wreg free
  8110                           
  8111                           ;Memory.c: 31:         }
  8112   003DD6  EF43  F01F         	goto	l5723
  8113   003DDA                     l5715:
  8114   003DDA  502B               	movf	go_Home@i^0,w,c
  8115   003DDC  2424               	addwf	go_Home@WayBack^0,w,c
  8116   003DDE  6E28               	movwf	??_go_Home^0,c
  8117   003DE0  502C               	movf	(go_Home@i+1)^0,w,c
  8118   003DE2  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8119   003DE4  6E29               	movwf	(??_go_Home+1)^0,c
  8120   003DE6  0EFF               	movlw	255
  8121   003DE8  2428               	addwf	??_go_Home^0,w,c
  8122   003DEA  6ED9               	movwf	fsr2l,c
  8123   003DEC  0EFF               	movlw	255
  8124   003DEE  2029               	addwfc	(??_go_Home+1)^0,w,c
  8125   003DF0  6EDA               	movwf	fsr2h,c
  8126   003DF2  0E06               	movlw	6
  8127   003DF4  18DE               	xorwf	postinc2,w,c
  8128   003DF6  A4D8               	btfss	status,2,c
  8129   003DF8  EF00  F01F         	goto	u5741
  8130   003DFC  EF02  F01F         	goto	u5740
  8131   003E00                     u5741:
  8132   003E00  EF18  F01F         	goto	l5719
  8133   003E04                     u5740:
  8134   003E04                     
  8135                           ;Memory.c: 33:             reverseDetect(&motorL, &motorR);
  8136   003E04  0EC7               	movlw	low _motorL
  8137   003E06  6E1A               	movwf	reverseDetect@mL^0,c
  8138   003E08  0E01               	movlw	high _motorL
  8139   003E0A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8140   003E0C  0EBE               	movlw	low _motorR
  8141   003E0E  6E1C               	movwf	reverseDetect@mR^0,c
  8142   003E10  0E01               	movlw	high _motorR
  8143   003E12  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8144   003E14  EC36  F02C         	call	_reverseDetect	;wreg free
  8145                           
  8146                           ;Memory.c: 34:             OrangeMove(&motorL, &motorR);
  8147   003E18  0EC7               	movlw	low _motorL
  8148   003E1A  6E20               	movwf	OrangeMove@mL^0,c
  8149   003E1C  0E01               	movlw	high _motorL
  8150   003E1E  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8151   003E20  0EBE               	movlw	low _motorR
  8152   003E22  6E22               	movwf	OrangeMove@mR^0,c
  8153   003E24  0E01               	movlw	high _motorR
  8154   003E26  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8155   003E28  ECE4  F02C         	call	_OrangeMove	;wreg free
  8156                           
  8157                           ;Memory.c: 35:         }
  8158   003E2C  EF43  F01F         	goto	l5723
  8159   003E30                     l5719:
  8160   003E30  502B               	movf	go_Home@i^0,w,c
  8161   003E32  2424               	addwf	go_Home@WayBack^0,w,c
  8162   003E34  6E28               	movwf	??_go_Home^0,c
  8163   003E36  502C               	movf	(go_Home@i+1)^0,w,c
  8164   003E38  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8165   003E3A  6E29               	movwf	(??_go_Home+1)^0,c
  8166   003E3C  0EFF               	movlw	255
  8167   003E3E  2428               	addwf	??_go_Home^0,w,c
  8168   003E40  6ED9               	movwf	fsr2l,c
  8169   003E42  0EFF               	movlw	255
  8170   003E44  2029               	addwfc	(??_go_Home+1)^0,w,c
  8171   003E46  6EDA               	movwf	fsr2h,c
  8172   003E48  0E07               	movlw	7
  8173   003E4A  18DE               	xorwf	postinc2,w,c
  8174   003E4C  A4D8               	btfss	status,2,c
  8175   003E4E  EF2B  F01F         	goto	u5751
  8176   003E52  EF2D  F01F         	goto	u5750
  8177   003E56                     u5751:
  8178   003E56  EF43  F01F         	goto	l655
  8179   003E5A                     u5750:
  8180   003E5A                     
  8181                           ;Memory.c: 37:             reverseDetect(&motorL, &motorR);
  8182   003E5A  0EC7               	movlw	low _motorL
  8183   003E5C  6E1A               	movwf	reverseDetect@mL^0,c
  8184   003E5E  0E01               	movlw	high _motorL
  8185   003E60  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8186   003E62  0EBE               	movlw	low _motorR
  8187   003E64  6E1C               	movwf	reverseDetect@mR^0,c
  8188   003E66  0E01               	movlw	high _motorR
  8189   003E68  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8190   003E6A  EC36  F02C         	call	_reverseDetect	;wreg free
  8191                           
  8192                           ;Memory.c: 38:             ReversePink(&motorL, &motorR);
  8193   003E6E  0EC7               	movlw	low _motorL
  8194   003E70  6E20               	movwf	ReversePink@mL^0,c
  8195   003E72  0E01               	movlw	high _motorL
  8196   003E74  6E21               	movwf	(ReversePink@mL+1)^0,c
  8197   003E76  0EBE               	movlw	low _motorR
  8198   003E78  6E22               	movwf	ReversePink@mR^0,c
  8199   003E7A  0E01               	movlw	high _motorR
  8200   003E7C  6E23               	movwf	(ReversePink@mR+1)^0,c
  8201   003E7E  ECCB  F027         	call	_ReversePink	;wreg free
  8202   003E82  EF43  F01F         	goto	l5723
  8203   003E86                     l655:
  8204   003E86                     l5723:
  8205                           
  8206                           ;Memory.c: 42:   }
  8207   003E86  062B               	decf	go_Home@i^0,f,c
  8208   003E88  A0D8               	btfss	status,0,c
  8209   003E8A  062C               	decf	(go_Home@i+1)^0,f,c
  8210   003E8C  EFF7  F01D         	goto	l5689
  8211   003E90                     l661:
  8212   003E90  0012               	return		;funcret
  8213   003E92                     __end_of_go_Home:
  8214                           	callstack 0
  8215                           
  8216 ;; *************** function _timed_forward *****************
  8217 ;; Defined at:
  8218 ;;		line 165 in file "dc_motor.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8221 ;;		 -> motorL(9), 
  8222 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8223 ;;		 -> motorR(9), 
  8224 ;;  time            2   23[COMRAM] int 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;		None
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1    wreg      void 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8236 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8240 ;;Total ram usage:        8 bytes
  8241 ;; Hardware stack levels used: 1
  8242 ;; Hardware stack levels required when called: 2
  8243 ;; This function calls:
  8244 ;;		_delayed_ms
  8245 ;;		_setMotorPWM
  8246 ;; This function is called by:
  8247 ;;		_go_Home
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text33
  8252   00504C                     __ptext33:
  8253                           	callstack 0
  8254   00504C                     _timed_forward:
  8255                           	callstack 27
  8256   00504C                     
  8257                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8258   00504C  EE20 F001          	lfsr	2,1
  8259   005050  5014               	movf	timed_forward@mL^0,w,c
  8260   005052  26D9               	addwf	fsr2l,f,c
  8261   005054  5015               	movf	(timed_forward@mL+1)^0,w,c
  8262   005056  22DA               	addwfc	fsr2h,f,c
  8263   005058  0E01               	movlw	1
  8264   00505A  6EDF               	movwf	indf2,c
  8265                           
  8266                           ;dc_motor.c: 169:     mR->direction =1;
  8267   00505C  EE20 F001          	lfsr	2,1
  8268   005060  5016               	movf	timed_forward@mR^0,w,c
  8269   005062  26D9               	addwf	fsr2l,f,c
  8270   005064  5017               	movf	(timed_forward@mR+1)^0,w,c
  8271   005066  22DA               	addwfc	fsr2h,f,c
  8272   005068  0E01               	movlw	1
  8273   00506A  6EDF               	movwf	indf2,c
  8274                           
  8275                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8276   00506C  EF5C  F028         	goto	l5235
  8277   005070                     l5227:
  8278                           
  8279                           ;dc_motor.c: 172:         mL->power+=10;
  8280   005070  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8281   005074  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8282   005078  0E0A               	movlw	10
  8283   00507A  26DF               	addwf	indf2,f,c
  8284                           
  8285                           ;dc_motor.c: 173:         mR->power+=10;
  8286   00507C  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8287   005080  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8288   005084  0E0A               	movlw	10
  8289   005086  26DF               	addwf	indf2,f,c
  8290   005088                     
  8291                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8292   005088  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8293   00508C  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8294   005090  EC1F  F024         	call	_setMotorPWM	;wreg free
  8295   005094                     
  8296                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8297   005094  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8298   005098  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8299   00509C  EC1F  F024         	call	_setMotorPWM	;wreg free
  8300   0050A0                     
  8301                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8302   0050A0  0E02               	movlw	2
  8303   0050A2  6E1B               	movwf	(??_timed_forward+1)^0,c
  8304   0050A4  0EA0               	movlw	160
  8305   0050A6  6E1A               	movwf	??_timed_forward^0,c
  8306   0050A8  0E92               	movlw	146
  8307   0050AA                     u6137:
  8308   0050AA  2EE8               	decfsz	wreg,f,c
  8309   0050AC  D7FE               	bra	u6137
  8310   0050AE  2E1A               	decfsz	??_timed_forward^0,f,c
  8311   0050B0  D7FC               	bra	u6137
  8312   0050B2  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8313   0050B4  D7FA               	bra	u6137
  8314   0050B6  D000               	nop2	
  8315   0050B8                     l5235:
  8316   0050B8  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8317   0050BC  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8318   0050C0  0E1E               	movlw	30
  8319   0050C2  60DF               	cpfslt	indf2,c
  8320   0050C4  EF66  F028         	goto	u5081
  8321   0050C8  EF68  F028         	goto	u5080
  8322   0050CC                     u5081:
  8323   0050CC  EF74  F028         	goto	l5239
  8324   0050D0                     u5080:
  8325   0050D0  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8326   0050D4  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8327   0050D8  0E1D               	movlw	29
  8328   0050DA  64DF               	cpfsgt	indf2,c
  8329   0050DC  EF72  F028         	goto	u5091
  8330   0050E0  EF74  F028         	goto	u5090
  8331   0050E4                     u5091:
  8332   0050E4  EF38  F028         	goto	l5227
  8333   0050E8                     u5090:
  8334   0050E8                     l5239:
  8335                           
  8336                           ;dc_motor.c: 181:     delayed_ms(time);
  8337   0050E8  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8338   0050EC  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8339   0050F0  ECEF  F02F         	call	_delayed_ms	;wreg free
  8340   0050F4  0012               	return		;funcret
  8341   0050F6                     __end_of_timed_forward:
  8342                           	callstack 0
  8343                           
  8344 ;; *************** function _delayed_ms *****************
  8345 ;; Defined at:
  8346 ;;		line 39 in file "timers.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  time            2    0[COMRAM] int 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  i               2    3[COMRAM] unsigned int 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8363 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8364 ;;Total ram usage:        5 bytes
  8365 ;; Hardware stack levels used: 1
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_timed_forward
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text34
  8374   005FDE                     __ptext34:
  8375                           	callstack 0
  8376   005FDE                     _delayed_ms:
  8377                           	callstack 28
  8378   005FDE                     
  8379                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8380   005FDE  0E00               	movlw	0
  8381   005FE0  6E05               	movwf	(delayed_ms@i+1)^0,c
  8382   005FE2  0E00               	movlw	0
  8383   005FE4  6E04               	movwf	delayed_ms@i^0,c
  8384   005FE6  EFFF  F02F         	goto	l688
  8385   005FEA                     l5059:
  8386                           
  8387                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8388   005FEA  0E15               	movlw	21
  8389   005FEC  6E03               	movwf	??_delayed_ms^0,c
  8390   005FEE  0EC6               	movlw	198
  8391   005FF0                     u6147:
  8392   005FF0  2EE8               	decfsz	wreg,f,c
  8393   005FF2  D7FE               	bra	u6147
  8394   005FF4  2E03               	decfsz	??_delayed_ms^0,f,c
  8395   005FF6  D7FC               	bra	u6147
  8396   005FF8  D000               	nop2	
  8397   005FFA                     
  8398                           ;timers.c: 42:     }
  8399   005FFA  4A04               	infsnz	delayed_ms@i^0,f,c
  8400   005FFC  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8401   005FFE                     l688:
  8402   005FFE  5001               	movf	delayed_ms@time^0,w,c
  8403   006000  5C04               	subwf	delayed_ms@i^0,w,c
  8404   006002  5002               	movf	(delayed_ms@time+1)^0,w,c
  8405   006004  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8406   006006  A0D8               	btfss	status,0,c
  8407   006008  EF08  F030         	goto	u5021
  8408   00600C  EF0A  F030         	goto	u5020
  8409   006010                     u5021:
  8410   006010  EFF5  F02F         	goto	l5059
  8411   006014                     u5020:
  8412   006014  0012               	return		;funcret
  8413   006016                     __end_of_delayed_ms:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _ReverseYellow *****************
  8417 ;; Defined at:
  8418 ;;		line 334 in file "dc_motor.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8421 ;;		 -> motorL(9), 
  8422 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8423 ;;		 -> motorR(9), 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;		None
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      void 
  8428 ;; Registers used:
  8429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8439 ;;Total ram usage:        4 bytes
  8440 ;; Hardware stack levels used: 1
  8441 ;; Hardware stack levels required when called: 4
  8442 ;; This function calls:
  8443 ;;		_ForwardOneBlock
  8444 ;;		_reverseDetect
  8445 ;;		_turnRight45
  8446 ;; This function is called by:
  8447 ;;		_go_Home
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text35
  8452   004EE0                     __ptext35:
  8453                           	callstack 0
  8454   004EE0                     _ReverseYellow:
  8455                           	callstack 25
  8456   004EE0                     
  8457                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8458   004EE0  0EC7               	movlw	low _motorL
  8459   004EE2  6E1A               	movwf	reverseDetect@mL^0,c
  8460   004EE4  0E01               	movlw	high _motorL
  8461   004EE6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8462   004EE8  0EBE               	movlw	low _motorR
  8463   004EEA  6E1C               	movwf	reverseDetect@mR^0,c
  8464   004EEC  0E01               	movlw	high _motorR
  8465   004EEE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8466   004EF0  EC36  F02C         	call	_reverseDetect	;wreg free
  8467                           
  8468                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8469   004EF4  0EC7               	movlw	low _motorL
  8470   004EF6  6E1A               	movwf	turnRight45@mL^0,c
  8471   004EF8  0E01               	movlw	high _motorL
  8472   004EFA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8473   004EFC  0EBE               	movlw	low _motorR
  8474   004EFE  6E1C               	movwf	turnRight45@mR^0,c
  8475   004F00  0E01               	movlw	high _motorR
  8476   004F02  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8477   004F04  EC79  F02E         	call	_turnRight45	;wreg free
  8478                           
  8479                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8480   004F08  0EC7               	movlw	low _motorL
  8481   004F0A  6E1A               	movwf	turnRight45@mL^0,c
  8482   004F0C  0E01               	movlw	high _motorL
  8483   004F0E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8484   004F10  0EBE               	movlw	low _motorR
  8485   004F12  6E1C               	movwf	turnRight45@mR^0,c
  8486   004F14  0E01               	movlw	high _motorR
  8487   004F16  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8488   004F18  EC79  F02E         	call	_turnRight45	;wreg free
  8489                           
  8490                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  8491   004F1C  0EC7               	movlw	low _motorL
  8492   004F1E  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8493   004F20  0E01               	movlw	high _motorL
  8494   004F22  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8495   004F24  0EBE               	movlw	low _motorR
  8496   004F26  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8497   004F28  0E01               	movlw	high _motorR
  8498   004F2A  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8499   004F2C  ECDC  F02B         	call	_ForwardOneBlock	;wreg free
  8500                           
  8501                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  8502   004F30  0EC7               	movlw	low _motorL
  8503   004F32  6E1A               	movwf	reverseDetect@mL^0,c
  8504   004F34  0E01               	movlw	high _motorL
  8505   004F36  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8506   004F38  0EBE               	movlw	low _motorR
  8507   004F3A  6E1C               	movwf	reverseDetect@mR^0,c
  8508   004F3C  0E01               	movlw	high _motorR
  8509   004F3E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8510   004F40  EC36  F02C         	call	_reverseDetect	;wreg free
  8511                           
  8512                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8513   004F44  0EC7               	movlw	low _motorL
  8514   004F46  6E1A               	movwf	turnRight45@mL^0,c
  8515   004F48  0E01               	movlw	high _motorL
  8516   004F4A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8517   004F4C  0EBE               	movlw	low _motorR
  8518   004F4E  6E1C               	movwf	turnRight45@mR^0,c
  8519   004F50  0E01               	movlw	high _motorR
  8520   004F52  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8521   004F54  EC79  F02E         	call	_turnRight45	;wreg free
  8522                           
  8523                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8524   004F58  0EC7               	movlw	low _motorL
  8525   004F5A  6E1A               	movwf	turnRight45@mL^0,c
  8526   004F5C  0E01               	movlw	high _motorL
  8527   004F5E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8528   004F60  0EBE               	movlw	low _motorR
  8529   004F62  6E1C               	movwf	turnRight45@mR^0,c
  8530   004F64  0E01               	movlw	high _motorR
  8531   004F66  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8532   004F68  EC79  F02E         	call	_turnRight45	;wreg free
  8533                           
  8534                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8535   004F6C  0EC7               	movlw	low _motorL
  8536   004F6E  6E1A               	movwf	turnRight45@mL^0,c
  8537   004F70  0E01               	movlw	high _motorL
  8538   004F72  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8539   004F74  0EBE               	movlw	low _motorR
  8540   004F76  6E1C               	movwf	turnRight45@mR^0,c
  8541   004F78  0E01               	movlw	high _motorR
  8542   004F7A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8543   004F7C  EC79  F02E         	call	_turnRight45	;wreg free
  8544                           
  8545                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  8546   004F80  0EC7               	movlw	low _motorL
  8547   004F82  6E1A               	movwf	turnRight45@mL^0,c
  8548   004F84  0E01               	movlw	high _motorL
  8549   004F86  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8550   004F88  0EBE               	movlw	low _motorR
  8551   004F8A  6E1C               	movwf	turnRight45@mR^0,c
  8552   004F8C  0E01               	movlw	high _motorR
  8553   004F8E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8554   004F90  EC79  F02E         	call	_turnRight45	;wreg free
  8555   004F94  0012               	return		;funcret
  8556   004F96                     __end_of_ReverseYellow:
  8557                           	callstack 0
  8558                           
  8559 ;; *************** function _ReversePink *****************
  8560 ;; Defined at:
  8561 ;;		line 345 in file "dc_motor.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8564 ;;		 -> motorL(9), 
  8565 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8566 ;;		 -> motorR(9), 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8581 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8582 ;;Total ram usage:        4 bytes
  8583 ;; Hardware stack levels used: 1
  8584 ;; Hardware stack levels required when called: 4
  8585 ;; This function calls:
  8586 ;;		_ForwardOneBlock
  8587 ;;		_reverseDetect
  8588 ;;		_turnLeft45
  8589 ;; This function is called by:
  8590 ;;		_go_Home
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text36
  8595   004F96                     __ptext36:
  8596                           	callstack 0
  8597   004F96                     _ReversePink:
  8598                           	callstack 25
  8599   004F96                     
  8600                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  8601   004F96  0EC7               	movlw	low _motorL
  8602   004F98  6E1A               	movwf	reverseDetect@mL^0,c
  8603   004F9A  0E01               	movlw	high _motorL
  8604   004F9C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8605   004F9E  0EBE               	movlw	low _motorR
  8606   004FA0  6E1C               	movwf	reverseDetect@mR^0,c
  8607   004FA2  0E01               	movlw	high _motorR
  8608   004FA4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8609   004FA6  EC36  F02C         	call	_reverseDetect	;wreg free
  8610                           
  8611                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8612   004FAA  0EC7               	movlw	low _motorL
  8613   004FAC  6E1A               	movwf	turnLeft45@mL^0,c
  8614   004FAE  0E01               	movlw	high _motorL
  8615   004FB0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8616   004FB2  0EBE               	movlw	low _motorR
  8617   004FB4  6E1C               	movwf	turnLeft45@mR^0,c
  8618   004FB6  0E01               	movlw	high _motorR
  8619   004FB8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8620   004FBA  ECA0  F02E         	call	_turnLeft45	;wreg free
  8621                           
  8622                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  8623   004FBE  0EC7               	movlw	low _motorL
  8624   004FC0  6E1A               	movwf	turnLeft45@mL^0,c
  8625   004FC2  0E01               	movlw	high _motorL
  8626   004FC4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8627   004FC6  0EBE               	movlw	low _motorR
  8628   004FC8  6E1C               	movwf	turnLeft45@mR^0,c
  8629   004FCA  0E01               	movlw	high _motorR
  8630   004FCC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8631   004FCE  ECA0  F02E         	call	_turnLeft45	;wreg free
  8632                           
  8633                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  8634   004FD2  0EC7               	movlw	low _motorL
  8635   004FD4  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8636   004FD6  0E01               	movlw	high _motorL
  8637   004FD8  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8638   004FDA  0EBE               	movlw	low _motorR
  8639   004FDC  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8640   004FDE  0E01               	movlw	high _motorR
  8641   004FE0  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8642   004FE2  ECDC  F02B         	call	_ForwardOneBlock	;wreg free
  8643                           
  8644                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  8645   004FE6  0EC7               	movlw	low _motorL
  8646   004FE8  6E1A               	movwf	reverseDetect@mL^0,c
  8647   004FEA  0E01               	movlw	high _motorL
  8648   004FEC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8649   004FEE  0EBE               	movlw	low _motorR
  8650   004FF0  6E1C               	movwf	reverseDetect@mR^0,c
  8651   004FF2  0E01               	movlw	high _motorR
  8652   004FF4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8653   004FF6  EC36  F02C         	call	_reverseDetect	;wreg free
  8654                           
  8655                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8656   004FFA  0EC7               	movlw	low _motorL
  8657   004FFC  6E1A               	movwf	turnLeft45@mL^0,c
  8658   004FFE  0E01               	movlw	high _motorL
  8659   005000  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8660   005002  0EBE               	movlw	low _motorR
  8661   005004  6E1C               	movwf	turnLeft45@mR^0,c
  8662   005006  0E01               	movlw	high _motorR
  8663   005008  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8664   00500A  ECA0  F02E         	call	_turnLeft45	;wreg free
  8665                           
  8666                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8667   00500E  0EC7               	movlw	low _motorL
  8668   005010  6E1A               	movwf	turnLeft45@mL^0,c
  8669   005012  0E01               	movlw	high _motorL
  8670   005014  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8671   005016  0EBE               	movlw	low _motorR
  8672   005018  6E1C               	movwf	turnLeft45@mR^0,c
  8673   00501A  0E01               	movlw	high _motorR
  8674   00501C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8675   00501E  ECA0  F02E         	call	_turnLeft45	;wreg free
  8676                           
  8677                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8678   005022  0EC7               	movlw	low _motorL
  8679   005024  6E1A               	movwf	turnLeft45@mL^0,c
  8680   005026  0E01               	movlw	high _motorL
  8681   005028  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8682   00502A  0EBE               	movlw	low _motorR
  8683   00502C  6E1C               	movwf	turnLeft45@mR^0,c
  8684   00502E  0E01               	movlw	high _motorR
  8685   005030  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8686   005032  ECA0  F02E         	call	_turnLeft45	;wreg free
  8687                           
  8688                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  8689   005036  0EC7               	movlw	low _motorL
  8690   005038  6E1A               	movwf	turnLeft45@mL^0,c
  8691   00503A  0E01               	movlw	high _motorL
  8692   00503C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8693   00503E  0EBE               	movlw	low _motorR
  8694   005040  6E1C               	movwf	turnLeft45@mR^0,c
  8695   005042  0E01               	movlw	high _motorR
  8696   005044  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8697   005046  ECA0  F02E         	call	_turnLeft45	;wreg free
  8698   00504A  0012               	return		;funcret
  8699   00504C                     __end_of_ReversePink:
  8700                           	callstack 0
  8701                           
  8702 ;; *************** function _ForwardOneBlock *****************
  8703 ;; Defined at:
  8704 ;;		line 238 in file "dc_motor.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8707 ;;		 -> motorL(9), 
  8708 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8709 ;;		 -> motorR(9), 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;		None
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      void 
  8714 ;; Registers used:
  8715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;Total ram usage:        6 bytes
  8726 ;; Hardware stack levels used: 1
  8727 ;; Hardware stack levels required when called: 3
  8728 ;; This function calls:
  8729 ;;		_fullSpeedAhead
  8730 ;;		_stop
  8731 ;; This function is called by:
  8732 ;;		_ReverseYellow
  8733 ;;		_ReversePink
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           	psect	text37
  8738   0057B8                     __ptext37:
  8739                           	callstack 0
  8740   0057B8                     _ForwardOneBlock:
  8741                           	callstack 25
  8742   0057B8                     
  8743                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8744   0057B8  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8745   0057BC  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8746   0057C0  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8747   0057C4  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8748   0057C8  ECBD  F029         	call	_fullSpeedAhead	;wreg free
  8749   0057CC                     
  8750                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8751   0057CC  0EA3               	movlw	163
  8752   0057CE  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8753   0057D0  0E57               	movlw	87
  8754   0057D2  6E1E               	movwf	??_ForwardOneBlock^0,c
  8755   0057D4  0E02               	movlw	2
  8756   0057D6                     u6157:
  8757   0057D6  2EE8               	decfsz	wreg,f,c
  8758   0057D8  D7FE               	bra	u6157
  8759   0057DA  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8760   0057DC  D7FC               	bra	u6157
  8761   0057DE  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8762   0057E0  D7FA               	bra	u6157
  8763   0057E2  D000               	nop2	
  8764   0057E4                     
  8765                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8766   0057E4  0EC7               	movlw	low _motorL
  8767   0057E6  6E14               	movwf	stop@mL^0,c
  8768   0057E8  0E01               	movlw	high _motorL
  8769   0057EA  6E15               	movwf	(stop@mL+1)^0,c
  8770   0057EC  0EBE               	movlw	low _motorR
  8771   0057EE  6E16               	movwf	stop@mR^0,c
  8772   0057F0  0E01               	movlw	high _motorR
  8773   0057F2  6E17               	movwf	(stop@mR+1)^0,c
  8774   0057F4  EC91  F02A         	call	_stop	;wreg free
  8775                           
  8776                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8777   0057F8  0E05               	movlw	5
  8778   0057FA  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8779   0057FC  0E0F               	movlw	15
  8780   0057FE  6E1E               	movwf	??_ForwardOneBlock^0,c
  8781   005800  0EF1               	movlw	241
  8782   005802                     u6167:
  8783   005802  2EE8               	decfsz	wreg,f,c
  8784   005804  D7FE               	bra	u6167
  8785   005806  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8786   005808  D7FC               	bra	u6167
  8787   00580A  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8788   00580C  D7FA               	bra	u6167
  8789   00580E  F000               	nop	
  8790   005810  0012               	return		;funcret
  8791   005812                     __end_of_ForwardOneBlock:
  8792                           	callstack 0
  8793                           
  8794 ;; *************** function _RedMove *****************
  8795 ;; Defined at:
  8796 ;;		line 262 in file "dc_motor.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8799 ;;		 -> motorL(9), 
  8800 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8801 ;;		 -> motorR(9), 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;		None
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  1    wreg      void 
  8806 ;; Registers used:
  8807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;Total ram usage:        4 bytes
  8818 ;; Hardware stack levels used: 1
  8819 ;; Hardware stack levels required when called: 4
  8820 ;; This function calls:
  8821 ;;		_reverseDetect
  8822 ;;		_turnRight45
  8823 ;; This function is called by:
  8824 ;;		_main
  8825 ;;		_go_Home
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text38
  8830   005F2A                     __ptext38:
  8831                           	callstack 0
  8832   005F2A                     _RedMove:
  8833                           	callstack 25
  8834   005F2A                     
  8835                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8836   005F2A  0EC7               	movlw	low _motorL
  8837   005F2C  6E1A               	movwf	reverseDetect@mL^0,c
  8838   005F2E  0E01               	movlw	high _motorL
  8839   005F30  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8840   005F32  0EBE               	movlw	low _motorR
  8841   005F34  6E1C               	movwf	reverseDetect@mR^0,c
  8842   005F36  0E01               	movlw	high _motorR
  8843   005F38  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8844   005F3A  EC36  F02C         	call	_reverseDetect	;wreg free
  8845                           
  8846                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8847   005F3E  0EC7               	movlw	low _motorL
  8848   005F40  6E1A               	movwf	turnRight45@mL^0,c
  8849   005F42  0E01               	movlw	high _motorL
  8850   005F44  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8851   005F46  0EBE               	movlw	low _motorR
  8852   005F48  6E1C               	movwf	turnRight45@mR^0,c
  8853   005F4A  0E01               	movlw	high _motorR
  8854   005F4C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8855   005F4E  EC79  F02E         	call	_turnRight45	;wreg free
  8856                           
  8857                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8858   005F52  0EC7               	movlw	low _motorL
  8859   005F54  6E1A               	movwf	turnRight45@mL^0,c
  8860   005F56  0E01               	movlw	high _motorL
  8861   005F58  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8862   005F5A  0EBE               	movlw	low _motorR
  8863   005F5C  6E1C               	movwf	turnRight45@mR^0,c
  8864   005F5E  0E01               	movlw	high _motorR
  8865   005F60  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8866   005F62  EC79  F02E         	call	_turnRight45	;wreg free
  8867   005F66  0012               	return		;funcret
  8868   005F68                     __end_of_RedMove:
  8869                           	callstack 0
  8870                           
  8871 ;; *************** function _OrangeMove *****************
  8872 ;; Defined at:
  8873 ;;		line 308 in file "dc_motor.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8876 ;;		 -> motorL(9), 
  8877 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8878 ;;		 -> motorR(9), 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8894 ;;Total ram usage:        4 bytes
  8895 ;; Hardware stack levels used: 1
  8896 ;; Hardware stack levels required when called: 4
  8897 ;; This function calls:
  8898 ;;		_reverseDetect
  8899 ;;		_turnRight45
  8900 ;; This function is called by:
  8901 ;;		_main
  8902 ;;		_go_Home
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           	psect	text39
  8907   0059C8                     __ptext39:
  8908                           	callstack 0
  8909   0059C8                     _OrangeMove:
  8910                           	callstack 25
  8911   0059C8                     
  8912                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8913   0059C8  0EC7               	movlw	low _motorL
  8914   0059CA  6E1A               	movwf	reverseDetect@mL^0,c
  8915   0059CC  0E01               	movlw	high _motorL
  8916   0059CE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8917   0059D0  0EBE               	movlw	low _motorR
  8918   0059D2  6E1C               	movwf	reverseDetect@mR^0,c
  8919   0059D4  0E01               	movlw	high _motorR
  8920   0059D6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8921   0059D8  EC36  F02C         	call	_reverseDetect	;wreg free
  8922                           
  8923                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8924   0059DC  0EC7               	movlw	low _motorL
  8925   0059DE  6E1A               	movwf	turnRight45@mL^0,c
  8926   0059E0  0E01               	movlw	high _motorL
  8927   0059E2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8928   0059E4  0EBE               	movlw	low _motorR
  8929   0059E6  6E1C               	movwf	turnRight45@mR^0,c
  8930   0059E8  0E01               	movlw	high _motorR
  8931   0059EA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8932   0059EC  EC79  F02E         	call	_turnRight45	;wreg free
  8933                           
  8934                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8935   0059F0  0EC7               	movlw	low _motorL
  8936   0059F2  6E1A               	movwf	turnRight45@mL^0,c
  8937   0059F4  0E01               	movlw	high _motorL
  8938   0059F6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8939   0059F8  0EBE               	movlw	low _motorR
  8940   0059FA  6E1C               	movwf	turnRight45@mR^0,c
  8941   0059FC  0E01               	movlw	high _motorR
  8942   0059FE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8943   005A00  EC79  F02E         	call	_turnRight45	;wreg free
  8944                           
  8945                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8946   005A04  0EC7               	movlw	low _motorL
  8947   005A06  6E1A               	movwf	turnRight45@mL^0,c
  8948   005A08  0E01               	movlw	high _motorL
  8949   005A0A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8950   005A0C  0EBE               	movlw	low _motorR
  8951   005A0E  6E1C               	movwf	turnRight45@mR^0,c
  8952   005A10  0E01               	movlw	high _motorR
  8953   005A12  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8954   005A14  EC79  F02E         	call	_turnRight45	;wreg free
  8955   005A18  0012               	return		;funcret
  8956   005A1A                     __end_of_OrangeMove:
  8957                           	callstack 0
  8958                           
  8959 ;; *************** function _LightBlueMove *****************
  8960 ;; Defined at:
  8961 ;;		line 317 in file "dc_motor.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8964 ;;		 -> motorL(9), 
  8965 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8966 ;;		 -> motorR(9), 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;		None
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  1    wreg      void 
  8971 ;; Registers used:
  8972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8981 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8982 ;;Total ram usage:        4 bytes
  8983 ;; Hardware stack levels used: 1
  8984 ;; Hardware stack levels required when called: 4
  8985 ;; This function calls:
  8986 ;;		_reverseDetect
  8987 ;;		_turnLeft45
  8988 ;; This function is called by:
  8989 ;;		_main
  8990 ;;		_go_Home
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           	psect	text40
  8995   005A1A                     __ptext40:
  8996                           	callstack 0
  8997   005A1A                     _LightBlueMove:
  8998                           	callstack 25
  8999   005A1A                     
  9000                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  9001   005A1A  0EC7               	movlw	low _motorL
  9002   005A1C  6E1A               	movwf	reverseDetect@mL^0,c
  9003   005A1E  0E01               	movlw	high _motorL
  9004   005A20  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9005   005A22  0EBE               	movlw	low _motorR
  9006   005A24  6E1C               	movwf	reverseDetect@mR^0,c
  9007   005A26  0E01               	movlw	high _motorR
  9008   005A28  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9009   005A2A  EC36  F02C         	call	_reverseDetect	;wreg free
  9010                           
  9011                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  9012   005A2E  0EC7               	movlw	low _motorL
  9013   005A30  6E1A               	movwf	turnLeft45@mL^0,c
  9014   005A32  0E01               	movlw	high _motorL
  9015   005A34  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9016   005A36  0EBE               	movlw	low _motorR
  9017   005A38  6E1C               	movwf	turnLeft45@mR^0,c
  9018   005A3A  0E01               	movlw	high _motorR
  9019   005A3C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9020   005A3E  ECA0  F02E         	call	_turnLeft45	;wreg free
  9021                           
  9022                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  9023   005A42  0EC7               	movlw	low _motorL
  9024   005A44  6E1A               	movwf	turnLeft45@mL^0,c
  9025   005A46  0E01               	movlw	high _motorL
  9026   005A48  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9027   005A4A  0EBE               	movlw	low _motorR
  9028   005A4C  6E1C               	movwf	turnLeft45@mR^0,c
  9029   005A4E  0E01               	movlw	high _motorR
  9030   005A50  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9031   005A52  ECA0  F02E         	call	_turnLeft45	;wreg free
  9032                           
  9033                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  9034   005A56  0EC7               	movlw	low _motorL
  9035   005A58  6E1A               	movwf	turnLeft45@mL^0,c
  9036   005A5A  0E01               	movlw	high _motorL
  9037   005A5C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9038   005A5E  0EBE               	movlw	low _motorR
  9039   005A60  6E1C               	movwf	turnLeft45@mR^0,c
  9040   005A62  0E01               	movlw	high _motorR
  9041   005A64  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9042   005A66  ECA0  F02E         	call	_turnLeft45	;wreg free
  9043   005A6A  0012               	return		;funcret
  9044   005A6C                     __end_of_LightBlueMove:
  9045                           	callstack 0
  9046                           
  9047 ;; *************** function _GreenMove *****************
  9048 ;; Defined at:
  9049 ;;		line 270 in file "dc_motor.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9052 ;;		 -> motorL(9), 
  9053 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9054 ;;		 -> motorR(9), 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9070 ;;Total ram usage:        4 bytes
  9071 ;; Hardware stack levels used: 1
  9072 ;; Hardware stack levels required when called: 4
  9073 ;; This function calls:
  9074 ;;		_reverseDetect
  9075 ;;		_turnLeft45
  9076 ;; This function is called by:
  9077 ;;		_main
  9078 ;;		_go_Home
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           	psect	text41
  9083   005F68                     __ptext41:
  9084                           	callstack 0
  9085   005F68                     _GreenMove:
  9086                           	callstack 25
  9087   005F68                     
  9088                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9089   005F68  0EC7               	movlw	low _motorL
  9090   005F6A  6E1A               	movwf	reverseDetect@mL^0,c
  9091   005F6C  0E01               	movlw	high _motorL
  9092   005F6E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9093   005F70  0EBE               	movlw	low _motorR
  9094   005F72  6E1C               	movwf	reverseDetect@mR^0,c
  9095   005F74  0E01               	movlw	high _motorR
  9096   005F76  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9097   005F78  EC36  F02C         	call	_reverseDetect	;wreg free
  9098                           
  9099                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9100   005F7C  0EC7               	movlw	low _motorL
  9101   005F7E  6E1A               	movwf	turnLeft45@mL^0,c
  9102   005F80  0E01               	movlw	high _motorL
  9103   005F82  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9104   005F84  0EBE               	movlw	low _motorR
  9105   005F86  6E1C               	movwf	turnLeft45@mR^0,c
  9106   005F88  0E01               	movlw	high _motorR
  9107   005F8A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9108   005F8C  ECA0  F02E         	call	_turnLeft45	;wreg free
  9109                           
  9110                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9111   005F90  0EC7               	movlw	low _motorL
  9112   005F92  6E1A               	movwf	turnLeft45@mL^0,c
  9113   005F94  0E01               	movlw	high _motorL
  9114   005F96  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9115   005F98  0EBE               	movlw	low _motorR
  9116   005F9A  6E1C               	movwf	turnLeft45@mR^0,c
  9117   005F9C  0E01               	movlw	high _motorR
  9118   005F9E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9119   005FA0  ECA0  F02E         	call	_turnLeft45	;wreg free
  9120   005FA4  0012               	return		;funcret
  9121   005FA6                     __end_of_GreenMove:
  9122                           	callstack 0
  9123                           
  9124 ;; *************** function _BlueMove *****************
  9125 ;; Defined at:
  9126 ;;		line 278 in file "dc_motor.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9129 ;;		 -> motorL(9), 
  9130 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9131 ;;		 -> motorR(9), 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;		None
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      void 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9143 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;Total ram usage:        4 bytes
  9148 ;; Hardware stack levels used: 1
  9149 ;; Hardware stack levels required when called: 4
  9150 ;; This function calls:
  9151 ;;		_reverseDetect
  9152 ;;		_turnRight45
  9153 ;; This function is called by:
  9154 ;;		_main
  9155 ;;		_go_Home
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text42
  9160   0056F4                     __ptext42:
  9161                           	callstack 0
  9162   0056F4                     _BlueMove:
  9163                           	callstack 25
  9164   0056F4                     
  9165                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9166   0056F4  0EC7               	movlw	low _motorL
  9167   0056F6  6E1A               	movwf	reverseDetect@mL^0,c
  9168   0056F8  0E01               	movlw	high _motorL
  9169   0056FA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9170   0056FC  0EBE               	movlw	low _motorR
  9171   0056FE  6E1C               	movwf	reverseDetect@mR^0,c
  9172   005700  0E01               	movlw	high _motorR
  9173   005702  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9174   005704  EC36  F02C         	call	_reverseDetect	;wreg free
  9175                           
  9176                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9177   005708  0EC7               	movlw	low _motorL
  9178   00570A  6E1A               	movwf	turnRight45@mL^0,c
  9179   00570C  0E01               	movlw	high _motorL
  9180   00570E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9181   005710  0EBE               	movlw	low _motorR
  9182   005712  6E1C               	movwf	turnRight45@mR^0,c
  9183   005714  0E01               	movlw	high _motorR
  9184   005716  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9185   005718  EC79  F02E         	call	_turnRight45	;wreg free
  9186                           
  9187                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9188   00571C  0EC7               	movlw	low _motorL
  9189   00571E  6E1A               	movwf	turnRight45@mL^0,c
  9190   005720  0E01               	movlw	high _motorL
  9191   005722  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9192   005724  0EBE               	movlw	low _motorR
  9193   005726  6E1C               	movwf	turnRight45@mR^0,c
  9194   005728  0E01               	movlw	high _motorR
  9195   00572A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9196   00572C  EC79  F02E         	call	_turnRight45	;wreg free
  9197                           
  9198                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9199   005730  0EC7               	movlw	low _motorL
  9200   005732  6E1A               	movwf	turnRight45@mL^0,c
  9201   005734  0E01               	movlw	high _motorL
  9202   005736  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9203   005738  0EBE               	movlw	low _motorR
  9204   00573A  6E1C               	movwf	turnRight45@mR^0,c
  9205   00573C  0E01               	movlw	high _motorR
  9206   00573E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9207   005740  EC79  F02E         	call	_turnRight45	;wreg free
  9208                           
  9209                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9210   005744  0EC7               	movlw	low _motorL
  9211   005746  6E1A               	movwf	turnRight45@mL^0,c
  9212   005748  0E01               	movlw	high _motorL
  9213   00574A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9214   00574C  0EBE               	movlw	low _motorR
  9215   00574E  6E1C               	movwf	turnRight45@mR^0,c
  9216   005750  0E01               	movlw	high _motorR
  9217   005752  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9218   005754  EC79  F02E         	call	_turnRight45	;wreg free
  9219   005758  0012               	return		;funcret
  9220   00575A                     __end_of_BlueMove:
  9221                           	callstack 0
  9222                           
  9223 ;; *************** function _getTMR0val *****************
  9224 ;; Defined at:
  9225 ;;		line 28 in file "timers.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  moving          2    0[COMRAM] int 
  9230 ;;  temp            2    0        unsigned int 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  1    wreg      void 
  9233 ;; Registers used:
  9234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;Total ram usage:        2 bytes
  9245 ;; Hardware stack levels used: 1
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_main
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text43
  9254   0060CE                     __ptext43:
  9255                           	callstack 0
  9256   0060CE                     _getTMR0val:
  9257                           	callstack 30
  9258   0060CE  50D3               	movf	211,w,c	;volatile
  9259   0060D0                     
  9260                           ;timers.c: 32:     int moving=TMR0H<<8;
  9261   0060D0  50D4               	movf	212,w,c	;volatile
  9262   0060D2  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9263   0060D4  6A01               	clrf	getTMR0val@moving^0,c
  9264   0060D6                     
  9265                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9266   0060D6  90D8               	bcf	status,0,c
  9267   0060D8  0101               	movlb	1	; () banked
  9268   0060DA  357E               	rlcf	_move_count& (0+255),w,b	;volatile
  9269   0060DC  6ED9               	movwf	fsr2l,c
  9270   0060DE  357F               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9271   0060E0  6EDA               	movwf	fsr2h,c
  9272   0060E2  0E3C               	movlw	low _Time_forward
  9273   0060E4  26D9               	addwf	fsr2l,f,c
  9274   0060E6  0E02               	movlw	high _Time_forward
  9275   0060E8  22DA               	addwfc	fsr2h,f,c
  9276   0060EA  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9277   0060EE  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9278   0060F2                     
  9279                           ; BSR set to: 1
  9280   0060F2  0012               	return		;funcret
  9281   0060F4                     __end_of_getTMR0val:
  9282                           	callstack 0
  9283                           
  9284 ;; *************** function _colour_rel *****************
  9285 ;; Defined at:
  9286 ;;		line 114 in file "color.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;  vals            2   74[COMRAM] PTR struct RGB
  9289 ;;		 -> vals(8), 
  9290 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9291 ;;		 -> rel(12), 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  B               4   20[BANK0 ] float 
  9294 ;;  G               4   16[BANK0 ] float 
  9295 ;;  R               4   12[BANK0 ] float 
  9296 ;;  L               4    0[BANK0 ] float 
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9307 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9309 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9310 ;;Total ram usage:       28 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; Hardware stack levels required when called: 1
  9313 ;; This function calls:
  9314 ;;		___fladd
  9315 ;;		___fldiv
  9316 ;;		___xxtofl
  9317 ;; This function is called by:
  9318 ;;		_main
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text44
  9323   0035B2                     __ptext44:
  9324                           	callstack 0
  9325   0035B2                     _colour_rel:
  9326                           	callstack 29
  9327   0035B2                     
  9328                           ;color.c: 115:     float R = vals->R;
  9329   0035B2  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9330   0035B6  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9331   0035BA  CFDE F001          	movff	postinc2,___xxtofl@val
  9332   0035BE  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9333   0035C2  0E00               	movlw	0
  9334   0035C4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9335   0035C6  0EFF               	movlw	-1
  9336   0035C8  6E03               	movwf	(___xxtofl@val+2)^0,c
  9337   0035CA  6E04               	movwf	(___xxtofl@val+3)^0,c
  9338   0035CC  0E01               	movlw	1
  9339   0035CE  EC81  F022         	call	___xxtofl
  9340   0035D2  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9341   0035D6  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9342   0035DA  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9343   0035DE  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9344                           
  9345                           ;color.c: 116:     float G = vals->G;
  9346   0035E2  EE20 F002          	lfsr	2,2
  9347   0035E6  504B               	movf	colour_rel@vals^0,w,c
  9348   0035E8  26D9               	addwf	fsr2l,f,c
  9349   0035EA  504C               	movf	(colour_rel@vals+1)^0,w,c
  9350   0035EC  22DA               	addwfc	fsr2h,f,c
  9351   0035EE  CFDE F001          	movff	postinc2,___xxtofl@val
  9352   0035F2  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9353   0035F6  0E00               	movlw	0
  9354   0035F8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9355   0035FA  0EFF               	movlw	-1
  9356   0035FC  6E03               	movwf	(___xxtofl@val+2)^0,c
  9357   0035FE  6E04               	movwf	(___xxtofl@val+3)^0,c
  9358   003600  0E01               	movlw	1
  9359   003602  EC81  F022         	call	___xxtofl
  9360   003606  C001  F070         	movff	?___xxtofl,colour_rel@G
  9361   00360A  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9362   00360E  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9363   003612  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9364                           
  9365                           ;color.c: 117:     float B = vals->B;
  9366   003616  EE20 F004          	lfsr	2,4
  9367   00361A  504B               	movf	colour_rel@vals^0,w,c
  9368   00361C  26D9               	addwf	fsr2l,f,c
  9369   00361E  504C               	movf	(colour_rel@vals+1)^0,w,c
  9370   003620  22DA               	addwfc	fsr2h,f,c
  9371   003622  CFDE F001          	movff	postinc2,___xxtofl@val
  9372   003626  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9373   00362A  0E00               	movlw	0
  9374   00362C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9375   00362E  0EFF               	movlw	-1
  9376   003630  6E03               	movwf	(___xxtofl@val+2)^0,c
  9377   003632  6E04               	movwf	(___xxtofl@val+3)^0,c
  9378   003634  0E01               	movlw	1
  9379   003636  EC81  F022         	call	___xxtofl
  9380   00363A  C001  F074         	movff	?___xxtofl,colour_rel@B
  9381   00363E  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9382   003642  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9383   003646  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9384                           
  9385                           ;color.c: 118:     float L = vals->L;
  9386   00364A  EE20 F006          	lfsr	2,6
  9387   00364E  504B               	movf	colour_rel@vals^0,w,c
  9388   003650  26D9               	addwf	fsr2l,f,c
  9389   003652  504C               	movf	(colour_rel@vals+1)^0,w,c
  9390   003654  22DA               	addwfc	fsr2h,f,c
  9391   003656  CFDE F001          	movff	postinc2,___xxtofl@val
  9392   00365A  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9393   00365E  0E00               	movlw	0
  9394   003660  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9395   003662  0EFF               	movlw	-1
  9396   003664  6E03               	movwf	(___xxtofl@val+2)^0,c
  9397   003666  6E04               	movwf	(___xxtofl@val+3)^0,c
  9398   003668  0E01               	movlw	1
  9399   00366A  EC81  F022         	call	___xxtofl
  9400   00366E  C001  F060         	movff	?___xxtofl,colour_rel@L
  9401   003672  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9402   003676  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9403   00367A  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9404   00367E                     
  9405                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9406   00367E  C070  F005         	movff	colour_rel@G,___fladd@a
  9407   003682  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9408   003686  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9409   00368A  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9410   00368E  C06C  F001         	movff	colour_rel@R,___fladd@b
  9411   003692  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9412   003696  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9413   00369A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9414   00369E  EC97  F014         	call	___fladd	;wreg free
  9415   0036A2  C001  F064         	movff	?___fladd,_colour_rel$3142
  9416   0036A6  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9417   0036AA  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9418   0036AE  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9419   0036B2                     
  9420                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9421   0036B2  C074  F005         	movff	colour_rel@B,___fladd@a
  9422   0036B6  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9423   0036BA  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9424   0036BE  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9425   0036C2  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9426   0036C6  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9427   0036CA  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9428   0036CE  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9429   0036D2  EC97  F014         	call	___fladd	;wreg free
  9430   0036D6  C001  F068         	movff	?___fladd,_colour_rel$3143
  9431   0036DA  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9432   0036DE  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9433   0036E2  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9434                           
  9435                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9436   0036E6  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9437   0036EA  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9438   0036EE  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9439   0036F2  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9440   0036F6  C060  F005         	movff	colour_rel@L,___fladd@a
  9441   0036FA  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9442   0036FE  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9443   003702  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9444   003706  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9445   00370A  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9446   00370E  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9447   003712  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9448   003716  EC97  F014         	call	___fladd	;wreg free
  9449   00371A  C001  F036         	movff	?___fladd,___fldiv@a
  9450   00371E  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9451   003722  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9452   003726  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9453   00372A  EC0C  F019         	call	___fldiv	;wreg free
  9454   00372E  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9455   003732  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9456   003736  C032  FFDE         	movff	?___fldiv,postinc2
  9457   00373A  C033  FFDE         	movff	?___fldiv+1,postinc2
  9458   00373E  C034  FFDE         	movff	?___fldiv+2,postinc2
  9459   003742  C035  FFDE         	movff	?___fldiv+3,postinc2
  9460   003746                     
  9461                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9462   003746  C070  F005         	movff	colour_rel@G,___fladd@a
  9463   00374A  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9464   00374E  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9465   003752  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9466   003756  C06C  F001         	movff	colour_rel@R,___fladd@b
  9467   00375A  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9468   00375E  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9469   003762  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9470   003766  EC97  F014         	call	___fladd	;wreg free
  9471   00376A  C001  F064         	movff	?___fladd,_colour_rel$3142
  9472   00376E  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9473   003772  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9474   003776  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9475   00377A                     
  9476                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9477   00377A  C074  F005         	movff	colour_rel@B,___fladd@a
  9478   00377E  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9479   003782  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9480   003786  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9481   00378A  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9482   00378E  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9483   003792  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9484   003796  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9485   00379A  EC97  F014         	call	___fladd	;wreg free
  9486   00379E  C001  F068         	movff	?___fladd,_colour_rel$3143
  9487   0037A2  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9488   0037A6  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9489   0037AA  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9490                           
  9491                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9492   0037AE  C074  F032         	movff	colour_rel@B,___fldiv@b
  9493   0037B2  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9494   0037B6  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9495   0037BA  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9496   0037BE  C060  F005         	movff	colour_rel@L,___fladd@a
  9497   0037C2  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9498   0037C6  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9499   0037CA  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9500   0037CE  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9501   0037D2  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9502   0037D6  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9503   0037DA  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9504   0037DE  EC97  F014         	call	___fladd	;wreg free
  9505   0037E2  C001  F036         	movff	?___fladd,___fldiv@a
  9506   0037E6  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9507   0037EA  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9508   0037EE  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9509   0037F2  EC0C  F019         	call	___fldiv	;wreg free
  9510   0037F6  EE20 F008          	lfsr	2,8
  9511   0037FA  504D               	movf	colour_rel@rel^0,w,c
  9512   0037FC  26D9               	addwf	fsr2l,f,c
  9513   0037FE  504E               	movf	(colour_rel@rel+1)^0,w,c
  9514   003800  22DA               	addwfc	fsr2h,f,c
  9515   003802  C032  FFDE         	movff	?___fldiv,postinc2
  9516   003806  C033  FFDE         	movff	?___fldiv+1,postinc2
  9517   00380A  C034  FFDE         	movff	?___fldiv+2,postinc2
  9518   00380E  C035  FFDE         	movff	?___fldiv+3,postinc2
  9519   003812                     
  9520                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9521   003812  C070  F005         	movff	colour_rel@G,___fladd@a
  9522   003816  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9523   00381A  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9524   00381E  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9525   003822  C06C  F001         	movff	colour_rel@R,___fladd@b
  9526   003826  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9527   00382A  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9528   00382E  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9529   003832  EC97  F014         	call	___fladd	;wreg free
  9530   003836  C001  F064         	movff	?___fladd,_colour_rel$3142
  9531   00383A  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9532   00383E  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9533   003842  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9534   003846                     
  9535                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9536   003846  C074  F005         	movff	colour_rel@B,___fladd@a
  9537   00384A  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9538   00384E  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9539   003852  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9540   003856  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9541   00385A  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9542   00385E  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9543   003862  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9544   003866  EC97  F014         	call	___fladd	;wreg free
  9545   00386A  C001  F068         	movff	?___fladd,_colour_rel$3143
  9546   00386E  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9547   003872  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9548   003876  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9549                           
  9550                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9551   00387A  C070  F032         	movff	colour_rel@G,___fldiv@b
  9552   00387E  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9553   003882  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9554   003886  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9555   00388A  C060  F005         	movff	colour_rel@L,___fladd@a
  9556   00388E  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9557   003892  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9558   003896  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9559   00389A  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9560   00389E  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9561   0038A2  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9562   0038A6  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9563   0038AA  EC97  F014         	call	___fladd	;wreg free
  9564   0038AE  C001  F036         	movff	?___fladd,___fldiv@a
  9565   0038B2  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9566   0038B6  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9567   0038BA  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9568   0038BE  EC0C  F019         	call	___fldiv	;wreg free
  9569   0038C2  EE20 F004          	lfsr	2,4
  9570   0038C6  504D               	movf	colour_rel@rel^0,w,c
  9571   0038C8  26D9               	addwf	fsr2l,f,c
  9572   0038CA  504E               	movf	(colour_rel@rel+1)^0,w,c
  9573   0038CC  22DA               	addwfc	fsr2h,f,c
  9574   0038CE  C032  FFDE         	movff	?___fldiv,postinc2
  9575   0038D2  C033  FFDE         	movff	?___fldiv+1,postinc2
  9576   0038D6  C034  FFDE         	movff	?___fldiv+2,postinc2
  9577   0038DA  C035  FFDE         	movff	?___fldiv+3,postinc2
  9578   0038DE  0012               	return		;funcret
  9579   0038E0                     __end_of_colour_rel:
  9580                           	callstack 0
  9581                           
  9582 ;; *************** function _color_click_init *****************
  9583 ;; Defined at:
  9584 ;;		line 7 in file "color.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      void 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9602 ;;Total ram usage:        1 bytes
  9603 ;; Hardware stack levels used: 1
  9604 ;; Hardware stack levels required when called: 3
  9605 ;; This function calls:
  9606 ;;		_I2C_2_Master_Init
  9607 ;;		_color_writetoaddr
  9608 ;; This function is called by:
  9609 ;;		_main
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text45
  9614   005A6C                     __ptext45:
  9615                           	callstack 0
  9616   005A6C                     _color_click_init:
  9617                           	callstack 27
  9618   005A6C                     
  9619                           ;color.c: 10:     I2C_2_Master_Init();
  9620   005A6C  EC3E  F030         	call	_I2C_2_Master_Init	;wreg free
  9621   005A70                     
  9622                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9623   005A70  0E01               	movlw	1
  9624   005A72  6E03               	movwf	color_writetoaddr@value^0,c
  9625   005A74  0E00               	movlw	0
  9626   005A76  EC8D  F030         	call	_color_writetoaddr
  9627   005A7A                     
  9628                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9629   005A7A  0E3F               	movlw	63
  9630   005A7C  6E05               	movwf	??_color_click_init^0,c
  9631   005A7E  0E55               	movlw	85
  9632   005A80                     u6177:
  9633   005A80  2EE8               	decfsz	wreg,f,c
  9634   005A82  D7FE               	bra	u6177
  9635   005A84  2E05               	decfsz	??_color_click_init^0,f,c
  9636   005A86  D7FC               	bra	u6177
  9637   005A88  F000               	nop	
  9638   005A8A                     
  9639                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9640   005A8A  0E03               	movlw	3
  9641   005A8C  6E03               	movwf	color_writetoaddr@value^0,c
  9642   005A8E  0E00               	movlw	0
  9643   005A90  EC8D  F030         	call	_color_writetoaddr
  9644   005A94                     
  9645                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9646   005A94  0ED5               	movlw	213
  9647   005A96  6E03               	movwf	color_writetoaddr@value^0,c
  9648   005A98  0E01               	movlw	1
  9649   005A9A  EC8D  F030         	call	_color_writetoaddr
  9650   005A9E                     
  9651                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9652   005A9E  0E00               	movlw	0
  9653   005AA0  6E03               	movwf	color_writetoaddr@value^0,c
  9654   005AA2  0E0F               	movlw	15
  9655   005AA4  EC8D  F030         	call	_color_writetoaddr
  9656   005AA8                     
  9657                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9658   005AA8  9287               	bcf	135,1,c	;volatile
  9659   005AAA                     
  9660                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9661   005AAA  9881               	bcf	129,4,c	;volatile
  9662   005AAC                     
  9663                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9664   005AAC  9E86               	bcf	134,7,c	;volatile
  9665   005AAE                     
  9666                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9667   005AAE  9684               	bcf	132,3,c	;volatile
  9668   005AB0                     
  9669                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9670   005AB0  9884               	bcf	132,4,c	;volatile
  9671   005AB2                     
  9672                           ;color.c: 28:     LATGbits.LATG1=0;
  9673   005AB2  927F               	bcf	127,1,c	;volatile
  9674   005AB4                     
  9675                           ;color.c: 29:     LATFbits.LATF7=0;
  9676   005AB4  9E7E               	bcf	126,7,c	;volatile
  9677   005AB6                     
  9678                           ;color.c: 30:     LATAbits.LATA4=0;
  9679   005AB6  9879               	bcf	121,4,c	;volatile
  9680   005AB8                     
  9681                           ;color.c: 32:     LATDbits.LATD3=0;
  9682   005AB8  967C               	bcf	124,3,c	;volatile
  9683   005ABA                     
  9684                           ;color.c: 33:     LATDbits.LATD4=0;
  9685   005ABA  987C               	bcf	124,4,c	;volatile
  9686   005ABC  0012               	return		;funcret
  9687   005ABE                     __end_of_color_click_init:
  9688                           	callstack 0
  9689                           
  9690 ;; *************** function _color_writetoaddr *****************
  9691 ;; Defined at:
  9692 ;;		line 41 in file "color.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  address         1    wreg     unsigned char 
  9695 ;;  value           1    2[COMRAM] unsigned char 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  address         1    3[COMRAM] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      void 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0, cstack
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9707 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9711 ;;Total ram usage:        2 bytes
  9712 ;; Hardware stack levels used: 1
  9713 ;; Hardware stack levels required when called: 2
  9714 ;; This function calls:
  9715 ;;		_I2C_2_Master_Start
  9716 ;;		_I2C_2_Master_Stop
  9717 ;;		_I2C_2_Master_Write
  9718 ;; This function is called by:
  9719 ;;		_color_click_init
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           	psect	text46
  9724   00611A                     __ptext46:
  9725                           	callstack 0
  9726   00611A                     _color_writetoaddr:
  9727                           	callstack 27
  9728                           
  9729                           ;incstack = 0
  9730                           ;color_writetoaddr@address stored from wreg
  9731   00611A  6E04               	movwf	color_writetoaddr@address^0,c
  9732   00611C                     
  9733                           ;color.c: 42:     I2C_2_Master_Start();
  9734   00611C  ECD8  F030         	call	_I2C_2_Master_Start	;wreg free
  9735                           
  9736                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9737   006120  0E52               	movlw	82
  9738   006122  ECC8  F030         	call	_I2C_2_Master_Write
  9739                           
  9740                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9741   006126  5004               	movf	color_writetoaddr@address^0,w,c
  9742   006128  0980               	iorlw	128
  9743   00612A  ECC8  F030         	call	_I2C_2_Master_Write
  9744                           
  9745                           ;color.c: 45:     I2C_2_Master_Write(value);
  9746   00612E  5003               	movf	color_writetoaddr@value^0,w,c
  9747   006130  ECC8  F030         	call	_I2C_2_Master_Write
  9748                           
  9749                           ;color.c: 46:     I2C_2_Master_Stop();
  9750   006134  ECD3  F030         	call	_I2C_2_Master_Stop	;wreg free
  9751   006138  0012               	return		;funcret
  9752   00613A                     __end_of_color_writetoaddr:
  9753                           	callstack 0
  9754                           
  9755 ;; *************** function _I2C_2_Master_Write *****************
  9756 ;; Defined at:
  9757 ;;		line 45 in file "i2c.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  data_byte       1    wreg     unsigned char 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  data_byte       1    1[COMRAM] unsigned char 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      void 
  9764 ;; Registers used:
  9765 ;;		wreg, status,2, status,0, cstack
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9775 ;;Total ram usage:        1 bytes
  9776 ;; Hardware stack levels used: 1
  9777 ;; Hardware stack levels required when called: 1
  9778 ;; This function calls:
  9779 ;;		_I2C_2_Master_Idle
  9780 ;; This function is called by:
  9781 ;;		_color_writetoaddr
  9782 ;;		_color_read_lum
  9783 ;;		_color_read_Red
  9784 ;;		_color_read_Green
  9785 ;;		_color_read_Blue
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text47
  9790   006190                     __ptext47:
  9791                           	callstack 0
  9792   006190                     _I2C_2_Master_Write:
  9793                           	callstack 27
  9794                           
  9795                           ;incstack = 0
  9796                           ;I2C_2_Master_Write@data_byte stored from wreg
  9797   006190  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9798   006192                     
  9799                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9800   006192  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  9801   006196                     
  9802                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9803   006196  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9804   00619A  0012               	return		;funcret
  9805   00619C                     __end_of_I2C_2_Master_Write:
  9806                           	callstack 0
  9807                           
  9808 ;; *************** function _I2C_2_Master_Stop *****************
  9809 ;; Defined at:
  9810 ;;		line 39 in file "i2c.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;		None
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		wreg, status,2, status,0, cstack
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;Total ram usage:        0 bytes
  9829 ;; Hardware stack levels used: 1
  9830 ;; Hardware stack levels required when called: 1
  9831 ;; This function calls:
  9832 ;;		_I2C_2_Master_Idle
  9833 ;; This function is called by:
  9834 ;;		_color_writetoaddr
  9835 ;;		_color_read_lum
  9836 ;;		_color_read_Red
  9837 ;;		_color_read_Green
  9838 ;;		_color_read_Blue
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text48
  9843   0061A6                     __ptext48:
  9844                           	callstack 0
  9845   0061A6                     _I2C_2_Master_Stop:
  9846                           	callstack 27
  9847   0061A6                     
  9848                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9849   0061A6  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  9850   0061AA                     
  9851                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9852   0061AA  010E               	movlb	14	; () banked
  9853   0061AC  85DA               	bsf	218,2,b	;volatile
  9854   0061AE                     
  9855                           ; BSR set to: 14
  9856   0061AE  0012               	return		;funcret
  9857   0061B0                     __end_of_I2C_2_Master_Stop:
  9858                           	callstack 0
  9859                           
  9860 ;; *************** function _I2C_2_Master_Start *****************
  9861 ;; Defined at:
  9862 ;;		line 27 in file "i2c.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;		None
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;		None
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  1    wreg      void 
  9869 ;; Registers used:
  9870 ;;		wreg, status,2, status,0, cstack
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9880 ;;Total ram usage:        0 bytes
  9881 ;; Hardware stack levels used: 1
  9882 ;; Hardware stack levels required when called: 1
  9883 ;; This function calls:
  9884 ;;		_I2C_2_Master_Idle
  9885 ;; This function is called by:
  9886 ;;		_color_writetoaddr
  9887 ;;		_color_read_lum
  9888 ;;		_color_read_Red
  9889 ;;		_color_read_Green
  9890 ;;		_color_read_Blue
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text49
  9895   0061B0                     __ptext49:
  9896                           	callstack 0
  9897   0061B0                     _I2C_2_Master_Start:
  9898                           	callstack 27
  9899   0061B0                     
  9900                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9901   0061B0  EC53  F030         	call	_I2C_2_Master_Idle	;wreg free
  9902   0061B4                     
  9903                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9904   0061B4  010E               	movlb	14	; () banked
  9905   0061B6  81DA               	bsf	218,0,b	;volatile
  9906   0061B8                     
  9907                           ; BSR set to: 14
  9908   0061B8  0012               	return		;funcret
  9909   0061BA                     __end_of_I2C_2_Master_Start:
  9910                           	callstack 0
  9911                           
  9912 ;; *************** function _I2C_2_Master_Idle *****************
  9913 ;; Defined at:
  9914 ;;		line 22 in file "i2c.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;		None
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, status,2, status,0
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9932 ;;Total ram usage:        1 bytes
  9933 ;; Hardware stack levels used: 1
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_I2C_2_Master_Start
  9938 ;;		_I2C_2_Master_RepStart
  9939 ;;		_I2C_2_Master_Stop
  9940 ;;		_I2C_2_Master_Write
  9941 ;;		_I2C_2_Master_Read
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text50
  9946   0060A6                     __ptext50:
  9947                           	callstack 0
  9948   0060A6                     _I2C_2_Master_Idle:
  9949                           	callstack 27
  9950   0060A6                     l143:
  9951   0060A6  010E               	movlb	14	; () banked
  9952   0060A8  B5D8               	btfsc	216,2,b	;volatile
  9953   0060AA  EF59  F030         	goto	u4451
  9954   0060AE  EF5B  F030         	goto	u4450
  9955   0060B2                     u4451:
  9956   0060B2  EF53  F030         	goto	l143
  9957   0060B6                     u4450:
  9958   0060B6                     
  9959                           ; BSR set to: 14
  9960   0060B6  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9961   0060BA  0E1F               	movlw	31
  9962   0060BC  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9963   0060BE  A4D8               	btfss	status,2,c
  9964   0060C0  EF64  F030         	goto	u4461
  9965   0060C4  EF66  F030         	goto	u4460
  9966   0060C8                     u4461:
  9967   0060C8  EF53  F030         	goto	l143
  9968   0060CC                     u4460:
  9969   0060CC                     
  9970                           ; BSR set to: 14
  9971   0060CC  0012               	return		;funcret
  9972   0060CE                     __end_of_I2C_2_Master_Idle:
  9973                           	callstack 0
  9974                           
  9975 ;; *************** function _I2C_2_Master_Init *****************
  9976 ;; Defined at:
  9977 ;;		line 4 in file "i2c.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      void 
  9984 ;; Registers used:
  9985 ;;		wreg, status,2
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9995 ;;Total ram usage:        0 bytes
  9996 ;; Hardware stack levels used: 1
  9997 ;; This function calls:
  9998 ;;		Nothing
  9999 ;; This function is called by:
 10000 ;;		_color_click_init
 10001 ;;		_main
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text51
 10006   00607C                     __ptext51:
 10007                           	callstack 0
 10008   00607C                     _I2C_2_Master_Init:
 10009                           	callstack 29
 10010   00607C                     
 10011                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 10012   00607C  010E               	movlb	14	; () banked
 10013   00607E  51D9               	movf	217,w,b	;volatile
 10014   006080  0BF0               	andlw	-16
 10015   006082  0908               	iorlw	8
 10016   006084  6FD9               	movwf	217,b	;volatile
 10017   006086                     
 10018                           ; BSR set to: 14
 10019                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 10020   006086  8BD9               	bsf	217,5,b	;volatile
 10021                           
 10022                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 10023   006088  0E9F               	movlw	159
 10024   00608A  6FD6               	movwf	214,b	;volatile
 10025   00608C                     
 10026                           ; BSR set to: 14
 10027                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 10028   00608C  8A84               	bsf	132,5,c	;volatile
 10029   00608E                     
 10030                           ; BSR set to: 14
 10031                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 10032   00608E  8C84               	bsf	132,6,c	;volatile
 10033   006090                     
 10034                           ; BSR set to: 14
 10035                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 10036   006090  9BA7               	bcf	167,5,b	;volatile
 10037   006092                     
 10038                           ; BSR set to: 14
 10039                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 10040   006092  9DA7               	bcf	167,6,b	;volatile
 10041                           
 10042                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 10043   006094  0E1D               	movlw	29
 10044   006096  6F1D               	movwf	29,b	;volatile
 10045                           
 10046                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 10047   006098  0E1E               	movlw	30
 10048   00609A  6F1C               	movwf	28,b	;volatile
 10049                           
 10050                           ;i2c.c: 18:   RD5PPS=0x1C;
 10051   00609C  0E1C               	movlw	28
 10052   00609E  6F6F               	movwf	111,b	;volatile
 10053                           
 10054                           ;i2c.c: 19:   RD6PPS=0x1B;
 10055   0060A0  0E1B               	movlw	27
 10056   0060A2  6F70               	movwf	112,b	;volatile
 10057   0060A4                     
 10058                           ; BSR set to: 14
 10059   0060A4  0012               	return		;funcret
 10060   0060A6                     __end_of_I2C_2_Master_Init:
 10061                           	callstack 0
 10062                           
 10063 ;; *************** function _YellowMove *****************
 10064 ;; Defined at:
 10065 ;;		line 288 in file "dc_motor.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10068 ;;		 -> motorL(9), 
 10069 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10070 ;;		 -> motorR(9), 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;		None
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      void 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10086 ;;Total ram usage:        4 bytes
 10087 ;; Hardware stack levels used: 1
 10088 ;; Hardware stack levels required when called: 4
 10089 ;; This function calls:
 10090 ;;		_reverseDetect
 10091 ;;		_reverseOneBlock
 10092 ;;		_turnRight45
 10093 ;; This function is called by:
 10094 ;;		_main
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text52
 10099   005ABE                     __ptext52:
 10100                           	callstack 0
 10101   005ABE                     _YellowMove:
 10102                           	callstack 26
 10103   005ABE                     
 10104                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10105   005ABE  0EC7               	movlw	low _motorL
 10106   005AC0  6E1A               	movwf	reverseDetect@mL^0,c
 10107   005AC2  0E01               	movlw	high _motorL
 10108   005AC4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10109   005AC6  0EBE               	movlw	low _motorR
 10110   005AC8  6E1C               	movwf	reverseDetect@mR^0,c
 10111   005ACA  0E01               	movlw	high _motorR
 10112   005ACC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10113   005ACE  EC36  F02C         	call	_reverseDetect	;wreg free
 10114                           
 10115                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10116   005AD2  0EC7               	movlw	low _motorL
 10117   005AD4  6E1A               	movwf	reverseOneBlock@mL^0,c
 10118   005AD6  0E01               	movlw	high _motorL
 10119   005AD8  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10120   005ADA  0EBE               	movlw	low _motorR
 10121   005ADC  6E1C               	movwf	reverseOneBlock@mR^0,c
 10122   005ADE  0E01               	movlw	high _motorR
 10123   005AE0  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10124   005AE2  EC09  F02C         	call	_reverseOneBlock	;wreg free
 10125                           
 10126                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10127   005AE6  0EC7               	movlw	low _motorL
 10128   005AE8  6E1A               	movwf	turnRight45@mL^0,c
 10129   005AEA  0E01               	movlw	high _motorL
 10130   005AEC  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10131   005AEE  0EBE               	movlw	low _motorR
 10132   005AF0  6E1C               	movwf	turnRight45@mR^0,c
 10133   005AF2  0E01               	movlw	high _motorR
 10134   005AF4  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10135   005AF6  EC79  F02E         	call	_turnRight45	;wreg free
 10136                           
 10137                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10138   005AFA  0EC7               	movlw	low _motorL
 10139   005AFC  6E1A               	movwf	turnRight45@mL^0,c
 10140   005AFE  0E01               	movlw	high _motorL
 10141   005B00  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10142   005B02  0EBE               	movlw	low _motorR
 10143   005B04  6E1C               	movwf	turnRight45@mR^0,c
 10144   005B06  0E01               	movlw	high _motorR
 10145   005B08  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10146   005B0A  EC79  F02E         	call	_turnRight45	;wreg free
 10147   005B0E  0012               	return		;funcret
 10148   005B10                     __end_of_YellowMove:
 10149                           	callstack 0
 10150                           
 10151 ;; *************** function _turnRight45 *****************
 10152 ;; Defined at:
 10153 ;;		line 211 in file "dc_motor.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10156 ;;		 -> motorL(9), 
 10157 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10158 ;;		 -> motorR(9), 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;		None
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  1    wreg      void 
 10163 ;; Registers used:
 10164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10174 ;;Total ram usage:        6 bytes
 10175 ;; Hardware stack levels used: 1
 10176 ;; Hardware stack levels required when called: 3
 10177 ;; This function calls:
 10178 ;;		_TurnDelay
 10179 ;;		_stop
 10180 ;;		_turnRight
 10181 ;; This function is called by:
 10182 ;;		_RedMove
 10183 ;;		_BlueMove
 10184 ;;		_YellowMove
 10185 ;;		_OrangeMove
 10186 ;;		_ReverseYellow
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text53
 10191   005CF2                     __ptext53:
 10192                           	callstack 0
 10193   005CF2                     _turnRight45:
 10194                           	callstack 25
 10195   005CF2                     
 10196                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10197   005CF2  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10198   005CF6  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10199   005CFA  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10200   005CFE  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10201   005D02  ECD0  F028         	call	_turnRight	;wreg free
 10202   005D06                     
 10203                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10204   005D06  C0F9  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10205   005D0A  C0FA  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10206   005D0E  EC0B  F030         	call	_TurnDelay	;wreg free
 10207   005D12                     
 10208                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10209   005D12  0EC7               	movlw	low _motorL
 10210   005D14  6E14               	movwf	stop@mL^0,c
 10211   005D16  0E01               	movlw	high _motorL
 10212   005D18  6E15               	movwf	(stop@mL+1)^0,c
 10213   005D1A  0EBE               	movlw	low _motorR
 10214   005D1C  6E16               	movwf	stop@mR^0,c
 10215   005D1E  0E01               	movlw	high _motorR
 10216   005D20  6E17               	movwf	(stop@mR+1)^0,c
 10217   005D22  EC91  F02A         	call	_stop	;wreg free
 10218   005D26                     
 10219                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10220   005D26  0E05               	movlw	5
 10221   005D28  6E1F               	movwf	(??_turnRight45+1)^0,c
 10222   005D2A  0E0F               	movlw	15
 10223   005D2C  6E1E               	movwf	??_turnRight45^0,c
 10224   005D2E  0EF1               	movlw	241
 10225   005D30                     u6187:
 10226   005D30  2EE8               	decfsz	wreg,f,c
 10227   005D32  D7FE               	bra	u6187
 10228   005D34  2E1E               	decfsz	??_turnRight45^0,f,c
 10229   005D36  D7FC               	bra	u6187
 10230   005D38  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10231   005D3A  D7FA               	bra	u6187
 10232   005D3C  F000               	nop	
 10233   005D3E  0012               	return		;funcret
 10234   005D40                     __end_of_turnRight45:
 10235                           	callstack 0
 10236                           
 10237 ;; *************** function _turnRight *****************
 10238 ;; Defined at:
 10239 ;;		line 129 in file "dc_motor.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10242 ;;		 -> motorL(9), 
 10243 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10244 ;;		 -> motorR(9), 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;		None
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  1    wreg      void 
 10249 ;; Registers used:
 10250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10260 ;;Total ram usage:        6 bytes
 10261 ;; Hardware stack levels used: 1
 10262 ;; Hardware stack levels required when called: 2
 10263 ;; This function calls:
 10264 ;;		_setMotorPWM
 10265 ;; This function is called by:
 10266 ;;		_turnRight45
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text54
 10271   0051A0                     __ptext54:
 10272                           	callstack 0
 10273   0051A0                     _turnRight:
 10274                           	callstack 25
 10275   0051A0                     
 10276                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10277   0051A0  EE20 F001          	lfsr	2,1
 10278   0051A4  5014               	movf	turnRight@mL^0,w,c
 10279   0051A6  26D9               	addwf	fsr2l,f,c
 10280   0051A8  5015               	movf	(turnRight@mL+1)^0,w,c
 10281   0051AA  22DA               	addwfc	fsr2h,f,c
 10282   0051AC  0E01               	movlw	1
 10283   0051AE  6EDF               	movwf	indf2,c
 10284                           
 10285                           ;dc_motor.c: 132:     mR->direction =0;
 10286   0051B0  EE20 F001          	lfsr	2,1
 10287   0051B4  5016               	movf	turnRight@mR^0,w,c
 10288   0051B6  26D9               	addwf	fsr2l,f,c
 10289   0051B8  5017               	movf	(turnRight@mR+1)^0,w,c
 10290   0051BA  22DA               	addwfc	fsr2h,f,c
 10291   0051BC  0E00               	movlw	0
 10292   0051BE  6EDF               	movwf	indf2,c
 10293                           
 10294                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10295   0051C0  EF06  F029         	goto	l4729
 10296   0051C4                     l4721:
 10297                           
 10298                           ;dc_motor.c: 136:         mL->power+=10;
 10299   0051C4  C014  FFD9         	movff	turnRight@mL,fsr2l
 10300   0051C8  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10301   0051CC  0E0A               	movlw	10
 10302   0051CE  26DF               	addwf	indf2,f,c
 10303                           
 10304                           ;dc_motor.c: 137:         mR->power+=10;
 10305   0051D0  C016  FFD9         	movff	turnRight@mR,fsr2l
 10306   0051D4  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10307   0051D8  0E0A               	movlw	10
 10308   0051DA  26DF               	addwf	indf2,f,c
 10309   0051DC                     
 10310                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10311   0051DC  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10312   0051E0  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10313   0051E4  EC1F  F024         	call	_setMotorPWM	;wreg free
 10314   0051E8                     
 10315                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10316   0051E8  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10317   0051EC  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10318   0051F0  EC1F  F024         	call	_setMotorPWM	;wreg free
 10319   0051F4                     
 10320                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10321   0051F4  0E02               	movlw	2
 10322   0051F6  6E19               	movwf	(??_turnRight+1)^0,c
 10323   0051F8  0EA0               	movlw	160
 10324   0051FA  6E18               	movwf	??_turnRight^0,c
 10325   0051FC  0E92               	movlw	146
 10326   0051FE                     u6197:
 10327   0051FE  2EE8               	decfsz	wreg,f,c
 10328   005200  D7FE               	bra	u6197
 10329   005202  2E18               	decfsz	??_turnRight^0,f,c
 10330   005204  D7FC               	bra	u6197
 10331   005206  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10332   005208  D7FA               	bra	u6197
 10333   00520A  D000               	nop2	
 10334   00520C                     l4729:
 10335   00520C  C014  FFD9         	movff	turnRight@mL,fsr2l
 10336   005210  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10337   005214  0E1E               	movlw	30
 10338   005216  60DF               	cpfslt	indf2,c
 10339   005218  EF10  F029         	goto	u4531
 10340   00521C  EF12  F029         	goto	u4530
 10341   005220                     u4531:
 10342   005220  EF1E  F029         	goto	l512
 10343   005224                     u4530:
 10344   005224  C016  FFD9         	movff	turnRight@mR,fsr2l
 10345   005228  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10346   00522C  0E1D               	movlw	29
 10347   00522E  64DF               	cpfsgt	indf2,c
 10348   005230  EF1C  F029         	goto	u4541
 10349   005234  EF1E  F029         	goto	u4540
 10350   005238                     u4541:
 10351   005238  EFE2  F028         	goto	l4721
 10352   00523C                     u4540:
 10353   00523C                     l512:
 10354   00523C  0012               	return		;funcret
 10355   00523E                     __end_of_turnRight:
 10356                           	callstack 0
 10357                           
 10358 ;; *************** function _Timer0_init *****************
 10359 ;; Defined at:
 10360 ;;		line 8 in file "timers.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;		None
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  1    wreg      void 
 10367 ;; Registers used:
 10368 ;;		wreg, status,2
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;Total ram usage:        0 bytes
 10379 ;; Hardware stack levels used: 1
 10380 ;; This function calls:
 10381 ;;		Nothing
 10382 ;; This function is called by:
 10383 ;;		_main
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text55
 10388   00613A                     __ptext55:
 10389                           	callstack 0
 10390   00613A                     _Timer0_init:
 10391                           	callstack 30
 10392   00613A                     
 10393                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10394   00613A  50D6               	movf	214,w,c	;volatile
 10395   00613C  0B1F               	andlw	-225
 10396   00613E  0940               	iorlw	64
 10397   006140  6ED6               	movwf	214,c	;volatile
 10398   006142                     
 10399                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10400   006142  88D6               	bsf	214,4,c	;volatile
 10401                           
 10402                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
 10403   006144  50D6               	movf	214,w,c	;volatile
 10404   006146  0BF0               	andlw	-16
 10405   006148  090E               	iorlw	14
 10406   00614A  6ED6               	movwf	214,c	;volatile
 10407   00614C                     
 10408                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10409   00614C  88D5               	bsf	213,4,c	;volatile
 10410                           
 10411                           ;timers.c: 16:     TMR0H=0;
 10412   00614E  0E00               	movlw	0
 10413   006150  6ED4               	movwf	212,c	;volatile
 10414                           
 10415                           ;timers.c: 17:     TMR0L=0;
 10416   006152  0E00               	movlw	0
 10417   006154  6ED3               	movwf	211,c	;volatile
 10418   006156                     
 10419                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10420   006156  9ED5               	bcf	213,7,c	;volatile
 10421   006158  0012               	return		;funcret
 10422   00615A                     __end_of_Timer0_init:
 10423                           	callstack 0
 10424                           
 10425 ;; *************** function _RetryMove *****************
 10426 ;; Defined at:
 10427 ;;		line 325 in file "dc_motor.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10430 ;;		 -> motorL(9), 
 10431 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10432 ;;		 -> motorR(9), 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      void 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10448 ;;Total ram usage:        6 bytes
 10449 ;; Hardware stack levels used: 1
 10450 ;; Hardware stack levels required when called: 3
 10451 ;; This function calls:
 10452 ;;		_fullSpeedAhead
 10453 ;;		_fullSpeedBack
 10454 ;;		_stop
 10455 ;; This function is called by:
 10456 ;;		_main
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text56
 10461   0054A0                     __ptext56:
 10462                           	callstack 0
 10463   0054A0                     _RetryMove:
 10464                           	callstack 27
 10465   0054A0                     
 10466                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
 10467   0054A0  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
 10468   0054A4  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
 10469   0054A8  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
 10470   0054AC  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
 10471   0054B0  EC6E  F029         	call	_fullSpeedBack	;wreg free
 10472   0054B4                     
 10473                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10474   0054B4  0E29               	movlw	41
 10475   0054B6  6E1F               	movwf	(??_RetryMove+1)^0,c
 10476   0054B8  0E96               	movlw	150
 10477   0054BA  6E1E               	movwf	??_RetryMove^0,c
 10478   0054BC  0E7F               	movlw	127
 10479   0054BE                     u6207:
 10480   0054BE  2EE8               	decfsz	wreg,f,c
 10481   0054C0  D7FE               	bra	u6207
 10482   0054C2  2E1E               	decfsz	??_RetryMove^0,f,c
 10483   0054C4  D7FC               	bra	u6207
 10484   0054C6  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10485   0054C8  D7FA               	bra	u6207
 10486   0054CA  F000               	nop	
 10487   0054CC                     
 10488                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 10489   0054CC  0EC7               	movlw	low _motorL
 10490   0054CE  6E14               	movwf	stop@mL^0,c
 10491   0054D0  0E01               	movlw	high _motorL
 10492   0054D2  6E15               	movwf	(stop@mL+1)^0,c
 10493   0054D4  0EBE               	movlw	low _motorR
 10494   0054D6  6E16               	movwf	stop@mR^0,c
 10495   0054D8  0E01               	movlw	high _motorR
 10496   0054DA  6E17               	movwf	(stop@mR+1)^0,c
 10497   0054DC  EC91  F02A         	call	_stop	;wreg free
 10498   0054E0                     
 10499                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 10500   0054E0  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10501   0054E4  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10502   0054E8  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10503   0054EC  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10504   0054F0  ECBD  F029         	call	_fullSpeedAhead	;wreg free
 10505   0054F4                     
 10506                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10507   0054F4  0E29               	movlw	41
 10508   0054F6  6E1F               	movwf	(??_RetryMove+1)^0,c
 10509   0054F8  0E96               	movlw	150
 10510   0054FA  6E1E               	movwf	??_RetryMove^0,c
 10511   0054FC  0E7F               	movlw	127
 10512   0054FE                     u6217:
 10513   0054FE  2EE8               	decfsz	wreg,f,c
 10514   005500  D7FE               	bra	u6217
 10515   005502  2E1E               	decfsz	??_RetryMove^0,f,c
 10516   005504  D7FC               	bra	u6217
 10517   005506  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10518   005508  D7FA               	bra	u6217
 10519   00550A  F000               	nop	
 10520                           
 10521                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 10522   00550C  0EC7               	movlw	low _motorL
 10523   00550E  6E14               	movwf	stop@mL^0,c
 10524   005510  0E01               	movlw	high _motorL
 10525   005512  6E15               	movwf	(stop@mL+1)^0,c
 10526   005514  0EBE               	movlw	low _motorR
 10527   005516  6E16               	movwf	stop@mR^0,c
 10528   005518  0E01               	movlw	high _motorR
 10529   00551A  6E17               	movwf	(stop@mR+1)^0,c
 10530   00551C  EC91  F02A         	call	_stop	;wreg free
 10531   005520  0012               	return		;funcret
 10532   005522                     __end_of_RetryMove:
 10533                           	callstack 0
 10534                           
 10535 ;; *************** function _PinkMove *****************
 10536 ;; Defined at:
 10537 ;;		line 298 in file "dc_motor.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10540 ;;		 -> motorL(9), 
 10541 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10542 ;;		 -> motorR(9), 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;		None
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  1    wreg      void 
 10547 ;; Registers used:
 10548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10549 ;; Tracked objects:
 10550 ;;		On entry : 0/0
 10551 ;;		On exit  : 0/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10558 ;;Total ram usage:        4 bytes
 10559 ;; Hardware stack levels used: 1
 10560 ;; Hardware stack levels required when called: 4
 10561 ;; This function calls:
 10562 ;;		_reverseDetect
 10563 ;;		_reverseOneBlock
 10564 ;;		_turnLeft45
 10565 ;; This function is called by:
 10566 ;;		_main
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text57
 10571   005B10                     __ptext57:
 10572                           	callstack 0
 10573   005B10                     _PinkMove:
 10574                           	callstack 26
 10575   005B10                     
 10576                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10577   005B10  0EC7               	movlw	low _motorL
 10578   005B12  6E1A               	movwf	reverseDetect@mL^0,c
 10579   005B14  0E01               	movlw	high _motorL
 10580   005B16  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10581   005B18  0EBE               	movlw	low _motorR
 10582   005B1A  6E1C               	movwf	reverseDetect@mR^0,c
 10583   005B1C  0E01               	movlw	high _motorR
 10584   005B1E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10585   005B20  EC36  F02C         	call	_reverseDetect	;wreg free
 10586                           
 10587                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10588   005B24  0EC7               	movlw	low _motorL
 10589   005B26  6E1A               	movwf	reverseOneBlock@mL^0,c
 10590   005B28  0E01               	movlw	high _motorL
 10591   005B2A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10592   005B2C  0EBE               	movlw	low _motorR
 10593   005B2E  6E1C               	movwf	reverseOneBlock@mR^0,c
 10594   005B30  0E01               	movlw	high _motorR
 10595   005B32  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10596   005B34  EC09  F02C         	call	_reverseOneBlock	;wreg free
 10597                           
 10598                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10599   005B38  0EC7               	movlw	low _motorL
 10600   005B3A  6E1A               	movwf	turnLeft45@mL^0,c
 10601   005B3C  0E01               	movlw	high _motorL
 10602   005B3E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10603   005B40  0EBE               	movlw	low _motorR
 10604   005B42  6E1C               	movwf	turnLeft45@mR^0,c
 10605   005B44  0E01               	movlw	high _motorR
 10606   005B46  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10607   005B48  ECA0  F02E         	call	_turnLeft45	;wreg free
 10608                           
 10609                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10610   005B4C  0EC7               	movlw	low _motorL
 10611   005B4E  6E1A               	movwf	turnLeft45@mL^0,c
 10612   005B50  0E01               	movlw	high _motorL
 10613   005B52  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10614   005B54  0EBE               	movlw	low _motorR
 10615   005B56  6E1C               	movwf	turnLeft45@mR^0,c
 10616   005B58  0E01               	movlw	high _motorR
 10617   005B5A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10618   005B5C  ECA0  F02E         	call	_turnLeft45	;wreg free
 10619   005B60  0012               	return		;funcret
 10620   005B62                     __end_of_PinkMove:
 10621                           	callstack 0
 10622                           
 10623 ;; *************** function _turnLeft45 *****************
 10624 ;; Defined at:
 10625 ;;		line 218 in file "dc_motor.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10628 ;;		 -> motorL(9), 
 10629 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10630 ;;		 -> motorR(9), 
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;		None
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10646 ;;Total ram usage:        6 bytes
 10647 ;; Hardware stack levels used: 1
 10648 ;; Hardware stack levels required when called: 3
 10649 ;; This function calls:
 10650 ;;		_TurnDelay
 10651 ;;		_stop
 10652 ;;		_turnLeft
 10653 ;; This function is called by:
 10654 ;;		_GreenMove
 10655 ;;		_PinkMove
 10656 ;;		_LightBlueMove
 10657 ;;		_ReversePink
 10658 ;;		_turnCalibration
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text58
 10663   005D40                     __ptext58:
 10664                           	callstack 0
 10665   005D40                     _turnLeft45:
 10666                           	callstack 26
 10667   005D40                     
 10668                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10669   005D40  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10670   005D44  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10671   005D48  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10672   005D4C  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10673   005D50  EC1F  F029         	call	_turnLeft	;wreg free
 10674   005D54                     
 10675                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10676   005D54  C0F9  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10677   005D58  C0FA  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10678   005D5C  EC0B  F030         	call	_TurnDelay	;wreg free
 10679   005D60                     
 10680                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10681   005D60  0EC7               	movlw	low _motorL
 10682   005D62  6E14               	movwf	stop@mL^0,c
 10683   005D64  0E01               	movlw	high _motorL
 10684   005D66  6E15               	movwf	(stop@mL+1)^0,c
 10685   005D68  0EBE               	movlw	low _motorR
 10686   005D6A  6E16               	movwf	stop@mR^0,c
 10687   005D6C  0E01               	movlw	high _motorR
 10688   005D6E  6E17               	movwf	(stop@mR+1)^0,c
 10689   005D70  EC91  F02A         	call	_stop	;wreg free
 10690   005D74                     
 10691                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10692   005D74  0E05               	movlw	5
 10693   005D76  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10694   005D78  0E0F               	movlw	15
 10695   005D7A  6E1E               	movwf	??_turnLeft45^0,c
 10696   005D7C  0EF1               	movlw	241
 10697   005D7E                     u6227:
 10698   005D7E  2EE8               	decfsz	wreg,f,c
 10699   005D80  D7FE               	bra	u6227
 10700   005D82  2E1E               	decfsz	??_turnLeft45^0,f,c
 10701   005D84  D7FC               	bra	u6227
 10702   005D86  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10703   005D88  D7FA               	bra	u6227
 10704   005D8A  F000               	nop	
 10705   005D8C  0012               	return		;funcret
 10706   005D8E                     __end_of_turnLeft45:
 10707                           	callstack 0
 10708                           
 10709 ;; *************** function _turnLeft *****************
 10710 ;; Defined at:
 10711 ;;		line 111 in file "dc_motor.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10714 ;;		 -> motorL(9), 
 10715 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10716 ;;		 -> motorR(9), 
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10732 ;;Total ram usage:        6 bytes
 10733 ;; Hardware stack levels used: 1
 10734 ;; Hardware stack levels required when called: 2
 10735 ;; This function calls:
 10736 ;;		_setMotorPWM
 10737 ;; This function is called by:
 10738 ;;		_turnLeft45
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text59
 10743   00523E                     __ptext59:
 10744                           	callstack 0
 10745   00523E                     _turnLeft:
 10746                           	callstack 26
 10747   00523E                     
 10748                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10749   00523E  EE20 F001          	lfsr	2,1
 10750   005242  5014               	movf	turnLeft@mL^0,w,c
 10751   005244  26D9               	addwf	fsr2l,f,c
 10752   005246  5015               	movf	(turnLeft@mL+1)^0,w,c
 10753   005248  22DA               	addwfc	fsr2h,f,c
 10754   00524A  0E00               	movlw	0
 10755   00524C  6EDF               	movwf	indf2,c
 10756                           
 10757                           ;dc_motor.c: 114:     mR->direction =1;
 10758   00524E  EE20 F001          	lfsr	2,1
 10759   005252  5016               	movf	turnLeft@mR^0,w,c
 10760   005254  26D9               	addwf	fsr2l,f,c
 10761   005256  5017               	movf	(turnLeft@mR+1)^0,w,c
 10762   005258  22DA               	addwfc	fsr2h,f,c
 10763   00525A  0E01               	movlw	1
 10764   00525C  6EDF               	movwf	indf2,c
 10765                           
 10766                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10767   00525E  EF55  F029         	goto	l4715
 10768   005262                     l4707:
 10769                           
 10770                           ;dc_motor.c: 118:         mL->power+=10;
 10771   005262  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10772   005266  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10773   00526A  0E0A               	movlw	10
 10774   00526C  26DF               	addwf	indf2,f,c
 10775                           
 10776                           ;dc_motor.c: 119:         mR->power+=10;
 10777   00526E  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10778   005272  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10779   005276  0E0A               	movlw	10
 10780   005278  26DF               	addwf	indf2,f,c
 10781   00527A                     
 10782                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10783   00527A  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10784   00527E  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10785   005282  EC1F  F024         	call	_setMotorPWM	;wreg free
 10786   005286                     
 10787                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10788   005286  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10789   00528A  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10790   00528E  EC1F  F024         	call	_setMotorPWM	;wreg free
 10791   005292                     
 10792                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10793   005292  0E02               	movlw	2
 10794   005294  6E19               	movwf	(??_turnLeft+1)^0,c
 10795   005296  0EA0               	movlw	160
 10796   005298  6E18               	movwf	??_turnLeft^0,c
 10797   00529A  0E92               	movlw	146
 10798   00529C                     u6237:
 10799   00529C  2EE8               	decfsz	wreg,f,c
 10800   00529E  D7FE               	bra	u6237
 10801   0052A0  2E18               	decfsz	??_turnLeft^0,f,c
 10802   0052A2  D7FC               	bra	u6237
 10803   0052A4  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10804   0052A6  D7FA               	bra	u6237
 10805   0052A8  D000               	nop2	
 10806   0052AA                     l4715:
 10807   0052AA  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10808   0052AE  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10809   0052B2  0E1E               	movlw	30
 10810   0052B4  60DF               	cpfslt	indf2,c
 10811   0052B6  EF5F  F029         	goto	u4511
 10812   0052BA  EF61  F029         	goto	u4510
 10813   0052BE                     u4511:
 10814   0052BE  EF6D  F029         	goto	l504
 10815   0052C2                     u4510:
 10816   0052C2  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10817   0052C6  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10818   0052CA  0E1D               	movlw	29
 10819   0052CC  64DF               	cpfsgt	indf2,c
 10820   0052CE  EF6B  F029         	goto	u4521
 10821   0052D2  EF6D  F029         	goto	u4520
 10822   0052D6                     u4521:
 10823   0052D6  EF31  F029         	goto	l4707
 10824   0052DA                     u4520:
 10825   0052DA                     l504:
 10826   0052DA  0012               	return		;funcret
 10827   0052DC                     __end_of_turnLeft:
 10828                           	callstack 0
 10829                           
 10830 ;; *************** function _TurnDelay *****************
 10831 ;; Defined at:
 10832 ;;		line 204 in file "dc_motor.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  Turn45Delay     2    0[COMRAM] int 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1    wreg      void 
 10839 ;; Registers used:
 10840 ;;		wreg, status,2, status,0
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10849 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10850 ;;Total ram usage:        3 bytes
 10851 ;; Hardware stack levels used: 1
 10852 ;; This function calls:
 10853 ;;		Nothing
 10854 ;; This function is called by:
 10855 ;;		_turnRight45
 10856 ;;		_turnLeft45
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text60
 10861   006016                     __ptext60:
 10862                           	callstack 0
 10863   006016                     _TurnDelay:
 10864                           	callstack 28
 10865   006016                     
 10866                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10867   006016  EF18  F030         	goto	l539
 10868   00601A                     l4749:
 10869                           
 10870                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10871   00601A  0E15               	movlw	21
 10872   00601C  6E03               	movwf	??_TurnDelay^0,c
 10873   00601E  0EC6               	movlw	198
 10874   006020                     u6247:
 10875   006020  2EE8               	decfsz	wreg,f,c
 10876   006022  D7FE               	bra	u6247
 10877   006024  2E03               	decfsz	??_TurnDelay^0,f,c
 10878   006026  D7FC               	bra	u6247
 10879   006028  D000               	nop2	
 10880   00602A                     
 10881                           ;dc_motor.c: 207:         Turn45Delay--;
 10882   00602A  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10883   00602C  A0D8               	btfss	status,0,c
 10884   00602E  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10885   006030                     l539:
 10886                           
 10887                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10888   006030  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10889   006032  EF25  F030         	goto	u4570
 10890   006036  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10891   006038  E106               	bnz	u4571
 10892   00603A  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10893   00603C  B0D8               	btfsc	status,0,c
 10894   00603E  EF23  F030         	goto	u4571
 10895   006042  EF25  F030         	goto	u4570
 10896   006046                     u4571:
 10897   006046  EF0D  F030         	goto	l4749
 10898   00604A                     u4570:
 10899   00604A  0012               	return		;funcret
 10900   00604C                     __end_of_TurnDelay:
 10901                           	callstack 0
 10902                           
 10903 ;; *************** function _reverseOneBlock *****************
 10904 ;; Defined at:
 10905 ;;		line 232 in file "dc_motor.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10908 ;;		 -> motorL(9), 
 10909 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10910 ;;		 -> motorR(9), 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;Total ram usage:        6 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; Hardware stack levels required when called: 3
 10929 ;; This function calls:
 10930 ;;		_fullSpeedBack
 10931 ;;		_stop
 10932 ;; This function is called by:
 10933 ;;		_YellowMove
 10934 ;;		_PinkMove
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text61
 10939   005812                     __ptext61:
 10940                           	callstack 0
 10941   005812                     _reverseOneBlock:
 10942                           	callstack 26
 10943   005812                     
 10944                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10945   005812  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10946   005816  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10947   00581A  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10948   00581E  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10949   005822  EC6E  F029         	call	_fullSpeedBack	;wreg free
 10950   005826                     
 10951                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10952   005826  0EA3               	movlw	163
 10953   005828  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10954   00582A  0E57               	movlw	87
 10955   00582C  6E1E               	movwf	??_reverseOneBlock^0,c
 10956   00582E  0E02               	movlw	2
 10957   005830                     u6257:
 10958   005830  2EE8               	decfsz	wreg,f,c
 10959   005832  D7FE               	bra	u6257
 10960   005834  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10961   005836  D7FC               	bra	u6257
 10962   005838  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10963   00583A  D7FA               	bra	u6257
 10964   00583C  D000               	nop2	
 10965   00583E                     
 10966                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10967   00583E  0EC7               	movlw	low _motorL
 10968   005840  6E14               	movwf	stop@mL^0,c
 10969   005842  0E01               	movlw	high _motorL
 10970   005844  6E15               	movwf	(stop@mL+1)^0,c
 10971   005846  0EBE               	movlw	low _motorR
 10972   005848  6E16               	movwf	stop@mR^0,c
 10973   00584A  0E01               	movlw	high _motorR
 10974   00584C  6E17               	movwf	(stop@mR+1)^0,c
 10975   00584E  EC91  F02A         	call	_stop	;wreg free
 10976                           
 10977                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10978   005852  0E05               	movlw	5
 10979   005854  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10980   005856  0E0F               	movlw	15
 10981   005858  6E1E               	movwf	??_reverseOneBlock^0,c
 10982   00585A  0EF1               	movlw	241
 10983   00585C                     u6267:
 10984   00585C  2EE8               	decfsz	wreg,f,c
 10985   00585E  D7FE               	bra	u6267
 10986   005860  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10987   005862  D7FC               	bra	u6267
 10988   005864  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10989   005866  D7FA               	bra	u6267
 10990   005868  F000               	nop	
 10991   00586A  0012               	return		;funcret
 10992   00586C                     __end_of_reverseOneBlock:
 10993                           	callstack 0
 10994                           
 10995 ;; *************** function _reverseDetect *****************
 10996 ;; Defined at:
 10997 ;;		line 225 in file "dc_motor.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11000 ;;		 -> motorL(9), 
 11001 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11002 ;;		 -> motorR(9), 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11017 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11018 ;;Total ram usage:        6 bytes
 11019 ;; Hardware stack levels used: 1
 11020 ;; Hardware stack levels required when called: 3
 11021 ;; This function calls:
 11022 ;;		_fullSpeedBack
 11023 ;;		_stop
 11024 ;; This function is called by:
 11025 ;;		_RedMove
 11026 ;;		_GreenMove
 11027 ;;		_BlueMove
 11028 ;;		_YellowMove
 11029 ;;		_PinkMove
 11030 ;;		_OrangeMove
 11031 ;;		_LightBlueMove
 11032 ;;		_ReverseYellow
 11033 ;;		_ReversePink
 11034 ;;		_go_Home
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text62
 11039   00586C                     __ptext62:
 11040                           	callstack 0
 11041   00586C                     _reverseDetect:
 11042                           	callstack 26
 11043   00586C                     
 11044                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 11045   00586C  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 11046   005870  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 11047   005874  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 11048   005878  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 11049   00587C  EC6E  F029         	call	_fullSpeedBack	;wreg free
 11050   005880                     
 11051                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 11052   005880  0E11               	movlw	17
 11053   005882  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11054   005884  0E3C               	movlw	60
 11055   005886  6E1E               	movwf	??_reverseDetect^0,c
 11056   005888  0ECB               	movlw	203
 11057   00588A                     u6277:
 11058   00588A  2EE8               	decfsz	wreg,f,c
 11059   00588C  D7FE               	bra	u6277
 11060   00588E  2E1E               	decfsz	??_reverseDetect^0,f,c
 11061   005890  D7FC               	bra	u6277
 11062   005892  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11063   005894  D7FA               	bra	u6277
 11064   005896  F000               	nop	
 11065   005898                     
 11066                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 11067   005898  0EC7               	movlw	low _motorL
 11068   00589A  6E14               	movwf	stop@mL^0,c
 11069   00589C  0E01               	movlw	high _motorL
 11070   00589E  6E15               	movwf	(stop@mL+1)^0,c
 11071   0058A0  0EBE               	movlw	low _motorR
 11072   0058A2  6E16               	movwf	stop@mR^0,c
 11073   0058A4  0E01               	movlw	high _motorR
 11074   0058A6  6E17               	movwf	(stop@mR+1)^0,c
 11075   0058A8  EC91  F02A         	call	_stop	;wreg free
 11076                           
 11077                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11078   0058AC  0E05               	movlw	5
 11079   0058AE  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11080   0058B0  0E0F               	movlw	15
 11081   0058B2  6E1E               	movwf	??_reverseDetect^0,c
 11082   0058B4  0EF1               	movlw	241
 11083   0058B6                     u6287:
 11084   0058B6  2EE8               	decfsz	wreg,f,c
 11085   0058B8  D7FE               	bra	u6287
 11086   0058BA  2E1E               	decfsz	??_reverseDetect^0,f,c
 11087   0058BC  D7FC               	bra	u6287
 11088   0058BE  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11089   0058C0  D7FA               	bra	u6287
 11090   0058C2  F000               	nop	
 11091   0058C4  0012               	return		;funcret
 11092   0058C6                     __end_of_reverseDetect:
 11093                           	callstack 0
 11094                           
 11095 ;; *************** function _fullSpeedBack *****************
 11096 ;; Defined at:
 11097 ;;		line 185 in file "dc_motor.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11100 ;;		 -> motorL(9), 
 11101 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11102 ;;		 -> motorR(9), 
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;Total ram usage:        6 bytes
 11119 ;; Hardware stack levels used: 1
 11120 ;; Hardware stack levels required when called: 2
 11121 ;; This function calls:
 11122 ;;		_setMotorPWM
 11123 ;; This function is called by:
 11124 ;;		_reverseDetect
 11125 ;;		_reverseOneBlock
 11126 ;;		_RetryMove
 11127 ;;		_Backhalfblock
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131                           	psect	text63
 11132   0052DC                     __ptext63:
 11133                           	callstack 0
 11134   0052DC                     _fullSpeedBack:
 11135                           	callstack 26
 11136   0052DC                     
 11137                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11138   0052DC  EE20 F001          	lfsr	2,1
 11139   0052E0  5014               	movf	fullSpeedBack@mL^0,w,c
 11140   0052E2  26D9               	addwf	fsr2l,f,c
 11141   0052E4  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11142   0052E6  22DA               	addwfc	fsr2h,f,c
 11143   0052E8  0E00               	movlw	0
 11144   0052EA  6EDF               	movwf	indf2,c
 11145                           
 11146                           ;dc_motor.c: 189:     mR->direction =0;
 11147   0052EC  EE20 F001          	lfsr	2,1
 11148   0052F0  5016               	movf	fullSpeedBack@mR^0,w,c
 11149   0052F2  26D9               	addwf	fsr2l,f,c
 11150   0052F4  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11151   0052F6  22DA               	addwfc	fsr2h,f,c
 11152   0052F8  0E00               	movlw	0
 11153   0052FA  6EDF               	movwf	indf2,c
 11154                           
 11155                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11156   0052FC  EFA4  F029         	goto	l4743
 11157   005300                     l4735:
 11158                           
 11159                           ;dc_motor.c: 192:         mL->power+=10;
 11160   005300  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11161   005304  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11162   005308  0E0A               	movlw	10
 11163   00530A  26DF               	addwf	indf2,f,c
 11164                           
 11165                           ;dc_motor.c: 193:         mR->power+=10;
 11166   00530C  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11167   005310  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11168   005314  0E0A               	movlw	10
 11169   005316  26DF               	addwf	indf2,f,c
 11170   005318                     
 11171                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11172   005318  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11173   00531C  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11174   005320  EC1F  F024         	call	_setMotorPWM	;wreg free
 11175   005324                     
 11176                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11177   005324  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11178   005328  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11179   00532C  EC1F  F024         	call	_setMotorPWM	;wreg free
 11180   005330                     
 11181                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11182   005330  0E02               	movlw	2
 11183   005332  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11184   005334  0EA0               	movlw	160
 11185   005336  6E18               	movwf	??_fullSpeedBack^0,c
 11186   005338  0E92               	movlw	146
 11187   00533A                     u6297:
 11188   00533A  2EE8               	decfsz	wreg,f,c
 11189   00533C  D7FE               	bra	u6297
 11190   00533E  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11191   005340  D7FC               	bra	u6297
 11192   005342  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11193   005344  D7FA               	bra	u6297
 11194   005346  D000               	nop2	
 11195   005348                     l4743:
 11196   005348  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11197   00534C  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11198   005350  0E1E               	movlw	30
 11199   005352  60DF               	cpfslt	indf2,c
 11200   005354  EFAE  F029         	goto	u4551
 11201   005358  EFB0  F029         	goto	u4550
 11202   00535C                     u4551:
 11203   00535C  EFBC  F029         	goto	l536
 11204   005360                     u4550:
 11205   005360  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11206   005364  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11207   005368  0E1D               	movlw	29
 11208   00536A  64DF               	cpfsgt	indf2,c
 11209   00536C  EFBA  F029         	goto	u4561
 11210   005370  EFBC  F029         	goto	u4560
 11211   005374                     u4561:
 11212   005374  EF80  F029         	goto	l4735
 11213   005378                     u4560:
 11214   005378                     l536:
 11215   005378  0012               	return		;funcret
 11216   00537A                     __end_of_fullSpeedBack:
 11217                           	callstack 0
 11218                           
 11219 ;; *************** function _Interrupts_init *****************
 11220 ;; Defined at:
 11221 ;;		line 9 in file "interrupts.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;		None
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;		None
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  1    wreg      void 
 11228 ;; Registers used:
 11229 ;;		None
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11239 ;;Total ram usage:        0 bytes
 11240 ;; Hardware stack levels used: 1
 11241 ;; This function calls:
 11242 ;;		Nothing
 11243 ;; This function is called by:
 11244 ;;		_main
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           	psect	text64
 11249   0061C4                     __ptext64:
 11250                           	callstack 0
 11251   0061C4                     _Interrupts_init:
 11252                           	callstack 30
 11253   0061C4  0012               	return		;funcret
 11254   0061C6                     __end_of_Interrupts_init:
 11255                           	callstack 0
 11256                           
 11257 ;; *************** function _Forwardhalfblock *****************
 11258 ;; Defined at:
 11259 ;;		line 245 in file "dc_motor.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11262 ;;		 -> motorL(9), 
 11263 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11264 ;;		 -> motorR(9), 
 11265 ;; Auto vars:     Size  Location     Type
 11266 ;;		None
 11267 ;; Return value:  Size  Location     Type
 11268 ;;                  1    wreg      void 
 11269 ;; Registers used:
 11270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11271 ;; Tracked objects:
 11272 ;;		On entry : 0/0
 11273 ;;		On exit  : 0/0
 11274 ;;		Unchanged: 0/0
 11275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11278 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11279 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11280 ;;Total ram usage:        6 bytes
 11281 ;; Hardware stack levels used: 1
 11282 ;; Hardware stack levels required when called: 3
 11283 ;; This function calls:
 11284 ;;		_fullSpeedAhead
 11285 ;;		_stop
 11286 ;; This function is called by:
 11287 ;;		_main
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291                           	psect	text65
 11292   0058C6                     __ptext65:
 11293                           	callstack 0
 11294   0058C6                     _Forwardhalfblock:
 11295                           	callstack 27
 11296   0058C6                     
 11297                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11298   0058C6  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11299   0058CA  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11300   0058CE  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11301   0058D2  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11302   0058D6  ECBD  F029         	call	_fullSpeedAhead	;wreg free
 11303   0058DA                     
 11304                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11305   0058DA  0E52               	movlw	82
 11306   0058DC  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11307   0058DE  0E2B               	movlw	43
 11308   0058E0  6E1E               	movwf	??_Forwardhalfblock^0,c
 11309   0058E2  0E00               	movlw	0
 11310   0058E4                     u6307:
 11311   0058E4  2EE8               	decfsz	wreg,f,c
 11312   0058E6  D7FE               	bra	u6307
 11313   0058E8  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11314   0058EA  D7FC               	bra	u6307
 11315   0058EC  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11316   0058EE  D7FA               	bra	u6307
 11317   0058F0  D000               	nop2	
 11318   0058F2                     
 11319                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11320   0058F2  0EC7               	movlw	low _motorL
 11321   0058F4  6E14               	movwf	stop@mL^0,c
 11322   0058F6  0E01               	movlw	high _motorL
 11323   0058F8  6E15               	movwf	(stop@mL+1)^0,c
 11324   0058FA  0EBE               	movlw	low _motorR
 11325   0058FC  6E16               	movwf	stop@mR^0,c
 11326   0058FE  0E01               	movlw	high _motorR
 11327   005900  6E17               	movwf	(stop@mR+1)^0,c
 11328   005902  EC91  F02A         	call	_stop	;wreg free
 11329                           
 11330                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11331   005906  0E05               	movlw	5
 11332   005908  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11333   00590A  0E0F               	movlw	15
 11334   00590C  6E1E               	movwf	??_Forwardhalfblock^0,c
 11335   00590E  0EF1               	movlw	241
 11336   005910                     u6317:
 11337   005910  2EE8               	decfsz	wreg,f,c
 11338   005912  D7FE               	bra	u6317
 11339   005914  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11340   005916  D7FC               	bra	u6317
 11341   005918  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11342   00591A  D7FA               	bra	u6317
 11343   00591C  F000               	nop	
 11344   00591E  0012               	return		;funcret
 11345   005920                     __end_of_Forwardhalfblock:
 11346                           	callstack 0
 11347                           
 11348 ;; *************** function _stop *****************
 11349 ;; Defined at:
 11350 ;;		line 93 in file "dc_motor.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11353 ;;		 -> motorL(9), 
 11354 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11355 ;;		 -> motorR(9), 
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  1    wreg      void 
 11360 ;; Registers used:
 11361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11371 ;;Total ram usage:        6 bytes
 11372 ;; Hardware stack levels used: 1
 11373 ;; Hardware stack levels required when called: 2
 11374 ;; This function calls:
 11375 ;;		_setMotorPWM
 11376 ;; This function is called by:
 11377 ;;		_main
 11378 ;;		_turnRight45
 11379 ;;		_turnLeft45
 11380 ;;		_reverseDetect
 11381 ;;		_reverseOneBlock
 11382 ;;		_ForwardOneBlock
 11383 ;;		_Forwardhalfblock
 11384 ;;		_RetryMove
 11385 ;;		_Backhalfblock
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text66
 11390   005522                     __ptext66:
 11391                           	callstack 0
 11392   005522                     _stop:
 11393                           	callstack 26
 11394   005522                     
 11395                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11396   005522  EFB7  F02A         	goto	l4701
 11397   005526                     l4693:
 11398                           
 11399                           ;dc_motor.c: 97:         mL->power-=10;
 11400   005526  C014  FFD9         	movff	stop@mL,fsr2l
 11401   00552A  C015  FFDA         	movff	stop@mL+1,fsr2h
 11402   00552E  0E0A               	movlw	10
 11403   005530  5EDF               	subwf	indf2,f,c
 11404                           
 11405                           ;dc_motor.c: 98:         mR->power-=10;
 11406   005532  C016  FFD9         	movff	stop@mR,fsr2l
 11407   005536  C017  FFDA         	movff	stop@mR+1,fsr2h
 11408   00553A  0E0A               	movlw	10
 11409   00553C  5EDF               	subwf	indf2,f,c
 11410   00553E                     
 11411                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11412   00553E  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11413   005542  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11414   005546  EC1F  F024         	call	_setMotorPWM	;wreg free
 11415   00554A                     
 11416                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11417   00554A  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11418   00554E  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11419   005552  EC1F  F024         	call	_setMotorPWM	;wreg free
 11420   005556                     
 11421                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11422   005556  0E02               	movlw	2
 11423   005558  6E19               	movwf	(??_stop+1)^0,c
 11424   00555A  0EA0               	movlw	160
 11425   00555C  6E18               	movwf	??_stop^0,c
 11426   00555E  0E92               	movlw	146
 11427   005560                     u6327:
 11428   005560  2EE8               	decfsz	wreg,f,c
 11429   005562  D7FE               	bra	u6327
 11430   005564  2E18               	decfsz	??_stop^0,f,c
 11431   005566  D7FC               	bra	u6327
 11432   005568  2E19               	decfsz	(??_stop+1)^0,f,c
 11433   00556A  D7FA               	bra	u6327
 11434   00556C  D000               	nop2	
 11435   00556E                     l4701:
 11436                           
 11437                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11438   00556E  C014  FFD9         	movff	stop@mL,fsr2l
 11439   005572  C015  FFDA         	movff	stop@mL+1,fsr2h
 11440   005576  50DF               	movf	indf2,w,c
 11441   005578  A4D8               	btfss	status,2,c
 11442   00557A  EFC1  F02A         	goto	u4491
 11443   00557E  EFC3  F02A         	goto	u4490
 11444   005582                     u4491:
 11445   005582  EF93  F02A         	goto	l4693
 11446   005586                     u4490:
 11447   005586  C016  FFD9         	movff	stop@mR,fsr2l
 11448   00558A  C017  FFDA         	movff	stop@mR+1,fsr2h
 11449   00558E  50DF               	movf	indf2,w,c
 11450   005590  A4D8               	btfss	status,2,c
 11451   005592  EFCD  F02A         	goto	u4501
 11452   005596  EFCF  F02A         	goto	u4500
 11453   00559A                     u4501:
 11454   00559A  EF93  F02A         	goto	l4693
 11455   00559E                     u4500:
 11456   00559E  0012               	return		;funcret
 11457   0055A0                     __end_of_stop:
 11458                           	callstack 0
 11459                           
 11460 ;; *************** function _fullSpeedAhead *****************
 11461 ;; Defined at:
 11462 ;;		line 147 in file "dc_motor.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11465 ;;		 -> motorL(9), 
 11466 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11467 ;;		 -> motorR(9), 
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;		None
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  1    wreg      void 
 11472 ;; Registers used:
 11473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;Total ram usage:        6 bytes
 11484 ;; Hardware stack levels used: 1
 11485 ;; Hardware stack levels required when called: 2
 11486 ;; This function calls:
 11487 ;;		_setMotorPWM
 11488 ;; This function is called by:
 11489 ;;		_main
 11490 ;;		_ForwardOneBlock
 11491 ;;		_Forwardhalfblock
 11492 ;;		_RetryMove
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text67
 11497   00537A                     __ptext67:
 11498                           	callstack 0
 11499   00537A                     _fullSpeedAhead:
 11500                           	callstack 25
 11501   00537A                     
 11502                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11503   00537A  EE20 F001          	lfsr	2,1
 11504   00537E  5014               	movf	fullSpeedAhead@mL^0,w,c
 11505   005380  26D9               	addwf	fsr2l,f,c
 11506   005382  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11507   005384  22DA               	addwfc	fsr2h,f,c
 11508   005386  0E01               	movlw	1
 11509   005388  6EDF               	movwf	indf2,c
 11510                           
 11511                           ;dc_motor.c: 151:     mR->direction =1;
 11512   00538A  EE20 F001          	lfsr	2,1
 11513   00538E  5016               	movf	fullSpeedAhead@mR^0,w,c
 11514   005390  26D9               	addwf	fsr2l,f,c
 11515   005392  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11516   005394  22DA               	addwfc	fsr2h,f,c
 11517   005396  0E01               	movlw	1
 11518   005398  6EDF               	movwf	indf2,c
 11519                           
 11520                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11521   00539A  EFF3  F029         	goto	l4687
 11522   00539E                     l4679:
 11523                           
 11524                           ;dc_motor.c: 154:         mL->power+=10;
 11525   00539E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11526   0053A2  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11527   0053A6  0E0A               	movlw	10
 11528   0053A8  26DF               	addwf	indf2,f,c
 11529                           
 11530                           ;dc_motor.c: 155:         mR->power+=10;
 11531   0053AA  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11532   0053AE  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11533   0053B2  0E0A               	movlw	10
 11534   0053B4  26DF               	addwf	indf2,f,c
 11535   0053B6                     
 11536                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11537   0053B6  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11538   0053BA  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11539   0053BE  EC1F  F024         	call	_setMotorPWM	;wreg free
 11540   0053C2                     
 11541                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11542   0053C2  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11543   0053C6  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11544   0053CA  EC1F  F024         	call	_setMotorPWM	;wreg free
 11545   0053CE                     
 11546                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11547   0053CE  0E02               	movlw	2
 11548   0053D0  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11549   0053D2  0EA0               	movlw	160
 11550   0053D4  6E18               	movwf	??_fullSpeedAhead^0,c
 11551   0053D6  0E92               	movlw	146
 11552   0053D8                     u6337:
 11553   0053D8  2EE8               	decfsz	wreg,f,c
 11554   0053DA  D7FE               	bra	u6337
 11555   0053DC  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11556   0053DE  D7FC               	bra	u6337
 11557   0053E0  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11558   0053E2  D7FA               	bra	u6337
 11559   0053E4  D000               	nop2	
 11560   0053E6                     l4687:
 11561   0053E6  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11562   0053EA  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11563   0053EE  0E1E               	movlw	30
 11564   0053F0  60DF               	cpfslt	indf2,c
 11565   0053F2  EFFD  F029         	goto	u4471
 11566   0053F6  EFFF  F029         	goto	u4470
 11567   0053FA                     u4471:
 11568   0053FA  EF0B  F02A         	goto	l520
 11569   0053FE                     u4470:
 11570   0053FE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11571   005402  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11572   005406  0E1D               	movlw	29
 11573   005408  64DF               	cpfsgt	indf2,c
 11574   00540A  EF09  F02A         	goto	u4481
 11575   00540E  EF0B  F02A         	goto	u4480
 11576   005412                     u4481:
 11577   005412  EFCF  F029         	goto	l4679
 11578   005416                     u4480:
 11579   005416                     l520:
 11580   005416  0012               	return		;funcret
 11581   005418                     __end_of_fullSpeedAhead:
 11582                           	callstack 0
 11583                           
 11584 ;; *************** function _setMotorPWM *****************
 11585 ;; Defined at:
 11586 ;;		line 68 in file "dc_motor.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11589 ;;		 -> motorR(9), motorL(9), 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;  negDuty         1   18[COMRAM] unsigned char 
 11592 ;;  posDuty         1   17[COMRAM] unsigned char 
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11606 ;;Total ram usage:        6 bytes
 11607 ;; Hardware stack levels used: 1
 11608 ;; Hardware stack levels required when called: 1
 11609 ;; This function calls:
 11610 ;;		___lwdiv
 11611 ;;		___wmul
 11612 ;; This function is called by:
 11613 ;;		_stop
 11614 ;;		_turnLeft
 11615 ;;		_turnRight
 11616 ;;		_fullSpeedAhead
 11617 ;;		_timed_forward
 11618 ;;		_fullSpeedBack
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           
 11622                           	psect	text68
 11623   00483E                     __ptext68:
 11624                           	callstack 0
 11625   00483E                     _setMotorPWM:
 11626                           	callstack 26
 11627   00483E                     
 11628                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11629   00483E  EE20 F002          	lfsr	2,2
 11630   004842  500E               	movf	setMotorPWM@m^0,w,c
 11631   004844  26D9               	addwf	fsr2l,f,c
 11632   004846  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11633   004848  22DA               	addwfc	fsr2h,f,c
 11634   00484A  50DF               	movf	indf2,w,c
 11635   00484C  B4D8               	btfsc	status,2,c
 11636   00484E  EF2B  F024         	goto	u3491
 11637   004852  EF2D  F024         	goto	u3490
 11638   004856                     u3491:
 11639   004856  EF61  F024         	goto	l4131
 11640   00485A                     u3490:
 11641   00485A                     
 11642                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11643   00485A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11644   00485E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11645   004862  50DF               	movf	indf2,w,c
 11646   004864  6E10               	movwf	??_setMotorPWM^0,c
 11647   004866  5010               	movf	??_setMotorPWM^0,w,c
 11648   004868  6E01               	movwf	___wmul@multiplier^0,c
 11649   00486A  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11650   00486C  EE20 F003          	lfsr	2,3
 11651   004870  500E               	movf	setMotorPWM@m^0,w,c
 11652   004872  26D9               	addwf	fsr2l,f,c
 11653   004874  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11654   004876  22DA               	addwfc	fsr2h,f,c
 11655   004878  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11656   00487C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11657   004880  EC7A  F030         	call	___wmul	;wreg free
 11658   004884  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11659   004888  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11660   00488C  0E00               	movlw	0
 11661   00488E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11662   004890  0E64               	movlw	100
 11663   004892  6E09               	movwf	___lwdiv@divisor^0,c
 11664   004894  EC0D  F02B         	call	___lwdiv	;wreg free
 11665   004898  EE20 F003          	lfsr	2,3
 11666   00489C  500E               	movf	setMotorPWM@m^0,w,c
 11667   00489E  26D9               	addwf	fsr2l,f,c
 11668   0048A0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11669   0048A2  22DA               	addwfc	fsr2h,f,c
 11670   0048A4  50DF               	movf	indf2,w,c
 11671   0048A6  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11672   0048A8  5007               	movf	?___lwdiv^0,w,c
 11673   0048AA  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11674   0048AC  6E12               	movwf	setMotorPWM@posDuty^0,c
 11675   0048AE                     
 11676                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11677   0048AE  EE20 F003          	lfsr	2,3
 11678   0048B2  500E               	movf	setMotorPWM@m^0,w,c
 11679   0048B4  26D9               	addwf	fsr2l,f,c
 11680   0048B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11681   0048B8  22DA               	addwfc	fsr2h,f,c
 11682   0048BA  50DF               	movf	indf2,w,c
 11683   0048BC  6E13               	movwf	setMotorPWM@negDuty^0,c
 11684                           
 11685                           ;dc_motor.c: 75:     }
 11686   0048BE  EF84  F024         	goto	l4135
 11687   0048C2                     l4131:
 11688                           
 11689                           ;dc_motor.c: 77:         posDuty=0;
 11690   0048C2  0E00               	movlw	0
 11691   0048C4  6E12               	movwf	setMotorPWM@posDuty^0,c
 11692   0048C6                     
 11693                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11694   0048C6  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11695   0048CA  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11696   0048CE  50DF               	movf	indf2,w,c
 11697   0048D0  6E10               	movwf	??_setMotorPWM^0,c
 11698   0048D2  5010               	movf	??_setMotorPWM^0,w,c
 11699   0048D4  6E01               	movwf	___wmul@multiplier^0,c
 11700   0048D6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11701   0048D8  EE20 F003          	lfsr	2,3
 11702   0048DC  500E               	movf	setMotorPWM@m^0,w,c
 11703   0048DE  26D9               	addwf	fsr2l,f,c
 11704   0048E0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11705   0048E2  22DA               	addwfc	fsr2h,f,c
 11706   0048E4  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11707   0048E8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11708   0048EC  EC7A  F030         	call	___wmul	;wreg free
 11709   0048F0  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11710   0048F4  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11711   0048F8  0E00               	movlw	0
 11712   0048FA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11713   0048FC  0E64               	movlw	100
 11714   0048FE  6E09               	movwf	___lwdiv@divisor^0,c
 11715   004900  EC0D  F02B         	call	___lwdiv	;wreg free
 11716   004904  5007               	movf	?___lwdiv^0,w,c
 11717   004906  6E13               	movwf	setMotorPWM@negDuty^0,c
 11718   004908                     l4135:
 11719                           
 11720                           ;dc_motor.c: 81:     if (m->direction) {
 11721   004908  EE20 F001          	lfsr	2,1
 11722   00490C  500E               	movf	setMotorPWM@m^0,w,c
 11723   00490E  26D9               	addwf	fsr2l,f,c
 11724   004910  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11725   004912  22DA               	addwfc	fsr2h,f,c
 11726   004914  50DF               	movf	indf2,w,c
 11727   004916  B4D8               	btfsc	status,2,c
 11728   004918  EF90  F024         	goto	u3501
 11729   00491C  EF92  F024         	goto	u3500
 11730   004920                     u3501:
 11731   004920  EFB4  F024         	goto	l4139
 11732   004924                     u3500:
 11733   004924                     
 11734                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11735   004924  EE20 F005          	lfsr	2,5
 11736   004928  500E               	movf	setMotorPWM@m^0,w,c
 11737   00492A  26D9               	addwf	fsr2l,f,c
 11738   00492C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11739   00492E  22DA               	addwfc	fsr2h,f,c
 11740   004930  CFDE F010          	movff	postinc2,??_setMotorPWM
 11741   004934  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11742   004938  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11743   00493C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11744   004940  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11745                           
 11746                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11747   004944  EE20 F007          	lfsr	2,7
 11748   004948  500E               	movf	setMotorPWM@m^0,w,c
 11749   00494A  26D9               	addwf	fsr2l,f,c
 11750   00494C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11751   00494E  22DA               	addwfc	fsr2h,f,c
 11752   004950  CFDE F010          	movff	postinc2,??_setMotorPWM
 11753   004954  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11754   004958  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11755   00495C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11756   004960  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11757                           
 11758                           ;dc_motor.c: 86:     } else {
 11759   004964  EFD4  F024         	goto	l490
 11760   004968                     l4139:
 11761                           
 11762                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11763   004968  EE20 F005          	lfsr	2,5
 11764   00496C  500E               	movf	setMotorPWM@m^0,w,c
 11765   00496E  26D9               	addwf	fsr2l,f,c
 11766   004970  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11767   004972  22DA               	addwfc	fsr2h,f,c
 11768   004974  CFDE F010          	movff	postinc2,??_setMotorPWM
 11769   004978  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11770   00497C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11771   004980  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11772   004984  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11773                           
 11774                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11775   004988  EE20 F007          	lfsr	2,7
 11776   00498C  500E               	movf	setMotorPWM@m^0,w,c
 11777   00498E  26D9               	addwf	fsr2l,f,c
 11778   004990  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11779   004992  22DA               	addwfc	fsr2h,f,c
 11780   004994  CFDE F010          	movff	postinc2,??_setMotorPWM
 11781   004998  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11782   00499C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11783   0049A0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11784   0049A4  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11785   0049A8                     l490:
 11786   0049A8  0012               	return		;funcret
 11787   0049AA                     __end_of_setMotorPWM:
 11788                           	callstack 0
 11789                           
 11790 ;; *************** function ___wmul *****************
 11791 ;; Defined at:
 11792 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11793 ;; Parameters:    Size  Location     Type
 11794 ;;  multiplier      2    0[COMRAM] unsigned int 
 11795 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;  product         2    4[COMRAM] unsigned int 
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  2    0[COMRAM] unsigned int 
 11800 ;; Registers used:
 11801 ;;		wreg, status,2, status,0, prodl, prodh
 11802 ;; Tracked objects:
 11803 ;;		On entry : 0/0
 11804 ;;		On exit  : 0/0
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11811 ;;Total ram usage:        6 bytes
 11812 ;; Hardware stack levels used: 1
 11813 ;; This function calls:
 11814 ;;		Nothing
 11815 ;; This function is called by:
 11816 ;;		_setMotorPWM
 11817 ;; This function uses a non-reentrant model
 11818 ;;
 11819                           
 11820                           	psect	text69
 11821   0060F4                     __ptext69:
 11822                           	callstack 0
 11823   0060F4                     ___wmul:
 11824                           	callstack 26
 11825   0060F4  5001               	movf	___wmul@multiplier^0,w,c
 11826   0060F6  0203               	mulwf	___wmul@multiplicand^0,c
 11827   0060F8  CFF3 F005          	movff	prodl,___wmul@product
 11828   0060FC  CFF4 F006          	movff	prodh,___wmul@product+1
 11829   006100  5001               	movf	___wmul@multiplier^0,w,c
 11830   006102  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11831   006104  50F3               	movf	243,w,c
 11832   006106  2606               	addwf	(___wmul@product+1)^0,f,c
 11833   006108  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11834   00610A  0203               	mulwf	___wmul@multiplicand^0,c
 11835   00610C  50F3               	movf	243,w,c
 11836   00610E  2606               	addwf	(___wmul@product+1)^0,f,c
 11837   006110  C005  F001         	movff	___wmul@product,?___wmul
 11838   006114  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11839   006118  0012               	return		;funcret
 11840   00611A                     __end_of___wmul:
 11841                           	callstack 0
 11842                           
 11843 ;; *************** function ___lwdiv *****************
 11844 ;; Defined at:
 11845 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;  dividend        2    6[COMRAM] unsigned int 
 11848 ;;  divisor         2    8[COMRAM] unsigned int 
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  quotient        2   10[COMRAM] unsigned int 
 11851 ;;  counter         1   12[COMRAM] unsigned char 
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  2    6[COMRAM] unsigned int 
 11854 ;; Registers used:
 11855 ;;		wreg, status,2, status,0
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11861 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11862 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11864 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11865 ;;Total ram usage:        7 bytes
 11866 ;; Hardware stack levels used: 1
 11867 ;; This function calls:
 11868 ;;		Nothing
 11869 ;; This function is called by:
 11870 ;;		_setMotorPWM
 11871 ;; This function uses a non-reentrant model
 11872 ;;
 11873                           
 11874                           	psect	text70
 11875   00561A                     __ptext70:
 11876                           	callstack 0
 11877   00561A                     ___lwdiv:
 11878                           	callstack 26
 11879   00561A  0E00               	movlw	0
 11880   00561C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11881   00561E  0E00               	movlw	0
 11882   005620  6E0B               	movwf	___lwdiv@quotient^0,c
 11883   005622  5009               	movf	___lwdiv@divisor^0,w,c
 11884   005624  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11885   005626  B4D8               	btfsc	status,2,c
 11886   005628  EF18  F02B         	goto	u3451
 11887   00562C  EF1A  F02B         	goto	u3450
 11888   005630                     u3451:
 11889   005630  EF42  F02B         	goto	l1185
 11890   005634                     u3450:
 11891   005634  0E01               	movlw	1
 11892   005636  6E0D               	movwf	___lwdiv@counter^0,c
 11893   005638  EF22  F02B         	goto	l4103
 11894   00563C                     l4101:
 11895   00563C  90D8               	bcf	status,0,c
 11896   00563E  3609               	rlcf	___lwdiv@divisor^0,f,c
 11897   005640  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11898   005642  2A0D               	incf	___lwdiv@counter^0,f,c
 11899   005644                     l4103:
 11900   005644  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11901   005646  EF27  F02B         	goto	u3461
 11902   00564A  EF29  F02B         	goto	u3460
 11903   00564E                     u3461:
 11904   00564E  EF1E  F02B         	goto	l4101
 11905   005652                     u3460:
 11906   005652                     l4105:
 11907   005652  90D8               	bcf	status,0,c
 11908   005654  360B               	rlcf	___lwdiv@quotient^0,f,c
 11909   005656  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11910   005658  5009               	movf	___lwdiv@divisor^0,w,c
 11911   00565A  5C07               	subwf	___lwdiv@dividend^0,w,c
 11912   00565C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11913   00565E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11914   005660  A0D8               	btfss	status,0,c
 11915   005662  EF35  F02B         	goto	u3471
 11916   005666  EF37  F02B         	goto	u3470
 11917   00566A                     u3471:
 11918   00566A  EF3C  F02B         	goto	l4113
 11919   00566E                     u3470:
 11920   00566E  5009               	movf	___lwdiv@divisor^0,w,c
 11921   005670  5E07               	subwf	___lwdiv@dividend^0,f,c
 11922   005672  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11923   005674  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11924   005676  800B               	bsf	___lwdiv@quotient^0,0,c
 11925   005678                     l4113:
 11926   005678  90D8               	bcf	status,0,c
 11927   00567A  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11928   00567C  3209               	rrcf	___lwdiv@divisor^0,f,c
 11929   00567E  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11930   005680  EF29  F02B         	goto	l4105
 11931   005684                     l1185:
 11932   005684  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11933   005688  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11934   00568C  0012               	return		;funcret
 11935   00568E                     __end_of___lwdiv:
 11936                           	callstack 0
 11937                           
 11938 ;; *************** function _Colour_decider *****************
 11939 ;; Defined at:
 11940 ;;		line 125 in file "color.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  vals            2   74[COMRAM] PTR struct RGB
 11943 ;;		 -> vals(8), 
 11944 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11945 ;;		 -> rel(12), 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;  RGB_col        12    6[BANK0 ] float [3]
 11948 ;;  Hue             4   28[BANK0 ] float 
 11949 ;;  Cmin            4   22[BANK0 ] float 
 11950 ;;  Cmax            4   18[BANK0 ] float 
 11951 ;;  i               2   26[BANK0 ] int 
 11952 ;;  Cmax_i          2    4[BANK0 ] int 
 11953 ;; Return value:  Size  Location     Type
 11954 ;;                  2   74[COMRAM] int 
 11955 ;; Registers used:
 11956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11957 ;; Tracked objects:
 11958 ;;		On entry : 0/0
 11959 ;;		On exit  : 0/0
 11960 ;;		Unchanged: 0/0
 11961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11963 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11965 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11966 ;;Total ram usage:       38 bytes
 11967 ;; Hardware stack levels used: 1
 11968 ;; Hardware stack levels required when called: 2
 11969 ;; This function calls:
 11970 ;;		___fladd
 11971 ;;		___fldiv
 11972 ;;		___fleq
 11973 ;;		___flge
 11974 ;;		___flmul
 11975 ;;		___flsub
 11976 ;;		___xxtofl
 11977 ;; This function is called by:
 11978 ;;		_main
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text71
 11983   000E52                     __ptext71:
 11984                           	callstack 0
 11985   000E52                     _Colour_decider:
 11986                           	callstack 28
 11987   000E52                     
 11988                           ;color.c: 126:     float Cmax = 0;
 11989   000E52  0E00               	movlw	0
 11990   000E54  0100               	movlb	0	; () banked
 11991   000E56  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11992   000E58  0E00               	movlw	0
 11993   000E5A  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11994   000E5C  0E00               	movlw	0
 11995   000E5E  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11996   000E60  0E00               	movlw	0
 11997   000E62  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11998                           
 11999                           ;color.c: 127:     float Cmin= 100000;
 12000   000E64  0E00               	movlw	0
 12001   000E66  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12002   000E68  0E50               	movlw	80
 12003   000E6A  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12004   000E6C  0EC3               	movlw	195
 12005   000E6E  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12006   000E70  0E47               	movlw	71
 12007   000E72  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12008                           
 12009                           ;color.c: 128:     int Cmax_i =4;
 12010   000E74  0E00               	movlw	0
 12011   000E76  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12012   000E78  0E04               	movlw	4
 12013   000E7A  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12014   000E7C                     
 12015                           ; BSR set to: 0
 12016                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12017   000E7C  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12018   000E80  0E0B               	movlw	11
 12019   000E82                     u5211:
 12020   000E82  6ADE               	clrf	postinc2,c
 12021   000E84  06E8               	decf	wreg,f,c
 12022   000E86  E2FD               	bc	u5211
 12023   000E88                     
 12024                           ; BSR set to: 0
 12025   000E88  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12026   000E8C  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12027   000E90  CFDE F001          	movff	postinc2,___xxtofl@val
 12028   000E94  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12029   000E98  0E00               	movlw	0
 12030   000E9A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12031   000E9C  0EFF               	movlw	-1
 12032   000E9E  6E03               	movwf	(___xxtofl@val+2)^0,c
 12033   000EA0  6E04               	movwf	(___xxtofl@val+3)^0,c
 12034   000EA2  0E01               	movlw	1
 12035   000EA4  EC81  F022         	call	___xxtofl
 12036   000EA8  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12037   000EAC  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12038   000EB0  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12039   000EB4  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12040   000EB8  EE20 F002          	lfsr	2,2
 12041   000EBC  504B               	movf	Colour_decider@vals^0,w,c
 12042   000EBE  26D9               	addwf	fsr2l,f,c
 12043   000EC0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12044   000EC2  22DA               	addwfc	fsr2h,f,c
 12045   000EC4  CFDE F001          	movff	postinc2,___xxtofl@val
 12046   000EC8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12047   000ECC  0E00               	movlw	0
 12048   000ECE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12049   000ED0  0EFF               	movlw	-1
 12050   000ED2  6E03               	movwf	(___xxtofl@val+2)^0,c
 12051   000ED4  6E04               	movwf	(___xxtofl@val+3)^0,c
 12052   000ED6  0E01               	movlw	1
 12053   000ED8  EC81  F022         	call	___xxtofl
 12054   000EDC  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12055   000EE0  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12056   000EE4  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12057   000EE8  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12058   000EEC  EE20 F004          	lfsr	2,4
 12059   000EF0  504B               	movf	Colour_decider@vals^0,w,c
 12060   000EF2  26D9               	addwf	fsr2l,f,c
 12061   000EF4  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12062   000EF6  22DA               	addwfc	fsr2h,f,c
 12063   000EF8  CFDE F001          	movff	postinc2,___xxtofl@val
 12064   000EFC  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12065   000F00  0E00               	movlw	0
 12066   000F02  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12067   000F04  0EFF               	movlw	-1
 12068   000F06  6E03               	movwf	(___xxtofl@val+2)^0,c
 12069   000F08  6E04               	movwf	(___xxtofl@val+3)^0,c
 12070   000F0A  0E01               	movlw	1
 12071   000F0C  EC81  F022         	call	___xxtofl
 12072   000F10  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12073   000F14  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12074   000F18  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12075   000F1C  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12076   000F20                     
 12077                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12078   000F20  0E00               	movlw	0
 12079   000F22  0100               	movlb	0	; () banked
 12080   000F24  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12081   000F26  0E00               	movlw	0
 12082   000F28  6F7A               	movwf	Colour_decider@i& (0+255),b
 12083   000F2A                     l5371:
 12084                           
 12085                           ; BSR set to: 0
 12086                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12087   000F2A  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12088   000F2E  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12089   000F32  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12090   000F36  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12091   000F3A  0E66               	movlw	low Colour_decider@RGB_col
 12092   000F3C  6E4F               	movwf	??_Colour_decider^0,c
 12093   000F3E  0E00               	movlw	high Colour_decider@RGB_col
 12094   000F40  6E50               	movwf	(??_Colour_decider+1)^0,c
 12095   000F42  90D8               	bcf	status,0,c
 12096   000F44  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12097   000F46  6ED9               	movwf	fsr2l,c
 12098   000F48  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12099   000F4A  6EDA               	movwf	fsr2h,c
 12100   000F4C  90D8               	bcf	status,0,c
 12101   000F4E  36D9               	rlcf	fsr2l,f,c
 12102   000F50  36DA               	rlcf	fsr2h,f,c
 12103   000F52  504F               	movf	??_Colour_decider^0,w,c
 12104   000F54  26D9               	addwf	fsr2l,f,c
 12105   000F56  5050               	movf	(??_Colour_decider+1)^0,w,c
 12106   000F58  22DA               	addwfc	fsr2h,f,c
 12107   000F5A  CFDE F02E          	movff	postinc2,___flge@ff2
 12108   000F5E  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12109   000F62  CFDE F030          	movff	postinc2,___flge@ff2+2
 12110   000F66  CFDE F031          	movff	postinc2,___flge@ff2+3
 12111   000F6A  EC0A  F026         	call	___flge	;wreg free
 12112   000F6E  B0D8               	btfsc	status,0,c
 12113   000F70  EFBC  F007         	goto	u5221
 12114   000F74  EFBE  F007         	goto	u5220
 12115   000F78                     u5221:
 12116   000F78  EFDB  F007         	goto	l5377
 12117   000F7C                     u5220:
 12118   000F7C                     
 12119                           ;color.c: 137:             Cmax=RGB_col[i];
 12120   000F7C  0E66               	movlw	low Colour_decider@RGB_col
 12121   000F7E  6E4F               	movwf	??_Colour_decider^0,c
 12122   000F80  0E00               	movlw	high Colour_decider@RGB_col
 12123   000F82  6E50               	movwf	(??_Colour_decider+1)^0,c
 12124   000F84  90D8               	bcf	status,0,c
 12125   000F86  0100               	movlb	0	; () banked
 12126   000F88  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12127   000F8A  6ED9               	movwf	fsr2l,c
 12128   000F8C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12129   000F8E  6EDA               	movwf	fsr2h,c
 12130   000F90  90D8               	bcf	status,0,c
 12131   000F92  36D9               	rlcf	fsr2l,f,c
 12132   000F94  36DA               	rlcf	fsr2h,f,c
 12133   000F96  504F               	movf	??_Colour_decider^0,w,c
 12134   000F98  26D9               	addwf	fsr2l,f,c
 12135   000F9A  5050               	movf	(??_Colour_decider+1)^0,w,c
 12136   000F9C  22DA               	addwfc	fsr2h,f,c
 12137   000F9E  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12138   000FA2  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12139   000FA6  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12140   000FAA  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12141   000FAE                     
 12142                           ; BSR set to: 0
 12143                           ;color.c: 138:             Cmax_i=i;
 12144   000FAE  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12145   000FB2  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12146   000FB6                     l5377:
 12147                           
 12148                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12149   000FB6  0E66               	movlw	low Colour_decider@RGB_col
 12150   000FB8  6E4F               	movwf	??_Colour_decider^0,c
 12151   000FBA  0E00               	movlw	high Colour_decider@RGB_col
 12152   000FBC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12153   000FBE  90D8               	bcf	status,0,c
 12154   000FC0  0100               	movlb	0	; () banked
 12155   000FC2  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12156   000FC4  6ED9               	movwf	fsr2l,c
 12157   000FC6  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12158   000FC8  6EDA               	movwf	fsr2h,c
 12159   000FCA  90D8               	bcf	status,0,c
 12160   000FCC  36D9               	rlcf	fsr2l,f,c
 12161   000FCE  36DA               	rlcf	fsr2h,f,c
 12162   000FD0  504F               	movf	??_Colour_decider^0,w,c
 12163   000FD2  26D9               	addwf	fsr2l,f,c
 12164   000FD4  5050               	movf	(??_Colour_decider+1)^0,w,c
 12165   000FD6  22DA               	addwfc	fsr2h,f,c
 12166   000FD8  CFDE F02A          	movff	postinc2,___flge@ff1
 12167   000FDC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12168   000FE0  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12169   000FE4  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12170   000FE8  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12171   000FEC  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12172   000FF0  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12173   000FF4  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12174   000FF8  EC0A  F026         	call	___flge	;wreg free
 12175   000FFC  B0D8               	btfsc	status,0,c
 12176   000FFE  EF03  F008         	goto	u5231
 12177   001002  EF05  F008         	goto	u5230
 12178   001006                     u5231:
 12179   001006  EF1E  F008         	goto	l5381
 12180   00100A                     u5230:
 12181   00100A  0E66               	movlw	low Colour_decider@RGB_col
 12182   00100C  6E4F               	movwf	??_Colour_decider^0,c
 12183   00100E  0E00               	movlw	high Colour_decider@RGB_col
 12184   001010  6E50               	movwf	(??_Colour_decider+1)^0,c
 12185   001012  90D8               	bcf	status,0,c
 12186   001014  0100               	movlb	0	; () banked
 12187   001016  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12188   001018  6ED9               	movwf	fsr2l,c
 12189   00101A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12190   00101C  6EDA               	movwf	fsr2h,c
 12191   00101E  90D8               	bcf	status,0,c
 12192   001020  36D9               	rlcf	fsr2l,f,c
 12193   001022  36DA               	rlcf	fsr2h,f,c
 12194   001024  504F               	movf	??_Colour_decider^0,w,c
 12195   001026  26D9               	addwf	fsr2l,f,c
 12196   001028  5050               	movf	(??_Colour_decider+1)^0,w,c
 12197   00102A  22DA               	addwfc	fsr2h,f,c
 12198   00102C  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12199   001030  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12200   001034  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12201   001038  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12202   00103C                     l5381:
 12203                           
 12204                           ;color.c: 141:     }
 12205   00103C  0100               	movlb	0	; () banked
 12206   00103E  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12207   001040  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12208   001042                     
 12209                           ; BSR set to: 0
 12210   001042  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12211   001044  EF2D  F008         	goto	u5241
 12212   001048  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12213   00104A  E109               	bnz	u5240
 12214   00104C  0E03               	movlw	3
 12215   00104E  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12216   001050  A0D8               	btfss	status,0,c
 12217   001052  EF2D  F008         	goto	u5241
 12218   001056  EF2F  F008         	goto	u5240
 12219   00105A                     u5241:
 12220   00105A  EF95  F007         	goto	l5371
 12221   00105E                     u5240:
 12222   00105E                     
 12223                           ; BSR set to: 0
 12224                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12225   00105E  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12226   001062  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12227   001066  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12228   00106A  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12229   00106E  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12230   001072  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12231   001076  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12232   00107A  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12233   00107E  ECED  F02E         	call	___flsub	;wreg free
 12234   001082  C02A  F032         	movff	?___flsub,___fleq@ff1
 12235   001086  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12236   00108A  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12237   00108E  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12238   001092  0E00               	movlw	0
 12239   001094  6E36               	movwf	___fleq@ff2^0,c
 12240   001096  0E00               	movlw	0
 12241   001098  6E37               	movwf	(___fleq@ff2+1)^0,c
 12242   00109A  0E00               	movlw	0
 12243   00109C  6E38               	movwf	(___fleq@ff2+2)^0,c
 12244   00109E  0E00               	movlw	0
 12245   0010A0  6E39               	movwf	(___fleq@ff2+3)^0,c
 12246   0010A2  EC7B  F028         	call	___fleq	;wreg free
 12247   0010A6  A0D8               	btfss	status,0,c
 12248   0010A8  EF58  F008         	goto	u5251
 12249   0010AC  EF5A  F008         	goto	u5250
 12250   0010B0                     u5251:
 12251   0010B0  EF60  F008         	goto	l5391
 12252   0010B4                     u5250:
 12253   0010B4                     l5387:
 12254   0010B4  0E00               	movlw	0
 12255   0010B6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12256   0010B8  0E00               	movlw	0
 12257   0010BA  6E4B               	movwf	?_Colour_decider^0,c
 12258   0010BC  EF96  F00C         	goto	l76
 12259   0010C0                     l5391:
 12260                           
 12261                           ;color.c: 146:     if (Cmax_i==0){
 12262   0010C0  0100               	movlb	0	; () banked
 12263   0010C2  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12264   0010C4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12265   0010C6  A4D8               	btfss	status,2,c
 12266   0010C8  EF68  F008         	goto	u5261
 12267   0010CC  EF6A  F008         	goto	u5260
 12268   0010D0                     u5261:
 12269   0010D0  EFDE  F008         	goto	l5399
 12270   0010D4                     u5260:
 12271   0010D4                     
 12272                           ; BSR set to: 0
 12273                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12274   0010D4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12275   0010D8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12276   0010DC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12277   0010E0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12278   0010E4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12279   0010E8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12280   0010EC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12281   0010F0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12282   0010F4  ECED  F02E         	call	___flsub	;wreg free
 12283   0010F8  C02A  F036         	movff	?___flsub,___fldiv@a
 12284   0010FC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12285   001100  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12286   001104  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12287   001108  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12288   00110C  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12289   001110  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12290   001114  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12291   001118  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12292   00111C  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12293   001120  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12294   001124  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12295   001128  ECED  F02E         	call	___flsub	;wreg free
 12296   00112C  C02A  F032         	movff	?___flsub,___fldiv@b
 12297   001130  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12298   001134  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12299   001138  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12300   00113C  EC0C  F019         	call	___fldiv	;wreg free
 12301   001140  C032  F011         	movff	?___fldiv,___flmul@b
 12302   001144  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12303   001148  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12304   00114C  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12305   001150  0E00               	movlw	0
 12306   001152  6E15               	movwf	___flmul@a^0,c
 12307   001154  0E00               	movlw	0
 12308   001156  6E16               	movwf	(___flmul@a+1)^0,c
 12309   001158  0E70               	movlw	112
 12310   00115A  6E17               	movwf	(___flmul@a+2)^0,c
 12311   00115C  0E42               	movlw	66
 12312   00115E  6E18               	movwf	(___flmul@a+3)^0,c
 12313   001160  ECF7  F016         	call	___flmul	;wreg free
 12314   001164  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12315   001168  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12316   00116C  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12317   001170  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12318   001174                     
 12319                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12320   001174  0100               	movlb	0	; () banked
 12321   001176  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12322   001178  EFC2  F008         	goto	u5270
 12323   00117C  EFC0  F008         	goto	u5271
 12324   001180                     u5271:
 12325   001180  EFBD  F009         	goto	l5409
 12326   001184                     u5270:
 12327   001184                     
 12328                           ; BSR set to: 0
 12329   001184  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12330   001188  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12331   00118C  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12332   001190  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12333   001194  0E00               	movlw	0
 12334   001196  6E05               	movwf	___fladd@a^0,c
 12335   001198  0E00               	movlw	0
 12336   00119A  6E06               	movwf	(___fladd@a+1)^0,c
 12337   00119C  0EB4               	movlw	180
 12338   00119E  6E07               	movwf	(___fladd@a+2)^0,c
 12339   0011A0  0E43               	movlw	67
 12340   0011A2  6E08               	movwf	(___fladd@a+3)^0,c
 12341   0011A4  EC97  F014         	call	___fladd	;wreg free
 12342   0011A8  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12343   0011AC  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12344   0011B0  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12345   0011B4  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12346   0011B8  EFBD  F009         	goto	l5409
 12347   0011BC                     l5399:
 12348                           
 12349                           ; BSR set to: 0
 12350   0011BC  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12351   0011BE  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12352   0011C0  A4D8               	btfss	status,2,c
 12353   0011C2  EFE5  F008         	goto	u5281
 12354   0011C6  EFE7  F008         	goto	u5280
 12355   0011CA                     u5281:
 12356   0011CA  EF53  F009         	goto	l5405
 12357   0011CE                     u5280:
 12358   0011CE                     
 12359                           ; BSR set to: 0
 12360                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12361   0011CE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12362   0011D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12363   0011D6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12364   0011DA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12365   0011DE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12366   0011E2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12367   0011E6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12368   0011EA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12369   0011EE  ECED  F02E         	call	___flsub	;wreg free
 12370   0011F2  C02A  F036         	movff	?___flsub,___fldiv@a
 12371   0011F6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12372   0011FA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12373   0011FE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12374   001202  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12375   001206  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12376   00120A  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12377   00120E  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12378   001212  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12379   001216  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12380   00121A  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12381   00121E  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12382   001222  ECED  F02E         	call	___flsub	;wreg free
 12383   001226  C02A  F032         	movff	?___flsub,___fldiv@b
 12384   00122A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12385   00122E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12386   001232  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12387   001236  EC0C  F019         	call	___fldiv	;wreg free
 12388   00123A  C032  F060         	movff	?___fldiv,_Colour_decider$3144
 12389   00123E  C033  F061         	movff	?___fldiv+1,_Colour_decider$3144+1
 12390   001242  C034  F062         	movff	?___fldiv+2,_Colour_decider$3144+2
 12391   001246  C035  F063         	movff	?___fldiv+3,_Colour_decider$3144+3
 12392   00124A                     
 12393                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12394   00124A  0E00               	movlw	0
 12395   00124C  6E05               	movwf	___fladd@a^0,c
 12396   00124E  0E00               	movlw	0
 12397   001250  6E06               	movwf	(___fladd@a+1)^0,c
 12398   001252  0E00               	movlw	0
 12399   001254  6E07               	movwf	(___fladd@a+2)^0,c
 12400   001256  0E40               	movlw	64
 12401   001258  6E08               	movwf	(___fladd@a+3)^0,c
 12402   00125A  C060  F001         	movff	_Colour_decider$3144,___fladd@b
 12403   00125E  C061  F002         	movff	_Colour_decider$3144+1,___fladd@b+1
 12404   001262  C062  F003         	movff	_Colour_decider$3144+2,___fladd@b+2
 12405   001266  C063  F004         	movff	_Colour_decider$3144+3,___fladd@b+3
 12406   00126A  EC97  F014         	call	___fladd	;wreg free
 12407   00126E  C001  F011         	movff	?___fladd,___flmul@b
 12408   001272  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12409   001276  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12410   00127A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12411   00127E  0E00               	movlw	0
 12412   001280  6E15               	movwf	___flmul@a^0,c
 12413   001282  0E00               	movlw	0
 12414   001284  6E16               	movwf	(___flmul@a+1)^0,c
 12415   001286  0E70               	movlw	112
 12416   001288  6E17               	movwf	(___flmul@a+2)^0,c
 12417   00128A  0E42               	movlw	66
 12418   00128C  6E18               	movwf	(___flmul@a+3)^0,c
 12419   00128E  ECF7  F016         	call	___flmul	;wreg free
 12420   001292  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12421   001296  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12422   00129A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12423   00129E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12424                           
 12425                           ;color.c: 155:     }
 12426   0012A2  EFBD  F009         	goto	l5409
 12427   0012A6                     l5405:
 12428                           
 12429                           ; BSR set to: 0
 12430                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12431   0012A6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12432   0012AA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12433   0012AE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12434   0012B2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12435   0012B6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12436   0012BA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12437   0012BE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12438   0012C2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12439   0012C6  ECED  F02E         	call	___flsub	;wreg free
 12440   0012CA  C02A  F036         	movff	?___flsub,___fldiv@a
 12441   0012CE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12442   0012D2  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12443   0012D6  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12444   0012DA  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12445   0012DE  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12446   0012E2  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12447   0012E6  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12448   0012EA  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12449   0012EE  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12450   0012F2  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12451   0012F6  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12452   0012FA  ECED  F02E         	call	___flsub	;wreg free
 12453   0012FE  C02A  F032         	movff	?___flsub,___fldiv@b
 12454   001302  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12455   001306  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12456   00130A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12457   00130E  EC0C  F019         	call	___fldiv	;wreg free
 12458   001312  C032  F060         	movff	?___fldiv,_Colour_decider$3144
 12459   001316  C033  F061         	movff	?___fldiv+1,_Colour_decider$3144+1
 12460   00131A  C034  F062         	movff	?___fldiv+2,_Colour_decider$3144+2
 12461   00131E  C035  F063         	movff	?___fldiv+3,_Colour_decider$3144+3
 12462   001322                     
 12463                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12464   001322  0E00               	movlw	0
 12465   001324  6E05               	movwf	___fladd@a^0,c
 12466   001326  0E00               	movlw	0
 12467   001328  6E06               	movwf	(___fladd@a+1)^0,c
 12468   00132A  0E80               	movlw	128
 12469   00132C  6E07               	movwf	(___fladd@a+2)^0,c
 12470   00132E  0E40               	movlw	64
 12471   001330  6E08               	movwf	(___fladd@a+3)^0,c
 12472   001332  C060  F001         	movff	_Colour_decider$3144,___fladd@b
 12473   001336  C061  F002         	movff	_Colour_decider$3144+1,___fladd@b+1
 12474   00133A  C062  F003         	movff	_Colour_decider$3144+2,___fladd@b+2
 12475   00133E  C063  F004         	movff	_Colour_decider$3144+3,___fladd@b+3
 12476   001342  EC97  F014         	call	___fladd	;wreg free
 12477   001346  C001  F011         	movff	?___fladd,___flmul@b
 12478   00134A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12479   00134E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12480   001352  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12481   001356  0E00               	movlw	0
 12482   001358  6E15               	movwf	___flmul@a^0,c
 12483   00135A  0E00               	movlw	0
 12484   00135C  6E16               	movwf	(___flmul@a+1)^0,c
 12485   00135E  0E70               	movlw	112
 12486   001360  6E17               	movwf	(___flmul@a+2)^0,c
 12487   001362  0E42               	movlw	66
 12488   001364  6E18               	movwf	(___flmul@a+3)^0,c
 12489   001366  ECF7  F016         	call	___flmul	;wreg free
 12490   00136A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12491   00136E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12492   001372  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12493   001376  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12494   00137A                     l5409:
 12495                           
 12496                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12497   00137A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12498   00137E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12499   001382  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12500   001386  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12501   00138A  0E00               	movlw	0
 12502   00138C  6E2E               	movwf	___flge@ff2^0,c
 12503   00138E  0E00               	movlw	0
 12504   001390  6E2F               	movwf	(___flge@ff2+1)^0,c
 12505   001392  0EA5               	movlw	165
 12506   001394  6E30               	movwf	(___flge@ff2+2)^0,c
 12507   001396  0E43               	movlw	67
 12508   001398  6E31               	movwf	(___flge@ff2+3)^0,c
 12509   00139A  EC0A  F026         	call	___flge	;wreg free
 12510   00139E  A0D8               	btfss	status,0,c
 12511   0013A0  EFD4  F009         	goto	u5291
 12512   0013A4  EFD6  F009         	goto	u5290
 12513   0013A8                     u5291:
 12514   0013A8  EFF5  F009         	goto	l5419
 12515   0013AC                     u5290:
 12516   0013AC  0E00               	movlw	0
 12517   0013AE  6E2A               	movwf	___flge@ff1^0,c
 12518   0013B0  0E00               	movlw	0
 12519   0013B2  6E2B               	movwf	(___flge@ff1+1)^0,c
 12520   0013B4  0EB4               	movlw	180
 12521   0013B6  6E2C               	movwf	(___flge@ff1+2)^0,c
 12522   0013B8  0E43               	movlw	67
 12523   0013BA  6E2D               	movwf	(___flge@ff1+3)^0,c
 12524   0013BC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12525   0013C0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12526   0013C4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12527   0013C8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12528   0013CC  EC0A  F026         	call	___flge	;wreg free
 12529   0013D0  A0D8               	btfss	status,0,c
 12530   0013D2  EFED  F009         	goto	u5301
 12531   0013D6  EFEF  F009         	goto	u5300
 12532   0013DA                     u5301:
 12533   0013DA  EFF5  F009         	goto	l5419
 12534   0013DE                     u5300:
 12535   0013DE                     
 12536                           ;color.c: 164:         return 1;
 12537   0013DE  0E00               	movlw	0
 12538   0013E0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12539   0013E2  0E01               	movlw	1
 12540   0013E4  6E4B               	movwf	?_Colour_decider^0,c
 12541   0013E6  EF96  F00C         	goto	l76
 12542   0013EA                     l5419:
 12543   0013EA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12544   0013EE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12545   0013F2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12546   0013F6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12547   0013FA  0E00               	movlw	0
 12548   0013FC  6E2E               	movwf	___flge@ff2^0,c
 12549   0013FE  0E00               	movlw	0
 12550   001400  6E2F               	movwf	(___flge@ff2+1)^0,c
 12551   001402  0EA0               	movlw	160
 12552   001404  6E30               	movwf	(___flge@ff2+2)^0,c
 12553   001406  0E40               	movlw	64
 12554   001408  6E31               	movwf	(___flge@ff2+3)^0,c
 12555   00140A  EC0A  F026         	call	___flge	;wreg free
 12556   00140E  A0D8               	btfss	status,0,c
 12557   001410  EF0C  F00A         	goto	u5311
 12558   001414  EF0E  F00A         	goto	u5310
 12559   001418                     u5311:
 12560   001418  EF2D  F00A         	goto	l5429
 12561   00141C                     u5310:
 12562   00141C  0E00               	movlw	0
 12563   00141E  6E2A               	movwf	___flge@ff1^0,c
 12564   001420  0E00               	movlw	0
 12565   001422  6E2B               	movwf	(___flge@ff1+1)^0,c
 12566   001424  0E40               	movlw	64
 12567   001426  6E2C               	movwf	(___flge@ff1+2)^0,c
 12568   001428  0E41               	movlw	65
 12569   00142A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12570   00142C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12571   001430  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12572   001434  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12573   001438  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12574   00143C  EC0A  F026         	call	___flge	;wreg free
 12575   001440  A0D8               	btfss	status,0,c
 12576   001442  EF25  F00A         	goto	u5321
 12577   001446  EF27  F00A         	goto	u5320
 12578   00144A                     u5321:
 12579   00144A  EF2D  F00A         	goto	l5429
 12580   00144E                     u5320:
 12581   00144E                     
 12582                           ;color.c: 168:         return 2;
 12583   00144E  0E00               	movlw	0
 12584   001450  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12585   001452  0E02               	movlw	2
 12586   001454  6E4B               	movwf	?_Colour_decider^0,c
 12587   001456  EF96  F00C         	goto	l76
 12588   00145A                     l5429:
 12589   00145A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12590   00145E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12591   001462  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12592   001466  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12593   00146A  0E00               	movlw	0
 12594   00146C  6E2E               	movwf	___flge@ff2^0,c
 12595   00146E  0E00               	movlw	0
 12596   001470  6E2F               	movwf	(___flge@ff2+1)^0,c
 12597   001472  0EA0               	movlw	160
 12598   001474  6E30               	movwf	(___flge@ff2+2)^0,c
 12599   001476  0E41               	movlw	65
 12600   001478  6E31               	movwf	(___flge@ff2+3)^0,c
 12601   00147A  EC0A  F026         	call	___flge	;wreg free
 12602   00147E  A0D8               	btfss	status,0,c
 12603   001480  EF44  F00A         	goto	u5331
 12604   001484  EF46  F00A         	goto	u5330
 12605   001488                     u5331:
 12606   001488  EFC6  F00A         	goto	l5455
 12607   00148C                     u5330:
 12608   00148C  0E00               	movlw	0
 12609   00148E  6E2A               	movwf	___flge@ff1^0,c
 12610   001490  0E00               	movlw	0
 12611   001492  6E2B               	movwf	(___flge@ff1+1)^0,c
 12612   001494  0EE8               	movlw	232
 12613   001496  6E2C               	movwf	(___flge@ff1+2)^0,c
 12614   001498  0E41               	movlw	65
 12615   00149A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12616   00149C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12617   0014A0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12618   0014A4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12619   0014A8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12620   0014AC  EC0A  F026         	call	___flge	;wreg free
 12621   0014B0  A0D8               	btfss	status,0,c
 12622   0014B2  EF5D  F00A         	goto	u5341
 12623   0014B6  EF5F  F00A         	goto	u5340
 12624   0014BA                     u5341:
 12625   0014BA  EFC6  F00A         	goto	l5455
 12626   0014BE                     u5340:
 12627   0014BE                     
 12628                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12629   0014BE  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12630   0014C2  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12631   0014C6  CFDE F02A          	movff	postinc2,___flge@ff1
 12632   0014CA  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12633   0014CE  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12634   0014D2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12635   0014D6  0ECD               	movlw	205
 12636   0014D8  6E2E               	movwf	___flge@ff2^0,c
 12637   0014DA  0ECC               	movlw	204
 12638   0014DC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12639   0014DE  0E4C               	movlw	76
 12640   0014E0  6E30               	movwf	(___flge@ff2+2)^0,c
 12641   0014E2  0E3E               	movlw	62
 12642   0014E4  6E31               	movwf	(___flge@ff2+3)^0,c
 12643   0014E6  EC0A  F026         	call	___flge	;wreg free
 12644   0014EA  A0D8               	btfss	status,0,c
 12645   0014EC  EF7A  F00A         	goto	u5351
 12646   0014F0  EF7C  F00A         	goto	u5350
 12647   0014F4                     u5351:
 12648   0014F4  EF9B  F00A         	goto	l5443
 12649   0014F8                     u5350:
 12650   0014F8  0E00               	movlw	0
 12651   0014FA  6E2A               	movwf	___flge@ff1^0,c
 12652   0014FC  0E00               	movlw	0
 12653   0014FE  6E2B               	movwf	(___flge@ff1+1)^0,c
 12654   001500  0E80               	movlw	128
 12655   001502  6E2C               	movwf	(___flge@ff1+2)^0,c
 12656   001504  0E3E               	movlw	62
 12657   001506  6E2D               	movwf	(___flge@ff1+3)^0,c
 12658   001508  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12659   00150C  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12660   001510  CFDE F02E          	movff	postinc2,___flge@ff2
 12661   001514  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12662   001518  CFDE F030          	movff	postinc2,___flge@ff2+2
 12663   00151C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12664   001520  EC0A  F026         	call	___flge	;wreg free
 12665   001524  A0D8               	btfss	status,0,c
 12666   001526  EF97  F00A         	goto	u5361
 12667   00152A  EF99  F00A         	goto	u5360
 12668   00152E                     u5361:
 12669   00152E  EF9B  F00A         	goto	l5443
 12670   001532                     u5360:
 12671   001532  EF5A  F008         	goto	l5387
 12672   001536                     l5443:
 12673   001536  EE20 F008          	lfsr	2,8
 12674   00153A  504D               	movf	Colour_decider@rel^0,w,c
 12675   00153C  26D9               	addwf	fsr2l,f,c
 12676   00153E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12677   001540  22DA               	addwfc	fsr2h,f,c
 12678   001542  CFDE F02A          	movff	postinc2,___flge@ff1
 12679   001546  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12680   00154A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12681   00154E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12682   001552  0E29               	movlw	41
 12683   001554  6E2E               	movwf	___flge@ff2^0,c
 12684   001556  0E5C               	movlw	92
 12685   001558  6E2F               	movwf	(___flge@ff2+1)^0,c
 12686   00155A  0E0F               	movlw	15
 12687   00155C  6E30               	movwf	(___flge@ff2+2)^0,c
 12688   00155E  0E3E               	movlw	62
 12689   001560  6E31               	movwf	(___flge@ff2+3)^0,c
 12690   001562  EC0A  F026         	call	___flge	;wreg free
 12691   001566  A0D8               	btfss	status,0,c
 12692   001568  EFB8  F00A         	goto	u5371
 12693   00156C  EFBA  F00A         	goto	u5370
 12694   001570                     u5371:
 12695   001570  EFC0  F00A         	goto	l5451
 12696   001574                     u5370:
 12697   001574                     l5445:
 12698                           
 12699                           ;color.c: 179:             return 4;
 12700   001574  0E00               	movlw	0
 12701   001576  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12702   001578  0E04               	movlw	4
 12703   00157A  6E4B               	movwf	?_Colour_decider^0,c
 12704   00157C  EF96  F00C         	goto	l76
 12705   001580                     l5451:
 12706                           
 12707                           ;color.c: 182:             return 3;
 12708   001580  0E00               	movlw	0
 12709   001582  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12710   001584  0E03               	movlw	3
 12711   001586  6E4B               	movwf	?_Colour_decider^0,c
 12712   001588  EF96  F00C         	goto	l76
 12713   00158C                     l5455:
 12714   00158C  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12715   001590  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12716   001594  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12717   001598  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12718   00159C  0E00               	movlw	0
 12719   00159E  6E2E               	movwf	___flge@ff2^0,c
 12720   0015A0  0E00               	movlw	0
 12721   0015A2  6E2F               	movwf	(___flge@ff2+1)^0,c
 12722   0015A4  0E34               	movlw	52
 12723   0015A6  6E30               	movwf	(___flge@ff2+2)^0,c
 12724   0015A8  0E42               	movlw	66
 12725   0015AA  6E31               	movwf	(___flge@ff2+3)^0,c
 12726   0015AC  EC0A  F026         	call	___flge	;wreg free
 12727   0015B0  A0D8               	btfss	status,0,c
 12728   0015B2  EFDD  F00A         	goto	u5381
 12729   0015B6  EFDF  F00A         	goto	u5380
 12730   0015BA                     u5381:
 12731   0015BA  EF44  F00B         	goto	l5479
 12732   0015BE                     u5380:
 12733   0015BE  0E00               	movlw	0
 12734   0015C0  6E2A               	movwf	___flge@ff1^0,c
 12735   0015C2  0E00               	movlw	0
 12736   0015C4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12737   0015C6  0EA0               	movlw	160
 12738   0015C8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12739   0015CA  0E42               	movlw	66
 12740   0015CC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12741   0015CE  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12742   0015D2  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12743   0015D6  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12744   0015DA  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12745   0015DE  EC0A  F026         	call	___flge	;wreg free
 12746   0015E2  A0D8               	btfss	status,0,c
 12747   0015E4  EFF6  F00A         	goto	u5391
 12748   0015E8  EFF8  F00A         	goto	u5390
 12749   0015EC                     u5391:
 12750   0015EC  EF44  F00B         	goto	l5479
 12751   0015F0                     u5390:
 12752   0015F0                     
 12753                           ;color.c: 188:         if(0.15<=rel->B){
 12754   0015F0  EE20 F008          	lfsr	2,8
 12755   0015F4  504D               	movf	Colour_decider@rel^0,w,c
 12756   0015F6  26D9               	addwf	fsr2l,f,c
 12757   0015F8  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12758   0015FA  22DA               	addwfc	fsr2h,f,c
 12759   0015FC  CFDE F02A          	movff	postinc2,___flge@ff1
 12760   001600  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12761   001604  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12762   001608  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12763   00160C  0E9A               	movlw	154
 12764   00160E  6E2E               	movwf	___flge@ff2^0,c
 12765   001610  0E99               	movlw	153
 12766   001612  6E2F               	movwf	(___flge@ff2+1)^0,c
 12767   001614  0E19               	movlw	25
 12768   001616  6E30               	movwf	(___flge@ff2+2)^0,c
 12769   001618  0E3E               	movlw	62
 12770   00161A  6E31               	movwf	(___flge@ff2+3)^0,c
 12771   00161C  EC0A  F026         	call	___flge	;wreg free
 12772   001620  A0D8               	btfss	status,0,c
 12773   001622  EF15  F00B         	goto	u5401
 12774   001626  EF17  F00B         	goto	u5400
 12775   00162A                     u5401:
 12776   00162A  EF19  F00B         	goto	l5467
 12777   00162E                     u5400:
 12778   00162E  EFBA  F00A         	goto	l5445
 12779   001632                     l5467:
 12780   001632  EE20 F008          	lfsr	2,8
 12781   001636  504D               	movf	Colour_decider@rel^0,w,c
 12782   001638  26D9               	addwf	fsr2l,f,c
 12783   00163A  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12784   00163C  22DA               	addwfc	fsr2h,f,c
 12785   00163E  CFDE F02A          	movff	postinc2,___flge@ff1
 12786   001642  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12787   001646  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12788   00164A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12789   00164E  0E8F               	movlw	143
 12790   001650  6E2E               	movwf	___flge@ff2^0,c
 12791   001652  0EC2               	movlw	194
 12792   001654  6E2F               	movwf	(___flge@ff2+1)^0,c
 12793   001656  0EF5               	movlw	245
 12794   001658  6E30               	movwf	(___flge@ff2+2)^0,c
 12795   00165A  0E3D               	movlw	61
 12796   00165C  6E31               	movwf	(___flge@ff2+3)^0,c
 12797   00165E  EC0A  F026         	call	___flge	;wreg free
 12798   001662  A0D8               	btfss	status,0,c
 12799   001664  EF36  F00B         	goto	u5411
 12800   001668  EF38  F00B         	goto	u5410
 12801   00166C                     u5411:
 12802   00166C  EF3E  F00B         	goto	l5475
 12803   001670                     u5410:
 12804   001670                     l5469:
 12805                           
 12806                           ;color.c: 192:             return 6;
 12807   001670  0E00               	movlw	0
 12808   001672  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12809   001674  0E06               	movlw	6
 12810   001676  6E4B               	movwf	?_Colour_decider^0,c
 12811   001678  EF96  F00C         	goto	l76
 12812   00167C                     l5475:
 12813                           
 12814                           ;color.c: 195:             return 5;
 12815   00167C  0E00               	movlw	0
 12816   00167E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12817   001680  0E05               	movlw	5
 12818   001682  6E4B               	movwf	?_Colour_decider^0,c
 12819   001684  EF96  F00C         	goto	l76
 12820   001688                     l5479:
 12821   001688  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12822   00168C  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12823   001690  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12824   001694  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12825   001698  0E00               	movlw	0
 12826   00169A  6E2E               	movwf	___flge@ff2^0,c
 12827   00169C  0E00               	movlw	0
 12828   00169E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12829   0016A0  0EA2               	movlw	162
 12830   0016A2  6E30               	movwf	(___flge@ff2+2)^0,c
 12831   0016A4  0E42               	movlw	66
 12832   0016A6  6E31               	movwf	(___flge@ff2+3)^0,c
 12833   0016A8  EC0A  F026         	call	___flge	;wreg free
 12834   0016AC  A0D8               	btfss	status,0,c
 12835   0016AE  EF5B  F00B         	goto	u5421
 12836   0016B2  EF5D  F00B         	goto	u5420
 12837   0016B6                     u5421:
 12838   0016B6  EF97  F00B         	goto	l5495
 12839   0016BA                     u5420:
 12840   0016BA  0E00               	movlw	0
 12841   0016BC  6E2A               	movwf	___flge@ff1^0,c
 12842   0016BE  0E00               	movlw	0
 12843   0016C0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12844   0016C2  0EE6               	movlw	230
 12845   0016C4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12846   0016C6  0E42               	movlw	66
 12847   0016C8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12848   0016CA  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12849   0016CE  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12850   0016D2  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12851   0016D6  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12852   0016DA  EC0A  F026         	call	___flge	;wreg free
 12853   0016DE  A0D8               	btfss	status,0,c
 12854   0016E0  EF74  F00B         	goto	u5431
 12855   0016E4  EF76  F00B         	goto	u5430
 12856   0016E8                     u5431:
 12857   0016E8  EF97  F00B         	goto	l5495
 12858   0016EC                     u5430:
 12859   0016EC                     
 12860                           ;color.c: 201:         if(0.15<=rel->B){
 12861   0016EC  EE20 F008          	lfsr	2,8
 12862   0016F0  504D               	movf	Colour_decider@rel^0,w,c
 12863   0016F2  26D9               	addwf	fsr2l,f,c
 12864   0016F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12865   0016F6  22DA               	addwfc	fsr2h,f,c
 12866   0016F8  CFDE F02A          	movff	postinc2,___flge@ff1
 12867   0016FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12868   001700  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12869   001704  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12870   001708  0E9A               	movlw	154
 12871   00170A  6E2E               	movwf	___flge@ff2^0,c
 12872   00170C  0E99               	movlw	153
 12873   00170E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12874   001710  0E19               	movlw	25
 12875   001712  6E30               	movwf	(___flge@ff2+2)^0,c
 12876   001714  0E3E               	movlw	62
 12877   001716  6E31               	movwf	(___flge@ff2+3)^0,c
 12878   001718  EC0A  F026         	call	___flge	;wreg free
 12879   00171C  A0D8               	btfss	status,0,c
 12880   00171E  EF93  F00B         	goto	u5441
 12881   001722  EF95  F00B         	goto	u5440
 12882   001726                     u5441:
 12883   001726  EF38  F00B         	goto	l5469
 12884   00172A                     u5440:
 12885   00172A  EFBA  F00A         	goto	l5445
 12886   00172E                     l5495:
 12887   00172E  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12888   001732  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12889   001736  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12890   00173A  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12891   00173E  0E00               	movlw	0
 12892   001740  6E2E               	movwf	___flge@ff2^0,c
 12893   001742  0E00               	movlw	0
 12894   001744  6E2F               	movwf	(___flge@ff2+1)^0,c
 12895   001746  0EF0               	movlw	240
 12896   001748  6E30               	movwf	(___flge@ff2+2)^0,c
 12897   00174A  0E41               	movlw	65
 12898   00174C  6E31               	movwf	(___flge@ff2+3)^0,c
 12899   00174E  EC0A  F026         	call	___flge	;wreg free
 12900   001752  A0D8               	btfss	status,0,c
 12901   001754  EFAE  F00B         	goto	u5451
 12902   001758  EFB0  F00B         	goto	u5450
 12903   00175C                     u5451:
 12904   00175C  EFC9  F00B         	goto	l5499
 12905   001760                     u5450:
 12906   001760  0E00               	movlw	0
 12907   001762  6E2A               	movwf	___flge@ff1^0,c
 12908   001764  0E00               	movlw	0
 12909   001766  6E2B               	movwf	(___flge@ff1+1)^0,c
 12910   001768  0E68               	movlw	104
 12911   00176A  6E2C               	movwf	(___flge@ff1+2)^0,c
 12912   00176C  0E42               	movlw	66
 12913   00176E  6E2D               	movwf	(___flge@ff1+3)^0,c
 12914   001770  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12915   001774  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12916   001778  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12917   00177C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12918   001780  EC0A  F026         	call	___flge	;wreg free
 12919   001784  B0D8               	btfsc	status,0,c
 12920   001786  EFC7  F00B         	goto	u5461
 12921   00178A  EFC9  F00B         	goto	u5460
 12922   00178E                     u5461:
 12923   00178E  EFBA  F00A         	goto	l5445
 12924   001792                     u5460:
 12925   001792                     l5499:
 12926   001792  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12927   001796  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12928   00179A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12929   00179E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12930   0017A2  0E00               	movlw	0
 12931   0017A4  6E2E               	movwf	___flge@ff2^0,c
 12932   0017A6  0E00               	movlw	0
 12933   0017A8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12934   0017AA  0EF0               	movlw	240
 12935   0017AC  6E30               	movwf	(___flge@ff2+2)^0,c
 12936   0017AE  0E42               	movlw	66
 12937   0017B0  6E31               	movwf	(___flge@ff2+3)^0,c
 12938   0017B2  EC0A  F026         	call	___flge	;wreg free
 12939   0017B6  A0D8               	btfss	status,0,c
 12940   0017B8  EFE0  F00B         	goto	u5471
 12941   0017BC  EFE2  F00B         	goto	u5470
 12942   0017C0                     u5471:
 12943   0017C0  EFFD  F00B         	goto	l5509
 12944   0017C4                     u5470:
 12945   0017C4  0E00               	movlw	0
 12946   0017C6  6E2A               	movwf	___flge@ff1^0,c
 12947   0017C8  0E00               	movlw	0
 12948   0017CA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12949   0017CC  0E5C               	movlw	92
 12950   0017CE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12951   0017D0  0E43               	movlw	67
 12952   0017D2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12953   0017D4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12954   0017D8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12955   0017DC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12956   0017E0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12957   0017E4  EC0A  F026         	call	___flge	;wreg free
 12958   0017E8  A0D8               	btfss	status,0,c
 12959   0017EA  EFF9  F00B         	goto	u5481
 12960   0017EE  EFFB  F00B         	goto	u5480
 12961   0017F2                     u5481:
 12962   0017F2  EFFD  F00B         	goto	l5509
 12963   0017F6                     u5480:
 12964   0017F6  EFBA  F00A         	goto	l5445
 12965   0017FA                     l5509:
 12966   0017FA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12967   0017FE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12968   001802  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12969   001806  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12970   00180A  0E00               	movlw	0
 12971   00180C  6E2E               	movwf	___flge@ff2^0,c
 12972   00180E  0E00               	movlw	0
 12973   001810  6E2F               	movwf	(___flge@ff2+1)^0,c
 12974   001812  0E60               	movlw	96
 12975   001814  6E30               	movwf	(___flge@ff2+2)^0,c
 12976   001816  0E41               	movlw	65
 12977   001818  6E31               	movwf	(___flge@ff2+3)^0,c
 12978   00181A  EC0A  F026         	call	___flge	;wreg free
 12979   00181E  A0D8               	btfss	status,0,c
 12980   001820  EF14  F00C         	goto	u5491
 12981   001824  EF16  F00C         	goto	u5490
 12982   001828                     u5491:
 12983   001828  EF92  F00C         	goto	l5535
 12984   00182C                     u5490:
 12985   00182C  0E00               	movlw	0
 12986   00182E  6E2A               	movwf	___flge@ff1^0,c
 12987   001830  0E00               	movlw	0
 12988   001832  6E2B               	movwf	(___flge@ff1+1)^0,c
 12989   001834  0E98               	movlw	152
 12990   001836  6E2C               	movwf	(___flge@ff1+2)^0,c
 12991   001838  0E41               	movlw	65
 12992   00183A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12993   00183C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12994   001840  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12995   001844  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12996   001848  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12997   00184C  EC0A  F026         	call	___flge	;wreg free
 12998   001850  A0D8               	btfss	status,0,c
 12999   001852  EF2D  F00C         	goto	u5501
 13000   001856  EF2F  F00C         	goto	u5500
 13001   00185A                     u5501:
 13002   00185A  EF92  F00C         	goto	l5535
 13003   00185E                     u5500:
 13004   00185E                     
 13005                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 13006   00185E  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13007   001862  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13008   001866  CFDE F02A          	movff	postinc2,___flge@ff1
 13009   00186A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13010   00186E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13011   001872  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13012   001876  0ECD               	movlw	205
 13013   001878  6E2E               	movwf	___flge@ff2^0,c
 13014   00187A  0ECC               	movlw	204
 13015   00187C  6E2F               	movwf	(___flge@ff2+1)^0,c
 13016   00187E  0E4C               	movlw	76
 13017   001880  6E30               	movwf	(___flge@ff2+2)^0,c
 13018   001882  0E3E               	movlw	62
 13019   001884  6E31               	movwf	(___flge@ff2+3)^0,c
 13020   001886  EC0A  F026         	call	___flge	;wreg free
 13021   00188A  A0D8               	btfss	status,0,c
 13022   00188C  EF4A  F00C         	goto	u5511
 13023   001890  EF4C  F00C         	goto	u5510
 13024   001894                     u5511:
 13025   001894  EF6B  F00C         	goto	l5523
 13026   001898                     u5510:
 13027   001898  0E1F               	movlw	31
 13028   00189A  6E2A               	movwf	___flge@ff1^0,c
 13029   00189C  0E85               	movlw	133
 13030   00189E  6E2B               	movwf	(___flge@ff1+1)^0,c
 13031   0018A0  0E6B               	movlw	107
 13032   0018A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 13033   0018A4  0E3E               	movlw	62
 13034   0018A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 13035   0018A8  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13036   0018AC  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13037   0018B0  CFDE F02E          	movff	postinc2,___flge@ff2
 13038   0018B4  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13039   0018B8  CFDE F030          	movff	postinc2,___flge@ff2+2
 13040   0018BC  CFDE F031          	movff	postinc2,___flge@ff2+3
 13041   0018C0  EC0A  F026         	call	___flge	;wreg free
 13042   0018C4  A0D8               	btfss	status,0,c
 13043   0018C6  EF67  F00C         	goto	u5521
 13044   0018CA  EF69  F00C         	goto	u5520
 13045   0018CE                     u5521:
 13046   0018CE  EF6B  F00C         	goto	l5523
 13047   0018D2                     u5520:
 13048   0018D2  EF5A  F008         	goto	l5387
 13049   0018D6                     l5523:
 13050   0018D6  EE20 F008          	lfsr	2,8
 13051   0018DA  504D               	movf	Colour_decider@rel^0,w,c
 13052   0018DC  26D9               	addwf	fsr2l,f,c
 13053   0018DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13054   0018E0  22DA               	addwfc	fsr2h,f,c
 13055   0018E2  CFDE F02A          	movff	postinc2,___flge@ff1
 13056   0018E6  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13057   0018EA  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13058   0018EE  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13059   0018F2  0E9A               	movlw	154
 13060   0018F4  6E2E               	movwf	___flge@ff2^0,c
 13061   0018F6  0E99               	movlw	153
 13062   0018F8  6E2F               	movwf	(___flge@ff2+1)^0,c
 13063   0018FA  0E19               	movlw	25
 13064   0018FC  6E30               	movwf	(___flge@ff2+2)^0,c
 13065   0018FE  0E3E               	movlw	62
 13066   001900  6E31               	movwf	(___flge@ff2+3)^0,c
 13067   001902  EC0A  F026         	call	___flge	;wreg free
 13068   001906  A0D8               	btfss	status,0,c
 13069   001908  EF88  F00C         	goto	u5531
 13070   00190C  EF8A  F00C         	goto	u5530
 13071   001910                     u5531:
 13072   001910  EF8C  F00C         	goto	l5531
 13073   001914                     u5530:
 13074   001914  EFBA  F00A         	goto	l5445
 13075   001918                     l5531:
 13076                           
 13077                           ;color.c: 223:             return 7;
 13078   001918  0E00               	movlw	0
 13079   00191A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13080   00191C  0E07               	movlw	7
 13081   00191E  6E4B               	movwf	?_Colour_decider^0,c
 13082   001920  EF96  F00C         	goto	l76
 13083   001924                     l5535:
 13084                           
 13085                           ;color.c: 227:         return 10;
 13086   001924  0E00               	movlw	0
 13087   001926  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13088   001928  0E0A               	movlw	10
 13089   00192A  6E4B               	movwf	?_Colour_decider^0,c
 13090   00192C                     l76:
 13091   00192C  0012               	return		;funcret
 13092   00192E                     __end_of_Colour_decider:
 13093                           	callstack 0
 13094                           
 13095 ;; *************** function ___xxtofl *****************
 13096 ;; Defined at:
 13097 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;  sign            1    wreg     unsigned char 
 13100 ;;  val             4    0[COMRAM] long 
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;  sign            1    8[COMRAM] unsigned char 
 13103 ;;  arg             4   10[COMRAM] unsigned long 
 13104 ;;  exp             1    9[COMRAM] unsigned char 
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  4    0[COMRAM] unsigned char 
 13107 ;; Registers used:
 13108 ;;		wreg, status,2, status,0
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13115 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13116 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13117 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13118 ;;Total ram usage:       14 bytes
 13119 ;; Hardware stack levels used: 1
 13120 ;; This function calls:
 13121 ;;		Nothing
 13122 ;; This function is called by:
 13123 ;;		_colour_rel
 13124 ;;		_Colour_decider
 13125 ;;		_reverseOneBlock
 13126 ;;		_ForwardOneBlock
 13127 ;;		_Forwardhalfblock
 13128 ;;		_Backhalfblock
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132                           	psect	text72
 13133   004502                     __ptext72:
 13134                           	callstack 0
 13135   004502                     ___xxtofl:
 13136                           	callstack 29
 13137                           
 13138                           ;incstack = 0
 13139                           ;___xxtofl@sign stored from wreg
 13140   004502  6E09               	movwf	___xxtofl@sign^0,c
 13141   004504  5009               	movf	___xxtofl@sign^0,w,c
 13142   004506  B4D8               	btfsc	status,2,c
 13143   004508  EF88  F022         	goto	u5101
 13144   00450C  EF8A  F022         	goto	u5100
 13145   004510                     u5101:
 13146   004510  EFAC  F022         	goto	l1349
 13147   004514                     u5100:
 13148   004514  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13149   004516  EF91  F022         	goto	u5110
 13150   00451A  EF8F  F022         	goto	u5111
 13151   00451E                     u5111:
 13152   00451E  EFAC  F022         	goto	l1349
 13153   004522                     u5110:
 13154   004522  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13155   004526  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13156   00452A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13157   00452E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13158   004532  1E05               	comf	??___xxtofl^0,f,c
 13159   004534  1E06               	comf	(??___xxtofl+1)^0,f,c
 13160   004536  1E07               	comf	(??___xxtofl+2)^0,f,c
 13161   004538  1E08               	comf	(??___xxtofl+3)^0,f,c
 13162   00453A  2A05               	incf	??___xxtofl^0,f,c
 13163   00453C  0E00               	movlw	0
 13164   00453E  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13165   004540  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13166   004542  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13167   004544  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13168   004548  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13169   00454C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13170   004550  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13171   004554  EFB4  F022         	goto	l5257
 13172   004558                     l1349:
 13173   004558  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13174   00455C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13175   004560  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13176   004564  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13177   004568                     l5257:
 13178   004568  5001               	movf	___xxtofl@val^0,w,c
 13179   00456A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13180   00456C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13181   00456E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13182   004570  A4D8               	btfss	status,2,c
 13183   004572  EFBD  F022         	goto	u5121
 13184   004576  EFBF  F022         	goto	u5120
 13185   00457A                     u5121:
 13186   00457A  EFC9  F022         	goto	l5263
 13187   00457E                     u5120:
 13188   00457E  0E00               	movlw	0
 13189   004580  6E01               	movwf	?___xxtofl^0,c
 13190   004582  0E00               	movlw	0
 13191   004584  6E02               	movwf	(?___xxtofl+1)^0,c
 13192   004586  0E00               	movlw	0
 13193   004588  6E03               	movwf	(?___xxtofl+2)^0,c
 13194   00458A  0E00               	movlw	0
 13195   00458C  6E04               	movwf	(?___xxtofl+3)^0,c
 13196   00458E  EF5A  F023         	goto	l1352
 13197   004592                     l5263:
 13198   004592  0E96               	movlw	150
 13199   004594  6E0A               	movwf	___xxtofl@exp^0,c
 13200   004596  EFD3  F022         	goto	l5267
 13201   00459A                     l5265:
 13202   00459A  2A0A               	incf	___xxtofl@exp^0,f,c
 13203   00459C  90D8               	bcf	status,0,c
 13204   00459E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13205   0045A0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13206   0045A2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13207   0045A4  320B               	rrcf	___xxtofl@arg^0,f,c
 13208   0045A6                     l5267:
 13209   0045A6  0E00               	movlw	0
 13210   0045A8  140B               	andwf	___xxtofl@arg^0,w,c
 13211   0045AA  6E05               	movwf	??___xxtofl^0,c
 13212   0045AC  0E00               	movlw	0
 13213   0045AE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13214   0045B0  6E06               	movwf	(??___xxtofl+1)^0,c
 13215   0045B2  0E00               	movlw	0
 13216   0045B4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13217   0045B6  6E07               	movwf	(??___xxtofl+2)^0,c
 13218   0045B8  0EFE               	movlw	254
 13219   0045BA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13220   0045BC  6E08               	movwf	(??___xxtofl+3)^0,c
 13221   0045BE  5005               	movf	??___xxtofl^0,w,c
 13222   0045C0  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13223   0045C2  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13224   0045C4  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13225   0045C6  A4D8               	btfss	status,2,c
 13226   0045C8  EFE8  F022         	goto	u5131
 13227   0045CC  EFEA  F022         	goto	u5130
 13228   0045D0                     u5131:
 13229   0045D0  EFCD  F022         	goto	l5265
 13230   0045D4                     u5130:
 13231   0045D4  EFF8  F022         	goto	l1356
 13232   0045D8                     l5269:
 13233   0045D8  2A0A               	incf	___xxtofl@exp^0,f,c
 13234   0045DA  0E01               	movlw	1
 13235   0045DC  260B               	addwf	___xxtofl@arg^0,f,c
 13236   0045DE  0E00               	movlw	0
 13237   0045E0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13238   0045E2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13239   0045E4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13240   0045E6  90D8               	bcf	status,0,c
 13241   0045E8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13242   0045EA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13243   0045EC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13244   0045EE  320B               	rrcf	___xxtofl@arg^0,f,c
 13245   0045F0                     l1356:
 13246   0045F0  0E00               	movlw	0
 13247   0045F2  140B               	andwf	___xxtofl@arg^0,w,c
 13248   0045F4  6E05               	movwf	??___xxtofl^0,c
 13249   0045F6  0E00               	movlw	0
 13250   0045F8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13251   0045FA  6E06               	movwf	(??___xxtofl+1)^0,c
 13252   0045FC  0E00               	movlw	0
 13253   0045FE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13254   004600  6E07               	movwf	(??___xxtofl+2)^0,c
 13255   004602  0EFF               	movlw	255
 13256   004604  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13257   004606  6E08               	movwf	(??___xxtofl+3)^0,c
 13258   004608  5005               	movf	??___xxtofl^0,w,c
 13259   00460A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13260   00460C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13261   00460E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13262   004610  A4D8               	btfss	status,2,c
 13263   004612  EF0D  F023         	goto	u5141
 13264   004616  EF0F  F023         	goto	u5140
 13265   00461A                     u5141:
 13266   00461A  EFEC  F022         	goto	l5269
 13267   00461E                     u5140:
 13268   00461E  EF17  F023         	goto	l5277
 13269   004622                     l5275:
 13270   004622  060A               	decf	___xxtofl@exp^0,f,c
 13271   004624  90D8               	bcf	status,0,c
 13272   004626  360B               	rlcf	___xxtofl@arg^0,f,c
 13273   004628  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13274   00462A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13275   00462C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13276   00462E                     l5277:
 13277   00462E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13278   004630  EF1C  F023         	goto	u5151
 13279   004634  EF1E  F023         	goto	u5150
 13280   004638                     u5151:
 13281   004638  EF26  F023         	goto	l1363
 13282   00463C                     u5150:
 13283   00463C  0E02               	movlw	2
 13284   00463E  600A               	cpfslt	___xxtofl@exp^0,c
 13285   004640  EF24  F023         	goto	u5161
 13286   004644  EF26  F023         	goto	u5160
 13287   004648                     u5161:
 13288   004648  EF11  F023         	goto	l5275
 13289   00464C                     u5160:
 13290   00464C                     l1363:
 13291   00464C  B00A               	btfsc	___xxtofl@exp^0,0,c
 13292   00464E  EF2B  F023         	goto	u5171
 13293   004652  EF2D  F023         	goto	u5170
 13294   004656                     u5171:
 13295   004656  EF2E  F023         	goto	l5283
 13296   00465A                     u5170:
 13297   00465A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13298   00465C                     l5283:
 13299   00465C  90D8               	bcf	status,0,c
 13300   00465E  320A               	rrcf	___xxtofl@exp^0,f,c
 13301   004660  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13302   004664  6A06               	clrf	(??___xxtofl+1)^0,c
 13303   004666  6A07               	clrf	(??___xxtofl+2)^0,c
 13304   004668  6A08               	clrf	(??___xxtofl+3)^0,c
 13305   00466A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13306   00466E  6A07               	clrf	(??___xxtofl+2)^0,c
 13307   004670  6A06               	clrf	(??___xxtofl+1)^0,c
 13308   004672  6A05               	clrf	??___xxtofl^0,c
 13309   004674  5005               	movf	??___xxtofl^0,w,c
 13310   004676  120B               	iorwf	___xxtofl@arg^0,f,c
 13311   004678  5006               	movf	(??___xxtofl+1)^0,w,c
 13312   00467A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13313   00467C  5007               	movf	(??___xxtofl+2)^0,w,c
 13314   00467E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13315   004680  5008               	movf	(??___xxtofl+3)^0,w,c
 13316   004682  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13317   004684  5009               	movf	___xxtofl@sign^0,w,c
 13318   004686  B4D8               	btfsc	status,2,c
 13319   004688  EF48  F023         	goto	u5181
 13320   00468C  EF4A  F023         	goto	u5180
 13321   004690                     u5181:
 13322   004690  EF52  F023         	goto	l5293
 13323   004694                     u5180:
 13324   004694  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13325   004696  EF51  F023         	goto	u5190
 13326   00469A  EF4F  F023         	goto	u5191
 13327   00469E                     u5191:
 13328   00469E  EF52  F023         	goto	l5293
 13329   0046A2                     u5190:
 13330   0046A2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13331   0046A4                     l5293:
 13332   0046A4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13333   0046A8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13334   0046AC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13335   0046B0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13336   0046B4                     l1352:
 13337   0046B4  0012               	return		;funcret
 13338   0046B6                     __end_of___xxtofl:
 13339                           	callstack 0
 13340                           
 13341 ;; *************** function ___flsub *****************
 13342 ;; Defined at:
 13343 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;  b               4   41[COMRAM] unsigned char 
 13346 ;;  a               4   45[COMRAM] unsigned char 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;		None
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  4   41[COMRAM] unsigned char 
 13351 ;; Registers used:
 13352 ;;		wreg, status,2, status,0, cstack
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13361 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13362 ;;Total ram usage:        8 bytes
 13363 ;; Hardware stack levels used: 1
 13364 ;; Hardware stack levels required when called: 1
 13365 ;; This function calls:
 13366 ;;		___fladd
 13367 ;; This function is called by:
 13368 ;;		_Colour_decider
 13369 ;;		_efgtoa
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text73
 13374   005DDA                     __ptext73:
 13375                           	callstack 0
 13376   005DDA                     ___flsub:
 13377                           	callstack 25
 13378   005DDA  0E00               	movlw	0
 13379   005DDC  1A2E               	xorwf	___flsub@a^0,f,c
 13380   005DDE  0E00               	movlw	0
 13381   005DE0  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13382   005DE2  0E00               	movlw	0
 13383   005DE4  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13384   005DE6  0E80               	movlw	128
 13385   005DE8  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13386   005DEA  C02A  F001         	movff	___flsub@b,___fladd@b
 13387   005DEE  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13388   005DF2  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13389   005DF6  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13390   005DFA  C02E  F005         	movff	___flsub@a,___fladd@a
 13391   005DFE  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13392   005E02  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13393   005E06  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13394   005E0A  EC97  F014         	call	___fladd	;wreg free
 13395   005E0E  C001  F02A         	movff	?___fladd,?___flsub
 13396   005E12  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13397   005E16  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13398   005E1A  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13399   005E1E  0012               	return		;funcret
 13400   005E20                     __end_of___flsub:
 13401                           	callstack 0
 13402                           
 13403 ;; *************** function ___fladd *****************
 13404 ;; Defined at:
 13405 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13406 ;; Parameters:    Size  Location     Type
 13407 ;;  b               4    0[COMRAM] unsigned char 
 13408 ;;  a               4    4[COMRAM] unsigned char 
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;  grs             1   15[COMRAM] unsigned char 
 13411 ;;  bexp            1   14[COMRAM] unsigned char 
 13412 ;;  aexp            1   13[COMRAM] unsigned char 
 13413 ;;  signs           1   12[COMRAM] unsigned char 
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  4    0[COMRAM] unsigned char 
 13416 ;; Registers used:
 13417 ;;		wreg, status,2, status,0
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13423 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13424 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13425 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13426 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13427 ;;Total ram usage:       16 bytes
 13428 ;; Hardware stack levels used: 1
 13429 ;; This function calls:
 13430 ;;		Nothing
 13431 ;; This function is called by:
 13432 ;;		_colour_rel
 13433 ;;		_Colour_decider
 13434 ;;		___flsub
 13435 ;;		_efgtoa
 13436 ;; This function uses a non-reentrant model
 13437 ;;
 13438                           
 13439                           	psect	text74
 13440   00292E                     __ptext74:
 13441                           	callstack 0
 13442   00292E                     ___fladd:
 13443                           	callstack 25
 13444   00292E  5004               	movf	(___fladd@b+3)^0,w,c
 13445   002930  0B80               	andlw	128
 13446   002932  6E0D               	movwf	___fladd@signs^0,c
 13447   002934  5004               	movf	(___fladd@b+3)^0,w,c
 13448   002936  2404               	addwf	(___fladd@b+3)^0,w,c
 13449   002938  6E0F               	movwf	___fladd@bexp^0,c
 13450   00293A  AE03               	btfss	(___fladd@b+2)^0,7,c
 13451   00293C  EFA2  F014         	goto	u3061
 13452   002940  EFA4  F014         	goto	u3060
 13453   002944                     u3061:
 13454   002944  EFA5  F014         	goto	l3899
 13455   002948                     u3060:
 13456   002948  800F               	bsf	___fladd@bexp^0,0,c
 13457   00294A                     l3899:
 13458   00294A  500F               	movf	___fladd@bexp^0,w,c
 13459   00294C  B4D8               	btfsc	status,2,c
 13460   00294E  EFAB  F014         	goto	u3071
 13461   002952  EFAD  F014         	goto	u3070
 13462   002956                     u3071:
 13463   002956  EFC2  F014         	goto	l3909
 13464   00295A                     u3070:
 13465   00295A  280F               	incf	___fladd@bexp^0,w,c
 13466   00295C  A4D8               	btfss	status,2,c
 13467   00295E  EFB3  F014         	goto	u3081
 13468   002962  EFB5  F014         	goto	u3080
 13469   002966                     u3081:
 13470   002966  EFBD  F014         	goto	l3905
 13471   00296A                     u3080:
 13472   00296A  0E00               	movlw	0
 13473   00296C  6E01               	movwf	___fladd@b^0,c
 13474   00296E  0E00               	movlw	0
 13475   002970  6E02               	movwf	(___fladd@b+1)^0,c
 13476   002972  0E00               	movlw	0
 13477   002974  6E03               	movwf	(___fladd@b+2)^0,c
 13478   002976  0E00               	movlw	0
 13479   002978  6E04               	movwf	(___fladd@b+3)^0,c
 13480   00297A                     l3905:
 13481   00297A  8E03               	bsf	(___fladd@b+2)^0,7,c
 13482   00297C  0E00               	movlw	0
 13483   00297E  6E04               	movwf	(___fladd@b+3)^0,c
 13484   002980  EFCA  F014         	goto	l3911
 13485   002984                     l3909:
 13486   002984  0E00               	movlw	0
 13487   002986  6E01               	movwf	___fladd@b^0,c
 13488   002988  0E00               	movlw	0
 13489   00298A  6E02               	movwf	(___fladd@b+1)^0,c
 13490   00298C  0E00               	movlw	0
 13491   00298E  6E03               	movwf	(___fladd@b+2)^0,c
 13492   002990  0E00               	movlw	0
 13493   002992  6E04               	movwf	(___fladd@b+3)^0,c
 13494   002994                     l3911:
 13495   002994  5008               	movf	(___fladd@a+3)^0,w,c
 13496   002996  0B80               	andlw	128
 13497   002998  6E0E               	movwf	___fladd@aexp^0,c
 13498   00299A  500D               	movf	___fladd@signs^0,w,c
 13499   00299C  180E               	xorwf	___fladd@aexp^0,w,c
 13500   00299E  B4D8               	btfsc	status,2,c
 13501   0029A0  EFD4  F014         	goto	u3091
 13502   0029A4  EFD6  F014         	goto	u3090
 13503   0029A8                     u3091:
 13504   0029A8  EFD7  F014         	goto	l3917
 13505   0029AC                     u3090:
 13506   0029AC  8C0D               	bsf	___fladd@signs^0,6,c
 13507   0029AE                     l3917:
 13508   0029AE  5008               	movf	(___fladd@a+3)^0,w,c
 13509   0029B0  2408               	addwf	(___fladd@a+3)^0,w,c
 13510   0029B2  6E0E               	movwf	___fladd@aexp^0,c
 13511   0029B4  AE07               	btfss	(___fladd@a+2)^0,7,c
 13512   0029B6  EFDF  F014         	goto	u3101
 13513   0029BA  EFE1  F014         	goto	u3100
 13514   0029BE                     u3101:
 13515   0029BE  EFE2  F014         	goto	l3923
 13516   0029C2                     u3100:
 13517   0029C2  800E               	bsf	___fladd@aexp^0,0,c
 13518   0029C4                     l3923:
 13519   0029C4  500E               	movf	___fladd@aexp^0,w,c
 13520   0029C6  B4D8               	btfsc	status,2,c
 13521   0029C8  EFE8  F014         	goto	u3111
 13522   0029CC  EFEA  F014         	goto	u3110
 13523   0029D0                     u3111:
 13524   0029D0  EFFF  F014         	goto	l3933
 13525   0029D4                     u3110:
 13526   0029D4  280E               	incf	___fladd@aexp^0,w,c
 13527   0029D6  A4D8               	btfss	status,2,c
 13528   0029D8  EFF0  F014         	goto	u3121
 13529   0029DC  EFF2  F014         	goto	u3120
 13530   0029E0                     u3121:
 13531   0029E0  EFFA  F014         	goto	l3929
 13532   0029E4                     u3120:
 13533   0029E4  0E00               	movlw	0
 13534   0029E6  6E05               	movwf	___fladd@a^0,c
 13535   0029E8  0E00               	movlw	0
 13536   0029EA  6E06               	movwf	(___fladd@a+1)^0,c
 13537   0029EC  0E00               	movlw	0
 13538   0029EE  6E07               	movwf	(___fladd@a+2)^0,c
 13539   0029F0  0E00               	movlw	0
 13540   0029F2  6E08               	movwf	(___fladd@a+3)^0,c
 13541   0029F4                     l3929:
 13542   0029F4  8E07               	bsf	(___fladd@a+2)^0,7,c
 13543   0029F6  0E00               	movlw	0
 13544   0029F8  6E08               	movwf	(___fladd@a+3)^0,c
 13545   0029FA  EF07  F015         	goto	l3935
 13546   0029FE                     l3933:
 13547   0029FE  0E00               	movlw	0
 13548   002A00  6E05               	movwf	___fladd@a^0,c
 13549   002A02  0E00               	movlw	0
 13550   002A04  6E06               	movwf	(___fladd@a+1)^0,c
 13551   002A06  0E00               	movlw	0
 13552   002A08  6E07               	movwf	(___fladd@a+2)^0,c
 13553   002A0A  0E00               	movlw	0
 13554   002A0C  6E08               	movwf	(___fladd@a+3)^0,c
 13555   002A0E                     l3935:
 13556   002A0E  500F               	movf	___fladd@bexp^0,w,c
 13557   002A10  5C0E               	subwf	___fladd@aexp^0,w,c
 13558   002A12  B0D8               	btfsc	status,0,c
 13559   002A14  EF0E  F015         	goto	u3131
 13560   002A18  EF10  F015         	goto	u3130
 13561   002A1C                     u3131:
 13562   002A1C  EF37  F015         	goto	l3971
 13563   002A20                     u3130:
 13564   002A20  AC0D               	btfss	___fladd@signs^0,6,c
 13565   002A22  EF15  F015         	goto	u3141
 13566   002A26  EF17  F015         	goto	u3140
 13567   002A2A                     u3141:
 13568   002A2A  EF19  F015         	goto	l3941
 13569   002A2E                     u3140:
 13570   002A2E  0E80               	movlw	128
 13571   002A30  1A0D               	xorwf	___fladd@signs^0,f,c
 13572   002A32                     l3941:
 13573   002A32  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13574   002A36  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13575   002A3A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13576   002A3E  C001  F010         	movff	___fladd@b,___fladd@grs
 13577   002A42  C005  F001         	movff	___fladd@a,___fladd@b
 13578   002A46  C010  F005         	movff	___fladd@grs,___fladd@a
 13579   002A4A  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13580   002A4E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13581   002A52  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13582   002A56  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13583   002A5A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13584   002A5E  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13585   002A62  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13586   002A66  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13587   002A6A  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13588   002A6E                     l3971:
 13589   002A6E  0E00               	movlw	0
 13590   002A70  6E10               	movwf	___fladd@grs^0,c
 13591   002A72  500F               	movf	___fladd@bexp^0,w,c
 13592   002A74  C00E  F009         	movff	___fladd@aexp,??___fladd
 13593   002A78  6A0A               	clrf	(??___fladd+1)^0,c
 13594   002A7A  5E09               	subwf	??___fladd^0,f,c
 13595   002A7C  0E00               	movlw	0
 13596   002A7E  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13597   002A80  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13598   002A82  EF4C  F015         	goto	u3151
 13599   002A86  500A               	movf	(??___fladd+1)^0,w,c
 13600   002A88  E109               	bnz	u3150
 13601   002A8A  0E1A               	movlw	26
 13602   002A8C  5C09               	subwf	??___fladd^0,w,c
 13603   002A8E  A0D8               	btfss	status,0,c
 13604   002A90  EF4C  F015         	goto	u3151
 13605   002A94  EF4E  F015         	goto	u3150
 13606   002A98                     u3151:
 13607   002A98  EF85  F015         	goto	l1223
 13608   002A9C                     u3150:
 13609   002A9C  5001               	movf	___fladd@b^0,w,c
 13610   002A9E  1002               	iorwf	(___fladd@b+1)^0,w,c
 13611   002AA0  1003               	iorwf	(___fladd@b+2)^0,w,c
 13612   002AA2  1004               	iorwf	(___fladd@b+3)^0,w,c
 13613   002AA4  A4D8               	btfss	status,2,c
 13614   002AA6  EF57  F015         	goto	u3161
 13615   002AAA  EF5A  F015         	goto	u3160
 13616   002AAE                     u3161:
 13617   002AAE  0E01               	movlw	1
 13618   002AB0  EF5B  F015         	goto	u3170
 13619   002AB4                     u3160:
 13620   002AB4  0E00               	movlw	0
 13621   002AB6                     u3170:
 13622   002AB6  6E10               	movwf	___fladd@grs^0,c
 13623   002AB8  0E00               	movlw	0
 13624   002ABA  6E01               	movwf	___fladd@b^0,c
 13625   002ABC  0E00               	movlw	0
 13626   002ABE  6E02               	movwf	(___fladd@b+1)^0,c
 13627   002AC0  0E00               	movlw	0
 13628   002AC2  6E03               	movwf	(___fladd@b+2)^0,c
 13629   002AC4  0E00               	movlw	0
 13630   002AC6  6E04               	movwf	(___fladd@b+3)^0,c
 13631   002AC8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13632   002ACC  EF8E  F015         	goto	l1222
 13633   002AD0                     l1224:
 13634   002AD0  A010               	btfss	___fladd@grs^0,0,c
 13635   002AD2  EF6D  F015         	goto	u3181
 13636   002AD6  EF6F  F015         	goto	u3180
 13637   002ADA                     u3181:
 13638   002ADA  EF75  F015         	goto	l3983
 13639   002ADE                     u3180:
 13640   002ADE  90D8               	bcf	status,0,c
 13641   002AE0  3010               	rrcf	___fladd@grs^0,w,c
 13642   002AE2  0901               	iorlw	1
 13643   002AE4  6E10               	movwf	___fladd@grs^0,c
 13644   002AE6  EF77  F015         	goto	l3985
 13645   002AEA                     l3983:
 13646   002AEA  90D8               	bcf	status,0,c
 13647   002AEC  3210               	rrcf	___fladd@grs^0,f,c
 13648   002AEE                     l3985:
 13649   002AEE  A001               	btfss	___fladd@b^0,0,c
 13650   002AF0  EF7C  F015         	goto	u3191
 13651   002AF4  EF7E  F015         	goto	u3190
 13652   002AF8                     u3191:
 13653   002AF8  EF7F  F015         	goto	l3989
 13654   002AFC                     u3190:
 13655   002AFC  8E10               	bsf	___fladd@grs^0,7,c
 13656   002AFE                     l3989:
 13657   002AFE  3404               	rlcf	(___fladd@b+3)^0,w,c
 13658   002B00  3204               	rrcf	(___fladd@b+3)^0,f,c
 13659   002B02  3203               	rrcf	(___fladd@b+2)^0,f,c
 13660   002B04  3202               	rrcf	(___fladd@b+1)^0,f,c
 13661   002B06  3201               	rrcf	___fladd@b^0,f,c
 13662   002B08  2A0F               	incf	___fladd@bexp^0,f,c
 13663   002B0A                     l1223:
 13664   002B0A  500E               	movf	___fladd@aexp^0,w,c
 13665   002B0C  5C0F               	subwf	___fladd@bexp^0,w,c
 13666   002B0E  A0D8               	btfss	status,0,c
 13667   002B10  EF8C  F015         	goto	u3201
 13668   002B14  EF8E  F015         	goto	u3200
 13669   002B18                     u3201:
 13670   002B18  EF68  F015         	goto	l1224
 13671   002B1C                     u3200:
 13672   002B1C                     l1222:
 13673   002B1C  BC0D               	btfsc	___fladd@signs^0,6,c
 13674   002B1E  EF93  F015         	goto	u3211
 13675   002B22  EF95  F015         	goto	u3210
 13676   002B26                     u3211:
 13677   002B26  EFD5  F015         	goto	l4017
 13678   002B2A                     u3210:
 13679   002B2A  500F               	movf	___fladd@bexp^0,w,c
 13680   002B2C  A4D8               	btfss	status,2,c
 13681   002B2E  EF9B  F015         	goto	u3221
 13682   002B32  EF9D  F015         	goto	u3220
 13683   002B36                     u3221:
 13684   002B36  EFA7  F015         	goto	l3999
 13685   002B3A                     u3220:
 13686   002B3A  0E00               	movlw	0
 13687   002B3C  6E01               	movwf	?___fladd^0,c
 13688   002B3E  0E00               	movlw	0
 13689   002B40  6E02               	movwf	(?___fladd+1)^0,c
 13690   002B42  0E00               	movlw	0
 13691   002B44  6E03               	movwf	(?___fladd+2)^0,c
 13692   002B46  0E00               	movlw	0
 13693   002B48  6E04               	movwf	(?___fladd+3)^0,c
 13694   002B4A  EFF6  F016         	goto	l1231
 13695   002B4E                     l3999:
 13696   002B4E  5005               	movf	___fladd@a^0,w,c
 13697   002B50  2601               	addwf	___fladd@b^0,f,c
 13698   002B52  5006               	movf	(___fladd@a+1)^0,w,c
 13699   002B54  2202               	addwfc	(___fladd@b+1)^0,f,c
 13700   002B56  5007               	movf	(___fladd@a+2)^0,w,c
 13701   002B58  2203               	addwfc	(___fladd@b+2)^0,f,c
 13702   002B5A  5008               	movf	(___fladd@a+3)^0,w,c
 13703   002B5C  2204               	addwfc	(___fladd@b+3)^0,f,c
 13704   002B5E  A004               	btfss	(___fladd@b+3)^0,0,c
 13705   002B60  EFB4  F015         	goto	u3231
 13706   002B64  EFB6  F015         	goto	u3230
 13707   002B68                     u3231:
 13708   002B68  EF62  F016         	goto	l4053
 13709   002B6C                     u3230:
 13710   002B6C  A010               	btfss	___fladd@grs^0,0,c
 13711   002B6E  EFBB  F015         	goto	u3241
 13712   002B72  EFBD  F015         	goto	u3240
 13713   002B76                     u3241:
 13714   002B76  EFC3  F015         	goto	l4007
 13715   002B7A                     u3240:
 13716   002B7A  90D8               	bcf	status,0,c
 13717   002B7C  3010               	rrcf	___fladd@grs^0,w,c
 13718   002B7E  0901               	iorlw	1
 13719   002B80  6E10               	movwf	___fladd@grs^0,c
 13720   002B82  EFC5  F015         	goto	l4009
 13721   002B86                     l4007:
 13722   002B86  90D8               	bcf	status,0,c
 13723   002B88  3210               	rrcf	___fladd@grs^0,f,c
 13724   002B8A                     l4009:
 13725   002B8A  A001               	btfss	___fladd@b^0,0,c
 13726   002B8C  EFCA  F015         	goto	u3251
 13727   002B90  EFCC  F015         	goto	u3250
 13728   002B94                     u3251:
 13729   002B94  EFCD  F015         	goto	l4013
 13730   002B98                     u3250:
 13731   002B98  8E10               	bsf	___fladd@grs^0,7,c
 13732   002B9A                     l4013:
 13733   002B9A  3404               	rlcf	(___fladd@b+3)^0,w,c
 13734   002B9C  3204               	rrcf	(___fladd@b+3)^0,f,c
 13735   002B9E  3203               	rrcf	(___fladd@b+2)^0,f,c
 13736   002BA0  3202               	rrcf	(___fladd@b+1)^0,f,c
 13737   002BA2  3201               	rrcf	___fladd@b^0,f,c
 13738   002BA4  2A0F               	incf	___fladd@bexp^0,f,c
 13739   002BA6  EF62  F016         	goto	l4053
 13740   002BAA                     l4017:
 13741   002BAA  5005               	movf	___fladd@a^0,w,c
 13742   002BAC  5C01               	subwf	___fladd@b^0,w,c
 13743   002BAE  5006               	movf	(___fladd@a+1)^0,w,c
 13744   002BB0  5802               	subwfb	(___fladd@b+1)^0,w,c
 13745   002BB2  5007               	movf	(___fladd@a+2)^0,w,c
 13746   002BB4  5803               	subwfb	(___fladd@b+2)^0,w,c
 13747   002BB6  5004               	movf	(___fladd@b+3)^0,w,c
 13748   002BB8  0A80               	xorlw	128
 13749   002BBA  6E09               	movwf	??___fladd^0,c
 13750   002BBC  5008               	movf	(___fladd@a+3)^0,w,c
 13751   002BBE  0A80               	xorlw	128
 13752   002BC0  5809               	subwfb	??___fladd^0,w,c
 13753   002BC2  B0D8               	btfsc	status,0,c
 13754   002BC4  EFE6  F015         	goto	u3261
 13755   002BC8  EFE8  F015         	goto	u3260
 13756   002BCC                     u3261:
 13757   002BCC  EF13  F016         	goto	l4027
 13758   002BD0                     u3260:
 13759   002BD0  5001               	movf	___fladd@b^0,w,c
 13760   002BD2  5C05               	subwf	___fladd@a^0,w,c
 13761   002BD4  6E09               	movwf	??___fladd^0,c
 13762   002BD6  5002               	movf	(___fladd@b+1)^0,w,c
 13763   002BD8  5806               	subwfb	(___fladd@a+1)^0,w,c
 13764   002BDA  6E0A               	movwf	(??___fladd+1)^0,c
 13765   002BDC  5003               	movf	(___fladd@b+2)^0,w,c
 13766   002BDE  5807               	subwfb	(___fladd@a+2)^0,w,c
 13767   002BE0  6E0B               	movwf	(??___fladd+2)^0,c
 13768   002BE2  5004               	movf	(___fladd@b+3)^0,w,c
 13769   002BE4  5808               	subwfb	(___fladd@a+3)^0,w,c
 13770   002BE6  6E0C               	movwf	(??___fladd+3)^0,c
 13771   002BE8  0EFF               	movlw	255
 13772   002BEA  2409               	addwf	??___fladd^0,w,c
 13773   002BEC  6E01               	movwf	___fladd@b^0,c
 13774   002BEE  0EFF               	movlw	255
 13775   002BF0  200A               	addwfc	(??___fladd+1)^0,w,c
 13776   002BF2  6E02               	movwf	(___fladd@b+1)^0,c
 13777   002BF4  0EFF               	movlw	255
 13778   002BF6  200B               	addwfc	(??___fladd+2)^0,w,c
 13779   002BF8  6E03               	movwf	(___fladd@b+2)^0,c
 13780   002BFA  0EFF               	movlw	255
 13781   002BFC  200C               	addwfc	(??___fladd+3)^0,w,c
 13782   002BFE  6E04               	movwf	(___fladd@b+3)^0,c
 13783   002C00  0E80               	movlw	128
 13784   002C02  1A0D               	xorwf	___fladd@signs^0,f,c
 13785   002C04  6C10               	negf	___fladd@grs^0,c
 13786   002C06  5010               	movf	___fladd@grs^0,w,c
 13787   002C08  A4D8               	btfss	status,2,c
 13788   002C0A  EF09  F016         	goto	u3271
 13789   002C0E  EF0B  F016         	goto	u3270
 13790   002C12                     u3271:
 13791   002C12  EF1B  F016         	goto	l1239
 13792   002C16                     u3270:
 13793   002C16  0E01               	movlw	1
 13794   002C18  2601               	addwf	___fladd@b^0,f,c
 13795   002C1A  0E00               	movlw	0
 13796   002C1C  2202               	addwfc	(___fladd@b+1)^0,f,c
 13797   002C1E  2203               	addwfc	(___fladd@b+2)^0,f,c
 13798   002C20  2204               	addwfc	(___fladd@b+3)^0,f,c
 13799   002C22  EF1B  F016         	goto	l1239
 13800   002C26                     l4027:
 13801   002C26  5005               	movf	___fladd@a^0,w,c
 13802   002C28  5E01               	subwf	___fladd@b^0,f,c
 13803   002C2A  5006               	movf	(___fladd@a+1)^0,w,c
 13804   002C2C  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13805   002C2E  5007               	movf	(___fladd@a+2)^0,w,c
 13806   002C30  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13807   002C32  5008               	movf	(___fladd@a+3)^0,w,c
 13808   002C34  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13809   002C36                     l1239:
 13810   002C36  5001               	movf	___fladd@b^0,w,c
 13811   002C38  1002               	iorwf	(___fladd@b+1)^0,w,c
 13812   002C3A  1003               	iorwf	(___fladd@b+2)^0,w,c
 13813   002C3C  1004               	iorwf	(___fladd@b+3)^0,w,c
 13814   002C3E  A4D8               	btfss	status,2,c
 13815   002C40  EF24  F016         	goto	u3281
 13816   002C44  EF26  F016         	goto	u3280
 13817   002C48                     u3281:
 13818   002C48  EF5B  F016         	goto	l4051
 13819   002C4C                     u3280:
 13820   002C4C  5010               	movf	___fladd@grs^0,w,c
 13821   002C4E  A4D8               	btfss	status,2,c
 13822   002C50  EF2C  F016         	goto	u3291
 13823   002C54  EF2E  F016         	goto	u3290
 13824   002C58                     u3291:
 13825   002C58  EF5B  F016         	goto	l4051
 13826   002C5C                     u3290:
 13827   002C5C  0E00               	movlw	0
 13828   002C5E  6E01               	movwf	?___fladd^0,c
 13829   002C60  0E00               	movlw	0
 13830   002C62  6E02               	movwf	(?___fladd+1)^0,c
 13831   002C64  0E00               	movlw	0
 13832   002C66  6E03               	movwf	(?___fladd+2)^0,c
 13833   002C68  0E00               	movlw	0
 13834   002C6A  6E04               	movwf	(?___fladd+3)^0,c
 13835   002C6C  EFF6  F016         	goto	l1231
 13836   002C70                     l4035:
 13837   002C70  90D8               	bcf	status,0,c
 13838   002C72  3601               	rlcf	___fladd@b^0,f,c
 13839   002C74  3602               	rlcf	(___fladd@b+1)^0,f,c
 13840   002C76  3603               	rlcf	(___fladd@b+2)^0,f,c
 13841   002C78  3604               	rlcf	(___fladd@b+3)^0,f,c
 13842   002C7A  AE10               	btfss	___fladd@grs^0,7,c
 13843   002C7C  EF42  F016         	goto	u3301
 13844   002C80  EF44  F016         	goto	u3300
 13845   002C84                     u3301:
 13846   002C84  EF45  F016         	goto	l4041
 13847   002C88                     u3300:
 13848   002C88  8001               	bsf	___fladd@b^0,0,c
 13849   002C8A                     l4041:
 13850   002C8A  A010               	btfss	___fladd@grs^0,0,c
 13851   002C8C  EF4A  F016         	goto	u3311
 13852   002C90  EF4C  F016         	goto	u3310
 13853   002C94                     u3311:
 13854   002C94  EF50  F016         	goto	l4045
 13855   002C98                     u3310:
 13856   002C98  80D8               	bsf	status,0,c
 13857   002C9A  3610               	rlcf	___fladd@grs^0,f,c
 13858   002C9C  EF52  F016         	goto	l4047
 13859   002CA0                     l4045:
 13860   002CA0  90D8               	bcf	status,0,c
 13861   002CA2  3610               	rlcf	___fladd@grs^0,f,c
 13862   002CA4                     l4047:
 13863   002CA4  500F               	movf	___fladd@bexp^0,w,c
 13864   002CA6  B4D8               	btfsc	status,2,c
 13865   002CA8  EF58  F016         	goto	u3321
 13866   002CAC  EF5A  F016         	goto	u3320
 13867   002CB0                     u3321:
 13868   002CB0  EF5B  F016         	goto	l4051
 13869   002CB4                     u3320:
 13870   002CB4  060F               	decf	___fladd@bexp^0,f,c
 13871   002CB6                     l4051:
 13872   002CB6  AE03               	btfss	(___fladd@b+2)^0,7,c
 13873   002CB8  EF60  F016         	goto	u3331
 13874   002CBC  EF62  F016         	goto	u3330
 13875   002CC0                     u3331:
 13876   002CC0  EF38  F016         	goto	l4035
 13877   002CC4                     u3330:
 13878   002CC4                     l4053:
 13879   002CC4  0E00               	movlw	0
 13880   002CC6  6E0E               	movwf	___fladd@aexp^0,c
 13881   002CC8  AE10               	btfss	___fladd@grs^0,7,c
 13882   002CCA  EF69  F016         	goto	u3341
 13883   002CCE  EF6B  F016         	goto	u3340
 13884   002CD2                     u3341:
 13885   002CD2  EF83  F016         	goto	l1248
 13886   002CD6                     u3340:
 13887   002CD6  C010  F009         	movff	___fladd@grs,??___fladd
 13888   002CDA  0E7F               	movlw	127
 13889   002CDC  1609               	andwf	??___fladd^0,f,c
 13890   002CDE  B4D8               	btfsc	status,2,c
 13891   002CE0  EF74  F016         	goto	u3351
 13892   002CE4  EF76  F016         	goto	u3350
 13893   002CE8                     u3351:
 13894   002CE8  EF7A  F016         	goto	l1249
 13895   002CEC                     u3350:
 13896   002CEC                     l4059:
 13897   002CEC  0E01               	movlw	1
 13898   002CEE  6E0E               	movwf	___fladd@aexp^0,c
 13899   002CF0  EF83  F016         	goto	l1248
 13900   002CF4                     l1249:
 13901   002CF4  A001               	btfss	___fladd@b^0,0,c
 13902   002CF6  EF7F  F016         	goto	u3361
 13903   002CFA  EF81  F016         	goto	u3360
 13904   002CFE                     u3361:
 13905   002CFE  EF83  F016         	goto	l1248
 13906   002D02                     u3360:
 13907   002D02  EF76  F016         	goto	l4059
 13908   002D06                     l1248:
 13909   002D06  500E               	movf	___fladd@aexp^0,w,c
 13910   002D08  B4D8               	btfsc	status,2,c
 13911   002D0A  EF89  F016         	goto	u3371
 13912   002D0E  EF8B  F016         	goto	u3370
 13913   002D12                     u3371:
 13914   002D12  EFB6  F016         	goto	l4071
 13915   002D16                     u3370:
 13916   002D16  0E01               	movlw	1
 13917   002D18  2601               	addwf	___fladd@b^0,f,c
 13918   002D1A  0E00               	movlw	0
 13919   002D1C  2202               	addwfc	(___fladd@b+1)^0,f,c
 13920   002D1E  2203               	addwfc	(___fladd@b+2)^0,f,c
 13921   002D20  2204               	addwfc	(___fladd@b+3)^0,f,c
 13922   002D22  A004               	btfss	(___fladd@b+3)^0,0,c
 13923   002D24  EF96  F016         	goto	u3381
 13924   002D28  EF98  F016         	goto	u3380
 13925   002D2C                     u3381:
 13926   002D2C  EFB6  F016         	goto	l4071
 13927   002D30                     u3380:
 13928   002D30  C001  F009         	movff	___fladd@b,??___fladd
 13929   002D34  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13930   002D38  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13931   002D3C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13932   002D40  340C               	rlcf	(??___fladd+3)^0,w,c
 13933   002D42  320C               	rrcf	(??___fladd+3)^0,f,c
 13934   002D44  320B               	rrcf	(??___fladd+2)^0,f,c
 13935   002D46  320A               	rrcf	(??___fladd+1)^0,f,c
 13936   002D48  3209               	rrcf	??___fladd^0,f,c
 13937   002D4A  C009  F001         	movff	??___fladd,___fladd@b
 13938   002D4E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13939   002D52  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13940   002D56  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13941   002D5A  280F               	incf	___fladd@bexp^0,w,c
 13942   002D5C  B4D8               	btfsc	status,2,c
 13943   002D5E  EFB3  F016         	goto	u3391
 13944   002D62  EFB5  F016         	goto	u3390
 13945   002D66                     u3391:
 13946   002D66  EFB6  F016         	goto	l4071
 13947   002D6A                     u3390:
 13948   002D6A  2A0F               	incf	___fladd@bexp^0,f,c
 13949   002D6C                     l4071:
 13950   002D6C  280F               	incf	___fladd@bexp^0,w,c
 13951   002D6E  B4D8               	btfsc	status,2,c
 13952   002D70  EFBC  F016         	goto	u3401
 13953   002D74  EFBE  F016         	goto	u3400
 13954   002D78                     u3401:
 13955   002D78  EFC6  F016         	goto	l4075
 13956   002D7C                     u3400:
 13957   002D7C  500F               	movf	___fladd@bexp^0,w,c
 13958   002D7E  A4D8               	btfss	status,2,c
 13959   002D80  EFC4  F016         	goto	u3411
 13960   002D84  EFC6  F016         	goto	u3410
 13961   002D88                     u3411:
 13962   002D88  EFD8  F016         	goto	l4079
 13963   002D8C                     u3410:
 13964   002D8C                     l4075:
 13965   002D8C  0E00               	movlw	0
 13966   002D8E  6E01               	movwf	___fladd@b^0,c
 13967   002D90  0E00               	movlw	0
 13968   002D92  6E02               	movwf	(___fladd@b+1)^0,c
 13969   002D94  0E00               	movlw	0
 13970   002D96  6E03               	movwf	(___fladd@b+2)^0,c
 13971   002D98  0E00               	movlw	0
 13972   002D9A  6E04               	movwf	(___fladd@b+3)^0,c
 13973   002D9C  500F               	movf	___fladd@bexp^0,w,c
 13974   002D9E  A4D8               	btfss	status,2,c
 13975   002DA0  EFD4  F016         	goto	u3421
 13976   002DA4  EFD6  F016         	goto	u3420
 13977   002DA8                     u3421:
 13978   002DA8  EFD8  F016         	goto	l4079
 13979   002DAC                     u3420:
 13980   002DAC  0E00               	movlw	0
 13981   002DAE  6E0D               	movwf	___fladd@signs^0,c
 13982   002DB0                     l4079:
 13983   002DB0  A00F               	btfss	___fladd@bexp^0,0,c
 13984   002DB2  EFDD  F016         	goto	u3431
 13985   002DB6  EFDF  F016         	goto	u3430
 13986   002DBA                     u3431:
 13987   002DBA  EFE2  F016         	goto	l4083
 13988   002DBE                     u3430:
 13989   002DBE  8E03               	bsf	(___fladd@b+2)^0,7,c
 13990   002DC0  EFE3  F016         	goto	l4085
 13991   002DC4                     l4083:
 13992   002DC4  9E03               	bcf	(___fladd@b+2)^0,7,c
 13993   002DC6                     l4085:
 13994   002DC6  90D8               	bcf	status,0,c
 13995   002DC8  300F               	rrcf	___fladd@bexp^0,w,c
 13996   002DCA  6E04               	movwf	(___fladd@b+3)^0,c
 13997   002DCC  AE0D               	btfss	___fladd@signs^0,7,c
 13998   002DCE  EFEB  F016         	goto	u3441
 13999   002DD2  EFED  F016         	goto	u3440
 14000   002DD6                     u3441:
 14001   002DD6  EFEE  F016         	goto	l4091
 14002   002DDA                     u3440:
 14003   002DDA  8E04               	bsf	(___fladd@b+3)^0,7,c
 14004   002DDC                     l4091:
 14005   002DDC  C001  F001         	movff	___fladd@b,?___fladd
 14006   002DE0  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14007   002DE4  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14008   002DE8  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14009   002DEC                     l1231:
 14010   002DEC  0012               	return		;funcret
 14011   002DEE                     __end_of___fladd:
 14012                           	callstack 0
 14013                           
 14014 ;; *************** function ___flmul *****************
 14015 ;; Defined at:
 14016 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  b               4   16[COMRAM] unsigned char 
 14019 ;;  a               4   20[COMRAM] unsigned char 
 14020 ;; Auto vars:     Size  Location     Type
 14021 ;;  prod            4   35[COMRAM] struct .
 14022 ;;  grs             4   29[COMRAM] unsigned long 
 14023 ;;  temp            2   39[COMRAM] struct .
 14024 ;;  bexp            1   34[COMRAM] unsigned char 
 14025 ;;  aexp            1   33[COMRAM] unsigned char 
 14026 ;;  sign            1   28[COMRAM] unsigned char 
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  4   16[COMRAM] unsigned char 
 14029 ;; Registers used:
 14030 ;;		wreg, status,2, status,0, prodl, prodh
 14031 ;; Tracked objects:
 14032 ;;		On entry : 0/0
 14033 ;;		On exit  : 0/0
 14034 ;;		Unchanged: 0/0
 14035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14036 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14037 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14038 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14039 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14040 ;;Total ram usage:       25 bytes
 14041 ;; Hardware stack levels used: 1
 14042 ;; This function calls:
 14043 ;;		Nothing
 14044 ;; This function is called by:
 14045 ;;		_Colour_decider
 14046 ;;		_reverseOneBlock
 14047 ;;		_ForwardOneBlock
 14048 ;;		_Forwardhalfblock
 14049 ;;		_efgtoa
 14050 ;;		_Backhalfblock
 14051 ;; This function uses a non-reentrant model
 14052 ;;
 14053                           
 14054                           	psect	text75
 14055   002DEE                     __ptext75:
 14056                           	callstack 0
 14057   002DEE                     ___flmul:
 14058                           	callstack 26
 14059   002DEE  5014               	movf	(___flmul@b+3)^0,w,c
 14060   002DF0  0B80               	andlw	128
 14061   002DF2  6E1D               	movwf	___flmul@sign^0,c
 14062   002DF4  5014               	movf	(___flmul@b+3)^0,w,c
 14063   002DF6  2414               	addwf	(___flmul@b+3)^0,w,c
 14064   002DF8  6E23               	movwf	___flmul@bexp^0,c
 14065   002DFA  AE13               	btfss	(___flmul@b+2)^0,7,c
 14066   002DFC  EF02  F017         	goto	u3871
 14067   002E00  EF04  F017         	goto	u3870
 14068   002E04                     u3871:
 14069   002E04  EF05  F017         	goto	l4365
 14070   002E08                     u3870:
 14071   002E08  8023               	bsf	___flmul@bexp^0,0,c
 14072   002E0A                     l4365:
 14073   002E0A  5023               	movf	___flmul@bexp^0,w,c
 14074   002E0C  B4D8               	btfsc	status,2,c
 14075   002E0E  EF0B  F017         	goto	u3881
 14076   002E12  EF0D  F017         	goto	u3880
 14077   002E16                     u3881:
 14078   002E16  EF20  F017         	goto	l4373
 14079   002E1A                     u3880:
 14080   002E1A  2823               	incf	___flmul@bexp^0,w,c
 14081   002E1C  A4D8               	btfss	status,2,c
 14082   002E1E  EF13  F017         	goto	u3891
 14083   002E22  EF15  F017         	goto	u3890
 14084   002E26                     u3891:
 14085   002E26  EF1D  F017         	goto	l4371
 14086   002E2A                     u3890:
 14087   002E2A  0E00               	movlw	0
 14088   002E2C  6E11               	movwf	___flmul@b^0,c
 14089   002E2E  0E00               	movlw	0
 14090   002E30  6E12               	movwf	(___flmul@b+1)^0,c
 14091   002E32  0E00               	movlw	0
 14092   002E34  6E13               	movwf	(___flmul@b+2)^0,c
 14093   002E36  0E00               	movlw	0
 14094   002E38  6E14               	movwf	(___flmul@b+3)^0,c
 14095   002E3A                     l4371:
 14096   002E3A  8E13               	bsf	(___flmul@b+2)^0,7,c
 14097   002E3C  EF28  F017         	goto	l4375
 14098   002E40                     l4373:
 14099   002E40  0E00               	movlw	0
 14100   002E42  6E11               	movwf	___flmul@b^0,c
 14101   002E44  0E00               	movlw	0
 14102   002E46  6E12               	movwf	(___flmul@b+1)^0,c
 14103   002E48  0E00               	movlw	0
 14104   002E4A  6E13               	movwf	(___flmul@b+2)^0,c
 14105   002E4C  0E00               	movlw	0
 14106   002E4E  6E14               	movwf	(___flmul@b+3)^0,c
 14107   002E50                     l4375:
 14108   002E50  5018               	movf	(___flmul@a+3)^0,w,c
 14109   002E52  0B80               	andlw	128
 14110   002E54  1A1D               	xorwf	___flmul@sign^0,f,c
 14111   002E56  5018               	movf	(___flmul@a+3)^0,w,c
 14112   002E58  2418               	addwf	(___flmul@a+3)^0,w,c
 14113   002E5A  6E22               	movwf	___flmul@aexp^0,c
 14114   002E5C  AE17               	btfss	(___flmul@a+2)^0,7,c
 14115   002E5E  EF33  F017         	goto	u3901
 14116   002E62  EF35  F017         	goto	u3900
 14117   002E66                     u3901:
 14118   002E66  EF36  F017         	goto	l4383
 14119   002E6A                     u3900:
 14120   002E6A  8022               	bsf	___flmul@aexp^0,0,c
 14121   002E6C                     l4383:
 14122   002E6C  5022               	movf	___flmul@aexp^0,w,c
 14123   002E6E  B4D8               	btfsc	status,2,c
 14124   002E70  EF3C  F017         	goto	u3911
 14125   002E74  EF3E  F017         	goto	u3910
 14126   002E78                     u3911:
 14127   002E78  EF51  F017         	goto	l4391
 14128   002E7C                     u3910:
 14129   002E7C  2822               	incf	___flmul@aexp^0,w,c
 14130   002E7E  A4D8               	btfss	status,2,c
 14131   002E80  EF44  F017         	goto	u3921
 14132   002E84  EF46  F017         	goto	u3920
 14133   002E88                     u3921:
 14134   002E88  EF4E  F017         	goto	l4389
 14135   002E8C                     u3920:
 14136   002E8C  0E00               	movlw	0
 14137   002E8E  6E15               	movwf	___flmul@a^0,c
 14138   002E90  0E00               	movlw	0
 14139   002E92  6E16               	movwf	(___flmul@a+1)^0,c
 14140   002E94  0E00               	movlw	0
 14141   002E96  6E17               	movwf	(___flmul@a+2)^0,c
 14142   002E98  0E00               	movlw	0
 14143   002E9A  6E18               	movwf	(___flmul@a+3)^0,c
 14144   002E9C                     l4389:
 14145   002E9C  8E17               	bsf	(___flmul@a+2)^0,7,c
 14146   002E9E  EF59  F017         	goto	l1308
 14147   002EA2                     l4391:
 14148   002EA2  0E00               	movlw	0
 14149   002EA4  6E15               	movwf	___flmul@a^0,c
 14150   002EA6  0E00               	movlw	0
 14151   002EA8  6E16               	movwf	(___flmul@a+1)^0,c
 14152   002EAA  0E00               	movlw	0
 14153   002EAC  6E17               	movwf	(___flmul@a+2)^0,c
 14154   002EAE  0E00               	movlw	0
 14155   002EB0  6E18               	movwf	(___flmul@a+3)^0,c
 14156   002EB2                     l1308:
 14157   002EB2  5022               	movf	___flmul@aexp^0,w,c
 14158   002EB4  B4D8               	btfsc	status,2,c
 14159   002EB6  EF5F  F017         	goto	u3931
 14160   002EBA  EF61  F017         	goto	u3930
 14161   002EBE                     u3931:
 14162   002EBE  EF69  F017         	goto	l4395
 14163   002EC2                     u3930:
 14164   002EC2  5023               	movf	___flmul@bexp^0,w,c
 14165   002EC4  A4D8               	btfss	status,2,c
 14166   002EC6  EF67  F017         	goto	u3941
 14167   002ECA  EF69  F017         	goto	u3940
 14168   002ECE                     u3941:
 14169   002ECE  EF73  F017         	goto	l4399
 14170   002ED2                     u3940:
 14171   002ED2                     l4395:
 14172   002ED2  0E00               	movlw	0
 14173   002ED4  6E11               	movwf	?___flmul^0,c
 14174   002ED6  0E00               	movlw	0
 14175   002ED8  6E12               	movwf	(?___flmul+1)^0,c
 14176   002EDA  0E00               	movlw	0
 14177   002EDC  6E13               	movwf	(?___flmul+2)^0,c
 14178   002EDE  0E00               	movlw	0
 14179   002EE0  6E14               	movwf	(?___flmul+3)^0,c
 14180   002EE2  EF0B  F019         	goto	l1312
 14181   002EE6                     l4399:
 14182   002EE6  5017               	movf	(___flmul@a+2)^0,w,c
 14183   002EE8  0211               	mulwf	___flmul@b^0,c
 14184   002EEA  CFF3 F028          	movff	prodl,___flmul@temp
 14185   002EEE  CFF4 F029          	movff	prodh,___flmul@temp+1
 14186   002EF2  5028               	movf	___flmul@temp^0,w,c
 14187   002EF4  6E1E               	movwf	___flmul@grs^0,c
 14188   002EF6  6A1F               	clrf	(___flmul@grs+1)^0,c
 14189   002EF8  6A20               	clrf	(___flmul@grs+2)^0,c
 14190   002EFA  6A21               	clrf	(___flmul@grs+3)^0,c
 14191   002EFC  5029               	movf	(___flmul@temp+1)^0,w,c
 14192   002EFE  6E24               	movwf	___flmul@prod^0,c
 14193   002F00  6A25               	clrf	(___flmul@prod+1)^0,c
 14194   002F02  6A26               	clrf	(___flmul@prod+2)^0,c
 14195   002F04  6A27               	clrf	(___flmul@prod+3)^0,c
 14196   002F06  5016               	movf	(___flmul@a+1)^0,w,c
 14197   002F08  0212               	mulwf	(___flmul@b+1)^0,c
 14198   002F0A  CFF3 F028          	movff	prodl,___flmul@temp
 14199   002F0E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14200   002F12  5028               	movf	___flmul@temp^0,w,c
 14201   002F14  261E               	addwf	___flmul@grs^0,f,c
 14202   002F16  0E00               	movlw	0
 14203   002F18  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14204   002F1A  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14205   002F1C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14206   002F1E  5029               	movf	(___flmul@temp+1)^0,w,c
 14207   002F20  2624               	addwf	___flmul@prod^0,f,c
 14208   002F22  0E00               	movlw	0
 14209   002F24  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14210   002F26  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14211   002F28  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14212   002F2A  5015               	movf	___flmul@a^0,w,c
 14213   002F2C  0213               	mulwf	(___flmul@b+2)^0,c
 14214   002F2E  CFF3 F028          	movff	prodl,___flmul@temp
 14215   002F32  CFF4 F029          	movff	prodh,___flmul@temp+1
 14216   002F36  5028               	movf	___flmul@temp^0,w,c
 14217   002F38  261E               	addwf	___flmul@grs^0,f,c
 14218   002F3A  0E00               	movlw	0
 14219   002F3C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14220   002F3E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14221   002F40  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14222   002F42  5029               	movf	(___flmul@temp+1)^0,w,c
 14223   002F44  2624               	addwf	___flmul@prod^0,f,c
 14224   002F46  0E00               	movlw	0
 14225   002F48  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14226   002F4A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14227   002F4C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14228   002F4E  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14229   002F52  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14230   002F56  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14231   002F5A  6A1E               	clrf	___flmul@grs^0,c
 14232   002F5C  5015               	movf	___flmul@a^0,w,c
 14233   002F5E  0212               	mulwf	(___flmul@b+1)^0,c
 14234   002F60  CFF3 F028          	movff	prodl,___flmul@temp
 14235   002F64  CFF4 F029          	movff	prodh,___flmul@temp+1
 14236   002F68  5028               	movf	___flmul@temp^0,w,c
 14237   002F6A  261E               	addwf	___flmul@grs^0,f,c
 14238   002F6C  5029               	movf	(___flmul@temp+1)^0,w,c
 14239   002F6E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14240   002F70  0E00               	movlw	0
 14241   002F72  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14242   002F74  0E00               	movlw	0
 14243   002F76  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14244   002F78  5016               	movf	(___flmul@a+1)^0,w,c
 14245   002F7A  0211               	mulwf	___flmul@b^0,c
 14246   002F7C  CFF3 F028          	movff	prodl,___flmul@temp
 14247   002F80  CFF4 F029          	movff	prodh,___flmul@temp+1
 14248   002F84  5028               	movf	___flmul@temp^0,w,c
 14249   002F86  261E               	addwf	___flmul@grs^0,f,c
 14250   002F88  5029               	movf	(___flmul@temp+1)^0,w,c
 14251   002F8A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14252   002F8C  0E00               	movlw	0
 14253   002F8E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14254   002F90  0E00               	movlw	0
 14255   002F92  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14256   002F94  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14257   002F98  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14258   002F9C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14259   002FA0  6A1E               	clrf	___flmul@grs^0,c
 14260   002FA2  5015               	movf	___flmul@a^0,w,c
 14261   002FA4  0211               	mulwf	___flmul@b^0,c
 14262   002FA6  CFF3 F028          	movff	prodl,___flmul@temp
 14263   002FAA  CFF4 F029          	movff	prodh,___flmul@temp+1
 14264   002FAE  5028               	movf	___flmul@temp^0,w,c
 14265   002FB0  261E               	addwf	___flmul@grs^0,f,c
 14266   002FB2  5029               	movf	(___flmul@temp+1)^0,w,c
 14267   002FB4  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14268   002FB6  0E00               	movlw	0
 14269   002FB8  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14270   002FBA  0E00               	movlw	0
 14271   002FBC  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14272   002FBE  5017               	movf	(___flmul@a+2)^0,w,c
 14273   002FC0  0212               	mulwf	(___flmul@b+1)^0,c
 14274   002FC2  CFF3 F028          	movff	prodl,___flmul@temp
 14275   002FC6  CFF4 F029          	movff	prodh,___flmul@temp+1
 14276   002FCA  5028               	movf	___flmul@temp^0,w,c
 14277   002FCC  2624               	addwf	___flmul@prod^0,f,c
 14278   002FCE  5029               	movf	(___flmul@temp+1)^0,w,c
 14279   002FD0  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14280   002FD2  0E00               	movlw	0
 14281   002FD4  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14282   002FD6  0E00               	movlw	0
 14283   002FD8  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14284   002FDA  5016               	movf	(___flmul@a+1)^0,w,c
 14285   002FDC  0213               	mulwf	(___flmul@b+2)^0,c
 14286   002FDE  CFF3 F028          	movff	prodl,___flmul@temp
 14287   002FE2  CFF4 F029          	movff	prodh,___flmul@temp+1
 14288   002FE6  5028               	movf	___flmul@temp^0,w,c
 14289   002FE8  2624               	addwf	___flmul@prod^0,f,c
 14290   002FEA  5029               	movf	(___flmul@temp+1)^0,w,c
 14291   002FEC  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14292   002FEE  0E00               	movlw	0
 14293   002FF0  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14294   002FF2  0E00               	movlw	0
 14295   002FF4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14296   002FF6  5017               	movf	(___flmul@a+2)^0,w,c
 14297   002FF8  0213               	mulwf	(___flmul@b+2)^0,c
 14298   002FFA  CFF3 F028          	movff	prodl,___flmul@temp
 14299   002FFE  CFF4 F029          	movff	prodh,___flmul@temp+1
 14300   003002  5028               	movf	___flmul@temp^0,w,c
 14301   003004  6E19               	movwf	??___flmul^0,c
 14302   003006  5029               	movf	(___flmul@temp+1)^0,w,c
 14303   003008  6E1A               	movwf	(??___flmul+1)^0,c
 14304   00300A  6A1B               	clrf	(??___flmul+2)^0,c
 14305   00300C  6A1C               	clrf	(??___flmul+3)^0,c
 14306   00300E  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14307   003012  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14308   003016  C019  F01A         	movff	??___flmul,??___flmul+1
 14309   00301A  6A19               	clrf	??___flmul^0,c
 14310   00301C  5019               	movf	??___flmul^0,w,c
 14311   00301E  2624               	addwf	___flmul@prod^0,f,c
 14312   003020  501A               	movf	(??___flmul+1)^0,w,c
 14313   003022  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14314   003024  501B               	movf	(??___flmul+2)^0,w,c
 14315   003026  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14316   003028  501C               	movf	(??___flmul+3)^0,w,c
 14317   00302A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14318   00302C  C01E  F019         	movff	___flmul@grs,??___flmul
 14319   003030  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14320   003034  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14321   003038  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14322   00303C  0E19               	movlw	25
 14323   00303E  EF26  F018         	goto	u3950
 14324   003042                     u3955:
 14325   003042  90D8               	bcf	status,0,c
 14326   003044  321C               	rrcf	(??___flmul+3)^0,f,c
 14327   003046  321B               	rrcf	(??___flmul+2)^0,f,c
 14328   003048  321A               	rrcf	(??___flmul+1)^0,f,c
 14329   00304A  3219               	rrcf	??___flmul^0,f,c
 14330   00304C                     u3950:
 14331   00304C  2EE8               	decfsz	wreg,f,c
 14332   00304E  EF21  F018         	goto	u3955
 14333   003052  5019               	movf	??___flmul^0,w,c
 14334   003054  2624               	addwf	___flmul@prod^0,f,c
 14335   003056  501A               	movf	(??___flmul+1)^0,w,c
 14336   003058  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14337   00305A  501B               	movf	(??___flmul+2)^0,w,c
 14338   00305C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14339   00305E  501C               	movf	(??___flmul+3)^0,w,c
 14340   003060  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14341   003062  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14342   003066  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14343   00306A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14344   00306E  6A1E               	clrf	___flmul@grs^0,c
 14345   003070  5022               	movf	___flmul@aexp^0,w,c
 14346   003072  C023  F019         	movff	___flmul@bexp,??___flmul
 14347   003076  6A1A               	clrf	(??___flmul+1)^0,c
 14348   003078  2619               	addwf	??___flmul^0,f,c
 14349   00307A  0E00               	movlw	0
 14350   00307C  221A               	addwfc	(??___flmul+1)^0,f,c
 14351   00307E  0E82               	movlw	130
 14352   003080  2419               	addwf	??___flmul^0,w,c
 14353   003082  6E28               	movwf	___flmul@temp^0,c
 14354   003084  0EFF               	movlw	255
 14355   003086  201A               	addwfc	(??___flmul+1)^0,w,c
 14356   003088  6E29               	movwf	(___flmul@temp+1)^0,c
 14357   00308A  EF5C  F018         	goto	l4447
 14358   00308E                     l4441:
 14359   00308E  90D8               	bcf	status,0,c
 14360   003090  3624               	rlcf	___flmul@prod^0,f,c
 14361   003092  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14362   003094  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14363   003096  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14364   003098  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14365   00309A  EF51  F018         	goto	u3961
 14366   00309E  EF53  F018         	goto	u3960
 14367   0030A2                     u3961:
 14368   0030A2  EF54  F018         	goto	l1315
 14369   0030A6                     u3960:
 14370   0030A6  8024               	bsf	___flmul@prod^0,0,c
 14371   0030A8                     l1315:
 14372   0030A8  90D8               	bcf	status,0,c
 14373   0030AA  361E               	rlcf	___flmul@grs^0,f,c
 14374   0030AC  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14375   0030AE  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14376   0030B0  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14377   0030B2  0628               	decf	___flmul@temp^0,f,c
 14378   0030B4  A0D8               	btfss	status,0,c
 14379   0030B6  0629               	decf	(___flmul@temp+1)^0,f,c
 14380   0030B8                     l4447:
 14381   0030B8  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14382   0030BA  EF61  F018         	goto	u3971
 14383   0030BE  EF63  F018         	goto	u3970
 14384   0030C2                     u3971:
 14385   0030C2  EF47  F018         	goto	l4441
 14386   0030C6                     u3970:
 14387   0030C6  0E00               	movlw	0
 14388   0030C8  6E22               	movwf	___flmul@aexp^0,c
 14389   0030CA  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14390   0030CC  EF6A  F018         	goto	u3981
 14391   0030D0  EF6C  F018         	goto	u3980
 14392   0030D4                     u3981:
 14393   0030D4  EF90  F018         	goto	l1317
 14394   0030D8                     u3980:
 14395   0030D8  0EFF               	movlw	255
 14396   0030DA  141E               	andwf	___flmul@grs^0,w,c
 14397   0030DC  6E19               	movwf	??___flmul^0,c
 14398   0030DE  0EFF               	movlw	255
 14399   0030E0  141F               	andwf	(___flmul@grs+1)^0,w,c
 14400   0030E2  6E1A               	movwf	(??___flmul+1)^0,c
 14401   0030E4  0EFF               	movlw	255
 14402   0030E6  1420               	andwf	(___flmul@grs+2)^0,w,c
 14403   0030E8  6E1B               	movwf	(??___flmul+2)^0,c
 14404   0030EA  0E7F               	movlw	127
 14405   0030EC  1421               	andwf	(___flmul@grs+3)^0,w,c
 14406   0030EE  6E1C               	movwf	(??___flmul+3)^0,c
 14407   0030F0  5019               	movf	??___flmul^0,w,c
 14408   0030F2  101A               	iorwf	(??___flmul+1)^0,w,c
 14409   0030F4  101B               	iorwf	(??___flmul+2)^0,w,c
 14410   0030F6  101C               	iorwf	(??___flmul+3)^0,w,c
 14411   0030F8  B4D8               	btfsc	status,2,c
 14412   0030FA  EF81  F018         	goto	u3991
 14413   0030FE  EF83  F018         	goto	u3990
 14414   003102                     u3991:
 14415   003102  EF87  F018         	goto	l1318
 14416   003106                     u3990:
 14417   003106                     l4455:
 14418   003106  0E01               	movlw	1
 14419   003108  6E22               	movwf	___flmul@aexp^0,c
 14420   00310A  EF90  F018         	goto	l1317
 14421   00310E                     l1318:
 14422   00310E  A024               	btfss	___flmul@prod^0,0,c
 14423   003110  EF8C  F018         	goto	u4001
 14424   003114  EF8E  F018         	goto	u4000
 14425   003118                     u4001:
 14426   003118  EF90  F018         	goto	l1317
 14427   00311C                     u4000:
 14428   00311C  EF83  F018         	goto	l4455
 14429   003120                     l1317:
 14430   003120  5022               	movf	___flmul@aexp^0,w,c
 14431   003122  B4D8               	btfsc	status,2,c
 14432   003124  EF96  F018         	goto	u4011
 14433   003128  EF98  F018         	goto	u4010
 14434   00312C                     u4011:
 14435   00312C  EFBC  F018         	goto	l4467
 14436   003130                     u4010:
 14437   003130  0E01               	movlw	1
 14438   003132  2624               	addwf	___flmul@prod^0,f,c
 14439   003134  0E00               	movlw	0
 14440   003136  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14441   003138  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14442   00313A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14443   00313C  A027               	btfss	(___flmul@prod+3)^0,0,c
 14444   00313E  EFA3  F018         	goto	u4021
 14445   003142  EFA5  F018         	goto	u4020
 14446   003146                     u4021:
 14447   003146  EFBC  F018         	goto	l4467
 14448   00314A                     u4020:
 14449   00314A  C024  F019         	movff	___flmul@prod,??___flmul
 14450   00314E  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14451   003152  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14452   003156  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14453   00315A  341C               	rlcf	(??___flmul+3)^0,w,c
 14454   00315C  321C               	rrcf	(??___flmul+3)^0,f,c
 14455   00315E  321B               	rrcf	(??___flmul+2)^0,f,c
 14456   003160  321A               	rrcf	(??___flmul+1)^0,f,c
 14457   003162  3219               	rrcf	??___flmul^0,f,c
 14458   003164  C019  F024         	movff	??___flmul,___flmul@prod
 14459   003168  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14460   00316C  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14461   003170  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14462   003174  4A28               	infsnz	___flmul@temp^0,f,c
 14463   003176  2A29               	incf	(___flmul@temp+1)^0,f,c
 14464   003178                     l4467:
 14465   003178  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14466   00317A  EFC7  F018         	goto	u4031
 14467   00317E  5029               	movf	(___flmul@temp+1)^0,w,c
 14468   003180  E108               	bnz	u4030
 14469   003182  2828               	incf	___flmul@temp^0,w,c
 14470   003184  A0D8               	btfss	status,0,c
 14471   003186  EFC7  F018         	goto	u4031
 14472   00318A  EFC9  F018         	goto	u4030
 14473   00318E                     u4031:
 14474   00318E  EFD3  F018         	goto	l4471
 14475   003192                     u4030:
 14476   003192  0E00               	movlw	0
 14477   003194  6E24               	movwf	___flmul@prod^0,c
 14478   003196  0E00               	movlw	0
 14479   003198  6E25               	movwf	(___flmul@prod+1)^0,c
 14480   00319A  0E80               	movlw	128
 14481   00319C  6E26               	movwf	(___flmul@prod+2)^0,c
 14482   00319E  0E7F               	movlw	127
 14483   0031A0  6E27               	movwf	(___flmul@prod+3)^0,c
 14484   0031A2  EF01  F019         	goto	l4483
 14485   0031A6                     l4471:
 14486   0031A6  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14487   0031A8  EFE0  F018         	goto	u4040
 14488   0031AC  5029               	movf	(___flmul@temp+1)^0,w,c
 14489   0031AE  E106               	bnz	u4041
 14490   0031B0  0428               	decf	___flmul@temp^0,w,c
 14491   0031B2  B0D8               	btfsc	status,0,c
 14492   0031B4  EFDE  F018         	goto	u4041
 14493   0031B8  EFE0  F018         	goto	u4040
 14494   0031BC                     u4041:
 14495   0031BC  EFEC  F018         	goto	l1325
 14496   0031C0                     u4040:
 14497   0031C0  0E00               	movlw	0
 14498   0031C2  6E24               	movwf	___flmul@prod^0,c
 14499   0031C4  0E00               	movlw	0
 14500   0031C6  6E25               	movwf	(___flmul@prod+1)^0,c
 14501   0031C8  0E00               	movlw	0
 14502   0031CA  6E26               	movwf	(___flmul@prod+2)^0,c
 14503   0031CC  0E00               	movlw	0
 14504   0031CE  6E27               	movwf	(___flmul@prod+3)^0,c
 14505   0031D0  0E00               	movlw	0
 14506   0031D2  6E1D               	movwf	___flmul@sign^0,c
 14507   0031D4  EF01  F019         	goto	l4483
 14508   0031D8                     l1325:
 14509   0031D8  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14510   0031DC  0EFF               	movlw	255
 14511   0031DE  1624               	andwf	___flmul@prod^0,f,c
 14512   0031E0  0EFF               	movlw	255
 14513   0031E2  1625               	andwf	(___flmul@prod+1)^0,f,c
 14514   0031E4  0E7F               	movlw	127
 14515   0031E6  1626               	andwf	(___flmul@prod+2)^0,f,c
 14516   0031E8  0E00               	movlw	0
 14517   0031EA  1627               	andwf	(___flmul@prod+3)^0,f,c
 14518   0031EC  A023               	btfss	___flmul@bexp^0,0,c
 14519   0031EE  EFFB  F018         	goto	u4051
 14520   0031F2  EFFD  F018         	goto	u4050
 14521   0031F6                     u4051:
 14522   0031F6  EFFE  F018         	goto	l4481
 14523   0031FA                     u4050:
 14524   0031FA  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14525   0031FC                     l4481:
 14526   0031FC  90D8               	bcf	status,0,c
 14527   0031FE  3023               	rrcf	___flmul@bexp^0,w,c
 14528   003200  6E27               	movwf	(___flmul@prod+3)^0,c
 14529   003202                     l4483:
 14530   003202  501D               	movf	___flmul@sign^0,w,c
 14531   003204  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14532   003206  C024  F011         	movff	___flmul@prod,?___flmul
 14533   00320A  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14534   00320E  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14535   003212  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14536   003216                     l1312:
 14537   003216  0012               	return		;funcret
 14538   003218                     __end_of___flmul:
 14539                           	callstack 0
 14540                           
 14541 ;; *************** function ___flge *****************
 14542 ;; Defined at:
 14543 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14544 ;; Parameters:    Size  Location     Type
 14545 ;;  ff1             4   41[COMRAM] unsigned char 
 14546 ;;  ff2             4   45[COMRAM] unsigned char 
 14547 ;; Auto vars:     Size  Location     Type
 14548 ;;		None
 14549 ;; Return value:  Size  Location     Type
 14550 ;;		None               void
 14551 ;; Registers used:
 14552 ;;		wreg, status,2, status,0
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/0
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14558 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14560 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14561 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14562 ;;Total ram usage:       12 bytes
 14563 ;; Hardware stack levels used: 1
 14564 ;; This function calls:
 14565 ;;		Nothing
 14566 ;; This function is called by:
 14567 ;;		_Colour_decider
 14568 ;;		_efgtoa
 14569 ;; This function uses a non-reentrant model
 14570 ;;
 14571                           
 14572                           	psect	text76
 14573   004C14                     __ptext76:
 14574                           	callstack 0
 14575   004C14                     ___flge:
 14576                           	callstack 26
 14577   004C14  0E00               	movlw	0
 14578   004C16  142A               	andwf	___flge@ff1^0,w,c
 14579   004C18  6E32               	movwf	??___flge^0,c
 14580   004C1A  0E00               	movlw	0
 14581   004C1C  142B               	andwf	(___flge@ff1+1)^0,w,c
 14582   004C1E  6E33               	movwf	(??___flge+1)^0,c
 14583   004C20  0E80               	movlw	128
 14584   004C22  142C               	andwf	(___flge@ff1+2)^0,w,c
 14585   004C24  6E34               	movwf	(??___flge+2)^0,c
 14586   004C26  0E7F               	movlw	127
 14587   004C28  142D               	andwf	(___flge@ff1+3)^0,w,c
 14588   004C2A  6E35               	movwf	(??___flge+3)^0,c
 14589   004C2C  5032               	movf	??___flge^0,w,c
 14590   004C2E  1033               	iorwf	(??___flge+1)^0,w,c
 14591   004C30  1034               	iorwf	(??___flge+2)^0,w,c
 14592   004C32  1035               	iorwf	(??___flge+3)^0,w,c
 14593   004C34  A4D8               	btfss	status,2,c
 14594   004C36  EF1F  F026         	goto	u4091
 14595   004C3A  EF21  F026         	goto	u4090
 14596   004C3E                     u4091:
 14597   004C3E  EF29  F026         	goto	l4515
 14598   004C42                     u4090:
 14599   004C42  0E00               	movlw	0
 14600   004C44  6E2A               	movwf	___flge@ff1^0,c
 14601   004C46  0E00               	movlw	0
 14602   004C48  6E2B               	movwf	(___flge@ff1+1)^0,c
 14603   004C4A  0E00               	movlw	0
 14604   004C4C  6E2C               	movwf	(___flge@ff1+2)^0,c
 14605   004C4E  0E00               	movlw	0
 14606   004C50  6E2D               	movwf	(___flge@ff1+3)^0,c
 14607   004C52                     l4515:
 14608   004C52  0E00               	movlw	0
 14609   004C54  142E               	andwf	___flge@ff2^0,w,c
 14610   004C56  6E32               	movwf	??___flge^0,c
 14611   004C58  0E00               	movlw	0
 14612   004C5A  142F               	andwf	(___flge@ff2+1)^0,w,c
 14613   004C5C  6E33               	movwf	(??___flge+1)^0,c
 14614   004C5E  0E80               	movlw	128
 14615   004C60  1430               	andwf	(___flge@ff2+2)^0,w,c
 14616   004C62  6E34               	movwf	(??___flge+2)^0,c
 14617   004C64  0E7F               	movlw	127
 14618   004C66  1431               	andwf	(___flge@ff2+3)^0,w,c
 14619   004C68  6E35               	movwf	(??___flge+3)^0,c
 14620   004C6A  5032               	movf	??___flge^0,w,c
 14621   004C6C  1033               	iorwf	(??___flge+1)^0,w,c
 14622   004C6E  1034               	iorwf	(??___flge+2)^0,w,c
 14623   004C70  1035               	iorwf	(??___flge+3)^0,w,c
 14624   004C72  A4D8               	btfss	status,2,c
 14625   004C74  EF3E  F026         	goto	u4101
 14626   004C78  EF40  F026         	goto	u4100
 14627   004C7C                     u4101:
 14628   004C7C  EF48  F026         	goto	l4519
 14629   004C80                     u4100:
 14630   004C80  0E00               	movlw	0
 14631   004C82  6E2E               	movwf	___flge@ff2^0,c
 14632   004C84  0E00               	movlw	0
 14633   004C86  6E2F               	movwf	(___flge@ff2+1)^0,c
 14634   004C88  0E00               	movlw	0
 14635   004C8A  6E30               	movwf	(___flge@ff2+2)^0,c
 14636   004C8C  0E00               	movlw	0
 14637   004C8E  6E31               	movwf	(___flge@ff2+3)^0,c
 14638   004C90                     l4519:
 14639   004C90  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14640   004C92  EF4D  F026         	goto	u4111
 14641   004C96  EF4F  F026         	goto	u4110
 14642   004C9A                     u4111:
 14643   004C9A  EF58  F026         	goto	l4523
 14644   004C9E                     u4110:
 14645   004C9E  6C2A               	negf	___flge@ff1^0,c
 14646   004CA0  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14647   004CA2  B0D8               	btfsc	status,0,c
 14648   004CA4  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14649   004CA6  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14650   004CA8  B0D8               	btfsc	status,0,c
 14651   004CAA  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14652   004CAC  0E80               	movlw	128
 14653   004CAE  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14654   004CB0                     l4523:
 14655   004CB0  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14656   004CB2  EF5D  F026         	goto	u4121
 14657   004CB6  EF5F  F026         	goto	u4120
 14658   004CBA                     u4121:
 14659   004CBA  EF68  F026         	goto	l959
 14660   004CBE                     u4120:
 14661   004CBE  6C2E               	negf	___flge@ff2^0,c
 14662   004CC0  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14663   004CC2  B0D8               	btfsc	status,0,c
 14664   004CC4  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14665   004CC6  1E30               	comf	(___flge@ff2+2)^0,f,c
 14666   004CC8  B0D8               	btfsc	status,0,c
 14667   004CCA  2A30               	incf	(___flge@ff2+2)^0,f,c
 14668   004CCC  0E80               	movlw	128
 14669   004CCE  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14670   004CD0                     l959:
 14671   004CD0  0E00               	movlw	0
 14672   004CD2  1A2A               	xorwf	___flge@ff1^0,f,c
 14673   004CD4  0E00               	movlw	0
 14674   004CD6  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14675   004CD8  0E00               	movlw	0
 14676   004CDA  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14677   004CDC  0E80               	movlw	128
 14678   004CDE  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14679   004CE0  0E00               	movlw	0
 14680   004CE2  1A2E               	xorwf	___flge@ff2^0,f,c
 14681   004CE4  0E00               	movlw	0
 14682   004CE6  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14683   004CE8  0E00               	movlw	0
 14684   004CEA  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14685   004CEC  0E80               	movlw	128
 14686   004CEE  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14687   004CF0  502E               	movf	___flge@ff2^0,w,c
 14688   004CF2  5C2A               	subwf	___flge@ff1^0,w,c
 14689   004CF4  502F               	movf	(___flge@ff2+1)^0,w,c
 14690   004CF6  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14691   004CF8  5030               	movf	(___flge@ff2+2)^0,w,c
 14692   004CFA  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14693   004CFC  5031               	movf	(___flge@ff2+3)^0,w,c
 14694   004CFE  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14695   004D00  B0D8               	btfsc	status,0,c
 14696   004D02  EF85  F026         	goto	u4131
 14697   004D06  EF87  F026         	goto	u4130
 14698   004D0A                     u4131:
 14699   004D0A  EF8A  F026         	goto	l4529
 14700   004D0E                     u4130:
 14701   004D0E  90D8               	bcf	status,0,c
 14702   004D10  EF8B  F026         	goto	l964
 14703   004D14                     l4529:
 14704   004D14  80D8               	bsf	status,0,c
 14705   004D16                     l964:
 14706   004D16  0012               	return		;funcret
 14707   004D18                     __end_of___flge:
 14708                           	callstack 0
 14709                           
 14710 ;; *************** function ___fleq *****************
 14711 ;; Defined at:
 14712 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;  ff1             4   49[COMRAM] unsigned char 
 14715 ;;  ff2             4   53[COMRAM] unsigned char 
 14716 ;; Auto vars:     Size  Location     Type
 14717 ;;		None
 14718 ;; Return value:  Size  Location     Type
 14719 ;;		None               void
 14720 ;; Registers used:
 14721 ;;		wreg, status,2, status,0
 14722 ;; Tracked objects:
 14723 ;;		On entry : 0/0
 14724 ;;		On exit  : 0/0
 14725 ;;		Unchanged: 0/0
 14726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14727 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14730 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14731 ;;Total ram usage:       12 bytes
 14732 ;; Hardware stack levels used: 1
 14733 ;; This function calls:
 14734 ;;		Nothing
 14735 ;; This function is called by:
 14736 ;;		_Colour_decider
 14737 ;;		_efgtoa
 14738 ;; This function uses a non-reentrant model
 14739 ;;
 14740                           
 14741                           	psect	text77
 14742   0050F6                     __ptext77:
 14743                           	callstack 0
 14744   0050F6                     ___fleq:
 14745                           	callstack 26
 14746   0050F6  0E00               	movlw	0
 14747   0050F8  1432               	andwf	___fleq@ff1^0,w,c
 14748   0050FA  6E3A               	movwf	??___fleq^0,c
 14749   0050FC  0E00               	movlw	0
 14750   0050FE  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14751   005100  6E3B               	movwf	(??___fleq+1)^0,c
 14752   005102  0E80               	movlw	128
 14753   005104  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14754   005106  6E3C               	movwf	(??___fleq+2)^0,c
 14755   005108  0E7F               	movlw	127
 14756   00510A  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14757   00510C  6E3D               	movwf	(??___fleq+3)^0,c
 14758   00510E  503A               	movf	??___fleq^0,w,c
 14759   005110  103B               	iorwf	(??___fleq+1)^0,w,c
 14760   005112  103C               	iorwf	(??___fleq+2)^0,w,c
 14761   005114  103D               	iorwf	(??___fleq+3)^0,w,c
 14762   005116  A4D8               	btfss	status,2,c
 14763   005118  EF90  F028         	goto	u4061
 14764   00511C  EF92  F028         	goto	u4060
 14765   005120                     u4061:
 14766   005120  EF9A  F028         	goto	l4499
 14767   005124                     u4060:
 14768   005124  0E00               	movlw	0
 14769   005126  6E32               	movwf	___fleq@ff1^0,c
 14770   005128  0E00               	movlw	0
 14771   00512A  6E33               	movwf	(___fleq@ff1+1)^0,c
 14772   00512C  0E00               	movlw	0
 14773   00512E  6E34               	movwf	(___fleq@ff1+2)^0,c
 14774   005130  0E00               	movlw	0
 14775   005132  6E35               	movwf	(___fleq@ff1+3)^0,c
 14776   005134                     l4499:
 14777   005134  0E00               	movlw	0
 14778   005136  1436               	andwf	___fleq@ff2^0,w,c
 14779   005138  6E3A               	movwf	??___fleq^0,c
 14780   00513A  0E00               	movlw	0
 14781   00513C  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14782   00513E  6E3B               	movwf	(??___fleq+1)^0,c
 14783   005140  0E80               	movlw	128
 14784   005142  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14785   005144  6E3C               	movwf	(??___fleq+2)^0,c
 14786   005146  0E7F               	movlw	127
 14787   005148  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14788   00514A  6E3D               	movwf	(??___fleq+3)^0,c
 14789   00514C  503A               	movf	??___fleq^0,w,c
 14790   00514E  103B               	iorwf	(??___fleq+1)^0,w,c
 14791   005150  103C               	iorwf	(??___fleq+2)^0,w,c
 14792   005152  103D               	iorwf	(??___fleq+3)^0,w,c
 14793   005154  A4D8               	btfss	status,2,c
 14794   005156  EFAF  F028         	goto	u4071
 14795   00515A  EFB1  F028         	goto	u4070
 14796   00515E                     u4071:
 14797   00515E  EFB9  F028         	goto	l4503
 14798   005162                     u4070:
 14799   005162  0E00               	movlw	0
 14800   005164  6E36               	movwf	___fleq@ff2^0,c
 14801   005166  0E00               	movlw	0
 14802   005168  6E37               	movwf	(___fleq@ff2+1)^0,c
 14803   00516A  0E00               	movlw	0
 14804   00516C  6E38               	movwf	(___fleq@ff2+2)^0,c
 14805   00516E  0E00               	movlw	0
 14806   005170  6E39               	movwf	(___fleq@ff2+3)^0,c
 14807   005172                     l4503:
 14808   005172  5036               	movf	___fleq@ff2^0,w,c
 14809   005174  1832               	xorwf	___fleq@ff1^0,w,c
 14810   005176  E10F               	bnz	u4080
 14811   005178  5037               	movf	(___fleq@ff2+1)^0,w,c
 14812   00517A  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14813   00517C  E10C               	bnz	u4080
 14814   00517E  5038               	movf	(___fleq@ff2+2)^0,w,c
 14815   005180  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14816   005182  E109               	bnz	u4080
 14817   005184  5039               	movf	(___fleq@ff2+3)^0,w,c
 14818   005186  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14819   005188  B4D8               	btfsc	status,2,c
 14820   00518A  EFC9  F028         	goto	u4081
 14821   00518E  EFCB  F028         	goto	u4080
 14822   005192                     u4081:
 14823   005192  EFCE  F028         	goto	l4507
 14824   005196                     u4080:
 14825   005196  90D8               	bcf	status,0,c
 14826   005198  EFCF  F028         	goto	l953
 14827   00519C                     l4507:
 14828   00519C  80D8               	bsf	status,0,c
 14829   00519E                     l953:
 14830   00519E  0012               	return		;funcret
 14831   0051A0                     __end_of___fleq:
 14832                           	callstack 0
 14833                           
 14834 ;; *************** function ___fldiv *****************
 14835 ;; Defined at:
 14836 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;  b               4   49[COMRAM] unsigned char 
 14839 ;;  a               4   53[COMRAM] unsigned char 
 14840 ;; Auto vars:     Size  Location     Type
 14841 ;;  grs             4   68[COMRAM] unsigned long 
 14842 ;;  rem             4   61[COMRAM] unsigned long 
 14843 ;;  new_exp         2   66[COMRAM] short 
 14844 ;;  aexp            1   73[COMRAM] unsigned char 
 14845 ;;  bexp            1   72[COMRAM] unsigned char 
 14846 ;;  sign            1   65[COMRAM] unsigned char 
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  4   49[COMRAM] unsigned char 
 14849 ;; Registers used:
 14850 ;;		wreg, status,2, status,0
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14856 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14857 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14858 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14859 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14860 ;;Total ram usage:       25 bytes
 14861 ;; Hardware stack levels used: 1
 14862 ;; This function calls:
 14863 ;;		Nothing
 14864 ;; This function is called by:
 14865 ;;		_colour_rel
 14866 ;;		_Colour_decider
 14867 ;;		_efgtoa
 14868 ;; This function uses a non-reentrant model
 14869 ;;
 14870                           
 14871                           	psect	text78
 14872   003218                     __ptext78:
 14873                           	callstack 0
 14874   003218                     ___fldiv:
 14875                           	callstack 26
 14876   003218  5035               	movf	(___fldiv@b+3)^0,w,c
 14877   00321A  0B80               	andlw	128
 14878   00321C  6E42               	movwf	___fldiv@sign^0,c
 14879   00321E  5035               	movf	(___fldiv@b+3)^0,w,c
 14880   003220  2435               	addwf	(___fldiv@b+3)^0,w,c
 14881   003222  6E49               	movwf	___fldiv@bexp^0,c
 14882   003224  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14883   003226  EF17  F019         	goto	u3641
 14884   00322A  EF19  F019         	goto	u3640
 14885   00322E                     u3641:
 14886   00322E  EF1A  F019         	goto	l4227
 14887   003232                     u3640:
 14888   003232  8049               	bsf	___fldiv@bexp^0,0,c
 14889   003234                     l4227:
 14890   003234  5049               	movf	___fldiv@bexp^0,w,c
 14891   003236  B4D8               	btfsc	status,2,c
 14892   003238  EF20  F019         	goto	u3651
 14893   00323C  EF22  F019         	goto	u3650
 14894   003240                     u3651:
 14895   003240  EF37  F019         	goto	l4237
 14896   003244                     u3650:
 14897   003244  2849               	incf	___fldiv@bexp^0,w,c
 14898   003246  A4D8               	btfss	status,2,c
 14899   003248  EF28  F019         	goto	u3661
 14900   00324C  EF2A  F019         	goto	u3660
 14901   003250                     u3661:
 14902   003250  EF32  F019         	goto	l4233
 14903   003254                     u3660:
 14904   003254  0E00               	movlw	0
 14905   003256  6E32               	movwf	___fldiv@b^0,c
 14906   003258  0E00               	movlw	0
 14907   00325A  6E33               	movwf	(___fldiv@b+1)^0,c
 14908   00325C  0E00               	movlw	0
 14909   00325E  6E34               	movwf	(___fldiv@b+2)^0,c
 14910   003260  0E00               	movlw	0
 14911   003262  6E35               	movwf	(___fldiv@b+3)^0,c
 14912   003264                     l4233:
 14913   003264  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14914   003266  0E00               	movlw	0
 14915   003268  6E35               	movwf	(___fldiv@b+3)^0,c
 14916   00326A  EF3F  F019         	goto	l4239
 14917   00326E                     l4237:
 14918   00326E  0E00               	movlw	0
 14919   003270  6E32               	movwf	___fldiv@b^0,c
 14920   003272  0E00               	movlw	0
 14921   003274  6E33               	movwf	(___fldiv@b+1)^0,c
 14922   003276  0E00               	movlw	0
 14923   003278  6E34               	movwf	(___fldiv@b+2)^0,c
 14924   00327A  0E00               	movlw	0
 14925   00327C  6E35               	movwf	(___fldiv@b+3)^0,c
 14926   00327E                     l4239:
 14927   00327E  5039               	movf	(___fldiv@a+3)^0,w,c
 14928   003280  0B80               	andlw	128
 14929   003282  1A42               	xorwf	___fldiv@sign^0,f,c
 14930   003284  5039               	movf	(___fldiv@a+3)^0,w,c
 14931   003286  2439               	addwf	(___fldiv@a+3)^0,w,c
 14932   003288  6E4A               	movwf	___fldiv@aexp^0,c
 14933   00328A  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14934   00328C  EF4A  F019         	goto	u3671
 14935   003290  EF4C  F019         	goto	u3670
 14936   003294                     u3671:
 14937   003294  EF4D  F019         	goto	l4247
 14938   003298                     u3670:
 14939   003298  804A               	bsf	___fldiv@aexp^0,0,c
 14940   00329A                     l4247:
 14941   00329A  504A               	movf	___fldiv@aexp^0,w,c
 14942   00329C  B4D8               	btfsc	status,2,c
 14943   00329E  EF53  F019         	goto	u3681
 14944   0032A2  EF55  F019         	goto	u3680
 14945   0032A6                     u3681:
 14946   0032A6  EF6A  F019         	goto	l4257
 14947   0032AA                     u3680:
 14948   0032AA  284A               	incf	___fldiv@aexp^0,w,c
 14949   0032AC  A4D8               	btfss	status,2,c
 14950   0032AE  EF5B  F019         	goto	u3691
 14951   0032B2  EF5D  F019         	goto	u3690
 14952   0032B6                     u3691:
 14953   0032B6  EF65  F019         	goto	l4253
 14954   0032BA                     u3690:
 14955   0032BA  0E00               	movlw	0
 14956   0032BC  6E36               	movwf	___fldiv@a^0,c
 14957   0032BE  0E00               	movlw	0
 14958   0032C0  6E37               	movwf	(___fldiv@a+1)^0,c
 14959   0032C2  0E00               	movlw	0
 14960   0032C4  6E38               	movwf	(___fldiv@a+2)^0,c
 14961   0032C6  0E00               	movlw	0
 14962   0032C8  6E39               	movwf	(___fldiv@a+3)^0,c
 14963   0032CA                     l4253:
 14964   0032CA  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14965   0032CC  0E00               	movlw	0
 14966   0032CE  6E39               	movwf	(___fldiv@a+3)^0,c
 14967   0032D0  EF72  F019         	goto	l4259
 14968   0032D4                     l4257:
 14969   0032D4  0E00               	movlw	0
 14970   0032D6  6E36               	movwf	___fldiv@a^0,c
 14971   0032D8  0E00               	movlw	0
 14972   0032DA  6E37               	movwf	(___fldiv@a+1)^0,c
 14973   0032DC  0E00               	movlw	0
 14974   0032DE  6E38               	movwf	(___fldiv@a+2)^0,c
 14975   0032E0  0E00               	movlw	0
 14976   0032E2  6E39               	movwf	(___fldiv@a+3)^0,c
 14977   0032E4                     l4259:
 14978   0032E4  5036               	movf	___fldiv@a^0,w,c
 14979   0032E6  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14980   0032E8  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14981   0032EA  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14982   0032EC  A4D8               	btfss	status,2,c
 14983   0032EE  EF7B  F019         	goto	u3701
 14984   0032F2  EF7D  F019         	goto	u3700
 14985   0032F6                     u3701:
 14986   0032F6  EF95  F019         	goto	l4271
 14987   0032FA                     u3700:
 14988   0032FA  0E00               	movlw	0
 14989   0032FC  6E32               	movwf	___fldiv@b^0,c
 14990   0032FE  0E00               	movlw	0
 14991   003300  6E33               	movwf	(___fldiv@b+1)^0,c
 14992   003302  0E00               	movlw	0
 14993   003304  6E34               	movwf	(___fldiv@b+2)^0,c
 14994   003306  0E00               	movlw	0
 14995   003308  6E35               	movwf	(___fldiv@b+3)^0,c
 14996   00330A  0E80               	movlw	128
 14997   00330C  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14998   00330E  0E7F               	movlw	127
 14999   003310  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15000   003312                     l4265:
 15001   003312  5042               	movf	___fldiv@sign^0,w,c
 15002   003314  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15003   003316  C032  F032         	movff	___fldiv@b,?___fldiv
 15004   00331A  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15005   00331E  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15006   003322  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15007   003326  EFD8  F01A         	goto	l1276
 15008   00332A                     l4271:
 15009   00332A  5049               	movf	___fldiv@bexp^0,w,c
 15010   00332C  A4D8               	btfss	status,2,c
 15011   00332E  EF9B  F019         	goto	u3711
 15012   003332  EF9D  F019         	goto	u3710
 15013   003336                     u3711:
 15014   003336  EFA7  F019         	goto	l4279
 15015   00333A                     u3710:
 15016   00333A  0E00               	movlw	0
 15017   00333C  6E32               	movwf	?___fldiv^0,c
 15018   00333E  0E00               	movlw	0
 15019   003340  6E33               	movwf	(?___fldiv+1)^0,c
 15020   003342  0E00               	movlw	0
 15021   003344  6E34               	movwf	(?___fldiv+2)^0,c
 15022   003346  0E00               	movlw	0
 15023   003348  6E35               	movwf	(?___fldiv+3)^0,c
 15024   00334A  EFD8  F01A         	goto	l1276
 15025   00334E                     l4279:
 15026   00334E  504A               	movf	___fldiv@aexp^0,w,c
 15027   003350  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15028   003354  6A3B               	clrf	(??___fldiv+1)^0,c
 15029   003356  5E3A               	subwf	??___fldiv^0,f,c
 15030   003358  0E00               	movlw	0
 15031   00335A  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15032   00335C  0E7F               	movlw	127
 15033   00335E  243A               	addwf	??___fldiv^0,w,c
 15034   003360  6E43               	movwf	___fldiv@new_exp^0,c
 15035   003362  0E00               	movlw	0
 15036   003364  203B               	addwfc	(??___fldiv+1)^0,w,c
 15037   003366  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15038   003368  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15039   00336C  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15040   003370  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15041   003374  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15042   003378  0E00               	movlw	0
 15043   00337A  6E32               	movwf	___fldiv@b^0,c
 15044   00337C  0E00               	movlw	0
 15045   00337E  6E33               	movwf	(___fldiv@b+1)^0,c
 15046   003380  0E00               	movlw	0
 15047   003382  6E34               	movwf	(___fldiv@b+2)^0,c
 15048   003384  0E00               	movlw	0
 15049   003386  6E35               	movwf	(___fldiv@b+3)^0,c
 15050   003388  0E00               	movlw	0
 15051   00338A  6E45               	movwf	___fldiv@grs^0,c
 15052   00338C  0E00               	movlw	0
 15053   00338E  6E46               	movwf	(___fldiv@grs+1)^0,c
 15054   003390  0E00               	movlw	0
 15055   003392  6E47               	movwf	(___fldiv@grs+2)^0,c
 15056   003394  0E00               	movlw	0
 15057   003396  6E48               	movwf	(___fldiv@grs+3)^0,c
 15058   003398  0E00               	movlw	0
 15059   00339A  6E4A               	movwf	___fldiv@aexp^0,c
 15060   00339C  EF08  F01A         	goto	l1278
 15061   0033A0                     l4289:
 15062   0033A0  504A               	movf	___fldiv@aexp^0,w,c
 15063   0033A2  B4D8               	btfsc	status,2,c
 15064   0033A4  EFD6  F019         	goto	u3721
 15065   0033A8  EFD8  F019         	goto	u3720
 15066   0033AC                     u3721:
 15067   0033AC  EFEF  F019         	goto	l4297
 15068   0033B0                     u3720:
 15069   0033B0  90D8               	bcf	status,0,c
 15070   0033B2  363E               	rlcf	___fldiv@rem^0,f,c
 15071   0033B4  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15072   0033B6  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15073   0033B8  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15074   0033BA  90D8               	bcf	status,0,c
 15075   0033BC  3632               	rlcf	___fldiv@b^0,f,c
 15076   0033BE  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15077   0033C0  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15078   0033C2  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15079   0033C4  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15080   0033C6  EFE7  F019         	goto	u3731
 15081   0033CA  EFE9  F019         	goto	u3730
 15082   0033CE                     u3731:
 15083   0033CE  EFEA  F019         	goto	l1281
 15084   0033D2                     u3730:
 15085   0033D2  8032               	bsf	___fldiv@b^0,0,c
 15086   0033D4                     l1281:
 15087   0033D4  90D8               	bcf	status,0,c
 15088   0033D6  3645               	rlcf	___fldiv@grs^0,f,c
 15089   0033D8  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15090   0033DA  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15091   0033DC  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15092   0033DE                     l4297:
 15093   0033DE  5036               	movf	___fldiv@a^0,w,c
 15094   0033E0  5C3E               	subwf	___fldiv@rem^0,w,c
 15095   0033E2  5037               	movf	(___fldiv@a+1)^0,w,c
 15096   0033E4  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15097   0033E6  5038               	movf	(___fldiv@a+2)^0,w,c
 15098   0033E8  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15099   0033EA  5039               	movf	(___fldiv@a+3)^0,w,c
 15100   0033EC  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15101   0033EE  A0D8               	btfss	status,0,c
 15102   0033F0  EFFC  F019         	goto	u3741
 15103   0033F4  EFFE  F019         	goto	u3740
 15104   0033F8                     u3741:
 15105   0033F8  EF07  F01A         	goto	l4303
 15106   0033FC                     u3740:
 15107   0033FC  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15108   0033FE  5036               	movf	___fldiv@a^0,w,c
 15109   003400  5E3E               	subwf	___fldiv@rem^0,f,c
 15110   003402  5037               	movf	(___fldiv@a+1)^0,w,c
 15111   003404  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15112   003406  5038               	movf	(___fldiv@a+2)^0,w,c
 15113   003408  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15114   00340A  5039               	movf	(___fldiv@a+3)^0,w,c
 15115   00340C  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15116   00340E                     l4303:
 15117   00340E  2A4A               	incf	___fldiv@aexp^0,f,c
 15118   003410                     l1278:
 15119   003410  0E19               	movlw	25
 15120   003412  644A               	cpfsgt	___fldiv@aexp^0,c
 15121   003414  EF0E  F01A         	goto	u3751
 15122   003418  EF10  F01A         	goto	u3750
 15123   00341C                     u3751:
 15124   00341C  EFD0  F019         	goto	l4289
 15125   003420                     u3750:
 15126   003420  503E               	movf	___fldiv@rem^0,w,c
 15127   003422  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15128   003424  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15129   003426  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15130   003428  B4D8               	btfsc	status,2,c
 15131   00342A  EF19  F01A         	goto	u3761
 15132   00342E  EF1B  F01A         	goto	u3760
 15133   003432                     u3761:
 15134   003432  EF33  F01A         	goto	l4315
 15135   003436                     u3760:
 15136   003436  8045               	bsf	___fldiv@grs^0,0,c
 15137   003438  EF33  F01A         	goto	l4315
 15138   00343C                     l4309:
 15139   00343C  90D8               	bcf	status,0,c
 15140   00343E  3632               	rlcf	___fldiv@b^0,f,c
 15141   003440  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15142   003442  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15143   003444  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15144   003446  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15145   003448  EF28  F01A         	goto	u3771
 15146   00344C  EF2A  F01A         	goto	u3770
 15147   003450                     u3771:
 15148   003450  EF2B  F01A         	goto	l1287
 15149   003454                     u3770:
 15150   003454  8032               	bsf	___fldiv@b^0,0,c
 15151   003456                     l1287:
 15152   003456  90D8               	bcf	status,0,c
 15153   003458  3645               	rlcf	___fldiv@grs^0,f,c
 15154   00345A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15155   00345C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15156   00345E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15157   003460  0643               	decf	___fldiv@new_exp^0,f,c
 15158   003462  A0D8               	btfss	status,0,c
 15159   003464  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15160   003466                     l4315:
 15161   003466  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15162   003468  EF38  F01A         	goto	u3781
 15163   00346C  EF3A  F01A         	goto	u3780
 15164   003470                     u3781:
 15165   003470  EF1E  F01A         	goto	l4309
 15166   003474                     u3780:
 15167   003474  0E00               	movlw	0
 15168   003476  6E4A               	movwf	___fldiv@aexp^0,c
 15169   003478  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15170   00347A  EF41  F01A         	goto	u3791
 15171   00347E  EF43  F01A         	goto	u3790
 15172   003482                     u3791:
 15173   003482  EF67  F01A         	goto	l1289
 15174   003486                     u3790:
 15175   003486  0EFF               	movlw	255
 15176   003488  1445               	andwf	___fldiv@grs^0,w,c
 15177   00348A  6E3A               	movwf	??___fldiv^0,c
 15178   00348C  0EFF               	movlw	255
 15179   00348E  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15180   003490  6E3B               	movwf	(??___fldiv+1)^0,c
 15181   003492  0EFF               	movlw	255
 15182   003494  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15183   003496  6E3C               	movwf	(??___fldiv+2)^0,c
 15184   003498  0E7F               	movlw	127
 15185   00349A  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15186   00349C  6E3D               	movwf	(??___fldiv+3)^0,c
 15187   00349E  503A               	movf	??___fldiv^0,w,c
 15188   0034A0  103B               	iorwf	(??___fldiv+1)^0,w,c
 15189   0034A2  103C               	iorwf	(??___fldiv+2)^0,w,c
 15190   0034A4  103D               	iorwf	(??___fldiv+3)^0,w,c
 15191   0034A6  B4D8               	btfsc	status,2,c
 15192   0034A8  EF58  F01A         	goto	u3801
 15193   0034AC  EF5A  F01A         	goto	u3800
 15194   0034B0                     u3801:
 15195   0034B0  EF5E  F01A         	goto	l1290
 15196   0034B4                     u3800:
 15197   0034B4                     l4323:
 15198   0034B4  0E01               	movlw	1
 15199   0034B6  6E4A               	movwf	___fldiv@aexp^0,c
 15200   0034B8  EF67  F01A         	goto	l1289
 15201   0034BC                     l1290:
 15202   0034BC  A032               	btfss	___fldiv@b^0,0,c
 15203   0034BE  EF63  F01A         	goto	u3811
 15204   0034C2  EF65  F01A         	goto	u3810
 15205   0034C6                     u3811:
 15206   0034C6  EF67  F01A         	goto	l1289
 15207   0034CA                     u3810:
 15208   0034CA  EF5A  F01A         	goto	l4323
 15209   0034CE                     l1289:
 15210   0034CE  504A               	movf	___fldiv@aexp^0,w,c
 15211   0034D0  B4D8               	btfsc	status,2,c
 15212   0034D2  EF6D  F01A         	goto	u3821
 15213   0034D6  EF6F  F01A         	goto	u3820
 15214   0034DA                     u3821:
 15215   0034DA  EF93  F01A         	goto	l4335
 15216   0034DE                     u3820:
 15217   0034DE  0E01               	movlw	1
 15218   0034E0  2632               	addwf	___fldiv@b^0,f,c
 15219   0034E2  0E00               	movlw	0
 15220   0034E4  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15221   0034E6  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15222   0034E8  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15223   0034EA  A035               	btfss	(___fldiv@b+3)^0,0,c
 15224   0034EC  EF7A  F01A         	goto	u3831
 15225   0034F0  EF7C  F01A         	goto	u3830
 15226   0034F4                     u3831:
 15227   0034F4  EF93  F01A         	goto	l4335
 15228   0034F8                     u3830:
 15229   0034F8  C032  F03A         	movff	___fldiv@b,??___fldiv
 15230   0034FC  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15231   003500  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15232   003504  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15233   003508  343D               	rlcf	(??___fldiv+3)^0,w,c
 15234   00350A  323D               	rrcf	(??___fldiv+3)^0,f,c
 15235   00350C  323C               	rrcf	(??___fldiv+2)^0,f,c
 15236   00350E  323B               	rrcf	(??___fldiv+1)^0,f,c
 15237   003510  323A               	rrcf	??___fldiv^0,f,c
 15238   003512  C03A  F032         	movff	??___fldiv,___fldiv@b
 15239   003516  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15240   00351A  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15241   00351E  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15242   003522  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15243   003524  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15244   003526                     l4335:
 15245   003526  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15246   003528  EF9E  F01A         	goto	u3841
 15247   00352C  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15248   00352E  E108               	bnz	u3840
 15249   003530  2843               	incf	___fldiv@new_exp^0,w,c
 15250   003532  A0D8               	btfss	status,0,c
 15251   003534  EF9E  F01A         	goto	u3841
 15252   003538  EFA0  F01A         	goto	u3840
 15253   00353C                     u3841:
 15254   00353C  EFAB  F01A         	goto	l4339
 15255   003540                     u3840:
 15256   003540  0E00               	movlw	0
 15257   003542  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15258   003544  6843               	setf	___fldiv@new_exp^0,c
 15259   003546  0E00               	movlw	0
 15260   003548  6E32               	movwf	___fldiv@b^0,c
 15261   00354A  0E00               	movlw	0
 15262   00354C  6E33               	movwf	(___fldiv@b+1)^0,c
 15263   00354E  0E00               	movlw	0
 15264   003550  6E34               	movwf	(___fldiv@b+2)^0,c
 15265   003552  0E00               	movlw	0
 15266   003554  6E35               	movwf	(___fldiv@b+3)^0,c
 15267   003556                     l4339:
 15268   003556  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15269   003558  EFB8  F01A         	goto	u3850
 15270   00355C  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15271   00355E  E106               	bnz	u3851
 15272   003560  0443               	decf	___fldiv@new_exp^0,w,c
 15273   003562  B0D8               	btfsc	status,0,c
 15274   003564  EFB6  F01A         	goto	u3851
 15275   003568  EFB8  F01A         	goto	u3850
 15276   00356C                     u3851:
 15277   00356C  EFC6  F01A         	goto	l4343
 15278   003570                     u3850:
 15279   003570  0E00               	movlw	0
 15280   003572  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15281   003574  0E00               	movlw	0
 15282   003576  6E43               	movwf	___fldiv@new_exp^0,c
 15283   003578  0E00               	movlw	0
 15284   00357A  6E32               	movwf	___fldiv@b^0,c
 15285   00357C  0E00               	movlw	0
 15286   00357E  6E33               	movwf	(___fldiv@b+1)^0,c
 15287   003580  0E00               	movlw	0
 15288   003582  6E34               	movwf	(___fldiv@b+2)^0,c
 15289   003584  0E00               	movlw	0
 15290   003586  6E35               	movwf	(___fldiv@b+3)^0,c
 15291   003588  0E00               	movlw	0
 15292   00358A  6E42               	movwf	___fldiv@sign^0,c
 15293   00358C                     l4343:
 15294   00358C  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15295   003590  A049               	btfss	___fldiv@bexp^0,0,c
 15296   003592  EFCD  F01A         	goto	u3861
 15297   003596  EFCF  F01A         	goto	u3860
 15298   00359A                     u3861:
 15299   00359A  EFD2  F01A         	goto	l4349
 15300   00359E                     u3860:
 15301   00359E  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15302   0035A0  EFD3  F01A         	goto	l4351
 15303   0035A4                     l4349:
 15304   0035A4  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15305   0035A6                     l4351:
 15306   0035A6  90D8               	bcf	status,0,c
 15307   0035A8  3049               	rrcf	___fldiv@bexp^0,w,c
 15308   0035AA  6E35               	movwf	(___fldiv@b+3)^0,c
 15309   0035AC  EF89  F019         	goto	l4265
 15310   0035B0                     l1276:
 15311   0035B0  0012               	return		;funcret
 15312   0035B2                     __end_of___fldiv:
 15313                           	callstack 0
 15314                           
 15315                           	psect	rparam
 15316   000000                     
 15317                           	psect	idloc
 15318                           
 15319                           ;Config register IDLOC0 @ 0x200000
 15320                           ;	unspecified, using default values
 15321   200000                     	org	2097152
 15322   200000  0FFF               	dw	4095
 15323                           
 15324                           ;Config register IDLOC1 @ 0x200002
 15325                           ;	unspecified, using default values
 15326   200002                     	org	2097154
 15327   200002  0FFF               	dw	4095
 15328                           
 15329                           ;Config register IDLOC2 @ 0x200004
 15330                           ;	unspecified, using default values
 15331   200004                     	org	2097156
 15332   200004  0FFF               	dw	4095
 15333                           
 15334                           ;Config register IDLOC3 @ 0x200006
 15335                           ;	unspecified, using default values
 15336   200006                     	org	2097158
 15337   200006  0FFF               	dw	4095
 15338                           
 15339                           ;Config register IDLOC4 @ 0x200008
 15340                           ;	unspecified, using default values
 15341   200008                     	org	2097160
 15342   200008  0FFF               	dw	4095
 15343                           
 15344                           ;Config register IDLOC5 @ 0x20000A
 15345                           ;	unspecified, using default values
 15346   20000A                     	org	2097162
 15347   20000A  0FFF               	dw	4095
 15348                           
 15349                           ;Config register IDLOC6 @ 0x20000C
 15350                           ;	unspecified, using default values
 15351   20000C                     	org	2097164
 15352   20000C  0FFF               	dw	4095
 15353                           
 15354                           ;Config register IDLOC7 @ 0x20000E
 15355                           ;	unspecified, using default values
 15356   20000E                     	org	2097166
 15357   20000E  0FFF               	dw	4095
 15358                           
 15359                           	psect	config
 15360                           
 15361                           ;Config register CONFIG1L @ 0x300000
 15362                           ;	External Oscillator mode Selection bits
 15363                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15364                           ;	Power-up default value for COSC bits
 15365                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15366   300000                     	org	3145728
 15367   300000  AA                 	db	170
 15368                           
 15369                           ;Config register CONFIG1H @ 0x300001
 15370                           ;	unspecified, using default values
 15371                           ;	Clock Out Enable bit
 15372                           ;	CLKOUTEN = 0x1, unprogrammed default
 15373                           ;	Clock Switch Enable bit
 15374                           ;	CSWEN = 0x1, unprogrammed default
 15375                           ;	Fail-Safe Clock Monitor Enable bit
 15376                           ;	FCMEN = 0x1, unprogrammed default
 15377   300001                     	org	3145729
 15378   300001  FF                 	db	255
 15379                           
 15380                           ;Config register CONFIG2L @ 0x300002
 15381                           ;	unspecified, using default values
 15382                           ;	Master Clear Enable bit
 15383                           ;	MCLRE = 0x1, unprogrammed default
 15384                           ;	Power-up Timer Enable bit
 15385                           ;	PWRTE = 0x1, unprogrammed default
 15386                           ;	Low-power BOR enable bit
 15387                           ;	LPBOREN = 0x1, unprogrammed default
 15388                           ;	Brown-out Reset Enable bits
 15389                           ;	BOREN = 0x3, unprogrammed default
 15390   300002                     	org	3145730
 15391   300002  FF                 	db	255
 15392                           
 15393                           ;Config register CONFIG2H @ 0x300003
 15394                           ;	unspecified, using default values
 15395                           ;	Brown Out Reset Voltage selection bits
 15396                           ;	BORV = 0x3, unprogrammed default
 15397                           ;	ZCD Disable bit
 15398                           ;	ZCD = 0x1, unprogrammed default
 15399                           ;	PPSLOCK bit One-Way Set Enable bit
 15400                           ;	PPS1WAY = 0x1, unprogrammed default
 15401                           ;	Stack Full/Underflow Reset Enable bit
 15402                           ;	STVREN = 0x1, unprogrammed default
 15403                           ;	Debugger Enable bit
 15404                           ;	DEBUG = 0x1, unprogrammed default
 15405                           ;	Extended Instruction Set Enable bit
 15406                           ;	XINST = 0x1, unprogrammed default
 15407   300003                     	org	3145731
 15408   300003  FF                 	db	255
 15409                           
 15410                           ;Config register CONFIG3L @ 0x300004
 15411                           ;	WDT Period Select bits
 15412                           ;	WDTCPS = 0x1F, unprogrammed default
 15413                           ;	WDT operating mode
 15414                           ;	WDTE = OFF, WDT Disabled
 15415   300004                     	org	3145732
 15416   300004  9F                 	db	159
 15417                           
 15418                           ;Config register CONFIG3H @ 0x300005
 15419                           ;	unspecified, using default values
 15420                           ;	WDT Window Select bits
 15421                           ;	WDTCWS = 0x7, unprogrammed default
 15422                           ;	WDT input clock selector
 15423                           ;	WDTCCS = 0x7, unprogrammed default
 15424   300005                     	org	3145733
 15425   300005  FF                 	db	255
 15426                           
 15427                           ;Config register CONFIG4L @ 0x300006
 15428                           ;	unspecified, using default values
 15429                           ;	Write Protection Block 0
 15430                           ;	WRT0 = 0x1, unprogrammed default
 15431                           ;	Write Protection Block 1
 15432                           ;	WRT1 = 0x1, unprogrammed default
 15433                           ;	Write Protection Block 2
 15434                           ;	WRT2 = 0x1, unprogrammed default
 15435                           ;	Write Protection Block 3
 15436                           ;	WRT3 = 0x1, unprogrammed default
 15437                           ;	Write Protection Block 3
 15438                           ;	WRT4 = 0x1, unprogrammed default
 15439                           ;	Write Protection Block 3
 15440                           ;	WRT5 = 0x1, unprogrammed default
 15441                           ;	Write Protection Block 3
 15442                           ;	WRT6 = 0x1, unprogrammed default
 15443                           ;	Write Protection Block 3
 15444                           ;	WRT7 = 0x1, unprogrammed default
 15445   300006                     	org	3145734
 15446   300006  FF                 	db	255
 15447                           
 15448                           ;Config register CONFIG4H @ 0x300007
 15449                           ;	unspecified, using default values
 15450                           ;	Configuration Register Write Protection bit
 15451                           ;	WRTC = 0x1, unprogrammed default
 15452                           ;	Boot Block Write Protection bit
 15453                           ;	WRTB = 0x1, unprogrammed default
 15454                           ;	Data EEPROM Write Protection bit
 15455                           ;	WRTD = 0x1, unprogrammed default
 15456                           ;	Scanner Enable bit
 15457                           ;	SCANE = 0x1, unprogrammed default
 15458                           ;	Low Voltage Programming Enable bit
 15459                           ;	LVP = 0x1, unprogrammed default
 15460   300007                     	org	3145735
 15461   300007  FF                 	db	255
 15462                           
 15463                           ;Config register CONFIG5L @ 0x300008
 15464                           ;	unspecified, using default values
 15465                           ;	UserNVM Program Memory Code Protection bit
 15466                           ;	CP = 0x1, unprogrammed default
 15467                           ;	DataNVM Memory Code Protection bit
 15468                           ;	CPD = 0x1, unprogrammed default
 15469   300008                     	org	3145736
 15470   300008  FF                 	db	255
 15471                           
 15472                           ;Config register CONFIG5H @ 0x300009
 15473                           ;	unspecified, using default values
 15474   300009                     	org	3145737
 15475   300009  FF                 	db	255
 15476                           
 15477                           ;Config register CONFIG6L @ 0x30000A
 15478                           ;	unspecified, using default values
 15479                           ;	Table Read Protection Block 0
 15480                           ;	EBTR0 = 0x1, unprogrammed default
 15481                           ;	Table Read Protection Block 1
 15482                           ;	EBTR1 = 0x1, unprogrammed default
 15483                           ;	Table Read Protection Block 2
 15484                           ;	EBTR2 = 0x1, unprogrammed default
 15485                           ;	Table Read Protection Block 3
 15486                           ;	EBTR3 = 0x1, unprogrammed default
 15487                           ;	Table Read Protection Block 4
 15488                           ;	EBTR4 = 0x1, unprogrammed default
 15489                           ;	Table Read Protection Block 5
 15490                           ;	EBTR5 = 0x1, unprogrammed default
 15491                           ;	Table Read Protection Block 6
 15492                           ;	EBTR6 = 0x1, unprogrammed default
 15493                           ;	Table Read Protection Block 7
 15494                           ;	EBTR7 = 0x1, unprogrammed default
 15495   30000A                     	org	3145738
 15496   30000A  FF                 	db	255
 15497                           
 15498                           ;Config register CONFIG6H @ 0x30000B
 15499                           ;	unspecified, using default values
 15500                           ;	Boot Block Table Read Protection bit
 15501                           ;	EBTRB = 0x1, unprogrammed default
 15502   30000B                     	org	3145739
 15503   30000B  FF                 	db	255
 15504                           tosu	equ	0xFFF
 15505                           tosh	equ	0xFFE
 15506                           tosl	equ	0xFFD
 15507                           stkptr	equ	0xFFC
 15508                           pclatu	equ	0xFFB
 15509                           pclath	equ	0xFFA
 15510                           pcl	equ	0xFF9
 15511                           tblptru	equ	0xFF8
 15512                           tblptrh	equ	0xFF7
 15513                           tblptrl	equ	0xFF6
 15514                           tablat	equ	0xFF5
 15515                           prodh	equ	0xFF4
 15516                           prodl	equ	0xFF3
 15517                           indf0	equ	0xFEF
 15518                           postinc0	equ	0xFEE
 15519                           postdec0	equ	0xFED
 15520                           preinc0	equ	0xFEC
 15521                           plusw0	equ	0xFEB
 15522                           fsr0h	equ	0xFEA
 15523                           fsr0l	equ	0xFE9
 15524                           wreg	equ	0xFE8
 15525                           indf1	equ	0xFE7
 15526                           postinc1	equ	0xFE6
 15527                           postdec1	equ	0xFE5
 15528                           preinc1	equ	0xFE4
 15529                           plusw1	equ	0xFE3
 15530                           fsr1h	equ	0xFE2
 15531                           fsr1l	equ	0xFE1
 15532                           bsr	equ	0xFE0
 15533                           indf2	equ	0xFDF
 15534                           postinc2	equ	0xFDE
 15535                           postdec2	equ	0xFDD
 15536                           preinc2	equ	0xFDC
 15537                           plusw2	equ	0xFDB
 15538                           fsr2h	equ	0xFDA
 15539                           fsr2l	equ	0xFD9
 15540                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    0
    Data        7
    BSS         381
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    113     158
    BANK1           256    114     216
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2713$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2629$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2629$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               116   116      0  408381
                                            111 BANK0      2     2      0
                                              0 BANK1    114   114      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9201
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   36181
                                             80 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35674
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35321
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29475
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  158658
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   19139
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25733
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9859
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25733
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9482
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3937
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   24299
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     72      D8       7       84.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhllh      13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhlllh      E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhllll      1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      60        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 22:19:01 2023

               _color_read_Red 5C02                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5BB2                   ___fldiv@sign 0042                _color_read_Blue 5CA2  
                           l51 5C00                             l60 5CF0                             l45 5ABC  
                           l54 5C50                             l63 57B6                             l48 6138  
                           l57 5CA0                             l66 38DE                             l76 192C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 4322  
             _color_read_Green 5C52                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 6176                            l140 60A4                            l212 618E  
                          l143 60A6                            l152 61A4                            l161 5EE8  
                          l209 617A                            l146 60CC                            l218 607A  
                          l155 61AE                            l149 61B8                            l158 619A  
                          l520 5416                            l256 61C4                            l504 52DA  
                          l512 523C                            l600 440A                            l601 447A  
                          l409 289C                            l602 4442                            l418 292A  
                          l542 604A                            l551 58C4                            l607 4496  
                          l560 591E                            l536 5378                            l528 50F4  
                          l608 44E6                            l545 5D3E                            l609 4500  
                          l490 49A8                            l554 586A                            l539 6030  
                          l483 549E                            l387 240C                            l548 5D8C  
                          l572 5758                            l581 5A18                            l557 5810  
                          l661 3E90                            l821 4B0C                            l566 5F66  
                          l590 4F94                            l575 5B0E                            l655 3E86  
                          l496 559E                            l584 5A6A                            l808 483C  
                          l569 5FA4                            l593 504A                            l578 5B60  
                          l682 6158                            l587 5520                            l691 6014  
                          l596 44B0                            l685 60F2                            l597 4340  
                          l694 6118                            l599 4396                            l688 5FFE  
                          l953 519E                            l964 4D16                            l959 4CD0  
                          l991 4C12                            l968 5FDC                            _abs 5EEA  
                          _pad 55A0                            _rel 01B2                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           ?_abs 0013                           l1222 2B1C  
                         l1231 2DEC                           l1223 2B0A                           l1312 3216  
                         l1224 2AD0                           l1315 30A8                           l1308 2EB2  
                         l1404 55C2                           l1325 31D8                           l1317 3120  
                         l1413 3F1E                           l1318 310E                           l1239 2C36  
                         l1415 3F26                           l1248 2D06                           l1264 5E1E  
                         l1352 46B4                           l1192 568C                           l1408 5618  
                         l1416 3F6C                           l1281 33D4                           l1249 2CF4  
                         l4001 2B5E                           l1185 5684                           l1441 1CC0  
                         l1290 34BC                           l4011 2B98                           l4003 2B6C  
                         l1363 464C                           l1523 5F20                           l1427 410E  
                         l1443 1B06                           l1276 35B0                           l1356 45F0  
                         l1532 4320                           l1508 5974                           l1372 59C6  
                         l4021 2C04                           l4013 2B9A                           l4005 2B7A  
                         l1349 4558                           l4101 563C                           l1278 3410  
                         l1526 5F28                           l1518 4E14                           l1438 2326  
                         l1287 3456                           l4031 2C5C                           l4023 2C06  
                         l4015 2BA4                           l4007 2B86                           l4111 5676  
                         l4103 5644                           l1535 4264                           l1543 56E2  
                         l1471 2108                           l1552 5BB0                           l1289 34CE  
                         l4041 2C8A                           l4025 2C16                           l4009 2B8A  
                         l4017 2BAA                           l4113 5678                           l4105 5652  
                         l4201 4A34                           l4121 5E82                           l5001 222C  
                         l1546 56F2                           l4043 2C98                           l4035 2C70  
                         l4051 2CB6                           l4019 2BD0                           l4027 2C26  
                         l4115 567E                           l4107 5658                           l4131 48C2  
                         l4211 4AB6                           l4203 4A48                           l4123 5E86  
                         l5011 2282                           l5003 2230                           l1564 4EDE  
                         l1572 5EA6                           l4301 33FE                           l4221 3218  
                         l4045 2CA0                           l4037 2C7A                           l4029 2C4C  
                         l4053 2CC4                           l4109 566E                           l4133 48C6  
                         l4125 483E                           l4141 46B6                           l4205 4A56  
                         l4213 4ABC                           l4117 5E64                           l1581 5E62  
                         l5021 22FE                           l5013 22B2                           l5005 224E  
                         l5101 3938                           l1486 3BE4                           l4311 3446  
                         l4303 340E                           l4231 3254                           l4223 3224  
                         l4063 2D16                           l4071 2D6C                           l4055 2CC8  
                         l4047 2CA4                           l4039 2C88                           l4135 4908  
                         l4127 485A                           l5031 6192                           l4151 46FA  
                         l4143 46BA                           l4215 4ACC                           l4207 4A84  
                         l1575 61C2                           l4119 5E70                           l5023 2306  
                         l5015 22C0                           l5007 226A                           l5111 39FE  
                         l5103 3958                           l4321 3486                           l4313 3454  
                         l4305 3420                           l4241 3284                           l4233 3264  
                         l4225 3232                           l4401 2EF2                           l4081 2DBE  
                         l4073 2D7C                           l4065 2D22                           l4057 2CD6  
                         l4049 2CB4                           l4137 4924                           l4129 48AE  
                         l5033 6196                           l5041 61A0                           l5201 5C98  
                         l4161 4750                           l4153 471A                           l4145 46C8  
                         l4217 4AEC                           l4209 4AA4                           l5017 22D8  
                         l5009 2272                           l5113 3A0E                           l5105 3978  
                         l6001 2850                           l4331 34F8                           l4323 34B4  
                         l4307 3436                           l4315 3466                           l4251 32BA  
                         l4243 328A                           l4235 3266                           l4227 3234  
                         l4411 2F42                           l4403 2EFC                           l4091 2DDC  
                         l4083 2DC4                           l4075 2D8C                           l4067 2D30  
                         l4059 2CEC                           l4139 4968                           l5027 61B0  
                         l5035 61A6                           l5051 5EE4                           l5043 5EAA  
                         l5211 617A                           l4171 47D2                           l4163 4764  
                         l4155 471E                           l4147 46E8                           l5019 22E8  
                         l5115 3A24                           l5123 3A3C                           l5107 39CE  
                         l6011 290A                           l6003 2864                           l4341 3570  
                         l4333 3522                           l4317 3474                           l4309 343C  
                         l4261 32FA                           l4253 32CA                           l4245 3298  
                         l4229 3244                           l4237 326E                           l4501 5162  
                         l4421 2F84                           l4413 2F4E                           l4405 2F12  
                         l4085 2DC6                           l4077 2DAC                           l4069 2D6A  
                         l5029 61B4                           l5037 61AA                           l5221 5F68  
                         l5061 5FFA                           l5053 5EE6                           l5045 5EAE  
                         l5205 5CA2                           l5213 618A                           l4181 481C  
                         l4173 47D4                           l4165 4772                           l4157 472A  
                         l4149 46EC                           l5133 3AFA                           l5117 3A2C  
                         l5125 3A6E                           l5301 594A                           l6005 288E  
                         l6013 2916                           l4351 35A6                           l4343 358C  
                         l4327 34DE                           l4335 3526                           l4319 3478  
                         l4263 330A                           l4271 332A                           l4255 32CC  
                         l4247 329A                           l4239 327E                           l4503 5172  
                         l4511 4C14                           l4431 2FE6                           l4423 2F94  
                         l4415 2F5C                           l4407 2F1E                           l4087 2DCC  
                         l4079 2DB0                           l4095 561A                           l5071 5D40  
                         l5063 5CF2                           l5311 5A7A                           l5223 5A1A  
                         l5215 5F2A                           l5231 5094                           l5047 5EB6  
                         l5039 619C                           l5207 5CE8                           l4175 47E6  
                         l4167 4784                           l4159 4748                           l4191 49DC  
                         l5143 3B76                           l5135 3B24                           l5127 3A92  
                         l5119 3A34                           l5303 596A                           l6007 28A0  
                         l4345 3590                           l4337 3540                           l4329 34EA  
                         l4281 3368                           l4273 333A                           l4265 3312  
                         l4249 32AA                           l4257 32D4                           l4505 5196  
                         l4521 4C9E                           l4513 4C42                           l4441 308E  
                         l4433 3002                           l4425 2FAE                           l4417 2F68  
                         l4409 2F36                           l4361 2DFA                           l4089 2DDA  
                         l5401 11CE                           l4097 5622                           l5081 5880  
                         l5241 5812                           l5073 5D54                           l5065 5D06  
                         l5321 5AAA                           l5313 5A8A                           l5217 59C8  
                         l5057 5FDE                           l5233 50A0                           l5225 504C  
                         l5049 5EBE                           l4169 47B2                           l4177 47EC  
                         l4193 49E0                           l4185 49AA                           l4601 5F04  
                         l5137 3B44                           l5129 3AC6                           l5145 3BA6  
                         l6009 28BC                           l4347 359E                           l4339 3556  
                         l4291 33B0                           l4283 3378                           l4275 333A  
                         l4267 3316                           l4259 32E4                           l4507 519C  
                         l4523 4CB0                           l4515 4C52                           l4451 30CA  
                         l4443 3098                           l4435 302C                           l4427 2FBE  
                         l4419 2F78                           l4371 2E3A                           l4363 2E08  
                         l5251 4504                           l5411 13AC                           l5403 124A  
                         l4099 5634                           l5083 5898                           l5243 5826  
                         l5075 5D60                           l5067 5D12                           l5331 5AB4  
                         l5323 5AAC                           l5315 5A94                           l5307 5A6C  
                         l5219 56F4                           l5059 5FEA                           l5227 5070  
                         l5235 50B8                           l4179 47FC                           l4195 49EE  
                         l4187 49AE                           l4611 4DAA                           l4603 4D18  
                         l5091 38E0                           l4349 35A4                           l4293 33C4  
                         l4285 3388                           l4525 4CBE                           l4517 4C80  
                         l4461 313C                           l4453 30D8                           l4445 30A6  
                         l4437 3062                           l4429 2FDA                           l4381 2E6A  
                         l4373 2E40                           l4365 2E0A                           l3901 295A  
                         l5253 4514                           l5501 17C4                           l5421 141C  
                         l5413 13DE                           l5405 12A6                           l4701 556E  
                         l5245 583E                           l5077 5D74                           l5069 5D26  
                         l5181 6090                           l5173 607C                           l5333 5AB6  
                         l5325 5AAE                           l5317 5A9E                           l5309 5A70  
                         l5341 35B2                           l5085 57B8                           l5237 50D0  
                         l5229 5088                           l4197 4A0E                           l4189 49BC  
                         l4533 5FA6                           l4541 4B0E                           l4621 4E0C  
                         l4605 4D38                           l5093 3908                           l5149 3BB8  
                         ?_pad 0011                           l4295 33D2                           l4287 3398  
                         l4279 334E                           l4527 4D0E                           l4519 4C90  
                         l4471 31A6                           l4463 314A                           l4455 3106  
                         l4447 30B8                           l4439 3070                           l4391 2EA2  
                         l4383 2E6C                           l4375 2E50                           l4367 2E1A  
                         l4359 2DEE                           l3911 2994                           l3903 296A  
                         l5271 45DA                           l5263 4592                           l5255 4522  
                         l5511 182C                           l5431 148C                           l5423 144E  
                         l5407 1322                           l4703 5586                           l5079 586C  
                         l4711 5286                           l5183 6092                           l5175 6086  
                         l5335 5AB8                           l5327 5AB0                           l5319 5AA8  
                         l5351 3812                           l5343 367E                           l5087 57CC  
                         l5247 4EE0                           l5239 50E8                           l4199 4A2C  
                         l4535 5FBC                           l4551 4B64                           l4543 4B24  
                         l4607 4D76                           l4615 4DB6                           l4631 56AC  
                         l5095 3916                           l4297 33DE                           l4289 33A0  
                         l4529 4D14                           l4481 31FC                           l4473 31C0  
                         l4465 3174                           l4449 30C6                           l4393 2EC2  
                         l4385 2E7C                           l4377 2E56                           l4369 2E2A  
                         l3921 29C2                           l3913 299A                           l3905 297A  
                         l5281 465A                           l5273 45E6                           l5265 459A  
                         l5257 4568                           l5513 185E                           l5433 14BE  
                         l5409 137A                           l5361 0EB8                           l4713 5292  
                         l4705 523E                           l5601 613A                           l4721 51C4  
                         l5177 608C                           l5185 611C                           l5337 5ABA  
                         l5329 5AB2                           l5353 3846                           l5345 36B2  
                         l5089 57E4                           l5249 4F96                           l5193 5C02  
                         l4801 40EE                           l4537 5FCC                           l4553 4B74  
                         l4617 4DC8                           l4609 4D9E                           l4641 41A8  
                         l4633 4110                           l4625 5E20                           l5097 3924  
                         l4299 33FC                           l4475 31DC                           l4483 3202  
                         l4459 3130                           l4467 3178                           l4395 2ED2  
                         l4387 2E8C                           l4379 2E5C                           l3931 29F6  
                         l3923 29C4                           l3915 29AC                           l3907 297C  
                         l4491 5DEA                           l5291 46A2                           l5283 465C  
                         l5275 4622                           l5267 45A6                           l5259 457E  
                         l5531 1918                           l5515 1898                           l5523 18D6  
                         l5451 1580                           l5435 14F8                           l5443 1536  
                         l5419 13EA                           l5371 0F2A                           l5363 0EEC  
                         l5355 0E52                           l4707 5262                           l4715 52AA  
                         l5603 6142                           l4731 5224                           l4723 51DC  
                         l5179 608E                           l5347 3746                           l5195 5C48  
                         l5187 5BB2                           l5339 575A                           l4563 4B9E  
                         l4555 4B78                           l4547 4B38                           l4651 42C4  
                         l4635 4130                           l4627 5E30                           l4811 1952  
                         l6155 3A50                           l5099 3928                           l5611 4324  
                         l4485 3206                           l4477 31EC                           l4469 3192  
                         l4389 2E9C                           l3941 2A32                           l3925 29D4  
                         l3933 29FE                           l3917 29AE                           l3909 2984  
                         l5293 46A4                           l5285 4660                           l5277 462E  
                         l5269 45D8                           l5509 17FA                           l5445 1574  
                         l5429 145A                           l5381 103C                           l5373 0F7C  
                         l5365 0F20                           l5357 0E7C                           l4741 5330  
                         l4733 52DC                           l4717 52C2                           l4709 527A  
                         l5605 614C                           l4725 51E8                           l5349 377A  
                         l5701 3CAC                           l5541 6164                           l5189 5BF8  
                         l4581 4C02                           l4573 4BC6                           l4565 4BA8  
                         l4557 4B86                           l4549 4B62                           l4653 42D8  
                         l4645 4218                           l4637 4186                           l4629 568E  
                         l4661 5B62                           l4901 1CF4                           l4821 199C  
                         l4813 1956                           l4805 192E                           l6157 3B0E  
                         l5621 4402                           l5613 4342                           l4495 50F6  
                         l4479 31FA                           l4399 2EE6                           l3951 2A46  
                         l3943 2A36                           l3935 2A0E                           l3927 29E4  
                         l3919 29B4                           l5287 4684                           l5279 463C  
                         l5535 1924                           l5455 158C                           l5391 10C0  
                         l5383 1042                           l5375 0FAE                           l5359 0E88  
                         l4735 5300                           l4743 5348                           l4751 602A  
                         l5607 6156                           l4727 51F4                           l4719 51A0  
                         l5711 3D84                           l5703 3CD8                           l5543 6166  
                         l5199 5C52                           l5551 604C                           l4591 55CE  
                         l4575 4BD2                           l4567 4BB2                           l4655 4300  
                         l4647 4254                           l4639 419A                           l4663 5B76  
                         l4671 5B96                           l4911 1D42                           l4903 1CF8  
                         l4831 19EA                           l4823 19AC                           l4815 197A  
                         l4807 1934                           l6159 3B98                           l5631 443C  
                         l5623 4404                           l5615 4398                           l4497 5124  
                         l3961 2A5A                           l3953 2A4A                           l3945 2A3A  
                         l3937 2A20                           l3929 29F4                           l4489 5DDA  
                         l5289 4694                           l5481 16BA                           l5457 15BE  
                         l5393 10D4                           l5385 105E                           l5377 0FB6  
                         l4681 53B6                           l4745 5360                           l4737 5318  
                         l4729 520C                           l4673 60A6                           l5721 3E5A  
                         l5713 3DAE                           l5705 3D02                           l5545 6170  
                         l5553 6050                           l3881 4E62                           l3873 4E16  
                         l4593 55E2                           l4585 55A0                           l4761 3EF6  
                         l4753 3E92                           l4577 4BE2                           l4657 4310  
                         l4649 4288                           l4665 5B82                           l4921 1DDA  
                         l4905 1D0A                           l4913 1D4A                           l4841 1A26  
                         l4833 19FC                           l4825 19B8                           l4817 1984  
                         l4809 1944                           l5297 5920                           l5633 4450  
                         l5625 4418                           l5617 43E6                           l5641 447A  
                         l5609 4322                           l5801 235C                           l4499 5134  
                         l3963 2A5E                           l3955 2A4E                           l3947 2A3E  
                         l3939 2A2E                           l3971 2A6E                           l5483 16EC  
                         l5475 167C                           l5467 1632                           l5459 15F0  
                         l5395 1174                           l5387 10B4                           l5379 100A  
                         l4683 53C2                           l4691 5522                           l4739 5324  
                         l4747 6016                           l4675 60B6                           l5651 60D0  
                         l5715 3DDA                           l5707 3D2E                           l5723 3E86  
                         l5571 5418                           l5547 6172                           l5539 615A  
                         l5555 605E                           l3883 4E98                           l3875 4E28  
                         l4595 55E6                           l4587 55AE                           l4771 3F54  
                         l4763 3F12                           l4755 3EB2                           l4579 4BF2  
                         l4667 5B86                           l4931 1EBE                           l4923 1E32  
                         l4915 1D52                           l4907 1D18                           l4851 1A88  
                         l4843 1A30                           l4835 1A00                           l4827 19C0  
                         l4819 198C                           l5299 592C                           l5643 4488  
                         l5635 445A                           l5627 4422                           l5619 43EA  
                         l5811 2366                           l5803 235E                           l3981 2ADE  
                         l3973 2A72                           l3965 2A62                           l3957 2A52  
                         l3949 2A42                           l3893 292E                           l5469 1670  
                         l5397 1184                           l4685 53CE                           l4677 537A  
                         l4693 5526                           l4749 601A                           l5661 54A0  
                         l5653 60D6                           l5717 3E04                           l5709 3D58  
                         l5581 5446                           l5573 542A                           l5549 6174  
                         l5557 6062                           l3877 4E3A                           l4597 5604  
                         l4589 55BA                           l4781 3F84                           l4773 3F60  
                         l4765 3F2E                           l4757 3EC6                           l4669 5B92  
                         l4941 1F58                           l4933 1EF0                           l4925 1E66  
                         l4917 1D62                           l4909 1D30                           l4853 1A8C  
                         l4837 1A06                           l4829 19C4                           l5645 4498  
                         l5637 445C                           l5629 4424                           l5901 2540  
                         l5821 2370                           l5813 2368                           l5805 2360  
                         l3991 2B08                           l3983 2AEA                           l3975 2A9C  
                         l3967 2A66                           l3959 2A56                           l3895 293A  
                         l5495 172E                           l5479 1688                           l5399 11BC  
                         l3887 60F4                           l4679 539E                           l4687 53E6  
                         l4695 553E                           l5655 58C6                           l5663 54B4  
                         l5719 3E30                           l5591 5484                           l5583 544A  
                         l5575 542C                           l4599 5EEA                           l3879 4E44  
                         l4791 4090                           l4783 4006                           l4775 3F68  
                         l4767 3F3E                           l4759 3ED6                           l4951 2030  
                         l4943 1F8C                           l4935 1F06                           l4919 1D76  
                         l4927 1E6C                           l4871 1B16                           l4855 1A92  
                         l4839 1A0E                           l4847 1A50                           l5671 5976  
                         l5647 44E8                           l5639 4474                           l5911 2588  
                         l5903 2548                           l5831 2380                           l5823 2372  
                         l5815 236A                           l5807 2362                           l3993 2B2A  
                         l3985 2AEE                           l3977 2AB8                           l3969 2A6A  
                         l3897 2948                           l5497 1760                           l3889 6110  
                         l4689 53FE                           l4697 554A                           l5657 58DA  
                         l5665 54CC                           l5649 60CE                           l5593 5486  
                         l5585 546E                           l5577 542E                           l4793 40AE  
                         l4785 400C                           l4777 3F74                           l4769 3F44  
                         l4961 205A                           l4945 1FE2                           l4953 2034  
                         l4937 1F38                           l4929 1E8A                           l4881 1BFE  
                         l4873 1B1C                           l4857 1A9A                           l4849 1A76  
                         l4865 1AB6                           l5673 5988                           l5921 25F4  
                         l5913 25BC                           l5905 255C                           l5841 23A0  
                         l5833 2384                           l5825 2374                           l5817 236C  
                         l5809 2364                           l3995 2B3A                           l3987 2AFC  
                         l3979 2AC8                           l3899 294A                           l5499 1792  
                         l4699 5556                           l5659 58F2                           l5667 54E0  
                         l5683 5ABE                           l5595 5490                           l5587 5478  
                         l5579 5430                           l4795 40C8                           l4787 4012  
                         l4779 3F7E                           l4971 2128                           l4963 2066  
                         l4955 2044                           l4947 1FE8                           l4939 1F48  
                         l4883 1C12                           l4891 1C8E                           l4875 1B50  
                         l4867 1AD0                           l5675 5990                           l5931 263A  
                         l5923 25F8                           l5915 25C8                           l5907 257A  
                         l5851 23C0                           l5843 23A4                           l5835 238C  
                         l5827 2376                           l5819 236E                           l5771 2328  
                         l3989 2AFE                           l5685 5B10                           l5669 54F4  
                         l5693 3C00                           l5597 5492                           l5589 547A  
                         l4797 40D8                           l4789 4076                           l4981 215A  
                         l4973 2138                           l4965 20DE                           l4957 204C  
                         l4949 201C                           l4893 1CC8                           l4885 1C46  
                         l4877 1B8E                           l5677 5998                           l5941 2680  
                         l5933 263E                           l5917 25DC                           l5925 260E  
                         l5909 2582                           l5861 23DC                           l5853 23C8  
                         l5845 23A8                           l5837 2394                           l5829 237C  
                         l5781 2344                           l5773 232C                           l3999 2B4E  
                         l5695 3C2E                           l5687 3BE6                           l5599 549C  
                         l4799 40DE                           l4991 218E                           l4983 215E  
                         l4975 213C                           l4967 20FE                           l4959 2052  
                         l4895 1CD8                           l4887 1C4E                           l4879 1BC0  
                         l5679 59B4                           l5951 26C6                           l5943 2684  
                         l5927 2622                           l5935 2654                           l5919 25F0  
                         l5871 243A                           l5863 23F0                           l5855 23D0  
                         l5847 23B0                           l5839 239C                           l5791 2350  
                         l5783 2348                           l5775 2330                           l5697 3C56  
                         l5689 3BEE                           l4993 2192                           l4985 2164  
                         l4977 2142                           l4969 211A                           l4897 1CE4  
                         l5961 270C                           l5953 26CA                           l5937 2668  
                         l5945 269A                           l5929 2636                           l5881 2494  
                         l5873 2442                           l5865 23F2                           l5857 23D8  
                         l5849 23B8                           l5793 2354                           l5785 234A  
                         l5777 2334                           l5699 3C82                           l4995 2198  
                         l4979 214A                           l4987 216A                           l4899 1CEC  
                         l5971 2752                           l5963 2710                           l5947 26AE  
                         l5955 26E0                           l5939 267C                           l5891 24E0  
                         l5883 2498                           l5875 2456                           l5867 241A  
                         l5859 23DC                           l5795 2356                           l5787 234C  
                         l5779 2338                           l4997 21F0                           l4989 217C  
                         l5981 2798                           l5973 2756                           l5957 26F4  
                         l5965 2726                           l5949 26C2                           l5893 24FA  
                         l5885 249C                           l5877 2462                           l5869 2434  
                         l5797 2358                           l5789 234E                           l4999 2224  
                         l5991 27DE                           l5983 279C                           l5967 273A  
                         l5975 276C                           l5959 2708                           l5895 2516  
                         l5887 24B0                           l5879 2476                           l5799 235A  
                         l5993 27F2                           l5977 2780                           l5985 27B2  
                         l5969 274E                           l5897 2530                           l5889 24C4  
                         l5995 281C                           l5987 27C6                           l5979 2794  
                         l5899 2538                           l5997 2826                           l5989 27CA  
                         l5999 283E                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E26                           STR_3 0E49  
                         STR_6 0E4D                           u3100 29C2                           u3020 4E28  
                         u3101 29BE                           u3021 4E24                           u3110 29D4  
                         u3030 4E3A                           u3111 29D0                           u3031 4E36  
                         u4000 311C                           u3200 2B1C                           u3120 29E4  
                         u3040 4E62                   _BAUD4CONbits 000EE9                           u4001 3118  
                         u3201 2B18                           u3121 29E0                           u3041 4E5E  
                         u4010 3130                           u3210 2B2A                           u3130 2A20  
                         u3050 4E98                           u4011 312C                           u3211 2B26  
                         u3131 2A1C                           u3051 4E94                           u4100 4C80  
                         u4020 314A                           u3300 2C88                           u3220 2B3A  
                         u3140 2A2E                           u3060 2948                           u4101 4C7C  
                         u4021 3146                           u3301 2C84                           u3221 2B36  
                         u3141 2A2A                           u3061 2944                           u4110 4C9E  
                         u4030 3192                           u3310 2C98                           u3230 2B6C  
                         u3150 2A9C                           u3070 295A                           u4111 4C9A  
                         u4031 318E                           u3311 2C94                           u3231 2B68  
                         u3151 2A98                           u3071 2956                           u4120 4CBE  
                         u4040 31C0                           u3400 2D7C                           u3320 2CB4  
                         u3240 2B7A                           u3160 2AB4                           u3080 296A  
                         u5000 5ED2                           u4200 4BE2                           u4121 4CBA  
                         u4041 31BC                           u3401 2D78                           u3321 2CB0  
                         u3241 2B76                           u3161 2AAE                           u3081 2966  
                         u5001 5ECA                           u4201 4BDE                           u4130 4D0E  
                         u4050 31FA                           u3410 2D8C                           u3330 2CC4  
                         u3250 2B98                           u3170 2AB6                           u3090 29AC  
                         u4210 4BF2                           _T2PR 000FBC                           u4131 4D0A  
                         u4051 31F6                           u3411 2D88                           u3331 2CC0  
                         u3251 2B94                           u3091 29A8                           u4211 4BEE  
                         u4060 5124                           u3420 2DAC                           u3340 2CD6  
                         u3260 2BD0                           u3180 2ADE                           u5100 4514  
                         u3500 4924                           u5020 6014                           u4220 55AE  
                         u4140 5FBC                           u4300 4E02                           u4061 5120  
                         u3421 2DA8                           u3341 2CD2                           u3261 2BCC  
                         u3181 2ADA                           u5101 4510                           u3501 4920  
                         u5021 6010                           u4221 55AA                           u4141 5FB8  
                         u4301 4DFC                           u4070 5162                           u3430 2DBE  
                         u3350 2CEC                           u3270 2C16                           u3190 2AFC  
                         u5110 4522                           u3510 46C8                           u4230 5604  
                         u4150 4B24                           u4310 4E04                           u5030 3908  
                         u4071 515E                           u3431 2DBA                           u3351 2CE8  
                         u3271 2C12                           u3191 2AF8                           u5111 451E  
                         u3511 46C4                           u4231 5600                           u4151 4B20  
                         u5031 3904                           u4080 5196                           u3440 2DDA  
                         u3360 2D02                           u3280 2C4C                           u5120 457E  
                         u3520 46FA                           u3600 4A2C                           u4240 5F04  
                         u4160 4B58                           u4400 4254                           u4320 5E62  
                         u5040 3958                           u5200 596A                           u4081 5192  
                         u3441 2DD6                           u3361 2CFE                           u3281 2C48  
                         u5121 457A                           u3521 46F6                           u3601 4A28  
                         u4241 5F00                           u4401 4250                           u4321 5E5E  
                         u5041 3954                           u5201 5966                           u4090 4C42  
                         u3370 2D16                           u3290 2C5C                           u5130 45D4  
                         u3450 5634                           u5018 5ED4                           u3610 4A56  
                         u4170 4B86                           u4250 4D58                           u4410 42A8  
                         u4330 56AC                           u5050 3978                           u4091 4C3E  
                         u3371 2D12                           u3291 2C58                           u5131 45D0  
                         u5211 0E82                           u3451 5630                           u3531 4724  
                         u3611 4A52                           u4171 4B82                           u4331 56A8  
                         u5051 3974                           u3700 32FA                           u3380 2D30  
                         u5140 461E                           u5300 13DE                           u5220 0F7C  
                         u3460 5652                           u4500 559E                           u3540 4748  
                         u3620 4A84                           u4180 4B9A                           u4260 4D76  
                         u4420 42C4                           u4340 4158                           u5060 3A8E  
                         u3701 32F6                           u3381 2D2C                           u5141 461A  
                         u5301 13DA                           u5221 0F78                           u3461 564E  
                         u4501 559A                           u3541 4744                           u3621 4A80  
                         u4181 4B96                           u4165 4B4E                           u4261 4D72  
                         u4421 42C0                           u5061 3A8A                           u3710 333A  
                         u3390 2D6A                           u5150 463C                           u5310 141C  
                         u5230 100A                           u3470 566E                           u4510 52C2  
                         u5070 618A                           u3550 4772                           u3630 4ACC  
                         u4190 4BC2                           u4270 4D9E                           u4430 4300  
                         u4350 4186                           u3711 3336                           u3391 2D66  
                         u5151 4638                           u5311 1418                           u5231 1006  
                         u3471 566A                           u4511 52BE                           u5071 6186  
                         u3551 476E                           u3631 4AC8                           u4191 4BBE  
                         u4271 4D9A                           u4255 4D4E                           u4431 42FC  
                         u4415 429E                           u4351 4182                           u3800 34B4  
                         u3720 33B0                           u3640 3232                           u5160 464C  
                         u5400 162E                           u5320 144E                           u5240 105E  
                         u4520 52DA                           u5080 50D0                           u3560 47B2  
                         u3480 5EA6                           u4600 3ED6                           u4280 4DC8  
                         u4360 41A8                           u4440 5BB0                           u3801 34B0  
                         u3721 33AC                           u3641 322E                           u5161 4648  
                         u5401 162A                           u5321 144A                           u5241 105A  
                         u4521 52D6                           u5081 50CC                           u3561 47AE  
                         u3481 5EA2                           u4601 3ED2                           u4281 4DC4  
                         u4361 41A4                           u4345 414E                           u4441 5BAC  
                         u3810 34CA                           u3730 33D2                           u3650 3244  
                         u5170 465A                           u5410 1670                           u5330 148C  
                         u5250 10B4                           u3490 485A                           u4530 5224  
                         u4450 60B6                           u5090 50E8                           u3570 47FC  
                         u4610 3F12                           u3811 34C6                           u3731 33CE  
                         u3651 3240                           u5171 4656                           u5411 166C  
                         u5331 1488                           u5251 10B0                           u3491 4856  
                         u4531 5220                           u4451 60B2                           u5091 50E4  
                         u3571 47F8                           u4611 3F0E                           u6107 4466  
                         u6027 23FE                           u3820 34DE                           u3740 33FC  
                         u3660 3254                           u3900 2E6A                           u5180 4694  
                         u5500 185E                           u5420 16BA                           u5340 14BE  
                         u5260 10D4                           u4540 523C                           u4460 60CC  
                         u3580 49BC                           u4620 3F3E                           u4380 4214  
                         u4700 19AC                           u3821 34DA                           u3741 33F8  
                         u3661 3250                           u3901 2E66                           u5181 4690  
                         u5501 185A                           u5421 16B6                           u5341 14BA  
                         u5261 10D0                           u4541 5238                           u4461 60C8  
                         u3581 49B8                           u4621 3F3A                           u4381 4210  
                         u4701 19A8                           u6117 44A2                           u6037 2426  
                         u3830 34F8                           u3750 3420                           u3670 3298  
                         u3910 2E7C                           u5190 46A2                           u5510 1898  
                         u5430 16EC                           u5350 14F8                           u5270 1184  
                         u4470 53FE                           u4550 5360                           u3590 49EE  
                         u4630 3F54                           u4390 4238                           u4710 19EA  
                         u3831 34F4                           u3751 341C                           u3671 3294  
                         u3911 2E78                           u5191 469E                           u5511 1894  
                         u5431 16E8                           u5351 14F4                           u5271 1180  
                         u4471 53FA                           u4551 535C                           u6207 54BE  
                         u3591 49EA                           u4631 3F50                           u4295 4DDA  
                         u4375 41BC                           u4711 19E6                           u6127 44F2  
                         u6047 24D0                           u3840 3540                           u3760 3436  
                         u3680 32AA                           u3920 2E8C                           u5520 18D2  
                         u5440 172A                           u5360 1532                           u5280 11CE  
                         u4480 5416                           u4560 5378                           u4640 4090  
                         u4376 41C6                           u4800 1CC0                           u4720 19FC  
                         u5600 43E6                           u3841 353C                           u3761 3432  
                         u3681 32A6                           u3921 2E88                           u5521 18CE  
                         u5441 1726                           u5361 152E                           u5281 11CA  
                         u4481 5412                           u4561 5374                           u6217 54FE  
                         u6137 50AA                           u4641 408C                           u4377 41D6  
                         u4801 1CBC                           u4721 19F8                           u5601 43E2  
                         u6057 24EC                           u3850 3570                           u3770 3454  
                         u3690 32BA                           u3930 2EC2                           u5530 1914  
                         u5450 1760                           u5370 1574                           u5290 13AC  
                         u4490 5586                           u4570 604A                           u4650 40AE  
                         u4810 1CD8                           u4730 1A76                           u5610 4418  
                         u3851 356C                           u3771 3450                           u3691 32B6  
                         u3931 2EBE                           u5531 1910                           u5451 175C  
                         u5371 1570                           u5291 13A8                           u4491 5582  
                         u6307 58E4                           u4571 6046                           u6227 5D7E  
                         u6147 5FF0                           u4651 40AA                           u4395 422E  
                         u4811 1CD4                           u4731 1A72                           u5611 4414  
                         u6067 432E                           u3860 359E                           u3780 3474  
                         u3940 2ED2                           u5460 1792                           u5380 15BE  
                         u5700 3CAC                           u5540 607A                           u4660 40C8  
                         u4580 3EC2                           u4900 2030                           u4820 1D0A  
                         u4740 1A88                           u5620 4450                           u3861 359A  
                         u3781 3470                           u3941 2ECE                           u5461 178E  
                         u5381 15BA                           u6317 5910                           u6237 529C  
                         u6157 57D6                           u5701 3CA8                           u5541 6076  
                         u4661 40C4                           u4581 3EBC                           u4901 202C  
                         u4821 1D06                           u4741 1A84                           u5621 444C  
                         u6077 43A2                           u3790 3486                           u3950 304C  
                         u3870 2E08                           u5470 17C4                           u5390 15F0  
                         u5710 3D02                           u4670 40D8                           u4590 3EC4  
                         u4910 20DE                           u4830 1D18                           u4750 1B02  
                         u5630 4488                           u3791 3482                           u3871 2E04  
                         u5471 17C0                           u5391 15EC                           u6327 5560  
                         u6247 6020                           u6167 5802                           u5711 3CFE  
                         u4671 40D4                           u4911 20DA                           u4831 1D14  
                         u4751 1AFE                           u5631 4484                           u6087 43F4  
                         u3960 30A6                           u3880 2E1A                           u5480 17F6  
                         u5720 3D58                           u4920 211A                           u4840 1D42  
                         u4760 1B8E                           u4680 1952                           u5640 4496  
                         u3961 30A2                           u3881 2E16                           u5481 17F2  
                         u6337 53D8                           u6257 5830                           u6177 5A80  
                         u5721 3D54                           u4921 2116                           u4841 1D3E  
                         u4761 1B8A                           u4681 194E                           u5641 4492  
                         u6097 442E                           u3970 30C6                           u3890 2E2A  
                         u5490 182C                           u5730 3DAE                           u4930 2128  
                         u4850 1E8A                           u4770 1BC0                           u4690 199C  
                         u5650 44C0                           u5810 241A                           u3971 30C2  
                         u3955 3042                           u3891 2E26                           u5491 1828  
                         u6267 585C                           u6187 5D30                           u5731 3DAA  
                         u4931 2124                           u4851 1E86                           u4771 1BBC  
                         u4691 1998                           u5651 44BA                           u5811 2416  
                         u3980 30D8                           u5740 3E04                           u4940 217C  
                         u4860 1EF0                           u4780 1BFE                           u5660 44D4  
                         u5652 44C2                           u5580 43C0                           u5900 273A  
                         u5820 2494                           u3981 30D4                           u6277 588A  
                         u6197 51FE                           u5741 3E00                           u4941 2178  
                         u4861 1EEC                           u4781 1BFA                           u5661 44CE  
                         u5581 43BA                           u5901 2736                           u5821 2490  
                         u3990 3106                           u5750 3E5A                           u4950 224E  
                         u4870 1F38                           u4790 1C8A                           u5670 44E6  
                         u5662 44D6                           u5590 43D4                           u5582 43C2  
                         u5910 2780                           u5830 2530                           u3991 3102  
                         u6287 58B6                           u5751 3E56                           u4951 224A  
                         u4871 1F34                           u4791 1C86                           u5671 44E2  
                         u5591 43CE                           u5911 277C                           u5831 252C  
                         u5680 3BFC                           u4960 226A                           u4880 1F48  
                         u5592 43D6                           u5920 27C6                           u5840 257A  
                         u6297 533A                           u5681 3BF8                           u4961 2266  
                         u4881 1F44                           u5921 27C2                           u5841 2576  
                         u5690 3C56                           u4970 22D2                           u4890 1FE2  
                         u5930 27DE                           u5850 25DC                           u5691 3C52  
                         u4971 22CC                           u4891 1FDE                           u5931 27DA  
                         u5851 25D8                           u4980 22D4                           u5940 2850  
                         u5860 2622                           u5941 284C                           u5861 261E  
                         u4990 22E8                           u5950 292A                           u5870 2668  
                         u4991 22E4                           u5951 2926                           u5871 2664  
                         u5880 26AE                           u5881 26AA                           u5890 26F4  
                         u5891 26F0                  _LightBlueMove 5A1A                           abs@a 0013  
                         _dbuf 02A0                           _labs 568E                           _main 2328  
                         _dtoa 3E92                           _prec 00EF                           _vals 01D0  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           _stop 5522  
                ___fpclassifyf 4D18                           prodh 000FF4                           prodl 000FF3  
                         start 0000                ___fldiv@new_exp 0043         __end_of_color_read_Red 5C52  
       __end_of_color_read_lum 5C02                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5F68                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5CF2  
              _RunOneBlockTime 00F7                  ___fltol@sign1 0009                __end_of___aodiv 483E  
                        ?_labs 0001                __end_of___fladd 2DEE                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4B0E                __end_of___fldiv 35B2  
              __end_of___flneg 5FDE                __end_of___flmul 3218                __end_of___flsub 5E20  
              __end_of___fltol 4C14                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 568E                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3E92        __end_of_sendCharSerial4 6190  
   __end_of_I2C_2_Master_Start 61BA     __end_of_I2C_2_Master_Write 619C                   YellowMove@mL 0020  
                        _flags 00F3                   YellowMove@mR 0022                          _fputc 4E16  
                        _fputs 5E64                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00FB                          _width 00ED  
                        _putch 61C2                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                   main@run_flag 0168                          status 000FD8  
              __end_of_sprintf 59C8                 ?___fpclassifyf 0001        __end_of_color_read_Blue 5CF2  
        _I2C_2_Master_RepStart 619C               __end_of_BlueMove 575A                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 5D8E        __end_of_turnCalibration 4502                _reverseOneBlock 5812  
                 __end_of_labs 56F4                   __end_of_main 292E                   __end_of_dtoa 4110  
                 __end_of_stop 55A0                _colour_rel$3142 0064                _colour_rel$3143 0068  
                       ??_labs 0005                         ??_main 00CF                         ??_dtoa 0026  
        __end_of_ReverseYellow 4F96               __end_of_PinkMove 5B62                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88       __end_of_color_click_init 5ABE                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 59C8               __end_of___xxtofl 46B6  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 4C14  
                       ___fleq 50F6                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 60F4              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 192E                      ??___lwdiv 000B                         _floorf 4110  
                       _memcpy 5B62                         clear_0 5DB4                         clear_1 5DC0  
                       clear_2 5DCC                         _motorL 01C7                         _motorR 01BE  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5E20                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 5976                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 52DC  
                   ___flge@ff1 002A                     _YellowMove 5ABE                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 5DD4        __end_of_reverseOneBlock 586C                     ___flneg@f1 0001  
     __end_of_color_read_Green 5CA2         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 61C4  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 52DC  
                 __pidataBANK0 61BA                  __end_of_fputc 4EE0                  __end_of_fputs 5EA8  
                __end_of_putch 61C4              __end_of_GreenMove 5FA6            __end_of_Timer0_init 615A  
          __end_of_ReversePink 504C                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 0172          __end_of_reverseDetect 58C6  
                      ??_putch 0001                     __pbssBANK0 00D1                     __pbssBANK1 0172  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 58C6                     _getTMR0val 60CE  
            __end_of_RetryMove 5522                      ?_PinkMove 0020              _color_writetoaddr 611A  
                   _delayed_ms 5FDE                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
            __end_of_TurnDelay 604C          __end_of_timed_forward 50F6            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 35B2  
      __end_of_Interrupts_init 61C6         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 016C               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 613A                        _RedMove 5F2A             _I2C_2_Master_Start 61B0  
                   ??_PinkMove 0024                     _initUSART4 615A             _I2C_2_Master_Write 6190  
                      __Hparam 0000                        _WayBack 0180                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 613A                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4F96                        ___aodiv 46B6  
                      ___fladd 292E                        ___aomod 49AA                        ___fldiv 3218  
                      ___flneg 5FA6                        ___flmul 2DEE                        ___flsub 5DDA  
                      ___fltol 4B0E            ?_I2C_2_Master_Start 0001                        ___lwdiv 561A  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 5D8E  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3BE6  
                      __ptext0 2328                        __ptext1 4322                        __ptext2 5976  
                      __ptext3 5920                        __ptext4 38E0                        __ptext5 192E  
                      __ptext6 5E20                        __ptext7 5B62                        __ptext8 568E  
                      __ptext9 4110                      _T2CONbits 000FBD                     ??___xxtofl 0005  
               main@lost_count 016A                      _T2HLTbits 000FBE                        efgtoa@c 0066  
                      efgtoa@d 0074                        efgtoa@e 0078                        efgtoa@f 0062  
                      efgtoa@g 008D                        efgtoa@h 0082                        efgtoa@i 0080  
                      efgtoa@l 0086                        efgtoa@m 0076                        efgtoa@n 008B  
                      efgtoa@p 006B                        efgtoa@t 006D                        efgtoa@u 0091  
                      efgtoa@w 007A                  _RxBufWriteCnt 00F6              color_read_lum@tmp 000A  
                      main@buf 0100                        _sprintf 5976           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 5DD4                        floorf@e 0059  
                      floorf@m 0055                        floorf@u 005B                        floorf@x 004B  
                      memcpy@d 0007                        memcpy@n 0005                        memcpy@s 0009  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 017E  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
            __end_of_vfpfcnvrt 3BE6                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F9  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 5418                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 523E  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 016E                   _EUSART4RXbuf 00D1  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 5D40                 __end_of___flge 4D18  
               __end_of___fleq 51A0                 _fullSpeedAhead 537A                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 611A  
               __end_of_efgtoa 2328                 __end_of_floorf 4322                 __end_of_memcpy 5BB2  
                   floorf@F526 00E5       __end_of_Forwardhalfblock 5920                      _GreenMove 5F68  
               __end_of_strcpy 5E64            start_initialization 5D8E                    __end_of_abs 5F2A  
                  __end_of_pad 561A                  _TxBufWriteCnt 005F          __end_of_LightBlueMove 5A6C  
                 ??_OrangeMove 0024          __end_of___fpclassifyf 4E16            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 54A0                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 5418  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 54A0  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F7                _ForwardOneBlock 57B8  
                     ??_floorf 004F                       ??_memcpy 0007                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 4EE0  
                    ___fldiv@a 0036                      ___fldiv@b 0032                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 5A1A  
                    ___flmul@a 0015                      ___flmul@b 0011                    __pbssCOMRAM 005F  
                    ___flsub@a 002E                      ___flsub@b 002A                      _TurnDelay 6016  
                __pcstackBANK0 0060                  __pcstackBANK1 0100               ___aodiv@dividend 0001  
                 ??_YellowMove 0024          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
                  _efgtoa$2772 006F               ___lwdiv@dividend 0007                      _dtoa$2741 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                 ?_ReversePink 0020                     ?_RetryMove 001A                timed_forward@mL 0014  
                     ?___aodiv 0001                timed_forward@mR 0016                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$3144 0060                       ?___lwdiv 0007  
              main@colour_1291 0166                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 5B10           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              timed_forward@time 0018            __end_of_readColours 57B8  
            _I2C_2_Master_Idle 60A6              _I2C_2_Master_Init 607C              _I2C_2_Master_Read 5EA8  
            _I2C_2_Master_Stop 61A6                     ?_TurnDelay 0001                   _RxBufReadCnt 00F5  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0001  
               colour_rel@vals 004B              _sendStringSerial4 604C            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 5812                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                      _lost_flag 00F1                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E52            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 38E0      __end_of_I2C_2_Master_Idle 60CE      __end_of_I2C_2_Master_Init 60A6  
    __end_of_I2C_2_Master_Read 5EEA              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 61B0  
                 setMotorPWM@m 000E                       _DataFlag 00FD    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 60F4  
                 _TxBufReadCnt 00F4                       _BlueMove 56F4                      _turnRight 51A0  
           __end_of_delayed_ms 6016                     vfpfcnvrt@c 00A5              ??_turnCalibration 0024  
                    copy_data0 5DA2      __end_of_sendStringSerial4 607C                   ??_colour_rel 004F  
                _reverseDetect 586C  __end_of_I2C_2_Master_RepStart 61A6             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 49AA                   ??_initUSART4 0001                       _PinkMove 5B10  
                     __Hrparam 0000         __end_of_Colour_decider 192E                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 537A                    ??_RetryMove 001E           TurnDelay@Turn45Delay 0001  
                  _readColours 575A                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 38E0  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E9                     _ANSELFbits 000EB4  
                _timed_forward 504C                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 4502                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 6178                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4D18                       __ptext11 4B0E  
                     __ptext20 46B6                       __ptext12 5FA6                       __ptext21 604C  
                     __ptext13 3E92                       __ptext30 615A                       __ptext22 6178  
                     __ptext14 55A0                       __ptext31 5418                       __ptext23 575A  
                     __ptext15 5E64                       __ptext40 5A1A                       __ptext32 3BE6  
                     __ptext24 5BB2                       __ptext16 4E16                       __ptext41 5F68  
                     __ptext33 504C                       __ptext25 5C02                       __ptext17 61C2  
                     __ptext50 60A6                       __ptext42 56F4                       __ptext34 5FDE  
                     __ptext26 5C52                       __ptext18 5EEA                       __ptext51 607C  
                     __ptext43 60CE                       __ptext35 4EE0                       __ptext27 5CA2  
                     __ptext19 49AA                       __ptext60 6016                       __ptext52 5ABE  
                     __ptext44 35B2                       __ptext36 4F96                       __ptext28 619C  
                     __ptext61 5812                       __ptext53 5CF2                       __ptext45 5A6C  
                     __ptext37 57B8                       __ptext29 5EA8                       __ptext70 561A  
                     __ptext62 586C                       __ptext54 51A0                       __ptext46 611A  
                     __ptext38 5F2A                       __ptext71 0E52                       __ptext63 52DC  
                     __ptext55 613A                       __ptext47 6190                       __ptext39 59C8  
                     __ptext72 4502                       __ptext64 61C4                       __ptext56 54A0  
                     __ptext48 61A6                       __ptext73 5DDA                       __ptext65 58C6  
                     __ptext57 5B10                       __ptext49 61B0                       __ptext74 292E  
                     __ptext66 5522                       __ptext58 5D40                       __ptext75 2DEE  
                     __ptext67 537A                       __ptext59 523E                       __ptext76 4C14  
                     __ptext68 483E                       __ptext77 50F6                       __ptext69 60F4  
                     __ptext78 3218                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       _vfprintf 5920                  ??_turnRight45 001E  
                     main@temp 0164                       _turnLeft 523E               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
              main@prev_colour 0170                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 483E                  turnRight45@mL 001A                  turnRight45@mR 001C  
                    sprintf@ap 00C2               ??_fullSpeedAhead 0018                      strcpy@src 0003  
                 ??_turnLeft45 001E                     BlueMove@mL 0020                     BlueMove@mR 0022  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 5A6C                       sprintf@f 00C4  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 5D40                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 5D8E                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 6178                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
