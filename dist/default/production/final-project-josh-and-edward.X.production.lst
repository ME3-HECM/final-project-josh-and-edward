

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 21:51:34 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100   000000                     
   101                           ; Generated 06/04/2022 GMT
   102                           ; 
   103                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135   000000                     
   136                           	psect	idataBANK0
   137   006054                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _RunOneBlockTime
   141   006054  07D0               	dw	2000
   142                           
   143                           ;initializer for _Turn45Delay
   144   006056  00DC               	dw	220
   145                           
   146                           ;initializer for _power
   147   006058  001E               	dw	30
   148   000000                     _TRISEbits	set	3973
   149   000000                     _LATHbits	set	3968
   150   000000                     _TX4REG	set	3812
   151   000000                     _RC4STAbits	set	3815
   152   000000                     _SP4BRGH	set	3814
   153   000000                     _SSP2CON2bits	set	3802
   154   000000                     _RX4PPS	set	3605
   155   000000                     _SSP2CLKPPS	set	3612
   156   000000                     _SSP2DATPPS	set	3613
   157   000000                     _ANSELDbits	set	3751
   158   000000                     _SSP2ADD	set	3798
   159   000000                     _SSP2CON1bits	set	3801
   160   000000                     _LATAbits	set	3961
   161   000000                     _LATFbits	set	3966
   162   000000                     _LATGbits	set	3967
   163   000000                     _TRISAbits	set	3969
   164   000000                     _TRISGbits	set	3975
   165   000000                     _PORTFbits	set	3982
   166   000000                     _TRISHbits	set	3976
   167   000000                     _TMR0L	set	4051
   168   000000                     _TMR0H	set	4052
   169   000000                     _INTCONbits	set	4082
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE0bits	set	3625
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _PIR0bits	set	3635
   194   000000                     _T0CON1bits	set	4054
   195   000000                     _T0CON0bits	set	4053
   196   000000                     _CCP1CONbits	set	4011
   197   000000                     _CCPTMRS0bits	set	4013
   198   000000                     _T2PR	set	4028
   199   000000                     _T2CONbits	set	4029
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213                           
   214                           ; BSR set to: 14
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  66                 	db	102	;'f'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  66                 	db	102	;'f'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  66                 	db	102	;'f'
   238   000E18  20                 	db	32
   239   000E19  6C                 	db	108	;'l'
   240   000E1A  75                 	db	117	;'u'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  3D                 	db	61	;'='
   243   000E1D  25                 	db	37
   244   000E1E  64                 	db	100	;'d'
   245   000E1F  20                 	db	32
   246   000E20  61                 	db	97	;'a'
   247   000E21  63                 	db	99	;'c'
   248   000E22  74                 	db	116	;'t'
   249   000E23  75                 	db	117	;'u'
   250   000E24  61                 	db	97	;'a'
   251   000E25  6C                 	db	108	;'l'
   252   000E26  5F                 	db	95	;'_'
   253   000E27  63                 	db	99	;'c'
   254   000E28  6F                 	db	111	;'o'
   255   000E29  6C                 	db	108	;'l'
   256   000E2A  6F                 	db	111	;'o'
   257   000E2B  75                 	db	117	;'u'
   258   000E2C  72                 	db	114	;'r'
   259   000E2D  3D                 	db	61	;'='
   260   000E2E  25                 	db	37
   261   000E2F  64                 	db	100	;'d'
   262   000E30  20                 	db	32
   263   000E31  0D                 	db	13
   264   000E32  0A                 	db	10
   265   000E33  00                 	db	0
   266   000E34                     STR_2:
   267                           
   268                           ; BSR set to: 14
   269   000E34  69                 	db	105	;'i'
   270   000E35  6E                 	db	110	;'n'
   271   000E36  66                 	db	102	;'f'
   272   000E37  00                 	db	0
   273   000E38                     STR_5:
   274                           
   275                           ; BSR set to: 14
   276   000E38  6E                 	db	110	;'n'
   277   000E39  61                 	db	97	;'a'
   278   000E3A  6E                 	db	110	;'n'
   279   000E3B  00                 	db	0
   280   000E3C  00                 	db	0	; dummy byte at the end
   281   000000                     
   282                           ; #config settings
   283                           
   284                           	psect	cinit
   285   005B7E                     __pcinit:
   286                           	callstack 0
   287   005B7E                     start_initialization:
   288                           	callstack 0
   289   005B7E                     __initialization:
   290                           	callstack 0
   291                           
   292                           ; Initialize objects allocated to BANK0 (6 bytes)
   293                           ; load TBLPTR registers with __pidataBANK0
   294   005B7E  0E54               	movlw	low __pidataBANK0
   295   005B80  6EF6               	movwf	tblptrl,c
   296   005B82  0E60               	movlw	high __pidataBANK0
   297   005B84  6EF7               	movwf	tblptrh,c
   298   005B86  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   299   005B88  6EF8               	movwf	tblptru,c
   300   005B8A  EE00  F0F0         	lfsr	0,__pdataBANK0
   301   005B8E  EE10 F006          	lfsr	1,6
   302   005B92                     copy_data0:
   303   005B92  0009               	tblrd		*+
   304   005B94  CFF5 FFEE          	movff	tablat,postinc0
   305   005B98  50E5               	movf	postdec1,w,c
   306   005B9A  50E1               	movf	fsr1l,w,c
   307   005B9C  E1FA               	bnz	copy_data0
   308                           
   309                           ; Clear objects allocated to BANK2 (240 bytes)
   310   005B9E  EE02  F000         	lfsr	0,__pbssBANK2
   311   005BA2  0EF0               	movlw	240
   312   005BA4                     clear_0:
   313   005BA4  6AEE               	clrf	postinc0,c
   314   005BA6  06E8               	decf	wreg,f,c
   315   005BA8  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to BANK1 (114 bytes)
   318   005BAA  EE01  F000         	lfsr	0,__pbssBANK1
   319   005BAE  0E72               	movlw	114
   320   005BB0                     clear_1:
   321   005BB0  6AEE               	clrf	postinc0,c
   322   005BB2  06E8               	decf	wreg,f,c
   323   005BB4  E1FD               	bnz	clear_1
   324                           
   325                           ; Clear objects allocated to BANK0 (29 bytes)
   326   005BB6  EE00  F0D3         	lfsr	0,__pbssBANK0
   327   005BBA  0E1D               	movlw	29
   328   005BBC                     clear_2:
   329   005BBC  6AEE               	clrf	postinc0,c
   330   005BBE  06E8               	decf	wreg,f,c
   331   005BC0  E1FD               	bnz	clear_2
   332   005BC2                     end_of_initialization:
   333                           	callstack 0
   334   005BC2                     __end_of__initialization:
   335                           	callstack 0
   336   005BC2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   337   005BC4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   338   005BC6  0100               	movlb	0
   339   005BC8  EF37  F011         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssBANK0
   342   0000D3                     __pbssBANK0:
   343                           	callstack 0
   344   0000D3                     	ds	12
   345   0000DF                     floorf@F526:
   346                           	callstack 0
   347   0000DF                     	ds	4
   348   0000E3                     ___fpclassifyf@F465:
   349                           	callstack 0
   350   0000E3                     	ds	4
   351   0000E7                     _width:
   352                           	callstack 0
   353   0000E7                     	ds	2
   354   0000E9                     _prec:
   355                           	callstack 0
   356   0000E9                     	ds	2
   357   0000EB                     _flags:
   358                           	callstack 0
   359   0000EB                     	ds	1
   360   0000EC                     _TxBufReadCnt:
   361                           	callstack 0
   362   0000EC                     	ds	1
   363   0000ED                     _TxBufWriteCnt:
   364                           	callstack 0
   365   0000ED                     	ds	1
   366   0000EE                     _RxBufReadCnt:
   367                           	callstack 0
   368   0000EE                     	ds	1
   369   0000EF                     _RxBufWriteCnt:
   370                           	callstack 0
   371   0000EF                     	ds	1
   372                           
   373                           	psect	dataBANK0
   374   0000F0                     __pdataBANK0:
   375                           	callstack 0
   376   0000F0                     _RunOneBlockTime:
   377                           	callstack 0
   378   0000F0                     	ds	2
   379   0000F2                     _Turn45Delay:
   380                           	callstack 0
   381   0000F2                     	ds	2
   382   0000F4                     _power:
   383                           	callstack 0
   384   0000F4                     	ds	2
   385                           
   386                           	psect	bssBANK1
   387   000100                     __pbssBANK1:
   388                           	callstack 0
   389   000100                     _EUSART4RXbuf:
   390                           	callstack 0
   391   000100                     	ds	20
   392   000114                     _move_count:
   393                           	callstack 0
   394   000114                     	ds	2
   395   000116                     _run_flag:
   396                           	callstack 0
   397   000116                     	ds	2
   398   000118                     _lost_flag:
   399                           	callstack 0
   400   000118                     	ds	2
   401   00011A                     _WayBack:
   402                           	callstack 0
   403   00011A                     	ds	50
   404   00014C                     _rel:
   405                           	callstack 0
   406   00014C                     	ds	12
   407   000158                     _motorR:
   408                           	callstack 0
   409   000158                     	ds	9
   410   000161                     _motorL:
   411                           	callstack 0
   412   000161                     	ds	9
   413   00016A                     _vals:
   414                           	callstack 0
   415   00016A                     	ds	8
   416                           
   417                           	psect	bssBANK2
   418   000200                     __pbssBANK2:
   419                           	callstack 0
   420   000200                     _EUSART4TXbuf:
   421                           	callstack 0
   422   000200                     	ds	60
   423   00023C                     _Time_forward:
   424                           	callstack 0
   425   00023C                     	ds	100
   426   0002A0                     _dbuf:
   427                           	callstack 0
   428   0002A0                     	ds	80
   429                           
   430                           	psect	cstackBANK1
   431   000172                     __pcstackBANK1:
   432                           	callstack 0
   433   000172                     main@buf:
   434                           	callstack 0
   435                           
   436                           ; 100 bytes @ 0x0
   437   000172                     	ds	100
   438   0001D6                     main@consecuitive:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x64
   442   0001D6                     	ds	2
   443   0001D8                     main@colour:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x66
   447   0001D8                     	ds	2
   448   0001DA                     main@prev_colour:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x68
   452   0001DA                     	ds	2
   453                           
   454                           	psect	cstackBANK0
   455   000060                     __pcstackBANK0:
   456                           	callstack 0
   457   000060                     efgtoa@fp:
   458                           	callstack 0
   459   000060                     colour_rel@L:
   460                           	callstack 0
   461   000060                     _Colour_decider$3205:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x0
   465   000060                     	ds	2
   466   000062                     efgtoa@f:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x2
   470   000062                     	ds	2
   471   000064                     Colour_decider@Cmax_i:
   472                           	callstack 0
   473   000064                     _colour_rel$3203:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x4
   477   000064                     	ds	2
   478   000066                     efgtoa@c:
   479                           	callstack 0
   480   000066                     Colour_decider@RGB_col:
   481                           	callstack 0
   482                           
   483                           ; 12 bytes @ 0x6
   484   000066                     	ds	1
   485   000067                     ??_efgtoa:
   486                           
   487                           ; 1 bytes @ 0x7
   488   000067                     	ds	1
   489   000068                     _colour_rel$3204:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0x8
   493   000068                     	ds	1
   494   000069                     efgtoa@ne:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x9
   498   000069                     	ds	2
   499   00006B                     efgtoa@p:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xB
   503   00006B                     	ds	1
   504   00006C                     colour_rel@R:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0xC
   508   00006C                     	ds	1
   509   00006D                     efgtoa@t:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xD
   513   00006D                     	ds	2
   514   00006F                     _efgtoa$2852:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xF
   518   00006F                     	ds	1
   519   000070                     colour_rel@G:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x10
   523   000070                     	ds	1
   524   000071                     efgtoa@pp:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x11
   528   000071                     	ds	1
   529   000072                     efgtoa@mode:
   530                           	callstack 0
   531   000072                     Colour_decider@Cmax:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x12
   535   000072                     	ds	1
   536   000073                     efgtoa@nmode:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x13
   540   000073                     	ds	1
   541   000074                     efgtoa@d:
   542                           	callstack 0
   543   000074                     colour_rel@B:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x14
   547   000074                     	ds	2
   548   000076                     efgtoa@m:
   549                           	callstack 0
   550   000076                     Colour_decider@Cmin:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x16
   554   000076                     	ds	2
   555   000078                     efgtoa@e:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x18
   559   000078                     	ds	2
   560   00007A                     Colour_decider@i:
   561                           	callstack 0
   562   00007A                     efgtoa@w:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x1A
   566   00007A                     	ds	2
   567   00007C                     Colour_decider@Hue:
   568                           	callstack 0
   569   00007C                     efgtoa@ou:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x1C
   573   00007C                     	ds	4
   574   000080                     efgtoa@i:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x20
   578   000080                     	ds	2
   579   000082                     efgtoa@h:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x22
   583   000082                     	ds	4
   584   000086                     efgtoa@l:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x26
   588   000086                     	ds	4
   589   00008A                     efgtoa@sign:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x2A
   593   00008A                     	ds	1
   594   00008B                     efgtoa@n:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2B
   598   00008B                     	ds	2
   599   00008D                     efgtoa@g:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x2D
   603   00008D                     	ds	4
   604   000091                     efgtoa@u:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x31
   608   000091                     	ds	4
   609   000095                     vfpfcnvrt@fp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x35
   613   000095                     	ds	2
   614   000097                     vfpfcnvrt@fmt:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x37
   618   000097                     	ds	2
   619   000099                     vfpfcnvrt@ap:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x39
   623   000099                     	ds	2
   624   00009B                     ??_vfpfcnvrt:
   625                           
   626                           ; 1 bytes @ 0x3B
   627   00009B                     	ds	2
   628   00009D                     vfpfcnvrt@convarg:
   629                           	callstack 0
   630                           
   631                           ; 8 bytes @ 0x3D
   632   00009D                     	ds	8
   633   0000A5                     vfpfcnvrt@c:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x45
   637   0000A5                     	ds	1
   638   0000A6                     vfpfcnvrt@cp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x46
   642   0000A6                     	ds	2
   643   0000A8                     ?_vfprintf:
   644                           	callstack 0
   645   0000A8                     vfprintf@fp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x48
   649   0000A8                     	ds	2
   650   0000AA                     vfprintf@fmt:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x4A
   654   0000AA                     	ds	2
   655   0000AC                     vfprintf@ap:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4C
   659   0000AC                     	ds	2
   660   0000AE                     vfprintf@cfmt:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x4E
   664   0000AE                     	ds	2
   665   0000B0                     ?_sprintf:
   666                           	callstack 0
   667   0000B0                     sprintf@s:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x50
   671   0000B0                     	ds	2
   672   0000B2                     sprintf@fmt:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x52
   676   0000B2                     	ds	18
   677   0000C4                     sprintf@ap:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x64
   681   0000C4                     	ds	2
   682   0000C6                     sprintf@f:
   683                           	callstack 0
   684                           
   685                           ; 11 bytes @ 0x66
   686   0000C6                     	ds	11
   687   0000D1                     ??_main:
   688                           
   689                           ; 1 bytes @ 0x71
   690   0000D1                     	ds	2
   691                           
   692                           	psect	cstackCOMRAM
   693   000001                     __pcstackCOMRAM:
   694                           	callstack 0
   695   000001                     ??_I2C_2_Master_Idle:
   696   000001                     ?___fpclassifyf:
   697                           	callstack 0
   698   000001                     ?___wmul:
   699                           	callstack 0
   700   000001                     ?___fladd:
   701                           	callstack 0
   702   000001                     ?_labs:
   703                           	callstack 0
   704   000001                     ?___flneg:
   705                           	callstack 0
   706   000001                     ?___fltol:
   707                           	callstack 0
   708   000001                     ?___xxtofl:
   709                           	callstack 0
   710   000001                     ?___aodiv:
   711                           	callstack 0
   712   000001                     ?___aomod:
   713                           	callstack 0
   714   000001                     sendCharSerial4@charToSend:
   715                           	callstack 0
   716   000001                     initDCmotorsPWM@PWMperiod:
   717                           	callstack 0
   718   000001                     TurnDelay@Turn45Delay:
   719                           	callstack 0
   720   000001                     getTMR0val@moving:
   721                           	callstack 0
   722   000001                     delayed_ms@time:
   723                           	callstack 0
   724   000001                     ___wmul@multiplier:
   725                           	callstack 0
   726   000001                     memcpy@d1:
   727                           	callstack 0
   728   000001                     fputc@c:
   729                           	callstack 0
   730   000001                     strcpy@dest:
   731                           	callstack 0
   732   000001                     ___flneg@f1:
   733                           	callstack 0
   734   000001                     ___fltol@f1:
   735                           	callstack 0
   736   000001                     ___fladd@b:
   737                           	callstack 0
   738   000001                     ___xxtofl@val:
   739                           	callstack 0
   740   000001                     ___fpclassifyf@x:
   741                           	callstack 0
   742   000001                     labs@a:
   743                           	callstack 0
   744   000001                     ___aodiv@dividend:
   745                           	callstack 0
   746   000001                     ___aomod@dividend:
   747                           	callstack 0
   748                           
   749                           ; 8 bytes @ 0x0
   750   000001                     	ds	1
   751   000002                     ??_I2C_2_Master_Read:
   752   000002                     I2C_2_Master_Write@data_byte:
   753                           	callstack 0
   754   000002                     sendStringSerial4@string:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x1
   758   000002                     	ds	1
   759   000003                     ??_delayed_ms:
   760   000003                     ??_TurnDelay:
   761   000003                     color_writetoaddr@value:
   762                           	callstack 0
   763   000003                     I2C_2_Master_Read@ack:
   764                           	callstack 0
   765   000003                     ___wmul@multiplicand:
   766                           	callstack 0
   767   000003                     memcpy@s1:
   768                           	callstack 0
   769   000003                     fputc@fp:
   770                           	callstack 0
   771   000003                     strcpy@src:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x2
   775   000003                     	ds	1
   776   000004                     color_writetoaddr@address:
   777                           	callstack 0
   778   000004                     I2C_2_Master_Read@tmp:
   779                           	callstack 0
   780   000004                     delayed_ms@i:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x3
   784   000004                     	ds	1
   785   000005                     ??_fputc:
   786   000005                     ??___fpclassifyf:
   787   000005                     ??_labs:
   788   000005                     ??_color_click_init:
   789   000005                     ??___fltol:
   790   000005                     ??___xxtofl:
   791   000005                     ?_color_read_lum:
   792                           	callstack 0
   793   000005                     ?_color_read_Red:
   794                           	callstack 0
   795   000005                     ?_color_read_Green:
   796                           	callstack 0
   797   000005                     ?_color_read_Blue:
   798                           	callstack 0
   799   000005                     ___wmul@product:
   800                           	callstack 0
   801   000005                     memcpy@n:
   802                           	callstack 0
   803   000005                     strcpy@s:
   804                           	callstack 0
   805   000005                     ___fladd@a:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x4
   809   000005                     	ds	2
   810   000007                     ??_color_read_lum:
   811   000007                     ??_color_read_Red:
   812   000007                     ??_color_read_Green:
   813   000007                     ??_color_read_Blue:
   814   000007                     ?___lwdiv:
   815                           	callstack 0
   816   000007                     ___lwdiv@dividend:
   817                           	callstack 0
   818   000007                     memcpy@d:
   819                           	callstack 0
   820   000007                     strcpy@d:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x6
   824   000007                     	ds	2
   825   000009                     ??___fladd:
   826   000009                     ___fltol@sign1:
   827                           	callstack 0
   828   000009                     ___xxtofl@sign:
   829                           	callstack 0
   830   000009                     ___lwdiv@divisor:
   831                           	callstack 0
   832   000009                     ___fpclassifyf@e:
   833                           	callstack 0
   834   000009                     memcpy@s:
   835                           	callstack 0
   836   000009                     ___aodiv@divisor:
   837                           	callstack 0
   838   000009                     ___aomod@divisor:
   839                           	callstack 0
   840                           
   841                           ; 8 bytes @ 0x8
   842   000009                     	ds	1
   843   00000A                     ___fltol@exp1:
   844                           	callstack 0
   845   00000A                     ___xxtofl@exp:
   846                           	callstack 0
   847   00000A                     color_read_lum@tmp:
   848                           	callstack 0
   849   00000A                     color_read_Red@tmp:
   850                           	callstack 0
   851   00000A                     color_read_Green@tmp:
   852                           	callstack 0
   853   00000A                     color_read_Blue@tmp:
   854                           	callstack 0
   855   00000A                     fputs@s:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x9
   859   00000A                     	ds	1
   860   00000B                     memcpy@tmp:
   861                           	callstack 0
   862   00000B                     ___lwdiv@quotient:
   863                           	callstack 0
   864   00000B                     ___xxtofl@arg:
   865                           	callstack 0
   866   00000B                     ___fpclassifyf@u:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xA
   870   00000B                     	ds	1
   871   00000C                     readColours@vals:
   872                           	callstack 0
   873   00000C                     fputs@fp:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xB
   877   00000C                     	ds	1
   878   00000D                     ___lwdiv@counter:
   879                           	callstack 0
   880   00000D                     ___fladd@signs:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0xC
   884   00000D                     	ds	1
   885   00000E                     ___fladd@aexp:
   886                           	callstack 0
   887   00000E                     fputs@c:
   888                           	callstack 0
   889   00000E                     setMotorPWM@m:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0xD
   893   00000E                     	ds	1
   894   00000F                     ___fladd@bexp:
   895                           	callstack 0
   896   00000F                     fputs@i:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0xE
   900   00000F                     	ds	1
   901   000010                     ??_setMotorPWM:
   902   000010                     ___fladd@grs:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0xF
   906   000010                     	ds	1
   907   000011                     ?___flmul:
   908                           	callstack 0
   909   000011                     ___aodiv@counter:
   910                           	callstack 0
   911   000011                     ___aomod@counter:
   912                           	callstack 0
   913   000011                     pad@fp:
   914                           	callstack 0
   915   000011                     ___flmul@b:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x10
   919   000011                     	ds	1
   920   000012                     setMotorPWM@posDuty:
   921                           	callstack 0
   922   000012                     ___aodiv@sign:
   923                           	callstack 0
   924   000012                     ___aomod@sign:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x11
   928   000012                     	ds	1
   929   000013                     ?_abs:
   930                           	callstack 0
   931   000013                     setMotorPWM@negDuty:
   932                           	callstack 0
   933   000013                     pad@buf:
   934                           	callstack 0
   935   000013                     abs@a:
   936                           	callstack 0
   937   000013                     ___aodiv@quotient:
   938                           	callstack 0
   939                           
   940                           ; 8 bytes @ 0x12
   941   000013                     	ds	1
   942   000014                     stop@mL:
   943                           	callstack 0
   944   000014                     turnLeft@mL:
   945                           	callstack 0
   946   000014                     turnRight@mL:
   947                           	callstack 0
   948   000014                     fullSpeedAhead@mL:
   949                           	callstack 0
   950   000014                     timed_forward@mL:
   951                           	callstack 0
   952   000014                     fullSpeedBack@mL:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x13
   956   000014                     	ds	1
   957   000015                     ??_abs:
   958   000015                     pad@p:
   959                           	callstack 0
   960   000015                     ___flmul@a:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x14
   964   000015                     	ds	1
   965   000016                     stop@mR:
   966                           	callstack 0
   967   000016                     turnLeft@mR:
   968                           	callstack 0
   969   000016                     turnRight@mR:
   970                           	callstack 0
   971   000016                     fullSpeedAhead@mR:
   972                           	callstack 0
   973   000016                     timed_forward@mR:
   974                           	callstack 0
   975   000016                     fullSpeedBack@mR:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x15
   979   000016                     	ds	1
   980   000017                     ??_pad:
   981                           
   982                           ; 1 bytes @ 0x16
   983   000017                     	ds	1
   984   000018                     ??_fullSpeedAhead:
   985   000018                     ??_stop:
   986   000018                     ??_turnLeft:
   987   000018                     ??_turnRight:
   988   000018                     ??_fullSpeedBack:
   989   000018                     timed_forward@time:
   990                           	callstack 0
   991   000018                     pad@i:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x17
   995   000018                     	ds	1
   996   000019                     ??___flmul:
   997                           
   998                           ; 1 bytes @ 0x18
   999   000019                     	ds	1
  1000   00001A                     ??_timed_forward:
  1001   00001A                     turnRight45@mL:
  1002                           	callstack 0
  1003   00001A                     turnLeft45@mL:
  1004                           	callstack 0
  1005   00001A                     reverseDetect@mL:
  1006                           	callstack 0
  1007   00001A                     reverseOneBlock@mL:
  1008                           	callstack 0
  1009   00001A                     ForwardOneBlock@mL:
  1010                           	callstack 0
  1011   00001A                     Forwardhalfblock@mL:
  1012                           	callstack 0
  1013   00001A                     pad@w:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x19
  1017   00001A                     	ds	2
  1018   00001C                     turnRight45@mR:
  1019                           	callstack 0
  1020   00001C                     turnLeft45@mR:
  1021                           	callstack 0
  1022   00001C                     reverseDetect@mR:
  1023                           	callstack 0
  1024   00001C                     reverseOneBlock@mR:
  1025                           	callstack 0
  1026   00001C                     ForwardOneBlock@mR:
  1027                           	callstack 0
  1028   00001C                     Forwardhalfblock@mR:
  1029                           	callstack 0
  1030   00001C                     dtoa@fp:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x1B
  1034   00001C                     	ds	1
  1035   00001D                     ___flmul@sign:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x1C
  1039   00001D                     	ds	1
  1040   00001E                     ??_Forwardhalfblock:
  1041   00001E                     ??_turnRight45:
  1042   00001E                     ??_turnLeft45:
  1043   00001E                     ??_reverseDetect:
  1044   00001E                     ??_reverseOneBlock:
  1045   00001E                     ??_ForwardOneBlock:
  1046   00001E                     ___flmul@grs:
  1047                           	callstack 0
  1048   00001E                     dtoa@d:
  1049                           	callstack 0
  1050                           
  1051                           ; 8 bytes @ 0x1D
  1052   00001E                     	ds	2
  1053   000020                     RedMove@mL:
  1054                           	callstack 0
  1055   000020                     GreenMove@mL:
  1056                           	callstack 0
  1057   000020                     BlueMove@mL:
  1058                           	callstack 0
  1059   000020                     YellowMove@mL:
  1060                           	callstack 0
  1061   000020                     PinkMove@mL:
  1062                           	callstack 0
  1063   000020                     OrangeMove@mL:
  1064                           	callstack 0
  1065   000020                     LightBlueMove@mL:
  1066                           	callstack 0
  1067   000020                     RetryMove@mL:
  1068                           	callstack 0
  1069   000020                     ReverseYellow@mL:
  1070                           	callstack 0
  1071   000020                     ReversePink@mL:
  1072                           	callstack 0
  1073   000020                     turnCalibration@mL:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x1F
  1077   000020                     	ds	2
  1078   000022                     ___flmul@aexp:
  1079                           	callstack 0
  1080   000022                     RedMove@mR:
  1081                           	callstack 0
  1082   000022                     GreenMove@mR:
  1083                           	callstack 0
  1084   000022                     BlueMove@mR:
  1085                           	callstack 0
  1086   000022                     YellowMove@mR:
  1087                           	callstack 0
  1088   000022                     PinkMove@mR:
  1089                           	callstack 0
  1090   000022                     OrangeMove@mR:
  1091                           	callstack 0
  1092   000022                     LightBlueMove@mR:
  1093                           	callstack 0
  1094   000022                     RetryMove@mR:
  1095                           	callstack 0
  1096   000022                     ReverseYellow@mR:
  1097                           	callstack 0
  1098   000022                     ReversePink@mR:
  1099                           	callstack 0
  1100   000022                     turnCalibration@mR:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x21
  1104   000022                     	ds	1
  1105   000023                     ___flmul@bexp:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x22
  1109   000023                     	ds	1
  1110   000024                     ??_turnCalibration:
  1111   000024                     ??_RetryMove:
  1112   000024                     go_Home@WayBack:
  1113                           	callstack 0
  1114   000024                     ___flmul@prod:
  1115                           	callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x23
  1118   000024                     	ds	2
  1119   000026                     ??_dtoa:
  1120   000026                     go_Home@Time_forward:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x25
  1124   000026                     	ds	2
  1125   000028                     ??_go_Home:
  1126   000028                     ___flmul@temp:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x27
  1130   000028                     	ds	2
  1131   00002A                     ?___flsub:
  1132                           	callstack 0
  1133   00002A                     ___flge@ff1:
  1134                           	callstack 0
  1135   00002A                     ___flsub@b:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x29
  1139   00002A                     	ds	1
  1140   00002B                     go_Home@i:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x2A
  1144   00002B                     	ds	3
  1145   00002E                     _dtoa$2821:
  1146                           	callstack 0
  1147   00002E                     ___flge@ff2:
  1148                           	callstack 0
  1149   00002E                     ___flsub@a:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x2D
  1153   00002E                     	ds	2
  1154   000030                     dtoa@p:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x2F
  1158   000030                     	ds	2
  1159   000032                     ??___flge:
  1160   000032                     ?___fldiv:
  1161                           	callstack 0
  1162   000032                     dtoa@w:
  1163                           	callstack 0
  1164   000032                     ___fleq@ff1:
  1165                           	callstack 0
  1166   000032                     ___fldiv@b:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x31
  1170   000032                     	ds	2
  1171   000034                     dtoa@n:
  1172                           	callstack 0
  1173                           
  1174                           ; 8 bytes @ 0x33
  1175   000034                     	ds	2
  1176   000036                     ___fleq@ff2:
  1177                           	callstack 0
  1178   000036                     ___fldiv@a:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x35
  1182   000036                     	ds	4
  1183   00003A                     ??___fldiv:
  1184   00003A                     ??___fleq:
  1185                           
  1186                           ; 1 bytes @ 0x39
  1187   00003A                     	ds	2
  1188   00003C                     dtoa@i:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x3B
  1192   00003C                     	ds	2
  1193   00003E                     dtoa@s:
  1194                           	callstack 0
  1195   00003E                     ___fldiv@rem:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x3D
  1199   00003E                     	ds	4
  1200   000042                     ___fldiv@sign:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x41
  1204   000042                     	ds	1
  1205   000043                     ___fldiv@new_exp:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x42
  1209   000043                     	ds	2
  1210   000045                     ___fldiv@grs:
  1211                           	callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x44
  1214   000045                     	ds	4
  1215   000049                     ___fldiv@bexp:
  1216                           	callstack 0
  1217                           
  1218                           ; 1 bytes @ 0x48
  1219   000049                     	ds	1
  1220   00004A                     ___fldiv@aexp:
  1221                           	callstack 0
  1222                           
  1223                           ; 1 bytes @ 0x49
  1224   00004A                     	ds	1
  1225   00004B                     ?_Colour_decider:
  1226                           	callstack 0
  1227   00004B                     ?_floorf:
  1228                           	callstack 0
  1229   00004B                     colour_rel@vals:
  1230                           	callstack 0
  1231   00004B                     Colour_decider@vals:
  1232                           	callstack 0
  1233   00004B                     floorf@x:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x4A
  1237   00004B                     	ds	2
  1238   00004D                     colour_rel@rel:
  1239                           	callstack 0
  1240   00004D                     Colour_decider@rel:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x4C
  1244   00004D                     	ds	2
  1245   00004F                     ??_floorf:
  1246   00004F                     ??_Colour_decider:
  1247                           
  1248                           ; 1 bytes @ 0x4E
  1249   00004F                     	ds	6
  1250   000055                     floorf@m:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x54
  1254   000055                     	ds	4
  1255   000059                     floorf@e:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x58
  1259   000059                     	ds	2
  1260   00005B                     floorf@u:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x5A
  1264   00005B                     	ds	4
  1265   00005F                     
  1266                           ; 1 bytes @ 0x5E
  1267 ;;
  1268 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1269 ;;
  1270 ;; *************** function _main *****************
  1271 ;; Defined at:
  1272 ;;		line 30 in file "main.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  colour          2  102[BANK1 ] int 
  1277 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1278 ;;  prev_colour     2  104[BANK1 ] int 
  1279 ;;  consecuitive    2  100[BANK1 ] int 
  1280 ;;  lost_count      2    0        int 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Locals:         0       0     106       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Totals:         0       2     106       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;Total ram usage:      108 bytes
  1295 ;; Hardware stack levels required when called: 9
  1296 ;; This function calls:
  1297 ;;		_BlueMove
  1298 ;;		_Colour_decider
  1299 ;;		_Forwardhalfblock
  1300 ;;		_GreenMove
  1301 ;;		_I2C_2_Master_Init
  1302 ;;		_Interrupts_init
  1303 ;;		_LightBlueMove
  1304 ;;		_OrangeMove
  1305 ;;		_PinkMove
  1306 ;;		_RedMove
  1307 ;;		_RetryMove
  1308 ;;		_Timer0_init
  1309 ;;		_YellowMove
  1310 ;;		_color_click_init
  1311 ;;		_colour_rel
  1312 ;;		_fullSpeedAhead
  1313 ;;		_getTMR0val
  1314 ;;		_go_Home
  1315 ;;		_initDCmotorsPWM
  1316 ;;		_initUSART4
  1317 ;;		_readColours
  1318 ;;		_sendStringSerial4
  1319 ;;		_sprintf
  1320 ;;		_stop
  1321 ;;		_turnCalibration
  1322 ;; This function is called by:
  1323 ;;		Startup code after reset
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text0
  1328   00226E                     __ptext0:
  1329                           	callstack 0
  1330   00226E                     _main:
  1331                           	callstack 22
  1332   00226E                     
  1333                           ;main.c: 31:     initUSART4();
  1334   00226E  ECF4  F02F         	call	_initUSART4	;wreg free
  1335   002272                     
  1336                           ;main.c: 32:     Interrupts_init();
  1337   002272  EC15  F030         	call	_Interrupts_init	;wreg free
  1338   002276                     
  1339                           ;main.c: 33:     color_click_init();
  1340   002276  EC7C  F02C         	call	_color_click_init	;wreg free
  1341   00227A                     
  1342                           ;main.c: 34:     I2C_2_Master_Init();
  1343   00227A  EC85  F02F         	call	_I2C_2_Master_Init	;wreg free
  1344   00227E                     
  1345                           ;main.c: 35:     initDCmotorsPWM(200);
  1346   00227E  0E00               	movlw	0
  1347   002280  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1348   002282  0EC8               	movlw	200
  1349   002284  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1350   002286  EC5E  F029         	call	_initDCmotorsPWM	;wreg free
  1351   00228A                     
  1352                           ;main.c: 36:     Timer0_init();
  1353   00228A  ECE4  F02F         	call	_Timer0_init	;wreg free
  1354   00228E                     
  1355                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1356   00228E  9287               	bcf	135,1,c	;volatile
  1357   002290                     
  1358                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1359   002290  9881               	bcf	129,4,c	;volatile
  1360   002292                     
  1361                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1362   002292  9E86               	bcf	134,7,c	;volatile
  1363   002294                     
  1364                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1365   002294  8486               	bsf	134,2,c	;volatile
  1366   002296                     
  1367                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1368   002296  010E               	movlb	14	; () banked
  1369   002298  95B4               	bcf	180,2,b	;volatile
  1370   00229A                     
  1371                           ; BSR set to: 14
  1372                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1373   00229A  8686               	bsf	134,3,c	;volatile
  1374   00229C                     
  1375                           ; BSR set to: 14
  1376                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1377   00229C  97B4               	bcf	180,3,b	;volatile
  1378   00229E                     
  1379                           ; BSR set to: 14
  1380                           ;main.c: 46:     LATGbits.LATG1=1;
  1381   00229E  827F               	bsf	127,1,c	;volatile
  1382   0022A0                     
  1383                           ; BSR set to: 14
  1384                           ;main.c: 47:     LATAbits.LATA4=1;
  1385   0022A0  8879               	bsf	121,4,c	;volatile
  1386   0022A2                     
  1387                           ; BSR set to: 14
  1388                           ;main.c: 48:     LATFbits.LATF7=1;
  1389   0022A2  8E7E               	bsf	126,7,c	;volatile
  1390   0022A4                     
  1391                           ; BSR set to: 14
  1392                           ;main.c: 51:     LATDbits.LATD7=0;
  1393   0022A4  9E7C               	bcf	124,7,c	;volatile
  1394   0022A6                     
  1395                           ; BSR set to: 14
  1396                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1397   0022A6  9E84               	bcf	132,7,c	;volatile
  1398   0022A8                     
  1399                           ; BSR set to: 14
  1400                           ;main.c: 53:     LATHbits.LATH3=0;
  1401   0022A8  9680               	bcf	128,3,c	;volatile
  1402   0022AA                     
  1403                           ; BSR set to: 14
  1404                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1405   0022AA  9688               	bcf	136,3,c	;volatile
  1406   0022AC                     
  1407                           ; BSR set to: 14
  1408                           ;main.c: 57:     LATHbits.LATH0=0;
  1409   0022AC  9080               	bcf	128,0,c	;volatile
  1410   0022AE                     
  1411                           ; BSR set to: 14
  1412                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1413   0022AE  9088               	bcf	136,0,c	;volatile
  1414   0022B0                     
  1415                           ; BSR set to: 14
  1416                           ;main.c: 61:     LATFbits.LATF0=0;
  1417   0022B0  907E               	bcf	126,0,c	;volatile
  1418   0022B2                     
  1419                           ; BSR set to: 14
  1420                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1421   0022B2  9086               	bcf	134,0,c	;volatile
  1422   0022B4                     
  1423                           ; BSR set to: 14
  1424                           ;main.c: 65:     LATDbits.LATD4=0;
  1425   0022B4  987C               	bcf	124,4,c	;volatile
  1426   0022B6                     
  1427                           ; BSR set to: 14
  1428                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1429   0022B6  9884               	bcf	132,4,c	;volatile
  1430   0022B8                     
  1431                           ; BSR set to: 14
  1432                           ;main.c: 69:     LATDbits.LATD3=0;
  1433   0022B8  967C               	bcf	124,3,c	;volatile
  1434   0022BA                     
  1435                           ; BSR set to: 14
  1436                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1437   0022BA  9684               	bcf	132,3,c	;volatile
  1438   0022BC                     
  1439                           ; BSR set to: 14
  1440                           ;main.c: 74:     motorL.power=0;
  1441   0022BC  0E00               	movlw	0
  1442   0022BE  0101               	movlb	1	; () banked
  1443   0022C0  6F61               	movwf	_motorL& (0+255),b
  1444   0022C2                     
  1445                           ; BSR set to: 1
  1446                           ;main.c: 75:     motorL.direction=1;
  1447   0022C2  0E01               	movlw	1
  1448   0022C4  6F62               	movwf	(_motorL+1)& (0+255),b
  1449   0022C6                     
  1450                           ; BSR set to: 1
  1451                           ;main.c: 76:     motorL.brakemode=1;
  1452   0022C6  0E01               	movlw	1
  1453   0022C8  6F63               	movwf	(_motorL+2)& (0+255),b
  1454   0022CA                     
  1455                           ; BSR set to: 1
  1456                           ;main.c: 77:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1457   0022CA  0EAA               	movlw	170
  1458   0022CC  6F66               	movwf	(_motorL+5)& (0+255),b
  1459   0022CE  0E0F               	movlw	15
  1460   0022D0  6F67               	movwf	(_motorL+6)& (0+255),b
  1461   0022D2                     
  1462                           ; BSR set to: 1
  1463                           ;main.c: 78:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1464   0022D2  0EA6               	movlw	166
  1465   0022D4  6F68               	movwf	(_motorL+7)& (0+255),b
  1466   0022D6  0E0F               	movlw	15
  1467   0022D8  6F69               	movwf	(_motorL+8)& (0+255),b
  1468   0022DA                     
  1469                           ; BSR set to: 1
  1470                           ;main.c: 79:     motorL.PWMperiod=200;
  1471   0022DA  0E00               	movlw	0
  1472   0022DC  6F65               	movwf	(_motorL+4)& (0+255),b
  1473   0022DE  0EC8               	movlw	200
  1474   0022E0  6F64               	movwf	(_motorL+3)& (0+255),b
  1475   0022E2                     
  1476                           ; BSR set to: 1
  1477                           ;main.c: 80:     motorR.power=0;
  1478   0022E2  0E00               	movlw	0
  1479   0022E4  6F58               	movwf	_motorR& (0+255),b
  1480   0022E6                     
  1481                           ; BSR set to: 1
  1482                           ;main.c: 81:     motorR.direction=1;
  1483   0022E6  0E01               	movlw	1
  1484   0022E8  6F59               	movwf	(_motorR+1)& (0+255),b
  1485   0022EA                     
  1486                           ; BSR set to: 1
  1487                           ;main.c: 82:     motorR.brakemode=1;
  1488   0022EA  0E01               	movlw	1
  1489   0022EC  6F5A               	movwf	(_motorR+2)& (0+255),b
  1490   0022EE                     
  1491                           ; BSR set to: 1
  1492                           ;main.c: 83:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1493   0022EE  0E25               	movlw	37
  1494   0022F0  6F5D               	movwf	(_motorR+5)& (0+255),b
  1495   0022F2  0E0F               	movlw	15
  1496   0022F4  6F5E               	movwf	(_motorR+6)& (0+255),b
  1497   0022F6                     
  1498                           ; BSR set to: 1
  1499                           ;main.c: 84:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1500   0022F6  0E21               	movlw	33
  1501   0022F8  6F5F               	movwf	(_motorR+7)& (0+255),b
  1502   0022FA  0E0F               	movlw	15
  1503   0022FC  6F60               	movwf	(_motorR+8)& (0+255),b
  1504   0022FE                     
  1505                           ; BSR set to: 1
  1506                           ;main.c: 85:     motorR.PWMperiod=200;
  1507   0022FE  0E00               	movlw	0
  1508   002300  6F5C               	movwf	(_motorR+4)& (0+255),b
  1509   002302  0EC8               	movlw	200
  1510   002304  6F5B               	movwf	(_motorR+3)& (0+255),b
  1511   002306                     
  1512                           ; BSR set to: 1
  1513                           ;main.c: 88:     int prev_colour =0;
  1514   002306  0E00               	movlw	0
  1515   002308  6FDB               	movwf	(main@prev_colour+1)& (0+255),b
  1516   00230A  0E00               	movlw	0
  1517   00230C  6FDA               	movwf	main@prev_colour& (0+255),b
  1518   00230E                     
  1519                           ; BSR set to: 1
  1520                           ;main.c: 89:     run_flag=1;
  1521   00230E  0E00               	movlw	0
  1522   002310  6F17               	movwf	(_run_flag+1)& (0+255),b
  1523   002312  0E01               	movlw	1
  1524   002314  6F16               	movwf	_run_flag& (0+255),b
  1525   002316                     
  1526                           ; BSR set to: 1
  1527                           ;main.c: 90:     move_count=-1;
  1528   002316  6914               	setf	_move_count& (0+255),b	;volatile
  1529   002318  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1530   00231A                     
  1531                           ; BSR set to: 1
  1532                           ;main.c: 92:     turnCalibration(&motorL,&motorR);
  1533   00231A  0E61               	movlw	low _motorL
  1534   00231C  6E20               	movwf	turnCalibration@mL^0,c
  1535   00231E  0E01               	movlw	high _motorL
  1536   002320  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1537   002322  0E58               	movlw	low _motorR
  1538   002324  6E22               	movwf	turnCalibration@mR^0,c
  1539   002326  0E01               	movlw	high _motorR
  1540   002328  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1541   00232A  ECE3  F020         	call	_turnCalibration	;wreg free
  1542   00232E                     
  1543                           ;main.c: 94:     LATFbits.LATF0=0;
  1544   00232E  907E               	bcf	126,0,c	;volatile
  1545   002330                     
  1546                           ;main.c: 95:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1547   002330  0E52               	movlw	82
  1548   002332  0100               	movlb	0	; () banked
  1549   002334  6FD2               	movwf	(??_main+1)& (0+255),b
  1550   002336  0E2B               	movlw	43
  1551   002338  6FD1               	movwf	??_main& (0+255),b
  1552   00233A  0E00               	movlw	0
  1553   00233C                     u5827:
  1554   00233C  2EE8               	decfsz	wreg,f,c
  1555   00233E  D7FE               	bra	u5827
  1556   002340  2FD1               	decfsz	??_main& (0+255),f,b
  1557   002342  D7FC               	bra	u5827
  1558   002344  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1559   002346  D7FA               	bra	u5827
  1560   002348  F000               	nop	
  1561   00234A                     l356:
  1562   00234A  B48E               	btfsc	142,2,c	;volatile
  1563   00234C  EFAA  F011         	goto	u5611
  1564   002350  EFAC  F011         	goto	u5610
  1565   002354                     u5611:
  1566   002354  EFA5  F011         	goto	l356
  1567   002358                     u5610:
  1568   002358                     
  1569                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1570   002358  0E52               	movlw	82
  1571   00235A  0100               	movlb	0	; () banked
  1572   00235C  6FD2               	movwf	(??_main+1)& (0+255),b
  1573   00235E  0E2B               	movlw	43
  1574   002360  6FD1               	movwf	??_main& (0+255),b
  1575   002362  0E00               	movlw	0
  1576   002364                     u5837:
  1577   002364  2EE8               	decfsz	wreg,f,c
  1578   002366  D7FE               	bra	u5837
  1579   002368  2FD1               	decfsz	??_main& (0+255),f,b
  1580   00236A  D7FC               	bra	u5837
  1581   00236C  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1582   00236E  D7FA               	bra	u5837
  1583   002370  F000               	nop	
  1584   002372                     
  1585                           ;main.c: 99:     T0CON0bits.T0EN=1;
  1586   002372  8ED5               	bsf	213,7,c	;volatile
  1587                           
  1588                           ;main.c: 100:     while (run_flag)
  1589   002374  EFC3  F013         	goto	l5824
  1590   002378                     l5698:
  1591                           
  1592                           ; BSR set to: 1
  1593                           ;main.c: 101:     {;main.c: 102:         consecuitive=0;
  1594   002378  0E00               	movlw	0
  1595   00237A  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1596   00237C  0E00               	movlw	0
  1597   00237E  6FD6               	movwf	main@consecuitive& (0+255),b
  1598   002380                     
  1599                           ; BSR set to: 1
  1600                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1601   002380  0E61               	movlw	low _motorL
  1602   002382  6E14               	movwf	fullSpeedAhead@mL^0,c
  1603   002384  0E01               	movlw	high _motorL
  1604   002386  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1605   002388  0E58               	movlw	low _motorR
  1606   00238A  6E16               	movwf	fullSpeedAhead@mR^0,c
  1607   00238C  0E01               	movlw	high _motorR
  1608   00238E  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1609   002390  EC0F  F029         	call	_fullSpeedAhead	;wreg free
  1610   002394                     
  1611                           ;main.c: 106:         readColours(&vals);
  1612   002394  0E6A               	movlw	low _vals
  1613   002396  6E0C               	movwf	readColours@vals^0,c
  1614   002398  0E01               	movlw	high _vals
  1615   00239A  6E0D               	movwf	(readColours@vals+1)^0,c
  1616   00239C  ECF3  F02A         	call	_readColours	;wreg free
  1617   0023A0                     
  1618                           ;main.c: 109:         colour_rel(&vals, &rel);
  1619   0023A0  0E6A               	movlw	low _vals
  1620   0023A2  6E4B               	movwf	colour_rel@vals^0,c
  1621   0023A4  0E01               	movlw	high _vals
  1622   0023A6  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1623   0023A8  0E4C               	movlw	low _rel
  1624   0023AA  6E4D               	movwf	colour_rel@rel^0,c
  1625   0023AC  0E01               	movlw	high _rel
  1626   0023AE  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1627   0023B0  EC11  F01A         	call	_colour_rel	;wreg free
  1628   0023B4                     
  1629                           ;main.c: 112:         if (vals.L>=500){
  1630   0023B4  0101               	movlb	1	; () banked
  1631   0023B6  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1632   0023B8  EFE7  F011         	goto	u5621
  1633   0023BC  0EF4               	movlw	244
  1634   0023BE  5D70               	subwf	(_vals+6)& (0+255),w,b
  1635   0023C0  0E01               	movlw	1
  1636   0023C2  5971               	subwfb	(_vals+7)& (0+255),w,b
  1637   0023C4  A0D8               	btfss	status,0,c
  1638   0023C6  EFE7  F011         	goto	u5621
  1639   0023CA  EFE9  F011         	goto	u5620
  1640   0023CE                     u5621:
  1641   0023CE  EFA9  F013         	goto	l5816
  1642   0023D2                     u5620:
  1643   0023D2                     
  1644                           ; BSR set to: 1
  1645                           ;main.c: 113:             move_count++;
  1646   0023D2  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1647   0023D4  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1648   0023D6                     
  1649                           ; BSR set to: 1
  1650                           ;main.c: 114:             getTMR0val();
  1651   0023D6  ECAE  F02F         	call	_getTMR0val	;wreg free
  1652   0023DA                     
  1653                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1654   0023DA  0E61               	movlw	low _motorL
  1655   0023DC  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1656   0023DE  0E01               	movlw	high _motorL
  1657   0023E0  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1658   0023E2  0E58               	movlw	low _motorR
  1659   0023E4  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1660   0023E6  0E01               	movlw	high _motorR
  1661   0023E8  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1662   0023EA  ECA9  F02B         	call	_Forwardhalfblock	;wreg free
  1663   0023EE                     
  1664                           ;main.c: 118:             stop(&motorL, &motorR);
  1665   0023EE  0E61               	movlw	low _motorL
  1666   0023F0  6E14               	movwf	stop@mL^0,c
  1667   0023F2  0E01               	movlw	high _motorL
  1668   0023F4  6E15               	movwf	(stop@mL+1)^0,c
  1669   0023F6  0E58               	movlw	low _motorR
  1670   0023F8  6E16               	movwf	stop@mR^0,c
  1671   0023FA  0E01               	movlw	high _motorR
  1672   0023FC  6E17               	movwf	(stop@mR+1)^0,c
  1673   0023FE  ECA2  F029         	call	_stop	;wreg free
  1674                           
  1675                           ;main.c: 124:             while (consecuitive<20){
  1676   002402  EF47  F012         	goto	l5732
  1677   002406                     l5716:
  1678                           
  1679                           ; BSR set to: 1
  1680                           ;main.c: 125:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1681   002406  0E09               	movlw	9
  1682   002408  0100               	movlb	0	; () banked
  1683   00240A  6FD2               	movwf	(??_main+1)& (0+255),b
  1684   00240C  0E1E               	movlw	30
  1685   00240E  6FD1               	movwf	??_main& (0+255),b
  1686   002410  0EE4               	movlw	228
  1687   002412                     u5847:
  1688   002412  2EE8               	decfsz	wreg,f,c
  1689   002414  D7FE               	bra	u5847
  1690   002416  2FD1               	decfsz	??_main& (0+255),f,b
  1691   002418  D7FC               	bra	u5847
  1692   00241A  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1693   00241C  D7FA               	bra	u5847
  1694   00241E  F000               	nop	
  1695   002420                     
  1696                           ;main.c: 126:                 readColours(&vals);
  1697   002420  0E6A               	movlw	low _vals
  1698   002422  6E0C               	movwf	readColours@vals^0,c
  1699   002424  0E01               	movlw	high _vals
  1700   002426  6E0D               	movwf	(readColours@vals+1)^0,c
  1701   002428  ECF3  F02A         	call	_readColours	;wreg free
  1702   00242C                     
  1703                           ;main.c: 127:                 colour_rel(&vals, &rel);
  1704   00242C  0E6A               	movlw	low _vals
  1705   00242E  6E4B               	movwf	colour_rel@vals^0,c
  1706   002430  0E01               	movlw	high _vals
  1707   002432  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1708   002434  0E4C               	movlw	low _rel
  1709   002436  6E4D               	movwf	colour_rel@rel^0,c
  1710   002438  0E01               	movlw	high _rel
  1711   00243A  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1712   00243C  EC11  F01A         	call	_colour_rel	;wreg free
  1713   002440                     
  1714                           ;main.c: 128:                 int colour = Colour_decider(&vals, &rel);
  1715   002440  0E6A               	movlw	low _vals
  1716   002442  6E4B               	movwf	Colour_decider@vals^0,c
  1717   002444  0E01               	movlw	high _vals
  1718   002446  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1719   002448  0E4C               	movlw	low _rel
  1720   00244A  6E4D               	movwf	Colour_decider@rel^0,c
  1721   00244C  0E01               	movlw	high _rel
  1722   00244E  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1723   002450  EC1F  F007         	call	_Colour_decider	;wreg free
  1724   002454  C04B  F1D8         	movff	?_Colour_decider,main@colour
  1725   002458  C04C  F1D9         	movff	?_Colour_decider+1,main@colour+1
  1726   00245C                     
  1727                           ;main.c: 129:                 if (colour==prev_colour){
  1728   00245C  0101               	movlb	1	; () banked
  1729   00245E  51DA               	movf	main@prev_colour& (0+255),w,b
  1730   002460  19D8               	xorwf	main@colour& (0+255),w,b
  1731   002462  E107               	bnz	u5631
  1732   002464  51DB               	movf	(main@prev_colour+1)& (0+255),w,b
  1733   002466  19D9               	xorwf	(main@colour+1)& (0+255),w,b
  1734   002468  A4D8               	btfss	status,2,c
  1735   00246A  EF39  F012         	goto	u5631
  1736   00246E  EF3B  F012         	goto	u5630
  1737   002472                     u5631:
  1738   002472  EF3F  F012         	goto	l5728
  1739   002476                     u5630:
  1740   002476                     
  1741                           ; BSR set to: 1
  1742                           ;main.c: 130:                     consecuitive++;
  1743   002476  4BD6               	infsnz	main@consecuitive& (0+255),f,b
  1744   002478  2BD7               	incf	(main@consecuitive+1)& (0+255),f,b
  1745                           
  1746                           ;main.c: 131:                 }
  1747   00247A  EF43  F012         	goto	l5730
  1748   00247E                     l5728:
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;main.c: 133:                     consecuitive=0;
  1752   00247E  0E00               	movlw	0
  1753   002480  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1754   002482  0E00               	movlw	0
  1755   002484  6FD6               	movwf	main@consecuitive& (0+255),b
  1756   002486                     l5730:
  1757                           
  1758                           ; BSR set to: 1
  1759                           ;main.c: 135:                 prev_colour=colour;
  1760   002486  C1D8  F1DA         	movff	main@colour,main@prev_colour
  1761   00248A  C1D9  F1DB         	movff	main@colour+1,main@prev_colour+1
  1762   00248E                     l5732:
  1763                           
  1764                           ;main.c: 124:             while (consecuitive<20){
  1765   00248E  0101               	movlb	1	; () banked
  1766   002490  BFD7               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1767   002492  EF54  F012         	goto	u5641
  1768   002496  51D7               	movf	(main@consecuitive+1)& (0+255),w,b
  1769   002498  E109               	bnz	u5640
  1770   00249A  0E14               	movlw	20
  1771   00249C  5DD6               	subwf	main@consecuitive& (0+255),w,b
  1772   00249E  A0D8               	btfss	status,0,c
  1773   0024A0  EF54  F012         	goto	u5641
  1774   0024A4  EF56  F012         	goto	u5640
  1775   0024A8                     u5641:
  1776   0024A8  EF03  F012         	goto	l5716
  1777   0024AC                     u5640:
  1778   0024AC                     
  1779                           ; BSR set to: 1
  1780                           ;main.c: 142:             sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=%d \
      +                          r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1781   0024AC  0E72               	movlw	low main@buf
  1782   0024AE  0100               	movlb	0	; () banked
  1783   0024B0  6FB0               	movwf	sprintf@s& (0+255),b
  1784   0024B2  0E01               	movlw	high main@buf
  1785   0024B4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1786   0024B6  0E01               	movlw	low STR_1
  1787   0024B8  6FB2               	movwf	sprintf@fmt& (0+255),b
  1788   0024BA  0E0E               	movlw	high STR_1
  1789   0024BC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1790   0024BE  C14C  F0B4         	movff	_rel,?_sprintf+4
  1791   0024C2  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1792   0024C6  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1793   0024CA  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1794   0024CE  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1795   0024D2  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1796   0024D6  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1797   0024DA  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1798   0024DE  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1799   0024E2  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1800   0024E6  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1801   0024EA  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1802   0024EE  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1803   0024F2  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1804   0024F6  C1DA  F0C2         	movff	main@prev_colour,?_sprintf+18
  1805   0024FA  C1DB  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1806   0024FE  EC01  F02C         	call	_sprintf	;wreg free
  1807   002502                     
  1808                           ;main.c: 143:             sendStringSerial4(buf);
  1809   002502  0E72               	movlw	low main@buf
  1810   002504  6E02               	movwf	sendStringSerial4@string^0,c
  1811   002506  0E01               	movlw	high main@buf
  1812   002508  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1813   00250A  EC6D  F02F         	call	_sendStringSerial4	;wreg free
  1814   00250E                     
  1815                           ;main.c: 145:             if (prev_colour==1){
  1816   00250E  0101               	movlb	1	; () banked
  1817   002510  05DA               	decf	main@prev_colour& (0+255),w,b
  1818   002512  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1819   002514  A4D8               	btfss	status,2,c
  1820   002516  EF8F  F012         	goto	u5651
  1821   00251A  EF91  F012         	goto	u5650
  1822   00251E                     u5651:
  1823   00251E  EFAA  F012         	goto	l5748
  1824   002522                     u5650:
  1825   002522                     
  1826                           ; BSR set to: 1
  1827                           ;main.c: 146:                 RedMove(&motorL, &motorR);
  1828   002522  0E61               	movlw	low _motorL
  1829   002524  6E20               	movwf	RedMove@mL^0,c
  1830   002526  0E01               	movlw	high _motorL
  1831   002528  6E21               	movwf	(RedMove@mL+1)^0,c
  1832   00252A  0E58               	movlw	low _motorR
  1833   00252C  6E22               	movwf	RedMove@mR^0,c
  1834   00252E  0E01               	movlw	high _motorR
  1835   002530  6E23               	movwf	(RedMove@mR+1)^0,c
  1836   002532  ECDC  F02E         	call	_RedMove	;wreg free
  1837   002536                     
  1838                           ;main.c: 147:                 TMR0H=0;
  1839   002536  0E00               	movlw	0
  1840   002538  6ED4               	movwf	212,c	;volatile
  1841   00253A                     
  1842                           ;main.c: 148:                 TMR0L=0;
  1843   00253A  0E00               	movlw	0
  1844   00253C  6ED3               	movwf	211,c	;volatile
  1845   00253E                     
  1846                           ;main.c: 149:                 WayBack[move_count]=1;
  1847   00253E  0E1A               	movlw	low _WayBack
  1848   002540  0101               	movlb	1	; () banked
  1849   002542  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1850   002544  6ED9               	movwf	fsr2l,c
  1851   002546  0E01               	movlw	high _WayBack
  1852   002548  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1853   00254A  6EDA               	movwf	fsr2h,c
  1854   00254C  0E01               	movlw	1
  1855   00254E  6EDF               	movwf	indf2,c
  1856                           
  1857                           ;main.c: 150:             }
  1858   002550  EFC3  F013         	goto	l5824
  1859   002554                     l5748:
  1860                           
  1861                           ; BSR set to: 1
  1862   002554  0E02               	movlw	2
  1863   002556  19DA               	xorwf	main@prev_colour& (0+255),w,b
  1864   002558  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1865   00255A  A4D8               	btfss	status,2,c
  1866   00255C  EFB2  F012         	goto	u5661
  1867   002560  EFB4  F012         	goto	u5660
  1868   002564                     u5661:
  1869   002564  EFCD  F012         	goto	l5758
  1870   002568                     u5660:
  1871   002568                     
  1872                           ; BSR set to: 1
  1873                           ;main.c: 152:                 OrangeMove(&motorL, &motorR);
  1874   002568  0E61               	movlw	low _motorL
  1875   00256A  6E20               	movwf	OrangeMove@mL^0,c
  1876   00256C  0E01               	movlw	high _motorL
  1877   00256E  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1878   002570  0E58               	movlw	low _motorR
  1879   002572  6E22               	movwf	OrangeMove@mR^0,c
  1880   002574  0E01               	movlw	high _motorR
  1881   002576  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1882   002578  EC2A  F02C         	call	_OrangeMove	;wreg free
  1883   00257C                     
  1884                           ;main.c: 153:                 TMR0H=0;
  1885   00257C  0E00               	movlw	0
  1886   00257E  6ED4               	movwf	212,c	;volatile
  1887   002580                     
  1888                           ;main.c: 154:                 TMR0L=0;
  1889   002580  0E00               	movlw	0
  1890   002582  6ED3               	movwf	211,c	;volatile
  1891   002584                     
  1892                           ;main.c: 155:                 WayBack[move_count]=2;
  1893   002584  0E1A               	movlw	low _WayBack
  1894   002586  0101               	movlb	1	; () banked
  1895   002588  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1896   00258A  6ED9               	movwf	fsr2l,c
  1897   00258C  0E01               	movlw	high _WayBack
  1898   00258E  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1899   002590  6EDA               	movwf	fsr2h,c
  1900   002592  0E02               	movlw	2
  1901   002594  6EDF               	movwf	indf2,c
  1902                           
  1903                           ;main.c: 156:             }
  1904   002596  EFC3  F013         	goto	l5824
  1905   00259A                     l5758:
  1906                           
  1907                           ; BSR set to: 1
  1908   00259A  0E03               	movlw	3
  1909   00259C  19DA               	xorwf	main@prev_colour& (0+255),w,b
  1910   00259E  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1911   0025A0  A4D8               	btfss	status,2,c
  1912   0025A2  EFD5  F012         	goto	u5671
  1913   0025A6  EFD7  F012         	goto	u5670
  1914   0025AA                     u5671:
  1915   0025AA  EFF0  F012         	goto	l5768
  1916   0025AE                     u5670:
  1917   0025AE                     
  1918                           ; BSR set to: 1
  1919                           ;main.c: 158:                 YellowMove(&motorL, &motorR);
  1920   0025AE  0E61               	movlw	low _motorL
  1921   0025B0  6E20               	movwf	YellowMove@mL^0,c
  1922   0025B2  0E01               	movlw	high _motorL
  1923   0025B4  6E21               	movwf	(YellowMove@mL+1)^0,c
  1924   0025B6  0E58               	movlw	low _motorR
  1925   0025B8  6E22               	movwf	YellowMove@mR^0,c
  1926   0025BA  0E01               	movlw	high _motorR
  1927   0025BC  6E23               	movwf	(YellowMove@mR+1)^0,c
  1928   0025BE  ECA5  F02C         	call	_YellowMove	;wreg free
  1929   0025C2                     
  1930                           ;main.c: 159:                 TMR0H=0;
  1931   0025C2  0E00               	movlw	0
  1932   0025C4  6ED4               	movwf	212,c	;volatile
  1933   0025C6                     
  1934                           ;main.c: 160:                 TMR0L=0;
  1935   0025C6  0E00               	movlw	0
  1936   0025C8  6ED3               	movwf	211,c	;volatile
  1937   0025CA                     
  1938                           ;main.c: 161:                 WayBack[move_count]=3;
  1939   0025CA  0E1A               	movlw	low _WayBack
  1940   0025CC  0101               	movlb	1	; () banked
  1941   0025CE  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1942   0025D0  6ED9               	movwf	fsr2l,c
  1943   0025D2  0E01               	movlw	high _WayBack
  1944   0025D4  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1945   0025D6  6EDA               	movwf	fsr2h,c
  1946   0025D8  0E03               	movlw	3
  1947   0025DA  6EDF               	movwf	indf2,c
  1948                           
  1949                           ;main.c: 162:             }
  1950   0025DC  EFC3  F013         	goto	l5824
  1951   0025E0                     l5768:
  1952                           
  1953                           ; BSR set to: 1
  1954   0025E0  0E04               	movlw	4
  1955   0025E2  19DA               	xorwf	main@prev_colour& (0+255),w,b
  1956   0025E4  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1957   0025E6  A4D8               	btfss	status,2,c
  1958   0025E8  EFF8  F012         	goto	u5681
  1959   0025EC  EFFA  F012         	goto	u5680
  1960   0025F0                     u5681:
  1961   0025F0  EF13  F013         	goto	l5778
  1962   0025F4                     u5680:
  1963   0025F4                     
  1964                           ; BSR set to: 1
  1965                           ;main.c: 164:                 BlueMove(&motorL, &motorR);
  1966   0025F4  0E61               	movlw	low _motorL
  1967   0025F6  6E20               	movwf	BlueMove@mL^0,c
  1968   0025F8  0E01               	movlw	high _motorL
  1969   0025FA  6E21               	movwf	(BlueMove@mL+1)^0,c
  1970   0025FC  0E58               	movlw	low _motorR
  1971   0025FE  6E22               	movwf	BlueMove@mR^0,c
  1972   002600  0E01               	movlw	high _motorR
  1973   002602  6E23               	movwf	(BlueMove@mR+1)^0,c
  1974   002604  ECC0  F02A         	call	_BlueMove	;wreg free
  1975   002608                     
  1976                           ;main.c: 165:                 TMR0H=0;
  1977   002608  0E00               	movlw	0
  1978   00260A  6ED4               	movwf	212,c	;volatile
  1979   00260C                     
  1980                           ;main.c: 166:                 TMR0L=0;
  1981   00260C  0E00               	movlw	0
  1982   00260E  6ED3               	movwf	211,c	;volatile
  1983   002610                     
  1984                           ;main.c: 167:                 WayBack[move_count]=4;
  1985   002610  0E1A               	movlw	low _WayBack
  1986   002612  0101               	movlb	1	; () banked
  1987   002614  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1988   002616  6ED9               	movwf	fsr2l,c
  1989   002618  0E01               	movlw	high _WayBack
  1990   00261A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1991   00261C  6EDA               	movwf	fsr2h,c
  1992   00261E  0E04               	movlw	4
  1993   002620  6EDF               	movwf	indf2,c
  1994                           
  1995                           ;main.c: 168:             }
  1996   002622  EFC3  F013         	goto	l5824
  1997   002626                     l5778:
  1998                           
  1999                           ; BSR set to: 1
  2000   002626  0E05               	movlw	5
  2001   002628  19DA               	xorwf	main@prev_colour& (0+255),w,b
  2002   00262A  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2003   00262C  A4D8               	btfss	status,2,c
  2004   00262E  EF1B  F013         	goto	u5691
  2005   002632  EF1D  F013         	goto	u5690
  2006   002636                     u5691:
  2007   002636  EF36  F013         	goto	l5788
  2008   00263A                     u5690:
  2009   00263A                     
  2010                           ; BSR set to: 1
  2011                           ;main.c: 170:                 GreenMove(&motorL, &motorR);
  2012   00263A  0E61               	movlw	low _motorL
  2013   00263C  6E20               	movwf	GreenMove@mL^0,c
  2014   00263E  0E01               	movlw	high _motorL
  2015   002640  6E21               	movwf	(GreenMove@mL+1)^0,c
  2016   002642  0E58               	movlw	low _motorR
  2017   002644  6E22               	movwf	GreenMove@mR^0,c
  2018   002646  0E01               	movlw	high _motorR
  2019   002648  6E23               	movwf	(GreenMove@mR+1)^0,c
  2020   00264A  ECFB  F02E         	call	_GreenMove	;wreg free
  2021   00264E                     
  2022                           ;main.c: 171:                 TMR0H=0;
  2023   00264E  0E00               	movlw	0
  2024   002650  6ED4               	movwf	212,c	;volatile
  2025   002652                     
  2026                           ;main.c: 172:                 TMR0L=0;
  2027   002652  0E00               	movlw	0
  2028   002654  6ED3               	movwf	211,c	;volatile
  2029   002656                     
  2030                           ;main.c: 173:                 WayBack[move_count]=5;
  2031   002656  0E1A               	movlw	low _WayBack
  2032   002658  0101               	movlb	1	; () banked
  2033   00265A  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2034   00265C  6ED9               	movwf	fsr2l,c
  2035   00265E  0E01               	movlw	high _WayBack
  2036   002660  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2037   002662  6EDA               	movwf	fsr2h,c
  2038   002664  0E05               	movlw	5
  2039   002666  6EDF               	movwf	indf2,c
  2040                           
  2041                           ;main.c: 174:             }
  2042   002668  EFC3  F013         	goto	l5824
  2043   00266C                     l5788:
  2044                           
  2045                           ; BSR set to: 1
  2046   00266C  0E06               	movlw	6
  2047   00266E  19DA               	xorwf	main@prev_colour& (0+255),w,b
  2048   002670  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2049   002672  A4D8               	btfss	status,2,c
  2050   002674  EF3E  F013         	goto	u5701
  2051   002678  EF40  F013         	goto	u5700
  2052   00267C                     u5701:
  2053   00267C  EF59  F013         	goto	l5798
  2054   002680                     u5700:
  2055   002680                     
  2056                           ; BSR set to: 1
  2057                           ;main.c: 176:                 LightBlueMove(&motorL, &motorR);
  2058   002680  0E61               	movlw	low _motorL
  2059   002682  6E20               	movwf	LightBlueMove@mL^0,c
  2060   002684  0E01               	movlw	high _motorL
  2061   002686  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2062   002688  0E58               	movlw	low _motorR
  2063   00268A  6E22               	movwf	LightBlueMove@mR^0,c
  2064   00268C  0E01               	movlw	high _motorR
  2065   00268E  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2066   002690  EC53  F02C         	call	_LightBlueMove	;wreg free
  2067   002694                     
  2068                           ;main.c: 177:                 TMR0H=0;
  2069   002694  0E00               	movlw	0
  2070   002696  6ED4               	movwf	212,c	;volatile
  2071   002698                     
  2072                           ;main.c: 178:                 TMR0L=0;
  2073   002698  0E00               	movlw	0
  2074   00269A  6ED3               	movwf	211,c	;volatile
  2075   00269C                     
  2076                           ;main.c: 179:                 WayBack[move_count]=6;
  2077   00269C  0E1A               	movlw	low _WayBack
  2078   00269E  0101               	movlb	1	; () banked
  2079   0026A0  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2080   0026A2  6ED9               	movwf	fsr2l,c
  2081   0026A4  0E01               	movlw	high _WayBack
  2082   0026A6  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2083   0026A8  6EDA               	movwf	fsr2h,c
  2084   0026AA  0E06               	movlw	6
  2085   0026AC  6EDF               	movwf	indf2,c
  2086                           
  2087                           ;main.c: 180:             }
  2088   0026AE  EFC3  F013         	goto	l5824
  2089   0026B2                     l5798:
  2090                           
  2091                           ; BSR set to: 1
  2092   0026B2  0E07               	movlw	7
  2093   0026B4  19DA               	xorwf	main@prev_colour& (0+255),w,b
  2094   0026B6  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2095   0026B8  A4D8               	btfss	status,2,c
  2096   0026BA  EF61  F013         	goto	u5711
  2097   0026BE  EF63  F013         	goto	u5710
  2098   0026C2                     u5711:
  2099   0026C2  EF7C  F013         	goto	l5808
  2100   0026C6                     u5710:
  2101   0026C6                     
  2102                           ; BSR set to: 1
  2103                           ;main.c: 182:                 PinkMove(&motorL, &motorR);
  2104   0026C6  0E61               	movlw	low _motorL
  2105   0026C8  6E20               	movwf	PinkMove@mL^0,c
  2106   0026CA  0E01               	movlw	high _motorL
  2107   0026CC  6E21               	movwf	(PinkMove@mL+1)^0,c
  2108   0026CE  0E58               	movlw	low _motorR
  2109   0026D0  6E22               	movwf	PinkMove@mR^0,c
  2110   0026D2  0E01               	movlw	high _motorR
  2111   0026D4  6E23               	movwf	(PinkMove@mR+1)^0,c
  2112   0026D6  ECCE  F02C         	call	_PinkMove	;wreg free
  2113   0026DA                     
  2114                           ;main.c: 183:                 TMR0H=0;
  2115   0026DA  0E00               	movlw	0
  2116   0026DC  6ED4               	movwf	212,c	;volatile
  2117   0026DE                     
  2118                           ;main.c: 184:                 TMR0L=0;
  2119   0026DE  0E00               	movlw	0
  2120   0026E0  6ED3               	movwf	211,c	;volatile
  2121   0026E2                     
  2122                           ;main.c: 185:                 WayBack[move_count]=7;
  2123   0026E2  0E1A               	movlw	low _WayBack
  2124   0026E4  0101               	movlb	1	; () banked
  2125   0026E6  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2126   0026E8  6ED9               	movwf	fsr2l,c
  2127   0026EA  0E01               	movlw	high _WayBack
  2128   0026EC  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2129   0026EE  6EDA               	movwf	fsr2h,c
  2130   0026F0  0E07               	movlw	7
  2131   0026F2  6EDF               	movwf	indf2,c
  2132                           
  2133                           ;main.c: 186:             }
  2134   0026F4  EFC3  F013         	goto	l5824
  2135   0026F8                     l5808:
  2136                           
  2137                           ; BSR set to: 1
  2138   0026F8  0E0A               	movlw	10
  2139   0026FA  19DA               	xorwf	main@prev_colour& (0+255),w,b
  2140   0026FC  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2141   0026FE  A4D8               	btfss	status,2,c
  2142   002700  EF84  F013         	goto	u5721
  2143   002704  EF86  F013         	goto	u5720
  2144   002708                     u5721:
  2145   002708  EF92  F013         	goto	l5812
  2146   00270C                     u5720:
  2147   00270C                     
  2148                           ; BSR set to: 1
  2149                           ;main.c: 188:                 RetryMove(&motorL, &motorR);
  2150   00270C  0E61               	movlw	low _motorL
  2151   00270E  6E20               	movwf	RetryMove@mL^0,c
  2152   002710  0E01               	movlw	high _motorL
  2153   002712  6E21               	movwf	(RetryMove@mL+1)^0,c
  2154   002714  0E58               	movlw	low _motorR
  2155   002716  6E22               	movwf	RetryMove@mR^0,c
  2156   002718  0E01               	movlw	high _motorR
  2157   00271A  6E23               	movwf	(RetryMove@mR+1)^0,c
  2158   00271C  EC58  F02A         	call	_RetryMove	;wreg free
  2159                           
  2160                           ;main.c: 189:             }
  2161   002720  EFC3  F013         	goto	l5824
  2162   002724                     l5812:
  2163                           
  2164                           ; BSR set to: 1
  2165   002724  51DA               	movf	main@prev_colour& (0+255),w,b
  2166   002726  11DB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2167   002728  A4D8               	btfss	status,2,c
  2168   00272A  EF99  F013         	goto	u5731
  2169   00272E  EF9B  F013         	goto	u5730
  2170   002732                     u5731:
  2171   002732  EFA7  F013         	goto	l378
  2172   002736                     u5730:
  2173   002736                     l5814:
  2174                           
  2175                           ; BSR set to: 1
  2176                           ;main.c: 191:                 go_Home(WayBack, Time_forward);
  2177   002736  0E1A               	movlw	low _WayBack
  2178   002738  6E24               	movwf	go_Home@WayBack^0,c
  2179   00273A  0E01               	movlw	high _WayBack
  2180   00273C  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2181   00273E  0E3C               	movlw	low _Time_forward
  2182   002740  6E26               	movwf	go_Home@Time_forward^0,c
  2183   002742  0E02               	movlw	high _Time_forward
  2184   002744  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2185   002746  EC2B  F01D         	call	_go_Home	;wreg free
  2186   00274A  EFC3  F013         	goto	l5824
  2187   00274E                     l378:
  2188                           
  2189                           ; BSR set to: 1
  2190   00274E  EFC3  F013         	goto	l5824
  2191   002752                     l5816:
  2192                           
  2193                           ; BSR set to: 1
  2194   002752  5118               	movf	_lost_flag& (0+255),w,b
  2195   002754  1119               	iorwf	(_lost_flag+1)& (0+255),w,b
  2196   002756  B4D8               	btfsc	status,2,c
  2197   002758  EFB0  F013         	goto	u5741
  2198   00275C  EFB2  F013         	goto	u5740
  2199   002760                     u5741:
  2200   002760  EFC3  F013         	goto	l5824
  2201   002764                     u5740:
  2202   002764                     
  2203                           ; BSR set to: 1
  2204                           ;main.c: 194:             move_count++;
  2205   002764  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2206   002766  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2207   002768                     
  2208                           ; BSR set to: 1
  2209                           ;main.c: 195:             Time_forward[move_count]=65535;
  2210   002768  90D8               	bcf	status,0,c
  2211   00276A  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  2212   00276C  6ED9               	movwf	fsr2l,c
  2213   00276E  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  2214   002770  6EDA               	movwf	fsr2h,c
  2215   002772  0E3C               	movlw	low _Time_forward
  2216   002774  26D9               	addwf	fsr2l,f,c
  2217   002776  0E02               	movlw	high _Time_forward
  2218   002778  22DA               	addwfc	fsr2h,f,c
  2219   00277A  0EFF               	movlw	255
  2220   00277C  6EDE               	movwf	postinc2,c
  2221   00277E  0EFF               	movlw	255
  2222   002780  6EDD               	movwf	postdec2,c
  2223   002782  EF9B  F013         	goto	l5814
  2224   002786                     l5824:
  2225                           
  2226                           ;main.c: 100:     while (run_flag)
  2227   002786  0101               	movlb	1	; () banked
  2228   002788  5116               	movf	_run_flag& (0+255),w,b
  2229   00278A  1117               	iorwf	(_run_flag+1)& (0+255),w,b
  2230   00278C  A4D8               	btfss	status,2,c
  2231   00278E  EFCB  F013         	goto	u5751
  2232   002792  EFCD  F013         	goto	u5750
  2233   002796                     u5751:
  2234   002796  EFBC  F011         	goto	l5698
  2235   00279A                     u5750:
  2236   00279A                     
  2237                           ; BSR set to: 1
  2238   00279A  EF1A  F000         	goto	start
  2239   00279E                     __end_of_main:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _turnCalibration *****************
  2243 ;; Defined at:
  2244 ;;		line 356 in file "dc_motor.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2247 ;;		 -> motorL(9), 
  2248 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2249 ;;		 -> motorR(9), 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;Total ram usage:        6 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 5
  2268 ;; This function calls:
  2269 ;;		_turnLeft45
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text1
  2276   0041C6                     __ptext1:
  2277                           	callstack 0
  2278   0041C6                     _turnCalibration:
  2279                           	callstack 25
  2280   0041C6                     
  2281                           ;dc_motor.c: 357:     LATFbits.LATF0=1;
  2282   0041C6  807E               	bsf	126,0,c	;volatile
  2283   0041C8                     
  2284                           ;dc_motor.c: 358:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2285   0041C8  0E52               	movlw	82
  2286   0041CA  6E25               	movwf	(??_turnCalibration+1)^0,c
  2287   0041CC  0E2B               	movlw	43
  2288   0041CE  6E24               	movwf	??_turnCalibration^0,c
  2289   0041D0  0E00               	movlw	0
  2290   0041D2                     u5857:
  2291   0041D2  2EE8               	decfsz	wreg,f,c
  2292   0041D4  D7FE               	bra	u5857
  2293   0041D6  2E24               	decfsz	??_turnCalibration^0,f,c
  2294   0041D8  D7FC               	bra	u5857
  2295   0041DA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2296   0041DC  D7FA               	bra	u5857
  2297   0041DE  D000               	nop2	
  2298                           
  2299                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2300   0041E0  EFAA  F021         	goto	l565
  2301   0041E4                     l566:
  2302                           
  2303                           ;dc_motor.c: 361:         LATDbits.LATD3=1;
  2304   0041E4  867C               	bsf	124,3,c	;volatile
  2305   0041E6                     
  2306                           ;dc_motor.c: 363:         turnLeft45(&motorL, &motorR);
  2307   0041E6  0E61               	movlw	low _motorL
  2308   0041E8  6E1A               	movwf	turnLeft45@mL^0,c
  2309   0041EA  0E01               	movlw	high _motorL
  2310   0041EC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2311   0041EE  0E58               	movlw	low _motorR
  2312   0041F0  6E1C               	movwf	turnLeft45@mR^0,c
  2313   0041F2  0E01               	movlw	high _motorR
  2314   0041F4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2315   0041F6  EC0D  F02E         	call	_turnLeft45	;wreg free
  2316                           
  2317                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2318   0041FA  0E61               	movlw	low _motorL
  2319   0041FC  6E1A               	movwf	turnLeft45@mL^0,c
  2320   0041FE  0E01               	movlw	high _motorL
  2321   004200  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2322   004202  0E58               	movlw	low _motorR
  2323   004204  6E1C               	movwf	turnLeft45@mR^0,c
  2324   004206  0E01               	movlw	high _motorR
  2325   004208  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2326   00420A  EC0D  F02E         	call	_turnLeft45	;wreg free
  2327                           
  2328                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2329   00420E  0E61               	movlw	low _motorL
  2330   004210  6E1A               	movwf	turnLeft45@mL^0,c
  2331   004212  0E01               	movlw	high _motorL
  2332   004214  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2333   004216  0E58               	movlw	low _motorR
  2334   004218  6E1C               	movwf	turnLeft45@mR^0,c
  2335   00421A  0E01               	movlw	high _motorR
  2336   00421C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2337   00421E  EC0D  F02E         	call	_turnLeft45	;wreg free
  2338                           
  2339                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2340   004222  0E61               	movlw	low _motorL
  2341   004224  6E1A               	movwf	turnLeft45@mL^0,c
  2342   004226  0E01               	movlw	high _motorL
  2343   004228  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2344   00422A  0E58               	movlw	low _motorR
  2345   00422C  6E1C               	movwf	turnLeft45@mR^0,c
  2346   00422E  0E01               	movlw	high _motorR
  2347   004230  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2348   004232  EC0D  F02E         	call	_turnLeft45	;wreg free
  2349                           
  2350                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2351   004236  EF8F  F021         	goto	l5504
  2352   00423A                     l568:
  2353                           
  2354                           ;dc_motor.c: 371:               LATDbits.LATD4=1;
  2355   00423A  887C               	bsf	124,4,c	;volatile
  2356   00423C                     
  2357                           ;dc_motor.c: 372:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2358   00423C  0EA3               	movlw	163
  2359   00423E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2360   004240  0E57               	movlw	87
  2361   004242  6E24               	movwf	??_turnCalibration^0,c
  2362   004244  0E02               	movlw	2
  2363   004246                     u5867:
  2364   004246  2EE8               	decfsz	wreg,f,c
  2365   004248  D7FE               	bra	u5867
  2366   00424A  2E24               	decfsz	??_turnCalibration^0,f,c
  2367   00424C  D7FC               	bra	u5867
  2368   00424E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2369   004250  D7FA               	bra	u5867
  2370   004252  D000               	nop2	
  2371                           
  2372                           ;dc_motor.c: 373:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2373   004254  A48E               	btfss	142,2,c	;volatile
  2374   004256  EF2F  F021         	goto	u5421
  2375   00425A  EF32  F021         	goto	u5420
  2376   00425E                     u5421:
  2377   00425E  0E01               	movlw	1
  2378   004260  EF33  F021         	goto	u5422
  2379   004264                     u5420:
  2380   004264  0E00               	movlw	0
  2381   004266                     u5422:
  2382   004266  6E24               	movwf	??_turnCalibration^0,c
  2383   004268  A68E               	btfss	142,3,c	;volatile
  2384   00426A  EF39  F021         	goto	u5431
  2385   00426E  EF3C  F021         	goto	u5430
  2386   004272                     u5431:
  2387   004272  0E01               	movlw	1
  2388   004274  EF3D  F021         	goto	u5432
  2389   004278                     u5430:
  2390   004278  0E00               	movlw	0
  2391   00427A                     u5432:
  2392   00427A  1424               	andwf	??_turnCalibration^0,w,c
  2393   00427C  A0E8               	btfss	wreg,0,c
  2394   00427E  EF43  F021         	goto	u5441
  2395   004282  EF45  F021         	goto	u5440
  2396   004286                     u5441:
  2397   004286  EF57  F021         	goto	l569
  2398   00428A                     u5440:
  2399   00428A                     
  2400                           ;dc_motor.c: 374:                 LATHbits.LATH3=1;
  2401   00428A  8680               	bsf	128,3,c	;volatile
  2402                           
  2403                           ;dc_motor.c: 375:                 LATDbits.LATD7=1;
  2404   00428C  8E7C               	bsf	124,7,c	;volatile
  2405   00428E                     
  2406                           ;dc_motor.c: 376:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2407   00428E  0E52               	movlw	82
  2408   004290  6E25               	movwf	(??_turnCalibration+1)^0,c
  2409   004292  0E2B               	movlw	43
  2410   004294  6E24               	movwf	??_turnCalibration^0,c
  2411   004296  0E00               	movlw	0
  2412   004298                     u5877:
  2413   004298  2EE8               	decfsz	wreg,f,c
  2414   00429A  D7FE               	bra	u5877
  2415   00429C  2E24               	decfsz	??_turnCalibration^0,f,c
  2416   00429E  D7FC               	bra	u5877
  2417   0042A0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2418   0042A2  D7FA               	bra	u5877
  2419   0042A4  D000               	nop2	
  2420   0042A6                     
  2421                           ;dc_motor.c: 377:                 LATHbits.LATH3=0;
  2422   0042A6  9680               	bcf	128,3,c	;volatile
  2423   0042A8                     
  2424                           ;dc_motor.c: 378:                 LATDbits.LATD7=0;
  2425   0042A8  9E7C               	bcf	124,7,c	;volatile
  2426                           
  2427                           ;dc_motor.c: 379:             }
  2428   0042AA  EF8F  F021         	goto	l5504
  2429   0042AE                     l569:
  2430   0042AE  B68E               	btfsc	142,3,c	;volatile
  2431   0042B0  EF5C  F021         	goto	u5451
  2432   0042B4  EF5E  F021         	goto	u5450
  2433   0042B8                     u5451:
  2434   0042B8  EF73  F021         	goto	l571
  2435   0042BC                     u5450:
  2436   0042BC                     
  2437                           ;dc_motor.c: 382:                 Turn45Delay+=10;
  2438   0042BC  0E0A               	movlw	10
  2439   0042BE  0100               	movlb	0	; () banked
  2440   0042C0  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2441   0042C2  0E00               	movlw	0
  2442   0042C4  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2443   0042C6                     
  2444                           ; BSR set to: 0
  2445                           ;dc_motor.c: 383:                 LATHbits.LATH3=1;
  2446   0042C6  8680               	bsf	128,3,c	;volatile
  2447   0042C8                     
  2448                           ; BSR set to: 0
  2449                           ;dc_motor.c: 384:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2450   0042C8  0E52               	movlw	82
  2451   0042CA  6E25               	movwf	(??_turnCalibration+1)^0,c
  2452   0042CC  0E2B               	movlw	43
  2453   0042CE  6E24               	movwf	??_turnCalibration^0,c
  2454   0042D0  0E00               	movlw	0
  2455   0042D2                     u5887:
  2456   0042D2  2EE8               	decfsz	wreg,f,c
  2457   0042D4  D7FE               	bra	u5887
  2458   0042D6  2E24               	decfsz	??_turnCalibration^0,f,c
  2459   0042D8  D7FC               	bra	u5887
  2460   0042DA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2461   0042DC  D7FA               	bra	u5887
  2462   0042DE  D000               	nop2	
  2463   0042E0                     
  2464                           ;dc_motor.c: 385:                 LATHbits.LATH3=0;
  2465   0042E0  9680               	bcf	128,3,c	;volatile
  2466                           
  2467                           ;dc_motor.c: 386:             }
  2468   0042E2  EF8F  F021         	goto	l5504
  2469   0042E6                     l571:
  2470   0042E6  B48E               	btfsc	142,2,c	;volatile
  2471   0042E8  EF78  F021         	goto	u5461
  2472   0042EC  EF7A  F021         	goto	u5460
  2473   0042F0                     u5461:
  2474   0042F0  EF8F  F021         	goto	l570
  2475   0042F4                     u5460:
  2476   0042F4                     
  2477                           ;dc_motor.c: 389:                 Turn45Delay-=10;
  2478   0042F4  0100               	movlb	0	; () banked
  2479   0042F6  0EF6               	movlw	246
  2480   0042F8  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2481   0042FA  0EFF               	movlw	255
  2482   0042FC  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2483   0042FE                     
  2484                           ; BSR set to: 0
  2485                           ;dc_motor.c: 390:                 LATDbits.LATD7=1;
  2486   0042FE  8E7C               	bsf	124,7,c	;volatile
  2487   004300                     
  2488                           ; BSR set to: 0
  2489                           ;dc_motor.c: 391:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2490   004300  0E52               	movlw	82
  2491   004302  6E25               	movwf	(??_turnCalibration+1)^0,c
  2492   004304  0E2B               	movlw	43
  2493   004306  6E24               	movwf	??_turnCalibration^0,c
  2494   004308  0E00               	movlw	0
  2495   00430A                     u5897:
  2496   00430A  2EE8               	decfsz	wreg,f,c
  2497   00430C  D7FE               	bra	u5897
  2498   00430E  2E24               	decfsz	??_turnCalibration^0,f,c
  2499   004310  D7FC               	bra	u5897
  2500   004312  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2501   004314  D7FA               	bra	u5897
  2502   004316  D000               	nop2	
  2503   004318                     
  2504                           ;dc_motor.c: 392:                 LATDbits.LATD7=0;
  2505   004318  9E7C               	bcf	124,7,c	;volatile
  2506   00431A  EF8F  F021         	goto	l5504
  2507   00431E                     l570:
  2508   00431E                     l5504:
  2509                           
  2510                           ;dc_motor.c: 368:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2511   00431E  A48E               	btfss	142,2,c	;volatile
  2512   004320  EF94  F021         	goto	u5471
  2513   004324  EF96  F021         	goto	u5470
  2514   004328                     u5471:
  2515   004328  EF9D  F021         	goto	l576
  2516   00432C                     u5470:
  2517   00432C  B68E               	btfsc	142,3,c	;volatile
  2518   00432E  EF9B  F021         	goto	u5481
  2519   004332  EF9D  F021         	goto	u5480
  2520   004336                     u5481:
  2521   004336  EF1D  F021         	goto	l568
  2522   00433A                     u5480:
  2523   00433A                     l576:
  2524                           
  2525                           ;dc_motor.c: 395:         LATDbits.LATD4=0;
  2526   00433A  987C               	bcf	124,4,c	;volatile
  2527   00433C                     
  2528                           ;dc_motor.c: 396:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2529   00433C  0EA3               	movlw	163
  2530   00433E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2531   004340  0E57               	movlw	87
  2532   004342  6E24               	movwf	??_turnCalibration^0,c
  2533   004344  0E02               	movlw	2
  2534   004346                     u5907:
  2535   004346  2EE8               	decfsz	wreg,f,c
  2536   004348  D7FE               	bra	u5907
  2537   00434A  2E24               	decfsz	??_turnCalibration^0,f,c
  2538   00434C  D7FC               	bra	u5907
  2539   00434E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2540   004350  D7FA               	bra	u5907
  2541   004352  D000               	nop2	
  2542   004354                     l565:
  2543                           
  2544                           ;dc_motor.c: 360:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2545   004354  A68E               	btfss	142,3,c	;volatile
  2546   004356  EFAF  F021         	goto	u5491
  2547   00435A  EFB2  F021         	goto	u5490
  2548   00435E                     u5491:
  2549   00435E  0E01               	movlw	1
  2550   004360  EFB3  F021         	goto	u5492
  2551   004364                     u5490:
  2552   004364  0E00               	movlw	0
  2553   004366                     u5492:
  2554   004366  6E24               	movwf	??_turnCalibration^0,c
  2555   004368  A48E               	btfss	142,2,c	;volatile
  2556   00436A  EFB9  F021         	goto	u5501
  2557   00436E  EFBC  F021         	goto	u5500
  2558   004372                     u5501:
  2559   004372  0E01               	movlw	1
  2560   004374  EFBD  F021         	goto	u5502
  2561   004378                     u5500:
  2562   004378  0E00               	movlw	0
  2563   00437A                     u5502:
  2564   00437A  1424               	andwf	??_turnCalibration^0,w,c
  2565   00437C  A0E8               	btfss	wreg,0,c
  2566   00437E  EFC3  F021         	goto	u5511
  2567   004382  EFC5  F021         	goto	u5510
  2568   004386                     u5511:
  2569   004386  EFF2  F020         	goto	l566
  2570   00438A                     u5510:
  2571   00438A                     
  2572                           ;dc_motor.c: 398:     LATDbits.LATD3=0;
  2573   00438A  967C               	bcf	124,3,c	;volatile
  2574   00438C                     
  2575                           ;dc_motor.c: 399:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2576   00438C  0EA3               	movlw	163
  2577   00438E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2578   004390  0E57               	movlw	87
  2579   004392  6E24               	movwf	??_turnCalibration^0,c
  2580   004394  0E02               	movlw	2
  2581   004396                     u5917:
  2582   004396  2EE8               	decfsz	wreg,f,c
  2583   004398  D7FE               	bra	u5917
  2584   00439A  2E24               	decfsz	??_turnCalibration^0,f,c
  2585   00439C  D7FC               	bra	u5917
  2586   00439E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2587   0043A0  D7FA               	bra	u5917
  2588   0043A2  D000               	nop2	
  2589   0043A4  0012               	return		;funcret
  2590   0043A6                     __end_of_turnCalibration:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _sprintf *****************
  2594 ;; Defined at:
  2595 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2598 ;;		 -> main@buf(100), 
  2599 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2600 ;;		 -> STR_1(51), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2603 ;;  ap              2  100[BANK0 ] PTR void [1]
  2604 ;;		 -> ?_sprintf(2), 
  2605 ;;  ret             2    0        int 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  2   80[BANK0 ] int 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2615 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;Total ram usage:       33 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; Hardware stack levels required when called: 8
  2622 ;; This function calls:
  2623 ;;		_vfprintf
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text2
  2630   005802                     __ptext2:
  2631                           	callstack 0
  2632   005802                     _sprintf:
  2633                           	callstack 22
  2634   005802  0EB4               	movlw	low (?_sprintf+4)
  2635   005804  0100               	movlb	0	; () banked
  2636   005806  6FC4               	movwf	sprintf@ap& (0+255),b
  2637   005808  0E00               	movlw	high (?_sprintf+4)
  2638   00580A  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2639   00580C  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2640   005810  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2641   005814                     
  2642                           ; BSR set to: 0
  2643   005814  0E00               	movlw	0
  2644   005816  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2645   005818  0E00               	movlw	0
  2646   00581A  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2647   00581C                     
  2648                           ; BSR set to: 0
  2649   00581C  0E00               	movlw	0
  2650   00581E  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2651   005820  0E00               	movlw	0
  2652   005822  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2653   005824                     
  2654                           ; BSR set to: 0
  2655   005824  0EC6               	movlw	low sprintf@f
  2656   005826  6FA8               	movwf	vfprintf@fp& (0+255),b
  2657   005828  0E00               	movlw	high sprintf@f
  2658   00582A  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2659   00582C  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2660   005830  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2661   005834  0EC4               	movlw	low sprintf@ap
  2662   005836  6FAC               	movwf	vfprintf@ap& (0+255),b
  2663   005838  0E00               	movlw	high sprintf@ap
  2664   00583A  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2665   00583C  ECD6  F02B         	call	_vfprintf	;wreg free
  2666   005840  0100               	movlb	0	; () banked
  2667   005842  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2668   005844  25B0               	addwf	sprintf@s& (0+255),w,b
  2669   005846  6ED9               	movwf	fsr2l,c
  2670   005848  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2671   00584A  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2672   00584C  6EDA               	movwf	fsr2h,c
  2673   00584E  0E00               	movlw	0
  2674   005850  6EDF               	movwf	indf2,c
  2675   005852                     
  2676                           ; BSR set to: 0
  2677   005852  0012               	return		;funcret
  2678   005854                     __end_of_sprintf:
  2679                           	callstack 0
  2680                           
  2681 ;; *************** function _vfprintf *****************
  2682 ;; Defined at:
  2683 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2686 ;;		 -> sprintf@f(11), 
  2687 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2688 ;;		 -> STR_1(51), 
  2689 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2690 ;;		 -> sprintf@ap(2), 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2693 ;;		 -> STR_1(51), 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  2   72[BANK0 ] int 
  2696 ;; Registers used:
  2697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2703 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;Total ram usage:        8 bytes
  2708 ;; Hardware stack levels used: 1
  2709 ;; Hardware stack levels required when called: 7
  2710 ;; This function calls:
  2711 ;;		_vfpfcnvrt
  2712 ;; This function is called by:
  2713 ;;		_sprintf
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text3
  2718   0057AC                     __ptext3:
  2719                           	callstack 0
  2720   0057AC                     _vfprintf:
  2721                           	callstack 22
  2722   0057AC                     
  2723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2724   0057AC  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2725   0057B0  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2728   0057B4  EFEB  F02B         	goto	l5194
  2729   0057B8                     l5192:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2732   0057B8  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2733   0057BC  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2734   0057C0  0EAE               	movlw	low vfprintf@cfmt
  2735   0057C2  0100               	movlb	0	; () banked
  2736   0057C4  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2737   0057C6  0E00               	movlw	high vfprintf@cfmt
  2738   0057C8  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2739   0057CA  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2740   0057CE  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2741   0057D2  ECA8  F01B         	call	_vfpfcnvrt	;wreg free
  2742   0057D6                     l5194:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2745   0057D6  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2746   0057DA  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2747   0057DE                     	if	0	;tblptru may be non-zero
  2748   0057DE                     	endif
  2749   0057DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2750   0057DE  0E00               	movlw	low (__mediumconst shr (0+16))
  2751   0057E0  6EF8               	movwf	tblptru,c
  2752   0057E2                     	endif
  2753   0057E2  0008               	tblrd		*
  2754   0057E4  50F5               	movf	tablat,w,c
  2755   0057E6  0900               	iorlw	0
  2756   0057E8  A4D8               	btfss	status,2,c
  2757   0057EA  EFF9  F02B         	goto	u5101
  2758   0057EE  EFFB  F02B         	goto	u5100
  2759   0057F2                     u5101:
  2760   0057F2  EFDC  F02B         	goto	l5192
  2761   0057F6                     u5100:
  2762   0057F6                     
  2763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2764   0057F6  0E00               	movlw	0
  2765   0057F8  0100               	movlb	0	; () banked
  2766   0057FA  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2767   0057FC  0E00               	movlw	0
  2768   0057FE  6FA8               	movwf	?_vfprintf& (0+255),b
  2769   005800                     
  2770                           ; BSR set to: 0
  2771   005800  0012               	return		;funcret
  2772   005802                     __end_of_vfprintf:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _vfpfcnvrt *****************
  2776 ;; Defined at:
  2777 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2780 ;;		 -> sprintf@f(11), 
  2781 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2782 ;;		 -> vfprintf@cfmt(2), 
  2783 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2784 ;;		 -> sprintf@ap(2), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  convarg         8   61[BANK0 ] struct .
  2787 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2788 ;;		 -> STR_1(51), 
  2789 ;;  i               2    0        int 
  2790 ;;  done            2    0        int 
  2791 ;;  c               1   69[BANK0 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2801 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;Total ram usage:       19 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 6
  2808 ;; This function calls:
  2809 ;;		_dtoa
  2810 ;;		_efgtoa
  2811 ;;		_fputc
  2812 ;; This function is called by:
  2813 ;;		_vfprintf
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text4
  2818   003750                     __ptext4:
  2819                           	callstack 0
  2820   003750                     _vfpfcnvrt:
  2821                           	callstack 22
  2822   003750                     
  2823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2824   003750  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2825   003754  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2826   003758  CFDE FFF6          	movff	postinc2,tblptrl
  2827   00375C  CFDD FFF7          	movff	postdec2,tblptrh
  2828   003760                     	if	0	;tblptru may be non-zero
  2829   003760                     	endif
  2830   003760                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2831   003760  0E00               	movlw	low (__mediumconst shr (0+16))
  2832   003762  6EF8               	movwf	tblptru,c
  2833   003764                     	endif
  2834   003764  0008               	tblrd		*
  2835   003766  50F5               	movf	tablat,w,c
  2836   003768  0A25               	xorlw	37
  2837   00376A  A4D8               	btfss	status,2,c
  2838   00376C  EFBA  F01B         	goto	u4931
  2839   003770  EFBC  F01B         	goto	u4930
  2840   003774                     u4931:
  2841   003774  EF14  F01D         	goto	l5042
  2842   003778                     u4930:
  2843   003778                     
  2844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2845   003778  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2846   00377C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2847   003780  2ADE               	incf	postinc2,f,c
  2848   003782  0E00               	movlw	0
  2849   003784  22DD               	addwfc	postdec2,f,c
  2850   003786                     
  2851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2852   003786  0E00               	movlw	0
  2853   003788  0100               	movlb	0	; () banked
  2854   00378A  6FE8               	movwf	(_width+1)& (0+255),b
  2855   00378C  0E00               	movlw	0
  2856   00378E  6FE7               	movwf	_width& (0+255),b
  2857   003790  C0E7  F0EB         	movff	_width,_flags
  2858   003794                     
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2861   003794  69E9               	setf	_prec& (0+255),b
  2862   003796  69EA               	setf	(_prec+1)& (0+255),b
  2863   003798                     
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2866   003798  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2867   00379C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2868   0037A0  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2869   0037A4  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2870   0037A8                     
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2873   0037A8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2874   0037AC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2875   0037B0                     	if	0	;tblptru may be non-zero
  2876   0037B0                     	endif
  2877   0037B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2878   0037B0  0E00               	movlw	low (__mediumconst shr (0+16))
  2879   0037B2  6EF8               	movwf	tblptru,c
  2880   0037B4                     	endif
  2881   0037B4  0008               	tblrd		*
  2882   0037B6  50F5               	movf	tablat,w,c
  2883   0037B8  0A64               	xorlw	100
  2884   0037BA  B4D8               	btfsc	status,2,c
  2885   0037BC  EFE2  F01B         	goto	u4941
  2886   0037C0  EFE4  F01B         	goto	u4940
  2887   0037C4                     u4941:
  2888   0037C4  EFF4  F01B         	goto	l4998
  2889   0037C8                     u4940:
  2890   0037C8                     
  2891                           ; BSR set to: 0
  2892   0037C8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2893   0037CC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2894   0037D0                     	if	0	;tblptru may be non-zero
  2895   0037D0                     	endif
  2896   0037D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2897   0037D0  0E00               	movlw	low (__mediumconst shr (0+16))
  2898   0037D2  6EF8               	movwf	tblptru,c
  2899   0037D4                     	endif
  2900   0037D4  0008               	tblrd		*
  2901   0037D6  50F5               	movf	tablat,w,c
  2902   0037D8  0A69               	xorlw	105
  2903   0037DA  A4D8               	btfss	status,2,c
  2904   0037DC  EFF2  F01B         	goto	u4951
  2905   0037E0  EFF4  F01B         	goto	u4950
  2906   0037E4                     u4951:
  2907   0037E4  EF37  F01C         	goto	l5004
  2908   0037E8                     u4950:
  2909   0037E8                     l4998:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2913   0037E8  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2914   0037EC  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2915   0037F0  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2916   0037F4  0E02               	movlw	2
  2917   0037F6  26DE               	addwf	postinc2,f,c
  2918   0037F8  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2919   0037FC  0E00               	movlw	0
  2920   0037FE  22DD               	addwfc	postdec2,f,c
  2921   003800  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2922   003804  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2923   003808  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2924   00380C  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2925   003810  0E00               	movlw	0
  2926   003812  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2927   003814  0EFF               	movlw	-1
  2928   003816  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2929   003818  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2930   00381A  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2931   00381C  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2932   00381E  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2933   003820  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2936   003822  0E01               	movlw	1
  2937   003824  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2938   003826  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2939   003828  0E00               	movlw	0
  2940   00382A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2941   00382C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2942   00382E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2943   003832  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2944   003836  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2945   00383A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2946   00383E                     
  2947                           ; BSR set to: 0
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2949   00383E  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2950   003842  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2951   003846  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2952   00384A  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2953   00384E  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2954   003852  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2955   003856  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2956   00385A  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2957   00385E  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2958   003862  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2959   003866  EC9B  F01E         	call	_dtoa	;wreg free
  2960   00386A  EF2A  F01D         	goto	l1463
  2961   00386E                     l5004:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2965   00386E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2966   003872  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2967   003876  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2968   00387A  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2969   00387E                     
  2970                           ; BSR set to: 0
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2972   00387E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2973   003882  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2974   003886                     	if	0	;tblptru may be non-zero
  2975   003886                     	endif
  2976   003886                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2977   003886  0E00               	movlw	low (__mediumconst shr (0+16))
  2978   003888  6EF8               	movwf	tblptru,c
  2979   00388A                     	endif
  2980   00388A  0008               	tblrd		*
  2981   00388C  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2984   003890  EF56  F01C         	goto	l5016
  2985   003894                     l5008:
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2989   003894  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2990   003896  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2993   003898  EF6F  F01C         	goto	l5018
  2994   00389C                     l5010:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2998   00389C  0E6C               	movlw	108
  2999   00389E  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3002   0038A0  EF6F  F01C         	goto	l5018
  3003   0038A4                     l5012:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3007   0038A4  0E00               	movlw	0
  3008   0038A6  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3011   0038A8  EF6F  F01C         	goto	l5018
  3012   0038AC                     l5016:
  3013                           
  3014                           ; BSR set to: 0
  3015   0038AC  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3016   0038AE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3017   0038B0  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3018                           
  3019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3020                           ; Switch size 1, requested type "simple"
  3021                           ; Number of cases is 1, Range of values is 0 to 0
  3022                           ; switch strategies available:
  3023                           ; Name         Instructions Cycles
  3024                           ; simple_byte            4     3 (average)
  3025                           ;	Chosen strategy is simple_byte
  3026   0038B2  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3027   0038B4  0A00               	xorlw	0	; case 0
  3028   0038B6  B4D8               	btfsc	status,2,c
  3029   0038B8  EF60  F01C         	goto	l5966
  3030   0038BC  EF52  F01C         	goto	l5012
  3031   0038C0                     l5966:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ; Switch size 1, requested type "simple"
  3035                           ; Number of cases is 3, Range of values is 76 to 108
  3036                           ; switch strategies available:
  3037                           ; Name         Instructions Cycles
  3038                           ; simple_byte           10     6 (average)
  3039                           ;	Chosen strategy is simple_byte
  3040   0038C0  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3041   0038C2  0A4C               	xorlw	76	; case 76
  3042   0038C4  B4D8               	btfsc	status,2,c
  3043   0038C6  EF4A  F01C         	goto	l5008
  3044   0038CA  0A2A               	xorlw	42	; case 102
  3045   0038CC  B4D8               	btfsc	status,2,c
  3046   0038CE  EF4E  F01C         	goto	l5010
  3047   0038D2  0A0A               	xorlw	10	; case 108
  3048   0038D4  B4D8               	btfsc	status,2,c
  3049   0038D6  EF4A  F01C         	goto	l5008
  3050   0038DA  EF52  F01C         	goto	l5012
  3051   0038DE                     l5018:
  3052                           
  3053                           ; BSR set to: 0
  3054   0038DE  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3055   0038E2  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3056   0038E6                     	if	0	;tblptru may be non-zero
  3057   0038E6                     	endif
  3058   0038E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3059   0038E6  0E00               	movlw	low (__mediumconst shr (0+16))
  3060   0038E8  6EF8               	movwf	tblptru,c
  3061   0038EA                     	endif
  3062   0038EA  0008               	tblrd		*
  3063   0038EC  50F5               	movf	tablat,w,c
  3064   0038EE  0A66               	xorlw	102
  3065   0038F0  A4D8               	btfss	status,2,c
  3066   0038F2  EF7D  F01C         	goto	u4961
  3067   0038F6  EF7F  F01C         	goto	u4960
  3068   0038FA                     u4961:
  3069   0038FA  EF0B  F01D         	goto	l5038
  3070   0038FE                     u4960:
  3071   0038FE  EFB5  F01C         	goto	l5026
  3072   003902                     l5020:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3076   003902  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3077   003906  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3078   00390A  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3079   00390E  0E04               	movlw	4
  3080   003910  26DE               	addwf	postinc2,f,c
  3081   003912  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3082   003916  0E00               	movlw	0
  3083   003918  22DD               	addwfc	postdec2,f,c
  3084   00391A  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3085   00391E  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3086   003922  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3087   003926  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3088   00392A  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3089   00392E  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3092   003932  EFCA  F01C         	goto	l5028
  3093   003936                     l5022:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3097   003936  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3098   00393A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3099   00393E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3100   003942  0E04               	movlw	4
  3101   003944  26DE               	addwf	postinc2,f,c
  3102   003946  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3103   00394A  0E00               	movlw	0
  3104   00394C  22DD               	addwfc	postdec2,f,c
  3105   00394E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3106   003952  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3107   003956  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3108   00395A  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3109   00395E  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3110   003962  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3113   003966  EFCA  F01C         	goto	l5028
  3114   00396A                     l5026:
  3115                           
  3116                           ; BSR set to: 0
  3117   00396A  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3118   00396C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3119   00396E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3120                           
  3121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3122                           ; Switch size 1, requested type "simple"
  3123                           ; Number of cases is 1, Range of values is 0 to 0
  3124                           ; switch strategies available:
  3125                           ; Name         Instructions Cycles
  3126                           ; simple_byte            4     3 (average)
  3127                           ;	Chosen strategy is simple_byte
  3128   003970  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3129   003972  0A00               	xorlw	0	; case 0
  3130   003974  B4D8               	btfsc	status,2,c
  3131   003976  EFBF  F01C         	goto	l5968
  3132   00397A  EFCA  F01C         	goto	l5028
  3133   00397E                     l5968:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ; Switch size 1, requested type "simple"
  3137                           ; Number of cases is 2, Range of values is 76 to 108
  3138                           ; switch strategies available:
  3139                           ; Name         Instructions Cycles
  3140                           ; simple_byte            7     4 (average)
  3141                           ;	Chosen strategy is simple_byte
  3142   00397E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3143   003980  0A4C               	xorlw	76	; case 76
  3144   003982  B4D8               	btfsc	status,2,c
  3145   003984  EF9B  F01C         	goto	l5022
  3146   003988  0A20               	xorlw	32	; case 108
  3147   00398A  B4D8               	btfsc	status,2,c
  3148   00398C  EF81  F01C         	goto	l5020
  3149   003990  EFCA  F01C         	goto	l5028
  3150   003994                     l5028:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3154   003994  0E01               	movlw	1
  3155   003996  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3156   003998  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3157   00399A  0E00               	movlw	0
  3158   00399C  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3159   00399E  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3160   0039A0  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3161   0039A4  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3162   0039A8  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3163   0039AC  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3166   0039B0  EFF3  F01C         	goto	l5036
  3167   0039B4                     l5030:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3171   0039B4  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3172   0039B8  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3173   0039BC  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3174   0039C0  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3175   0039C4  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3176   0039C8  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3177   0039CC  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3178   0039D0  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3179   0039D4                     	if	0	;tblptru may be non-zero
  3180   0039D4                     	endif
  3181   0039D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3182   0039D4  0E00               	movlw	low (__mediumconst shr (0+16))
  3183   0039D6  6EF8               	movwf	tblptru,c
  3184   0039D8                     	endif
  3185   0039D8  0008               	tblrd		*
  3186   0039DA  CFF5 F066          	movff	tablat,efgtoa@c
  3187   0039DE  EC3A  F00C         	call	_efgtoa	;wreg free
  3188   0039E2  EF2A  F01D         	goto	l1463
  3189   0039E6                     l5036:
  3190                           
  3191                           ; BSR set to: 0
  3192   0039E6  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3193   0039EA  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3194   0039EE                     	if	0	;tblptru may be non-zero
  3195   0039EE                     	endif
  3196   0039EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3197   0039EE  0E00               	movlw	low (__mediumconst shr (0+16))
  3198   0039F0  6EF8               	movwf	tblptru,c
  3199   0039F2                     	endif
  3200   0039F2  0008               	tblrd		*
  3201   0039F4  50F5               	movf	tablat,w,c
  3202   0039F6  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3203   0039F8  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3204                           
  3205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3206                           ; Switch size 1, requested type "simple"
  3207                           ; Number of cases is 1, Range of values is 0 to 0
  3208                           ; switch strategies available:
  3209                           ; Name         Instructions Cycles
  3210                           ; simple_byte            4     3 (average)
  3211                           ;	Chosen strategy is simple_byte
  3212   0039FA  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3213   0039FC  0A00               	xorlw	0	; case 0
  3214   0039FE  B4D8               	btfsc	status,2,c
  3215   003A00  EF04  F01D         	goto	l5970
  3216   003A04  EF0B  F01D         	goto	l5038
  3217   003A08                     l5970:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ; Switch size 1, requested type "simple"
  3221                           ; Number of cases is 1, Range of values is 102 to 102
  3222                           ; switch strategies available:
  3223                           ; Name         Instructions Cycles
  3224                           ; simple_byte            4     3 (average)
  3225                           ;	Chosen strategy is simple_byte
  3226   003A08  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3227   003A0A  0A66               	xorlw	102	; case 102
  3228   003A0C  B4D8               	btfsc	status,2,c
  3229   003A0E  EFDA  F01C         	goto	l5030
  3230   003A12  EF0B  F01D         	goto	l5038
  3231   003A16                     l5038:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3234   003A16  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3235   003A1A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3236   003A1E  2ADE               	incf	postinc2,f,c
  3237   003A20  0E00               	movlw	0
  3238   003A22  22DD               	addwfc	postdec2,f,c
  3239   003A24  EF2A  F01D         	goto	l1463
  3240   003A28                     l5042:
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3243   003A28  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3244   003A2C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3245   003A30  CFDE FFF6          	movff	postinc2,tblptrl
  3246   003A34  CFDD FFF7          	movff	postdec2,tblptrh
  3247   003A38                     	if	0	;tblptru may be non-zero
  3248   003A38                     	endif
  3249   003A38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3250   003A38  0E00               	movlw	low (__mediumconst shr (0+16))
  3251   003A3A  6EF8               	movwf	tblptru,c
  3252   003A3C                     	endif
  3253   003A3C  0008               	tblrd		*
  3254   003A3E  50F5               	movf	tablat,w,c
  3255   003A40  6E01               	movwf	fputc@c^0,c
  3256   003A42  6A02               	clrf	(fputc@c+1)^0,c
  3257   003A44  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3258   003A48  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3259   003A4C  EC5D  F026         	call	_fputc	;wreg free
  3260   003A50  EF0B  F01D         	goto	l5038
  3261   003A54                     l1463:
  3262   003A54  0012               	return		;funcret
  3263   003A56                     __end_of_vfpfcnvrt:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _efgtoa *****************
  3267 ;; Defined at:
  3268 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3271 ;;		 -> sprintf@f(11), 
  3272 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3273 ;;  c               1    6[BANK0 ] unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  u               4   49[BANK0 ] struct flui
  3276 ;;  g               4   45[BANK0 ] struct flui
  3277 ;;  l               4   38[BANK0 ] struct flui
  3278 ;;  h               4   34[BANK0 ] struct flui
  3279 ;;  ou              4   28[BANK0 ] struct flui
  3280 ;;  n               2   43[BANK0 ] int 
  3281 ;;  i               2   32[BANK0 ] int 
  3282 ;;  w               2   26[BANK0 ] int 
  3283 ;;  e               2   24[BANK0 ] int 
  3284 ;;  m               2   22[BANK0 ] int 
  3285 ;;  d               2   20[BANK0 ] int 
  3286 ;;  t               2   13[BANK0 ] int 
  3287 ;;  p               2   11[BANK0 ] int 
  3288 ;;  ne              2    9[BANK0 ] int 
  3289 ;;  sign            1   42[BANK0 ] unsigned char 
  3290 ;;  nmode           1   19[BANK0 ] unsigned char 
  3291 ;;  mode            1   18[BANK0 ] unsigned char 
  3292 ;;  pp              1   17[BANK0 ] unsigned char 
  3293 ;;  esign           1    0        unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3303 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;Total ram usage:       53 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 5
  3310 ;; This function calls:
  3311 ;;		___fladd
  3312 ;;		___fldiv
  3313 ;;		___fleq
  3314 ;;		___flge
  3315 ;;		___flmul
  3316 ;;		___flneg
  3317 ;;		___flsub
  3318 ;;		___fltol
  3319 ;;		___fpclassifyf
  3320 ;;		_floorf
  3321 ;;		_labs
  3322 ;;		_memcpy
  3323 ;;		_pad
  3324 ;;		_strcpy
  3325 ;; This function is called by:
  3326 ;;		_vfpfcnvrt
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text5
  3331   001874                     __ptext5:
  3332                           	callstack 0
  3333   001874                     _efgtoa:
  3334                           	callstack 22
  3335   001874                     
  3336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3337   001874  0E00               	movlw	0
  3338   001876  0100               	movlb	0	; () banked
  3339   001878  6F8A               	movwf	efgtoa@sign& (0+255),b
  3340   00187A                     
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3343   00187A  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3344   00187E  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3345   001882  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3346   001886  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3347   00188A                     
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3350   00188A  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3351   00188C  EF4C  F00C         	goto	u4580
  3352   001890  EF4A  F00C         	goto	u4581
  3353   001894                     u4581:
  3354   001894  EF60  F00C         	goto	l4708
  3355   001898                     u4580:
  3356   001898                     
  3357                           ; BSR set to: 0
  3358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3359   001898  0E01               	movlw	1
  3360   00189A  6F8A               	movwf	efgtoa@sign& (0+255),b
  3361   00189C                     
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3364   00189C  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3365   0018A0  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3366   0018A4  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3367   0018A8  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3368   0018AC  EC1A  F02F         	call	___flneg	;wreg free
  3369   0018B0  C001  F08D         	movff	?___flneg,efgtoa@g
  3370   0018B4  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3371   0018B8  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3372   0018BC  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3373   0018C0                     l4708:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3376   0018C0  0E00               	movlw	0
  3377   0018C2  0100               	movlb	0	; () banked
  3378   0018C4  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3379   0018C6  0E00               	movlw	0
  3380   0018C8  6F8B               	movwf	efgtoa@n& (0+255),b
  3381   0018CA                     
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3384   0018CA  C0E7  F07A         	movff	_width,efgtoa@w
  3385   0018CE  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  3386   0018D2                     
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3389   0018D2  518A               	movf	efgtoa@sign& (0+255),w,b
  3390   0018D4  B4D8               	btfsc	status,2,c
  3391   0018D6  EF6F  F00C         	goto	u4591
  3392   0018DA  EF71  F00C         	goto	u4590
  3393   0018DE                     u4591:
  3394   0018DE  EF85  F00C         	goto	l4722
  3395   0018E2                     u4590:
  3396   0018E2                     
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3399   0018E2  518A               	movf	efgtoa@sign& (0+255),w,b
  3400   0018E4  A4D8               	btfss	status,2,c
  3401   0018E6  EF77  F00C         	goto	u4601
  3402   0018EA  EF79  F00C         	goto	u4600
  3403   0018EE                     u4601:
  3404   0018EE  EF7F  F00C         	goto	l4718
  3405   0018F2                     u4600:
  3406   0018F2                     
  3407                           ; BSR set to: 0
  3408   0018F2  0E00               	movlw	0
  3409   0018F4  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3410   0018F6  0E2B               	movlw	43
  3411   0018F8  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3412   0018FA  EF83  F00C         	goto	l4720
  3413   0018FE                     l4718:
  3414                           
  3415                           ; BSR set to: 0
  3416   0018FE  0E00               	movlw	0
  3417   001900  6F70               	movwf	(_efgtoa$2852+1)& (0+255),b
  3418   001902  0E2D               	movlw	45
  3419   001904  6F6F               	movwf	_efgtoa$2852& (0+255),b
  3420   001906                     l4720:
  3421                           
  3422                           ; BSR set to: 0
  3423   001906  C06F  F08A         	movff	_efgtoa$2852,efgtoa@sign
  3424   00190A                     l4722:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3428   00190A  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3429   00190E  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3430   001912  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3431   001916  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3432   00191A  ECDE  F025         	call	___fpclassifyf	;wreg free
  3433   00191E  0401               	decf	?___fpclassifyf^0,w,c
  3434   001920  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3435   001922  A4D8               	btfss	status,2,c
  3436   001924  EF96  F00C         	goto	u4611
  3437   001928  EF98  F00C         	goto	u4610
  3438   00192C                     u4611:
  3439   00192C  EFCB  F00C         	goto	l4740
  3440   001930                     u4610:
  3441   001930                     
  3442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3443   001930  0100               	movlb	0	; () banked
  3444   001932  518A               	movf	efgtoa@sign& (0+255),w,b
  3445   001934  B4D8               	btfsc	status,2,c
  3446   001936  EF9F  F00C         	goto	u4621
  3447   00193A  EFA1  F00C         	goto	u4620
  3448   00193E                     u4621:
  3449   00193E  EFAA  F00C         	goto	l4732
  3450   001942                     u4620:
  3451   001942                     
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3454   001942  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3455   001946                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3458   001946  077A               	decf	efgtoa@w& (0+255),f,b
  3459   001948  A0D8               	btfss	status,0,c
  3460   00194A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3461   00194C                     
  3462                           ; BSR set to: 0
  3463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3464   00194C  0E00               	movlw	0
  3465   00194E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3466   001950  0E01               	movlw	1
  3467   001952  6F8B               	movwf	efgtoa@n& (0+255),b
  3468   001954                     l4732:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3472   001954  0EA0               	movlw	low _dbuf
  3473   001956  258B               	addwf	efgtoa@n& (0+255),w,b
  3474   001958  6E01               	movwf	strcpy@dest^0,c
  3475   00195A  0E02               	movlw	high _dbuf
  3476   00195C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3477   00195E  6E02               	movwf	(strcpy@dest+1)^0,c
  3478   001960  0E34               	movlw	low STR_2
  3479   001962  6E03               	movwf	strcpy@src^0,c
  3480   001964  0E0E               	movlw	high STR_2
  3481   001966  6E04               	movwf	(strcpy@src+1)^0,c
  3482   001968  EC57  F02E         	call	_strcpy	;wreg free
  3483   00196C                     l4734:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3486   00196C  0100               	movlb	0	; () banked
  3487   00196E  0EFD               	movlw	253
  3488   001970  277A               	addwf	efgtoa@w& (0+255),f,b
  3489   001972  0EFF               	movlw	255
  3490   001974  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3491   001976                     
  3492                           ; BSR set to: 0
  3493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3494   001976  C060  F011         	movff	efgtoa@fp,pad@fp
  3495   00197A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3496   00197E  0EA0               	movlw	low _dbuf
  3497   001980  6E13               	movwf	pad@buf^0,c
  3498   001982  0E02               	movlw	high _dbuf
  3499   001984  6E14               	movwf	(pad@buf+1)^0,c
  3500   001986  C07A  F015         	movff	efgtoa@w,pad@p
  3501   00198A  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3502   00198E  ECE1  F029         	call	_pad	;wreg free
  3503   001992  EF36  F011         	goto	l1415
  3504   001996                     l4740:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3507   001996  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3508   00199A  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3509   00199E  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3510   0019A2  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3511   0019A6  ECDE  F025         	call	___fpclassifyf	;wreg free
  3512   0019AA  5001               	movf	?___fpclassifyf^0,w,c
  3513   0019AC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3514   0019AE  A4D8               	btfss	status,2,c
  3515   0019B0  EFDC  F00C         	goto	u4631
  3516   0019B4  EFDE  F00C         	goto	u4630
  3517   0019B8                     u4631:
  3518   0019B8  EFFE  F00C         	goto	l4758
  3519   0019BC                     u4630:
  3520   0019BC                     
  3521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3522   0019BC  0100               	movlb	0	; () banked
  3523   0019BE  518A               	movf	efgtoa@sign& (0+255),w,b
  3524   0019C0  B4D8               	btfsc	status,2,c
  3525   0019C2  EFE5  F00C         	goto	u4641
  3526   0019C6  EFE7  F00C         	goto	u4640
  3527   0019CA                     u4641:
  3528   0019CA  EFF0  F00C         	goto	l4750
  3529   0019CE                     u4640:
  3530   0019CE                     
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3533   0019CE  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3534   0019D2                     
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3537   0019D2  077A               	decf	efgtoa@w& (0+255),f,b
  3538   0019D4  A0D8               	btfss	status,0,c
  3539   0019D6  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3540   0019D8                     
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3543   0019D8  0E00               	movlw	0
  3544   0019DA  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3545   0019DC  0E01               	movlw	1
  3546   0019DE  6F8B               	movwf	efgtoa@n& (0+255),b
  3547   0019E0                     l4750:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3551   0019E0  0EA0               	movlw	low _dbuf
  3552   0019E2  258B               	addwf	efgtoa@n& (0+255),w,b
  3553   0019E4  6E01               	movwf	strcpy@dest^0,c
  3554   0019E6  0E02               	movlw	high _dbuf
  3555   0019E8  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3556   0019EA  6E02               	movwf	(strcpy@dest+1)^0,c
  3557   0019EC  0E38               	movlw	low STR_5
  3558   0019EE  6E03               	movwf	strcpy@src^0,c
  3559   0019F0  0E0E               	movlw	high STR_5
  3560   0019F2  6E04               	movwf	(strcpy@src+1)^0,c
  3561   0019F4  EC57  F02E         	call	_strcpy	;wreg free
  3562   0019F8  EFB6  F00C         	goto	l4734
  3563   0019FC                     l4758:
  3564                           
  3565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3566   0019FC  0E00               	movlw	0
  3567   0019FE  0100               	movlb	0	; () banked
  3568   001A00  6F91               	movwf	efgtoa@u& (0+255),b
  3569   001A02  0E00               	movlw	0
  3570   001A04  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3571   001A06  0E80               	movlw	128
  3572   001A08  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3573   001A0A  0E3F               	movlw	63
  3574   001A0C  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3577   001A0E  0E00               	movlw	0
  3578   001A10  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3579   001A12  0E00               	movlw	0
  3580   001A14  6F78               	movwf	efgtoa@e& (0+255),b
  3581   001A16                     
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3584   001A16  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3585   001A1A  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3586   001A1E  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3587   001A22  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3588   001A26  0E00               	movlw	0
  3589   001A28  6E36               	movwf	___fleq@ff2^0,c
  3590   001A2A  0E00               	movlw	0
  3591   001A2C  6E37               	movwf	(___fleq@ff2+1)^0,c
  3592   001A2E  0E00               	movlw	0
  3593   001A30  6E38               	movwf	(___fleq@ff2+2)^0,c
  3594   001A32  0E00               	movlw	0
  3595   001A34  6E39               	movwf	(___fleq@ff2+3)^0,c
  3596   001A36  ECCD  F027         	call	___fleq	;wreg free
  3597   001A3A  B0D8               	btfsc	status,0,c
  3598   001A3C  EF22  F00D         	goto	u4651
  3599   001A40  EF24  F00D         	goto	u4650
  3600   001A44                     u4651:
  3601   001A44  EF03  F00E         	goto	l1418
  3602   001A48                     u4650:
  3603   001A48  EF31  F00D         	goto	l4766
  3604   001A4C                     l1420:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3607   001A4C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3608   001A50  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3609   001A54  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3610   001A58  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3611   001A5C                     
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3613   001A5C  0100               	movlb	0	; () banked
  3614   001A5E  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3615   001A60  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3616   001A62                     l4766:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3619   001A62  C091  F011         	movff	efgtoa@u,___flmul@b
  3620   001A66  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3621   001A6A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3622   001A6E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3623   001A72  0E00               	movlw	0
  3624   001A74  6E15               	movwf	___flmul@a^0,c
  3625   001A76  0E00               	movlw	0
  3626   001A78  6E16               	movwf	(___flmul@a+1)^0,c
  3627   001A7A  0E20               	movlw	32
  3628   001A7C  6E17               	movwf	(___flmul@a+2)^0,c
  3629   001A7E  0E41               	movlw	65
  3630   001A80  6E18               	movwf	(___flmul@a+3)^0,c
  3631   001A82  EC2F  F016         	call	___flmul	;wreg free
  3632   001A86  C011  F07C         	movff	?___flmul,efgtoa@ou
  3633   001A8A  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3634   001A8E  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3635   001A92  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3636   001A96  0100               	movlb	0	; () banked
  3637   001A98  517C               	movf	efgtoa@ou& (0+255),w,b
  3638   001A9A  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3639   001A9C  6E01               	movwf	labs@a^0,c
  3640   001A9E  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3641   001AA0  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3642   001AA2  6E02               	movwf	(labs@a+1)^0,c
  3643   001AA4  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3644   001AA6  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3645   001AA8  6E03               	movwf	(labs@a+2)^0,c
  3646   001AAA  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3647   001AAC  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3648   001AAE  6E04               	movwf	(labs@a+3)^0,c
  3649   001AB0  EC8D  F02A         	call	_labs	;wreg free
  3650   001AB4  BE04               	btfsc	(?_labs+3)^0,7,c
  3651   001AB6  EF68  F00D         	goto	u4661
  3652   001ABA  5004               	movf	(?_labs+3)^0,w,c
  3653   001ABC  1003               	iorwf	(?_labs+2)^0,w,c
  3654   001ABE  1002               	iorwf	(?_labs+1)^0,w,c
  3655   001AC0  E109               	bnz	u4660
  3656   001AC2  0E02               	movlw	2
  3657   001AC4  5C01               	subwf	?_labs^0,w,c
  3658   001AC6  A0D8               	btfss	status,0,c
  3659   001AC8  EF68  F00D         	goto	u4661
  3660   001ACC  EF6A  F00D         	goto	u4660
  3661   001AD0                     u4661:
  3662   001AD0  EF26  F00D         	goto	l1420
  3663   001AD4                     u4660:
  3664   001AD4  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3665   001AD8  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3666   001ADC  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3667   001AE0  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3668   001AE4  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3669   001AE8  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3670   001AEC  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3671   001AF0  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3672   001AF4  EC5C  F025         	call	___flge	;wreg free
  3673   001AF8  A0D8               	btfss	status,0,c
  3674   001AFA  EF81  F00D         	goto	u4671
  3675   001AFE  EF83  F00D         	goto	u4670
  3676   001B02                     u4671:
  3677   001B02  EF26  F00D         	goto	l1420
  3678   001B06                     u4670:
  3679   001B06                     
  3680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3681   001B06  0100               	movlb	0	; () banked
  3682   001B08  5191               	movf	efgtoa@u& (0+255),w,b
  3683   001B0A  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3684   001B0C  6E01               	movwf	labs@a^0,c
  3685   001B0E  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3686   001B10  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3687   001B12  6E02               	movwf	(labs@a+1)^0,c
  3688   001B14  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3689   001B16  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3690   001B18  6E03               	movwf	(labs@a+2)^0,c
  3691   001B1A  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3692   001B1C  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3693   001B1E  6E04               	movwf	(labs@a+3)^0,c
  3694   001B20  EC8D  F02A         	call	_labs	;wreg free
  3695   001B24  BE04               	btfsc	(?_labs+3)^0,7,c
  3696   001B26  EFA2  F00D         	goto	u4680
  3697   001B2A  5004               	movf	(?_labs+3)^0,w,c
  3698   001B2C  1003               	iorwf	(?_labs+2)^0,w,c
  3699   001B2E  1002               	iorwf	(?_labs+1)^0,w,c
  3700   001B30  E107               	bnz	u4681
  3701   001B32  0E02               	movlw	2
  3702   001B34  5C01               	subwf	?_labs^0,w,c
  3703   001B36  B0D8               	btfsc	status,0,c
  3704   001B38  EFA0  F00D         	goto	u4681
  3705   001B3C  EFA2  F00D         	goto	u4680
  3706   001B40                     u4681:
  3707   001B40  EFEA  F00D         	goto	l4784
  3708   001B44                     u4680:
  3709   001B44                     l4774:
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3712   001B44  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3713   001B48  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3714   001B4C  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3715   001B50  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3718   001B54  EF03  F00E         	goto	l1418
  3719   001B58                     l4776:
  3720                           
  3721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3722   001B58  C091  F032         	movff	efgtoa@u,___fldiv@b
  3723   001B5C  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3724   001B60  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3725   001B64  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3726   001B68  0E00               	movlw	0
  3727   001B6A  6E36               	movwf	___fldiv@a^0,c
  3728   001B6C  0E00               	movlw	0
  3729   001B6E  6E37               	movwf	(___fldiv@a+1)^0,c
  3730   001B70  0E20               	movlw	32
  3731   001B72  6E38               	movwf	(___fldiv@a+2)^0,c
  3732   001B74  0E41               	movlw	65
  3733   001B76  6E39               	movwf	(___fldiv@a+3)^0,c
  3734   001B78  EC44  F018         	call	___fldiv	;wreg free
  3735   001B7C  C032  F091         	movff	?___fldiv,efgtoa@u
  3736   001B80  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3737   001B84  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3738   001B88  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3739   001B8C                     
  3740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3741   001B8C  0100               	movlb	0	; () banked
  3742   001B8E  0778               	decf	efgtoa@e& (0+255),f,b
  3743   001B90  A0D8               	btfss	status,0,c
  3744   001B92  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3745   001B94                     
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3748   001B94  5191               	movf	efgtoa@u& (0+255),w,b
  3749   001B96  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3750   001B98  6E01               	movwf	labs@a^0,c
  3751   001B9A  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3752   001B9C  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3753   001B9E  6E02               	movwf	(labs@a+1)^0,c
  3754   001BA0  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3755   001BA2  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3756   001BA4  6E03               	movwf	(labs@a+2)^0,c
  3757   001BA6  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3758   001BA8  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3759   001BAA  6E04               	movwf	(labs@a+3)^0,c
  3760   001BAC  EC8D  F02A         	call	_labs	;wreg free
  3761   001BB0  BE04               	btfsc	(?_labs+3)^0,7,c
  3762   001BB2  EFE8  F00D         	goto	u4690
  3763   001BB6  5004               	movf	(?_labs+3)^0,w,c
  3764   001BB8  1003               	iorwf	(?_labs+2)^0,w,c
  3765   001BBA  1002               	iorwf	(?_labs+1)^0,w,c
  3766   001BBC  E107               	bnz	u4691
  3767   001BBE  0E02               	movlw	2
  3768   001BC0  5C01               	subwf	?_labs^0,w,c
  3769   001BC2  B0D8               	btfsc	status,0,c
  3770   001BC4  EFE6  F00D         	goto	u4691
  3771   001BC8  EFE8  F00D         	goto	u4690
  3772   001BCC                     u4691:
  3773   001BCC  EFEA  F00D         	goto	l4784
  3774   001BD0                     u4690:
  3775   001BD0  EFA2  F00D         	goto	l4774
  3776   001BD4                     l4784:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3779   001BD4  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3780   001BD8  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3781   001BDC  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3782   001BE0  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3783   001BE4  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3784   001BE8  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3785   001BEC  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3786   001BF0  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3787   001BF4  EC5C  F025         	call	___flge	;wreg free
  3788   001BF8  A0D8               	btfss	status,0,c
  3789   001BFA  EF01  F00E         	goto	u4701
  3790   001BFE  EF03  F00E         	goto	u4700
  3791   001C02                     u4701:
  3792   001C02  EFAC  F00D         	goto	l4776
  3793   001C06                     u4700:
  3794   001C06                     l1418:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3797   001C06  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3798                           
  3799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3800   001C0A  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3801   001C0E                     
  3802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3803   001C0E  0100               	movlb	0	; () banked
  3804   001C10  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3805   001C12  EF0D  F00E         	goto	u4711
  3806   001C16  EF0F  F00E         	goto	u4710
  3807   001C1A                     u4711:
  3808   001C1A  EF15  F00E         	goto	l4790
  3809   001C1E                     u4710:
  3810   001C1E                     
  3811                           ; BSR set to: 0
  3812   001C1E  C0E9  F06B         	movff	_prec,efgtoa@p
  3813   001C22  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3814   001C26  EF19  F00E         	goto	l4792
  3815   001C2A                     l4790:
  3816                           
  3817                           ; BSR set to: 0
  3818   001C2A  0E00               	movlw	0
  3819   001C2C  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3820   001C2E  0E06               	movlw	6
  3821   001C30  6F6B               	movwf	efgtoa@p& (0+255),b
  3822   001C32                     l4792:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3826   001C32  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3827   001C36  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3828   001C3A                     
  3829                           ; BSR set to: 0
  3830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3831   001C3A  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3832   001C3C  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3833   001C3E                     
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3836   001C3E  0E66               	movlw	102
  3837   001C40  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3838   001C42  A4D8               	btfss	status,2,c
  3839   001C44  EF26  F00E         	goto	u4721
  3840   001C48  EF28  F00E         	goto	u4720
  3841   001C4C                     u4721:
  3842   001C4C  EF48  F00E         	goto	l4806
  3843   001C50                     u4720:
  3844   001C50                     
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3847   001C50  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3848   001C52  EF2F  F00E         	goto	u4730
  3849   001C56  EF2D  F00E         	goto	u4731
  3850   001C5A                     u4731:
  3851   001C5A  EF3B  F00E         	goto	l4802
  3852   001C5E                     u4730:
  3853   001C5E                     
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3856   001C5E  0E00               	movlw	0
  3857   001C60  6F91               	movwf	efgtoa@u& (0+255),b
  3858   001C62  0E00               	movlw	0
  3859   001C64  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3860   001C66  0E80               	movlw	128
  3861   001C68  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3862   001C6A  0E3F               	movlw	63
  3863   001C6C  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3866   001C6E  0E00               	movlw	0
  3867   001C70  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3868   001C72  0E00               	movlw	0
  3869   001C74  6F78               	movwf	efgtoa@e& (0+255),b
  3870   001C76                     l4802:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3874   001C76  0E67               	movlw	103
  3875   001C78  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3876   001C7A  B4D8               	btfsc	status,2,c
  3877   001C7C  EF42  F00E         	goto	u4741
  3878   001C80  EF44  F00E         	goto	u4740
  3879   001C84                     u4741:
  3880   001C84  EF48  F00E         	goto	l4806
  3881   001C88                     u4740:
  3882   001C88                     
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3885   001C88  5178               	movf	efgtoa@e& (0+255),w,b
  3886   001C8A  2776               	addwf	efgtoa@m& (0+255),f,b
  3887   001C8C  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3888   001C8E  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3889   001C90                     l4806:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3893   001C90  0E00               	movlw	0
  3894   001C92  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3895   001C94  0E00               	movlw	0
  3896   001C96  6F80               	movwf	efgtoa@i& (0+255),b
  3897   001C98                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3900   001C98  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3901   001C9C  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3902   001CA0  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3903   001CA4  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3904   001CA8                     
  3905                           ; BSR set to: 0
  3906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3907   001CA8  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3908   001CAC  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3909   001CB0  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3910   001CB4  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3913   001CB8  EFD9  F00E         	goto	l4820
  3914   001CBC                     l4812:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3918   001CBC  C082  F032         	movff	efgtoa@h,___fldiv@b
  3919   001CC0  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3920   001CC4  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3921   001CC8  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3922   001CCC  C091  F036         	movff	efgtoa@u,___fldiv@a
  3923   001CD0  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3924   001CD4  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3925   001CD8  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3926   001CDC  EC44  F018         	call	___fldiv	;wreg free
  3927   001CE0  C032  F04B         	movff	?___fldiv,floorf@x
  3928   001CE4  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3929   001CE8  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3930   001CEC  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3931   001CF0  ECDA  F01F         	call	_floorf	;wreg free
  3932   001CF4  C04B  F086         	movff	?_floorf,efgtoa@l
  3933   001CF8  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3934   001CFC  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3935   001D00  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3938   001D04  C086  F001         	movff	efgtoa@l,___fltol@f1
  3939   001D08  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3940   001D0C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3941   001D10  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3942   001D14  ECD9  F024         	call	___fltol	;wreg free
  3943   001D18  C001  F074         	movff	?___fltol,efgtoa@d
  3944   001D1C  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3945   001D20                     
  3946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3947   001D20  C082  F02A         	movff	efgtoa@h,___flsub@b
  3948   001D24  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3949   001D28  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3950   001D2C  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3951   001D30  C086  F015         	movff	efgtoa@l,___flmul@a
  3952   001D34  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3953   001D38  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3954   001D3C  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3955   001D40  C091  F011         	movff	efgtoa@u,___flmul@b
  3956   001D44  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3957   001D48  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3958   001D4C  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3959   001D50  EC2F  F016         	call	___flmul	;wreg free
  3960   001D54  C011  F02E         	movff	?___flmul,___flsub@a
  3961   001D58  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3962   001D5C  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3963   001D60  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3964   001D64  EC34  F02E         	call	___flsub	;wreg free
  3965   001D68  C02A  F082         	movff	?___flsub,efgtoa@h
  3966   001D6C  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3967   001D70  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3968   001D74  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3969   001D78                     
  3970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3971   001D78  C091  F032         	movff	efgtoa@u,___fldiv@b
  3972   001D7C  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3973   001D80  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3974   001D84  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3975   001D88  0E00               	movlw	0
  3976   001D8A  6E36               	movwf	___fldiv@a^0,c
  3977   001D8C  0E00               	movlw	0
  3978   001D8E  6E37               	movwf	(___fldiv@a+1)^0,c
  3979   001D90  0E20               	movlw	32
  3980   001D92  6E38               	movwf	(___fldiv@a+2)^0,c
  3981   001D94  0E41               	movlw	65
  3982   001D96  6E39               	movwf	(___fldiv@a+3)^0,c
  3983   001D98  EC44  F018         	call	___fldiv	;wreg free
  3984   001D9C  C032  F091         	movff	?___fldiv,efgtoa@u
  3985   001DA0  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3986   001DA4  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3987   001DA8  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3988   001DAC                     
  3989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3990   001DAC  0100               	movlb	0	; () banked
  3991   001DAE  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3992   001DB0  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3993   001DB2                     l4820:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3997   001DB2  5176               	movf	efgtoa@m& (0+255),w,b
  3998   001DB4  5D80               	subwf	efgtoa@i& (0+255),w,b
  3999   001DB6  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4000   001DB8  0A80               	xorlw	128
  4001   001DBA  6F67               	movwf	??_efgtoa& (0+255),b
  4002   001DBC  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4003   001DBE  0A80               	xorlw	128
  4004   001DC0  5967               	subwfb	??_efgtoa& (0+255),w,b
  4005   001DC2  A0D8               	btfss	status,0,c
  4006   001DC4  EFE6  F00E         	goto	u4751
  4007   001DC8  EFE8  F00E         	goto	u4750
  4008   001DCC                     u4751:
  4009   001DCC  EF5E  F00E         	goto	l4812
  4010   001DD0                     u4750:
  4011   001DD0                     
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4014   001DD0  C091  F011         	movff	efgtoa@u,___flmul@b
  4015   001DD4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4016   001DD8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4017   001DDC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4018   001DE0  0E00               	movlw	0
  4019   001DE2  6E15               	movwf	___flmul@a^0,c
  4020   001DE4  0E00               	movlw	0
  4021   001DE6  6E16               	movwf	(___flmul@a+1)^0,c
  4022   001DE8  0EA0               	movlw	160
  4023   001DEA  6E17               	movwf	(___flmul@a+2)^0,c
  4024   001DEC  0E40               	movlw	64
  4025   001DEE  6E18               	movwf	(___flmul@a+3)^0,c
  4026   001DF0  EC2F  F016         	call	___flmul	;wreg free
  4027   001DF4  C011  F086         	movff	?___flmul,efgtoa@l
  4028   001DF8  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4029   001DFC  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4030   001E00  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4031   001E04                     
  4032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4033   001E04  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4034   001E08  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4035   001E0C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4036   001E10  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4037   001E14  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4038   001E18  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4039   001E1C  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4040   001E20  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4041   001E24  EC5C  F025         	call	___flge	;wreg free
  4042   001E28  B0D8               	btfsc	status,0,c
  4043   001E2A  EF19  F00F         	goto	u4761
  4044   001E2E  EF1B  F00F         	goto	u4760
  4045   001E32                     u4761:
  4046   001E32  EF26  F00F         	goto	l4828
  4047   001E36                     u4760:
  4048   001E36                     
  4049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4050   001E36  0E00               	movlw	0
  4051   001E38  0100               	movlb	0	; () banked
  4052   001E3A  6F86               	movwf	efgtoa@l& (0+255),b
  4053   001E3C  0E00               	movlw	0
  4054   001E3E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4055   001E40  0E00               	movlw	0
  4056   001E42  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4057   001E44  0E00               	movlw	0
  4058   001E46  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4061   001E48  EF4F  F00F         	goto	l4834
  4062   001E4C                     l4828:
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4065   001E4C  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4066   001E50  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4067   001E54  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4068   001E58  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4069   001E5C  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4070   001E60  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4071   001E64  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4072   001E68  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4073   001E6C  ECCD  F027         	call	___fleq	;wreg free
  4074   001E70  A0D8               	btfss	status,0,c
  4075   001E72  EF3D  F00F         	goto	u4771
  4076   001E76  EF3F  F00F         	goto	u4770
  4077   001E7A                     u4771:
  4078   001E7A  EF4F  F00F         	goto	l4834
  4079   001E7E                     u4770:
  4080   001E7E  0100               	movlb	0	; () banked
  4081   001E80  B174               	btfsc	efgtoa@d& (0+255),0,b
  4082   001E82  EF45  F00F         	goto	u4781
  4083   001E86  EF47  F00F         	goto	u4780
  4084   001E8A                     u4781:
  4085   001E8A  EF4F  F00F         	goto	l4834
  4086   001E8E                     u4780:
  4087   001E8E                     
  4088                           ; BSR set to: 0
  4089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4090   001E8E  0E00               	movlw	0
  4091   001E90  6F86               	movwf	efgtoa@l& (0+255),b
  4092   001E92  0E00               	movlw	0
  4093   001E94  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4094   001E96  0E00               	movlw	0
  4095   001E98  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4096   001E9A  0E00               	movlw	0
  4097   001E9C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4098   001E9E                     l4834:
  4099                           
  4100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4101   001E9E  C08D  F001         	movff	efgtoa@g,___fladd@b
  4102   001EA2  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4103   001EA6  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4104   001EAA  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4105   001EAE  C086  F005         	movff	efgtoa@l,___fladd@a
  4106   001EB2  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4107   001EB6  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4108   001EBA  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4109   001EBE  ECCF  F013         	call	___fladd	;wreg free
  4110   001EC2  C001  F082         	movff	?___fladd,efgtoa@h
  4111   001EC6  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4112   001ECA  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4113   001ECE  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4114   001ED2                     
  4115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4116   001ED2  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4117   001ED6  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4118   001EDA  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4119   001EDE  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4120   001EE2  0E00               	movlw	0
  4121   001EE4  6E15               	movwf	___flmul@a^0,c
  4122   001EE6  0E00               	movlw	0
  4123   001EE8  6E16               	movwf	(___flmul@a+1)^0,c
  4124   001EEA  0E20               	movlw	32
  4125   001EEC  6E17               	movwf	(___flmul@a+2)^0,c
  4126   001EEE  0E41               	movlw	65
  4127   001EF0  6E18               	movwf	(___flmul@a+3)^0,c
  4128   001EF2  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4129   001EF6  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4130   001EFA  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4131   001EFE  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4132   001F02  EC2F  F016         	call	___flmul	;wreg free
  4133   001F06  C011  F02E         	movff	?___flmul,___flge@ff2
  4134   001F0A  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4135   001F0E  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4136   001F12  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4137   001F16  EC5C  F025         	call	___flge	;wreg free
  4138   001F1A  A0D8               	btfss	status,0,c
  4139   001F1C  EF92  F00F         	goto	u4791
  4140   001F20  EF94  F00F         	goto	u4790
  4141   001F24                     u4791:
  4142   001F24  EFBD  F00F         	goto	l4846
  4143   001F28                     u4790:
  4144   001F28                     
  4145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4146   001F28  0100               	movlb	0	; () banked
  4147   001F2A  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4148   001F2C  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4149   001F2E                     
  4150                           ; BSR set to: 0
  4151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4152   001F2E  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4153   001F32  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4154   001F36  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4155   001F3A  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4156   001F3E  0E00               	movlw	0
  4157   001F40  6E15               	movwf	___flmul@a^0,c
  4158   001F42  0E00               	movlw	0
  4159   001F44  6E16               	movwf	(___flmul@a+1)^0,c
  4160   001F46  0E20               	movlw	32
  4161   001F48  6E17               	movwf	(___flmul@a+2)^0,c
  4162   001F4A  0E41               	movlw	65
  4163   001F4C  6E18               	movwf	(___flmul@a+3)^0,c
  4164   001F4E  EC2F  F016         	call	___flmul	;wreg free
  4165   001F52  C011  F07C         	movff	?___flmul,efgtoa@ou
  4166   001F56  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4167   001F5A  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4168   001F5E  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4169   001F62                     
  4170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4171   001F62  0E66               	movlw	102
  4172   001F64  0100               	movlb	0	; () banked
  4173   001F66  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4174   001F68  A4D8               	btfss	status,2,c
  4175   001F6A  EFB9  F00F         	goto	u4801
  4176   001F6E  EFBB  F00F         	goto	u4800
  4177   001F72                     u4801:
  4178   001F72  EFBD  F00F         	goto	l4846
  4179   001F76                     u4800:
  4180   001F76                     
  4181                           ; BSR set to: 0
  4182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4183   001F76  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4184   001F78  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4185   001F7A                     l4846:
  4186                           
  4187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4188   001F7A  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4189   001F7E  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4190   001F82  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4191   001F86  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4192   001F8A                     
  4193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4194   001F8A  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4195   001F8E  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4196   001F92                     
  4197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4198   001F92  0E00               	movlw	0
  4199   001F94  0100               	movlb	0	; () banked
  4200   001F96  6F71               	movwf	efgtoa@pp& (0+255),b
  4201   001F98                     
  4202                           ; BSR set to: 0
  4203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4204   001F98  0E00               	movlw	0
  4205   001F9A  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4206   001F9C  0E00               	movlw	0
  4207   001F9E  6F6D               	movwf	efgtoa@t& (0+255),b
  4208   001FA0                     
  4209                           ; BSR set to: 0
  4210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4211   001FA0  0E00               	movlw	0
  4212   001FA2  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4213   001FA4  0E00               	movlw	0
  4214   001FA6  6F80               	movwf	efgtoa@i& (0+255),b
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4217   001FA8  EFBB  F010         	goto	l4896
  4218   001FAC                     l4856:
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4222   001FAC  C082  F032         	movff	efgtoa@h,___fldiv@b
  4223   001FB0  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4224   001FB4  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4225   001FB8  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4226   001FBC  C091  F036         	movff	efgtoa@u,___fldiv@a
  4227   001FC0  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4228   001FC4  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4229   001FC8  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4230   001FCC  EC44  F018         	call	___fldiv	;wreg free
  4231   001FD0  C032  F04B         	movff	?___fldiv,floorf@x
  4232   001FD4  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4233   001FD8  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4234   001FDC  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4235   001FE0  ECDA  F01F         	call	_floorf	;wreg free
  4236   001FE4  C04B  F086         	movff	?_floorf,efgtoa@l
  4237   001FE8  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4238   001FEC  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4239   001FF0  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4240                           
  4241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4242   001FF4  C086  F001         	movff	efgtoa@l,___fltol@f1
  4243   001FF8  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4244   001FFC  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4245   002000  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4246   002004  ECD9  F024         	call	___fltol	;wreg free
  4247   002008  BE02               	btfsc	(?___fltol+1)^0,7,c
  4248   00200A  EF12  F010         	goto	u4810
  4249   00200E  5002               	movf	(?___fltol+1)^0,w,c
  4250   002010  E107               	bnz	u4811
  4251   002012  0E0A               	movlw	10
  4252   002014  5C01               	subwf	?___fltol^0,w,c
  4253   002016  B0D8               	btfsc	status,0,c
  4254   002018  EF10  F010         	goto	u4811
  4255   00201C  EF12  F010         	goto	u4810
  4256   002020                     u4811:
  4257   002020  EF22  F010         	goto	l4860
  4258   002024                     u4810:
  4259   002024  C086  F001         	movff	efgtoa@l,___fltol@f1
  4260   002028  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4261   00202C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4262   002030  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4263   002034  ECD9  F024         	call	___fltol	;wreg free
  4264   002038  C001  F074         	movff	?___fltol,efgtoa@d
  4265   00203C  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4266   002040  EF27  F010         	goto	l1448
  4267   002044                     l4860:
  4268   002044  0E00               	movlw	0
  4269   002046  0100               	movlb	0	; () banked
  4270   002048  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4271   00204A  0E09               	movlw	9
  4272   00204C  6F74               	movwf	efgtoa@d& (0+255),b
  4273   00204E                     l1448:
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4276   00204E  0100               	movlb	0	; () banked
  4277   002050  5171               	movf	efgtoa@pp& (0+255),w,b
  4278   002052  A4D8               	btfss	status,2,c
  4279   002054  EF2E  F010         	goto	u4821
  4280   002058  EF30  F010         	goto	u4820
  4281   00205C                     u4821:
  4282   00205C  EF58  F010         	goto	l4880
  4283   002060                     u4820:
  4284   002060                     
  4285                           ; BSR set to: 0
  4286   002060  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4287   002062  EF37  F010         	goto	u4830
  4288   002066  EF35  F010         	goto	u4831
  4289   00206A                     u4831:
  4290   00206A  EF58  F010         	goto	l4880
  4291   00206E                     u4830:
  4292   00206E                     
  4293                           ; BSR set to: 0
  4294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4295   00206E  0EA0               	movlw	low _dbuf
  4296   002070  258B               	addwf	efgtoa@n& (0+255),w,b
  4297   002072  6ED9               	movwf	fsr2l,c
  4298   002074  0E02               	movlw	high _dbuf
  4299   002076  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4300   002078  6EDA               	movwf	fsr2h,c
  4301   00207A  0E2E               	movlw	46
  4302   00207C  6EDF               	movwf	indf2,c
  4303   00207E                     
  4304                           ; BSR set to: 0
  4305   00207E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4306   002080  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4307   002082                     
  4308                           ; BSR set to: 0
  4309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4310   002082  077A               	decf	efgtoa@w& (0+255),f,b
  4311   002084  A0D8               	btfss	status,0,c
  4312   002086  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4313   002088                     
  4314                           ; BSR set to: 0
  4315                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4316   002088  0E01               	movlw	1
  4317   00208A  6F71               	movwf	efgtoa@pp& (0+255),b
  4318   00208C  EF58  F010         	goto	l4880
  4319   002090                     l4872:
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4323   002090  0EA0               	movlw	low _dbuf
  4324   002092  258B               	addwf	efgtoa@n& (0+255),w,b
  4325   002094  6ED9               	movwf	fsr2l,c
  4326   002096  0E02               	movlw	high _dbuf
  4327   002098  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4328   00209A  6EDA               	movwf	fsr2h,c
  4329   00209C  0E30               	movlw	48
  4330   00209E  6EDF               	movwf	indf2,c
  4331   0020A0                     
  4332                           ; BSR set to: 0
  4333   0020A0  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4334   0020A2  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4335   0020A4                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4338   0020A4  077A               	decf	efgtoa@w& (0+255),f,b
  4339   0020A6  A0D8               	btfss	status,0,c
  4340   0020A8  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4341   0020AA                     
  4342                           ; BSR set to: 0
  4343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4344   0020AA  076D               	decf	efgtoa@t& (0+255),f,b
  4345   0020AC  A0D8               	btfss	status,0,c
  4346   0020AE  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4347   0020B0                     l4880:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4351   0020B0  516D               	movf	efgtoa@t& (0+255),w,b
  4352   0020B2  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4353   0020B4  A4D8               	btfss	status,2,c
  4354   0020B6  EF5F  F010         	goto	u4841
  4355   0020BA  EF61  F010         	goto	u4840
  4356   0020BE                     u4841:
  4357   0020BE  EF48  F010         	goto	l4872
  4358   0020C2                     u4840:
  4359   0020C2                     
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4362   0020C2  0EA0               	movlw	low _dbuf
  4363   0020C4  258B               	addwf	efgtoa@n& (0+255),w,b
  4364   0020C6  6ED9               	movwf	fsr2l,c
  4365   0020C8  0E02               	movlw	high _dbuf
  4366   0020CA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4367   0020CC  6EDA               	movwf	fsr2h,c
  4368   0020CE  5174               	movf	efgtoa@d& (0+255),w,b
  4369   0020D0  0F30               	addlw	48
  4370   0020D2  6EDF               	movwf	indf2,c
  4371   0020D4                     
  4372                           ; BSR set to: 0
  4373   0020D4  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4374   0020D6  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4375   0020D8                     
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4378   0020D8  077A               	decf	efgtoa@w& (0+255),f,b
  4379   0020DA  A0D8               	btfss	status,0,c
  4380   0020DC  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4381   0020DE                     
  4382                           ; BSR set to: 0
  4383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4384   0020DE  C082  F02A         	movff	efgtoa@h,___flsub@b
  4385   0020E2  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4386   0020E6  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4387   0020EA  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4388   0020EE  C086  F015         	movff	efgtoa@l,___flmul@a
  4389   0020F2  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4390   0020F6  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4391   0020FA  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4392   0020FE  C091  F011         	movff	efgtoa@u,___flmul@b
  4393   002102  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4394   002106  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4395   00210A  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4396   00210E  EC2F  F016         	call	___flmul	;wreg free
  4397   002112  C011  F02E         	movff	?___flmul,___flsub@a
  4398   002116  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4399   00211A  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4400   00211E  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4401   002122  EC34  F02E         	call	___flsub	;wreg free
  4402   002126  C02A  F082         	movff	?___flsub,efgtoa@h
  4403   00212A  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4404   00212E  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4405   002132  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4406   002136                     
  4407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4408   002136  C091  F032         	movff	efgtoa@u,___fldiv@b
  4409   00213A  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4410   00213E  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4411   002142  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4412   002146  0E00               	movlw	0
  4413   002148  6E36               	movwf	___fldiv@a^0,c
  4414   00214A  0E00               	movlw	0
  4415   00214C  6E37               	movwf	(___fldiv@a+1)^0,c
  4416   00214E  0E20               	movlw	32
  4417   002150  6E38               	movwf	(___fldiv@a+2)^0,c
  4418   002152  0E41               	movlw	65
  4419   002154  6E39               	movwf	(___fldiv@a+3)^0,c
  4420   002156  EC44  F018         	call	___fldiv	;wreg free
  4421   00215A  C032  F091         	movff	?___fldiv,efgtoa@u
  4422   00215E  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4423   002162  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4424   002166  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4425   00216A                     
  4426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4427   00216A  0100               	movlb	0	; () banked
  4428   00216C  0769               	decf	efgtoa@ne& (0+255),f,b
  4429   00216E  A0D8               	btfss	status,0,c
  4430   002170  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4431   002172                     
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4434   002172  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4435   002174  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4436   002176                     l4896:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4440   002176  5176               	movf	efgtoa@m& (0+255),w,b
  4441   002178  5D80               	subwf	efgtoa@i& (0+255),w,b
  4442   00217A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4443   00217C  0A80               	xorlw	128
  4444   00217E  6F67               	movwf	??_efgtoa& (0+255),b
  4445   002180  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4446   002182  0A80               	xorlw	128
  4447   002184  5967               	subwfb	??_efgtoa& (0+255),w,b
  4448   002186  B0D8               	btfsc	status,0,c
  4449   002188  EFC8  F010         	goto	u4851
  4450   00218C  EFCA  F010         	goto	u4850
  4451   002190                     u4851:
  4452   002190  EFD8  F010         	goto	l4900
  4453   002194                     u4850:
  4454   002194                     
  4455                           ; BSR set to: 0
  4456   002194  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4457   002196  EFD6  F010         	goto	u4861
  4458   00219A  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4459   00219C  E109               	bnz	u4860
  4460   00219E  0E4B               	movlw	75
  4461   0021A0  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4462   0021A2  A0D8               	btfss	status,0,c
  4463   0021A4  EFD6  F010         	goto	u4861
  4464   0021A8  EFD8  F010         	goto	u4860
  4465   0021AC                     u4861:
  4466   0021AC  EFD6  F00F         	goto	l4856
  4467   0021B0                     u4860:
  4468   0021B0                     l4900:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4472   0021B0  0E00               	movlw	0
  4473   0021B2  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4474   0021B4  0E4F               	movlw	79
  4475   0021B6  6F80               	movwf	efgtoa@i& (0+255),b
  4476   0021B8                     
  4477                           ; BSR set to: 0
  4478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4479   0021B8  0EA0               	movlw	low _dbuf
  4480   0021BA  2580               	addwf	efgtoa@i& (0+255),w,b
  4481   0021BC  6ED9               	movwf	fsr2l,c
  4482   0021BE  0E02               	movlw	high _dbuf
  4483   0021C0  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4484   0021C2  6EDA               	movwf	fsr2h,c
  4485   0021C4  0E00               	movlw	0
  4486   0021C6  6EDF               	movwf	indf2,c
  4487   0021C8                     
  4488                           ; BSR set to: 0
  4489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4490   0021C8  0EA0               	movlw	low _dbuf
  4491   0021CA  6F67               	movwf	??_efgtoa& (0+255),b
  4492   0021CC  0E02               	movlw	high _dbuf
  4493   0021CE  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4494   0021D0  518B               	movf	efgtoa@n& (0+255),w,b
  4495   0021D2  5F67               	subwf	??_efgtoa& (0+255),f,b
  4496   0021D4  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4497   0021D6  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4498   0021D8  5180               	movf	efgtoa@i& (0+255),w,b
  4499   0021DA  2567               	addwf	??_efgtoa& (0+255),w,b
  4500   0021DC  6E01               	movwf	memcpy@d1^0,c
  4501   0021DE  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4502   0021E0  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4503   0021E2  6E02               	movwf	(memcpy@d1+1)^0,c
  4504   0021E4  0EA0               	movlw	low _dbuf
  4505   0021E6  6E03               	movwf	memcpy@s1^0,c
  4506   0021E8  0E02               	movlw	high _dbuf
  4507   0021EA  6E04               	movwf	(memcpy@s1+1)^0,c
  4508   0021EC  C08B  F005         	movff	efgtoa@n,memcpy@n
  4509   0021F0  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4510   0021F4  ECF7  F02C         	call	_memcpy	;wreg free
  4511   0021F8                     
  4512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4513   0021F8  0100               	movlb	0	; () banked
  4514   0021FA  518B               	movf	efgtoa@n& (0+255),w,b
  4515   0021FC  5D80               	subwf	efgtoa@i& (0+255),w,b
  4516   0021FE  6F8B               	movwf	efgtoa@n& (0+255),b
  4517   002200  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4518   002202  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4519   002204  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4520   002206                     
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4523   002206  518A               	movf	efgtoa@sign& (0+255),w,b
  4524   002208  A4D8               	btfss	status,2,c
  4525   00220A  EF09  F011         	goto	u4871
  4526   00220E  EF0C  F011         	goto	u4870
  4527   002212                     u4871:
  4528   002212  0E01               	movlw	1
  4529   002214  EF0D  F011         	goto	u4880
  4530   002218                     u4870:
  4531   002218  0E00               	movlw	0
  4532   00221A                     u4880:
  4533   00221A  6F80               	movwf	efgtoa@i& (0+255),b
  4534   00221C  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4535   00221E                     
  4536                           ; BSR set to: 0
  4537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4538   00221E  518A               	movf	efgtoa@sign& (0+255),w,b
  4539   002220  B4D8               	btfsc	status,2,c
  4540   002222  EF15  F011         	goto	u4891
  4541   002226  EF17  F011         	goto	u4890
  4542   00222A                     u4891:
  4543   00222A  EF22  F011         	goto	l4914
  4544   00222E                     u4890:
  4545   00222E                     
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4548   00222E  078B               	decf	efgtoa@n& (0+255),f,b
  4549   002230  A0D8               	btfss	status,0,c
  4550   002232  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4551   002234  0EA0               	movlw	low _dbuf
  4552   002236  258B               	addwf	efgtoa@n& (0+255),w,b
  4553   002238  6ED9               	movwf	fsr2l,c
  4554   00223A  0E02               	movlw	high _dbuf
  4555   00223C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4556   00223E  6EDA               	movwf	fsr2h,c
  4557   002240  C08A  FFDF         	movff	efgtoa@sign,indf2
  4558   002244                     l4914:
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4562   002244  5180               	movf	efgtoa@i& (0+255),w,b
  4563   002246  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4564   002248  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4565   00224A  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4566   00224C                     
  4567                           ; BSR set to: 0
  4568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4569   00224C  C060  F011         	movff	efgtoa@fp,pad@fp
  4570   002250  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4571   002254  0EA0               	movlw	low _dbuf
  4572   002256  258B               	addwf	efgtoa@n& (0+255),w,b
  4573   002258  6E13               	movwf	pad@buf^0,c
  4574   00225A  0E02               	movlw	high _dbuf
  4575   00225C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4576   00225E  6E14               	movwf	(pad@buf+1)^0,c
  4577   002260  C07A  F015         	movff	efgtoa@w,pad@p
  4578   002264  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4579   002268  ECE1  F029         	call	_pad	;wreg free
  4580   00226C                     l1415:
  4581   00226C  0012               	return		;funcret
  4582   00226E                     __end_of_efgtoa:
  4583                           	callstack 0
  4584                           
  4585 ;; *************** function _strcpy *****************
  4586 ;; Defined at:
  4587 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4590 ;;		 -> dbuf(80), 
  4591 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4592 ;;		 -> STR_5(4), STR_2(4), 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  d               2    6[COMRAM] PTR unsigned char 
  4595 ;;		 -> dbuf(80), 
  4596 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4597 ;;		 -> STR_5(4), STR_2(4), 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    0[COMRAM] PTR unsigned char 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4610 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;Total ram usage:        8 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_efgtoa
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text6
  4622   005CAE                     __ptext6:
  4623                           	callstack 0
  4624   005CAE                     _strcpy:
  4625                           	callstack 25
  4626   005CAE  C003  F005         	movff	strcpy@src,strcpy@s
  4627   005CB2  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4628   005CB6  C001  F007         	movff	strcpy@dest,strcpy@d
  4629   005CBA  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4630   005CBE                     l4520:
  4631   005CBE  C005  FFF6         	movff	strcpy@s,tblptrl
  4632   005CC2  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4633   005CC6  4A05               	infsnz	strcpy@s^0,f,c
  4634   005CC8  2A06               	incf	(strcpy@s+1)^0,f,c
  4635   005CCA                     	if	0	;tblptru may be non-zero
  4636   005CCA                     	endif
  4637   005CCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4638   005CCA  0E00               	movlw	low (__mediumconst shr (0+16))
  4639   005CCC  6EF8               	movwf	tblptru,c
  4640   005CCE                     	endif
  4641   005CCE  C007  FFD9         	movff	strcpy@d,fsr2l
  4642   005CD2  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4643   005CD6  4A07               	infsnz	strcpy@d^0,f,c
  4644   005CD8  2A08               	incf	(strcpy@d+1)^0,f,c
  4645   005CDA  0008               	tblrd		*
  4646   005CDC  CFF5 FFDF          	movff	tablat,indf2
  4647   005CE0  50DF               	movf	indf2,w,c
  4648   005CE2  A4D8               	btfss	status,2,c
  4649   005CE4  EF76  F02E         	goto	u4221
  4650   005CE8  EF78  F02E         	goto	u4220
  4651   005CEC                     u4221:
  4652   005CEC  EF5F  F02E         	goto	l4520
  4653   005CF0                     u4220:
  4654   005CF0  0012               	return		;funcret
  4655   005CF2                     __end_of_strcpy:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function _memcpy *****************
  4659 ;; Defined at:
  4660 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  d1              2    0[COMRAM] PTR void 
  4663 ;;		 -> dbuf(80), 
  4664 ;;  s1              2    2[COMRAM] PTR const void 
  4665 ;;		 -> dbuf(80), 
  4666 ;;  n               2    4[COMRAM] unsigned int 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4669 ;;		 -> dbuf(80), 
  4670 ;;  d               2    6[COMRAM] PTR unsigned char 
  4671 ;;		 -> dbuf(80), 
  4672 ;;  tmp             1   10[COMRAM] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2    0[COMRAM] PTR void 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4682 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;Total ram usage:       11 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_efgtoa
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text7
  4697   0059EE                     __ptext7:
  4698                           	callstack 0
  4699   0059EE                     _memcpy:
  4700                           	callstack 25
  4701   0059EE  C003  F009         	movff	memcpy@s1,memcpy@s
  4702   0059F2  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4703   0059F6  C001  F007         	movff	memcpy@d1,memcpy@d
  4704   0059FA  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4705   0059FE  EF11  F02D         	goto	l4564
  4706   005A02                     l4556:
  4707   005A02  C009  FFD9         	movff	memcpy@s,fsr2l
  4708   005A06  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4709   005A0A  50DF               	movf	indf2,w,c
  4710   005A0C  6E0B               	movwf	memcpy@tmp^0,c
  4711   005A0E  4A09               	infsnz	memcpy@s^0,f,c
  4712   005A10  2A0A               	incf	(memcpy@s+1)^0,f,c
  4713   005A12  C007  FFD9         	movff	memcpy@d,fsr2l
  4714   005A16  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4715   005A1A  C00B  FFDF         	movff	memcpy@tmp,indf2
  4716   005A1E  4A07               	infsnz	memcpy@d^0,f,c
  4717   005A20  2A08               	incf	(memcpy@d+1)^0,f,c
  4718   005A22                     l4564:
  4719   005A22  0605               	decf	memcpy@n^0,f,c
  4720   005A24  A0D8               	btfss	status,0,c
  4721   005A26  0606               	decf	(memcpy@n+1)^0,f,c
  4722   005A28  2805               	incf	memcpy@n^0,w,c
  4723   005A2A  E106               	bnz	u4341
  4724   005A2C  2806               	incf	(memcpy@n+1)^0,w,c
  4725   005A2E  A4D8               	btfss	status,2,c
  4726   005A30  EF1C  F02D         	goto	u4341
  4727   005A34  EF1E  F02D         	goto	u4340
  4728   005A38                     u4341:
  4729   005A38  EF01  F02D         	goto	l4556
  4730   005A3C                     u4340:
  4731   005A3C  0012               	return		;funcret
  4732   005A3E                     __end_of_memcpy:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function _labs *****************
  4736 ;; Defined at:
  4737 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  a               4    0[COMRAM] long 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  4    0[COMRAM] long 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4754 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4755 ;;Total ram usage:        8 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; Hardware stack levels required when called: 1
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_efgtoa
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text8
  4766   00551A                     __ptext8:
  4767                           	callstack 0
  4768   00551A                     _labs:
  4769                           	callstack 25
  4770   00551A  BE04               	btfsc	(labs@a+3)^0,7,c
  4771   00551C  EF9C  F02A         	goto	u4230
  4772   005520  5004               	movf	(labs@a+3)^0,w,c
  4773   005522  1003               	iorwf	(labs@a+2)^0,w,c
  4774   005524  1002               	iorwf	(labs@a+1)^0,w,c
  4775   005526  E106               	bnz	u4231
  4776   005528  0401               	decf	labs@a^0,w,c
  4777   00552A  B0D8               	btfsc	status,0,c
  4778   00552C  EF9A  F02A         	goto	u4231
  4779   005530  EF9C  F02A         	goto	u4230
  4780   005534                     u4231:
  4781   005534  EFB7  F02A         	goto	l1520
  4782   005538                     u4230:
  4783   005538  C001  F005         	movff	labs@a,??_labs
  4784   00553C  C002  F006         	movff	labs@a+1,??_labs+1
  4785   005540  C003  F007         	movff	labs@a+2,??_labs+2
  4786   005544  C004  F008         	movff	labs@a+3,??_labs+3
  4787   005548  1E05               	comf	??_labs^0,f,c
  4788   00554A  1E06               	comf	(??_labs+1)^0,f,c
  4789   00554C  1E07               	comf	(??_labs+2)^0,f,c
  4790   00554E  1E08               	comf	(??_labs+3)^0,f,c
  4791   005550  2A05               	incf	??_labs^0,f,c
  4792   005552  0E00               	movlw	0
  4793   005554  2206               	addwfc	(??_labs+1)^0,f,c
  4794   005556  2207               	addwfc	(??_labs+2)^0,f,c
  4795   005558  2208               	addwfc	(??_labs+3)^0,f,c
  4796   00555A  C005  F001         	movff	??_labs,?_labs
  4797   00555E  C006  F002         	movff	??_labs+1,?_labs+1
  4798   005562  C007  F003         	movff	??_labs+2,?_labs+2
  4799   005566  C008  F004         	movff	??_labs+3,?_labs+3
  4800   00556A  EFBF  F02A         	goto	l1523
  4801   00556E                     l1520:
  4802   00556E  C001  F001         	movff	labs@a,?_labs
  4803   005572  C002  F002         	movff	labs@a+1,?_labs+1
  4804   005576  C003  F003         	movff	labs@a+2,?_labs+2
  4805   00557A  C004  F004         	movff	labs@a+3,?_labs+3
  4806   00557E                     l1523:
  4807   00557E  0012               	return		;funcret
  4808   005580                     __end_of_labs:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _floorf *****************
  4812 ;; Defined at:
  4813 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  x               4   74[COMRAM] float 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  u               4   90[COMRAM] struct .
  4818 ;;  m               4   84[COMRAM] unsigned long 
  4819 ;;  e               2   88[COMRAM] int 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  4   74[COMRAM] float 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;Total ram usage:       20 bytes
  4834 ;; Hardware stack levels used: 1
  4835 ;; Hardware stack levels required when called: 1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_efgtoa
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text9
  4844   003FB4                     __ptext9:
  4845                           	callstack 0
  4846   003FB4                     _floorf:
  4847                           	callstack 25
  4848   003FB4  C0DF  F05B         	movff	floorf@F526,floorf@u
  4849   003FB8  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4850   003FBC  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4851   003FC0  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4852   003FC4  C04B  F05B         	movff	floorf@x,floorf@u
  4853   003FC8  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4854   003FCC  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4855   003FD0  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4856   003FD4  0E81               	movlw	129
  4857   003FD6  6E4F               	movwf	??_floorf^0,c
  4858   003FD8  0EFF               	movlw	255
  4859   003FDA  6E50               	movwf	(??_floorf+1)^0,c
  4860   003FDC  C05B  F051         	movff	floorf@u,??_floorf+2
  4861   003FE0  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4862   003FE4  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4863   003FE8  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4864   003FEC  0E18               	movlw	24
  4865   003FEE  EFFE  F01F         	goto	u4240
  4866   003FF2                     u4245:
  4867   003FF2  90D8               	bcf	status,0,c
  4868   003FF4  3254               	rrcf	(??_floorf+5)^0,f,c
  4869   003FF6  3253               	rrcf	(??_floorf+4)^0,f,c
  4870   003FF8  3252               	rrcf	(??_floorf+3)^0,f,c
  4871   003FFA  3251               	rrcf	(??_floorf+2)^0,f,c
  4872   003FFC                     u4240:
  4873   003FFC  2EE8               	decfsz	wreg,f,c
  4874   003FFE  EFF9  F01F         	goto	u4245
  4875   004002  5051               	movf	(??_floorf+2)^0,w,c
  4876   004004  244F               	addwf	??_floorf^0,w,c
  4877   004006  6E59               	movwf	floorf@e^0,c
  4878   004008  0E00               	movlw	0
  4879   00400A  2050               	addwfc	(??_floorf+1)^0,w,c
  4880   00400C  6E5A               	movwf	(floorf@e+1)^0,c
  4881   00400E  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4882   004010  EF13  F020         	goto	u4251
  4883   004014  505A               	movf	(floorf@e+1)^0,w,c
  4884   004016  E109               	bnz	u4250
  4885   004018  0E17               	movlw	23
  4886   00401A  5C59               	subwf	floorf@e^0,w,c
  4887   00401C  A0D8               	btfss	status,0,c
  4888   00401E  EF13  F020         	goto	u4251
  4889   004022  EF15  F020         	goto	u4250
  4890   004026                     u4251:
  4891   004026  EF1F  F020         	goto	l4532
  4892   00402A                     u4250:
  4893   00402A                     l4530:
  4894   00402A  C04B  F04B         	movff	floorf@x,?_floorf
  4895   00402E  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4896   004032  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4897   004036  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4898   00403A  EFE2  F020         	goto	l1509
  4899   00403E                     l4532:
  4900   00403E  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4901   004040  EF24  F020         	goto	u4261
  4902   004044  EF26  F020         	goto	u4260
  4903   004048                     u4261:
  4904   004048  EF96  F020         	goto	l4542
  4905   00404C                     u4260:
  4906   00404C  C059  F04F         	movff	floorf@e,??_floorf
  4907   004050  0EFF               	movlw	255
  4908   004052  6E50               	movwf	(??_floorf+1)^0,c
  4909   004054  0EFF               	movlw	255
  4910   004056  6E51               	movwf	(??_floorf+2)^0,c
  4911   004058  0E7F               	movlw	127
  4912   00405A  6E52               	movwf	(??_floorf+3)^0,c
  4913   00405C  0E00               	movlw	0
  4914   00405E  6E53               	movwf	(??_floorf+4)^0,c
  4915   004060                     u4275:
  4916   004060  664F               	tstfsz	??_floorf^0,c
  4917   004062  EF35  F020         	goto	u4276
  4918   004066  EF3D  F020         	goto	u4277
  4919   00406A                     u4276:
  4920   00406A  3453               	rlcf	(??_floorf+4)^0,w,c
  4921   00406C  3253               	rrcf	(??_floorf+4)^0,f,c
  4922   00406E  3252               	rrcf	(??_floorf+3)^0,f,c
  4923   004070  3251               	rrcf	(??_floorf+2)^0,f,c
  4924   004072  3250               	rrcf	(??_floorf+1)^0,f,c
  4925   004074  2E4F               	decfsz	??_floorf^0,f,c
  4926   004076  EF30  F020         	goto	u4275
  4927   00407A                     u4277:
  4928   00407A  C050  F055         	movff	??_floorf+1,floorf@m
  4929   00407E  C051  F056         	movff	??_floorf+2,floorf@m+1
  4930   004082  C052  F057         	movff	??_floorf+3,floorf@m+2
  4931   004086  C053  F058         	movff	??_floorf+4,floorf@m+3
  4932   00408A  5055               	movf	floorf@m^0,w,c
  4933   00408C  145B               	andwf	floorf@u^0,w,c
  4934   00408E  6E4F               	movwf	??_floorf^0,c
  4935   004090  5056               	movf	(floorf@m+1)^0,w,c
  4936   004092  145C               	andwf	(floorf@u+1)^0,w,c
  4937   004094  6E50               	movwf	(??_floorf+1)^0,c
  4938   004096  5057               	movf	(floorf@m+2)^0,w,c
  4939   004098  145D               	andwf	(floorf@u+2)^0,w,c
  4940   00409A  6E51               	movwf	(??_floorf+2)^0,c
  4941   00409C  5058               	movf	(floorf@m+3)^0,w,c
  4942   00409E  145E               	andwf	(floorf@u+3)^0,w,c
  4943   0040A0  6E52               	movwf	(??_floorf+3)^0,c
  4944   0040A2  504F               	movf	??_floorf^0,w,c
  4945   0040A4  1050               	iorwf	(??_floorf+1)^0,w,c
  4946   0040A6  1051               	iorwf	(??_floorf+2)^0,w,c
  4947   0040A8  1052               	iorwf	(??_floorf+3)^0,w,c
  4948   0040AA  A4D8               	btfss	status,2,c
  4949   0040AC  EF5A  F020         	goto	u4281
  4950   0040B0  EF5C  F020         	goto	u4280
  4951   0040B4                     u4281:
  4952   0040B4  EF5E  F020         	goto	l4538
  4953   0040B8                     u4280:
  4954   0040B8  EF15  F020         	goto	l4530
  4955   0040BC                     l4538:
  4956   0040BC  C05B  F04F         	movff	floorf@u,??_floorf
  4957   0040C0  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4958   0040C4  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4959   0040C8  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4960   0040CC  0E20               	movlw	32
  4961   0040CE  EF6E  F020         	goto	u4290
  4962   0040D2                     u4295:
  4963   0040D2  90D8               	bcf	status,0,c
  4964   0040D4  3252               	rrcf	(??_floorf+3)^0,f,c
  4965   0040D6  3251               	rrcf	(??_floorf+2)^0,f,c
  4966   0040D8  3250               	rrcf	(??_floorf+1)^0,f,c
  4967   0040DA  324F               	rrcf	??_floorf^0,f,c
  4968   0040DC                     u4290:
  4969   0040DC  2EE8               	decfsz	wreg,f,c
  4970   0040DE  EF69  F020         	goto	u4295
  4971   0040E2  504F               	movf	??_floorf^0,w,c
  4972   0040E4  1050               	iorwf	(??_floorf+1)^0,w,c
  4973   0040E6  1051               	iorwf	(??_floorf+2)^0,w,c
  4974   0040E8  1052               	iorwf	(??_floorf+3)^0,w,c
  4975   0040EA  B4D8               	btfsc	status,2,c
  4976   0040EC  EF7A  F020         	goto	u4301
  4977   0040F0  EF7C  F020         	goto	u4300
  4978   0040F4                     u4301:
  4979   0040F4  EF84  F020         	goto	l1512
  4980   0040F8                     u4300:
  4981   0040F8  5055               	movf	floorf@m^0,w,c
  4982   0040FA  265B               	addwf	floorf@u^0,f,c
  4983   0040FC  5056               	movf	(floorf@m+1)^0,w,c
  4984   0040FE  225C               	addwfc	(floorf@u+1)^0,f,c
  4985   004100  5057               	movf	(floorf@m+2)^0,w,c
  4986   004102  225D               	addwfc	(floorf@u+2)^0,f,c
  4987   004104  5058               	movf	(floorf@m+3)^0,w,c
  4988   004106  225E               	addwfc	(floorf@u+3)^0,f,c
  4989   004108                     l1512:
  4990   004108  1C55               	comf	floorf@m^0,w,c
  4991   00410A  6E4F               	movwf	??_floorf^0,c
  4992   00410C  1C56               	comf	(floorf@m+1)^0,w,c
  4993   00410E  6E50               	movwf	(??_floorf+1)^0,c
  4994   004110  1C57               	comf	(floorf@m+2)^0,w,c
  4995   004112  6E51               	movwf	(??_floorf+2)^0,c
  4996   004114  1C58               	comf	(floorf@m+3)^0,w,c
  4997   004116  6E52               	movwf	(??_floorf+3)^0,c
  4998   004118  504F               	movf	??_floorf^0,w,c
  4999   00411A  165B               	andwf	floorf@u^0,f,c
  5000   00411C  5050               	movf	(??_floorf+1)^0,w,c
  5001   00411E  165C               	andwf	(floorf@u+1)^0,f,c
  5002   004120  5051               	movf	(??_floorf+2)^0,w,c
  5003   004122  165D               	andwf	(floorf@u+2)^0,f,c
  5004   004124  5052               	movf	(??_floorf+3)^0,w,c
  5005   004126  165E               	andwf	(floorf@u+3)^0,f,c
  5006   004128  EFDA  F020         	goto	l4550
  5007   00412C                     l4542:
  5008   00412C  C05B  F04F         	movff	floorf@u,??_floorf
  5009   004130  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5010   004134  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5011   004138  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5012   00413C  0E20               	movlw	32
  5013   00413E  EFA6  F020         	goto	u4310
  5014   004142                     u4315:
  5015   004142  90D8               	bcf	status,0,c
  5016   004144  3252               	rrcf	(??_floorf+3)^0,f,c
  5017   004146  3251               	rrcf	(??_floorf+2)^0,f,c
  5018   004148  3250               	rrcf	(??_floorf+1)^0,f,c
  5019   00414A  324F               	rrcf	??_floorf^0,f,c
  5020   00414C                     u4310:
  5021   00414C  2EE8               	decfsz	wreg,f,c
  5022   00414E  EFA1  F020         	goto	u4315
  5023   004152  504F               	movf	??_floorf^0,w,c
  5024   004154  1050               	iorwf	(??_floorf+1)^0,w,c
  5025   004156  1051               	iorwf	(??_floorf+2)^0,w,c
  5026   004158  1052               	iorwf	(??_floorf+3)^0,w,c
  5027   00415A  A4D8               	btfss	status,2,c
  5028   00415C  EFB2  F020         	goto	u4321
  5029   004160  EFB4  F020         	goto	u4320
  5030   004164                     u4321:
  5031   004164  EFBE  F020         	goto	l4546
  5032   004168                     u4320:
  5033   004168  0E00               	movlw	0
  5034   00416A  6E5B               	movwf	floorf@u^0,c
  5035   00416C  0E00               	movlw	0
  5036   00416E  6E5C               	movwf	(floorf@u+1)^0,c
  5037   004170  0E00               	movlw	0
  5038   004172  6E5D               	movwf	(floorf@u+2)^0,c
  5039   004174  0E00               	movlw	0
  5040   004176  6E5E               	movwf	(floorf@u+3)^0,c
  5041   004178  EFDA  F020         	goto	l4550
  5042   00417C                     l4546:
  5043   00417C  90D8               	bcf	status,0,c
  5044   00417E  345B               	rlcf	floorf@u^0,w,c
  5045   004180  6E4F               	movwf	??_floorf^0,c
  5046   004182  345C               	rlcf	(floorf@u+1)^0,w,c
  5047   004184  6E50               	movwf	(??_floorf+1)^0,c
  5048   004186  345D               	rlcf	(floorf@u+2)^0,w,c
  5049   004188  6E51               	movwf	(??_floorf+2)^0,c
  5050   00418A  345E               	rlcf	(floorf@u+3)^0,w,c
  5051   00418C  6E52               	movwf	(??_floorf+3)^0,c
  5052   00418E  504F               	movf	??_floorf^0,w,c
  5053   004190  1050               	iorwf	(??_floorf+1)^0,w,c
  5054   004192  1051               	iorwf	(??_floorf+2)^0,w,c
  5055   004194  1052               	iorwf	(??_floorf+3)^0,w,c
  5056   004196  B4D8               	btfsc	status,2,c
  5057   004198  EFD0  F020         	goto	u4331
  5058   00419C  EFD2  F020         	goto	u4330
  5059   0041A0                     u4331:
  5060   0041A0  EFDA  F020         	goto	l4550
  5061   0041A4                     u4330:
  5062   0041A4  0E00               	movlw	0
  5063   0041A6  6E5B               	movwf	floorf@u^0,c
  5064   0041A8  0E00               	movlw	0
  5065   0041AA  6E5C               	movwf	(floorf@u+1)^0,c
  5066   0041AC  0E80               	movlw	128
  5067   0041AE  6E5D               	movwf	(floorf@u+2)^0,c
  5068   0041B0  0EBF               	movlw	191
  5069   0041B2  6E5E               	movwf	(floorf@u+3)^0,c
  5070   0041B4                     l4550:
  5071   0041B4  C05B  F04B         	movff	floorf@u,?_floorf
  5072   0041B8  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5073   0041BC  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5074   0041C0  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5075   0041C4                     l1509:
  5076   0041C4  0012               	return		;funcret
  5077   0041C6                     __end_of_floorf:
  5078                           	callstack 0
  5079                           
  5080 ;; *************** function ___fpclassifyf *****************
  5081 ;; Defined at:
  5082 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  x               4    0[COMRAM] float 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  u               4   10[COMRAM] struct .
  5087 ;;  e               2    8[COMRAM] int 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  2    0[COMRAM] int 
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;Total ram usage:       14 bytes
  5102 ;; Hardware stack levels used: 1
  5103 ;; Hardware stack levels required when called: 1
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_efgtoa
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text10
  5112   004BBC                     __ptext10:
  5113                           	callstack 0
  5114   004BBC                     ___fpclassifyf:
  5115                           	callstack 25
  5116   004BBC  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5117   004BC0  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5118   004BC4  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5119   004BC8  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5120   004BCC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5121   004BD0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5122   004BD4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5123   004BD8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5124   004BDC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5125   004BE0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5126   004BE4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5127   004BE8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5128   004BEC  0E18               	movlw	24
  5129   004BEE  EFFE  F025         	goto	u4150
  5130   004BF2                     u4155:
  5131   004BF2  90D8               	bcf	status,0,c
  5132   004BF4  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5133   004BF6  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5134   004BF8  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5135   004BFA  3205               	rrcf	??___fpclassifyf^0,f,c
  5136   004BFC                     u4150:
  5137   004BFC  2EE8               	decfsz	wreg,f,c
  5138   004BFE  EFF9  F025         	goto	u4155
  5139   004C02  5005               	movf	??___fpclassifyf^0,w,c
  5140   004C04  6E09               	movwf	___fpclassifyf@e^0,c
  5141   004C06  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5142   004C08  5009               	movf	___fpclassifyf@e^0,w,c
  5143   004C0A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5144   004C0C  A4D8               	btfss	status,2,c
  5145   004C0E  EF0B  F026         	goto	u4161
  5146   004C12  EF0D  F026         	goto	u4160
  5147   004C16                     u4161:
  5148   004C16  EF2D  F026         	goto	l4508
  5149   004C1A                     u4160:
  5150   004C1A  90D8               	bcf	status,0,c
  5151   004C1C  340B               	rlcf	___fpclassifyf@u^0,w,c
  5152   004C1E  6E05               	movwf	??___fpclassifyf^0,c
  5153   004C20  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5154   004C22  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5155   004C24  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5156   004C26  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5157   004C28  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5158   004C2A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5159   004C2C  5005               	movf	??___fpclassifyf^0,w,c
  5160   004C2E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5161   004C30  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5162   004C32  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5163   004C34  A4D8               	btfss	status,2,c
  5164   004C36  EF1F  F026         	goto	u4171
  5165   004C3A  EF21  F026         	goto	u4170
  5166   004C3E                     u4171:
  5167   004C3E  EF27  F026         	goto	l4504
  5168   004C42                     u4170:
  5169   004C42  0E00               	movlw	0
  5170   004C44  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5171   004C46  0E02               	movlw	2
  5172   004C48  6E01               	movwf	?___fpclassifyf^0,c
  5173   004C4A  EF5C  F026         	goto	l1495
  5174   004C4E                     l4504:
  5175   004C4E  0E00               	movlw	0
  5176   004C50  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5177   004C52  0E03               	movlw	3
  5178   004C54  6E01               	movwf	?___fpclassifyf^0,c
  5179   004C56  EF5C  F026         	goto	l1495
  5180   004C5A                     l4508:
  5181   004C5A  2809               	incf	___fpclassifyf@e^0,w,c
  5182   004C5C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5183   004C5E  A4D8               	btfss	status,2,c
  5184   004C60  EF34  F026         	goto	u4181
  5185   004C64  EF36  F026         	goto	u4180
  5186   004C68                     u4181:
  5187   004C68  EF58  F026         	goto	l4514
  5188   004C6C                     u4180:
  5189   004C6C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5190   004C70  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5191   004C74  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5192   004C78  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5193   004C7C  0E09               	movlw	9
  5194   004C7E                     u4195:
  5195   004C7E  90D8               	bcf	status,0,c
  5196   004C80  3605               	rlcf	??___fpclassifyf^0,f,c
  5197   004C82  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5198   004C84  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5199   004C86  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5200   004C88  2EE8               	decfsz	wreg,f,c
  5201   004C8A  EF3F  F026         	goto	u4195
  5202   004C8E  5005               	movf	??___fpclassifyf^0,w,c
  5203   004C90  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5204   004C92  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5205   004C94  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5206   004C96  B4D8               	btfsc	status,2,c
  5207   004C98  EF50  F026         	goto	u4201
  5208   004C9C  EF53  F026         	goto	u4200
  5209   004CA0                     u4201:
  5210   004CA0  0E01               	movlw	1
  5211   004CA2  EF54  F026         	goto	u4210
  5212   004CA6                     u4200:
  5213   004CA6  0E00               	movlw	0
  5214   004CA8                     u4210:
  5215   004CA8  6E01               	movwf	?___fpclassifyf^0,c
  5216   004CAA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5217   004CAC  EF5C  F026         	goto	l1495
  5218   004CB0                     l4514:
  5219   004CB0  0E00               	movlw	0
  5220   004CB2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5221   004CB4  0E04               	movlw	4
  5222   004CB6  6E01               	movwf	?___fpclassifyf^0,c
  5223   004CB8                     l1495:
  5224   004CB8  0012               	return		;funcret
  5225   004CBA                     __end_of___fpclassifyf:
  5226                           	callstack 0
  5227                           
  5228 ;; *************** function ___fltol *****************
  5229 ;; Defined at:
  5230 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  f1              4    0[COMRAM] int 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  exp1            1    9[COMRAM] unsigned char 
  5235 ;;  sign1           1    8[COMRAM] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  4    0[COMRAM] long 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;Total ram usage:       10 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_reverseOneBlock
  5256 ;;		_ForwardOneBlock
  5257 ;;		_Forwardhalfblock
  5258 ;;		_efgtoa
  5259 ;;		_Backhalfblock
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text11
  5264   0049B2                     __ptext11:
  5265                           	callstack 0
  5266   0049B2                     ___fltol:
  5267                           	callstack 25
  5268   0049B2  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5269   0049B4  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5270   0049B6  6E0A               	movwf	___fltol@exp1^0,c
  5271   0049B8  500A               	movf	___fltol@exp1^0,w,c
  5272   0049BA  A4D8               	btfss	status,2,c
  5273   0049BC  EFE2  F024         	goto	u4051
  5274   0049C0  EFE4  F024         	goto	u4050
  5275   0049C4                     u4051:
  5276   0049C4  EFEE  F024         	goto	l4440
  5277   0049C8                     u4050:
  5278   0049C8                     l4436:
  5279   0049C8  0E00               	movlw	0
  5280   0049CA  6E01               	movwf	?___fltol^0,c
  5281   0049CC  0E00               	movlw	0
  5282   0049CE  6E02               	movwf	(?___fltol+1)^0,c
  5283   0049D0  0E00               	movlw	0
  5284   0049D2  6E03               	movwf	(?___fltol+2)^0,c
  5285   0049D4  0E00               	movlw	0
  5286   0049D6  6E04               	movwf	(?___fltol+3)^0,c
  5287   0049D8  EF5B  F025         	goto	l968
  5288   0049DC                     l4440:
  5289   0049DC  C001  F005         	movff	___fltol@f1,??___fltol
  5290   0049E0  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5291   0049E4  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5292   0049E8  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5293   0049EC  0E20               	movlw	32
  5294   0049EE  EFFE  F024         	goto	u4060
  5295   0049F2                     u4065:
  5296   0049F2  90D8               	bcf	status,0,c
  5297   0049F4  3208               	rrcf	(??___fltol+3)^0,f,c
  5298   0049F6  3207               	rrcf	(??___fltol+2)^0,f,c
  5299   0049F8  3206               	rrcf	(??___fltol+1)^0,f,c
  5300   0049FA  3205               	rrcf	??___fltol^0,f,c
  5301   0049FC                     u4060:
  5302   0049FC  2EE8               	decfsz	wreg,f,c
  5303   0049FE  EFF9  F024         	goto	u4065
  5304   004A02  5005               	movf	??___fltol^0,w,c
  5305   004A04  6E09               	movwf	___fltol@sign1^0,c
  5306   004A06  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5307   004A08  0EFF               	movlw	255
  5308   004A0A  1601               	andwf	___fltol@f1^0,f,c
  5309   004A0C  0EFF               	movlw	255
  5310   004A0E  1602               	andwf	(___fltol@f1+1)^0,f,c
  5311   004A10  0EFF               	movlw	255
  5312   004A12  1603               	andwf	(___fltol@f1+2)^0,f,c
  5313   004A14  0E00               	movlw	0
  5314   004A16  1604               	andwf	(___fltol@f1+3)^0,f,c
  5315   004A18  0E96               	movlw	150
  5316   004A1A  5E0A               	subwf	___fltol@exp1^0,f,c
  5317   004A1C  BE0A               	btfsc	___fltol@exp1^0,7,c
  5318   004A1E  EF15  F025         	goto	u4070
  5319   004A22  EF13  F025         	goto	u4071
  5320   004A26                     u4071:
  5321   004A26  EF2B  F025         	goto	l4460
  5322   004A2A                     u4070:
  5323   004A2A  500A               	movf	___fltol@exp1^0,w,c
  5324   004A2C  0A80               	xorlw	128
  5325   004A2E  0F97               	addlw	151
  5326   004A30  B0D8               	btfsc	status,0,c
  5327   004A32  EF1D  F025         	goto	u4081
  5328   004A36  EF1F  F025         	goto	u4080
  5329   004A3A                     u4081:
  5330   004A3A  EF21  F025         	goto	l4456
  5331   004A3E                     u4080:
  5332   004A3E  EFE4  F024         	goto	l4436
  5333   004A42                     l4456:
  5334   004A42  90D8               	bcf	status,0,c
  5335   004A44  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5336   004A46  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5337   004A48  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5338   004A4A  3201               	rrcf	___fltol@f1^0,f,c
  5339   004A4C  3E0A               	incfsz	___fltol@exp1^0,f,c
  5340   004A4E  EF21  F025         	goto	l4456
  5341   004A52  EF43  F025         	goto	l4470
  5342   004A56                     l4460:
  5343   004A56  0E1F               	movlw	31
  5344   004A58  640A               	cpfsgt	___fltol@exp1^0,c
  5345   004A5A  EF31  F025         	goto	u4091
  5346   004A5E  EF33  F025         	goto	u4090
  5347   004A62                     u4091:
  5348   004A62  EF3B  F025         	goto	l4468
  5349   004A66                     u4090:
  5350   004A66  EFE4  F024         	goto	l4436
  5351   004A6A                     l4466:
  5352   004A6A  90D8               	bcf	status,0,c
  5353   004A6C  3601               	rlcf	___fltol@f1^0,f,c
  5354   004A6E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5355   004A70  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5356   004A72  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5357   004A74  060A               	decf	___fltol@exp1^0,f,c
  5358   004A76                     l4468:
  5359   004A76  500A               	movf	___fltol@exp1^0,w,c
  5360   004A78  A4D8               	btfss	status,2,c
  5361   004A7A  EF41  F025         	goto	u4101
  5362   004A7E  EF43  F025         	goto	u4100
  5363   004A82                     u4101:
  5364   004A82  EF35  F025         	goto	l4466
  5365   004A86                     u4100:
  5366   004A86                     l4470:
  5367   004A86  5009               	movf	___fltol@sign1^0,w,c
  5368   004A88  B4D8               	btfsc	status,2,c
  5369   004A8A  EF49  F025         	goto	u4111
  5370   004A8E  EF4B  F025         	goto	u4110
  5371   004A92                     u4111:
  5372   004A92  EF53  F025         	goto	l4474
  5373   004A96                     u4110:
  5374   004A96  1E04               	comf	(___fltol@f1+3)^0,f,c
  5375   004A98  1E03               	comf	(___fltol@f1+2)^0,f,c
  5376   004A9A  1E02               	comf	(___fltol@f1+1)^0,f,c
  5377   004A9C  6C01               	negf	___fltol@f1^0,c
  5378   004A9E  0E00               	movlw	0
  5379   004AA0  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5380   004AA2  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5381   004AA4  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5382   004AA6                     l4474:
  5383   004AA6  C001  F001         	movff	___fltol@f1,?___fltol
  5384   004AAA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5385   004AAE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5386   004AB2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5387   004AB6                     l968:
  5388   004AB6  0012               	return		;funcret
  5389   004AB8                     __end_of___fltol:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function ___flneg *****************
  5393 ;; Defined at:
  5394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  f1              4    0[COMRAM] long 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  4    0[COMRAM] long 
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;Total ram usage:        4 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 1
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		_efgtoa
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text12
  5423   005E34                     __ptext12:
  5424                           	callstack 0
  5425   005E34                     ___flneg:
  5426                           	callstack 25
  5427   005E34  5001               	movf	___flneg@f1^0,w,c
  5428   005E36  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5429   005E38  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5430   005E3A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5431   005E3C  B4D8               	btfsc	status,2,c
  5432   005E3E  EF23  F02F         	goto	u4041
  5433   005E42  EF25  F02F         	goto	u4040
  5434   005E46                     u4041:
  5435   005E46  EF2D  F02F         	goto	l4430
  5436   005E4A                     u4040:
  5437   005E4A  0E00               	movlw	0
  5438   005E4C  1A01               	xorwf	___flneg@f1^0,f,c
  5439   005E4E  0E00               	movlw	0
  5440   005E50  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5441   005E52  0E00               	movlw	0
  5442   005E54  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5443   005E56  0E80               	movlw	128
  5444   005E58  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5445   005E5A                     l4430:
  5446   005E5A  C001  F001         	movff	___flneg@f1,?___flneg
  5447   005E5E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5448   005E62  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5449   005E66  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5450   005E6A  0012               	return		;funcret
  5451   005E6C                     __end_of___flneg:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function _dtoa *****************
  5455 ;; Defined at:
  5456 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5459 ;;		 -> sprintf@f(11), 
  5460 ;;  d               8   29[COMRAM] long long 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  n               8   51[COMRAM] long long 
  5463 ;;  i               2   59[COMRAM] int 
  5464 ;;  w               2   49[COMRAM] int 
  5465 ;;  p               2   47[COMRAM] int 
  5466 ;;  s               1   61[COMRAM] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5476 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5477 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5478 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5479 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;Total ram usage:       35 bytes
  5481 ;; Hardware stack levels used: 1
  5482 ;; Hardware stack levels required when called: 5
  5483 ;; This function calls:
  5484 ;;		___aodiv
  5485 ;;		___aomod
  5486 ;;		_abs
  5487 ;;		_pad
  5488 ;; This function is called by:
  5489 ;;		_vfpfcnvrt
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text13
  5494   003D36                     __ptext13:
  5495                           	callstack 0
  5496   003D36                     _dtoa:
  5497                           	callstack 22
  5498   003D36                     
  5499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5500   003D36  C01E  F034         	movff	dtoa@d,dtoa@n
  5501   003D3A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5502   003D3E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5503   003D42  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5504   003D46  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5505   003D4A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5506   003D4E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5507   003D52  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5508   003D56                     
  5509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5510   003D56  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5511   003D58  EFB0  F01E         	goto	u4481
  5512   003D5C  EFB3  F01E         	goto	u4480
  5513   003D60                     u4481:
  5514   003D60  0E01               	movlw	1
  5515   003D62  EFB4  F01E         	goto	u4490
  5516   003D66                     u4480:
  5517   003D66  0E00               	movlw	0
  5518   003D68                     u4490:
  5519   003D68  6E3E               	movwf	dtoa@s^0,c
  5520   003D6A                     
  5521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5522   003D6A  503E               	movf	dtoa@s^0,w,c
  5523   003D6C  B4D8               	btfsc	status,2,c
  5524   003D6E  EFBB  F01E         	goto	u4501
  5525   003D72  EFBD  F01E         	goto	u4500
  5526   003D76                     u4501:
  5527   003D76  EFCD  F01E         	goto	l4654
  5528   003D7A                     u4500:
  5529   003D7A                     
  5530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5531   003D7A  1E3B               	comf	(dtoa@n+7)^0,f,c
  5532   003D7C  1E3A               	comf	(dtoa@n+6)^0,f,c
  5533   003D7E  1E39               	comf	(dtoa@n+5)^0,f,c
  5534   003D80  1E38               	comf	(dtoa@n+4)^0,f,c
  5535   003D82  1E37               	comf	(dtoa@n+3)^0,f,c
  5536   003D84  1E36               	comf	(dtoa@n+2)^0,f,c
  5537   003D86  1E35               	comf	(dtoa@n+1)^0,f,c
  5538   003D88  6C34               	negf	dtoa@n^0,c
  5539   003D8A  0E00               	movlw	0
  5540   003D8C  2235               	addwfc	(dtoa@n+1)^0,f,c
  5541   003D8E  2236               	addwfc	(dtoa@n+2)^0,f,c
  5542   003D90  2237               	addwfc	(dtoa@n+3)^0,f,c
  5543   003D92  2238               	addwfc	(dtoa@n+4)^0,f,c
  5544   003D94  2239               	addwfc	(dtoa@n+5)^0,f,c
  5545   003D96  223A               	addwfc	(dtoa@n+6)^0,f,c
  5546   003D98  223B               	addwfc	(dtoa@n+7)^0,f,c
  5547   003D9A                     l4654:
  5548                           
  5549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5550   003D9A  0100               	movlb	0	; () banked
  5551   003D9C  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5552   003D9E  EFDB  F01E         	goto	u4510
  5553   003DA2  51EA               	movf	(_prec+1)& (0+255),w,b
  5554   003DA4  E106               	bnz	u4511
  5555   003DA6  05E9               	decf	_prec& (0+255),w,b
  5556   003DA8  B0D8               	btfsc	status,0,c
  5557   003DAA  EFD9  F01E         	goto	u4511
  5558   003DAE  EFDB  F01E         	goto	u4510
  5559   003DB2                     u4511:
  5560   003DB2  EFE1  F01E         	goto	l1390
  5561   003DB6                     u4510:
  5562   003DB6                     
  5563                           ; BSR set to: 0
  5564   003DB6  0E00               	movlw	0
  5565   003DB8  6E31               	movwf	(dtoa@p+1)^0,c
  5566   003DBA  0E01               	movlw	1
  5567   003DBC  6E30               	movwf	dtoa@p^0,c
  5568   003DBE  EFE5  F01E         	goto	l1392
  5569   003DC2                     l1390:
  5570                           
  5571                           ; BSR set to: 0
  5572   003DC2  C0E9  F030         	movff	_prec,dtoa@p
  5573   003DC6  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5574   003DCA                     l1392:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5578   003DCA  C0E7  F032         	movff	_width,dtoa@w
  5579   003DCE  C0E8  F033         	movff	_width+1,dtoa@w+1
  5580   003DD2                     
  5581                           ; BSR set to: 0
  5582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5583   003DD2  503E               	movf	dtoa@s^0,w,c
  5584   003DD4  B4D8               	btfsc	status,2,c
  5585   003DD6  EFEF  F01E         	goto	u4521
  5586   003DDA  EFF1  F01E         	goto	u4520
  5587   003DDE                     u4521:
  5588   003DDE  EF08  F01F         	goto	l1393
  5589   003DE2                     u4520:
  5590   003DE2                     
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5593   003DE2  0632               	decf	dtoa@w^0,f,c
  5594   003DE4  A0D8               	btfss	status,0,c
  5595   003DE6  0633               	decf	(dtoa@w+1)^0,f,c
  5596   003DE8                     
  5597                           ; BSR set to: 0
  5598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5599   003DE8  503E               	movf	dtoa@s^0,w,c
  5600   003DEA  A4D8               	btfss	status,2,c
  5601   003DEC  EFFA  F01E         	goto	u4531
  5602   003DF0  EFFC  F01E         	goto	u4530
  5603   003DF4                     u4531:
  5604   003DF4  EF02  F01F         	goto	l4666
  5605   003DF8                     u4530:
  5606   003DF8                     
  5607                           ; BSR set to: 0
  5608   003DF8  0E00               	movlw	0
  5609   003DFA  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5610   003DFC  0E2B               	movlw	43
  5611   003DFE  6E2E               	movwf	_dtoa$2821^0,c
  5612   003E00  EF06  F01F         	goto	l4668
  5613   003E04                     l4666:
  5614                           
  5615                           ; BSR set to: 0
  5616   003E04  0E00               	movlw	0
  5617   003E06  6E2F               	movwf	(_dtoa$2821+1)^0,c
  5618   003E08  0E2D               	movlw	45
  5619   003E0A  6E2E               	movwf	_dtoa$2821^0,c
  5620   003E0C                     l4668:
  5621                           
  5622                           ; BSR set to: 0
  5623   003E0C  C02E  F03E         	movff	_dtoa$2821,dtoa@s
  5624   003E10                     l1393:
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5628   003E10  0E00               	movlw	0
  5629   003E12  6E3D               	movwf	(dtoa@i+1)^0,c
  5630   003E14  0E4F               	movlw	79
  5631   003E16  6E3C               	movwf	dtoa@i^0,c
  5632   003E18                     
  5633                           ; BSR set to: 0
  5634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5635   003E18  0E00               	movlw	0
  5636   003E1A  0102               	movlb	2	; () banked
  5637   003E1C  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5638                           
  5639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5640   003E1E  EF8D  F01F         	goto	l4682
  5641   003E22                     l4672:
  5642                           
  5643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5644   003E22  063C               	decf	dtoa@i^0,f,c
  5645   003E24  A0D8               	btfss	status,0,c
  5646   003E26  063D               	decf	(dtoa@i+1)^0,f,c
  5647   003E28                     
  5648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5649   003E28  0EA0               	movlw	low _dbuf
  5650   003E2A  243C               	addwf	dtoa@i^0,w,c
  5651   003E2C  6ED9               	movwf	fsr2l,c
  5652   003E2E  0E02               	movlw	high _dbuf
  5653   003E30  203D               	addwfc	(dtoa@i+1)^0,w,c
  5654   003E32  6EDA               	movwf	fsr2h,c
  5655   003E34  C034  F001         	movff	dtoa@n,___aomod@dividend
  5656   003E38  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5657   003E3C  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5658   003E40  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5659   003E44  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5660   003E48  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5661   003E4C  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5662   003E50  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5663   003E54  0E0A               	movlw	10
  5664   003E56  6E09               	movwf	___aomod@divisor^0,c
  5665   003E58  0E00               	movlw	0
  5666   003E5A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5667   003E5C  0E00               	movlw	0
  5668   003E5E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5669   003E60  0E00               	movlw	0
  5670   003E62  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5671   003E64  0E00               	movlw	0
  5672   003E66  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5673   003E68  0E00               	movlw	0
  5674   003E6A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5675   003E6C  0E00               	movlw	0
  5676   003E6E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5677   003E70  0E00               	movlw	0
  5678   003E72  6E10               	movwf	(___aomod@divisor+7)^0,c
  5679   003E74  EC27  F024         	call	___aomod	;wreg free
  5680   003E78  C001  F026         	movff	?___aomod,??_dtoa
  5681   003E7C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5682   003E80  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5683   003E84  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5684   003E88  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5685   003E8C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5686   003E90  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5687   003E94  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5688   003E98  C026  F013         	movff	??_dtoa,abs@a
  5689   003E9C  C027  F014         	movff	??_dtoa+1,abs@a+1
  5690   003EA0  ECBC  F02E         	call	_abs	;wreg free
  5691   003EA4  5013               	movf	?_abs^0,w,c
  5692   003EA6  0F30               	addlw	48
  5693   003EA8  6EDF               	movwf	indf2,c
  5694   003EAA                     
  5695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5696   003EAA  0630               	decf	dtoa@p^0,f,c
  5697   003EAC  A0D8               	btfss	status,0,c
  5698   003EAE  0631               	decf	(dtoa@p+1)^0,f,c
  5699   003EB0                     
  5700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5701   003EB0  0632               	decf	dtoa@w^0,f,c
  5702   003EB2  A0D8               	btfss	status,0,c
  5703   003EB4  0633               	decf	(dtoa@w+1)^0,f,c
  5704   003EB6                     
  5705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5706   003EB6  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5707   003EBA  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5708   003EBE  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5709   003EC2  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5710   003EC6  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5711   003ECA  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5712   003ECE  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5713   003ED2  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5714   003ED6  0E0A               	movlw	10
  5715   003ED8  6E09               	movwf	___aodiv@divisor^0,c
  5716   003EDA  0E00               	movlw	0
  5717   003EDC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5718   003EDE  0E00               	movlw	0
  5719   003EE0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5720   003EE2  0E00               	movlw	0
  5721   003EE4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5722   003EE6  0E00               	movlw	0
  5723   003EE8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5724   003EEA  0E00               	movlw	0
  5725   003EEC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5726   003EEE  0E00               	movlw	0
  5727   003EF0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5728   003EF2  0E00               	movlw	0
  5729   003EF4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5730   003EF6  ECAD  F022         	call	___aodiv	;wreg free
  5731   003EFA  C001  F034         	movff	?___aodiv,dtoa@n
  5732   003EFE  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5733   003F02  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5734   003F06  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5735   003F0A  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5736   003F0E  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5737   003F12  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5738   003F16  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5739   003F1A                     l4682:
  5740                           
  5741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5742   003F1A  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5743   003F1C  EF98  F01F         	goto	u4541
  5744   003F20  503D               	movf	(dtoa@i+1)^0,w,c
  5745   003F22  E108               	bnz	u4540
  5746   003F24  043C               	decf	dtoa@i^0,w,c
  5747   003F26  A0D8               	btfss	status,0,c
  5748   003F28  EF98  F01F         	goto	u4541
  5749   003F2C  EF9A  F01F         	goto	u4540
  5750   003F30                     u4541:
  5751   003F30  EFB6  F01F         	goto	l4688
  5752   003F34                     u4540:
  5753   003F34  5034               	movf	dtoa@n^0,w,c
  5754   003F36  1035               	iorwf	(dtoa@n+1)^0,w,c
  5755   003F38  1036               	iorwf	(dtoa@n+2)^0,w,c
  5756   003F3A  1037               	iorwf	(dtoa@n+3)^0,w,c
  5757   003F3C  1038               	iorwf	(dtoa@n+4)^0,w,c
  5758   003F3E  1039               	iorwf	(dtoa@n+5)^0,w,c
  5759   003F40  103A               	iorwf	(dtoa@n+6)^0,w,c
  5760   003F42  103B               	iorwf	(dtoa@n+7)^0,w,c
  5761   003F44  A4D8               	btfss	status,2,c
  5762   003F46  EFA7  F01F         	goto	u4551
  5763   003F4A  EFA9  F01F         	goto	u4550
  5764   003F4E                     u4551:
  5765   003F4E  EF11  F01F         	goto	l4672
  5766   003F52                     u4550:
  5767   003F52  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5768   003F54  EFB6  F01F         	goto	u4560
  5769   003F58  5031               	movf	(dtoa@p+1)^0,w,c
  5770   003F5A  E106               	bnz	u4561
  5771   003F5C  0430               	decf	dtoa@p^0,w,c
  5772   003F5E  B0D8               	btfsc	status,0,c
  5773   003F60  EFB4  F01F         	goto	u4561
  5774   003F64  EFB6  F01F         	goto	u4560
  5775   003F68                     u4561:
  5776   003F68  EF11  F01F         	goto	l4672
  5777   003F6C                     u4560:
  5778   003F6C                     l4688:
  5779                           
  5780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5781   003F6C  503E               	movf	dtoa@s^0,w,c
  5782   003F6E  B4D8               	btfsc	status,2,c
  5783   003F70  EFBC  F01F         	goto	u4571
  5784   003F74  EFBE  F01F         	goto	u4570
  5785   003F78                     u4571:
  5786   003F78  EFC9  F01F         	goto	l4694
  5787   003F7C                     u4570:
  5788   003F7C                     
  5789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5790   003F7C  063C               	decf	dtoa@i^0,f,c
  5791   003F7E  A0D8               	btfss	status,0,c
  5792   003F80  063D               	decf	(dtoa@i+1)^0,f,c
  5793   003F82                     
  5794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5795   003F82  0EA0               	movlw	low _dbuf
  5796   003F84  243C               	addwf	dtoa@i^0,w,c
  5797   003F86  6ED9               	movwf	fsr2l,c
  5798   003F88  0E02               	movlw	high _dbuf
  5799   003F8A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5800   003F8C  6EDA               	movwf	fsr2h,c
  5801   003F8E  C03E  FFDF         	movff	dtoa@s,indf2
  5802   003F92                     l4694:
  5803                           
  5804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5805   003F92  C01C  F011         	movff	dtoa@fp,pad@fp
  5806   003F96  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5807   003F9A  0EA0               	movlw	low _dbuf
  5808   003F9C  243C               	addwf	dtoa@i^0,w,c
  5809   003F9E  6E13               	movwf	pad@buf^0,c
  5810   003FA0  0E02               	movlw	high _dbuf
  5811   003FA2  203D               	addwfc	(dtoa@i+1)^0,w,c
  5812   003FA4  6E14               	movwf	(pad@buf+1)^0,c
  5813   003FA6  C032  F015         	movff	dtoa@w,pad@p
  5814   003FAA  C033  F016         	movff	dtoa@w+1,pad@p+1
  5815   003FAE  ECE1  F029         	call	_pad	;wreg free
  5816   003FB2  0012               	return		;funcret
  5817   003FB4                     __end_of_dtoa:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function _pad *****************
  5821 ;; Defined at:
  5822 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5825 ;;		 -> sprintf@f(11), 
  5826 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5827 ;;		 -> dbuf(80), 
  5828 ;;  p               2   20[COMRAM] int 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  w               2   25[COMRAM] int 
  5831 ;;  i               2   23[COMRAM] int 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5841 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5845 ;;Total ram usage:       11 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; Hardware stack levels required when called: 4
  5848 ;; This function calls:
  5849 ;;		_fputc
  5850 ;;		_fputs
  5851 ;; This function is called by:
  5852 ;;		_dtoa
  5853 ;;		_efgtoa
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text14
  5858   0053C2                     __ptext14:
  5859                           	callstack 0
  5860   0053C2                     _pad:
  5861                           	callstack 22
  5862   0053C2                     
  5863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5864   0053C2  BE16               	btfsc	(pad@p+1)^0,7,c
  5865   0053C4  EFE6  F029         	goto	u4121
  5866   0053C8  EFE8  F029         	goto	u4120
  5867   0053CC                     u4121:
  5868   0053CC  EFEE  F029         	goto	l4482
  5869   0053D0                     u4120:
  5870   0053D0  C015  F01A         	movff	pad@p,pad@w
  5871   0053D4  C016  F01B         	movff	pad@p+1,pad@w+1
  5872   0053D8  EFF2  F029         	goto	l1381
  5873   0053DC                     l4482:
  5874   0053DC  0E00               	movlw	0
  5875   0053DE  6E1B               	movwf	(pad@w+1)^0,c
  5876   0053E0  0E00               	movlw	0
  5877   0053E2  6E1A               	movwf	pad@w^0,c
  5878   0053E4                     l1381:
  5879                           
  5880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5881   0053E4  0E00               	movlw	0
  5882   0053E6  6E19               	movwf	(pad@i+1)^0,c
  5883   0053E8  0E00               	movlw	0
  5884   0053EA  6E18               	movwf	pad@i^0,c
  5885                           
  5886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5887   0053EC  EF04  F02A         	goto	l4488
  5888   0053F0                     l4484:
  5889                           
  5890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5891   0053F0  0E00               	movlw	0
  5892   0053F2  6E02               	movwf	(fputc@c+1)^0,c
  5893   0053F4  0E20               	movlw	32
  5894   0053F6  6E01               	movwf	fputc@c^0,c
  5895   0053F8  C011  F003         	movff	pad@fp,fputc@fp
  5896   0053FC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5897   005400  EC5D  F026         	call	_fputc	;wreg free
  5898   005404                     
  5899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5900   005404  4A18               	infsnz	pad@i^0,f,c
  5901   005406  2A19               	incf	(pad@i+1)^0,f,c
  5902   005408                     l4488:
  5903                           
  5904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5905   005408  501A               	movf	pad@w^0,w,c
  5906   00540A  5C18               	subwf	pad@i^0,w,c
  5907   00540C  5019               	movf	(pad@i+1)^0,w,c
  5908   00540E  0A80               	xorlw	128
  5909   005410  6E17               	movwf	??_pad^0,c
  5910   005412  501B               	movf	(pad@w+1)^0,w,c
  5911   005414  0A80               	xorlw	128
  5912   005416  5817               	subwfb	??_pad^0,w,c
  5913   005418  A0D8               	btfss	status,0,c
  5914   00541A  EF11  F02A         	goto	u4131
  5915   00541E  EF13  F02A         	goto	u4130
  5916   005422                     u4131:
  5917   005422  EFF8  F029         	goto	l4484
  5918   005426                     u4130:
  5919   005426                     
  5920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5921   005426  C013  F00A         	movff	pad@buf,fputs@s
  5922   00542A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5923   00542E  C011  F00C         	movff	pad@fp,fputs@fp
  5924   005432  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5925   005436  EC79  F02E         	call	_fputs	;wreg free
  5926   00543A  0012               	return		;funcret
  5927   00543C                     __end_of_pad:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function _fputs *****************
  5931 ;; Defined at:
  5932 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5935 ;;		 -> dbuf(80), 
  5936 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5937 ;;		 -> sprintf@f(11), 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  i               2   14[COMRAM] int 
  5940 ;;  c               1   13[COMRAM] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  2    9[COMRAM] int 
  5943 ;; Registers used:
  5944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;Total ram usage:        7 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; Hardware stack levels required when called: 3
  5957 ;; This function calls:
  5958 ;;		_fputc
  5959 ;; This function is called by:
  5960 ;;		_pad
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text15
  5965   005CF2                     __ptext15:
  5966                           	callstack 0
  5967   005CF2                     _fputs:
  5968                           	callstack 22
  5969   005CF2  0E00               	movlw	0
  5970   005CF4  6E10               	movwf	(fputs@i+1)^0,c
  5971   005CF6  0E00               	movlw	0
  5972   005CF8  6E0F               	movwf	fputs@i^0,c
  5973   005CFA  EF8A  F02E         	goto	l4016
  5974   005CFE                     l4012:
  5975   005CFE  C00E  F001         	movff	fputs@c,fputc@c
  5976   005D02  6A02               	clrf	(fputc@c+1)^0,c
  5977   005D04  C00C  F003         	movff	fputs@fp,fputc@fp
  5978   005D08  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5979   005D0C  EC5D  F026         	call	_fputc	;wreg free
  5980   005D10  4A0F               	infsnz	fputs@i^0,f,c
  5981   005D12  2A10               	incf	(fputs@i+1)^0,f,c
  5982   005D14                     l4016:
  5983   005D14  500F               	movf	fputs@i^0,w,c
  5984   005D16  240A               	addwf	fputs@s^0,w,c
  5985   005D18  6ED9               	movwf	fsr2l,c
  5986   005D1A  5010               	movf	(fputs@i+1)^0,w,c
  5987   005D1C  200B               	addwfc	(fputs@s+1)^0,w,c
  5988   005D1E  6EDA               	movwf	fsr2h,c
  5989   005D20  50DF               	movf	indf2,w,c
  5990   005D22  6E0E               	movwf	fputs@c^0,c
  5991   005D24  500E               	movf	fputs@c^0,w,c
  5992   005D26  A4D8               	btfss	status,2,c
  5993   005D28  EF98  F02E         	goto	u3381
  5994   005D2C  EF9A  F02E         	goto	u3380
  5995   005D30                     u3381:
  5996   005D30  EF7F  F02E         	goto	l4012
  5997   005D34                     u3380:
  5998   005D34  0012               	return		;funcret
  5999   005D36                     __end_of_fputs:
  6000                           	callstack 0
  6001                           
  6002 ;; *************** function _fputc *****************
  6003 ;; Defined at:
  6004 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  c               2    0[COMRAM] int 
  6007 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6008 ;;		 -> sprintf@f(11), 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;		None
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  2    0[COMRAM] int 
  6013 ;; Registers used:
  6014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6023 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6024 ;;Total ram usage:        9 bytes
  6025 ;; Hardware stack levels used: 1
  6026 ;; Hardware stack levels required when called: 2
  6027 ;; This function calls:
  6028 ;;		_putch
  6029 ;; This function is called by:
  6030 ;;		_pad
  6031 ;;		_vfpfcnvrt
  6032 ;;		_fputs
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text16
  6037   004CBA                     __ptext16:
  6038                           	callstack 0
  6039   004CBA                     _fputc:
  6040                           	callstack 25
  6041   004CBA  5003               	movf	fputc@fp^0,w,c
  6042   004CBC  1004               	iorwf	(fputc@fp+1)^0,w,c
  6043   004CBE  B4D8               	btfsc	status,2,c
  6044   004CC0  EF64  F026         	goto	u2921
  6045   004CC4  EF66  F026         	goto	u2920
  6046   004CC8                     u2921:
  6047   004CC8  EF6F  F026         	goto	l3770
  6048   004CCC                     u2920:
  6049   004CCC  5003               	movf	fputc@fp^0,w,c
  6050   004CCE  1004               	iorwf	(fputc@fp+1)^0,w,c
  6051   004CD0  A4D8               	btfss	status,2,c
  6052   004CD2  EF6D  F026         	goto	u2931
  6053   004CD6  EF6F  F026         	goto	u2930
  6054   004CDA                     u2931:
  6055   004CDA  EF74  F026         	goto	l3772
  6056   004CDE                     u2930:
  6057   004CDE                     l3770:
  6058   004CDE  5001               	movf	fputc@c^0,w,c
  6059   004CE0  EC2D  F030         	call	_putch
  6060   004CE4  EFC1  F026         	goto	l1541
  6061   004CE8                     l3772:
  6062   004CE8  EE20 F009          	lfsr	2,9
  6063   004CEC  5003               	movf	fputc@fp^0,w,c
  6064   004CEE  26D9               	addwf	fsr2l,f,c
  6065   004CF0  5004               	movf	(fputc@fp+1)^0,w,c
  6066   004CF2  22DA               	addwfc	fsr2h,f,c
  6067   004CF4  50DE               	movf	postinc2,w,c
  6068   004CF6  10DE               	iorwf	postinc2,w,c
  6069   004CF8  B4D8               	btfsc	status,2,c
  6070   004CFA  EF81  F026         	goto	u2941
  6071   004CFE  EF83  F026         	goto	u2940
  6072   004D02                     u2941:
  6073   004D02  EF9E  F026         	goto	l3776
  6074   004D06                     u2940:
  6075   004D06  EE20 F009          	lfsr	2,9
  6076   004D0A  5003               	movf	fputc@fp^0,w,c
  6077   004D0C  26D9               	addwf	fsr2l,f,c
  6078   004D0E  5004               	movf	(fputc@fp+1)^0,w,c
  6079   004D10  22DA               	addwfc	fsr2h,f,c
  6080   004D12  EE10 F003          	lfsr	1,3
  6081   004D16  5003               	movf	fputc@fp^0,w,c
  6082   004D18  26E1               	addwf	fsr1l,f,c
  6083   004D1A  5004               	movf	(fputc@fp+1)^0,w,c
  6084   004D1C  22E2               	addwfc	fsr1h,f,c
  6085   004D1E  50DE               	movf	postinc2,w,c
  6086   004D20  5CE6               	subwf	postinc1,w,c
  6087   004D22  50E6               	movf	postinc1,w,c
  6088   004D24  0A80               	xorlw	128
  6089   004D26  6E09               	movwf	(??_fputc+4)^0,c
  6090   004D28  50DE               	movf	postinc2,w,c
  6091   004D2A  0A80               	xorlw	128
  6092   004D2C  5809               	subwfb	(??_fputc+4)^0,w,c
  6093   004D2E  B0D8               	btfsc	status,0,c
  6094   004D30  EF9C  F026         	goto	u2951
  6095   004D34  EF9E  F026         	goto	u2950
  6096   004D38                     u2951:
  6097   004D38  EFC1  F026         	goto	l1541
  6098   004D3C                     u2950:
  6099   004D3C                     l3776:
  6100   004D3C  EE20 F003          	lfsr	2,3
  6101   004D40  5003               	movf	fputc@fp^0,w,c
  6102   004D42  26D9               	addwf	fsr2l,f,c
  6103   004D44  5004               	movf	(fputc@fp+1)^0,w,c
  6104   004D46  22DA               	addwfc	fsr2h,f,c
  6105   004D48  CFDE F005          	movff	postinc2,??_fputc
  6106   004D4C  CFDD F006          	movff	postdec2,??_fputc+1
  6107   004D50  C003  FFD9         	movff	fputc@fp,fsr2l
  6108   004D54  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6109   004D58  CFDE F007          	movff	postinc2,??_fputc+2
  6110   004D5C  CFDD F008          	movff	postdec2,??_fputc+3
  6111   004D60  5005               	movf	??_fputc^0,w,c
  6112   004D62  2407               	addwf	(??_fputc+2)^0,w,c
  6113   004D64  6ED9               	movwf	fsr2l,c
  6114   004D66  5006               	movf	(??_fputc+1)^0,w,c
  6115   004D68  2008               	addwfc	(??_fputc+3)^0,w,c
  6116   004D6A  6EDA               	movwf	fsr2h,c
  6117   004D6C  C001  FFDF         	movff	fputc@c,indf2
  6118   004D70  EE20 F003          	lfsr	2,3
  6119   004D74  5003               	movf	fputc@fp^0,w,c
  6120   004D76  26D9               	addwf	fsr2l,f,c
  6121   004D78  5004               	movf	(fputc@fp+1)^0,w,c
  6122   004D7A  22DA               	addwfc	fsr2h,f,c
  6123   004D7C  2ADE               	incf	postinc2,f,c
  6124   004D7E  0E00               	movlw	0
  6125   004D80  22DD               	addwfc	postdec2,f,c
  6126   004D82                     l1541:
  6127   004D82  0012               	return		;funcret
  6128   004D84                     __end_of_fputc:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _putch *****************
  6132 ;; Defined at:
  6133 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  c               1    wreg     unsigned char 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  c               1    0[COMRAM] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6151 ;;Total ram usage:        0 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; Hardware stack levels required when called: 1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_fputc
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text17
  6162   00605A                     __ptext17:
  6163                           	callstack 0
  6164   00605A                     _putch:
  6165                           	callstack 25
  6166   00605A  0012               	return		;funcret
  6167   00605C                     __end_of_putch:
  6168                           	callstack 0
  6169                           
  6170 ;; *************** function _abs *****************
  6171 ;; Defined at:
  6172 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  a               2   18[COMRAM] int 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  2   18[COMRAM] int 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6190 ;;Total ram usage:        4 bytes
  6191 ;; Hardware stack levels used: 1
  6192 ;; Hardware stack levels required when called: 1
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_dtoa
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text18
  6201   005D78                     __ptext18:
  6202                           	callstack 0
  6203   005D78                     _abs:
  6204                           	callstack 25
  6205   005D78  BE14               	btfsc	(abs@a+1)^0,7,c
  6206   005D7A  EFC9  F02E         	goto	u4140
  6207   005D7E  5014               	movf	(abs@a+1)^0,w,c
  6208   005D80  E106               	bnz	u4141
  6209   005D82  0413               	decf	abs@a^0,w,c
  6210   005D84  B0D8               	btfsc	status,0,c
  6211   005D86  EFC7  F02E         	goto	u4141
  6212   005D8A  EFC9  F02E         	goto	u4140
  6213   005D8E                     u4141:
  6214   005D8E  EFD7  F02E         	goto	l1500
  6215   005D92                     u4140:
  6216   005D92  C013  F015         	movff	abs@a,??_abs
  6217   005D96  C014  F016         	movff	abs@a+1,??_abs+1
  6218   005D9A  1E15               	comf	??_abs^0,f,c
  6219   005D9C  1E16               	comf	(??_abs+1)^0,f,c
  6220   005D9E  4A15               	infsnz	??_abs^0,f,c
  6221   005DA0  2A16               	incf	(??_abs+1)^0,f,c
  6222   005DA2  C015  F013         	movff	??_abs,?_abs
  6223   005DA6  C016  F014         	movff	??_abs+1,?_abs+1
  6224   005DAA  EFDB  F02E         	goto	l1503
  6225   005DAE                     l1500:
  6226   005DAE  C013  F013         	movff	abs@a,?_abs
  6227   005DB2  C014  F014         	movff	abs@a+1,?_abs+1
  6228   005DB6                     l1503:
  6229   005DB6  0012               	return		;funcret
  6230   005DB8                     __end_of_abs:
  6231                           	callstack 0
  6232                           
  6233 ;; *************** function ___aomod *****************
  6234 ;; Defined at:
  6235 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  dividend        8    0[COMRAM] long long 
  6238 ;;  divisor         8    8[COMRAM] long long 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  sign            1   17[COMRAM] unsigned char 
  6241 ;;  counter         1   16[COMRAM] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  8    0[COMRAM] long long 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6251 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6254 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6255 ;;Total ram usage:       18 bytes
  6256 ;; Hardware stack levels used: 1
  6257 ;; Hardware stack levels required when called: 1
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		_dtoa
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text19
  6266   00484E                     __ptext19:
  6267                           	callstack 0
  6268   00484E                     ___aomod:
  6269                           	callstack 25
  6270   00484E  0E00               	movlw	0
  6271   004850  6E12               	movwf	___aomod@sign^0,c
  6272   004852  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6273   004854  EF30  F024         	goto	u3480
  6274   004858  EF2E  F024         	goto	u3481
  6275   00485C                     u3481:
  6276   00485C  EF42  F024         	goto	l4086
  6277   004860                     u3480:
  6278   004860  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6279   004862  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6280   004864  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6281   004866  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6282   004868  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6283   00486A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6284   00486C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6285   00486E  6C01               	negf	___aomod@dividend^0,c
  6286   004870  0E00               	movlw	0
  6287   004872  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6288   004874  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6289   004876  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6290   004878  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6291   00487A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6292   00487C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6293   00487E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6294   004880  0E01               	movlw	1
  6295   004882  6E12               	movwf	___aomod@sign^0,c
  6296   004884                     l4086:
  6297   004884  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6298   004886  EF49  F024         	goto	u3490
  6299   00488A  EF47  F024         	goto	u3491
  6300   00488E                     u3491:
  6301   00488E  EF59  F024         	goto	l4090
  6302   004892                     u3490:
  6303   004892  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6304   004894  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6305   004896  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6306   004898  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6307   00489A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6308   00489C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6309   00489E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6310   0048A0  6C09               	negf	___aomod@divisor^0,c
  6311   0048A2  0E00               	movlw	0
  6312   0048A4  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6313   0048A6  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6314   0048A8  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6315   0048AA  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6316   0048AC  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6317   0048AE  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6318   0048B0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6319   0048B2                     l4090:
  6320   0048B2  5009               	movf	___aomod@divisor^0,w,c
  6321   0048B4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6322   0048B6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6323   0048B8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6324   0048BA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6325   0048BC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6326   0048BE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6327   0048C0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6328   0048C2  B4D8               	btfsc	status,2,c
  6329   0048C4  EF66  F024         	goto	u3501
  6330   0048C8  EF68  F024         	goto	u3500
  6331   0048CC                     u3501:
  6332   0048CC  EFB0  F024         	goto	l4106
  6333   0048D0                     u3500:
  6334   0048D0  0E01               	movlw	1
  6335   0048D2  6E11               	movwf	___aomod@counter^0,c
  6336   0048D4  EF76  F024         	goto	l4096
  6337   0048D8                     l4094:
  6338   0048D8  90D8               	bcf	status,0,c
  6339   0048DA  3609               	rlcf	___aomod@divisor^0,f,c
  6340   0048DC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6341   0048DE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6342   0048E0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6343   0048E2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6344   0048E4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6345   0048E6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6346   0048E8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6347   0048EA  2A11               	incf	___aomod@counter^0,f,c
  6348   0048EC                     l4096:
  6349   0048EC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6350   0048EE  EF7B  F024         	goto	u3511
  6351   0048F2  EF7D  F024         	goto	u3510
  6352   0048F6                     u3511:
  6353   0048F6  EF6C  F024         	goto	l4094
  6354   0048FA                     u3510:
  6355   0048FA                     l4098:
  6356   0048FA  5009               	movf	___aomod@divisor^0,w,c
  6357   0048FC  5C01               	subwf	___aomod@dividend^0,w,c
  6358   0048FE  500A               	movf	(___aomod@divisor+1)^0,w,c
  6359   004900  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6360   004902  500B               	movf	(___aomod@divisor+2)^0,w,c
  6361   004904  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6362   004906  500C               	movf	(___aomod@divisor+3)^0,w,c
  6363   004908  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6364   00490A  500D               	movf	(___aomod@divisor+4)^0,w,c
  6365   00490C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6366   00490E  500E               	movf	(___aomod@divisor+5)^0,w,c
  6367   004910  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6368   004912  500F               	movf	(___aomod@divisor+6)^0,w,c
  6369   004914  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6370   004916  5010               	movf	(___aomod@divisor+7)^0,w,c
  6371   004918  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6372   00491A  A0D8               	btfss	status,0,c
  6373   00491C  EF92  F024         	goto	u3521
  6374   004920  EF94  F024         	goto	u3520
  6375   004924                     u3521:
  6376   004924  EFA4  F024         	goto	l4102
  6377   004928                     u3520:
  6378   004928  5009               	movf	___aomod@divisor^0,w,c
  6379   00492A  5E01               	subwf	___aomod@dividend^0,f,c
  6380   00492C  500A               	movf	(___aomod@divisor+1)^0,w,c
  6381   00492E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6382   004930  500B               	movf	(___aomod@divisor+2)^0,w,c
  6383   004932  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6384   004934  500C               	movf	(___aomod@divisor+3)^0,w,c
  6385   004936  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6386   004938  500D               	movf	(___aomod@divisor+4)^0,w,c
  6387   00493A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6388   00493C  500E               	movf	(___aomod@divisor+5)^0,w,c
  6389   00493E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6390   004940  500F               	movf	(___aomod@divisor+6)^0,w,c
  6391   004942  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6392   004944  5010               	movf	(___aomod@divisor+7)^0,w,c
  6393   004946  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6394   004948                     l4102:
  6395   004948  90D8               	bcf	status,0,c
  6396   00494A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6397   00494C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6398   00494E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6399   004950  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6400   004952  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6401   004954  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6402   004956  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6403   004958  3209               	rrcf	___aomod@divisor^0,f,c
  6404   00495A  2E11               	decfsz	___aomod@counter^0,f,c
  6405   00495C  EF7D  F024         	goto	l4098
  6406   004960                     l4106:
  6407   004960  5012               	movf	___aomod@sign^0,w,c
  6408   004962  B4D8               	btfsc	status,2,c
  6409   004964  EFB6  F024         	goto	u3531
  6410   004968  EFB8  F024         	goto	u3530
  6411   00496C                     u3531:
  6412   00496C  EFC8  F024         	goto	l4110
  6413   004970                     u3530:
  6414   004970  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6415   004972  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6416   004974  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6417   004976  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6418   004978  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6419   00497A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6420   00497C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6421   00497E  6C01               	negf	___aomod@dividend^0,c
  6422   004980  0E00               	movlw	0
  6423   004982  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6424   004984  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6425   004986  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6426   004988  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6427   00498A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6428   00498C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6429   00498E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6430   004990                     l4110:
  6431   004990  C001  F001         	movff	___aomod@dividend,?___aomod
  6432   004994  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6433   004998  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6434   00499C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6435   0049A0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6436   0049A4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6437   0049A8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6438   0049AC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6439   0049B0  0012               	return		;funcret
  6440   0049B2                     __end_of___aomod:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function ___aodiv *****************
  6444 ;; Defined at:
  6445 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  dividend        8    0[COMRAM] long long 
  6448 ;;  divisor         8    8[COMRAM] long long 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  quotient        8   18[COMRAM] long long 
  6451 ;;  sign            1   17[COMRAM] unsigned char 
  6452 ;;  counter         1   16[COMRAM] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  8    0[COMRAM] long long 
  6455 ;; Registers used:
  6456 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6462 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6466 ;;Total ram usage:       26 bytes
  6467 ;; Hardware stack levels used: 1
  6468 ;; Hardware stack levels required when called: 1
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_dtoa
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text20
  6477   00455A                     __ptext20:
  6478                           	callstack 0
  6479   00455A                     ___aodiv:
  6480                           	callstack 25
  6481   00455A  0E00               	movlw	0
  6482   00455C  6E12               	movwf	___aodiv@sign^0,c
  6483   00455E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6484   004560  EFB6  F022         	goto	u3410
  6485   004564  EFB4  F022         	goto	u3411
  6486   004568                     u3411:
  6487   004568  EFC8  F022         	goto	l4042
  6488   00456C                     u3410:
  6489   00456C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6490   00456E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6491   004570  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6492   004572  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6493   004574  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6494   004576  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6495   004578  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6496   00457A  6C09               	negf	___aodiv@divisor^0,c
  6497   00457C  0E00               	movlw	0
  6498   00457E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6499   004580  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6500   004582  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6501   004584  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6502   004586  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6503   004588  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6504   00458A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6505   00458C  0E01               	movlw	1
  6506   00458E  6E12               	movwf	___aodiv@sign^0,c
  6507   004590                     l4042:
  6508   004590  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6509   004592  EFCF  F022         	goto	u3420
  6510   004596  EFCD  F022         	goto	u3421
  6511   00459A                     u3421:
  6512   00459A  EFE1  F022         	goto	l4048
  6513   00459E                     u3420:
  6514   00459E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6515   0045A0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6516   0045A2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6517   0045A4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6518   0045A6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6519   0045A8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6520   0045AA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6521   0045AC  6C01               	negf	___aodiv@dividend^0,c
  6522   0045AE  0E00               	movlw	0
  6523   0045B0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6524   0045B2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6525   0045B4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6526   0045B6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6527   0045B8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6528   0045BA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6529   0045BC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6530   0045BE  0E01               	movlw	1
  6531   0045C0  1A12               	xorwf	___aodiv@sign^0,f,c
  6532   0045C2                     l4048:
  6533   0045C2  EE20  F013         	lfsr	2,___aodiv@quotient
  6534   0045C6  0E07               	movlw	7
  6535   0045C8                     u3431:
  6536   0045C8  6ADE               	clrf	postinc2,c
  6537   0045CA  06E8               	decf	wreg,f,c
  6538   0045CC  E2FD               	bc	u3431
  6539   0045CE  5009               	movf	___aodiv@divisor^0,w,c
  6540   0045D0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6541   0045D2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6542   0045D4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6543   0045D6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6544   0045D8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6545   0045DA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6546   0045DC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6547   0045DE  B4D8               	btfsc	status,2,c
  6548   0045E0  EFF4  F022         	goto	u3441
  6549   0045E4  EFF6  F022         	goto	u3440
  6550   0045E8                     u3441:
  6551   0045E8  EF48  F023         	goto	l4070
  6552   0045EC                     u3440:
  6553   0045EC  0E01               	movlw	1
  6554   0045EE  6E11               	movwf	___aodiv@counter^0,c
  6555   0045F0  EF04  F023         	goto	l4056
  6556   0045F4                     l4054:
  6557   0045F4  90D8               	bcf	status,0,c
  6558   0045F6  3609               	rlcf	___aodiv@divisor^0,f,c
  6559   0045F8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6560   0045FA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6561   0045FC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6562   0045FE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6563   004600  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6564   004602  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6565   004604  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6566   004606  2A11               	incf	___aodiv@counter^0,f,c
  6567   004608                     l4056:
  6568   004608  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6569   00460A  EF09  F023         	goto	u3451
  6570   00460E  EF0B  F023         	goto	u3450
  6571   004612                     u3451:
  6572   004612  EFFA  F022         	goto	l4054
  6573   004616                     u3450:
  6574   004616                     l4058:
  6575   004616  90D8               	bcf	status,0,c
  6576   004618  3613               	rlcf	___aodiv@quotient^0,f,c
  6577   00461A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6578   00461C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6579   00461E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6580   004620  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6581   004622  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6582   004624  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6583   004626  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6584   004628  5009               	movf	___aodiv@divisor^0,w,c
  6585   00462A  5C01               	subwf	___aodiv@dividend^0,w,c
  6586   00462C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6587   00462E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6588   004630  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6589   004632  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6590   004634  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6591   004636  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6592   004638  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6593   00463A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6594   00463C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6595   00463E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6596   004640  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6597   004642  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6598   004644  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6599   004646  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6600   004648  A0D8               	btfss	status,0,c
  6601   00464A  EF29  F023         	goto	u3461
  6602   00464E  EF2B  F023         	goto	u3460
  6603   004652                     u3461:
  6604   004652  EF3C  F023         	goto	l4066
  6605   004656                     u3460:
  6606   004656  5009               	movf	___aodiv@divisor^0,w,c
  6607   004658  5E01               	subwf	___aodiv@dividend^0,f,c
  6608   00465A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6609   00465C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6610   00465E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6611   004660  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6612   004662  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6613   004664  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6614   004666  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6615   004668  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6616   00466A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6617   00466C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6618   00466E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6619   004670  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6620   004672  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6621   004674  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6622   004676  8013               	bsf	___aodiv@quotient^0,0,c
  6623   004678                     l4066:
  6624   004678  90D8               	bcf	status,0,c
  6625   00467A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6626   00467C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6627   00467E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6628   004680  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6629   004682  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6630   004684  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6631   004686  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6632   004688  3209               	rrcf	___aodiv@divisor^0,f,c
  6633   00468A  2E11               	decfsz	___aodiv@counter^0,f,c
  6634   00468C  EF0B  F023         	goto	l4058
  6635   004690                     l4070:
  6636   004690  5012               	movf	___aodiv@sign^0,w,c
  6637   004692  B4D8               	btfsc	status,2,c
  6638   004694  EF4E  F023         	goto	u3471
  6639   004698  EF50  F023         	goto	u3470
  6640   00469C                     u3471:
  6641   00469C  EF60  F023         	goto	l4074
  6642   0046A0                     u3470:
  6643   0046A0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6644   0046A2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6645   0046A4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6646   0046A6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6647   0046A8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6648   0046AA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6649   0046AC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6650   0046AE  6C13               	negf	___aodiv@quotient^0,c
  6651   0046B0  0E00               	movlw	0
  6652   0046B2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6653   0046B4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6654   0046B6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6655   0046B8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6656   0046BA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6657   0046BC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6658   0046BE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6659   0046C0                     l4074:
  6660   0046C0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6661   0046C4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6662   0046C8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6663   0046CC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6664   0046D0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6665   0046D4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6666   0046D8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6667   0046DC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6668   0046E0  0012               	return		;funcret
  6669   0046E2                     __end_of___aodiv:
  6670                           	callstack 0
  6671                           
  6672 ;; *************** function _sendStringSerial4 *****************
  6673 ;; Defined at:
  6674 ;;		line 33 in file "serial.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  string          2    1[COMRAM] PTR unsigned char 
  6677 ;;		 -> main@buf(100), 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6693 ;;Total ram usage:        2 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 2
  6696 ;; This function calls:
  6697 ;;		_sendCharSerial4
  6698 ;; This function is called by:
  6699 ;;		_main
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text21
  6704   005EDA                     __ptext21:
  6705                           	callstack 0
  6706   005EDA                     _sendStringSerial4:
  6707                           	callstack 28
  6708   005EDA                     
  6709                           ;serial.c: 34:     while (*string!=0){
  6710   005EDA  EF78  F02F         	goto	l5430
  6711   005EDE                     l5426:
  6712                           
  6713                           ;serial.c: 35:         sendCharSerial4(*string++);
  6714   005EDE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6715   005EE2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6716   005EE6  50DF               	movf	indf2,w,c
  6717   005EE8  EC03  F030         	call	_sendCharSerial4
  6718   005EEC  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6719   005EEE  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6720   005EF0                     l5430:
  6721                           
  6722                           ;serial.c: 34:     while (*string!=0){
  6723   005EF0  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6724   005EF4  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6725   005EF8  50DF               	movf	indf2,w,c
  6726   005EFA  A4D8               	btfss	status,2,c
  6727   005EFC  EF82  F02F         	goto	u5411
  6728   005F00  EF84  F02F         	goto	u5410
  6729   005F04                     u5411:
  6730   005F04  EF6F  F02F         	goto	l5426
  6731   005F08                     u5410:
  6732   005F08  0012               	return		;funcret
  6733   005F0A                     __end_of_sendStringSerial4:
  6734                           	callstack 0
  6735                           
  6736 ;; *************** function _sendCharSerial4 *****************
  6737 ;; Defined at:
  6738 ;;		line 26 in file "serial.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  charToSend      1    wreg     unsigned char 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  charToSend      1    0[COMRAM] unsigned char 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;Total ram usage:        1 bytes
  6757 ;; Hardware stack levels used: 1
  6758 ;; Hardware stack levels required when called: 1
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_sendStringSerial4
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text22
  6767   006006                     __ptext22:
  6768                           	callstack 0
  6769   006006                     _sendCharSerial4:
  6770                           	callstack 28
  6771                           
  6772                           ;incstack = 0
  6773                           ;sendCharSerial4@charToSend stored from wreg
  6774   006006  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6775   006008                     l195:
  6776   006008  010E               	movlb	14	; () banked
  6777   00600A  A537               	btfss	55,2,b	;volatile
  6778   00600C  EF0A  F030         	goto	u4971
  6779   006010  EF0C  F030         	goto	u4970
  6780   006014                     u4971:
  6781   006014  EF04  F030         	goto	l195
  6782   006018                     u4970:
  6783   006018                     
  6784                           ; BSR set to: 14
  6785                           ;serial.c: 28:     TX4REG = charToSend;
  6786   006018  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6787   00601C                     
  6788                           ; BSR set to: 14
  6789   00601C  0012               	return		;funcret
  6790   00601E                     __end_of_sendCharSerial4:
  6791                           	callstack 0
  6792                           
  6793 ;; *************** function _readColours *****************
  6794 ;; Defined at:
  6795 ;;		line 105 in file "color.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  vals            2   11[COMRAM] PTR struct RGB
  6798 ;;		 -> vals(8), 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;		None
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;Total ram usage:        2 bytes
  6815 ;; Hardware stack levels used: 1
  6816 ;; Hardware stack levels required when called: 4
  6817 ;; This function calls:
  6818 ;;		_color_read_Blue
  6819 ;;		_color_read_Green
  6820 ;;		_color_read_Red
  6821 ;;		_color_read_lum
  6822 ;; This function is called by:
  6823 ;;		_main
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text23
  6828   0055E6                     __ptext23:
  6829                           	callstack 0
  6830   0055E6                     _readColours:
  6831                           	callstack 26
  6832   0055E6                     
  6833                           ;color.c: 107:     vals ->R = color_read_Red();
  6834   0055E6  EC47  F02D         	call	_color_read_Red	;wreg free
  6835   0055EA  C00C  FFD9         	movff	readColours@vals,fsr2l
  6836   0055EE  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6837   0055F2  C005  FFDE         	movff	?_color_read_Red,postinc2
  6838   0055F6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6839                           
  6840                           ;color.c: 108:     vals ->B = color_read_Blue();
  6841   0055FA  EC97  F02D         	call	_color_read_Blue	;wreg free
  6842   0055FE  EE20 F004          	lfsr	2,4
  6843   005602  500C               	movf	readColours@vals^0,w,c
  6844   005604  26D9               	addwf	fsr2l,f,c
  6845   005606  500D               	movf	(readColours@vals+1)^0,w,c
  6846   005608  22DA               	addwfc	fsr2h,f,c
  6847   00560A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6848   00560E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6849                           
  6850                           ;color.c: 109:     vals ->G = color_read_Green();
  6851   005612  EC6F  F02D         	call	_color_read_Green	;wreg free
  6852   005616  EE20 F002          	lfsr	2,2
  6853   00561A  500C               	movf	readColours@vals^0,w,c
  6854   00561C  26D9               	addwf	fsr2l,f,c
  6855   00561E  500D               	movf	(readColours@vals+1)^0,w,c
  6856   005620  22DA               	addwfc	fsr2h,f,c
  6857   005622  C005  FFDE         	movff	?_color_read_Green,postinc2
  6858   005626  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6859                           
  6860                           ;color.c: 110:     vals ->L = color_read_lum();
  6861   00562A  EC1F  F02D         	call	_color_read_lum	;wreg free
  6862   00562E  EE20 F006          	lfsr	2,6
  6863   005632  500C               	movf	readColours@vals^0,w,c
  6864   005634  26D9               	addwf	fsr2l,f,c
  6865   005636  500D               	movf	(readColours@vals+1)^0,w,c
  6866   005638  22DA               	addwfc	fsr2h,f,c
  6867   00563A  C005  FFDE         	movff	?_color_read_lum,postinc2
  6868   00563E  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6869   005642  0012               	return		;funcret
  6870   005644                     __end_of_readColours:
  6871                           	callstack 0
  6872                           
  6873 ;; *************** function _color_read_lum *****************
  6874 ;; Defined at:
  6875 ;;		line 49 in file "color.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;		None
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;  tmp             2    9[COMRAM] unsigned int 
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  2    4[COMRAM] unsigned int 
  6882 ;; Registers used:
  6883 ;;		wreg, status,2, status,0, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6892 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;Total ram usage:        7 bytes
  6894 ;; Hardware stack levels used: 1
  6895 ;; Hardware stack levels required when called: 3
  6896 ;; This function calls:
  6897 ;;		_I2C_2_Master_Read
  6898 ;;		_I2C_2_Master_RepStart
  6899 ;;		_I2C_2_Master_Start
  6900 ;;		_I2C_2_Master_Stop
  6901 ;;		_I2C_2_Master_Write
  6902 ;; This function is called by:
  6903 ;;		_readColours
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text24
  6908   005A3E                     __ptext24:
  6909                           	callstack 0
  6910   005A3E                     _color_read_lum:
  6911                           	callstack 26
  6912   005A3E                     
  6913                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6914   005A3E  EC25  F030         	call	_I2C_2_Master_Start	;wreg free
  6915                           
  6916                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6917   005A42  0E52               	movlw	82
  6918   005A44  EC0F  F030         	call	_I2C_2_Master_Write
  6919                           
  6920                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6921   005A48  0EB4               	movlw	180
  6922   005A4A  EC0F  F030         	call	_I2C_2_Master_Write
  6923                           
  6924                           ;color.c: 55:  I2C_2_Master_RepStart();
  6925   005A4E  EC1B  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6926                           
  6927                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6928   005A52  0E53               	movlw	83
  6929   005A54  EC0F  F030         	call	_I2C_2_Master_Write
  6930                           
  6931                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6932   005A58  0E01               	movlw	1
  6933   005A5A  EC9B  F02E         	call	_I2C_2_Master_Read
  6934   005A5E  6E07               	movwf	??_color_read_lum^0,c
  6935   005A60  5007               	movf	??_color_read_lum^0,w,c
  6936   005A62  6E0A               	movwf	color_read_lum@tmp^0,c
  6937   005A64  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6938                           
  6939                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6940   005A66  0E00               	movlw	0
  6941   005A68  EC9B  F02E         	call	_I2C_2_Master_Read
  6942   005A6C  6E07               	movwf	??_color_read_lum^0,c
  6943   005A6E  5007               	movf	??_color_read_lum^0,w,c
  6944   005A70  6E09               	movwf	(??_color_read_lum+2)^0,c
  6945   005A72  6A08               	clrf	(??_color_read_lum+1)^0,c
  6946   005A74  500A               	movf	color_read_lum@tmp^0,w,c
  6947   005A76  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6948   005A78  6E0A               	movwf	color_read_lum@tmp^0,c
  6949   005A7A  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6950   005A7C  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6951   005A7E  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6952                           
  6953                           ;color.c: 59:  I2C_2_Master_Stop();
  6954   005A80  EC20  F030         	call	_I2C_2_Master_Stop	;wreg free
  6955   005A84                     
  6956                           ;color.c: 60:  return tmp;
  6957   005A84  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6958   005A88  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6959   005A8C  0012               	return		;funcret
  6960   005A8E                     __end_of_color_read_lum:
  6961                           	callstack 0
  6962                           
  6963 ;; *************** function _color_read_Red *****************
  6964 ;; Defined at:
  6965 ;;		line 63 in file "color.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  tmp             2    9[COMRAM] unsigned int 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  2    4[COMRAM] unsigned int 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6982 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6983 ;;Total ram usage:        7 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 3
  6986 ;; This function calls:
  6987 ;;		_I2C_2_Master_Read
  6988 ;;		_I2C_2_Master_RepStart
  6989 ;;		_I2C_2_Master_Start
  6990 ;;		_I2C_2_Master_Stop
  6991 ;;		_I2C_2_Master_Write
  6992 ;; This function is called by:
  6993 ;;		_readColours
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text25
  6998   005A8E                     __ptext25:
  6999                           	callstack 0
  7000   005A8E                     _color_read_Red:
  7001                           	callstack 26
  7002   005A8E                     
  7003                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7004   005A8E  EC25  F030         	call	_I2C_2_Master_Start	;wreg free
  7005                           
  7006                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7007   005A92  0E52               	movlw	82
  7008   005A94  EC0F  F030         	call	_I2C_2_Master_Write
  7009                           
  7010                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7011   005A98  0EB6               	movlw	182
  7012   005A9A  EC0F  F030         	call	_I2C_2_Master_Write
  7013                           
  7014                           ;color.c: 69:  I2C_2_Master_RepStart();
  7015   005A9E  EC1B  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7016                           
  7017                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7018   005AA2  0E53               	movlw	83
  7019   005AA4  EC0F  F030         	call	_I2C_2_Master_Write
  7020                           
  7021                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7022   005AA8  0E01               	movlw	1
  7023   005AAA  EC9B  F02E         	call	_I2C_2_Master_Read
  7024   005AAE  6E07               	movwf	??_color_read_Red^0,c
  7025   005AB0  5007               	movf	??_color_read_Red^0,w,c
  7026   005AB2  6E0A               	movwf	color_read_Red@tmp^0,c
  7027   005AB4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7028                           
  7029                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7030   005AB6  0E00               	movlw	0
  7031   005AB8  EC9B  F02E         	call	_I2C_2_Master_Read
  7032   005ABC  6E07               	movwf	??_color_read_Red^0,c
  7033   005ABE  5007               	movf	??_color_read_Red^0,w,c
  7034   005AC0  6E09               	movwf	(??_color_read_Red+2)^0,c
  7035   005AC2  6A08               	clrf	(??_color_read_Red+1)^0,c
  7036   005AC4  500A               	movf	color_read_Red@tmp^0,w,c
  7037   005AC6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7038   005AC8  6E0A               	movwf	color_read_Red@tmp^0,c
  7039   005ACA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7040   005ACC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7041   005ACE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7042                           
  7043                           ;color.c: 73:  I2C_2_Master_Stop();
  7044   005AD0  EC20  F030         	call	_I2C_2_Master_Stop	;wreg free
  7045   005AD4                     
  7046                           ;color.c: 74:  return tmp;
  7047   005AD4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7048   005AD8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7049   005ADC  0012               	return		;funcret
  7050   005ADE                     __end_of_color_read_Red:
  7051                           	callstack 0
  7052                           
  7053 ;; *************** function _color_read_Green *****************
  7054 ;; Defined at:
  7055 ;;		line 76 in file "color.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  tmp             2    9[COMRAM] unsigned int 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  2    4[COMRAM] unsigned int 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2, status,0, cstack
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7071 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7072 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;Total ram usage:        7 bytes
  7074 ;; Hardware stack levels used: 1
  7075 ;; Hardware stack levels required when called: 3
  7076 ;; This function calls:
  7077 ;;		_I2C_2_Master_Read
  7078 ;;		_I2C_2_Master_RepStart
  7079 ;;		_I2C_2_Master_Start
  7080 ;;		_I2C_2_Master_Stop
  7081 ;;		_I2C_2_Master_Write
  7082 ;; This function is called by:
  7083 ;;		_readColours
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           	psect	text26
  7088   005ADE                     __ptext26:
  7089                           	callstack 0
  7090   005ADE                     _color_read_Green:
  7091                           	callstack 26
  7092   005ADE                     
  7093                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7094   005ADE  EC25  F030         	call	_I2C_2_Master_Start	;wreg free
  7095                           
  7096                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7097   005AE2  0E52               	movlw	82
  7098   005AE4  EC0F  F030         	call	_I2C_2_Master_Write
  7099                           
  7100                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7101   005AE8  0EB8               	movlw	184
  7102   005AEA  EC0F  F030         	call	_I2C_2_Master_Write
  7103                           
  7104                           ;color.c: 82:  I2C_2_Master_RepStart();
  7105   005AEE  EC1B  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7106                           
  7107                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7108   005AF2  0E53               	movlw	83
  7109   005AF4  EC0F  F030         	call	_I2C_2_Master_Write
  7110                           
  7111                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7112   005AF8  0E01               	movlw	1
  7113   005AFA  EC9B  F02E         	call	_I2C_2_Master_Read
  7114   005AFE  6E07               	movwf	??_color_read_Green^0,c
  7115   005B00  5007               	movf	??_color_read_Green^0,w,c
  7116   005B02  6E0A               	movwf	color_read_Green@tmp^0,c
  7117   005B04  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7118                           
  7119                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7120   005B06  0E00               	movlw	0
  7121   005B08  EC9B  F02E         	call	_I2C_2_Master_Read
  7122   005B0C  6E07               	movwf	??_color_read_Green^0,c
  7123   005B0E  5007               	movf	??_color_read_Green^0,w,c
  7124   005B10  6E09               	movwf	(??_color_read_Green+2)^0,c
  7125   005B12  6A08               	clrf	(??_color_read_Green+1)^0,c
  7126   005B14  500A               	movf	color_read_Green@tmp^0,w,c
  7127   005B16  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7128   005B18  6E0A               	movwf	color_read_Green@tmp^0,c
  7129   005B1A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7130   005B1C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7131   005B1E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7132                           
  7133                           ;color.c: 86:  I2C_2_Master_Stop();
  7134   005B20  EC20  F030         	call	_I2C_2_Master_Stop	;wreg free
  7135   005B24                     
  7136                           ;color.c: 87:  return tmp;
  7137   005B24  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7138   005B28  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7139   005B2C  0012               	return		;funcret
  7140   005B2E                     __end_of_color_read_Green:
  7141                           	callstack 0
  7142                           
  7143 ;; *************** function _color_read_Blue *****************
  7144 ;; Defined at:
  7145 ;;		line 90 in file "color.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  tmp             2    9[COMRAM] unsigned int 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  2    4[COMRAM] unsigned int 
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0, cstack
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7161 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7162 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7163 ;;Total ram usage:        7 bytes
  7164 ;; Hardware stack levels used: 1
  7165 ;; Hardware stack levels required when called: 3
  7166 ;; This function calls:
  7167 ;;		_I2C_2_Master_Read
  7168 ;;		_I2C_2_Master_RepStart
  7169 ;;		_I2C_2_Master_Start
  7170 ;;		_I2C_2_Master_Stop
  7171 ;;		_I2C_2_Master_Write
  7172 ;; This function is called by:
  7173 ;;		_readColours
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           	psect	text27
  7178   005B2E                     __ptext27:
  7179                           	callstack 0
  7180   005B2E                     _color_read_Blue:
  7181                           	callstack 26
  7182   005B2E                     
  7183                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7184   005B2E  EC25  F030         	call	_I2C_2_Master_Start	;wreg free
  7185                           
  7186                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7187   005B32  0E52               	movlw	82
  7188   005B34  EC0F  F030         	call	_I2C_2_Master_Write
  7189                           
  7190                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7191   005B38  0EBA               	movlw	186
  7192   005B3A  EC0F  F030         	call	_I2C_2_Master_Write
  7193                           
  7194                           ;color.c: 96:  I2C_2_Master_RepStart();
  7195   005B3E  EC1B  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7196                           
  7197                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7198   005B42  0E53               	movlw	83
  7199   005B44  EC0F  F030         	call	_I2C_2_Master_Write
  7200                           
  7201                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7202   005B48  0E01               	movlw	1
  7203   005B4A  EC9B  F02E         	call	_I2C_2_Master_Read
  7204   005B4E  6E07               	movwf	??_color_read_Blue^0,c
  7205   005B50  5007               	movf	??_color_read_Blue^0,w,c
  7206   005B52  6E0A               	movwf	color_read_Blue@tmp^0,c
  7207   005B54  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7208                           
  7209                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7210   005B56  0E00               	movlw	0
  7211   005B58  EC9B  F02E         	call	_I2C_2_Master_Read
  7212   005B5C  6E07               	movwf	??_color_read_Blue^0,c
  7213   005B5E  5007               	movf	??_color_read_Blue^0,w,c
  7214   005B60  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7215   005B62  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7216   005B64  500A               	movf	color_read_Blue@tmp^0,w,c
  7217   005B66  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7218   005B68  6E0A               	movwf	color_read_Blue@tmp^0,c
  7219   005B6A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7220   005B6C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7221   005B6E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7222                           
  7223                           ;color.c: 100:  I2C_2_Master_Stop();
  7224   005B70  EC20  F030         	call	_I2C_2_Master_Stop	;wreg free
  7225   005B74                     
  7226                           ;color.c: 101:  return tmp;
  7227   005B74  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7228   005B78  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7229   005B7C  0012               	return		;funcret
  7230   005B7E                     __end_of_color_read_Blue:
  7231                           	callstack 0
  7232                           
  7233 ;; *************** function _I2C_2_Master_RepStart *****************
  7234 ;; Defined at:
  7235 ;;		line 33 in file "i2c.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;		None
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; Hardware stack levels required when called: 2
  7256 ;; This function calls:
  7257 ;;		_I2C_2_Master_Idle
  7258 ;; This function is called by:
  7259 ;;		_color_read_lum
  7260 ;;		_color_read_Red
  7261 ;;		_color_read_Green
  7262 ;;		_color_read_Blue
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text28
  7267   006036                     __ptext28:
  7268                           	callstack 0
  7269   006036                     _I2C_2_Master_RepStart:
  7270                           	callstack 26
  7271   006036                     
  7272                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7273   006036  EC9A  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7274   00603A                     
  7275                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7276   00603A  010E               	movlb	14	; () banked
  7277   00603C  83DA               	bsf	218,1,b	;volatile
  7278   00603E                     
  7279                           ; BSR set to: 14
  7280   00603E  0012               	return		;funcret
  7281   006040                     __end_of_I2C_2_Master_RepStart:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function _I2C_2_Master_Read *****************
  7285 ;; Defined at:
  7286 ;;		line 51 in file "i2c.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  ack             1    wreg     unsigned char 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  ack             1    2[COMRAM] unsigned char 
  7291 ;;  tmp             1    3[COMRAM] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      unsigned char 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7304 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7305 ;;Total ram usage:        3 bytes
  7306 ;; Hardware stack levels used: 1
  7307 ;; Hardware stack levels required when called: 2
  7308 ;; This function calls:
  7309 ;;		_I2C_2_Master_Idle
  7310 ;; This function is called by:
  7311 ;;		_color_read_lum
  7312 ;;		_color_read_Red
  7313 ;;		_color_read_Green
  7314 ;;		_color_read_Blue
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text29
  7319   005D36                     __ptext29:
  7320                           	callstack 0
  7321   005D36                     _I2C_2_Master_Read:
  7322                           	callstack 26
  7323                           
  7324                           ; BSR set to: 14
  7325                           ;incstack = 0
  7326                           ;I2C_2_Master_Read@ack stored from wreg
  7327   005D36  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7328   005D38                     
  7329                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7330   005D38  EC9A  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7331   005D3C                     
  7332                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7333   005D3C  010E               	movlb	14	; () banked
  7334   005D3E  87DA               	bsf	218,3,b	;volatile
  7335                           
  7336                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7337   005D40  EC9A  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7338   005D44                     
  7339                           ;i2c.c: 57:   tmp = SSP2BUF;
  7340   005D44  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7341                           
  7342                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7343   005D48  EC9A  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7344   005D4C                     
  7345                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7346   005D4C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7347   005D4E  B4D8               	btfsc	status,2,c
  7348   005D50  EFAC  F02E         	goto	u4901
  7349   005D54  EFB0  F02E         	goto	u4900
  7350   005D58                     u4901:
  7351   005D58  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7352   005D5A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7353   005D5C  EFB1  F02E         	goto	u4918
  7354   005D60                     u4900:
  7355   005D60  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7356   005D62                     u4918:
  7357   005D62  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7358   005D64  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7359   005D66  010E               	movlb	14	; () banked
  7360   005D68  51DA               	movf	218,w,b	;volatile
  7361   005D6A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7362   005D6C  0BDF               	andlw	-33
  7363   005D6E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7364   005D70  6FDA               	movwf	218,b	;volatile
  7365   005D72                     
  7366                           ; BSR set to: 14
  7367                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7368   005D72  89DA               	bsf	218,4,b	;volatile
  7369   005D74                     
  7370                           ; BSR set to: 14
  7371                           ;i2c.c: 61:   return tmp;
  7372   005D74  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7373   005D76                     
  7374                           ; BSR set to: 14
  7375   005D76  0012               	return		;funcret
  7376   005D78                     __end_of_I2C_2_Master_Read:
  7377                           	callstack 0
  7378                           
  7379 ;; *************** function _initUSART4 *****************
  7380 ;; Defined at:
  7381 ;;		line 4 in file "serial.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;		None
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;Total ram usage:        0 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 1
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_main
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text30
  7410   005FE8                     __ptext30:
  7411                           	callstack 0
  7412   005FE8                     _initUSART4:
  7413                           	callstack 29
  7414   005FE8                     
  7415                           ;serial.c: 5:     RC0PPS = 0x12;
  7416   005FE8  0E12               	movlw	18
  7417   005FEA  010E               	movlb	14	; () banked
  7418   005FEC  6F62               	movwf	98,b	;volatile
  7419                           
  7420                           ;serial.c: 6:     RX4PPS = 0x11;
  7421   005FEE  0E11               	movlw	17
  7422   005FF0  6F15               	movwf	21,b	;volatile
  7423   005FF2                     
  7424                           ; BSR set to: 14
  7425                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7426   005FF2  97E9               	bcf	233,3,b	;volatile
  7427   005FF4                     
  7428                           ; BSR set to: 14
  7429                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7430   005FF4  95E8               	bcf	232,2,b	;volatile
  7431                           
  7432                           ;serial.c: 9:     SP4BRGL = 51;
  7433   005FF6  0E33               	movlw	51
  7434   005FF8  6FE5               	movwf	229,b	;volatile
  7435                           
  7436                           ;serial.c: 10:     SP4BRGH = 0;
  7437   005FFA  0E00               	movlw	0
  7438   005FFC  6FE6               	movwf	230,b	;volatile
  7439   005FFE                     
  7440                           ; BSR set to: 14
  7441                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7442   005FFE  89E7               	bsf	231,4,b	;volatile
  7443   006000                     
  7444                           ; BSR set to: 14
  7445                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7446   006000  8BE8               	bsf	232,5,b	;volatile
  7447   006002                     
  7448                           ; BSR set to: 14
  7449                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7450   006002  8FE7               	bsf	231,7,b	;volatile
  7451   006004                     
  7452                           ; BSR set to: 14
  7453   006004  0012               	return		;funcret
  7454   006006                     __end_of_initUSART4:
  7455                           	callstack 0
  7456                           
  7457 ;; *************** function _initDCmotorsPWM *****************
  7458 ;; Defined at:
  7459 ;;		line 6 in file "dc_motor.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg, status,2
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7477 ;;Total ram usage:        2 bytes
  7478 ;; Hardware stack levels used: 1
  7479 ;; Hardware stack levels required when called: 1
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_main
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text31
  7488   0052BC                     __ptext31:
  7489                           	callstack 0
  7490   0052BC                     _initDCmotorsPWM:
  7491                           	callstack 29
  7492   0052BC                     
  7493                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7494   0052BC  0E05               	movlw	5
  7495   0052BE  010E               	movlb	14	; () banked
  7496   0052C0  6F74               	movwf	116,b	;volatile
  7497                           
  7498                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7499   0052C2  0E06               	movlw	6
  7500   0052C4  6F76               	movwf	118,b	;volatile
  7501                           
  7502                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7503   0052C6  0E07               	movlw	7
  7504   0052C8  6F69               	movwf	105,b	;volatile
  7505                           
  7506                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7507   0052CA  0E08               	movlw	8
  7508   0052CC  6F88               	movwf	136,b	;volatile
  7509   0052CE                     
  7510                           ; BSR set to: 14
  7511                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7512   0052CE  9485               	bcf	133,2,c	;volatile
  7513   0052D0                     
  7514                           ; BSR set to: 14
  7515                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7516   0052D0  9885               	bcf	133,4,c	;volatile
  7517   0052D2                     
  7518                           ; BSR set to: 14
  7519                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7520   0052D2  9E83               	bcf	131,7,c	;volatile
  7521   0052D4                     
  7522                           ; BSR set to: 14
  7523                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7524   0052D4  9C87               	bcf	135,6,c	;volatile
  7525                           
  7526                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7527   0052D6  50BD               	movf	189,w,c	;volatile
  7528   0052D8  0B8F               	andlw	-113
  7529   0052DA  0930               	iorlw	48
  7530   0052DC  6EBD               	movwf	189,c	;volatile
  7531                           
  7532                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7533   0052DE  0EE0               	movlw	-32
  7534   0052E0  16BE               	andwf	190,f,c	;volatile
  7535                           
  7536                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7537   0052E2  50BF               	movf	191,w,c	;volatile
  7538   0052E4  0BF0               	andlw	-16
  7539   0052E6  0901               	iorlw	1
  7540   0052E8  6EBF               	movwf	191,c	;volatile
  7541   0052EA                     
  7542                           ; BSR set to: 14
  7543                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7544   0052EA  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7545   0052EE                     
  7546                           ; BSR set to: 14
  7547                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7548   0052EE  8EBD               	bsf	189,7,c	;volatile
  7549                           
  7550                           ;dc_motor.c: 34:     CCPR1H=0;
  7551   0052F0  0E00               	movlw	0
  7552   0052F2  6EAA               	movwf	170,c	;volatile
  7553                           
  7554                           ;dc_motor.c: 35:     CCPR2H=0;
  7555   0052F4  0E00               	movlw	0
  7556   0052F6  6EA6               	movwf	166,c	;volatile
  7557                           
  7558                           ;dc_motor.c: 36:     CCPR3H=0;
  7559   0052F8  0E00               	movlw	0
  7560   0052FA  010F               	movlb	15	; () banked
  7561   0052FC  6F25               	movwf	37,b	;volatile
  7562                           
  7563                           ;dc_motor.c: 37:     CCPR4H=0;
  7564   0052FE  0E00               	movlw	0
  7565   005300  6F21               	movwf	33,b	;volatile
  7566                           
  7567                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7568   005302  0EFC               	movlw	-4
  7569   005304  16AD               	andwf	173,f,c	;volatile
  7570                           
  7571                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7572   005306  0EF3               	movlw	-13
  7573   005308  16AD               	andwf	173,f,c	;volatile
  7574                           
  7575                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7576   00530A  0ECF               	movlw	-49
  7577   00530C  16AD               	andwf	173,f,c	;volatile
  7578                           
  7579                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7580   00530E  0E3F               	movlw	-193
  7581   005310  16AD               	andwf	173,f,c	;volatile
  7582   005312                     
  7583                           ; BSR set to: 15
  7584                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7585   005312  88AB               	bsf	171,4,c	;volatile
  7586                           
  7587                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7588   005314  50AB               	movf	171,w,c	;volatile
  7589   005316  0BF0               	andlw	-16
  7590   005318  090C               	iorlw	12
  7591   00531A  6EAB               	movwf	171,c	;volatile
  7592   00531C                     
  7593                           ; BSR set to: 15
  7594                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7595   00531C  8EAB               	bsf	171,7,c	;volatile
  7596   00531E                     
  7597                           ; BSR set to: 15
  7598                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7599   00531E  88A7               	bsf	167,4,c	;volatile
  7600                           
  7601                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7602   005320  50A7               	movf	167,w,c	;volatile
  7603   005322  0BF0               	andlw	-16
  7604   005324  090C               	iorlw	12
  7605   005326  6EA7               	movwf	167,c	;volatile
  7606   005328                     
  7607                           ; BSR set to: 15
  7608                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7609   005328  8EA7               	bsf	167,7,c	;volatile
  7610   00532A                     
  7611                           ; BSR set to: 15
  7612                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7613   00532A  8926               	bsf	38,4,b	;volatile
  7614                           
  7615                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7616   00532C  5126               	movf	38,w,b	;volatile
  7617   00532E  0BF0               	andlw	-16
  7618   005330  090C               	iorlw	12
  7619   005332  6F26               	movwf	38,b	;volatile
  7620   005334                     
  7621                           ; BSR set to: 15
  7622                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7623   005334  8F26               	bsf	38,7,b	;volatile
  7624   005336                     
  7625                           ; BSR set to: 15
  7626                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7627   005336  8922               	bsf	34,4,b	;volatile
  7628                           
  7629                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7630   005338  5122               	movf	34,w,b	;volatile
  7631   00533A  0BF0               	andlw	-16
  7632   00533C  090C               	iorlw	12
  7633   00533E  6F22               	movwf	34,b	;volatile
  7634   005340                     
  7635                           ; BSR set to: 15
  7636                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7637   005340  8F22               	bsf	34,7,b	;volatile
  7638   005342                     
  7639                           ; BSR set to: 15
  7640   005342  0012               	return		;funcret
  7641   005344                     __end_of_initDCmotorsPWM:
  7642                           	callstack 0
  7643                           
  7644 ;; *************** function _go_Home *****************
  7645 ;; Defined at:
  7646 ;;		line 4 in file "Memory.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7649 ;;		 -> WayBack(50), 
  7650 ;;  Time_forward    2   37[COMRAM] PTR int 
  7651 ;;		 -> Time_forward(100), 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;  i               2   42[COMRAM] int 
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  1    wreg      void 
  7656 ;; Registers used:
  7657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;Total ram usage:        9 bytes
  7668 ;; Hardware stack levels used: 1
  7669 ;; Hardware stack levels required when called: 6
  7670 ;; This function calls:
  7671 ;;		_BlueMove
  7672 ;;		_GreenMove
  7673 ;;		_LightBlueMove
  7674 ;;		_OrangeMove
  7675 ;;		_RedMove
  7676 ;;		_ReversePink
  7677 ;;		_ReverseYellow
  7678 ;;		_reverseDetect
  7679 ;;		_stop
  7680 ;;		_timed_forward
  7681 ;; This function is called by:
  7682 ;;		_main
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text32
  7687   003A56                     __ptext32:
  7688                           	callstack 0
  7689   003A56                     _go_Home:
  7690                           	callstack 24
  7691   003A56                     
  7692                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  7693   003A56  0E61               	movlw	low _motorL
  7694   003A58  6E20               	movwf	BlueMove@mL^0,c
  7695   003A5A  0E01               	movlw	high _motorL
  7696   003A5C  6E21               	movwf	(BlueMove@mL+1)^0,c
  7697   003A5E  0E58               	movlw	low _motorR
  7698   003A60  6E22               	movwf	BlueMove@mR^0,c
  7699   003A62  0E01               	movlw	high _motorR
  7700   003A64  6E23               	movwf	(BlueMove@mR+1)^0,c
  7701   003A66  ECC0  F02A         	call	_BlueMove	;wreg free
  7702   003A6A                     
  7703                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  7704   003A6A  9ED5               	bcf	213,7,c	;volatile
  7705   003A6C                     
  7706                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  7707   003A6C  C114  F02B         	movff	_move_count,go_Home@i	;volatile
  7708   003A70  C115  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7709   003A74                     l5552:
  7710   003A74  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7711   003A76  EF41  F01D         	goto	u5520
  7712   003A7A  EF3F  F01D         	goto	u5521
  7713   003A7E                     u5521:
  7714   003A7E  EF43  F01D         	goto	l5556
  7715   003A82                     u5520:
  7716   003A82  EF9A  F01E         	goto	l636
  7717   003A86                     l5556:
  7718                           
  7719                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7720   003A86  0E61               	movlw	low _motorL
  7721   003A88  6E14               	movwf	timed_forward@mL^0,c
  7722   003A8A  0E01               	movlw	high _motorL
  7723   003A8C  6E15               	movwf	(timed_forward@mL+1)^0,c
  7724   003A8E  0E58               	movlw	low _motorR
  7725   003A90  6E16               	movwf	timed_forward@mR^0,c
  7726   003A92  0E01               	movlw	high _motorR
  7727   003A94  6E17               	movwf	(timed_forward@mR+1)^0,c
  7728   003A96  90D8               	bcf	status,0,c
  7729   003A98  342B               	rlcf	go_Home@i^0,w,c
  7730   003A9A  6ED9               	movwf	fsr2l,c
  7731   003A9C  342C               	rlcf	(go_Home@i+1)^0,w,c
  7732   003A9E  6EDA               	movwf	fsr2h,c
  7733   003AA0  5026               	movf	go_Home@Time_forward^0,w,c
  7734   003AA2  26D9               	addwf	fsr2l,f,c
  7735   003AA4  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7736   003AA6  22DA               	addwfc	fsr2h,f,c
  7737   003AA8  CFDE F018          	movff	postinc2,timed_forward@time
  7738   003AAC  CFDD F019          	movff	postdec2,timed_forward@time+1
  7739   003AB0  EC78  F027         	call	_timed_forward	;wreg free
  7740   003AB4                     
  7741                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  7742   003AB4  502B               	movf	go_Home@i^0,w,c
  7743   003AB6  2424               	addwf	go_Home@WayBack^0,w,c
  7744   003AB8  6E28               	movwf	??_go_Home^0,c
  7745   003ABA  502C               	movf	(go_Home@i+1)^0,w,c
  7746   003ABC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7747   003ABE  6E29               	movwf	(??_go_Home+1)^0,c
  7748   003AC0  0EFF               	movlw	255
  7749   003AC2  2428               	addwf	??_go_Home^0,w,c
  7750   003AC4  6ED9               	movwf	fsr2l,c
  7751   003AC6  0EFF               	movlw	255
  7752   003AC8  2029               	addwfc	(??_go_Home+1)^0,w,c
  7753   003ACA  6EDA               	movwf	fsr2h,c
  7754   003ACC  04DE               	decf	postinc2,w,c
  7755   003ACE  A4D8               	btfss	status,2,c
  7756   003AD0  EF6C  F01D         	goto	u5531
  7757   003AD4  EF6E  F01D         	goto	u5530
  7758   003AD8                     u5531:
  7759   003AD8  EF84  F01D         	goto	l5562
  7760   003ADC                     u5530:
  7761   003ADC                     
  7762                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
  7763   003ADC  0E61               	movlw	low _motorL
  7764   003ADE  6E1A               	movwf	reverseDetect@mL^0,c
  7765   003AE0  0E01               	movlw	high _motorL
  7766   003AE2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7767   003AE4  0E58               	movlw	low _motorR
  7768   003AE6  6E1C               	movwf	reverseDetect@mR^0,c
  7769   003AE8  0E01               	movlw	high _motorR
  7770   003AEA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7771   003AEC  EC7C  F02B         	call	_reverseDetect	;wreg free
  7772                           
  7773                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  7774   003AF0  0E61               	movlw	low _motorL
  7775   003AF2  6E20               	movwf	GreenMove@mL^0,c
  7776   003AF4  0E01               	movlw	high _motorL
  7777   003AF6  6E21               	movwf	(GreenMove@mL+1)^0,c
  7778   003AF8  0E58               	movlw	low _motorR
  7779   003AFA  6E22               	movwf	GreenMove@mR^0,c
  7780   003AFC  0E01               	movlw	high _motorR
  7781   003AFE  6E23               	movwf	(GreenMove@mR+1)^0,c
  7782   003B00  ECFB  F02E         	call	_GreenMove	;wreg free
  7783                           
  7784                           ;Memory.c: 14:         }
  7785   003B04  EF86  F01E         	goto	l624
  7786   003B08                     l5562:
  7787   003B08  502B               	movf	go_Home@i^0,w,c
  7788   003B0A  2424               	addwf	go_Home@WayBack^0,w,c
  7789   003B0C  6E28               	movwf	??_go_Home^0,c
  7790   003B0E  502C               	movf	(go_Home@i+1)^0,w,c
  7791   003B10  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7792   003B12  6E29               	movwf	(??_go_Home+1)^0,c
  7793   003B14  0EFF               	movlw	255
  7794   003B16  2428               	addwf	??_go_Home^0,w,c
  7795   003B18  6ED9               	movwf	fsr2l,c
  7796   003B1A  0EFF               	movlw	255
  7797   003B1C  2029               	addwfc	(??_go_Home+1)^0,w,c
  7798   003B1E  6EDA               	movwf	fsr2h,c
  7799   003B20  0E02               	movlw	2
  7800   003B22  18DE               	xorwf	postinc2,w,c
  7801   003B24  A4D8               	btfss	status,2,c
  7802   003B26  EF97  F01D         	goto	u5541
  7803   003B2A  EF99  F01D         	goto	u5540
  7804   003B2E                     u5541:
  7805   003B2E  EFAF  F01D         	goto	l5566
  7806   003B32                     u5540:
  7807   003B32                     
  7808                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  7809   003B32  0E61               	movlw	low _motorL
  7810   003B34  6E1A               	movwf	reverseDetect@mL^0,c
  7811   003B36  0E01               	movlw	high _motorL
  7812   003B38  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7813   003B3A  0E58               	movlw	low _motorR
  7814   003B3C  6E1C               	movwf	reverseDetect@mR^0,c
  7815   003B3E  0E01               	movlw	high _motorR
  7816   003B40  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7817   003B42  EC7C  F02B         	call	_reverseDetect	;wreg free
  7818                           
  7819                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  7820   003B46  0E61               	movlw	low _motorL
  7821   003B48  6E20               	movwf	LightBlueMove@mL^0,c
  7822   003B4A  0E01               	movlw	high _motorL
  7823   003B4C  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7824   003B4E  0E58               	movlw	low _motorR
  7825   003B50  6E22               	movwf	LightBlueMove@mR^0,c
  7826   003B52  0E01               	movlw	high _motorR
  7827   003B54  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7828   003B56  EC53  F02C         	call	_LightBlueMove	;wreg free
  7829                           
  7830                           ;Memory.c: 18:         }
  7831   003B5A  EF86  F01E         	goto	l624
  7832   003B5E                     l5566:
  7833   003B5E  502B               	movf	go_Home@i^0,w,c
  7834   003B60  2424               	addwf	go_Home@WayBack^0,w,c
  7835   003B62  6E28               	movwf	??_go_Home^0,c
  7836   003B64  502C               	movf	(go_Home@i+1)^0,w,c
  7837   003B66  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7838   003B68  6E29               	movwf	(??_go_Home+1)^0,c
  7839   003B6A  0EFF               	movlw	255
  7840   003B6C  2428               	addwf	??_go_Home^0,w,c
  7841   003B6E  6ED9               	movwf	fsr2l,c
  7842   003B70  0EFF               	movlw	255
  7843   003B72  2029               	addwfc	(??_go_Home+1)^0,w,c
  7844   003B74  6EDA               	movwf	fsr2h,c
  7845   003B76  0E03               	movlw	3
  7846   003B78  18DE               	xorwf	postinc2,w,c
  7847   003B7A  A4D8               	btfss	status,2,c
  7848   003B7C  EFC2  F01D         	goto	u5551
  7849   003B80  EFC4  F01D         	goto	u5550
  7850   003B84                     u5551:
  7851   003B84  EFDA  F01D         	goto	l5570
  7852   003B88                     u5550:
  7853   003B88                     
  7854                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  7855   003B88  0E61               	movlw	low _motorL
  7856   003B8A  6E1A               	movwf	reverseDetect@mL^0,c
  7857   003B8C  0E01               	movlw	high _motorL
  7858   003B8E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7859   003B90  0E58               	movlw	low _motorR
  7860   003B92  6E1C               	movwf	reverseDetect@mR^0,c
  7861   003B94  0E01               	movlw	high _motorR
  7862   003B96  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7863   003B98  EC7C  F02B         	call	_reverseDetect	;wreg free
  7864                           
  7865                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  7866   003B9C  0E61               	movlw	low _motorL
  7867   003B9E  6E20               	movwf	ReverseYellow@mL^0,c
  7868   003BA0  0E01               	movlw	high _motorL
  7869   003BA2  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7870   003BA4  0E58               	movlw	low _motorR
  7871   003BA6  6E22               	movwf	ReverseYellow@mR^0,c
  7872   003BA8  0E01               	movlw	high _motorR
  7873   003BAA  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7874   003BAC  ECC2  F026         	call	_ReverseYellow	;wreg free
  7875                           
  7876                           ;Memory.c: 22:         }
  7877   003BB0  EF86  F01E         	goto	l624
  7878   003BB4                     l5570:
  7879   003BB4  502B               	movf	go_Home@i^0,w,c
  7880   003BB6  2424               	addwf	go_Home@WayBack^0,w,c
  7881   003BB8  6E28               	movwf	??_go_Home^0,c
  7882   003BBA  502C               	movf	(go_Home@i+1)^0,w,c
  7883   003BBC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7884   003BBE  6E29               	movwf	(??_go_Home+1)^0,c
  7885   003BC0  0EFF               	movlw	255
  7886   003BC2  2428               	addwf	??_go_Home^0,w,c
  7887   003BC4  6ED9               	movwf	fsr2l,c
  7888   003BC6  0EFF               	movlw	255
  7889   003BC8  2029               	addwfc	(??_go_Home+1)^0,w,c
  7890   003BCA  6EDA               	movwf	fsr2h,c
  7891   003BCC  0E04               	movlw	4
  7892   003BCE  18DE               	xorwf	postinc2,w,c
  7893   003BD0  A4D8               	btfss	status,2,c
  7894   003BD2  EFED  F01D         	goto	u5561
  7895   003BD6  EFEF  F01D         	goto	u5560
  7896   003BDA                     u5561:
  7897   003BDA  EF05  F01E         	goto	l5574
  7898   003BDE                     u5560:
  7899   003BDE                     
  7900                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  7901   003BDE  0E61               	movlw	low _motorL
  7902   003BE0  6E1A               	movwf	reverseDetect@mL^0,c
  7903   003BE2  0E01               	movlw	high _motorL
  7904   003BE4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7905   003BE6  0E58               	movlw	low _motorR
  7906   003BE8  6E1C               	movwf	reverseDetect@mR^0,c
  7907   003BEA  0E01               	movlw	high _motorR
  7908   003BEC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7909   003BEE  EC7C  F02B         	call	_reverseDetect	;wreg free
  7910                           
  7911                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  7912   003BF2  0E61               	movlw	low _motorL
  7913   003BF4  6E20               	movwf	BlueMove@mL^0,c
  7914   003BF6  0E01               	movlw	high _motorL
  7915   003BF8  6E21               	movwf	(BlueMove@mL+1)^0,c
  7916   003BFA  0E58               	movlw	low _motorR
  7917   003BFC  6E22               	movwf	BlueMove@mR^0,c
  7918   003BFE  0E01               	movlw	high _motorR
  7919   003C00  6E23               	movwf	(BlueMove@mR+1)^0,c
  7920   003C02  ECC0  F02A         	call	_BlueMove	;wreg free
  7921                           
  7922                           ;Memory.c: 26:         }
  7923   003C06  EF86  F01E         	goto	l624
  7924   003C0A                     l5574:
  7925   003C0A  502B               	movf	go_Home@i^0,w,c
  7926   003C0C  2424               	addwf	go_Home@WayBack^0,w,c
  7927   003C0E  6E28               	movwf	??_go_Home^0,c
  7928   003C10  502C               	movf	(go_Home@i+1)^0,w,c
  7929   003C12  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7930   003C14  6E29               	movwf	(??_go_Home+1)^0,c
  7931   003C16  0EFF               	movlw	255
  7932   003C18  2428               	addwf	??_go_Home^0,w,c
  7933   003C1A  6ED9               	movwf	fsr2l,c
  7934   003C1C  0EFF               	movlw	255
  7935   003C1E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7936   003C20  6EDA               	movwf	fsr2h,c
  7937   003C22  0E05               	movlw	5
  7938   003C24  18DE               	xorwf	postinc2,w,c
  7939   003C26  A4D8               	btfss	status,2,c
  7940   003C28  EF18  F01E         	goto	u5571
  7941   003C2C  EF1A  F01E         	goto	u5570
  7942   003C30                     u5571:
  7943   003C30  EF30  F01E         	goto	l5578
  7944   003C34                     u5570:
  7945   003C34                     
  7946                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  7947   003C34  0E61               	movlw	low _motorL
  7948   003C36  6E1A               	movwf	reverseDetect@mL^0,c
  7949   003C38  0E01               	movlw	high _motorL
  7950   003C3A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7951   003C3C  0E58               	movlw	low _motorR
  7952   003C3E  6E1C               	movwf	reverseDetect@mR^0,c
  7953   003C40  0E01               	movlw	high _motorR
  7954   003C42  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7955   003C44  EC7C  F02B         	call	_reverseDetect	;wreg free
  7956                           
  7957                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  7958   003C48  0E61               	movlw	low _motorL
  7959   003C4A  6E20               	movwf	RedMove@mL^0,c
  7960   003C4C  0E01               	movlw	high _motorL
  7961   003C4E  6E21               	movwf	(RedMove@mL+1)^0,c
  7962   003C50  0E58               	movlw	low _motorR
  7963   003C52  6E22               	movwf	RedMove@mR^0,c
  7964   003C54  0E01               	movlw	high _motorR
  7965   003C56  6E23               	movwf	(RedMove@mR+1)^0,c
  7966   003C58  ECDC  F02E         	call	_RedMove	;wreg free
  7967                           
  7968                           ;Memory.c: 30:         }
  7969   003C5C  EF86  F01E         	goto	l624
  7970   003C60                     l5578:
  7971   003C60  502B               	movf	go_Home@i^0,w,c
  7972   003C62  2424               	addwf	go_Home@WayBack^0,w,c
  7973   003C64  6E28               	movwf	??_go_Home^0,c
  7974   003C66  502C               	movf	(go_Home@i+1)^0,w,c
  7975   003C68  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7976   003C6A  6E29               	movwf	(??_go_Home+1)^0,c
  7977   003C6C  0EFF               	movlw	255
  7978   003C6E  2428               	addwf	??_go_Home^0,w,c
  7979   003C70  6ED9               	movwf	fsr2l,c
  7980   003C72  0EFF               	movlw	255
  7981   003C74  2029               	addwfc	(??_go_Home+1)^0,w,c
  7982   003C76  6EDA               	movwf	fsr2h,c
  7983   003C78  0E06               	movlw	6
  7984   003C7A  18DE               	xorwf	postinc2,w,c
  7985   003C7C  A4D8               	btfss	status,2,c
  7986   003C7E  EF43  F01E         	goto	u5581
  7987   003C82  EF45  F01E         	goto	u5580
  7988   003C86                     u5581:
  7989   003C86  EF5B  F01E         	goto	l5582
  7990   003C8A                     u5580:
  7991   003C8A                     
  7992                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  7993   003C8A  0E61               	movlw	low _motorL
  7994   003C8C  6E1A               	movwf	reverseDetect@mL^0,c
  7995   003C8E  0E01               	movlw	high _motorL
  7996   003C90  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7997   003C92  0E58               	movlw	low _motorR
  7998   003C94  6E1C               	movwf	reverseDetect@mR^0,c
  7999   003C96  0E01               	movlw	high _motorR
  8000   003C98  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8001   003C9A  EC7C  F02B         	call	_reverseDetect	;wreg free
  8002                           
  8003                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8004   003C9E  0E61               	movlw	low _motorL
  8005   003CA0  6E20               	movwf	OrangeMove@mL^0,c
  8006   003CA2  0E01               	movlw	high _motorL
  8007   003CA4  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8008   003CA6  0E58               	movlw	low _motorR
  8009   003CA8  6E22               	movwf	OrangeMove@mR^0,c
  8010   003CAA  0E01               	movlw	high _motorR
  8011   003CAC  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8012   003CAE  EC2A  F02C         	call	_OrangeMove	;wreg free
  8013                           
  8014                           ;Memory.c: 34:         }
  8015   003CB2  EF86  F01E         	goto	l624
  8016   003CB6                     l5582:
  8017   003CB6  502B               	movf	go_Home@i^0,w,c
  8018   003CB8  2424               	addwf	go_Home@WayBack^0,w,c
  8019   003CBA  6E28               	movwf	??_go_Home^0,c
  8020   003CBC  502C               	movf	(go_Home@i+1)^0,w,c
  8021   003CBE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8022   003CC0  6E29               	movwf	(??_go_Home+1)^0,c
  8023   003CC2  0EFF               	movlw	255
  8024   003CC4  2428               	addwf	??_go_Home^0,w,c
  8025   003CC6  6ED9               	movwf	fsr2l,c
  8026   003CC8  0EFF               	movlw	255
  8027   003CCA  2029               	addwfc	(??_go_Home+1)^0,w,c
  8028   003CCC  6EDA               	movwf	fsr2h,c
  8029   003CCE  0E07               	movlw	7
  8030   003CD0  18DE               	xorwf	postinc2,w,c
  8031   003CD2  A4D8               	btfss	status,2,c
  8032   003CD4  EF6E  F01E         	goto	u5591
  8033   003CD8  EF70  F01E         	goto	u5590
  8034   003CDC                     u5591:
  8035   003CDC  EF86  F01E         	goto	l630
  8036   003CE0                     u5590:
  8037   003CE0                     
  8038                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  8039   003CE0  0E61               	movlw	low _motorL
  8040   003CE2  6E1A               	movwf	reverseDetect@mL^0,c
  8041   003CE4  0E01               	movlw	high _motorL
  8042   003CE6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8043   003CE8  0E58               	movlw	low _motorR
  8044   003CEA  6E1C               	movwf	reverseDetect@mR^0,c
  8045   003CEC  0E01               	movlw	high _motorR
  8046   003CEE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8047   003CF0  EC7C  F02B         	call	_reverseDetect	;wreg free
  8048                           
  8049                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8050   003CF4  0E61               	movlw	low _motorL
  8051   003CF6  6E20               	movwf	ReversePink@mL^0,c
  8052   003CF8  0E01               	movlw	high _motorL
  8053   003CFA  6E21               	movwf	(ReversePink@mL+1)^0,c
  8054   003CFC  0E58               	movlw	low _motorR
  8055   003CFE  6E22               	movwf	ReversePink@mR^0,c
  8056   003D00  0E01               	movlw	high _motorR
  8057   003D02  6E23               	movwf	(ReversePink@mR+1)^0,c
  8058   003D04  EC1D  F027         	call	_ReversePink	;wreg free
  8059   003D08  EF86  F01E         	goto	l624
  8060   003D0C                     l630:
  8061   003D0C                     l624:
  8062                           
  8063                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8064   003D0C  0E61               	movlw	low _motorL
  8065   003D0E  6E14               	movwf	stop@mL^0,c
  8066   003D10  0E01               	movlw	high _motorL
  8067   003D12  6E15               	movwf	(stop@mL+1)^0,c
  8068   003D14  0E58               	movlw	low _motorR
  8069   003D16  6E16               	movwf	stop@mR^0,c
  8070   003D18  0E01               	movlw	high _motorR
  8071   003D1A  6E17               	movwf	(stop@mR+1)^0,c
  8072   003D1C  ECA2  F029         	call	_stop	;wreg free
  8073   003D20                     
  8074                           ;Memory.c: 40:         run_flag=0;
  8075   003D20  0E00               	movlw	0
  8076   003D22  0101               	movlb	1	; () banked
  8077   003D24  6F17               	movwf	(_run_flag+1)& (0+255),b
  8078   003D26  0E00               	movlw	0
  8079   003D28  6F16               	movwf	_run_flag& (0+255),b
  8080   003D2A                     
  8081                           ; BSR set to: 1
  8082                           ;Memory.c: 43:   }
  8083   003D2A  062B               	decf	go_Home@i^0,f,c
  8084   003D2C  A0D8               	btfss	status,0,c
  8085   003D2E  062C               	decf	(go_Home@i+1)^0,f,c
  8086   003D30  EF3A  F01D         	goto	l5552
  8087   003D34                     l636:
  8088   003D34  0012               	return		;funcret
  8089   003D36                     __end_of_go_Home:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function _timed_forward *****************
  8093 ;; Defined at:
  8094 ;;		line 165 in file "dc_motor.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8097 ;;		 -> motorL(9), 
  8098 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8099 ;;		 -> motorR(9), 
  8100 ;;  time            2   23[COMRAM] int 
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;		None
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  1    wreg      void 
  8105 ;; Registers used:
  8106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8112 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;Total ram usage:        8 bytes
  8117 ;; Hardware stack levels used: 1
  8118 ;; Hardware stack levels required when called: 3
  8119 ;; This function calls:
  8120 ;;		_delayed_ms
  8121 ;;		_setMotorPWM
  8122 ;; This function is called by:
  8123 ;;		_go_Home
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text33
  8128   004EF0                     __ptext33:
  8129                           	callstack 0
  8130   004EF0                     _timed_forward:
  8131                           	callstack 26
  8132   004EF0                     
  8133                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8134   004EF0  EE20 F001          	lfsr	2,1
  8135   004EF4  5014               	movf	timed_forward@mL^0,w,c
  8136   004EF6  26D9               	addwf	fsr2l,f,c
  8137   004EF8  5015               	movf	(timed_forward@mL+1)^0,w,c
  8138   004EFA  22DA               	addwfc	fsr2h,f,c
  8139   004EFC  0E01               	movlw	1
  8140   004EFE  6EDF               	movwf	indf2,c
  8141                           
  8142                           ;dc_motor.c: 169:     mR->direction =1;
  8143   004F00  EE20 F001          	lfsr	2,1
  8144   004F04  5016               	movf	timed_forward@mR^0,w,c
  8145   004F06  26D9               	addwf	fsr2l,f,c
  8146   004F08  5017               	movf	(timed_forward@mR+1)^0,w,c
  8147   004F0A  22DA               	addwfc	fsr2h,f,c
  8148   004F0C  0E01               	movlw	1
  8149   004F0E  6EDF               	movwf	indf2,c
  8150                           
  8151                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8152   004F10  EFAE  F027         	goto	l5128
  8153   004F14                     l5120:
  8154                           
  8155                           ;dc_motor.c: 172:         mL->power+=10;
  8156   004F14  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8157   004F18  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8158   004F1C  0E0A               	movlw	10
  8159   004F1E  26DF               	addwf	indf2,f,c
  8160                           
  8161                           ;dc_motor.c: 173:         mR->power+=10;
  8162   004F20  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8163   004F24  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8164   004F28  0E0A               	movlw	10
  8165   004F2A  26DF               	addwf	indf2,f,c
  8166   004F2C                     
  8167                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8168   004F2C  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8169   004F30  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8170   004F34  EC71  F023         	call	_setMotorPWM	;wreg free
  8171   004F38                     
  8172                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8173   004F38  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8174   004F3C  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8175   004F40  EC71  F023         	call	_setMotorPWM	;wreg free
  8176   004F44                     
  8177                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8178   004F44  0E02               	movlw	2
  8179   004F46  6E1B               	movwf	(??_timed_forward+1)^0,c
  8180   004F48  0EA0               	movlw	160
  8181   004F4A  6E1A               	movwf	??_timed_forward^0,c
  8182   004F4C  0E92               	movlw	146
  8183   004F4E                     u5927:
  8184   004F4E  2EE8               	decfsz	wreg,f,c
  8185   004F50  D7FE               	bra	u5927
  8186   004F52  2E1A               	decfsz	??_timed_forward^0,f,c
  8187   004F54  D7FC               	bra	u5927
  8188   004F56  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8189   004F58  D7FA               	bra	u5927
  8190   004F5A  D000               	nop2	
  8191   004F5C                     l5128:
  8192   004F5C  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8193   004F60  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8194   004F64  0E1E               	movlw	30
  8195   004F66  60DF               	cpfslt	indf2,c
  8196   004F68  EFB8  F027         	goto	u4981
  8197   004F6C  EFBA  F027         	goto	u4980
  8198   004F70                     u4981:
  8199   004F70  EFC6  F027         	goto	l5132
  8200   004F74                     u4980:
  8201   004F74  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8202   004F78  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8203   004F7C  0E1D               	movlw	29
  8204   004F7E  64DF               	cpfsgt	indf2,c
  8205   004F80  EFC4  F027         	goto	u4991
  8206   004F84  EFC6  F027         	goto	u4990
  8207   004F88                     u4991:
  8208   004F88  EF8A  F027         	goto	l5120
  8209   004F8C                     u4990:
  8210   004F8C                     l5132:
  8211                           
  8212                           ;dc_motor.c: 181:     delayed_ms(time);
  8213   004F8C  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8214   004F90  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8215   004F94  EC36  F02F         	call	_delayed_ms	;wreg free
  8216   004F98  0012               	return		;funcret
  8217   004F9A                     __end_of_timed_forward:
  8218                           	callstack 0
  8219                           
  8220 ;; *************** function _delayed_ms *****************
  8221 ;; Defined at:
  8222 ;;		line 39 in file "timers.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  time            2    0[COMRAM] int 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  i               2    3[COMRAM] unsigned int 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1    wreg      void 
  8229 ;; Registers used:
  8230 ;;		wreg, status,2, status,0
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8240 ;;Total ram usage:        5 bytes
  8241 ;; Hardware stack levels used: 1
  8242 ;; Hardware stack levels required when called: 1
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_timed_forward
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text34
  8251   005E6C                     __ptext34:
  8252                           	callstack 0
  8253   005E6C                     _delayed_ms:
  8254                           	callstack 27
  8255   005E6C                     
  8256                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8257   005E6C  0E00               	movlw	0
  8258   005E6E  6E05               	movwf	(delayed_ms@i+1)^0,c
  8259   005E70  0E00               	movlw	0
  8260   005E72  6E04               	movwf	delayed_ms@i^0,c
  8261   005E74  EF46  F02F         	goto	l665
  8262   005E78                     l4952:
  8263                           
  8264                           ;timers.c: 41:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8265   005E78  0E0B               	movlw	11
  8266   005E7A  6E03               	movwf	??_delayed_ms^0,c
  8267   005E7C  0E62               	movlw	98
  8268   005E7E                     u5937:
  8269   005E7E  2EE8               	decfsz	wreg,f,c
  8270   005E80  D7FE               	bra	u5937
  8271   005E82  2E03               	decfsz	??_delayed_ms^0,f,c
  8272   005E84  D7FC               	bra	u5937
  8273   005E86  D000               	nop2	
  8274   005E88                     
  8275                           ;timers.c: 42:     }
  8276   005E88  4A04               	infsnz	delayed_ms@i^0,f,c
  8277   005E8A  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8278   005E8C                     l665:
  8279   005E8C  5001               	movf	delayed_ms@time^0,w,c
  8280   005E8E  5C04               	subwf	delayed_ms@i^0,w,c
  8281   005E90  5002               	movf	(delayed_ms@time+1)^0,w,c
  8282   005E92  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8283   005E94  A0D8               	btfss	status,0,c
  8284   005E96  EF4F  F02F         	goto	u4921
  8285   005E9A  EF51  F02F         	goto	u4920
  8286   005E9E                     u4921:
  8287   005E9E  EF3C  F02F         	goto	l4952
  8288   005EA2                     u4920:
  8289   005EA2  0012               	return		;funcret
  8290   005EA4                     __end_of_delayed_ms:
  8291                           	callstack 0
  8292                           
  8293 ;; *************** function _ReverseYellow *****************
  8294 ;; Defined at:
  8295 ;;		line 333 in file "dc_motor.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8298 ;;		 -> motorL(9), 
  8299 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8300 ;;		 -> motorR(9), 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;Total ram usage:        4 bytes
  8317 ;; Hardware stack levels used: 1
  8318 ;; Hardware stack levels required when called: 5
  8319 ;; This function calls:
  8320 ;;		_ForwardOneBlock
  8321 ;;		_reverseDetect
  8322 ;;		_turnRight45
  8323 ;; This function is called by:
  8324 ;;		_go_Home
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           	psect	text35
  8329   004D84                     __ptext35:
  8330                           	callstack 0
  8331   004D84                     _ReverseYellow:
  8332                           	callstack 24
  8333   004D84                     
  8334                           ;dc_motor.c: 334:     reverseDetect(&motorL, &motorR);
  8335   004D84  0E61               	movlw	low _motorL
  8336   004D86  6E1A               	movwf	reverseDetect@mL^0,c
  8337   004D88  0E01               	movlw	high _motorL
  8338   004D8A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8339   004D8C  0E58               	movlw	low _motorR
  8340   004D8E  6E1C               	movwf	reverseDetect@mR^0,c
  8341   004D90  0E01               	movlw	high _motorR
  8342   004D92  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8343   004D94  EC7C  F02B         	call	_reverseDetect	;wreg free
  8344                           
  8345                           ;dc_motor.c: 335:     turnRight45(&motorL, &motorR);
  8346   004D98  0E61               	movlw	low _motorL
  8347   004D9A  6E1A               	movwf	turnRight45@mL^0,c
  8348   004D9C  0E01               	movlw	high _motorL
  8349   004D9E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8350   004DA0  0E58               	movlw	low _motorR
  8351   004DA2  6E1C               	movwf	turnRight45@mR^0,c
  8352   004DA4  0E01               	movlw	high _motorR
  8353   004DA6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8354   004DA8  ECE6  F02D         	call	_turnRight45	;wreg free
  8355                           
  8356                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8357   004DAC  0E61               	movlw	low _motorL
  8358   004DAE  6E1A               	movwf	turnRight45@mL^0,c
  8359   004DB0  0E01               	movlw	high _motorL
  8360   004DB2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8361   004DB4  0E58               	movlw	low _motorR
  8362   004DB6  6E1C               	movwf	turnRight45@mR^0,c
  8363   004DB8  0E01               	movlw	high _motorR
  8364   004DBA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8365   004DBC  ECE6  F02D         	call	_turnRight45	;wreg free
  8366                           
  8367                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  8368   004DC0  0E61               	movlw	low _motorL
  8369   004DC2  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8370   004DC4  0E01               	movlw	high _motorL
  8371   004DC6  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8372   004DC8  0E58               	movlw	low _motorR
  8373   004DCA  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8374   004DCC  0E01               	movlw	high _motorR
  8375   004DCE  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8376   004DD0  EC22  F02B         	call	_ForwardOneBlock	;wreg free
  8377                           
  8378                           ;dc_motor.c: 338:     reverseDetect(&motorL, &motorR);
  8379   004DD4  0E61               	movlw	low _motorL
  8380   004DD6  6E1A               	movwf	reverseDetect@mL^0,c
  8381   004DD8  0E01               	movlw	high _motorL
  8382   004DDA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8383   004DDC  0E58               	movlw	low _motorR
  8384   004DDE  6E1C               	movwf	reverseDetect@mR^0,c
  8385   004DE0  0E01               	movlw	high _motorR
  8386   004DE2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8387   004DE4  EC7C  F02B         	call	_reverseDetect	;wreg free
  8388                           
  8389                           ;dc_motor.c: 339:     turnRight45(&motorL, &motorR);
  8390   004DE8  0E61               	movlw	low _motorL
  8391   004DEA  6E1A               	movwf	turnRight45@mL^0,c
  8392   004DEC  0E01               	movlw	high _motorL
  8393   004DEE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8394   004DF0  0E58               	movlw	low _motorR
  8395   004DF2  6E1C               	movwf	turnRight45@mR^0,c
  8396   004DF4  0E01               	movlw	high _motorR
  8397   004DF6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8398   004DF8  ECE6  F02D         	call	_turnRight45	;wreg free
  8399                           
  8400                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8401   004DFC  0E61               	movlw	low _motorL
  8402   004DFE  6E1A               	movwf	turnRight45@mL^0,c
  8403   004E00  0E01               	movlw	high _motorL
  8404   004E02  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8405   004E04  0E58               	movlw	low _motorR
  8406   004E06  6E1C               	movwf	turnRight45@mR^0,c
  8407   004E08  0E01               	movlw	high _motorR
  8408   004E0A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8409   004E0C  ECE6  F02D         	call	_turnRight45	;wreg free
  8410                           
  8411                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8412   004E10  0E61               	movlw	low _motorL
  8413   004E12  6E1A               	movwf	turnRight45@mL^0,c
  8414   004E14  0E01               	movlw	high _motorL
  8415   004E16  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8416   004E18  0E58               	movlw	low _motorR
  8417   004E1A  6E1C               	movwf	turnRight45@mR^0,c
  8418   004E1C  0E01               	movlw	high _motorR
  8419   004E1E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8420   004E20  ECE6  F02D         	call	_turnRight45	;wreg free
  8421                           
  8422                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8423   004E24  0E61               	movlw	low _motorL
  8424   004E26  6E1A               	movwf	turnRight45@mL^0,c
  8425   004E28  0E01               	movlw	high _motorL
  8426   004E2A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8427   004E2C  0E58               	movlw	low _motorR
  8428   004E2E  6E1C               	movwf	turnRight45@mR^0,c
  8429   004E30  0E01               	movlw	high _motorR
  8430   004E32  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8431   004E34  ECE6  F02D         	call	_turnRight45	;wreg free
  8432   004E38  0012               	return		;funcret
  8433   004E3A                     __end_of_ReverseYellow:
  8434                           	callstack 0
  8435                           
  8436 ;; *************** function _ReversePink *****************
  8437 ;; Defined at:
  8438 ;;		line 344 in file "dc_motor.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8441 ;;		 -> motorL(9), 
  8442 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8443 ;;		 -> motorR(9), 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      void 
  8448 ;; Registers used:
  8449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8458 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8459 ;;Total ram usage:        4 bytes
  8460 ;; Hardware stack levels used: 1
  8461 ;; Hardware stack levels required when called: 5
  8462 ;; This function calls:
  8463 ;;		_ForwardOneBlock
  8464 ;;		_reverseDetect
  8465 ;;		_turnLeft45
  8466 ;; This function is called by:
  8467 ;;		_go_Home
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           	psect	text36
  8472   004E3A                     __ptext36:
  8473                           	callstack 0
  8474   004E3A                     _ReversePink:
  8475                           	callstack 24
  8476   004E3A                     
  8477                           ;dc_motor.c: 345:     reverseDetect(&motorL, &motorR);
  8478   004E3A  0E61               	movlw	low _motorL
  8479   004E3C  6E1A               	movwf	reverseDetect@mL^0,c
  8480   004E3E  0E01               	movlw	high _motorL
  8481   004E40  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8482   004E42  0E58               	movlw	low _motorR
  8483   004E44  6E1C               	movwf	reverseDetect@mR^0,c
  8484   004E46  0E01               	movlw	high _motorR
  8485   004E48  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8486   004E4A  EC7C  F02B         	call	_reverseDetect	;wreg free
  8487                           
  8488                           ;dc_motor.c: 346:     turnLeft45(&motorL, &motorR);
  8489   004E4E  0E61               	movlw	low _motorL
  8490   004E50  6E1A               	movwf	turnLeft45@mL^0,c
  8491   004E52  0E01               	movlw	high _motorL
  8492   004E54  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8493   004E56  0E58               	movlw	low _motorR
  8494   004E58  6E1C               	movwf	turnLeft45@mR^0,c
  8495   004E5A  0E01               	movlw	high _motorR
  8496   004E5C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8497   004E5E  EC0D  F02E         	call	_turnLeft45	;wreg free
  8498                           
  8499                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8500   004E62  0E61               	movlw	low _motorL
  8501   004E64  6E1A               	movwf	turnLeft45@mL^0,c
  8502   004E66  0E01               	movlw	high _motorL
  8503   004E68  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8504   004E6A  0E58               	movlw	low _motorR
  8505   004E6C  6E1C               	movwf	turnLeft45@mR^0,c
  8506   004E6E  0E01               	movlw	high _motorR
  8507   004E70  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8508   004E72  EC0D  F02E         	call	_turnLeft45	;wreg free
  8509                           
  8510                           ;dc_motor.c: 348:     ForwardOneBlock(&motorL, &motorR);
  8511   004E76  0E61               	movlw	low _motorL
  8512   004E78  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8513   004E7A  0E01               	movlw	high _motorL
  8514   004E7C  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8515   004E7E  0E58               	movlw	low _motorR
  8516   004E80  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8517   004E82  0E01               	movlw	high _motorR
  8518   004E84  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8519   004E86  EC22  F02B         	call	_ForwardOneBlock	;wreg free
  8520                           
  8521                           ;dc_motor.c: 349:     reverseDetect(&motorL, &motorR);
  8522   004E8A  0E61               	movlw	low _motorL
  8523   004E8C  6E1A               	movwf	reverseDetect@mL^0,c
  8524   004E8E  0E01               	movlw	high _motorL
  8525   004E90  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8526   004E92  0E58               	movlw	low _motorR
  8527   004E94  6E1C               	movwf	reverseDetect@mR^0,c
  8528   004E96  0E01               	movlw	high _motorR
  8529   004E98  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8530   004E9A  EC7C  F02B         	call	_reverseDetect	;wreg free
  8531                           
  8532                           ;dc_motor.c: 350:     turnLeft45(&motorL, &motorR);
  8533   004E9E  0E61               	movlw	low _motorL
  8534   004EA0  6E1A               	movwf	turnLeft45@mL^0,c
  8535   004EA2  0E01               	movlw	high _motorL
  8536   004EA4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8537   004EA6  0E58               	movlw	low _motorR
  8538   004EA8  6E1C               	movwf	turnLeft45@mR^0,c
  8539   004EAA  0E01               	movlw	high _motorR
  8540   004EAC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8541   004EAE  EC0D  F02E         	call	_turnLeft45	;wreg free
  8542                           
  8543                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8544   004EB2  0E61               	movlw	low _motorL
  8545   004EB4  6E1A               	movwf	turnLeft45@mL^0,c
  8546   004EB6  0E01               	movlw	high _motorL
  8547   004EB8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8548   004EBA  0E58               	movlw	low _motorR
  8549   004EBC  6E1C               	movwf	turnLeft45@mR^0,c
  8550   004EBE  0E01               	movlw	high _motorR
  8551   004EC0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8552   004EC2  EC0D  F02E         	call	_turnLeft45	;wreg free
  8553                           
  8554                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8555   004EC6  0E61               	movlw	low _motorL
  8556   004EC8  6E1A               	movwf	turnLeft45@mL^0,c
  8557   004ECA  0E01               	movlw	high _motorL
  8558   004ECC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8559   004ECE  0E58               	movlw	low _motorR
  8560   004ED0  6E1C               	movwf	turnLeft45@mR^0,c
  8561   004ED2  0E01               	movlw	high _motorR
  8562   004ED4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8563   004ED6  EC0D  F02E         	call	_turnLeft45	;wreg free
  8564                           
  8565                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8566   004EDA  0E61               	movlw	low _motorL
  8567   004EDC  6E1A               	movwf	turnLeft45@mL^0,c
  8568   004EDE  0E01               	movlw	high _motorL
  8569   004EE0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8570   004EE2  0E58               	movlw	low _motorR
  8571   004EE4  6E1C               	movwf	turnLeft45@mR^0,c
  8572   004EE6  0E01               	movlw	high _motorR
  8573   004EE8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8574   004EEA  EC0D  F02E         	call	_turnLeft45	;wreg free
  8575   004EEE  0012               	return		;funcret
  8576   004EF0                     __end_of_ReversePink:
  8577                           	callstack 0
  8578                           
  8579 ;; *************** function _ForwardOneBlock *****************
  8580 ;; Defined at:
  8581 ;;		line 238 in file "dc_motor.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8584 ;;		 -> motorL(9), 
  8585 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8586 ;;		 -> motorR(9), 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;Total ram usage:        6 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; Hardware stack levels required when called: 4
  8605 ;; This function calls:
  8606 ;;		_fullSpeedAhead
  8607 ;;		_stop
  8608 ;; This function is called by:
  8609 ;;		_ReverseYellow
  8610 ;;		_ReversePink
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text37
  8615   005644                     __ptext37:
  8616                           	callstack 0
  8617   005644                     _ForwardOneBlock:
  8618                           	callstack 24
  8619   005644                     
  8620                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8621   005644  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8622   005648  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8623   00564C  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8624   005650  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8625   005654  EC0F  F029         	call	_fullSpeedAhead	;wreg free
  8626   005658                     
  8627                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8628   005658  0EA3               	movlw	163
  8629   00565A  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8630   00565C  0E57               	movlw	87
  8631   00565E  6E1E               	movwf	??_ForwardOneBlock^0,c
  8632   005660  0E02               	movlw	2
  8633   005662                     u5947:
  8634   005662  2EE8               	decfsz	wreg,f,c
  8635   005664  D7FE               	bra	u5947
  8636   005666  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8637   005668  D7FC               	bra	u5947
  8638   00566A  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8639   00566C  D7FA               	bra	u5947
  8640   00566E  D000               	nop2	
  8641   005670                     
  8642                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8643   005670  0E61               	movlw	low _motorL
  8644   005672  6E14               	movwf	stop@mL^0,c
  8645   005674  0E01               	movlw	high _motorL
  8646   005676  6E15               	movwf	(stop@mL+1)^0,c
  8647   005678  0E58               	movlw	low _motorR
  8648   00567A  6E16               	movwf	stop@mR^0,c
  8649   00567C  0E01               	movlw	high _motorR
  8650   00567E  6E17               	movwf	(stop@mR+1)^0,c
  8651   005680  ECA2  F029         	call	_stop	;wreg free
  8652                           
  8653                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8654   005684  0E05               	movlw	5
  8655   005686  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8656   005688  0E0F               	movlw	15
  8657   00568A  6E1E               	movwf	??_ForwardOneBlock^0,c
  8658   00568C  0EF1               	movlw	241
  8659   00568E                     u5957:
  8660   00568E  2EE8               	decfsz	wreg,f,c
  8661   005690  D7FE               	bra	u5957
  8662   005692  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8663   005694  D7FC               	bra	u5957
  8664   005696  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8665   005698  D7FA               	bra	u5957
  8666   00569A  F000               	nop	
  8667   00569C  0012               	return		;funcret
  8668   00569E                     __end_of_ForwardOneBlock:
  8669                           	callstack 0
  8670                           
  8671 ;; *************** function _RedMove *****************
  8672 ;; Defined at:
  8673 ;;		line 262 in file "dc_motor.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8676 ;;		 -> motorL(9), 
  8677 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8678 ;;		 -> motorR(9), 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;Total ram usage:        4 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 5
  8697 ;; This function calls:
  8698 ;;		_reverseDetect
  8699 ;;		_turnRight45
  8700 ;; This function is called by:
  8701 ;;		_main
  8702 ;;		_go_Home
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text38
  8707   005DB8                     __ptext38:
  8708                           	callstack 0
  8709   005DB8                     _RedMove:
  8710                           	callstack 24
  8711   005DB8                     
  8712                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8713   005DB8  0E61               	movlw	low _motorL
  8714   005DBA  6E1A               	movwf	reverseDetect@mL^0,c
  8715   005DBC  0E01               	movlw	high _motorL
  8716   005DBE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8717   005DC0  0E58               	movlw	low _motorR
  8718   005DC2  6E1C               	movwf	reverseDetect@mR^0,c
  8719   005DC4  0E01               	movlw	high _motorR
  8720   005DC6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8721   005DC8  EC7C  F02B         	call	_reverseDetect	;wreg free
  8722                           
  8723                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8724   005DCC  0E61               	movlw	low _motorL
  8725   005DCE  6E1A               	movwf	turnRight45@mL^0,c
  8726   005DD0  0E01               	movlw	high _motorL
  8727   005DD2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8728   005DD4  0E58               	movlw	low _motorR
  8729   005DD6  6E1C               	movwf	turnRight45@mR^0,c
  8730   005DD8  0E01               	movlw	high _motorR
  8731   005DDA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8732   005DDC  ECE6  F02D         	call	_turnRight45	;wreg free
  8733                           
  8734                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8735   005DE0  0E61               	movlw	low _motorL
  8736   005DE2  6E1A               	movwf	turnRight45@mL^0,c
  8737   005DE4  0E01               	movlw	high _motorL
  8738   005DE6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8739   005DE8  0E58               	movlw	low _motorR
  8740   005DEA  6E1C               	movwf	turnRight45@mR^0,c
  8741   005DEC  0E01               	movlw	high _motorR
  8742   005DEE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8743   005DF0  ECE6  F02D         	call	_turnRight45	;wreg free
  8744   005DF4  0012               	return		;funcret
  8745   005DF6                     __end_of_RedMove:
  8746                           	callstack 0
  8747                           
  8748 ;; *************** function _OrangeMove *****************
  8749 ;; Defined at:
  8750 ;;		line 308 in file "dc_motor.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8753 ;;		 -> motorL(9), 
  8754 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8755 ;;		 -> motorR(9), 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;Total ram usage:        4 bytes
  8772 ;; Hardware stack levels used: 1
  8773 ;; Hardware stack levels required when called: 5
  8774 ;; This function calls:
  8775 ;;		_reverseDetect
  8776 ;;		_turnRight45
  8777 ;; This function is called by:
  8778 ;;		_main
  8779 ;;		_go_Home
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text39
  8784   005854                     __ptext39:
  8785                           	callstack 0
  8786   005854                     _OrangeMove:
  8787                           	callstack 24
  8788   005854                     
  8789                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8790   005854  0E61               	movlw	low _motorL
  8791   005856  6E1A               	movwf	reverseDetect@mL^0,c
  8792   005858  0E01               	movlw	high _motorL
  8793   00585A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8794   00585C  0E58               	movlw	low _motorR
  8795   00585E  6E1C               	movwf	reverseDetect@mR^0,c
  8796   005860  0E01               	movlw	high _motorR
  8797   005862  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8798   005864  EC7C  F02B         	call	_reverseDetect	;wreg free
  8799                           
  8800                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8801   005868  0E61               	movlw	low _motorL
  8802   00586A  6E1A               	movwf	turnRight45@mL^0,c
  8803   00586C  0E01               	movlw	high _motorL
  8804   00586E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8805   005870  0E58               	movlw	low _motorR
  8806   005872  6E1C               	movwf	turnRight45@mR^0,c
  8807   005874  0E01               	movlw	high _motorR
  8808   005876  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8809   005878  ECE6  F02D         	call	_turnRight45	;wreg free
  8810                           
  8811                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8812   00587C  0E61               	movlw	low _motorL
  8813   00587E  6E1A               	movwf	turnRight45@mL^0,c
  8814   005880  0E01               	movlw	high _motorL
  8815   005882  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8816   005884  0E58               	movlw	low _motorR
  8817   005886  6E1C               	movwf	turnRight45@mR^0,c
  8818   005888  0E01               	movlw	high _motorR
  8819   00588A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8820   00588C  ECE6  F02D         	call	_turnRight45	;wreg free
  8821                           
  8822                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8823   005890  0E61               	movlw	low _motorL
  8824   005892  6E1A               	movwf	turnRight45@mL^0,c
  8825   005894  0E01               	movlw	high _motorL
  8826   005896  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8827   005898  0E58               	movlw	low _motorR
  8828   00589A  6E1C               	movwf	turnRight45@mR^0,c
  8829   00589C  0E01               	movlw	high _motorR
  8830   00589E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8831   0058A0  ECE6  F02D         	call	_turnRight45	;wreg free
  8832   0058A4  0012               	return		;funcret
  8833   0058A6                     __end_of_OrangeMove:
  8834                           	callstack 0
  8835                           
  8836 ;; *************** function _LightBlueMove *****************
  8837 ;; Defined at:
  8838 ;;		line 317 in file "dc_motor.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8841 ;;		 -> motorL(9), 
  8842 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8843 ;;		 -> motorR(9), 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      void 
  8848 ;; Registers used:
  8849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8855 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;Total ram usage:        4 bytes
  8860 ;; Hardware stack levels used: 1
  8861 ;; Hardware stack levels required when called: 5
  8862 ;; This function calls:
  8863 ;;		_reverseDetect
  8864 ;;		_turnLeft45
  8865 ;; This function is called by:
  8866 ;;		_main
  8867 ;;		_go_Home
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text40
  8872   0058A6                     __ptext40:
  8873                           	callstack 0
  8874   0058A6                     _LightBlueMove:
  8875                           	callstack 24
  8876   0058A6                     
  8877                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  8878   0058A6  0E61               	movlw	low _motorL
  8879   0058A8  6E1A               	movwf	reverseDetect@mL^0,c
  8880   0058AA  0E01               	movlw	high _motorL
  8881   0058AC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8882   0058AE  0E58               	movlw	low _motorR
  8883   0058B0  6E1C               	movwf	reverseDetect@mR^0,c
  8884   0058B2  0E01               	movlw	high _motorR
  8885   0058B4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8886   0058B6  EC7C  F02B         	call	_reverseDetect	;wreg free
  8887                           
  8888                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  8889   0058BA  0E61               	movlw	low _motorL
  8890   0058BC  6E1A               	movwf	turnLeft45@mL^0,c
  8891   0058BE  0E01               	movlw	high _motorL
  8892   0058C0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8893   0058C2  0E58               	movlw	low _motorR
  8894   0058C4  6E1C               	movwf	turnLeft45@mR^0,c
  8895   0058C6  0E01               	movlw	high _motorR
  8896   0058C8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8897   0058CA  EC0D  F02E         	call	_turnLeft45	;wreg free
  8898                           
  8899                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  8900   0058CE  0E61               	movlw	low _motorL
  8901   0058D0  6E1A               	movwf	turnLeft45@mL^0,c
  8902   0058D2  0E01               	movlw	high _motorL
  8903   0058D4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8904   0058D6  0E58               	movlw	low _motorR
  8905   0058D8  6E1C               	movwf	turnLeft45@mR^0,c
  8906   0058DA  0E01               	movlw	high _motorR
  8907   0058DC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8908   0058DE  EC0D  F02E         	call	_turnLeft45	;wreg free
  8909                           
  8910                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  8911   0058E2  0E61               	movlw	low _motorL
  8912   0058E4  6E1A               	movwf	turnLeft45@mL^0,c
  8913   0058E6  0E01               	movlw	high _motorL
  8914   0058E8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8915   0058EA  0E58               	movlw	low _motorR
  8916   0058EC  6E1C               	movwf	turnLeft45@mR^0,c
  8917   0058EE  0E01               	movlw	high _motorR
  8918   0058F0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8919   0058F2  EC0D  F02E         	call	_turnLeft45	;wreg free
  8920   0058F6  0012               	return		;funcret
  8921   0058F8                     __end_of_LightBlueMove:
  8922                           	callstack 0
  8923                           
  8924 ;; *************** function _GreenMove *****************
  8925 ;; Defined at:
  8926 ;;		line 270 in file "dc_motor.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8929 ;;		 -> motorL(9), 
  8930 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8931 ;;		 -> motorR(9), 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      void 
  8936 ;; Registers used:
  8937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;Total ram usage:        4 bytes
  8948 ;; Hardware stack levels used: 1
  8949 ;; Hardware stack levels required when called: 5
  8950 ;; This function calls:
  8951 ;;		_reverseDetect
  8952 ;;		_turnLeft45
  8953 ;; This function is called by:
  8954 ;;		_main
  8955 ;;		_go_Home
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text41
  8960   005DF6                     __ptext41:
  8961                           	callstack 0
  8962   005DF6                     _GreenMove:
  8963                           	callstack 24
  8964   005DF6                     
  8965                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  8966   005DF6  0E61               	movlw	low _motorL
  8967   005DF8  6E1A               	movwf	reverseDetect@mL^0,c
  8968   005DFA  0E01               	movlw	high _motorL
  8969   005DFC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8970   005DFE  0E58               	movlw	low _motorR
  8971   005E00  6E1C               	movwf	reverseDetect@mR^0,c
  8972   005E02  0E01               	movlw	high _motorR
  8973   005E04  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8974   005E06  EC7C  F02B         	call	_reverseDetect	;wreg free
  8975                           
  8976                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  8977   005E0A  0E61               	movlw	low _motorL
  8978   005E0C  6E1A               	movwf	turnLeft45@mL^0,c
  8979   005E0E  0E01               	movlw	high _motorL
  8980   005E10  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8981   005E12  0E58               	movlw	low _motorR
  8982   005E14  6E1C               	movwf	turnLeft45@mR^0,c
  8983   005E16  0E01               	movlw	high _motorR
  8984   005E18  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8985   005E1A  EC0D  F02E         	call	_turnLeft45	;wreg free
  8986                           
  8987                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  8988   005E1E  0E61               	movlw	low _motorL
  8989   005E20  6E1A               	movwf	turnLeft45@mL^0,c
  8990   005E22  0E01               	movlw	high _motorL
  8991   005E24  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8992   005E26  0E58               	movlw	low _motorR
  8993   005E28  6E1C               	movwf	turnLeft45@mR^0,c
  8994   005E2A  0E01               	movlw	high _motorR
  8995   005E2C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8996   005E2E  EC0D  F02E         	call	_turnLeft45	;wreg free
  8997   005E32  0012               	return		;funcret
  8998   005E34                     __end_of_GreenMove:
  8999                           	callstack 0
  9000                           
  9001 ;; *************** function _BlueMove *****************
  9002 ;; Defined at:
  9003 ;;		line 278 in file "dc_motor.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9006 ;;		 -> motorL(9), 
  9007 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9008 ;;		 -> motorR(9), 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9024 ;;Total ram usage:        4 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 5
  9027 ;; This function calls:
  9028 ;;		_reverseDetect
  9029 ;;		_turnRight45
  9030 ;; This function is called by:
  9031 ;;		_main
  9032 ;;		_go_Home
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text42
  9037   005580                     __ptext42:
  9038                           	callstack 0
  9039   005580                     _BlueMove:
  9040                           	callstack 24
  9041   005580                     
  9042                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9043   005580  0E61               	movlw	low _motorL
  9044   005582  6E1A               	movwf	reverseDetect@mL^0,c
  9045   005584  0E01               	movlw	high _motorL
  9046   005586  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9047   005588  0E58               	movlw	low _motorR
  9048   00558A  6E1C               	movwf	reverseDetect@mR^0,c
  9049   00558C  0E01               	movlw	high _motorR
  9050   00558E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9051   005590  EC7C  F02B         	call	_reverseDetect	;wreg free
  9052                           
  9053                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9054   005594  0E61               	movlw	low _motorL
  9055   005596  6E1A               	movwf	turnRight45@mL^0,c
  9056   005598  0E01               	movlw	high _motorL
  9057   00559A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9058   00559C  0E58               	movlw	low _motorR
  9059   00559E  6E1C               	movwf	turnRight45@mR^0,c
  9060   0055A0  0E01               	movlw	high _motorR
  9061   0055A2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9062   0055A4  ECE6  F02D         	call	_turnRight45	;wreg free
  9063                           
  9064                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9065   0055A8  0E61               	movlw	low _motorL
  9066   0055AA  6E1A               	movwf	turnRight45@mL^0,c
  9067   0055AC  0E01               	movlw	high _motorL
  9068   0055AE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9069   0055B0  0E58               	movlw	low _motorR
  9070   0055B2  6E1C               	movwf	turnRight45@mR^0,c
  9071   0055B4  0E01               	movlw	high _motorR
  9072   0055B6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9073   0055B8  ECE6  F02D         	call	_turnRight45	;wreg free
  9074                           
  9075                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9076   0055BC  0E61               	movlw	low _motorL
  9077   0055BE  6E1A               	movwf	turnRight45@mL^0,c
  9078   0055C0  0E01               	movlw	high _motorL
  9079   0055C2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9080   0055C4  0E58               	movlw	low _motorR
  9081   0055C6  6E1C               	movwf	turnRight45@mR^0,c
  9082   0055C8  0E01               	movlw	high _motorR
  9083   0055CA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9084   0055CC  ECE6  F02D         	call	_turnRight45	;wreg free
  9085                           
  9086                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9087   0055D0  0E61               	movlw	low _motorL
  9088   0055D2  6E1A               	movwf	turnRight45@mL^0,c
  9089   0055D4  0E01               	movlw	high _motorL
  9090   0055D6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9091   0055D8  0E58               	movlw	low _motorR
  9092   0055DA  6E1C               	movwf	turnRight45@mR^0,c
  9093   0055DC  0E01               	movlw	high _motorR
  9094   0055DE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9095   0055E0  ECE6  F02D         	call	_turnRight45	;wreg free
  9096   0055E4  0012               	return		;funcret
  9097   0055E6                     __end_of_BlueMove:
  9098                           	callstack 0
  9099                           
  9100 ;; *************** function _getTMR0val *****************
  9101 ;; Defined at:
  9102 ;;		line 28 in file "timers.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;		None
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;  moving          2    0[COMRAM] int 
  9107 ;;  temp            2    0        unsigned int 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9121 ;;Total ram usage:        2 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 1
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_main
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text43
  9132   005F5C                     __ptext43:
  9133                           	callstack 0
  9134   005F5C                     _getTMR0val:
  9135                           	callstack 29
  9136   005F5C  50D3               	movf	211,w,c	;volatile
  9137   005F5E                     
  9138                           ;timers.c: 32:     int moving=TMR0H<<8;
  9139   005F5E  50D4               	movf	212,w,c	;volatile
  9140   005F60  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9141   005F62  6A01               	clrf	getTMR0val@moving^0,c
  9142   005F64                     
  9143                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9144   005F64  90D8               	bcf	status,0,c
  9145   005F66  0101               	movlb	1	; () banked
  9146   005F68  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  9147   005F6A  6ED9               	movwf	fsr2l,c
  9148   005F6C  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9149   005F6E  6EDA               	movwf	fsr2h,c
  9150   005F70  0E3C               	movlw	low _Time_forward
  9151   005F72  26D9               	addwf	fsr2l,f,c
  9152   005F74  0E02               	movlw	high _Time_forward
  9153   005F76  22DA               	addwfc	fsr2h,f,c
  9154   005F78  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9155   005F7C  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9156   005F80                     
  9157                           ; BSR set to: 1
  9158   005F80  0012               	return		;funcret
  9159   005F82                     __end_of_getTMR0val:
  9160                           	callstack 0
  9161                           
  9162 ;; *************** function _colour_rel *****************
  9163 ;; Defined at:
  9164 ;;		line 114 in file "color.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  vals            2   74[COMRAM] PTR struct RGB
  9167 ;;		 -> vals(8), 
  9168 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9169 ;;		 -> rel(12), 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  B               4   20[BANK0 ] float 
  9172 ;;  G               4   16[BANK0 ] float 
  9173 ;;  R               4   12[BANK0 ] float 
  9174 ;;  L               4    0[BANK0 ] float 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      void 
  9177 ;; Registers used:
  9178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9185 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9188 ;;Total ram usage:       28 bytes
  9189 ;; Hardware stack levels used: 1
  9190 ;; Hardware stack levels required when called: 2
  9191 ;; This function calls:
  9192 ;;		___fladd
  9193 ;;		___fldiv
  9194 ;;		___xxtofl
  9195 ;; This function is called by:
  9196 ;;		_main
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text44
  9201   003422                     __ptext44:
  9202                           	callstack 0
  9203   003422                     _colour_rel:
  9204                           	callstack 28
  9205   003422                     
  9206                           ;color.c: 115:     float R = vals->R;
  9207   003422  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9208   003426  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9209   00342A  CFDE F001          	movff	postinc2,___xxtofl@val
  9210   00342E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9211   003432  0E00               	movlw	0
  9212   003434  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9213   003436  0EFF               	movlw	-1
  9214   003438  6E03               	movwf	(___xxtofl@val+2)^0,c
  9215   00343A  6E04               	movwf	(___xxtofl@val+3)^0,c
  9216   00343C  0E01               	movlw	1
  9217   00343E  ECD3  F021         	call	___xxtofl
  9218   003442  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9219   003446  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9220   00344A  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9221   00344E  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9222                           
  9223                           ;color.c: 116:     float G = vals->G;
  9224   003452  EE20 F002          	lfsr	2,2
  9225   003456  504B               	movf	colour_rel@vals^0,w,c
  9226   003458  26D9               	addwf	fsr2l,f,c
  9227   00345A  504C               	movf	(colour_rel@vals+1)^0,w,c
  9228   00345C  22DA               	addwfc	fsr2h,f,c
  9229   00345E  CFDE F001          	movff	postinc2,___xxtofl@val
  9230   003462  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9231   003466  0E00               	movlw	0
  9232   003468  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9233   00346A  0EFF               	movlw	-1
  9234   00346C  6E03               	movwf	(___xxtofl@val+2)^0,c
  9235   00346E  6E04               	movwf	(___xxtofl@val+3)^0,c
  9236   003470  0E01               	movlw	1
  9237   003472  ECD3  F021         	call	___xxtofl
  9238   003476  C001  F070         	movff	?___xxtofl,colour_rel@G
  9239   00347A  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9240   00347E  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9241   003482  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9242                           
  9243                           ;color.c: 117:     float B = vals->B;
  9244   003486  EE20 F004          	lfsr	2,4
  9245   00348A  504B               	movf	colour_rel@vals^0,w,c
  9246   00348C  26D9               	addwf	fsr2l,f,c
  9247   00348E  504C               	movf	(colour_rel@vals+1)^0,w,c
  9248   003490  22DA               	addwfc	fsr2h,f,c
  9249   003492  CFDE F001          	movff	postinc2,___xxtofl@val
  9250   003496  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9251   00349A  0E00               	movlw	0
  9252   00349C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9253   00349E  0EFF               	movlw	-1
  9254   0034A0  6E03               	movwf	(___xxtofl@val+2)^0,c
  9255   0034A2  6E04               	movwf	(___xxtofl@val+3)^0,c
  9256   0034A4  0E01               	movlw	1
  9257   0034A6  ECD3  F021         	call	___xxtofl
  9258   0034AA  C001  F074         	movff	?___xxtofl,colour_rel@B
  9259   0034AE  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9260   0034B2  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9261   0034B6  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9262                           
  9263                           ;color.c: 118:     float L = vals->L;
  9264   0034BA  EE20 F006          	lfsr	2,6
  9265   0034BE  504B               	movf	colour_rel@vals^0,w,c
  9266   0034C0  26D9               	addwf	fsr2l,f,c
  9267   0034C2  504C               	movf	(colour_rel@vals+1)^0,w,c
  9268   0034C4  22DA               	addwfc	fsr2h,f,c
  9269   0034C6  CFDE F001          	movff	postinc2,___xxtofl@val
  9270   0034CA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9271   0034CE  0E00               	movlw	0
  9272   0034D0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9273   0034D2  0EFF               	movlw	-1
  9274   0034D4  6E03               	movwf	(___xxtofl@val+2)^0,c
  9275   0034D6  6E04               	movwf	(___xxtofl@val+3)^0,c
  9276   0034D8  0E01               	movlw	1
  9277   0034DA  ECD3  F021         	call	___xxtofl
  9278   0034DE  C001  F060         	movff	?___xxtofl,colour_rel@L
  9279   0034E2  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9280   0034E6  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9281   0034EA  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9282   0034EE                     
  9283                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9284   0034EE  C070  F005         	movff	colour_rel@G,___fladd@a
  9285   0034F2  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9286   0034F6  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9287   0034FA  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9288   0034FE  C06C  F001         	movff	colour_rel@R,___fladd@b
  9289   003502  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9290   003506  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9291   00350A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9292   00350E  ECCF  F013         	call	___fladd	;wreg free
  9293   003512  C001  F064         	movff	?___fladd,_colour_rel$3203
  9294   003516  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9295   00351A  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9296   00351E  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9297   003522                     
  9298                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9299   003522  C074  F005         	movff	colour_rel@B,___fladd@a
  9300   003526  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9301   00352A  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9302   00352E  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9303   003532  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9304   003536  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9305   00353A  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9306   00353E  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9307   003542  ECCF  F013         	call	___fladd	;wreg free
  9308   003546  C001  F068         	movff	?___fladd,_colour_rel$3204
  9309   00354A  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9310   00354E  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9311   003552  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9312                           
  9313                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9314   003556  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9315   00355A  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9316   00355E  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9317   003562  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9318   003566  C060  F005         	movff	colour_rel@L,___fladd@a
  9319   00356A  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9320   00356E  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9321   003572  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9322   003576  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9323   00357A  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9324   00357E  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9325   003582  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9326   003586  ECCF  F013         	call	___fladd	;wreg free
  9327   00358A  C001  F036         	movff	?___fladd,___fldiv@a
  9328   00358E  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9329   003592  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9330   003596  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9331   00359A  EC44  F018         	call	___fldiv	;wreg free
  9332   00359E  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9333   0035A2  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9334   0035A6  C032  FFDE         	movff	?___fldiv,postinc2
  9335   0035AA  C033  FFDE         	movff	?___fldiv+1,postinc2
  9336   0035AE  C034  FFDE         	movff	?___fldiv+2,postinc2
  9337   0035B2  C035  FFDE         	movff	?___fldiv+3,postinc2
  9338   0035B6                     
  9339                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9340   0035B6  C070  F005         	movff	colour_rel@G,___fladd@a
  9341   0035BA  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9342   0035BE  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9343   0035C2  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9344   0035C6  C06C  F001         	movff	colour_rel@R,___fladd@b
  9345   0035CA  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9346   0035CE  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9347   0035D2  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9348   0035D6  ECCF  F013         	call	___fladd	;wreg free
  9349   0035DA  C001  F064         	movff	?___fladd,_colour_rel$3203
  9350   0035DE  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9351   0035E2  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9352   0035E6  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9353   0035EA                     
  9354                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9355   0035EA  C074  F005         	movff	colour_rel@B,___fladd@a
  9356   0035EE  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9357   0035F2  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9358   0035F6  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9359   0035FA  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9360   0035FE  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9361   003602  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9362   003606  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9363   00360A  ECCF  F013         	call	___fladd	;wreg free
  9364   00360E  C001  F068         	movff	?___fladd,_colour_rel$3204
  9365   003612  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9366   003616  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9367   00361A  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9368                           
  9369                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9370   00361E  C074  F032         	movff	colour_rel@B,___fldiv@b
  9371   003622  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9372   003626  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9373   00362A  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9374   00362E  C060  F005         	movff	colour_rel@L,___fladd@a
  9375   003632  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9376   003636  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9377   00363A  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9378   00363E  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9379   003642  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9380   003646  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9381   00364A  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9382   00364E  ECCF  F013         	call	___fladd	;wreg free
  9383   003652  C001  F036         	movff	?___fladd,___fldiv@a
  9384   003656  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9385   00365A  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9386   00365E  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9387   003662  EC44  F018         	call	___fldiv	;wreg free
  9388   003666  EE20 F008          	lfsr	2,8
  9389   00366A  504D               	movf	colour_rel@rel^0,w,c
  9390   00366C  26D9               	addwf	fsr2l,f,c
  9391   00366E  504E               	movf	(colour_rel@rel+1)^0,w,c
  9392   003670  22DA               	addwfc	fsr2h,f,c
  9393   003672  C032  FFDE         	movff	?___fldiv,postinc2
  9394   003676  C033  FFDE         	movff	?___fldiv+1,postinc2
  9395   00367A  C034  FFDE         	movff	?___fldiv+2,postinc2
  9396   00367E  C035  FFDE         	movff	?___fldiv+3,postinc2
  9397   003682                     
  9398                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9399   003682  C070  F005         	movff	colour_rel@G,___fladd@a
  9400   003686  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9401   00368A  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9402   00368E  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9403   003692  C06C  F001         	movff	colour_rel@R,___fladd@b
  9404   003696  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9405   00369A  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9406   00369E  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9407   0036A2  ECCF  F013         	call	___fladd	;wreg free
  9408   0036A6  C001  F064         	movff	?___fladd,_colour_rel$3203
  9409   0036AA  C002  F065         	movff	?___fladd+1,_colour_rel$3203+1
  9410   0036AE  C003  F066         	movff	?___fladd+2,_colour_rel$3203+2
  9411   0036B2  C004  F067         	movff	?___fladd+3,_colour_rel$3203+3
  9412   0036B6                     
  9413                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9414   0036B6  C074  F005         	movff	colour_rel@B,___fladd@a
  9415   0036BA  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9416   0036BE  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9417   0036C2  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9418   0036C6  C064  F001         	movff	_colour_rel$3203,___fladd@b
  9419   0036CA  C065  F002         	movff	_colour_rel$3203+1,___fladd@b+1
  9420   0036CE  C066  F003         	movff	_colour_rel$3203+2,___fladd@b+2
  9421   0036D2  C067  F004         	movff	_colour_rel$3203+3,___fladd@b+3
  9422   0036D6  ECCF  F013         	call	___fladd	;wreg free
  9423   0036DA  C001  F068         	movff	?___fladd,_colour_rel$3204
  9424   0036DE  C002  F069         	movff	?___fladd+1,_colour_rel$3204+1
  9425   0036E2  C003  F06A         	movff	?___fladd+2,_colour_rel$3204+2
  9426   0036E6  C004  F06B         	movff	?___fladd+3,_colour_rel$3204+3
  9427                           
  9428                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9429   0036EA  C070  F032         	movff	colour_rel@G,___fldiv@b
  9430   0036EE  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9431   0036F2  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9432   0036F6  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9433   0036FA  C060  F005         	movff	colour_rel@L,___fladd@a
  9434   0036FE  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9435   003702  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9436   003706  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9437   00370A  C068  F001         	movff	_colour_rel$3204,___fladd@b
  9438   00370E  C069  F002         	movff	_colour_rel$3204+1,___fladd@b+1
  9439   003712  C06A  F003         	movff	_colour_rel$3204+2,___fladd@b+2
  9440   003716  C06B  F004         	movff	_colour_rel$3204+3,___fladd@b+3
  9441   00371A  ECCF  F013         	call	___fladd	;wreg free
  9442   00371E  C001  F036         	movff	?___fladd,___fldiv@a
  9443   003722  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9444   003726  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9445   00372A  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9446   00372E  EC44  F018         	call	___fldiv	;wreg free
  9447   003732  EE20 F004          	lfsr	2,4
  9448   003736  504D               	movf	colour_rel@rel^0,w,c
  9449   003738  26D9               	addwf	fsr2l,f,c
  9450   00373A  504E               	movf	(colour_rel@rel+1)^0,w,c
  9451   00373C  22DA               	addwfc	fsr2h,f,c
  9452   00373E  C032  FFDE         	movff	?___fldiv,postinc2
  9453   003742  C033  FFDE         	movff	?___fldiv+1,postinc2
  9454   003746  C034  FFDE         	movff	?___fldiv+2,postinc2
  9455   00374A  C035  FFDE         	movff	?___fldiv+3,postinc2
  9456   00374E  0012               	return		;funcret
  9457   003750                     __end_of_colour_rel:
  9458                           	callstack 0
  9459                           
  9460 ;; *************** function _color_click_init *****************
  9461 ;; Defined at:
  9462 ;;		line 7 in file "color.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;		None
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1    wreg      void 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2, status,0, cstack
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9480 ;;Total ram usage:        1 bytes
  9481 ;; Hardware stack levels used: 1
  9482 ;; Hardware stack levels required when called: 4
  9483 ;; This function calls:
  9484 ;;		_I2C_2_Master_Init
  9485 ;;		_color_writetoaddr
  9486 ;; This function is called by:
  9487 ;;		_main
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text45
  9492   0058F8                     __ptext45:
  9493                           	callstack 0
  9494   0058F8                     _color_click_init:
  9495                           	callstack 26
  9496   0058F8                     
  9497                           ;color.c: 10:     I2C_2_Master_Init();
  9498   0058F8  EC85  F02F         	call	_I2C_2_Master_Init	;wreg free
  9499   0058FC                     
  9500                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9501   0058FC  0E01               	movlw	1
  9502   0058FE  6E03               	movwf	color_writetoaddr@value^0,c
  9503   005900  0E00               	movlw	0
  9504   005902  ECD4  F02F         	call	_color_writetoaddr
  9505   005906                     
  9506                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9507   005906  0E3F               	movlw	63
  9508   005908  6E05               	movwf	??_color_click_init^0,c
  9509   00590A  0E55               	movlw	85
  9510   00590C                     u5967:
  9511   00590C  2EE8               	decfsz	wreg,f,c
  9512   00590E  D7FE               	bra	u5967
  9513   005910  2E05               	decfsz	??_color_click_init^0,f,c
  9514   005912  D7FC               	bra	u5967
  9515   005914  F000               	nop	
  9516   005916                     
  9517                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9518   005916  0E03               	movlw	3
  9519   005918  6E03               	movwf	color_writetoaddr@value^0,c
  9520   00591A  0E00               	movlw	0
  9521   00591C  ECD4  F02F         	call	_color_writetoaddr
  9522   005920                     
  9523                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9524   005920  0ED5               	movlw	213
  9525   005922  6E03               	movwf	color_writetoaddr@value^0,c
  9526   005924  0E01               	movlw	1
  9527   005926  ECD4  F02F         	call	_color_writetoaddr
  9528   00592A                     
  9529                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9530   00592A  0E00               	movlw	0
  9531   00592C  6E03               	movwf	color_writetoaddr@value^0,c
  9532   00592E  0E0F               	movlw	15
  9533   005930  ECD4  F02F         	call	_color_writetoaddr
  9534   005934                     
  9535                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9536   005934  9287               	bcf	135,1,c	;volatile
  9537   005936                     
  9538                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9539   005936  9881               	bcf	129,4,c	;volatile
  9540   005938                     
  9541                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9542   005938  9E86               	bcf	134,7,c	;volatile
  9543   00593A                     
  9544                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9545   00593A  9684               	bcf	132,3,c	;volatile
  9546   00593C                     
  9547                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9548   00593C  9884               	bcf	132,4,c	;volatile
  9549   00593E                     
  9550                           ;color.c: 28:     LATGbits.LATG1=0;
  9551   00593E  927F               	bcf	127,1,c	;volatile
  9552   005940                     
  9553                           ;color.c: 29:     LATFbits.LATF7=0;
  9554   005940  9E7E               	bcf	126,7,c	;volatile
  9555   005942                     
  9556                           ;color.c: 30:     LATAbits.LATA4=0;
  9557   005942  9879               	bcf	121,4,c	;volatile
  9558   005944                     
  9559                           ;color.c: 32:     LATDbits.LATD3=0;
  9560   005944  967C               	bcf	124,3,c	;volatile
  9561   005946                     
  9562                           ;color.c: 33:     LATDbits.LATD4=0;
  9563   005946  987C               	bcf	124,4,c	;volatile
  9564   005948  0012               	return		;funcret
  9565   00594A                     __end_of_color_click_init:
  9566                           	callstack 0
  9567                           
  9568 ;; *************** function _color_writetoaddr *****************
  9569 ;; Defined at:
  9570 ;;		line 41 in file "color.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  address         1    wreg     unsigned char 
  9573 ;;  value           1    2[COMRAM] unsigned char 
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;  address         1    3[COMRAM] unsigned char 
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      void 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9585 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9589 ;;Total ram usage:        2 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; Hardware stack levels required when called: 3
  9592 ;; This function calls:
  9593 ;;		_I2C_2_Master_Start
  9594 ;;		_I2C_2_Master_Stop
  9595 ;;		_I2C_2_Master_Write
  9596 ;; This function is called by:
  9597 ;;		_color_click_init
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text46
  9602   005FA8                     __ptext46:
  9603                           	callstack 0
  9604   005FA8                     _color_writetoaddr:
  9605                           	callstack 26
  9606                           
  9607                           ;incstack = 0
  9608                           ;color_writetoaddr@address stored from wreg
  9609   005FA8  6E04               	movwf	color_writetoaddr@address^0,c
  9610   005FAA                     
  9611                           ;color.c: 42:     I2C_2_Master_Start();
  9612   005FAA  EC25  F030         	call	_I2C_2_Master_Start	;wreg free
  9613                           
  9614                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9615   005FAE  0E52               	movlw	82
  9616   005FB0  EC0F  F030         	call	_I2C_2_Master_Write
  9617                           
  9618                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9619   005FB4  5004               	movf	color_writetoaddr@address^0,w,c
  9620   005FB6  0980               	iorlw	128
  9621   005FB8  EC0F  F030         	call	_I2C_2_Master_Write
  9622                           
  9623                           ;color.c: 45:     I2C_2_Master_Write(value);
  9624   005FBC  5003               	movf	color_writetoaddr@value^0,w,c
  9625   005FBE  EC0F  F030         	call	_I2C_2_Master_Write
  9626                           
  9627                           ;color.c: 46:     I2C_2_Master_Stop();
  9628   005FC2  EC20  F030         	call	_I2C_2_Master_Stop	;wreg free
  9629   005FC6  0012               	return		;funcret
  9630   005FC8                     __end_of_color_writetoaddr:
  9631                           	callstack 0
  9632                           
  9633 ;; *************** function _I2C_2_Master_Write *****************
  9634 ;; Defined at:
  9635 ;;		line 45 in file "i2c.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  data_byte       1    wreg     unsigned char 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  data_byte       1    1[COMRAM] unsigned char 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9653 ;;Total ram usage:        1 bytes
  9654 ;; Hardware stack levels used: 1
  9655 ;; Hardware stack levels required when called: 2
  9656 ;; This function calls:
  9657 ;;		_I2C_2_Master_Idle
  9658 ;; This function is called by:
  9659 ;;		_color_writetoaddr
  9660 ;;		_color_read_lum
  9661 ;;		_color_read_Red
  9662 ;;		_color_read_Green
  9663 ;;		_color_read_Blue
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           	psect	text47
  9668   00601E                     __ptext47:
  9669                           	callstack 0
  9670   00601E                     _I2C_2_Master_Write:
  9671                           	callstack 26
  9672                           
  9673                           ;incstack = 0
  9674                           ;I2C_2_Master_Write@data_byte stored from wreg
  9675   00601E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9676   006020                     
  9677                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9678   006020  EC9A  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9679   006024                     
  9680                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9681   006024  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9682   006028  0012               	return		;funcret
  9683   00602A                     __end_of_I2C_2_Master_Write:
  9684                           	callstack 0
  9685                           
  9686 ;; *************** function _I2C_2_Master_Stop *****************
  9687 ;; Defined at:
  9688 ;;		line 39 in file "i2c.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;		None
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  1    wreg      void 
  9695 ;; Registers used:
  9696 ;;		wreg, status,2, status,0, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9706 ;;Total ram usage:        0 bytes
  9707 ;; Hardware stack levels used: 1
  9708 ;; Hardware stack levels required when called: 2
  9709 ;; This function calls:
  9710 ;;		_I2C_2_Master_Idle
  9711 ;; This function is called by:
  9712 ;;		_color_writetoaddr
  9713 ;;		_color_read_lum
  9714 ;;		_color_read_Red
  9715 ;;		_color_read_Green
  9716 ;;		_color_read_Blue
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text48
  9721   006040                     __ptext48:
  9722                           	callstack 0
  9723   006040                     _I2C_2_Master_Stop:
  9724                           	callstack 26
  9725   006040                     
  9726                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9727   006040  EC9A  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9728   006044                     
  9729                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9730   006044  010E               	movlb	14	; () banked
  9731   006046  85DA               	bsf	218,2,b	;volatile
  9732   006048                     
  9733                           ; BSR set to: 14
  9734   006048  0012               	return		;funcret
  9735   00604A                     __end_of_I2C_2_Master_Stop:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function _I2C_2_Master_Start *****************
  9739 ;; Defined at:
  9740 ;;		line 27 in file "i2c.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;		None
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;		None
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg, status,2, status,0, cstack
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used: 1
  9760 ;; Hardware stack levels required when called: 2
  9761 ;; This function calls:
  9762 ;;		_I2C_2_Master_Idle
  9763 ;; This function is called by:
  9764 ;;		_color_writetoaddr
  9765 ;;		_color_read_lum
  9766 ;;		_color_read_Red
  9767 ;;		_color_read_Green
  9768 ;;		_color_read_Blue
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text49
  9773   00604A                     __ptext49:
  9774                           	callstack 0
  9775   00604A                     _I2C_2_Master_Start:
  9776                           	callstack 26
  9777   00604A                     
  9778                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9779   00604A  EC9A  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9780   00604E                     
  9781                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9782   00604E  010E               	movlb	14	; () banked
  9783   006050  81DA               	bsf	218,0,b	;volatile
  9784   006052                     
  9785                           ; BSR set to: 14
  9786   006052  0012               	return		;funcret
  9787   006054                     __end_of_I2C_2_Master_Start:
  9788                           	callstack 0
  9789                           
  9790 ;; *************** function _I2C_2_Master_Idle *****************
  9791 ;; Defined at:
  9792 ;;		line 22 in file "i2c.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;		None
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      void 
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, status,0
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9810 ;;Total ram usage:        1 bytes
  9811 ;; Hardware stack levels used: 1
  9812 ;; Hardware stack levels required when called: 1
  9813 ;; This function calls:
  9814 ;;		Nothing
  9815 ;; This function is called by:
  9816 ;;		_I2C_2_Master_Start
  9817 ;;		_I2C_2_Master_RepStart
  9818 ;;		_I2C_2_Master_Stop
  9819 ;;		_I2C_2_Master_Write
  9820 ;;		_I2C_2_Master_Read
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text50
  9825   005F34                     __ptext50:
  9826                           	callstack 0
  9827   005F34                     _I2C_2_Master_Idle:
  9828                           	callstack 26
  9829   005F34                     l133:
  9830   005F34  010E               	movlb	14	; () banked
  9831   005F36  B5D8               	btfsc	216,2,b	;volatile
  9832   005F38  EFA0  F02F         	goto	u4351
  9833   005F3C  EFA2  F02F         	goto	u4350
  9834   005F40                     u4351:
  9835   005F40  EF9A  F02F         	goto	l133
  9836   005F44                     u4350:
  9837   005F44                     
  9838                           ; BSR set to: 14
  9839   005F44  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9840   005F48  0E1F               	movlw	31
  9841   005F4A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9842   005F4C  A4D8               	btfss	status,2,c
  9843   005F4E  EFAB  F02F         	goto	u4361
  9844   005F52  EFAD  F02F         	goto	u4360
  9845   005F56                     u4361:
  9846   005F56  EF9A  F02F         	goto	l133
  9847   005F5A                     u4360:
  9848   005F5A                     
  9849                           ; BSR set to: 14
  9850   005F5A  0012               	return		;funcret
  9851   005F5C                     __end_of_I2C_2_Master_Idle:
  9852                           	callstack 0
  9853                           
  9854 ;; *************** function _I2C_2_Master_Init *****************
  9855 ;; Defined at:
  9856 ;;		line 4 in file "i2c.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;		None
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;		None
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      void 
  9863 ;; Registers used:
  9864 ;;		wreg, status,2
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9874 ;;Total ram usage:        0 bytes
  9875 ;; Hardware stack levels used: 1
  9876 ;; Hardware stack levels required when called: 1
  9877 ;; This function calls:
  9878 ;;		Nothing
  9879 ;; This function is called by:
  9880 ;;		_color_click_init
  9881 ;;		_main
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text51
  9886   005F0A                     __ptext51:
  9887                           	callstack 0
  9888   005F0A                     _I2C_2_Master_Init:
  9889                           	callstack 28
  9890   005F0A                     
  9891                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9892   005F0A  010E               	movlb	14	; () banked
  9893   005F0C  51D9               	movf	217,w,b	;volatile
  9894   005F0E  0BF0               	andlw	-16
  9895   005F10  0908               	iorlw	8
  9896   005F12  6FD9               	movwf	217,b	;volatile
  9897   005F14                     
  9898                           ; BSR set to: 14
  9899                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9900   005F14  8BD9               	bsf	217,5,b	;volatile
  9901                           
  9902                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9903   005F16  0E9F               	movlw	159
  9904   005F18  6FD6               	movwf	214,b	;volatile
  9905   005F1A                     
  9906                           ; BSR set to: 14
  9907                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9908   005F1A  8A84               	bsf	132,5,c	;volatile
  9909   005F1C                     
  9910                           ; BSR set to: 14
  9911                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9912   005F1C  8C84               	bsf	132,6,c	;volatile
  9913   005F1E                     
  9914                           ; BSR set to: 14
  9915                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9916   005F1E  9BA7               	bcf	167,5,b	;volatile
  9917   005F20                     
  9918                           ; BSR set to: 14
  9919                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9920   005F20  9DA7               	bcf	167,6,b	;volatile
  9921                           
  9922                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9923   005F22  0E1D               	movlw	29
  9924   005F24  6F1D               	movwf	29,b	;volatile
  9925                           
  9926                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9927   005F26  0E1E               	movlw	30
  9928   005F28  6F1C               	movwf	28,b	;volatile
  9929                           
  9930                           ;i2c.c: 18:   RD5PPS=0x1C;
  9931   005F2A  0E1C               	movlw	28
  9932   005F2C  6F6F               	movwf	111,b	;volatile
  9933                           
  9934                           ;i2c.c: 19:   RD6PPS=0x1B;
  9935   005F2E  0E1B               	movlw	27
  9936   005F30  6F70               	movwf	112,b	;volatile
  9937   005F32                     
  9938                           ; BSR set to: 14
  9939   005F32  0012               	return		;funcret
  9940   005F34                     __end_of_I2C_2_Master_Init:
  9941                           	callstack 0
  9942                           
  9943 ;; *************** function _YellowMove *****************
  9944 ;; Defined at:
  9945 ;;		line 288 in file "dc_motor.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9948 ;;		 -> motorL(9), 
  9949 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9950 ;;		 -> motorR(9), 
  9951 ;; Auto vars:     Size  Location     Type
  9952 ;;		None
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  1    wreg      void 
  9955 ;; Registers used:
  9956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9966 ;;Total ram usage:        4 bytes
  9967 ;; Hardware stack levels used: 1
  9968 ;; Hardware stack levels required when called: 5
  9969 ;; This function calls:
  9970 ;;		_reverseDetect
  9971 ;;		_reverseOneBlock
  9972 ;;		_turnRight45
  9973 ;; This function is called by:
  9974 ;;		_main
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text52
  9979   00594A                     __ptext52:
  9980                           	callstack 0
  9981   00594A                     _YellowMove:
  9982                           	callstack 25
  9983   00594A                     
  9984                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  9985   00594A  0E61               	movlw	low _motorL
  9986   00594C  6E1A               	movwf	reverseDetect@mL^0,c
  9987   00594E  0E01               	movlw	high _motorL
  9988   005950  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9989   005952  0E58               	movlw	low _motorR
  9990   005954  6E1C               	movwf	reverseDetect@mR^0,c
  9991   005956  0E01               	movlw	high _motorR
  9992   005958  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9993   00595A  EC7C  F02B         	call	_reverseDetect	;wreg free
  9994                           
  9995                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  9996   00595E  0E61               	movlw	low _motorL
  9997   005960  6E1A               	movwf	reverseOneBlock@mL^0,c
  9998   005962  0E01               	movlw	high _motorL
  9999   005964  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10000   005966  0E58               	movlw	low _motorR
 10001   005968  6E1C               	movwf	reverseOneBlock@mR^0,c
 10002   00596A  0E01               	movlw	high _motorR
 10003   00596C  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10004   00596E  EC4F  F02B         	call	_reverseOneBlock	;wreg free
 10005                           
 10006                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10007   005972  0E61               	movlw	low _motorL
 10008   005974  6E1A               	movwf	turnRight45@mL^0,c
 10009   005976  0E01               	movlw	high _motorL
 10010   005978  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10011   00597A  0E58               	movlw	low _motorR
 10012   00597C  6E1C               	movwf	turnRight45@mR^0,c
 10013   00597E  0E01               	movlw	high _motorR
 10014   005980  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10015   005982  ECE6  F02D         	call	_turnRight45	;wreg free
 10016                           
 10017                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10018   005986  0E61               	movlw	low _motorL
 10019   005988  6E1A               	movwf	turnRight45@mL^0,c
 10020   00598A  0E01               	movlw	high _motorL
 10021   00598C  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10022   00598E  0E58               	movlw	low _motorR
 10023   005990  6E1C               	movwf	turnRight45@mR^0,c
 10024   005992  0E01               	movlw	high _motorR
 10025   005994  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10026   005996  ECE6  F02D         	call	_turnRight45	;wreg free
 10027   00599A  0012               	return		;funcret
 10028   00599C                     __end_of_YellowMove:
 10029                           	callstack 0
 10030                           
 10031 ;; *************** function _turnRight45 *****************
 10032 ;; Defined at:
 10033 ;;		line 211 in file "dc_motor.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10036 ;;		 -> motorL(9), 
 10037 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10038 ;;		 -> motorR(9), 
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;		None
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  1    wreg      void 
 10043 ;; Registers used:
 10044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : 0/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10052 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10053 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10054 ;;Total ram usage:        6 bytes
 10055 ;; Hardware stack levels used: 1
 10056 ;; Hardware stack levels required when called: 4
 10057 ;; This function calls:
 10058 ;;		_TurnDelay
 10059 ;;		_stop
 10060 ;;		_turnRight
 10061 ;; This function is called by:
 10062 ;;		_RedMove
 10063 ;;		_BlueMove
 10064 ;;		_YellowMove
 10065 ;;		_OrangeMove
 10066 ;;		_ReverseYellow
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           	psect	text53
 10071   005BCC                     __ptext53:
 10072                           	callstack 0
 10073   005BCC                     _turnRight45:
 10074                           	callstack 24
 10075   005BCC                     
 10076                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10077   005BCC  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10078   005BD0  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10079   005BD4  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10080   005BD8  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10081   005BDC  EC22  F028         	call	_turnRight	;wreg free
 10082   005BE0                     
 10083                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10084   005BE0  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10085   005BE4  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10086   005BE8  EC52  F02F         	call	_TurnDelay	;wreg free
 10087   005BEC                     
 10088                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10089   005BEC  0E61               	movlw	low _motorL
 10090   005BEE  6E14               	movwf	stop@mL^0,c
 10091   005BF0  0E01               	movlw	high _motorL
 10092   005BF2  6E15               	movwf	(stop@mL+1)^0,c
 10093   005BF4  0E58               	movlw	low _motorR
 10094   005BF6  6E16               	movwf	stop@mR^0,c
 10095   005BF8  0E01               	movlw	high _motorR
 10096   005BFA  6E17               	movwf	(stop@mR+1)^0,c
 10097   005BFC  ECA2  F029         	call	_stop	;wreg free
 10098   005C00                     
 10099                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10100   005C00  0E05               	movlw	5
 10101   005C02  6E1F               	movwf	(??_turnRight45+1)^0,c
 10102   005C04  0E0F               	movlw	15
 10103   005C06  6E1E               	movwf	??_turnRight45^0,c
 10104   005C08  0EF1               	movlw	241
 10105   005C0A                     u5977:
 10106   005C0A  2EE8               	decfsz	wreg,f,c
 10107   005C0C  D7FE               	bra	u5977
 10108   005C0E  2E1E               	decfsz	??_turnRight45^0,f,c
 10109   005C10  D7FC               	bra	u5977
 10110   005C12  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10111   005C14  D7FA               	bra	u5977
 10112   005C16  F000               	nop	
 10113   005C18  0012               	return		;funcret
 10114   005C1A                     __end_of_turnRight45:
 10115                           	callstack 0
 10116                           
 10117 ;; *************** function _turnRight *****************
 10118 ;; Defined at:
 10119 ;;		line 129 in file "dc_motor.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10122 ;;		 -> motorL(9), 
 10123 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10124 ;;		 -> motorR(9), 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;		None
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  1    wreg      void 
 10129 ;; Registers used:
 10130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10139 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10140 ;;Total ram usage:        6 bytes
 10141 ;; Hardware stack levels used: 1
 10142 ;; Hardware stack levels required when called: 3
 10143 ;; This function calls:
 10144 ;;		_setMotorPWM
 10145 ;; This function is called by:
 10146 ;;		_turnRight45
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           	psect	text54
 10151   005044                     __ptext54:
 10152                           	callstack 0
 10153   005044                     _turnRight:
 10154                           	callstack 24
 10155   005044                     
 10156                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10157   005044  EE20 F001          	lfsr	2,1
 10158   005048  5014               	movf	turnRight@mL^0,w,c
 10159   00504A  26D9               	addwf	fsr2l,f,c
 10160   00504C  5015               	movf	(turnRight@mL+1)^0,w,c
 10161   00504E  22DA               	addwfc	fsr2h,f,c
 10162   005050  0E01               	movlw	1
 10163   005052  6EDF               	movwf	indf2,c
 10164                           
 10165                           ;dc_motor.c: 132:     mR->direction =0;
 10166   005054  EE20 F001          	lfsr	2,1
 10167   005058  5016               	movf	turnRight@mR^0,w,c
 10168   00505A  26D9               	addwf	fsr2l,f,c
 10169   00505C  5017               	movf	(turnRight@mR+1)^0,w,c
 10170   00505E  22DA               	addwfc	fsr2h,f,c
 10171   005060  0E00               	movlw	0
 10172   005062  6EDF               	movwf	indf2,c
 10173                           
 10174                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10175   005064  EF58  F028         	goto	l4622
 10176   005068                     l4614:
 10177                           
 10178                           ;dc_motor.c: 136:         mL->power+=10;
 10179   005068  C014  FFD9         	movff	turnRight@mL,fsr2l
 10180   00506C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10181   005070  0E0A               	movlw	10
 10182   005072  26DF               	addwf	indf2,f,c
 10183                           
 10184                           ;dc_motor.c: 137:         mR->power+=10;
 10185   005074  C016  FFD9         	movff	turnRight@mR,fsr2l
 10186   005078  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10187   00507C  0E0A               	movlw	10
 10188   00507E  26DF               	addwf	indf2,f,c
 10189   005080                     
 10190                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10191   005080  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10192   005084  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10193   005088  EC71  F023         	call	_setMotorPWM	;wreg free
 10194   00508C                     
 10195                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10196   00508C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10197   005090  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10198   005094  EC71  F023         	call	_setMotorPWM	;wreg free
 10199   005098                     
 10200                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10201   005098  0E02               	movlw	2
 10202   00509A  6E19               	movwf	(??_turnRight+1)^0,c
 10203   00509C  0EA0               	movlw	160
 10204   00509E  6E18               	movwf	??_turnRight^0,c
 10205   0050A0  0E92               	movlw	146
 10206   0050A2                     u5987:
 10207   0050A2  2EE8               	decfsz	wreg,f,c
 10208   0050A4  D7FE               	bra	u5987
 10209   0050A6  2E18               	decfsz	??_turnRight^0,f,c
 10210   0050A8  D7FC               	bra	u5987
 10211   0050AA  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10212   0050AC  D7FA               	bra	u5987
 10213   0050AE  D000               	nop2	
 10214   0050B0                     l4622:
 10215   0050B0  C014  FFD9         	movff	turnRight@mL,fsr2l
 10216   0050B4  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10217   0050B8  0E1E               	movlw	30
 10218   0050BA  60DF               	cpfslt	indf2,c
 10219   0050BC  EF62  F028         	goto	u4431
 10220   0050C0  EF64  F028         	goto	u4430
 10221   0050C4                     u4431:
 10222   0050C4  EF70  F028         	goto	l481
 10223   0050C8                     u4430:
 10224   0050C8  C016  FFD9         	movff	turnRight@mR,fsr2l
 10225   0050CC  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10226   0050D0  0E1D               	movlw	29
 10227   0050D2  64DF               	cpfsgt	indf2,c
 10228   0050D4  EF6E  F028         	goto	u4441
 10229   0050D8  EF70  F028         	goto	u4440
 10230   0050DC                     u4441:
 10231   0050DC  EF34  F028         	goto	l4614
 10232   0050E0                     u4440:
 10233   0050E0                     l481:
 10234   0050E0  0012               	return		;funcret
 10235   0050E2                     __end_of_turnRight:
 10236                           	callstack 0
 10237                           
 10238 ;; *************** function _Timer0_init *****************
 10239 ;; Defined at:
 10240 ;;		line 8 in file "timers.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		wreg, status,2
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10258 ;;Total ram usage:        0 bytes
 10259 ;; Hardware stack levels used: 1
 10260 ;; Hardware stack levels required when called: 1
 10261 ;; This function calls:
 10262 ;;		Nothing
 10263 ;; This function is called by:
 10264 ;;		_main
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           	psect	text55
 10269   005FC8                     __ptext55:
 10270                           	callstack 0
 10271   005FC8                     _Timer0_init:
 10272                           	callstack 29
 10273   005FC8                     
 10274                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10275   005FC8  50D6               	movf	214,w,c	;volatile
 10276   005FCA  0B1F               	andlw	-225
 10277   005FCC  0940               	iorlw	64
 10278   005FCE  6ED6               	movwf	214,c	;volatile
 10279   005FD0                     
 10280                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10281   005FD0  88D6               	bsf	214,4,c	;volatile
 10282                           
 10283                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 10284   005FD2  50D6               	movf	214,w,c	;volatile
 10285   005FD4  0BF0               	andlw	-16
 10286   005FD6  090D               	iorlw	13
 10287   005FD8  6ED6               	movwf	214,c	;volatile
 10288   005FDA                     
 10289                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10290   005FDA  88D5               	bsf	213,4,c	;volatile
 10291                           
 10292                           ;timers.c: 16:     TMR0H=0;
 10293   005FDC  0E00               	movlw	0
 10294   005FDE  6ED4               	movwf	212,c	;volatile
 10295                           
 10296                           ;timers.c: 17:     TMR0L=0;
 10297   005FE0  0E00               	movlw	0
 10298   005FE2  6ED3               	movwf	211,c	;volatile
 10299   005FE4                     
 10300                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10301   005FE4  9ED5               	bcf	213,7,c	;volatile
 10302   005FE6  0012               	return		;funcret
 10303   005FE8                     __end_of_Timer0_init:
 10304                           	callstack 0
 10305                           
 10306 ;; *************** function _RetryMove *****************
 10307 ;; Defined at:
 10308 ;;		line 325 in file "dc_motor.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10311 ;;		 -> motorL(9), 
 10312 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10313 ;;		 -> motorR(9), 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      void 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;Total ram usage:        6 bytes
 10330 ;; Hardware stack levels used: 1
 10331 ;; Hardware stack levels required when called: 5
 10332 ;; This function calls:
 10333 ;;		_fullSpeedAhead
 10334 ;;		_reverseDetect
 10335 ;;		_stop
 10336 ;; This function is called by:
 10337 ;;		_main
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text56
 10342   0054B0                     __ptext56:
 10343                           	callstack 0
 10344   0054B0                     _RetryMove:
 10345                           	callstack 25
 10346   0054B0                     
 10347                           ;dc_motor.c: 326:     reverseDetect(&motorL, &motorR);
 10348   0054B0  0E61               	movlw	low _motorL
 10349   0054B2  6E1A               	movwf	reverseDetect@mL^0,c
 10350   0054B4  0E01               	movlw	high _motorL
 10351   0054B6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10352   0054B8  0E58               	movlw	low _motorR
 10353   0054BA  6E1C               	movwf	reverseDetect@mR^0,c
 10354   0054BC  0E01               	movlw	high _motorR
 10355   0054BE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10356   0054C0  EC7C  F02B         	call	_reverseDetect	;wreg free
 10357                           
 10358                           ;dc_motor.c: 327:     stop(&motorL, &motorR);
 10359   0054C4  0E61               	movlw	low _motorL
 10360   0054C6  6E14               	movwf	stop@mL^0,c
 10361   0054C8  0E01               	movlw	high _motorL
 10362   0054CA  6E15               	movwf	(stop@mL+1)^0,c
 10363   0054CC  0E58               	movlw	low _motorR
 10364   0054CE  6E16               	movwf	stop@mR^0,c
 10365   0054D0  0E01               	movlw	high _motorR
 10366   0054D2  6E17               	movwf	(stop@mR+1)^0,c
 10367   0054D4  ECA2  F029         	call	_stop	;wreg free
 10368                           
 10369                           ;dc_motor.c: 328:     fullSpeedAhead(mL,mR);
 10370   0054D8  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10371   0054DC  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10372   0054E0  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10373   0054E4  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10374   0054E8  EC0F  F029         	call	_fullSpeedAhead	;wreg free
 10375   0054EC                     
 10376                           ;dc_motor.c: 329:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10377   0054EC  0E29               	movlw	41
 10378   0054EE  6E25               	movwf	(??_RetryMove+1)^0,c
 10379   0054F0  0E96               	movlw	150
 10380   0054F2  6E24               	movwf	??_RetryMove^0,c
 10381   0054F4  0E7F               	movlw	127
 10382   0054F6                     u5997:
 10383   0054F6  2EE8               	decfsz	wreg,f,c
 10384   0054F8  D7FE               	bra	u5997
 10385   0054FA  2E24               	decfsz	??_RetryMove^0,f,c
 10386   0054FC  D7FC               	bra	u5997
 10387   0054FE  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10388   005500  D7FA               	bra	u5997
 10389   005502  F000               	nop	
 10390   005504                     
 10391                           ;dc_motor.c: 330:     stop(&motorL, &motorR);
 10392   005504  0E61               	movlw	low _motorL
 10393   005506  6E14               	movwf	stop@mL^0,c
 10394   005508  0E01               	movlw	high _motorL
 10395   00550A  6E15               	movwf	(stop@mL+1)^0,c
 10396   00550C  0E58               	movlw	low _motorR
 10397   00550E  6E16               	movwf	stop@mR^0,c
 10398   005510  0E01               	movlw	high _motorR
 10399   005512  6E17               	movwf	(stop@mR+1)^0,c
 10400   005514  ECA2  F029         	call	_stop	;wreg free
 10401   005518  0012               	return		;funcret
 10402   00551A                     __end_of_RetryMove:
 10403                           	callstack 0
 10404                           
 10405 ;; *************** function _PinkMove *****************
 10406 ;; Defined at:
 10407 ;;		line 298 in file "dc_motor.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10410 ;;		 -> motorL(9), 
 10411 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10412 ;;		 -> motorR(9), 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;		None
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  1    wreg      void 
 10417 ;; Registers used:
 10418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10428 ;;Total ram usage:        4 bytes
 10429 ;; Hardware stack levels used: 1
 10430 ;; Hardware stack levels required when called: 5
 10431 ;; This function calls:
 10432 ;;		_reverseDetect
 10433 ;;		_reverseOneBlock
 10434 ;;		_turnLeft45
 10435 ;; This function is called by:
 10436 ;;		_main
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           	psect	text57
 10441   00599C                     __ptext57:
 10442                           	callstack 0
 10443   00599C                     _PinkMove:
 10444                           	callstack 25
 10445   00599C                     
 10446                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10447   00599C  0E61               	movlw	low _motorL
 10448   00599E  6E1A               	movwf	reverseDetect@mL^0,c
 10449   0059A0  0E01               	movlw	high _motorL
 10450   0059A2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10451   0059A4  0E58               	movlw	low _motorR
 10452   0059A6  6E1C               	movwf	reverseDetect@mR^0,c
 10453   0059A8  0E01               	movlw	high _motorR
 10454   0059AA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10455   0059AC  EC7C  F02B         	call	_reverseDetect	;wreg free
 10456                           
 10457                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10458   0059B0  0E61               	movlw	low _motorL
 10459   0059B2  6E1A               	movwf	reverseOneBlock@mL^0,c
 10460   0059B4  0E01               	movlw	high _motorL
 10461   0059B6  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10462   0059B8  0E58               	movlw	low _motorR
 10463   0059BA  6E1C               	movwf	reverseOneBlock@mR^0,c
 10464   0059BC  0E01               	movlw	high _motorR
 10465   0059BE  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10466   0059C0  EC4F  F02B         	call	_reverseOneBlock	;wreg free
 10467                           
 10468                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10469   0059C4  0E61               	movlw	low _motorL
 10470   0059C6  6E1A               	movwf	turnLeft45@mL^0,c
 10471   0059C8  0E01               	movlw	high _motorL
 10472   0059CA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10473   0059CC  0E58               	movlw	low _motorR
 10474   0059CE  6E1C               	movwf	turnLeft45@mR^0,c
 10475   0059D0  0E01               	movlw	high _motorR
 10476   0059D2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10477   0059D4  EC0D  F02E         	call	_turnLeft45	;wreg free
 10478                           
 10479                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10480   0059D8  0E61               	movlw	low _motorL
 10481   0059DA  6E1A               	movwf	turnLeft45@mL^0,c
 10482   0059DC  0E01               	movlw	high _motorL
 10483   0059DE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10484   0059E0  0E58               	movlw	low _motorR
 10485   0059E2  6E1C               	movwf	turnLeft45@mR^0,c
 10486   0059E4  0E01               	movlw	high _motorR
 10487   0059E6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10488   0059E8  EC0D  F02E         	call	_turnLeft45	;wreg free
 10489   0059EC  0012               	return		;funcret
 10490   0059EE                     __end_of_PinkMove:
 10491                           	callstack 0
 10492                           
 10493 ;; *************** function _turnLeft45 *****************
 10494 ;; Defined at:
 10495 ;;		line 218 in file "dc_motor.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10498 ;;		 -> motorL(9), 
 10499 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10500 ;;		 -> motorR(9), 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;		None
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  1    wreg      void 
 10505 ;; Registers used:
 10506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/0
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10515 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10516 ;;Total ram usage:        6 bytes
 10517 ;; Hardware stack levels used: 1
 10518 ;; Hardware stack levels required when called: 4
 10519 ;; This function calls:
 10520 ;;		_TurnDelay
 10521 ;;		_stop
 10522 ;;		_turnLeft
 10523 ;; This function is called by:
 10524 ;;		_GreenMove
 10525 ;;		_PinkMove
 10526 ;;		_LightBlueMove
 10527 ;;		_ReversePink
 10528 ;;		_turnCalibration
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           	psect	text58
 10533   005C1A                     __ptext58:
 10534                           	callstack 0
 10535   005C1A                     _turnLeft45:
 10536                           	callstack 25
 10537   005C1A                     
 10538                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10539   005C1A  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10540   005C1E  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10541   005C22  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10542   005C26  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10543   005C2A  EC71  F028         	call	_turnLeft	;wreg free
 10544   005C2E                     
 10545                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10546   005C2E  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10547   005C32  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10548   005C36  EC52  F02F         	call	_TurnDelay	;wreg free
 10549   005C3A                     
 10550                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10551   005C3A  0E61               	movlw	low _motorL
 10552   005C3C  6E14               	movwf	stop@mL^0,c
 10553   005C3E  0E01               	movlw	high _motorL
 10554   005C40  6E15               	movwf	(stop@mL+1)^0,c
 10555   005C42  0E58               	movlw	low _motorR
 10556   005C44  6E16               	movwf	stop@mR^0,c
 10557   005C46  0E01               	movlw	high _motorR
 10558   005C48  6E17               	movwf	(stop@mR+1)^0,c
 10559   005C4A  ECA2  F029         	call	_stop	;wreg free
 10560   005C4E                     
 10561                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10562   005C4E  0E05               	movlw	5
 10563   005C50  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10564   005C52  0E0F               	movlw	15
 10565   005C54  6E1E               	movwf	??_turnLeft45^0,c
 10566   005C56  0EF1               	movlw	241
 10567   005C58                     u6007:
 10568   005C58  2EE8               	decfsz	wreg,f,c
 10569   005C5A  D7FE               	bra	u6007
 10570   005C5C  2E1E               	decfsz	??_turnLeft45^0,f,c
 10571   005C5E  D7FC               	bra	u6007
 10572   005C60  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10573   005C62  D7FA               	bra	u6007
 10574   005C64  F000               	nop	
 10575   005C66  0012               	return		;funcret
 10576   005C68                     __end_of_turnLeft45:
 10577                           	callstack 0
 10578                           
 10579 ;; *************** function _turnLeft *****************
 10580 ;; Defined at:
 10581 ;;		line 111 in file "dc_motor.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10584 ;;		 -> motorL(9), 
 10585 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10586 ;;		 -> motorR(9), 
 10587 ;; Auto vars:     Size  Location     Type
 10588 ;;		None
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  1    wreg      void 
 10591 ;; Registers used:
 10592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10601 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10602 ;;Total ram usage:        6 bytes
 10603 ;; Hardware stack levels used: 1
 10604 ;; Hardware stack levels required when called: 3
 10605 ;; This function calls:
 10606 ;;		_setMotorPWM
 10607 ;; This function is called by:
 10608 ;;		_turnLeft45
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text59
 10613   0050E2                     __ptext59:
 10614                           	callstack 0
 10615   0050E2                     _turnLeft:
 10616                           	callstack 25
 10617   0050E2                     
 10618                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10619   0050E2  EE20 F001          	lfsr	2,1
 10620   0050E6  5014               	movf	turnLeft@mL^0,w,c
 10621   0050E8  26D9               	addwf	fsr2l,f,c
 10622   0050EA  5015               	movf	(turnLeft@mL+1)^0,w,c
 10623   0050EC  22DA               	addwfc	fsr2h,f,c
 10624   0050EE  0E00               	movlw	0
 10625   0050F0  6EDF               	movwf	indf2,c
 10626                           
 10627                           ;dc_motor.c: 114:     mR->direction =1;
 10628   0050F2  EE20 F001          	lfsr	2,1
 10629   0050F6  5016               	movf	turnLeft@mR^0,w,c
 10630   0050F8  26D9               	addwf	fsr2l,f,c
 10631   0050FA  5017               	movf	(turnLeft@mR+1)^0,w,c
 10632   0050FC  22DA               	addwfc	fsr2h,f,c
 10633   0050FE  0E01               	movlw	1
 10634   005100  6EDF               	movwf	indf2,c
 10635                           
 10636                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10637   005102  EFA7  F028         	goto	l4608
 10638   005106                     l4600:
 10639                           
 10640                           ;dc_motor.c: 118:         mL->power+=10;
 10641   005106  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10642   00510A  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10643   00510E  0E0A               	movlw	10
 10644   005110  26DF               	addwf	indf2,f,c
 10645                           
 10646                           ;dc_motor.c: 119:         mR->power+=10;
 10647   005112  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10648   005116  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10649   00511A  0E0A               	movlw	10
 10650   00511C  26DF               	addwf	indf2,f,c
 10651   00511E                     
 10652                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10653   00511E  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10654   005122  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10655   005126  EC71  F023         	call	_setMotorPWM	;wreg free
 10656   00512A                     
 10657                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10658   00512A  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10659   00512E  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10660   005132  EC71  F023         	call	_setMotorPWM	;wreg free
 10661   005136                     
 10662                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10663   005136  0E02               	movlw	2
 10664   005138  6E19               	movwf	(??_turnLeft+1)^0,c
 10665   00513A  0EA0               	movlw	160
 10666   00513C  6E18               	movwf	??_turnLeft^0,c
 10667   00513E  0E92               	movlw	146
 10668   005140                     u6017:
 10669   005140  2EE8               	decfsz	wreg,f,c
 10670   005142  D7FE               	bra	u6017
 10671   005144  2E18               	decfsz	??_turnLeft^0,f,c
 10672   005146  D7FC               	bra	u6017
 10673   005148  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10674   00514A  D7FA               	bra	u6017
 10675   00514C  D000               	nop2	
 10676   00514E                     l4608:
 10677   00514E  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10678   005152  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10679   005156  0E1E               	movlw	30
 10680   005158  60DF               	cpfslt	indf2,c
 10681   00515A  EFB1  F028         	goto	u4411
 10682   00515E  EFB3  F028         	goto	u4410
 10683   005162                     u4411:
 10684   005162  EFBF  F028         	goto	l473
 10685   005166                     u4410:
 10686   005166  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10687   00516A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10688   00516E  0E1D               	movlw	29
 10689   005170  64DF               	cpfsgt	indf2,c
 10690   005172  EFBD  F028         	goto	u4421
 10691   005176  EFBF  F028         	goto	u4420
 10692   00517A                     u4421:
 10693   00517A  EF83  F028         	goto	l4600
 10694   00517E                     u4420:
 10695   00517E                     l473:
 10696   00517E  0012               	return		;funcret
 10697   005180                     __end_of_turnLeft:
 10698                           	callstack 0
 10699                           
 10700 ;; *************** function _TurnDelay *****************
 10701 ;; Defined at:
 10702 ;;		line 204 in file "dc_motor.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  Turn45Delay     2    0[COMRAM] int 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;		None
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		wreg, status,2, status,0
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10719 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10720 ;;Total ram usage:        3 bytes
 10721 ;; Hardware stack levels used: 1
 10722 ;; Hardware stack levels required when called: 1
 10723 ;; This function calls:
 10724 ;;		Nothing
 10725 ;; This function is called by:
 10726 ;;		_turnRight45
 10727 ;;		_turnLeft45
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           	psect	text60
 10732   005EA4                     __ptext60:
 10733                           	callstack 0
 10734   005EA4                     _TurnDelay:
 10735                           	callstack 27
 10736   005EA4                     
 10737                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10738   005EA4  EF5F  F02F         	goto	l508
 10739   005EA8                     l4642:
 10740                           
 10741                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10742   005EA8  0E15               	movlw	21
 10743   005EAA  6E03               	movwf	??_TurnDelay^0,c
 10744   005EAC  0EC6               	movlw	198
 10745   005EAE                     u6027:
 10746   005EAE  2EE8               	decfsz	wreg,f,c
 10747   005EB0  D7FE               	bra	u6027
 10748   005EB2  2E03               	decfsz	??_TurnDelay^0,f,c
 10749   005EB4  D7FC               	bra	u6027
 10750   005EB6  D000               	nop2	
 10751   005EB8                     
 10752                           ;dc_motor.c: 207:         Turn45Delay--;
 10753   005EB8  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10754   005EBA  A0D8               	btfss	status,0,c
 10755   005EBC  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10756   005EBE                     l508:
 10757                           
 10758                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10759   005EBE  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10760   005EC0  EF6C  F02F         	goto	u4470
 10761   005EC4  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10762   005EC6  E106               	bnz	u4471
 10763   005EC8  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10764   005ECA  B0D8               	btfsc	status,0,c
 10765   005ECC  EF6A  F02F         	goto	u4471
 10766   005ED0  EF6C  F02F         	goto	u4470
 10767   005ED4                     u4471:
 10768   005ED4  EF54  F02F         	goto	l4642
 10769   005ED8                     u4470:
 10770   005ED8  0012               	return		;funcret
 10771   005EDA                     __end_of_TurnDelay:
 10772                           	callstack 0
 10773                           
 10774 ;; *************** function _reverseOneBlock *****************
 10775 ;; Defined at:
 10776 ;;		line 232 in file "dc_motor.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10779 ;;		 -> motorL(9), 
 10780 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10781 ;;		 -> motorR(9), 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;		None
 10784 ;; Return value:  Size  Location     Type
 10785 ;;                  1    wreg      void 
 10786 ;; Registers used:
 10787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10788 ;; Tracked objects:
 10789 ;;		On entry : 0/0
 10790 ;;		On exit  : 0/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10796 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;Total ram usage:        6 bytes
 10798 ;; Hardware stack levels used: 1
 10799 ;; Hardware stack levels required when called: 4
 10800 ;; This function calls:
 10801 ;;		_fullSpeedBack
 10802 ;;		_stop
 10803 ;; This function is called by:
 10804 ;;		_YellowMove
 10805 ;;		_PinkMove
 10806 ;; This function uses a non-reentrant model
 10807 ;;
 10808                           
 10809                           	psect	text61
 10810   00569E                     __ptext61:
 10811                           	callstack 0
 10812   00569E                     _reverseOneBlock:
 10813                           	callstack 25
 10814   00569E                     
 10815                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10816   00569E  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10817   0056A2  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10818   0056A6  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10819   0056AA  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10820   0056AE  ECC0  F028         	call	_fullSpeedBack	;wreg free
 10821   0056B2                     
 10822                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10823   0056B2  0EA3               	movlw	163
 10824   0056B4  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10825   0056B6  0E57               	movlw	87
 10826   0056B8  6E1E               	movwf	??_reverseOneBlock^0,c
 10827   0056BA  0E02               	movlw	2
 10828   0056BC                     u6037:
 10829   0056BC  2EE8               	decfsz	wreg,f,c
 10830   0056BE  D7FE               	bra	u6037
 10831   0056C0  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10832   0056C2  D7FC               	bra	u6037
 10833   0056C4  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10834   0056C6  D7FA               	bra	u6037
 10835   0056C8  D000               	nop2	
 10836   0056CA                     
 10837                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10838   0056CA  0E61               	movlw	low _motorL
 10839   0056CC  6E14               	movwf	stop@mL^0,c
 10840   0056CE  0E01               	movlw	high _motorL
 10841   0056D0  6E15               	movwf	(stop@mL+1)^0,c
 10842   0056D2  0E58               	movlw	low _motorR
 10843   0056D4  6E16               	movwf	stop@mR^0,c
 10844   0056D6  0E01               	movlw	high _motorR
 10845   0056D8  6E17               	movwf	(stop@mR+1)^0,c
 10846   0056DA  ECA2  F029         	call	_stop	;wreg free
 10847                           
 10848                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10849   0056DE  0E05               	movlw	5
 10850   0056E0  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10851   0056E2  0E0F               	movlw	15
 10852   0056E4  6E1E               	movwf	??_reverseOneBlock^0,c
 10853   0056E6  0EF1               	movlw	241
 10854   0056E8                     u6047:
 10855   0056E8  2EE8               	decfsz	wreg,f,c
 10856   0056EA  D7FE               	bra	u6047
 10857   0056EC  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10858   0056EE  D7FC               	bra	u6047
 10859   0056F0  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10860   0056F2  D7FA               	bra	u6047
 10861   0056F4  F000               	nop	
 10862   0056F6  0012               	return		;funcret
 10863   0056F8                     __end_of_reverseOneBlock:
 10864                           	callstack 0
 10865                           
 10866 ;; *************** function _reverseDetect *****************
 10867 ;; Defined at:
 10868 ;;		line 225 in file "dc_motor.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10871 ;;		 -> motorL(9), 
 10872 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10873 ;;		 -> motorR(9), 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10889 ;;Total ram usage:        6 bytes
 10890 ;; Hardware stack levels used: 1
 10891 ;; Hardware stack levels required when called: 4
 10892 ;; This function calls:
 10893 ;;		_fullSpeedBack
 10894 ;;		_stop
 10895 ;; This function is called by:
 10896 ;;		_RedMove
 10897 ;;		_GreenMove
 10898 ;;		_BlueMove
 10899 ;;		_YellowMove
 10900 ;;		_PinkMove
 10901 ;;		_OrangeMove
 10902 ;;		_LightBlueMove
 10903 ;;		_RetryMove
 10904 ;;		_ReverseYellow
 10905 ;;		_ReversePink
 10906 ;;		_go_Home
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           	psect	text62
 10911   0056F8                     __ptext62:
 10912                           	callstack 0
 10913   0056F8                     _reverseDetect:
 10914                           	callstack 25
 10915   0056F8                     
 10916                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 10917   0056F8  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10918   0056FC  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10919   005700  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10920   005704  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10921   005708  ECC0  F028         	call	_fullSpeedBack	;wreg free
 10922   00570C                     
 10923                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10924   00570C  0E11               	movlw	17
 10925   00570E  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10926   005710  0E3C               	movlw	60
 10927   005712  6E1E               	movwf	??_reverseDetect^0,c
 10928   005714  0ECB               	movlw	203
 10929   005716                     u6057:
 10930   005716  2EE8               	decfsz	wreg,f,c
 10931   005718  D7FE               	bra	u6057
 10932   00571A  2E1E               	decfsz	??_reverseDetect^0,f,c
 10933   00571C  D7FC               	bra	u6057
 10934   00571E  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10935   005720  D7FA               	bra	u6057
 10936   005722  F000               	nop	
 10937   005724                     
 10938                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 10939   005724  0E61               	movlw	low _motorL
 10940   005726  6E14               	movwf	stop@mL^0,c
 10941   005728  0E01               	movlw	high _motorL
 10942   00572A  6E15               	movwf	(stop@mL+1)^0,c
 10943   00572C  0E58               	movlw	low _motorR
 10944   00572E  6E16               	movwf	stop@mR^0,c
 10945   005730  0E01               	movlw	high _motorR
 10946   005732  6E17               	movwf	(stop@mR+1)^0,c
 10947   005734  ECA2  F029         	call	_stop	;wreg free
 10948                           
 10949                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10950   005738  0E05               	movlw	5
 10951   00573A  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10952   00573C  0E0F               	movlw	15
 10953   00573E  6E1E               	movwf	??_reverseDetect^0,c
 10954   005740  0EF1               	movlw	241
 10955   005742                     u6067:
 10956   005742  2EE8               	decfsz	wreg,f,c
 10957   005744  D7FE               	bra	u6067
 10958   005746  2E1E               	decfsz	??_reverseDetect^0,f,c
 10959   005748  D7FC               	bra	u6067
 10960   00574A  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10961   00574C  D7FA               	bra	u6067
 10962   00574E  F000               	nop	
 10963   005750  0012               	return		;funcret
 10964   005752                     __end_of_reverseDetect:
 10965                           	callstack 0
 10966                           
 10967 ;; *************** function _fullSpeedBack *****************
 10968 ;; Defined at:
 10969 ;;		line 185 in file "dc_motor.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10972 ;;		 -> motorL(9), 
 10973 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10974 ;;		 -> motorR(9), 
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      void 
 10979 ;; Registers used:
 10980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10989 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10990 ;;Total ram usage:        6 bytes
 10991 ;; Hardware stack levels used: 1
 10992 ;; Hardware stack levels required when called: 3
 10993 ;; This function calls:
 10994 ;;		_setMotorPWM
 10995 ;; This function is called by:
 10996 ;;		_reverseDetect
 10997 ;;		_reverseOneBlock
 10998 ;;		_Backhalfblock
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002                           	psect	text63
 11003   005180                     __ptext63:
 11004                           	callstack 0
 11005   005180                     _fullSpeedBack:
 11006                           	callstack 25
 11007   005180                     
 11008                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11009   005180  EE20 F001          	lfsr	2,1
 11010   005184  5014               	movf	fullSpeedBack@mL^0,w,c
 11011   005186  26D9               	addwf	fsr2l,f,c
 11012   005188  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11013   00518A  22DA               	addwfc	fsr2h,f,c
 11014   00518C  0E00               	movlw	0
 11015   00518E  6EDF               	movwf	indf2,c
 11016                           
 11017                           ;dc_motor.c: 189:     mR->direction =0;
 11018   005190  EE20 F001          	lfsr	2,1
 11019   005194  5016               	movf	fullSpeedBack@mR^0,w,c
 11020   005196  26D9               	addwf	fsr2l,f,c
 11021   005198  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11022   00519A  22DA               	addwfc	fsr2h,f,c
 11023   00519C  0E00               	movlw	0
 11024   00519E  6EDF               	movwf	indf2,c
 11025                           
 11026                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11027   0051A0  EFF6  F028         	goto	l4636
 11028   0051A4                     l4628:
 11029                           
 11030                           ;dc_motor.c: 192:         mL->power+=10;
 11031   0051A4  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11032   0051A8  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11033   0051AC  0E0A               	movlw	10
 11034   0051AE  26DF               	addwf	indf2,f,c
 11035                           
 11036                           ;dc_motor.c: 193:         mR->power+=10;
 11037   0051B0  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11038   0051B4  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11039   0051B8  0E0A               	movlw	10
 11040   0051BA  26DF               	addwf	indf2,f,c
 11041   0051BC                     
 11042                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11043   0051BC  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11044   0051C0  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11045   0051C4  EC71  F023         	call	_setMotorPWM	;wreg free
 11046   0051C8                     
 11047                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11048   0051C8  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11049   0051CC  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11050   0051D0  EC71  F023         	call	_setMotorPWM	;wreg free
 11051   0051D4                     
 11052                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11053   0051D4  0E02               	movlw	2
 11054   0051D6  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11055   0051D8  0EA0               	movlw	160
 11056   0051DA  6E18               	movwf	??_fullSpeedBack^0,c
 11057   0051DC  0E92               	movlw	146
 11058   0051DE                     u6077:
 11059   0051DE  2EE8               	decfsz	wreg,f,c
 11060   0051E0  D7FE               	bra	u6077
 11061   0051E2  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11062   0051E4  D7FC               	bra	u6077
 11063   0051E6  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11064   0051E8  D7FA               	bra	u6077
 11065   0051EA  D000               	nop2	
 11066   0051EC                     l4636:
 11067   0051EC  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11068   0051F0  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11069   0051F4  0E1E               	movlw	30
 11070   0051F6  60DF               	cpfslt	indf2,c
 11071   0051F8  EF00  F029         	goto	u4451
 11072   0051FC  EF02  F029         	goto	u4450
 11073   005200                     u4451:
 11074   005200  EF0E  F029         	goto	l505
 11075   005204                     u4450:
 11076   005204  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11077   005208  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11078   00520C  0E1D               	movlw	29
 11079   00520E  64DF               	cpfsgt	indf2,c
 11080   005210  EF0C  F029         	goto	u4461
 11081   005214  EF0E  F029         	goto	u4460
 11082   005218                     u4461:
 11083   005218  EFD2  F028         	goto	l4628
 11084   00521C                     u4460:
 11085   00521C                     l505:
 11086   00521C  0012               	return		;funcret
 11087   00521E                     __end_of_fullSpeedBack:
 11088                           	callstack 0
 11089                           
 11090 ;; *************** function _Interrupts_init *****************
 11091 ;; Defined at:
 11092 ;;		line 9 in file "interrupts.c"
 11093 ;; Parameters:    Size  Location     Type
 11094 ;;		None
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;		None
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  1    wreg      void 
 11099 ;; Registers used:
 11100 ;;		None
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11110 ;;Total ram usage:        0 bytes
 11111 ;; Hardware stack levels used: 1
 11112 ;; Hardware stack levels required when called: 1
 11113 ;; This function calls:
 11114 ;;		Nothing
 11115 ;; This function is called by:
 11116 ;;		_main
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text64
 11121   00602A                     __ptext64:
 11122                           	callstack 0
 11123   00602A                     _Interrupts_init:
 11124                           	callstack 29
 11125   00602A                     
 11126                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11127   00602A  9AF2               	bcf	242,5,c	;volatile
 11128                           
 11129                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11130   00602C  9CF2               	bcf	242,6,c	;volatile
 11131                           
 11132                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11133   00602E  8EF2               	bsf	242,7,c	;volatile
 11134                           
 11135                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11136   006030  010E               	movlb	14	; () banked
 11137   006032  8B29               	bsf	41,5,b	;volatile
 11138   006034                     
 11139                           ; BSR set to: 14
 11140   006034  0012               	return		;funcret
 11141   006036                     __end_of_Interrupts_init:
 11142                           	callstack 0
 11143                           
 11144 ;; *************** function _Forwardhalfblock *****************
 11145 ;; Defined at:
 11146 ;;		line 245 in file "dc_motor.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11149 ;;		 -> motorL(9), 
 11150 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11151 ;;		 -> motorR(9), 
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1    wreg      void 
 11156 ;; Registers used:
 11157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11166 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11167 ;;Total ram usage:        6 bytes
 11168 ;; Hardware stack levels used: 1
 11169 ;; Hardware stack levels required when called: 4
 11170 ;; This function calls:
 11171 ;;		_fullSpeedAhead
 11172 ;;		_stop
 11173 ;; This function is called by:
 11174 ;;		_main
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           	psect	text65
 11179   005752                     __ptext65:
 11180                           	callstack 0
 11181   005752                     _Forwardhalfblock:
 11182                           	callstack 26
 11183   005752                     
 11184                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11185   005752  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11186   005756  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11187   00575A  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11188   00575E  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11189   005762  EC0F  F029         	call	_fullSpeedAhead	;wreg free
 11190   005766                     
 11191                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11192   005766  0E52               	movlw	82
 11193   005768  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11194   00576A  0E2B               	movlw	43
 11195   00576C  6E1E               	movwf	??_Forwardhalfblock^0,c
 11196   00576E  0E00               	movlw	0
 11197   005770                     u6087:
 11198   005770  2EE8               	decfsz	wreg,f,c
 11199   005772  D7FE               	bra	u6087
 11200   005774  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11201   005776  D7FC               	bra	u6087
 11202   005778  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11203   00577A  D7FA               	bra	u6087
 11204   00577C  D000               	nop2	
 11205   00577E                     
 11206                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11207   00577E  0E61               	movlw	low _motorL
 11208   005780  6E14               	movwf	stop@mL^0,c
 11209   005782  0E01               	movlw	high _motorL
 11210   005784  6E15               	movwf	(stop@mL+1)^0,c
 11211   005786  0E58               	movlw	low _motorR
 11212   005788  6E16               	movwf	stop@mR^0,c
 11213   00578A  0E01               	movlw	high _motorR
 11214   00578C  6E17               	movwf	(stop@mR+1)^0,c
 11215   00578E  ECA2  F029         	call	_stop	;wreg free
 11216                           
 11217                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11218   005792  0E05               	movlw	5
 11219   005794  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11220   005796  0E0F               	movlw	15
 11221   005798  6E1E               	movwf	??_Forwardhalfblock^0,c
 11222   00579A  0EF1               	movlw	241
 11223   00579C                     u6097:
 11224   00579C  2EE8               	decfsz	wreg,f,c
 11225   00579E  D7FE               	bra	u6097
 11226   0057A0  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11227   0057A2  D7FC               	bra	u6097
 11228   0057A4  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11229   0057A6  D7FA               	bra	u6097
 11230   0057A8  F000               	nop	
 11231   0057AA  0012               	return		;funcret
 11232   0057AC                     __end_of_Forwardhalfblock:
 11233                           	callstack 0
 11234                           
 11235 ;; *************** function _stop *****************
 11236 ;; Defined at:
 11237 ;;		line 93 in file "dc_motor.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11240 ;;		 -> motorL(9), 
 11241 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11242 ;;		 -> motorR(9), 
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;		None
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  1    wreg      void 
 11247 ;; Registers used:
 11248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11257 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11258 ;;Total ram usage:        6 bytes
 11259 ;; Hardware stack levels used: 1
 11260 ;; Hardware stack levels required when called: 3
 11261 ;; This function calls:
 11262 ;;		_setMotorPWM
 11263 ;; This function is called by:
 11264 ;;		_main
 11265 ;;		_turnRight45
 11266 ;;		_turnLeft45
 11267 ;;		_reverseDetect
 11268 ;;		_reverseOneBlock
 11269 ;;		_ForwardOneBlock
 11270 ;;		_Forwardhalfblock
 11271 ;;		_RetryMove
 11272 ;;		_go_Home
 11273 ;;		_Backhalfblock
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text66
 11278   005344                     __ptext66:
 11279                           	callstack 0
 11280   005344                     _stop:
 11281                           	callstack 25
 11282   005344                     
 11283                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11284   005344  EFC8  F029         	goto	l4594
 11285   005348                     l4586:
 11286                           
 11287                           ;dc_motor.c: 97:         mL->power-=10;
 11288   005348  C014  FFD9         	movff	stop@mL,fsr2l
 11289   00534C  C015  FFDA         	movff	stop@mL+1,fsr2h
 11290   005350  0E0A               	movlw	10
 11291   005352  5EDF               	subwf	indf2,f,c
 11292                           
 11293                           ;dc_motor.c: 98:         mR->power-=10;
 11294   005354  C016  FFD9         	movff	stop@mR,fsr2l
 11295   005358  C017  FFDA         	movff	stop@mR+1,fsr2h
 11296   00535C  0E0A               	movlw	10
 11297   00535E  5EDF               	subwf	indf2,f,c
 11298   005360                     
 11299                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11300   005360  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11301   005364  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11302   005368  EC71  F023         	call	_setMotorPWM	;wreg free
 11303   00536C                     
 11304                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11305   00536C  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11306   005370  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11307   005374  EC71  F023         	call	_setMotorPWM	;wreg free
 11308   005378                     
 11309                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11310   005378  0E02               	movlw	2
 11311   00537A  6E19               	movwf	(??_stop+1)^0,c
 11312   00537C  0EA0               	movlw	160
 11313   00537E  6E18               	movwf	??_stop^0,c
 11314   005380  0E92               	movlw	146
 11315   005382                     u6107:
 11316   005382  2EE8               	decfsz	wreg,f,c
 11317   005384  D7FE               	bra	u6107
 11318   005386  2E18               	decfsz	??_stop^0,f,c
 11319   005388  D7FC               	bra	u6107
 11320   00538A  2E19               	decfsz	(??_stop+1)^0,f,c
 11321   00538C  D7FA               	bra	u6107
 11322   00538E  D000               	nop2	
 11323   005390                     l4594:
 11324                           
 11325                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11326   005390  C014  FFD9         	movff	stop@mL,fsr2l
 11327   005394  C015  FFDA         	movff	stop@mL+1,fsr2h
 11328   005398  50DF               	movf	indf2,w,c
 11329   00539A  A4D8               	btfss	status,2,c
 11330   00539C  EFD2  F029         	goto	u4391
 11331   0053A0  EFD4  F029         	goto	u4390
 11332   0053A4                     u4391:
 11333   0053A4  EFA4  F029         	goto	l4586
 11334   0053A8                     u4390:
 11335   0053A8  C016  FFD9         	movff	stop@mR,fsr2l
 11336   0053AC  C017  FFDA         	movff	stop@mR+1,fsr2h
 11337   0053B0  50DF               	movf	indf2,w,c
 11338   0053B2  A4D8               	btfss	status,2,c
 11339   0053B4  EFDE  F029         	goto	u4401
 11340   0053B8  EFE0  F029         	goto	u4400
 11341   0053BC                     u4401:
 11342   0053BC  EFA4  F029         	goto	l4586
 11343   0053C0                     u4400:
 11344   0053C0  0012               	return		;funcret
 11345   0053C2                     __end_of_stop:
 11346                           	callstack 0
 11347                           
 11348 ;; *************** function _fullSpeedAhead *****************
 11349 ;; Defined at:
 11350 ;;		line 147 in file "dc_motor.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11353 ;;		 -> motorL(9), 
 11354 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11355 ;;		 -> motorR(9), 
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  1    wreg      void 
 11360 ;; Registers used:
 11361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11371 ;;Total ram usage:        6 bytes
 11372 ;; Hardware stack levels used: 1
 11373 ;; Hardware stack levels required when called: 3
 11374 ;; This function calls:
 11375 ;;		_setMotorPWM
 11376 ;; This function is called by:
 11377 ;;		_main
 11378 ;;		_ForwardOneBlock
 11379 ;;		_Forwardhalfblock
 11380 ;;		_RetryMove
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text67
 11385   00521E                     __ptext67:
 11386                           	callstack 0
 11387   00521E                     _fullSpeedAhead:
 11388                           	callstack 24
 11389   00521E                     
 11390                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11391   00521E  EE20 F001          	lfsr	2,1
 11392   005222  5014               	movf	fullSpeedAhead@mL^0,w,c
 11393   005224  26D9               	addwf	fsr2l,f,c
 11394   005226  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11395   005228  22DA               	addwfc	fsr2h,f,c
 11396   00522A  0E01               	movlw	1
 11397   00522C  6EDF               	movwf	indf2,c
 11398                           
 11399                           ;dc_motor.c: 151:     mR->direction =1;
 11400   00522E  EE20 F001          	lfsr	2,1
 11401   005232  5016               	movf	fullSpeedAhead@mR^0,w,c
 11402   005234  26D9               	addwf	fsr2l,f,c
 11403   005236  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11404   005238  22DA               	addwfc	fsr2h,f,c
 11405   00523A  0E01               	movlw	1
 11406   00523C  6EDF               	movwf	indf2,c
 11407                           
 11408                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11409   00523E  EF45  F029         	goto	l4580
 11410   005242                     l4572:
 11411                           
 11412                           ;dc_motor.c: 154:         mL->power+=10;
 11413   005242  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11414   005246  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11415   00524A  0E0A               	movlw	10
 11416   00524C  26DF               	addwf	indf2,f,c
 11417                           
 11418                           ;dc_motor.c: 155:         mR->power+=10;
 11419   00524E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11420   005252  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11421   005256  0E0A               	movlw	10
 11422   005258  26DF               	addwf	indf2,f,c
 11423   00525A                     
 11424                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11425   00525A  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11426   00525E  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11427   005262  EC71  F023         	call	_setMotorPWM	;wreg free
 11428   005266                     
 11429                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11430   005266  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11431   00526A  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11432   00526E  EC71  F023         	call	_setMotorPWM	;wreg free
 11433   005272                     
 11434                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11435   005272  0E02               	movlw	2
 11436   005274  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11437   005276  0EA0               	movlw	160
 11438   005278  6E18               	movwf	??_fullSpeedAhead^0,c
 11439   00527A  0E92               	movlw	146
 11440   00527C                     u6117:
 11441   00527C  2EE8               	decfsz	wreg,f,c
 11442   00527E  D7FE               	bra	u6117
 11443   005280  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11444   005282  D7FC               	bra	u6117
 11445   005284  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11446   005286  D7FA               	bra	u6117
 11447   005288  D000               	nop2	
 11448   00528A                     l4580:
 11449   00528A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11450   00528E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11451   005292  0E1E               	movlw	30
 11452   005294  60DF               	cpfslt	indf2,c
 11453   005296  EF4F  F029         	goto	u4371
 11454   00529A  EF51  F029         	goto	u4370
 11455   00529E                     u4371:
 11456   00529E  EF5D  F029         	goto	l489
 11457   0052A2                     u4370:
 11458   0052A2  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11459   0052A6  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11460   0052AA  0E1D               	movlw	29
 11461   0052AC  64DF               	cpfsgt	indf2,c
 11462   0052AE  EF5B  F029         	goto	u4381
 11463   0052B2  EF5D  F029         	goto	u4380
 11464   0052B6                     u4381:
 11465   0052B6  EF21  F029         	goto	l4572
 11466   0052BA                     u4380:
 11467   0052BA                     l489:
 11468   0052BA  0012               	return		;funcret
 11469   0052BC                     __end_of_fullSpeedAhead:
 11470                           	callstack 0
 11471                           
 11472 ;; *************** function _setMotorPWM *****************
 11473 ;; Defined at:
 11474 ;;		line 68 in file "dc_motor.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11477 ;;		 -> motorR(9), motorL(9), 
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;  negDuty         1   18[COMRAM] unsigned char 
 11480 ;;  posDuty         1   17[COMRAM] unsigned char 
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  1    wreg      void 
 11483 ;; Registers used:
 11484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11491 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11493 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11494 ;;Total ram usage:        6 bytes
 11495 ;; Hardware stack levels used: 1
 11496 ;; Hardware stack levels required when called: 2
 11497 ;; This function calls:
 11498 ;;		___lwdiv
 11499 ;;		___wmul
 11500 ;; This function is called by:
 11501 ;;		_stop
 11502 ;;		_turnLeft
 11503 ;;		_turnRight
 11504 ;;		_fullSpeedAhead
 11505 ;;		_timed_forward
 11506 ;;		_fullSpeedBack
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text68
 11511   0046E2                     __ptext68:
 11512                           	callstack 0
 11513   0046E2                     _setMotorPWM:
 11514                           	callstack 25
 11515   0046E2                     
 11516                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11517   0046E2  EE20 F002          	lfsr	2,2
 11518   0046E6  500E               	movf	setMotorPWM@m^0,w,c
 11519   0046E8  26D9               	addwf	fsr2l,f,c
 11520   0046EA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11521   0046EC  22DA               	addwfc	fsr2h,f,c
 11522   0046EE  50DF               	movf	indf2,w,c
 11523   0046F0  B4D8               	btfsc	status,2,c
 11524   0046F2  EF7D  F023         	goto	u3391
 11525   0046F6  EF7F  F023         	goto	u3390
 11526   0046FA                     u3391:
 11527   0046FA  EFB3  F023         	goto	l4024
 11528   0046FE                     u3390:
 11529   0046FE                     
 11530                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11531   0046FE  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11532   004702  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11533   004706  50DF               	movf	indf2,w,c
 11534   004708  6E10               	movwf	??_setMotorPWM^0,c
 11535   00470A  5010               	movf	??_setMotorPWM^0,w,c
 11536   00470C  6E01               	movwf	___wmul@multiplier^0,c
 11537   00470E  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11538   004710  EE20 F003          	lfsr	2,3
 11539   004714  500E               	movf	setMotorPWM@m^0,w,c
 11540   004716  26D9               	addwf	fsr2l,f,c
 11541   004718  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11542   00471A  22DA               	addwfc	fsr2h,f,c
 11543   00471C  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11544   004720  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11545   004724  ECC1  F02F         	call	___wmul	;wreg free
 11546   004728  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11547   00472C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11548   004730  0E00               	movlw	0
 11549   004732  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11550   004734  0E64               	movlw	100
 11551   004736  6E09               	movwf	___lwdiv@divisor^0,c
 11552   004738  EC1E  F02A         	call	___lwdiv	;wreg free
 11553   00473C  EE20 F003          	lfsr	2,3
 11554   004740  500E               	movf	setMotorPWM@m^0,w,c
 11555   004742  26D9               	addwf	fsr2l,f,c
 11556   004744  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11557   004746  22DA               	addwfc	fsr2h,f,c
 11558   004748  50DF               	movf	indf2,w,c
 11559   00474A  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11560   00474C  5007               	movf	?___lwdiv^0,w,c
 11561   00474E  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11562   004750  6E12               	movwf	setMotorPWM@posDuty^0,c
 11563   004752                     
 11564                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11565   004752  EE20 F003          	lfsr	2,3
 11566   004756  500E               	movf	setMotorPWM@m^0,w,c
 11567   004758  26D9               	addwf	fsr2l,f,c
 11568   00475A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11569   00475C  22DA               	addwfc	fsr2h,f,c
 11570   00475E  50DF               	movf	indf2,w,c
 11571   004760  6E13               	movwf	setMotorPWM@negDuty^0,c
 11572                           
 11573                           ;dc_motor.c: 75:     }
 11574   004762  EFD6  F023         	goto	l4028
 11575   004766                     l4024:
 11576                           
 11577                           ;dc_motor.c: 77:         posDuty=0;
 11578   004766  0E00               	movlw	0
 11579   004768  6E12               	movwf	setMotorPWM@posDuty^0,c
 11580   00476A                     
 11581                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11582   00476A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11583   00476E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11584   004772  50DF               	movf	indf2,w,c
 11585   004774  6E10               	movwf	??_setMotorPWM^0,c
 11586   004776  5010               	movf	??_setMotorPWM^0,w,c
 11587   004778  6E01               	movwf	___wmul@multiplier^0,c
 11588   00477A  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11589   00477C  EE20 F003          	lfsr	2,3
 11590   004780  500E               	movf	setMotorPWM@m^0,w,c
 11591   004782  26D9               	addwf	fsr2l,f,c
 11592   004784  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11593   004786  22DA               	addwfc	fsr2h,f,c
 11594   004788  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11595   00478C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11596   004790  ECC1  F02F         	call	___wmul	;wreg free
 11597   004794  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11598   004798  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11599   00479C  0E00               	movlw	0
 11600   00479E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11601   0047A0  0E64               	movlw	100
 11602   0047A2  6E09               	movwf	___lwdiv@divisor^0,c
 11603   0047A4  EC1E  F02A         	call	___lwdiv	;wreg free
 11604   0047A8  5007               	movf	?___lwdiv^0,w,c
 11605   0047AA  6E13               	movwf	setMotorPWM@negDuty^0,c
 11606   0047AC                     l4028:
 11607                           
 11608                           ;dc_motor.c: 81:     if (m->direction) {
 11609   0047AC  EE20 F001          	lfsr	2,1
 11610   0047B0  500E               	movf	setMotorPWM@m^0,w,c
 11611   0047B2  26D9               	addwf	fsr2l,f,c
 11612   0047B4  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11613   0047B6  22DA               	addwfc	fsr2h,f,c
 11614   0047B8  50DF               	movf	indf2,w,c
 11615   0047BA  B4D8               	btfsc	status,2,c
 11616   0047BC  EFE2  F023         	goto	u3401
 11617   0047C0  EFE4  F023         	goto	u3400
 11618   0047C4                     u3401:
 11619   0047C4  EF06  F024         	goto	l4032
 11620   0047C8                     u3400:
 11621   0047C8                     
 11622                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11623   0047C8  EE20 F005          	lfsr	2,5
 11624   0047CC  500E               	movf	setMotorPWM@m^0,w,c
 11625   0047CE  26D9               	addwf	fsr2l,f,c
 11626   0047D0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11627   0047D2  22DA               	addwfc	fsr2h,f,c
 11628   0047D4  CFDE F010          	movff	postinc2,??_setMotorPWM
 11629   0047D8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11630   0047DC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11631   0047E0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11632   0047E4  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11633                           
 11634                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11635   0047E8  EE20 F007          	lfsr	2,7
 11636   0047EC  500E               	movf	setMotorPWM@m^0,w,c
 11637   0047EE  26D9               	addwf	fsr2l,f,c
 11638   0047F0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11639   0047F2  22DA               	addwfc	fsr2h,f,c
 11640   0047F4  CFDE F010          	movff	postinc2,??_setMotorPWM
 11641   0047F8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11642   0047FC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11643   004800  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11644   004804  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11645                           
 11646                           ;dc_motor.c: 86:     } else {
 11647   004808  EF26  F024         	goto	l459
 11648   00480C                     l4032:
 11649                           
 11650                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11651   00480C  EE20 F005          	lfsr	2,5
 11652   004810  500E               	movf	setMotorPWM@m^0,w,c
 11653   004812  26D9               	addwf	fsr2l,f,c
 11654   004814  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11655   004816  22DA               	addwfc	fsr2h,f,c
 11656   004818  CFDE F010          	movff	postinc2,??_setMotorPWM
 11657   00481C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11658   004820  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11659   004824  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11660   004828  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11661                           
 11662                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11663   00482C  EE20 F007          	lfsr	2,7
 11664   004830  500E               	movf	setMotorPWM@m^0,w,c
 11665   004832  26D9               	addwf	fsr2l,f,c
 11666   004834  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11667   004836  22DA               	addwfc	fsr2h,f,c
 11668   004838  CFDE F010          	movff	postinc2,??_setMotorPWM
 11669   00483C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11670   004840  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11671   004844  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11672   004848  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11673   00484C                     l459:
 11674   00484C  0012               	return		;funcret
 11675   00484E                     __end_of_setMotorPWM:
 11676                           	callstack 0
 11677                           
 11678 ;; *************** function ___wmul *****************
 11679 ;; Defined at:
 11680 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  multiplier      2    0[COMRAM] unsigned int 
 11683 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  product         2    4[COMRAM] unsigned int 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  2    0[COMRAM] unsigned int 
 11688 ;; Registers used:
 11689 ;;		wreg, status,2, status,0, prodl, prodh
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11699 ;;Total ram usage:        6 bytes
 11700 ;; Hardware stack levels used: 1
 11701 ;; Hardware stack levels required when called: 1
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		_setMotorPWM
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	text69
 11710   005F82                     __ptext69:
 11711                           	callstack 0
 11712   005F82                     ___wmul:
 11713                           	callstack 25
 11714   005F82  5001               	movf	___wmul@multiplier^0,w,c
 11715   005F84  0203               	mulwf	___wmul@multiplicand^0,c
 11716   005F86  CFF3 F005          	movff	prodl,___wmul@product
 11717   005F8A  CFF4 F006          	movff	prodh,___wmul@product+1
 11718   005F8E  5001               	movf	___wmul@multiplier^0,w,c
 11719   005F90  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11720   005F92  50F3               	movf	243,w,c
 11721   005F94  2606               	addwf	(___wmul@product+1)^0,f,c
 11722   005F96  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11723   005F98  0203               	mulwf	___wmul@multiplicand^0,c
 11724   005F9A  50F3               	movf	243,w,c
 11725   005F9C  2606               	addwf	(___wmul@product+1)^0,f,c
 11726   005F9E  C005  F001         	movff	___wmul@product,?___wmul
 11727   005FA2  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11728   005FA6  0012               	return		;funcret
 11729   005FA8                     __end_of___wmul:
 11730                           	callstack 0
 11731                           
 11732 ;; *************** function ___lwdiv *****************
 11733 ;; Defined at:
 11734 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;  dividend        2    6[COMRAM] unsigned int 
 11737 ;;  divisor         2    8[COMRAM] unsigned int 
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;  quotient        2   10[COMRAM] unsigned int 
 11740 ;;  counter         1   12[COMRAM] unsigned char 
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  2    6[COMRAM] unsigned int 
 11743 ;; Registers used:
 11744 ;;		wreg, status,2, status,0
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11753 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11754 ;;Total ram usage:        7 bytes
 11755 ;; Hardware stack levels used: 1
 11756 ;; Hardware stack levels required when called: 1
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_setMotorPWM
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764                           	psect	text70
 11765   00543C                     __ptext70:
 11766                           	callstack 0
 11767   00543C                     ___lwdiv:
 11768                           	callstack 25
 11769   00543C  0E00               	movlw	0
 11770   00543E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11771   005440  0E00               	movlw	0
 11772   005442  6E0B               	movwf	___lwdiv@quotient^0,c
 11773   005444  5009               	movf	___lwdiv@divisor^0,w,c
 11774   005446  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11775   005448  B4D8               	btfsc	status,2,c
 11776   00544A  EF29  F02A         	goto	u3351
 11777   00544E  EF2B  F02A         	goto	u3350
 11778   005452                     u3351:
 11779   005452  EF53  F02A         	goto	l1162
 11780   005456                     u3350:
 11781   005456  0E01               	movlw	1
 11782   005458  6E0D               	movwf	___lwdiv@counter^0,c
 11783   00545A  EF33  F02A         	goto	l3996
 11784   00545E                     l3994:
 11785   00545E  90D8               	bcf	status,0,c
 11786   005460  3609               	rlcf	___lwdiv@divisor^0,f,c
 11787   005462  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11788   005464  2A0D               	incf	___lwdiv@counter^0,f,c
 11789   005466                     l3996:
 11790   005466  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11791   005468  EF38  F02A         	goto	u3361
 11792   00546C  EF3A  F02A         	goto	u3360
 11793   005470                     u3361:
 11794   005470  EF2F  F02A         	goto	l3994
 11795   005474                     u3360:
 11796   005474                     l3998:
 11797   005474  90D8               	bcf	status,0,c
 11798   005476  360B               	rlcf	___lwdiv@quotient^0,f,c
 11799   005478  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11800   00547A  5009               	movf	___lwdiv@divisor^0,w,c
 11801   00547C  5C07               	subwf	___lwdiv@dividend^0,w,c
 11802   00547E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11803   005480  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11804   005482  A0D8               	btfss	status,0,c
 11805   005484  EF46  F02A         	goto	u3371
 11806   005488  EF48  F02A         	goto	u3370
 11807   00548C                     u3371:
 11808   00548C  EF4D  F02A         	goto	l4006
 11809   005490                     u3370:
 11810   005490  5009               	movf	___lwdiv@divisor^0,w,c
 11811   005492  5E07               	subwf	___lwdiv@dividend^0,f,c
 11812   005494  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11813   005496  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11814   005498  800B               	bsf	___lwdiv@quotient^0,0,c
 11815   00549A                     l4006:
 11816   00549A  90D8               	bcf	status,0,c
 11817   00549C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11818   00549E  3209               	rrcf	___lwdiv@divisor^0,f,c
 11819   0054A0  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11820   0054A2  EF3A  F02A         	goto	l3998
 11821   0054A6                     l1162:
 11822   0054A6  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11823   0054AA  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11824   0054AE  0012               	return		;funcret
 11825   0054B0                     __end_of___lwdiv:
 11826                           	callstack 0
 11827                           
 11828 ;; *************** function _Colour_decider *****************
 11829 ;; Defined at:
 11830 ;;		line 125 in file "color.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  vals            2   74[COMRAM] PTR struct RGB
 11833 ;;		 -> vals(8), 
 11834 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11835 ;;		 -> rel(12), 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;  RGB_col        12    6[BANK0 ] float [3]
 11838 ;;  Hue             4   28[BANK0 ] float 
 11839 ;;  Cmin            4   22[BANK0 ] float 
 11840 ;;  Cmax            4   18[BANK0 ] float 
 11841 ;;  i               2   26[BANK0 ] int 
 11842 ;;  Cmax_i          2    4[BANK0 ] int 
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  2   74[COMRAM] int 
 11845 ;; Registers used:
 11846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11853 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11855 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11856 ;;Total ram usage:       38 bytes
 11857 ;; Hardware stack levels used: 1
 11858 ;; Hardware stack levels required when called: 3
 11859 ;; This function calls:
 11860 ;;		___fladd
 11861 ;;		___fldiv
 11862 ;;		___fleq
 11863 ;;		___flge
 11864 ;;		___flmul
 11865 ;;		___flsub
 11866 ;;		___xxtofl
 11867 ;; This function is called by:
 11868 ;;		_main
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           
 11872                           	psect	text71
 11873   000E3E                     __ptext71:
 11874                           	callstack 0
 11875   000E3E                     _Colour_decider:
 11876                           	callstack 27
 11877   000E3E                     
 11878                           ;color.c: 126:     float Cmax = 0;
 11879   000E3E  0E00               	movlw	0
 11880   000E40  0100               	movlb	0	; () banked
 11881   000E42  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11882   000E44  0E00               	movlw	0
 11883   000E46  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11884   000E48  0E00               	movlw	0
 11885   000E4A  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11886   000E4C  0E00               	movlw	0
 11887   000E4E  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11888                           
 11889                           ;color.c: 127:     float Cmin= 100000;
 11890   000E50  0E00               	movlw	0
 11891   000E52  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11892   000E54  0E50               	movlw	80
 11893   000E56  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11894   000E58  0EC3               	movlw	195
 11895   000E5A  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11896   000E5C  0E47               	movlw	71
 11897   000E5E  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11898                           
 11899                           ;color.c: 128:     int Cmax_i =4;
 11900   000E60  0E00               	movlw	0
 11901   000E62  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11902   000E64  0E04               	movlw	4
 11903   000E66  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11904   000E68                     
 11905                           ; BSR set to: 0
 11906                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11907   000E68  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11908   000E6C  0E0B               	movlw	11
 11909   000E6E                     u5111:
 11910   000E6E  6ADE               	clrf	postinc2,c
 11911   000E70  06E8               	decf	wreg,f,c
 11912   000E72  E2FD               	bc	u5111
 11913   000E74                     
 11914                           ; BSR set to: 0
 11915   000E74  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11916   000E78  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11917   000E7C  CFDE F001          	movff	postinc2,___xxtofl@val
 11918   000E80  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11919   000E84  0E00               	movlw	0
 11920   000E86  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11921   000E88  0EFF               	movlw	-1
 11922   000E8A  6E03               	movwf	(___xxtofl@val+2)^0,c
 11923   000E8C  6E04               	movwf	(___xxtofl@val+3)^0,c
 11924   000E8E  0E01               	movlw	1
 11925   000E90  ECD3  F021         	call	___xxtofl
 11926   000E94  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11927   000E98  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11928   000E9C  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11929   000EA0  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11930   000EA4  EE20 F002          	lfsr	2,2
 11931   000EA8  504B               	movf	Colour_decider@vals^0,w,c
 11932   000EAA  26D9               	addwf	fsr2l,f,c
 11933   000EAC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11934   000EAE  22DA               	addwfc	fsr2h,f,c
 11935   000EB0  CFDE F001          	movff	postinc2,___xxtofl@val
 11936   000EB4  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11937   000EB8  0E00               	movlw	0
 11938   000EBA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11939   000EBC  0EFF               	movlw	-1
 11940   000EBE  6E03               	movwf	(___xxtofl@val+2)^0,c
 11941   000EC0  6E04               	movwf	(___xxtofl@val+3)^0,c
 11942   000EC2  0E01               	movlw	1
 11943   000EC4  ECD3  F021         	call	___xxtofl
 11944   000EC8  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 11945   000ECC  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 11946   000ED0  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 11947   000ED4  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 11948   000ED8  EE20 F004          	lfsr	2,4
 11949   000EDC  504B               	movf	Colour_decider@vals^0,w,c
 11950   000EDE  26D9               	addwf	fsr2l,f,c
 11951   000EE0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11952   000EE2  22DA               	addwfc	fsr2h,f,c
 11953   000EE4  CFDE F001          	movff	postinc2,___xxtofl@val
 11954   000EE8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11955   000EEC  0E00               	movlw	0
 11956   000EEE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11957   000EF0  0EFF               	movlw	-1
 11958   000EF2  6E03               	movwf	(___xxtofl@val+2)^0,c
 11959   000EF4  6E04               	movwf	(___xxtofl@val+3)^0,c
 11960   000EF6  0E01               	movlw	1
 11961   000EF8  ECD3  F021         	call	___xxtofl
 11962   000EFC  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 11963   000F00  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 11964   000F04  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 11965   000F08  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 11966   000F0C                     
 11967                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 11968   000F0C  0E00               	movlw	0
 11969   000F0E  0100               	movlb	0	; () banked
 11970   000F10  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 11971   000F12  0E00               	movlw	0
 11972   000F14  6F7A               	movwf	Colour_decider@i& (0+255),b
 11973   000F16                     l5264:
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 11977   000F16  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 11978   000F1A  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 11979   000F1E  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 11980   000F22  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 11981   000F26  0E66               	movlw	low Colour_decider@RGB_col
 11982   000F28  6E4F               	movwf	??_Colour_decider^0,c
 11983   000F2A  0E00               	movlw	high Colour_decider@RGB_col
 11984   000F2C  6E50               	movwf	(??_Colour_decider+1)^0,c
 11985   000F2E  90D8               	bcf	status,0,c
 11986   000F30  357A               	rlcf	Colour_decider@i& (0+255),w,b
 11987   000F32  6ED9               	movwf	fsr2l,c
 11988   000F34  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 11989   000F36  6EDA               	movwf	fsr2h,c
 11990   000F38  90D8               	bcf	status,0,c
 11991   000F3A  36D9               	rlcf	fsr2l,f,c
 11992   000F3C  36DA               	rlcf	fsr2h,f,c
 11993   000F3E  504F               	movf	??_Colour_decider^0,w,c
 11994   000F40  26D9               	addwf	fsr2l,f,c
 11995   000F42  5050               	movf	(??_Colour_decider+1)^0,w,c
 11996   000F44  22DA               	addwfc	fsr2h,f,c
 11997   000F46  CFDE F02E          	movff	postinc2,___flge@ff2
 11998   000F4A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11999   000F4E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12000   000F52  CFDE F031          	movff	postinc2,___flge@ff2+3
 12001   000F56  EC5C  F025         	call	___flge	;wreg free
 12002   000F5A  B0D8               	btfsc	status,0,c
 12003   000F5C  EFB2  F007         	goto	u5121
 12004   000F60  EFB4  F007         	goto	u5120
 12005   000F64                     u5121:
 12006   000F64  EFD1  F007         	goto	l5270
 12007   000F68                     u5120:
 12008   000F68                     
 12009                           ;color.c: 137:             Cmax=RGB_col[i];
 12010   000F68  0E66               	movlw	low Colour_decider@RGB_col
 12011   000F6A  6E4F               	movwf	??_Colour_decider^0,c
 12012   000F6C  0E00               	movlw	high Colour_decider@RGB_col
 12013   000F6E  6E50               	movwf	(??_Colour_decider+1)^0,c
 12014   000F70  90D8               	bcf	status,0,c
 12015   000F72  0100               	movlb	0	; () banked
 12016   000F74  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12017   000F76  6ED9               	movwf	fsr2l,c
 12018   000F78  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12019   000F7A  6EDA               	movwf	fsr2h,c
 12020   000F7C  90D8               	bcf	status,0,c
 12021   000F7E  36D9               	rlcf	fsr2l,f,c
 12022   000F80  36DA               	rlcf	fsr2h,f,c
 12023   000F82  504F               	movf	??_Colour_decider^0,w,c
 12024   000F84  26D9               	addwf	fsr2l,f,c
 12025   000F86  5050               	movf	(??_Colour_decider+1)^0,w,c
 12026   000F88  22DA               	addwfc	fsr2h,f,c
 12027   000F8A  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12028   000F8E  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12029   000F92  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12030   000F96  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12031   000F9A                     
 12032                           ; BSR set to: 0
 12033                           ;color.c: 138:             Cmax_i=i;
 12034   000F9A  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12035   000F9E  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12036   000FA2                     l5270:
 12037                           
 12038                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12039   000FA2  0E66               	movlw	low Colour_decider@RGB_col
 12040   000FA4  6E4F               	movwf	??_Colour_decider^0,c
 12041   000FA6  0E00               	movlw	high Colour_decider@RGB_col
 12042   000FA8  6E50               	movwf	(??_Colour_decider+1)^0,c
 12043   000FAA  90D8               	bcf	status,0,c
 12044   000FAC  0100               	movlb	0	; () banked
 12045   000FAE  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12046   000FB0  6ED9               	movwf	fsr2l,c
 12047   000FB2  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12048   000FB4  6EDA               	movwf	fsr2h,c
 12049   000FB6  90D8               	bcf	status,0,c
 12050   000FB8  36D9               	rlcf	fsr2l,f,c
 12051   000FBA  36DA               	rlcf	fsr2h,f,c
 12052   000FBC  504F               	movf	??_Colour_decider^0,w,c
 12053   000FBE  26D9               	addwf	fsr2l,f,c
 12054   000FC0  5050               	movf	(??_Colour_decider+1)^0,w,c
 12055   000FC2  22DA               	addwfc	fsr2h,f,c
 12056   000FC4  CFDE F02A          	movff	postinc2,___flge@ff1
 12057   000FC8  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12058   000FCC  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12059   000FD0  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12060   000FD4  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12061   000FD8  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12062   000FDC  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12063   000FE0  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12064   000FE4  EC5C  F025         	call	___flge	;wreg free
 12065   000FE8  B0D8               	btfsc	status,0,c
 12066   000FEA  EFF9  F007         	goto	u5131
 12067   000FEE  EFFB  F007         	goto	u5130
 12068   000FF2                     u5131:
 12069   000FF2  EF14  F008         	goto	l5274
 12070   000FF6                     u5130:
 12071   000FF6  0E66               	movlw	low Colour_decider@RGB_col
 12072   000FF8  6E4F               	movwf	??_Colour_decider^0,c
 12073   000FFA  0E00               	movlw	high Colour_decider@RGB_col
 12074   000FFC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12075   000FFE  90D8               	bcf	status,0,c
 12076   001000  0100               	movlb	0	; () banked
 12077   001002  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12078   001004  6ED9               	movwf	fsr2l,c
 12079   001006  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12080   001008  6EDA               	movwf	fsr2h,c
 12081   00100A  90D8               	bcf	status,0,c
 12082   00100C  36D9               	rlcf	fsr2l,f,c
 12083   00100E  36DA               	rlcf	fsr2h,f,c
 12084   001010  504F               	movf	??_Colour_decider^0,w,c
 12085   001012  26D9               	addwf	fsr2l,f,c
 12086   001014  5050               	movf	(??_Colour_decider+1)^0,w,c
 12087   001016  22DA               	addwfc	fsr2h,f,c
 12088   001018  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12089   00101C  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12090   001020  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12091   001024  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12092   001028                     l5274:
 12093                           
 12094                           ;color.c: 141:     }
 12095   001028  0100               	movlb	0	; () banked
 12096   00102A  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12097   00102C  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12098   00102E                     
 12099                           ; BSR set to: 0
 12100   00102E  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12101   001030  EF23  F008         	goto	u5141
 12102   001034  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12103   001036  E109               	bnz	u5140
 12104   001038  0E03               	movlw	3
 12105   00103A  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12106   00103C  A0D8               	btfss	status,0,c
 12107   00103E  EF23  F008         	goto	u5141
 12108   001042  EF25  F008         	goto	u5140
 12109   001046                     u5141:
 12110   001046  EF8B  F007         	goto	l5264
 12111   00104A                     u5140:
 12112   00104A                     
 12113                           ; BSR set to: 0
 12114                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12115   00104A  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12116   00104E  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12117   001052  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12118   001056  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12119   00105A  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12120   00105E  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12121   001062  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12122   001066  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12123   00106A  EC34  F02E         	call	___flsub	;wreg free
 12124   00106E  C02A  F032         	movff	?___flsub,___fleq@ff1
 12125   001072  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12126   001076  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12127   00107A  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12128   00107E  0E00               	movlw	0
 12129   001080  6E36               	movwf	___fleq@ff2^0,c
 12130   001082  0E00               	movlw	0
 12131   001084  6E37               	movwf	(___fleq@ff2+1)^0,c
 12132   001086  0E00               	movlw	0
 12133   001088  6E38               	movwf	(___fleq@ff2+2)^0,c
 12134   00108A  0E00               	movlw	0
 12135   00108C  6E39               	movwf	(___fleq@ff2+3)^0,c
 12136   00108E  ECCD  F027         	call	___fleq	;wreg free
 12137   001092  A0D8               	btfss	status,0,c
 12138   001094  EF4E  F008         	goto	u5151
 12139   001098  EF50  F008         	goto	u5150
 12140   00109C                     u5151:
 12141   00109C  EF56  F008         	goto	l5284
 12142   0010A0                     u5150:
 12143   0010A0                     l5280:
 12144   0010A0  0E00               	movlw	0
 12145   0010A2  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12146   0010A4  0E00               	movlw	0
 12147   0010A6  6E4B               	movwf	?_Colour_decider^0,c
 12148   0010A8  EF39  F00C         	goto	l76
 12149   0010AC                     l5284:
 12150                           
 12151                           ;color.c: 146:     if (Cmax_i==0){
 12152   0010AC  0100               	movlb	0	; () banked
 12153   0010AE  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12154   0010B0  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12155   0010B2  A4D8               	btfss	status,2,c
 12156   0010B4  EF5E  F008         	goto	u5161
 12157   0010B8  EF60  F008         	goto	u5160
 12158   0010BC                     u5161:
 12159   0010BC  EFD4  F008         	goto	l5292
 12160   0010C0                     u5160:
 12161   0010C0                     
 12162                           ; BSR set to: 0
 12163                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12164   0010C0  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12165   0010C4  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12166   0010C8  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12167   0010CC  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12168   0010D0  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12169   0010D4  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12170   0010D8  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12171   0010DC  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12172   0010E0  EC34  F02E         	call	___flsub	;wreg free
 12173   0010E4  C02A  F036         	movff	?___flsub,___fldiv@a
 12174   0010E8  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12175   0010EC  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12176   0010F0  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12177   0010F4  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12178   0010F8  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12179   0010FC  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12180   001100  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12181   001104  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12182   001108  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12183   00110C  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12184   001110  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12185   001114  EC34  F02E         	call	___flsub	;wreg free
 12186   001118  C02A  F032         	movff	?___flsub,___fldiv@b
 12187   00111C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12188   001120  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12189   001124  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12190   001128  EC44  F018         	call	___fldiv	;wreg free
 12191   00112C  C032  F011         	movff	?___fldiv,___flmul@b
 12192   001130  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12193   001134  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12194   001138  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12195   00113C  0E00               	movlw	0
 12196   00113E  6E15               	movwf	___flmul@a^0,c
 12197   001140  0E00               	movlw	0
 12198   001142  6E16               	movwf	(___flmul@a+1)^0,c
 12199   001144  0E70               	movlw	112
 12200   001146  6E17               	movwf	(___flmul@a+2)^0,c
 12201   001148  0E42               	movlw	66
 12202   00114A  6E18               	movwf	(___flmul@a+3)^0,c
 12203   00114C  EC2F  F016         	call	___flmul	;wreg free
 12204   001150  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12205   001154  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12206   001158  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12207   00115C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12208   001160                     
 12209                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12210   001160  0100               	movlb	0	; () banked
 12211   001162  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12212   001164  EFB8  F008         	goto	u5170
 12213   001168  EFB6  F008         	goto	u5171
 12214   00116C                     u5171:
 12215   00116C  EFB3  F009         	goto	l5302
 12216   001170                     u5170:
 12217   001170                     
 12218                           ; BSR set to: 0
 12219   001170  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12220   001174  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12221   001178  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12222   00117C  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12223   001180  0E00               	movlw	0
 12224   001182  6E05               	movwf	___fladd@a^0,c
 12225   001184  0E00               	movlw	0
 12226   001186  6E06               	movwf	(___fladd@a+1)^0,c
 12227   001188  0EB4               	movlw	180
 12228   00118A  6E07               	movwf	(___fladd@a+2)^0,c
 12229   00118C  0E43               	movlw	67
 12230   00118E  6E08               	movwf	(___fladd@a+3)^0,c
 12231   001190  ECCF  F013         	call	___fladd	;wreg free
 12232   001194  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12233   001198  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12234   00119C  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12235   0011A0  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12236   0011A4  EFB3  F009         	goto	l5302
 12237   0011A8                     l5292:
 12238                           
 12239                           ; BSR set to: 0
 12240   0011A8  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12241   0011AA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12242   0011AC  A4D8               	btfss	status,2,c
 12243   0011AE  EFDB  F008         	goto	u5181
 12244   0011B2  EFDD  F008         	goto	u5180
 12245   0011B6                     u5181:
 12246   0011B6  EF49  F009         	goto	l5298
 12247   0011BA                     u5180:
 12248   0011BA                     
 12249                           ; BSR set to: 0
 12250                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12251   0011BA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12252   0011BE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12253   0011C2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12254   0011C6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12255   0011CA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12256   0011CE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12257   0011D2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12258   0011D6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12259   0011DA  EC34  F02E         	call	___flsub	;wreg free
 12260   0011DE  C02A  F036         	movff	?___flsub,___fldiv@a
 12261   0011E2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12262   0011E6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12263   0011EA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12264   0011EE  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12265   0011F2  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12266   0011F6  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12267   0011FA  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12268   0011FE  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12269   001202  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12270   001206  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12271   00120A  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12272   00120E  EC34  F02E         	call	___flsub	;wreg free
 12273   001212  C02A  F032         	movff	?___flsub,___fldiv@b
 12274   001216  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12275   00121A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12276   00121E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12277   001222  EC44  F018         	call	___fldiv	;wreg free
 12278   001226  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12279   00122A  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12280   00122E  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12281   001232  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12282   001236                     
 12283                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12284   001236  0E00               	movlw	0
 12285   001238  6E05               	movwf	___fladd@a^0,c
 12286   00123A  0E00               	movlw	0
 12287   00123C  6E06               	movwf	(___fladd@a+1)^0,c
 12288   00123E  0E00               	movlw	0
 12289   001240  6E07               	movwf	(___fladd@a+2)^0,c
 12290   001242  0E40               	movlw	64
 12291   001244  6E08               	movwf	(___fladd@a+3)^0,c
 12292   001246  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12293   00124A  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12294   00124E  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12295   001252  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12296   001256  ECCF  F013         	call	___fladd	;wreg free
 12297   00125A  C001  F011         	movff	?___fladd,___flmul@b
 12298   00125E  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12299   001262  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12300   001266  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12301   00126A  0E00               	movlw	0
 12302   00126C  6E15               	movwf	___flmul@a^0,c
 12303   00126E  0E00               	movlw	0
 12304   001270  6E16               	movwf	(___flmul@a+1)^0,c
 12305   001272  0E70               	movlw	112
 12306   001274  6E17               	movwf	(___flmul@a+2)^0,c
 12307   001276  0E42               	movlw	66
 12308   001278  6E18               	movwf	(___flmul@a+3)^0,c
 12309   00127A  EC2F  F016         	call	___flmul	;wreg free
 12310   00127E  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12311   001282  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12312   001286  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12313   00128A  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12314                           
 12315                           ;color.c: 155:     }
 12316   00128E  EFB3  F009         	goto	l5302
 12317   001292                     l5298:
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12321   001292  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12322   001296  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12323   00129A  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12324   00129E  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12325   0012A2  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12326   0012A6  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12327   0012AA  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12328   0012AE  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12329   0012B2  EC34  F02E         	call	___flsub	;wreg free
 12330   0012B6  C02A  F036         	movff	?___flsub,___fldiv@a
 12331   0012BA  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12332   0012BE  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12333   0012C2  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12334   0012C6  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12335   0012CA  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12336   0012CE  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12337   0012D2  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12338   0012D6  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12339   0012DA  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12340   0012DE  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12341   0012E2  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12342   0012E6  EC34  F02E         	call	___flsub	;wreg free
 12343   0012EA  C02A  F032         	movff	?___flsub,___fldiv@b
 12344   0012EE  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12345   0012F2  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12346   0012F6  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12347   0012FA  EC44  F018         	call	___fldiv	;wreg free
 12348   0012FE  C032  F060         	movff	?___fldiv,_Colour_decider$3205
 12349   001302  C033  F061         	movff	?___fldiv+1,_Colour_decider$3205+1
 12350   001306  C034  F062         	movff	?___fldiv+2,_Colour_decider$3205+2
 12351   00130A  C035  F063         	movff	?___fldiv+3,_Colour_decider$3205+3
 12352   00130E                     
 12353                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12354   00130E  0E00               	movlw	0
 12355   001310  6E05               	movwf	___fladd@a^0,c
 12356   001312  0E00               	movlw	0
 12357   001314  6E06               	movwf	(___fladd@a+1)^0,c
 12358   001316  0E80               	movlw	128
 12359   001318  6E07               	movwf	(___fladd@a+2)^0,c
 12360   00131A  0E40               	movlw	64
 12361   00131C  6E08               	movwf	(___fladd@a+3)^0,c
 12362   00131E  C060  F001         	movff	_Colour_decider$3205,___fladd@b
 12363   001322  C061  F002         	movff	_Colour_decider$3205+1,___fladd@b+1
 12364   001326  C062  F003         	movff	_Colour_decider$3205+2,___fladd@b+2
 12365   00132A  C063  F004         	movff	_Colour_decider$3205+3,___fladd@b+3
 12366   00132E  ECCF  F013         	call	___fladd	;wreg free
 12367   001332  C001  F011         	movff	?___fladd,___flmul@b
 12368   001336  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12369   00133A  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12370   00133E  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12371   001342  0E00               	movlw	0
 12372   001344  6E15               	movwf	___flmul@a^0,c
 12373   001346  0E00               	movlw	0
 12374   001348  6E16               	movwf	(___flmul@a+1)^0,c
 12375   00134A  0E70               	movlw	112
 12376   00134C  6E17               	movwf	(___flmul@a+2)^0,c
 12377   00134E  0E42               	movlw	66
 12378   001350  6E18               	movwf	(___flmul@a+3)^0,c
 12379   001352  EC2F  F016         	call	___flmul	;wreg free
 12380   001356  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12381   00135A  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12382   00135E  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12383   001362  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12384   001366                     l5302:
 12385                           
 12386                           ;color.c: 162:     if ((330<=Hue)&(Hue<=360)){
 12387   001366  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12388   00136A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12389   00136E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12390   001372  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12391   001376  0E00               	movlw	0
 12392   001378  6E2E               	movwf	___flge@ff2^0,c
 12393   00137A  0E00               	movlw	0
 12394   00137C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12395   00137E  0EA5               	movlw	165
 12396   001380  6E30               	movwf	(___flge@ff2+2)^0,c
 12397   001382  0E43               	movlw	67
 12398   001384  6E31               	movwf	(___flge@ff2+3)^0,c
 12399   001386  EC5C  F025         	call	___flge	;wreg free
 12400   00138A  A0D8               	btfss	status,0,c
 12401   00138C  EFCA  F009         	goto	u5191
 12402   001390  EFCC  F009         	goto	u5190
 12403   001394                     u5191:
 12404   001394  EFEB  F009         	goto	l5312
 12405   001398                     u5190:
 12406   001398  0E00               	movlw	0
 12407   00139A  6E2A               	movwf	___flge@ff1^0,c
 12408   00139C  0E00               	movlw	0
 12409   00139E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12410   0013A0  0EB4               	movlw	180
 12411   0013A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12412   0013A4  0E43               	movlw	67
 12413   0013A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12414   0013A8  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12415   0013AC  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12416   0013B0  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12417   0013B4  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12418   0013B8  EC5C  F025         	call	___flge	;wreg free
 12419   0013BC  A0D8               	btfss	status,0,c
 12420   0013BE  EFE3  F009         	goto	u5201
 12421   0013C2  EFE5  F009         	goto	u5200
 12422   0013C6                     u5201:
 12423   0013C6  EFEB  F009         	goto	l5312
 12424   0013CA                     u5200:
 12425   0013CA                     
 12426                           ;color.c: 163:         return 1;
 12427   0013CA  0E00               	movlw	0
 12428   0013CC  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12429   0013CE  0E01               	movlw	1
 12430   0013D0  6E4B               	movwf	?_Colour_decider^0,c
 12431   0013D2  EF39  F00C         	goto	l76
 12432   0013D6                     l5312:
 12433   0013D6  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12434   0013DA  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12435   0013DE  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12436   0013E2  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12437   0013E6  0E00               	movlw	0
 12438   0013E8  6E2E               	movwf	___flge@ff2^0,c
 12439   0013EA  0E00               	movlw	0
 12440   0013EC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12441   0013EE  0EA0               	movlw	160
 12442   0013F0  6E30               	movwf	(___flge@ff2+2)^0,c
 12443   0013F2  0E40               	movlw	64
 12444   0013F4  6E31               	movwf	(___flge@ff2+3)^0,c
 12445   0013F6  EC5C  F025         	call	___flge	;wreg free
 12446   0013FA  A0D8               	btfss	status,0,c
 12447   0013FC  EF02  F00A         	goto	u5211
 12448   001400  EF04  F00A         	goto	u5210
 12449   001404                     u5211:
 12450   001404  EF23  F00A         	goto	l5322
 12451   001408                     u5210:
 12452   001408  0E00               	movlw	0
 12453   00140A  6E2A               	movwf	___flge@ff1^0,c
 12454   00140C  0E00               	movlw	0
 12455   00140E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12456   001410  0E30               	movlw	48
 12457   001412  6E2C               	movwf	(___flge@ff1+2)^0,c
 12458   001414  0E41               	movlw	65
 12459   001416  6E2D               	movwf	(___flge@ff1+3)^0,c
 12460   001418  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12461   00141C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12462   001420  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12463   001424  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12464   001428  EC5C  F025         	call	___flge	;wreg free
 12465   00142C  A0D8               	btfss	status,0,c
 12466   00142E  EF1B  F00A         	goto	u5221
 12467   001432  EF1D  F00A         	goto	u5220
 12468   001436                     u5221:
 12469   001436  EF23  F00A         	goto	l5322
 12470   00143A                     u5220:
 12471   00143A                     
 12472                           ;color.c: 167:         return 2;
 12473   00143A  0E00               	movlw	0
 12474   00143C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12475   00143E  0E02               	movlw	2
 12476   001440  6E4B               	movwf	?_Colour_decider^0,c
 12477   001442  EF39  F00C         	goto	l76
 12478   001446                     l5322:
 12479   001446  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12480   00144A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12481   00144E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12482   001452  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12483   001456  0E00               	movlw	0
 12484   001458  6E2E               	movwf	___flge@ff2^0,c
 12485   00145A  0E00               	movlw	0
 12486   00145C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12487   00145E  0E90               	movlw	144
 12488   001460  6E30               	movwf	(___flge@ff2+2)^0,c
 12489   001462  0E41               	movlw	65
 12490   001464  6E31               	movwf	(___flge@ff2+3)^0,c
 12491   001466  EC5C  F025         	call	___flge	;wreg free
 12492   00146A  A0D8               	btfss	status,0,c
 12493   00146C  EF3A  F00A         	goto	u5231
 12494   001470  EF3C  F00A         	goto	u5230
 12495   001474                     u5231:
 12496   001474  EFDB  F00A         	goto	l5350
 12497   001478                     u5230:
 12498   001478  0E00               	movlw	0
 12499   00147A  6E2A               	movwf	___flge@ff1^0,c
 12500   00147C  0E00               	movlw	0
 12501   00147E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12502   001480  0EC8               	movlw	200
 12503   001482  6E2C               	movwf	(___flge@ff1+2)^0,c
 12504   001484  0E41               	movlw	65
 12505   001486  6E2D               	movwf	(___flge@ff1+3)^0,c
 12506   001488  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12507   00148C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12508   001490  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12509   001494  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12510   001498  EC5C  F025         	call	___flge	;wreg free
 12511   00149C  A0D8               	btfss	status,0,c
 12512   00149E  EF53  F00A         	goto	u5241
 12513   0014A2  EF55  F00A         	goto	u5240
 12514   0014A6                     u5241:
 12515   0014A6  EFDB  F00A         	goto	l5350
 12516   0014AA                     u5240:
 12517   0014AA                     
 12518                           ;color.c: 172:         if ((rel->R<=0.26)&&(rel->B>0.10)){
 12519   0014AA  0EB8               	movlw	184
 12520   0014AC  6E2A               	movwf	___flge@ff1^0,c
 12521   0014AE  0E1E               	movlw	30
 12522   0014B0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12523   0014B2  0E85               	movlw	133
 12524   0014B4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12525   0014B6  0E3E               	movlw	62
 12526   0014B8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12527   0014BA  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12528   0014BE  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12529   0014C2  CFDE F02E          	movff	postinc2,___flge@ff2
 12530   0014C6  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12531   0014CA  CFDE F030          	movff	postinc2,___flge@ff2+2
 12532   0014CE  CFDE F031          	movff	postinc2,___flge@ff2+3
 12533   0014D2  EC5C  F025         	call	___flge	;wreg free
 12534   0014D6  A0D8               	btfss	status,0,c
 12535   0014D8  EF70  F00A         	goto	u5251
 12536   0014DC  EF72  F00A         	goto	u5250
 12537   0014E0                     u5251:
 12538   0014E0  EF93  F00A         	goto	l5336
 12539   0014E4                     u5250:
 12540   0014E4  0ECD               	movlw	205
 12541   0014E6  6E2A               	movwf	___flge@ff1^0,c
 12542   0014E8  0ECC               	movlw	204
 12543   0014EA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12544   0014EC  0ECC               	movlw	204
 12545   0014EE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12546   0014F0  0E3D               	movlw	61
 12547   0014F2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12548   0014F4  EE20 F008          	lfsr	2,8
 12549   0014F8  504D               	movf	Colour_decider@rel^0,w,c
 12550   0014FA  26D9               	addwf	fsr2l,f,c
 12551   0014FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12552   0014FE  22DA               	addwfc	fsr2h,f,c
 12553   001500  CFDE F02E          	movff	postinc2,___flge@ff2
 12554   001504  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12555   001508  CFDE F030          	movff	postinc2,___flge@ff2+2
 12556   00150C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12557   001510  EC5C  F025         	call	___flge	;wreg free
 12558   001514  B0D8               	btfsc	status,0,c
 12559   001516  EF8F  F00A         	goto	u5261
 12560   00151A  EF91  F00A         	goto	u5260
 12561   00151E                     u5261:
 12562   00151E  EF93  F00A         	goto	l5336
 12563   001522                     u5260:
 12564   001522  EF50  F008         	goto	l5280
 12565   001526                     l5336:
 12566   001526  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12567   00152A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12568   00152E  CFDE F02A          	movff	postinc2,___flge@ff1
 12569   001532  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12570   001536  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12571   00153A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12572   00153E  0EB8               	movlw	184
 12573   001540  6E2E               	movwf	___flge@ff2^0,c
 12574   001542  0E1E               	movlw	30
 12575   001544  6E2F               	movwf	(___flge@ff2+1)^0,c
 12576   001546  0E85               	movlw	133
 12577   001548  6E30               	movwf	(___flge@ff2+2)^0,c
 12578   00154A  0E3E               	movlw	62
 12579   00154C  6E31               	movwf	(___flge@ff2+3)^0,c
 12580   00154E  EC5C  F025         	call	___flge	;wreg free
 12581   001552  A0D8               	btfss	status,0,c
 12582   001554  EFAE  F00A         	goto	u5271
 12583   001558  EFB0  F00A         	goto	u5270
 12584   00155C                     u5271:
 12585   00155C  EFD5  F00A         	goto	l5346
 12586   001560                     u5270:
 12587   001560  EE20 F008          	lfsr	2,8
 12588   001564  504D               	movf	Colour_decider@rel^0,w,c
 12589   001566  26D9               	addwf	fsr2l,f,c
 12590   001568  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12591   00156A  22DA               	addwfc	fsr2h,f,c
 12592   00156C  CFDE F02A          	movff	postinc2,___flge@ff1
 12593   001570  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12594   001574  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12595   001578  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12596   00157C  0ECD               	movlw	205
 12597   00157E  6E2E               	movwf	___flge@ff2^0,c
 12598   001580  0ECC               	movlw	204
 12599   001582  6E2F               	movwf	(___flge@ff2+1)^0,c
 12600   001584  0ECC               	movlw	204
 12601   001586  6E30               	movwf	(___flge@ff2+2)^0,c
 12602   001588  0E3D               	movlw	61
 12603   00158A  6E31               	movwf	(___flge@ff2+3)^0,c
 12604   00158C  EC5C  F025         	call	___flge	;wreg free
 12605   001590  B0D8               	btfsc	status,0,c
 12606   001592  EFCD  F00A         	goto	u5281
 12607   001596  EFCF  F00A         	goto	u5280
 12608   00159A                     u5281:
 12609   00159A  EFD5  F00A         	goto	l5346
 12610   00159E                     u5280:
 12611   00159E                     
 12612                           ;color.c: 181:             return 3;
 12613   00159E  0E00               	movlw	0
 12614   0015A0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12615   0015A2  0E03               	movlw	3
 12616   0015A4  6E4B               	movwf	?_Colour_decider^0,c
 12617   0015A6  EF39  F00C         	goto	l76
 12618   0015AA                     l5346:
 12619                           
 12620                           ;color.c: 184:             return 10;
 12621   0015AA  0E00               	movlw	0
 12622   0015AC  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12623   0015AE  0E0A               	movlw	10
 12624   0015B0  6E4B               	movwf	?_Colour_decider^0,c
 12625   0015B2  EF39  F00C         	goto	l76
 12626   0015B6                     l5350:
 12627   0015B6  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12628   0015BA  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12629   0015BE  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12630   0015C2  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12631   0015C6  0E00               	movlw	0
 12632   0015C8  6E2E               	movwf	___flge@ff2^0,c
 12633   0015CA  0E00               	movlw	0
 12634   0015CC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12635   0015CE  0EAA               	movlw	170
 12636   0015D0  6E30               	movwf	(___flge@ff2+2)^0,c
 12637   0015D2  0E42               	movlw	66
 12638   0015D4  6E31               	movwf	(___flge@ff2+3)^0,c
 12639   0015D6  EC5C  F025         	call	___flge	;wreg free
 12640   0015DA  A0D8               	btfss	status,0,c
 12641   0015DC  EFF2  F00A         	goto	u5291
 12642   0015E0  EFF4  F00A         	goto	u5290
 12643   0015E4                     u5291:
 12644   0015E4  EF13  F00B         	goto	l5360
 12645   0015E8                     u5290:
 12646   0015E8  0E00               	movlw	0
 12647   0015EA  6E2A               	movwf	___flge@ff1^0,c
 12648   0015EC  0E00               	movlw	0
 12649   0015EE  6E2B               	movwf	(___flge@ff1+1)^0,c
 12650   0015F0  0E20               	movlw	32
 12651   0015F2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12652   0015F4  0E43               	movlw	67
 12653   0015F6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12654   0015F8  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12655   0015FC  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12656   001600  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12657   001604  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12658   001608  EC5C  F025         	call	___flge	;wreg free
 12659   00160C  A0D8               	btfss	status,0,c
 12660   00160E  EF0B  F00B         	goto	u5301
 12661   001612  EF0D  F00B         	goto	u5300
 12662   001616                     u5301:
 12663   001616  EF13  F00B         	goto	l5360
 12664   00161A                     u5300:
 12665   00161A                     
 12666                           ;color.c: 191:             return 4;
 12667   00161A  0E00               	movlw	0
 12668   00161C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12669   00161E  0E04               	movlw	4
 12670   001620  6E4B               	movwf	?_Colour_decider^0,c
 12671   001622  EF39  F00C         	goto	l76
 12672   001626                     l5360:
 12673   001626  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12674   00162A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12675   00162E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12676   001632  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12677   001636  0E00               	movlw	0
 12678   001638  6E2E               	movwf	___flge@ff2^0,c
 12679   00163A  0E00               	movlw	0
 12680   00163C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12681   00163E  0E70               	movlw	112
 12682   001640  6E30               	movwf	(___flge@ff2+2)^0,c
 12683   001642  0E42               	movlw	66
 12684   001644  6E31               	movwf	(___flge@ff2+3)^0,c
 12685   001646  EC5C  F025         	call	___flge	;wreg free
 12686   00164A  A0D8               	btfss	status,0,c
 12687   00164C  EF2A  F00B         	goto	u5311
 12688   001650  EF2C  F00B         	goto	u5310
 12689   001654                     u5311:
 12690   001654  EFCD  F00B         	goto	l5388
 12691   001658                     u5310:
 12692   001658  0E00               	movlw	0
 12693   00165A  6E2A               	movwf	___flge@ff1^0,c
 12694   00165C  0E00               	movlw	0
 12695   00165E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12696   001660  0E9A               	movlw	154
 12697   001662  6E2C               	movwf	(___flge@ff1+2)^0,c
 12698   001664  0E42               	movlw	66
 12699   001666  6E2D               	movwf	(___flge@ff1+3)^0,c
 12700   001668  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12701   00166C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12702   001670  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12703   001674  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12704   001678  EC5C  F025         	call	___flge	;wreg free
 12705   00167C  A0D8               	btfss	status,0,c
 12706   00167E  EF43  F00B         	goto	u5321
 12707   001682  EF45  F00B         	goto	u5320
 12708   001686                     u5321:
 12709   001686  EFCD  F00B         	goto	l5388
 12710   00168A                     u5320:
 12711   00168A                     
 12712                           ;color.c: 201:         if ((0.12<=rel->B)&(0.21>rel->G)){
 12713   00168A  EE20 F008          	lfsr	2,8
 12714   00168E  504D               	movf	Colour_decider@rel^0,w,c
 12715   001690  26D9               	addwf	fsr2l,f,c
 12716   001692  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12717   001694  22DA               	addwfc	fsr2h,f,c
 12718   001696  CFDE F02A          	movff	postinc2,___flge@ff1
 12719   00169A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12720   00169E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12721   0016A2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12722   0016A6  0E8F               	movlw	143
 12723   0016A8  6E2E               	movwf	___flge@ff2^0,c
 12724   0016AA  0EC2               	movlw	194
 12725   0016AC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12726   0016AE  0EF5               	movlw	245
 12727   0016B0  6E30               	movwf	(___flge@ff2+2)^0,c
 12728   0016B2  0E3D               	movlw	61
 12729   0016B4  6E31               	movwf	(___flge@ff2+3)^0,c
 12730   0016B6  EC5C  F025         	call	___flge	;wreg free
 12731   0016BA  A0D8               	btfss	status,0,c
 12732   0016BC  EF62  F00B         	goto	u5331
 12733   0016C0  EF64  F00B         	goto	u5330
 12734   0016C4                     u5331:
 12735   0016C4  EF89  F00B         	goto	l5374
 12736   0016C8                     u5330:
 12737   0016C8  EE20 F004          	lfsr	2,4
 12738   0016CC  504D               	movf	Colour_decider@rel^0,w,c
 12739   0016CE  26D9               	addwf	fsr2l,f,c
 12740   0016D0  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12741   0016D2  22DA               	addwfc	fsr2h,f,c
 12742   0016D4  CFDE F02A          	movff	postinc2,___flge@ff1
 12743   0016D8  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12744   0016DC  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12745   0016E0  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12746   0016E4  0E3D               	movlw	61
 12747   0016E6  6E2E               	movwf	___flge@ff2^0,c
 12748   0016E8  0E0A               	movlw	10
 12749   0016EA  6E2F               	movwf	(___flge@ff2+1)^0,c
 12750   0016EC  0E57               	movlw	87
 12751   0016EE  6E30               	movwf	(___flge@ff2+2)^0,c
 12752   0016F0  0E3E               	movlw	62
 12753   0016F2  6E31               	movwf	(___flge@ff2+3)^0,c
 12754   0016F4  EC5C  F025         	call	___flge	;wreg free
 12755   0016F8  B0D8               	btfsc	status,0,c
 12756   0016FA  EF81  F00B         	goto	u5341
 12757   0016FE  EF83  F00B         	goto	u5340
 12758   001702                     u5341:
 12759   001702  EF89  F00B         	goto	l5374
 12760   001706                     u5340:
 12761   001706                     
 12762                           ;color.c: 202:             return 6;
 12763   001706  0E00               	movlw	0
 12764   001708  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12765   00170A  0E06               	movlw	6
 12766   00170C  6E4B               	movwf	?_Colour_decider^0,c
 12767   00170E  EF39  F00C         	goto	l76
 12768   001712                     l5374:
 12769   001712  EE20 F008          	lfsr	2,8
 12770   001716  504D               	movf	Colour_decider@rel^0,w,c
 12771   001718  26D9               	addwf	fsr2l,f,c
 12772   00171A  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12773   00171C  22DA               	addwfc	fsr2h,f,c
 12774   00171E  CFDE F02A          	movff	postinc2,___flge@ff1
 12775   001722  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12776   001726  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12777   00172A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12778   00172E  0E8F               	movlw	143
 12779   001730  6E2E               	movwf	___flge@ff2^0,c
 12780   001732  0EC2               	movlw	194
 12781   001734  6E2F               	movwf	(___flge@ff2+1)^0,c
 12782   001736  0EF5               	movlw	245
 12783   001738  6E30               	movwf	(___flge@ff2+2)^0,c
 12784   00173A  0E3D               	movlw	61
 12785   00173C  6E31               	movwf	(___flge@ff2+3)^0,c
 12786   00173E  EC5C  F025         	call	___flge	;wreg free
 12787   001742  B0D8               	btfsc	status,0,c
 12788   001744  EFA6  F00B         	goto	u5351
 12789   001748  EFA8  F00B         	goto	u5350
 12790   00174C                     u5351:
 12791   00174C  EFD5  F00A         	goto	l5346
 12792   001750                     u5350:
 12793   001750  0E3D               	movlw	61
 12794   001752  6E2A               	movwf	___flge@ff1^0,c
 12795   001754  0E0A               	movlw	10
 12796   001756  6E2B               	movwf	(___flge@ff1+1)^0,c
 12797   001758  0E57               	movlw	87
 12798   00175A  6E2C               	movwf	(___flge@ff1+2)^0,c
 12799   00175C  0E3E               	movlw	62
 12800   00175E  6E2D               	movwf	(___flge@ff1+3)^0,c
 12801   001760  EE20 F004          	lfsr	2,4
 12802   001764  504D               	movf	Colour_decider@rel^0,w,c
 12803   001766  26D9               	addwf	fsr2l,f,c
 12804   001768  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12805   00176A  22DA               	addwfc	fsr2h,f,c
 12806   00176C  CFDE F02E          	movff	postinc2,___flge@ff2
 12807   001770  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12808   001774  CFDE F030          	movff	postinc2,___flge@ff2+2
 12809   001778  CFDE F031          	movff	postinc2,___flge@ff2+3
 12810   00177C  EC5C  F025         	call	___flge	;wreg free
 12811   001780  B0D8               	btfsc	status,0,c
 12812   001782  EFC5  F00B         	goto	u5361
 12813   001786  EFC7  F00B         	goto	u5360
 12814   00178A                     u5361:
 12815   00178A  EFD5  F00A         	goto	l5346
 12816   00178E                     u5360:
 12817   00178E                     
 12818                           ;color.c: 205:             return 5;
 12819   00178E  0E00               	movlw	0
 12820   001790  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12821   001792  0E05               	movlw	5
 12822   001794  6E4B               	movwf	?_Colour_decider^0,c
 12823   001796  EF39  F00C         	goto	l76
 12824   00179A                     l5388:
 12825   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12826   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12827   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12828   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12829   0017AA  0E00               	movlw	0
 12830   0017AC  6E2E               	movwf	___flge@ff2^0,c
 12831   0017AE  0E00               	movlw	0
 12832   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
 12833   0017B2  0E40               	movlw	64
 12834   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
 12835   0017B6  0E41               	movlw	65
 12836   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
 12837   0017BA  EC5C  F025         	call	___flge	;wreg free
 12838   0017BE  A0D8               	btfss	status,0,c
 12839   0017C0  EFE4  F00B         	goto	u5371
 12840   0017C4  EFE6  F00B         	goto	u5370
 12841   0017C8                     u5371:
 12842   0017C8  EF05  F00C         	goto	l5398
 12843   0017CC                     u5370:
 12844   0017CC  0E00               	movlw	0
 12845   0017CE  6E2A               	movwf	___flge@ff1^0,c
 12846   0017D0  0E00               	movlw	0
 12847   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
 12848   0017D4  0E88               	movlw	136
 12849   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
 12850   0017D8  0E41               	movlw	65
 12851   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
 12852   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12853   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12854   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12855   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12856   0017EC  EC5C  F025         	call	___flge	;wreg free
 12857   0017F0  A0D8               	btfss	status,0,c
 12858   0017F2  EFFD  F00B         	goto	u5381
 12859   0017F6  EFFF  F00B         	goto	u5380
 12860   0017FA                     u5381:
 12861   0017FA  EF05  F00C         	goto	l5398
 12862   0017FE                     u5380:
 12863   0017FE                     
 12864                           ;color.c: 223:             return 7;
 12865   0017FE  0E00               	movlw	0
 12866   001800  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12867   001802  0E07               	movlw	7
 12868   001804  6E4B               	movwf	?_Colour_decider^0,c
 12869   001806  EF39  F00C         	goto	l76
 12870   00180A                     l5398:
 12871   00180A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12872   00180E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12873   001812  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12874   001816  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12875   00181A  0E00               	movlw	0
 12876   00181C  6E2E               	movwf	___flge@ff2^0,c
 12877   00181E  0E00               	movlw	0
 12878   001820  6E2F               	movwf	(___flge@ff2+1)^0,c
 12879   001822  0EB0               	movlw	176
 12880   001824  6E30               	movwf	(___flge@ff2+2)^0,c
 12881   001826  0E41               	movlw	65
 12882   001828  6E31               	movwf	(___flge@ff2+3)^0,c
 12883   00182A  EC5C  F025         	call	___flge	;wreg free
 12884   00182E  A0D8               	btfss	status,0,c
 12885   001830  EF1C  F00C         	goto	u5391
 12886   001834  EF1E  F00C         	goto	u5390
 12887   001838                     u5391:
 12888   001838  EFD5  F00A         	goto	l5346
 12889   00183C                     u5390:
 12890   00183C  0E00               	movlw	0
 12891   00183E  6E2A               	movwf	___flge@ff1^0,c
 12892   001840  0E00               	movlw	0
 12893   001842  6E2B               	movwf	(___flge@ff1+1)^0,c
 12894   001844  0EC0               	movlw	192
 12895   001846  6E2C               	movwf	(___flge@ff1+2)^0,c
 12896   001848  0E41               	movlw	65
 12897   00184A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12898   00184C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12899   001850  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12900   001854  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12901   001858  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12902   00185C  EC5C  F025         	call	___flge	;wreg free
 12903   001860  A0D8               	btfss	status,0,c
 12904   001862  EF35  F00C         	goto	u5401
 12905   001866  EF37  F00C         	goto	u5400
 12906   00186A                     u5401:
 12907   00186A  EFD5  F00A         	goto	l5346
 12908   00186E                     u5400:
 12909   00186E  EF50  F008         	goto	l5280
 12910   001872                     l76:
 12911   001872  0012               	return		;funcret
 12912   001874                     __end_of_Colour_decider:
 12913                           	callstack 0
 12914                           
 12915 ;; *************** function ___xxtofl *****************
 12916 ;; Defined at:
 12917 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;  sign            1    wreg     unsigned char 
 12920 ;;  val             4    0[COMRAM] long 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;  sign            1    8[COMRAM] unsigned char 
 12923 ;;  arg             4   10[COMRAM] unsigned long 
 12924 ;;  exp             1    9[COMRAM] unsigned char 
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  4    0[COMRAM] unsigned char 
 12927 ;; Registers used:
 12928 ;;		wreg, status,2, status,0
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12935 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12937 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12938 ;;Total ram usage:       14 bytes
 12939 ;; Hardware stack levels used: 1
 12940 ;; Hardware stack levels required when called: 1
 12941 ;; This function calls:
 12942 ;;		Nothing
 12943 ;; This function is called by:
 12944 ;;		_colour_rel
 12945 ;;		_Colour_decider
 12946 ;;		_reverseOneBlock
 12947 ;;		_ForwardOneBlock
 12948 ;;		_Forwardhalfblock
 12949 ;;		_Backhalfblock
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           	psect	text72
 12954   0043A6                     __ptext72:
 12955                           	callstack 0
 12956   0043A6                     ___xxtofl:
 12957                           	callstack 28
 12958                           
 12959                           ;incstack = 0
 12960                           ;___xxtofl@sign stored from wreg
 12961   0043A6  6E09               	movwf	___xxtofl@sign^0,c
 12962   0043A8  5009               	movf	___xxtofl@sign^0,w,c
 12963   0043AA  B4D8               	btfsc	status,2,c
 12964   0043AC  EFDA  F021         	goto	u5001
 12965   0043B0  EFDC  F021         	goto	u5000
 12966   0043B4                     u5001:
 12967   0043B4  EFFE  F021         	goto	l1326
 12968   0043B8                     u5000:
 12969   0043B8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12970   0043BA  EFE3  F021         	goto	u5010
 12971   0043BE  EFE1  F021         	goto	u5011
 12972   0043C2                     u5011:
 12973   0043C2  EFFE  F021         	goto	l1326
 12974   0043C6                     u5010:
 12975   0043C6  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12976   0043CA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12977   0043CE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12978   0043D2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12979   0043D6  1E05               	comf	??___xxtofl^0,f,c
 12980   0043D8  1E06               	comf	(??___xxtofl+1)^0,f,c
 12981   0043DA  1E07               	comf	(??___xxtofl+2)^0,f,c
 12982   0043DC  1E08               	comf	(??___xxtofl+3)^0,f,c
 12983   0043DE  2A05               	incf	??___xxtofl^0,f,c
 12984   0043E0  0E00               	movlw	0
 12985   0043E2  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12986   0043E4  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12987   0043E6  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12988   0043E8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12989   0043EC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12990   0043F0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12991   0043F4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12992   0043F8  EF06  F022         	goto	l5150
 12993   0043FC                     l1326:
 12994   0043FC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12995   004400  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12996   004404  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12997   004408  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12998   00440C                     l5150:
 12999   00440C  5001               	movf	___xxtofl@val^0,w,c
 13000   00440E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13001   004410  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13002   004412  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13003   004414  A4D8               	btfss	status,2,c
 13004   004416  EF0F  F022         	goto	u5021
 13005   00441A  EF11  F022         	goto	u5020
 13006   00441E                     u5021:
 13007   00441E  EF1B  F022         	goto	l5156
 13008   004422                     u5020:
 13009   004422  0E00               	movlw	0
 13010   004424  6E01               	movwf	?___xxtofl^0,c
 13011   004426  0E00               	movlw	0
 13012   004428  6E02               	movwf	(?___xxtofl+1)^0,c
 13013   00442A  0E00               	movlw	0
 13014   00442C  6E03               	movwf	(?___xxtofl+2)^0,c
 13015   00442E  0E00               	movlw	0
 13016   004430  6E04               	movwf	(?___xxtofl+3)^0,c
 13017   004432  EFAC  F022         	goto	l1329
 13018   004436                     l5156:
 13019   004436  0E96               	movlw	150
 13020   004438  6E0A               	movwf	___xxtofl@exp^0,c
 13021   00443A  EF25  F022         	goto	l5160
 13022   00443E                     l5158:
 13023   00443E  2A0A               	incf	___xxtofl@exp^0,f,c
 13024   004440  90D8               	bcf	status,0,c
 13025   004442  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13026   004444  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13027   004446  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13028   004448  320B               	rrcf	___xxtofl@arg^0,f,c
 13029   00444A                     l5160:
 13030   00444A  0E00               	movlw	0
 13031   00444C  140B               	andwf	___xxtofl@arg^0,w,c
 13032   00444E  6E05               	movwf	??___xxtofl^0,c
 13033   004450  0E00               	movlw	0
 13034   004452  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13035   004454  6E06               	movwf	(??___xxtofl+1)^0,c
 13036   004456  0E00               	movlw	0
 13037   004458  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13038   00445A  6E07               	movwf	(??___xxtofl+2)^0,c
 13039   00445C  0EFE               	movlw	254
 13040   00445E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13041   004460  6E08               	movwf	(??___xxtofl+3)^0,c
 13042   004462  5005               	movf	??___xxtofl^0,w,c
 13043   004464  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13044   004466  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13045   004468  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13046   00446A  A4D8               	btfss	status,2,c
 13047   00446C  EF3A  F022         	goto	u5031
 13048   004470  EF3C  F022         	goto	u5030
 13049   004474                     u5031:
 13050   004474  EF1F  F022         	goto	l5158
 13051   004478                     u5030:
 13052   004478  EF4A  F022         	goto	l1333
 13053   00447C                     l5162:
 13054   00447C  2A0A               	incf	___xxtofl@exp^0,f,c
 13055   00447E  0E01               	movlw	1
 13056   004480  260B               	addwf	___xxtofl@arg^0,f,c
 13057   004482  0E00               	movlw	0
 13058   004484  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13059   004486  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13060   004488  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13061   00448A  90D8               	bcf	status,0,c
 13062   00448C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13063   00448E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13064   004490  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13065   004492  320B               	rrcf	___xxtofl@arg^0,f,c
 13066   004494                     l1333:
 13067   004494  0E00               	movlw	0
 13068   004496  140B               	andwf	___xxtofl@arg^0,w,c
 13069   004498  6E05               	movwf	??___xxtofl^0,c
 13070   00449A  0E00               	movlw	0
 13071   00449C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13072   00449E  6E06               	movwf	(??___xxtofl+1)^0,c
 13073   0044A0  0E00               	movlw	0
 13074   0044A2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13075   0044A4  6E07               	movwf	(??___xxtofl+2)^0,c
 13076   0044A6  0EFF               	movlw	255
 13077   0044A8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13078   0044AA  6E08               	movwf	(??___xxtofl+3)^0,c
 13079   0044AC  5005               	movf	??___xxtofl^0,w,c
 13080   0044AE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13081   0044B0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13082   0044B2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13083   0044B4  A4D8               	btfss	status,2,c
 13084   0044B6  EF5F  F022         	goto	u5041
 13085   0044BA  EF61  F022         	goto	u5040
 13086   0044BE                     u5041:
 13087   0044BE  EF3E  F022         	goto	l5162
 13088   0044C2                     u5040:
 13089   0044C2  EF69  F022         	goto	l5170
 13090   0044C6                     l5168:
 13091   0044C6  060A               	decf	___xxtofl@exp^0,f,c
 13092   0044C8  90D8               	bcf	status,0,c
 13093   0044CA  360B               	rlcf	___xxtofl@arg^0,f,c
 13094   0044CC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13095   0044CE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13096   0044D0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13097   0044D2                     l5170:
 13098   0044D2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13099   0044D4  EF6E  F022         	goto	u5051
 13100   0044D8  EF70  F022         	goto	u5050
 13101   0044DC                     u5051:
 13102   0044DC  EF78  F022         	goto	l1340
 13103   0044E0                     u5050:
 13104   0044E0  0E02               	movlw	2
 13105   0044E2  600A               	cpfslt	___xxtofl@exp^0,c
 13106   0044E4  EF76  F022         	goto	u5061
 13107   0044E8  EF78  F022         	goto	u5060
 13108   0044EC                     u5061:
 13109   0044EC  EF63  F022         	goto	l5168
 13110   0044F0                     u5060:
 13111   0044F0                     l1340:
 13112   0044F0  B00A               	btfsc	___xxtofl@exp^0,0,c
 13113   0044F2  EF7D  F022         	goto	u5071
 13114   0044F6  EF7F  F022         	goto	u5070
 13115   0044FA                     u5071:
 13116   0044FA  EF80  F022         	goto	l5176
 13117   0044FE                     u5070:
 13118   0044FE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13119   004500                     l5176:
 13120   004500  90D8               	bcf	status,0,c
 13121   004502  320A               	rrcf	___xxtofl@exp^0,f,c
 13122   004504  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13123   004508  6A06               	clrf	(??___xxtofl+1)^0,c
 13124   00450A  6A07               	clrf	(??___xxtofl+2)^0,c
 13125   00450C  6A08               	clrf	(??___xxtofl+3)^0,c
 13126   00450E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13127   004512  6A07               	clrf	(??___xxtofl+2)^0,c
 13128   004514  6A06               	clrf	(??___xxtofl+1)^0,c
 13129   004516  6A05               	clrf	??___xxtofl^0,c
 13130   004518  5005               	movf	??___xxtofl^0,w,c
 13131   00451A  120B               	iorwf	___xxtofl@arg^0,f,c
 13132   00451C  5006               	movf	(??___xxtofl+1)^0,w,c
 13133   00451E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13134   004520  5007               	movf	(??___xxtofl+2)^0,w,c
 13135   004522  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13136   004524  5008               	movf	(??___xxtofl+3)^0,w,c
 13137   004526  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13138   004528  5009               	movf	___xxtofl@sign^0,w,c
 13139   00452A  B4D8               	btfsc	status,2,c
 13140   00452C  EF9A  F022         	goto	u5081
 13141   004530  EF9C  F022         	goto	u5080
 13142   004534                     u5081:
 13143   004534  EFA4  F022         	goto	l5186
 13144   004538                     u5080:
 13145   004538  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13146   00453A  EFA3  F022         	goto	u5090
 13147   00453E  EFA1  F022         	goto	u5091
 13148   004542                     u5091:
 13149   004542  EFA4  F022         	goto	l5186
 13150   004546                     u5090:
 13151   004546  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13152   004548                     l5186:
 13153   004548  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13154   00454C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13155   004550  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13156   004554  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13157   004558                     l1329:
 13158   004558  0012               	return		;funcret
 13159   00455A                     __end_of___xxtofl:
 13160                           	callstack 0
 13161                           
 13162 ;; *************** function ___flsub *****************
 13163 ;; Defined at:
 13164 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  b               4   41[COMRAM] unsigned char 
 13167 ;;  a               4   45[COMRAM] unsigned char 
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;		None
 13170 ;; Return value:  Size  Location     Type
 13171 ;;                  4   41[COMRAM] unsigned char 
 13172 ;; Registers used:
 13173 ;;		wreg, status,2, status,0, cstack
 13174 ;; Tracked objects:
 13175 ;;		On entry : 0/0
 13176 ;;		On exit  : 0/0
 13177 ;;		Unchanged: 0/0
 13178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13179 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13182 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13183 ;;Total ram usage:        8 bytes
 13184 ;; Hardware stack levels used: 1
 13185 ;; Hardware stack levels required when called: 2
 13186 ;; This function calls:
 13187 ;;		___fladd
 13188 ;; This function is called by:
 13189 ;;		_Colour_decider
 13190 ;;		_efgtoa
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           	psect	text73
 13195   005C68                     __ptext73:
 13196                           	callstack 0
 13197   005C68                     ___flsub:
 13198                           	callstack 24
 13199   005C68  0E00               	movlw	0
 13200   005C6A  1A2E               	xorwf	___flsub@a^0,f,c
 13201   005C6C  0E00               	movlw	0
 13202   005C6E  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13203   005C70  0E00               	movlw	0
 13204   005C72  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13205   005C74  0E80               	movlw	128
 13206   005C76  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13207   005C78  C02A  F001         	movff	___flsub@b,___fladd@b
 13208   005C7C  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13209   005C80  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13210   005C84  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13211   005C88  C02E  F005         	movff	___flsub@a,___fladd@a
 13212   005C8C  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13213   005C90  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13214   005C94  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13215   005C98  ECCF  F013         	call	___fladd	;wreg free
 13216   005C9C  C001  F02A         	movff	?___fladd,?___flsub
 13217   005CA0  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13218   005CA4  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13219   005CA8  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13220   005CAC  0012               	return		;funcret
 13221   005CAE                     __end_of___flsub:
 13222                           	callstack 0
 13223                           
 13224 ;; *************** function ___fladd *****************
 13225 ;; Defined at:
 13226 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13227 ;; Parameters:    Size  Location     Type
 13228 ;;  b               4    0[COMRAM] unsigned char 
 13229 ;;  a               4    4[COMRAM] unsigned char 
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;  grs             1   15[COMRAM] unsigned char 
 13232 ;;  bexp            1   14[COMRAM] unsigned char 
 13233 ;;  aexp            1   13[COMRAM] unsigned char 
 13234 ;;  signs           1   12[COMRAM] unsigned char 
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  4    0[COMRAM] unsigned char 
 13237 ;; Registers used:
 13238 ;;		wreg, status,2, status,0
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13245 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13247 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13248 ;;Total ram usage:       16 bytes
 13249 ;; Hardware stack levels used: 1
 13250 ;; Hardware stack levels required when called: 1
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_colour_rel
 13255 ;;		_Colour_decider
 13256 ;;		___flsub
 13257 ;;		_efgtoa
 13258 ;; This function uses a non-reentrant model
 13259 ;;
 13260                           
 13261                           	psect	text74
 13262   00279E                     __ptext74:
 13263                           	callstack 0
 13264   00279E                     ___fladd:
 13265                           	callstack 24
 13266   00279E  5004               	movf	(___fladd@b+3)^0,w,c
 13267   0027A0  0B80               	andlw	128
 13268   0027A2  6E0D               	movwf	___fladd@signs^0,c
 13269   0027A4  5004               	movf	(___fladd@b+3)^0,w,c
 13270   0027A6  2404               	addwf	(___fladd@b+3)^0,w,c
 13271   0027A8  6E0F               	movwf	___fladd@bexp^0,c
 13272   0027AA  AE03               	btfss	(___fladd@b+2)^0,7,c
 13273   0027AC  EFDA  F013         	goto	u2961
 13274   0027B0  EFDC  F013         	goto	u2960
 13275   0027B4                     u2961:
 13276   0027B4  EFDD  F013         	goto	l3792
 13277   0027B8                     u2960:
 13278   0027B8  800F               	bsf	___fladd@bexp^0,0,c
 13279   0027BA                     l3792:
 13280   0027BA  500F               	movf	___fladd@bexp^0,w,c
 13281   0027BC  B4D8               	btfsc	status,2,c
 13282   0027BE  EFE3  F013         	goto	u2971
 13283   0027C2  EFE5  F013         	goto	u2970
 13284   0027C6                     u2971:
 13285   0027C6  EFFA  F013         	goto	l3802
 13286   0027CA                     u2970:
 13287   0027CA  280F               	incf	___fladd@bexp^0,w,c
 13288   0027CC  A4D8               	btfss	status,2,c
 13289   0027CE  EFEB  F013         	goto	u2981
 13290   0027D2  EFED  F013         	goto	u2980
 13291   0027D6                     u2981:
 13292   0027D6  EFF5  F013         	goto	l3798
 13293   0027DA                     u2980:
 13294   0027DA  0E00               	movlw	0
 13295   0027DC  6E01               	movwf	___fladd@b^0,c
 13296   0027DE  0E00               	movlw	0
 13297   0027E0  6E02               	movwf	(___fladd@b+1)^0,c
 13298   0027E2  0E00               	movlw	0
 13299   0027E4  6E03               	movwf	(___fladd@b+2)^0,c
 13300   0027E6  0E00               	movlw	0
 13301   0027E8  6E04               	movwf	(___fladd@b+3)^0,c
 13302   0027EA                     l3798:
 13303   0027EA  8E03               	bsf	(___fladd@b+2)^0,7,c
 13304   0027EC  0E00               	movlw	0
 13305   0027EE  6E04               	movwf	(___fladd@b+3)^0,c
 13306   0027F0  EF02  F014         	goto	l3804
 13307   0027F4                     l3802:
 13308   0027F4  0E00               	movlw	0
 13309   0027F6  6E01               	movwf	___fladd@b^0,c
 13310   0027F8  0E00               	movlw	0
 13311   0027FA  6E02               	movwf	(___fladd@b+1)^0,c
 13312   0027FC  0E00               	movlw	0
 13313   0027FE  6E03               	movwf	(___fladd@b+2)^0,c
 13314   002800  0E00               	movlw	0
 13315   002802  6E04               	movwf	(___fladd@b+3)^0,c
 13316   002804                     l3804:
 13317   002804  5008               	movf	(___fladd@a+3)^0,w,c
 13318   002806  0B80               	andlw	128
 13319   002808  6E0E               	movwf	___fladd@aexp^0,c
 13320   00280A  500D               	movf	___fladd@signs^0,w,c
 13321   00280C  180E               	xorwf	___fladd@aexp^0,w,c
 13322   00280E  B4D8               	btfsc	status,2,c
 13323   002810  EF0C  F014         	goto	u2991
 13324   002814  EF0E  F014         	goto	u2990
 13325   002818                     u2991:
 13326   002818  EF0F  F014         	goto	l3810
 13327   00281C                     u2990:
 13328   00281C  8C0D               	bsf	___fladd@signs^0,6,c
 13329   00281E                     l3810:
 13330   00281E  5008               	movf	(___fladd@a+3)^0,w,c
 13331   002820  2408               	addwf	(___fladd@a+3)^0,w,c
 13332   002822  6E0E               	movwf	___fladd@aexp^0,c
 13333   002824  AE07               	btfss	(___fladd@a+2)^0,7,c
 13334   002826  EF17  F014         	goto	u3001
 13335   00282A  EF19  F014         	goto	u3000
 13336   00282E                     u3001:
 13337   00282E  EF1A  F014         	goto	l3816
 13338   002832                     u3000:
 13339   002832  800E               	bsf	___fladd@aexp^0,0,c
 13340   002834                     l3816:
 13341   002834  500E               	movf	___fladd@aexp^0,w,c
 13342   002836  B4D8               	btfsc	status,2,c
 13343   002838  EF20  F014         	goto	u3011
 13344   00283C  EF22  F014         	goto	u3010
 13345   002840                     u3011:
 13346   002840  EF37  F014         	goto	l3826
 13347   002844                     u3010:
 13348   002844  280E               	incf	___fladd@aexp^0,w,c
 13349   002846  A4D8               	btfss	status,2,c
 13350   002848  EF28  F014         	goto	u3021
 13351   00284C  EF2A  F014         	goto	u3020
 13352   002850                     u3021:
 13353   002850  EF32  F014         	goto	l3822
 13354   002854                     u3020:
 13355   002854  0E00               	movlw	0
 13356   002856  6E05               	movwf	___fladd@a^0,c
 13357   002858  0E00               	movlw	0
 13358   00285A  6E06               	movwf	(___fladd@a+1)^0,c
 13359   00285C  0E00               	movlw	0
 13360   00285E  6E07               	movwf	(___fladd@a+2)^0,c
 13361   002860  0E00               	movlw	0
 13362   002862  6E08               	movwf	(___fladd@a+3)^0,c
 13363   002864                     l3822:
 13364   002864  8E07               	bsf	(___fladd@a+2)^0,7,c
 13365   002866  0E00               	movlw	0
 13366   002868  6E08               	movwf	(___fladd@a+3)^0,c
 13367   00286A  EF3F  F014         	goto	l3828
 13368   00286E                     l3826:
 13369   00286E  0E00               	movlw	0
 13370   002870  6E05               	movwf	___fladd@a^0,c
 13371   002872  0E00               	movlw	0
 13372   002874  6E06               	movwf	(___fladd@a+1)^0,c
 13373   002876  0E00               	movlw	0
 13374   002878  6E07               	movwf	(___fladd@a+2)^0,c
 13375   00287A  0E00               	movlw	0
 13376   00287C  6E08               	movwf	(___fladd@a+3)^0,c
 13377   00287E                     l3828:
 13378   00287E  500F               	movf	___fladd@bexp^0,w,c
 13379   002880  5C0E               	subwf	___fladd@aexp^0,w,c
 13380   002882  B0D8               	btfsc	status,0,c
 13381   002884  EF46  F014         	goto	u3031
 13382   002888  EF48  F014         	goto	u3030
 13383   00288C                     u3031:
 13384   00288C  EF6F  F014         	goto	l3864
 13385   002890                     u3030:
 13386   002890  AC0D               	btfss	___fladd@signs^0,6,c
 13387   002892  EF4D  F014         	goto	u3041
 13388   002896  EF4F  F014         	goto	u3040
 13389   00289A                     u3041:
 13390   00289A  EF51  F014         	goto	l3834
 13391   00289E                     u3040:
 13392   00289E  0E80               	movlw	128
 13393   0028A0  1A0D               	xorwf	___fladd@signs^0,f,c
 13394   0028A2                     l3834:
 13395   0028A2  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13396   0028A6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13397   0028AA  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13398   0028AE  C001  F010         	movff	___fladd@b,___fladd@grs
 13399   0028B2  C005  F001         	movff	___fladd@a,___fladd@b
 13400   0028B6  C010  F005         	movff	___fladd@grs,___fladd@a
 13401   0028BA  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13402   0028BE  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13403   0028C2  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13404   0028C6  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13405   0028CA  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13406   0028CE  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13407   0028D2  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13408   0028D6  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13409   0028DA  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13410   0028DE                     l3864:
 13411   0028DE  0E00               	movlw	0
 13412   0028E0  6E10               	movwf	___fladd@grs^0,c
 13413   0028E2  500F               	movf	___fladd@bexp^0,w,c
 13414   0028E4  C00E  F009         	movff	___fladd@aexp,??___fladd
 13415   0028E8  6A0A               	clrf	(??___fladd+1)^0,c
 13416   0028EA  5E09               	subwf	??___fladd^0,f,c
 13417   0028EC  0E00               	movlw	0
 13418   0028EE  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13419   0028F0  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13420   0028F2  EF84  F014         	goto	u3051
 13421   0028F6  500A               	movf	(??___fladd+1)^0,w,c
 13422   0028F8  E109               	bnz	u3050
 13423   0028FA  0E1A               	movlw	26
 13424   0028FC  5C09               	subwf	??___fladd^0,w,c
 13425   0028FE  A0D8               	btfss	status,0,c
 13426   002900  EF84  F014         	goto	u3051
 13427   002904  EF86  F014         	goto	u3050
 13428   002908                     u3051:
 13429   002908  EFBD  F014         	goto	l1200
 13430   00290C                     u3050:
 13431   00290C  5001               	movf	___fladd@b^0,w,c
 13432   00290E  1002               	iorwf	(___fladd@b+1)^0,w,c
 13433   002910  1003               	iorwf	(___fladd@b+2)^0,w,c
 13434   002912  1004               	iorwf	(___fladd@b+3)^0,w,c
 13435   002914  A4D8               	btfss	status,2,c
 13436   002916  EF8F  F014         	goto	u3061
 13437   00291A  EF92  F014         	goto	u3060
 13438   00291E                     u3061:
 13439   00291E  0E01               	movlw	1
 13440   002920  EF93  F014         	goto	u3070
 13441   002924                     u3060:
 13442   002924  0E00               	movlw	0
 13443   002926                     u3070:
 13444   002926  6E10               	movwf	___fladd@grs^0,c
 13445   002928  0E00               	movlw	0
 13446   00292A  6E01               	movwf	___fladd@b^0,c
 13447   00292C  0E00               	movlw	0
 13448   00292E  6E02               	movwf	(___fladd@b+1)^0,c
 13449   002930  0E00               	movlw	0
 13450   002932  6E03               	movwf	(___fladd@b+2)^0,c
 13451   002934  0E00               	movlw	0
 13452   002936  6E04               	movwf	(___fladd@b+3)^0,c
 13453   002938  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13454   00293C  EFC6  F014         	goto	l1199
 13455   002940                     l1201:
 13456   002940  A010               	btfss	___fladd@grs^0,0,c
 13457   002942  EFA5  F014         	goto	u3081
 13458   002946  EFA7  F014         	goto	u3080
 13459   00294A                     u3081:
 13460   00294A  EFAD  F014         	goto	l3876
 13461   00294E                     u3080:
 13462   00294E  90D8               	bcf	status,0,c
 13463   002950  3010               	rrcf	___fladd@grs^0,w,c
 13464   002952  0901               	iorlw	1
 13465   002954  6E10               	movwf	___fladd@grs^0,c
 13466   002956  EFAF  F014         	goto	l3878
 13467   00295A                     l3876:
 13468   00295A  90D8               	bcf	status,0,c
 13469   00295C  3210               	rrcf	___fladd@grs^0,f,c
 13470   00295E                     l3878:
 13471   00295E  A001               	btfss	___fladd@b^0,0,c
 13472   002960  EFB4  F014         	goto	u3091
 13473   002964  EFB6  F014         	goto	u3090
 13474   002968                     u3091:
 13475   002968  EFB7  F014         	goto	l3882
 13476   00296C                     u3090:
 13477   00296C  8E10               	bsf	___fladd@grs^0,7,c
 13478   00296E                     l3882:
 13479   00296E  3404               	rlcf	(___fladd@b+3)^0,w,c
 13480   002970  3204               	rrcf	(___fladd@b+3)^0,f,c
 13481   002972  3203               	rrcf	(___fladd@b+2)^0,f,c
 13482   002974  3202               	rrcf	(___fladd@b+1)^0,f,c
 13483   002976  3201               	rrcf	___fladd@b^0,f,c
 13484   002978  2A0F               	incf	___fladd@bexp^0,f,c
 13485   00297A                     l1200:
 13486   00297A  500E               	movf	___fladd@aexp^0,w,c
 13487   00297C  5C0F               	subwf	___fladd@bexp^0,w,c
 13488   00297E  A0D8               	btfss	status,0,c
 13489   002980  EFC4  F014         	goto	u3101
 13490   002984  EFC6  F014         	goto	u3100
 13491   002988                     u3101:
 13492   002988  EFA0  F014         	goto	l1201
 13493   00298C                     u3100:
 13494   00298C                     l1199:
 13495   00298C  BC0D               	btfsc	___fladd@signs^0,6,c
 13496   00298E  EFCB  F014         	goto	u3111
 13497   002992  EFCD  F014         	goto	u3110
 13498   002996                     u3111:
 13499   002996  EF0D  F015         	goto	l3910
 13500   00299A                     u3110:
 13501   00299A  500F               	movf	___fladd@bexp^0,w,c
 13502   00299C  A4D8               	btfss	status,2,c
 13503   00299E  EFD3  F014         	goto	u3121
 13504   0029A2  EFD5  F014         	goto	u3120
 13505   0029A6                     u3121:
 13506   0029A6  EFDF  F014         	goto	l3892
 13507   0029AA                     u3120:
 13508   0029AA  0E00               	movlw	0
 13509   0029AC  6E01               	movwf	?___fladd^0,c
 13510   0029AE  0E00               	movlw	0
 13511   0029B0  6E02               	movwf	(?___fladd+1)^0,c
 13512   0029B2  0E00               	movlw	0
 13513   0029B4  6E03               	movwf	(?___fladd+2)^0,c
 13514   0029B6  0E00               	movlw	0
 13515   0029B8  6E04               	movwf	(?___fladd+3)^0,c
 13516   0029BA  EF2E  F016         	goto	l1208
 13517   0029BE                     l3892:
 13518   0029BE  5005               	movf	___fladd@a^0,w,c
 13519   0029C0  2601               	addwf	___fladd@b^0,f,c
 13520   0029C2  5006               	movf	(___fladd@a+1)^0,w,c
 13521   0029C4  2202               	addwfc	(___fladd@b+1)^0,f,c
 13522   0029C6  5007               	movf	(___fladd@a+2)^0,w,c
 13523   0029C8  2203               	addwfc	(___fladd@b+2)^0,f,c
 13524   0029CA  5008               	movf	(___fladd@a+3)^0,w,c
 13525   0029CC  2204               	addwfc	(___fladd@b+3)^0,f,c
 13526   0029CE  A004               	btfss	(___fladd@b+3)^0,0,c
 13527   0029D0  EFEC  F014         	goto	u3131
 13528   0029D4  EFEE  F014         	goto	u3130
 13529   0029D8                     u3131:
 13530   0029D8  EF9A  F015         	goto	l3946
 13531   0029DC                     u3130:
 13532   0029DC  A010               	btfss	___fladd@grs^0,0,c
 13533   0029DE  EFF3  F014         	goto	u3141
 13534   0029E2  EFF5  F014         	goto	u3140
 13535   0029E6                     u3141:
 13536   0029E6  EFFB  F014         	goto	l3900
 13537   0029EA                     u3140:
 13538   0029EA  90D8               	bcf	status,0,c
 13539   0029EC  3010               	rrcf	___fladd@grs^0,w,c
 13540   0029EE  0901               	iorlw	1
 13541   0029F0  6E10               	movwf	___fladd@grs^0,c
 13542   0029F2  EFFD  F014         	goto	l3902
 13543   0029F6                     l3900:
 13544   0029F6  90D8               	bcf	status,0,c
 13545   0029F8  3210               	rrcf	___fladd@grs^0,f,c
 13546   0029FA                     l3902:
 13547   0029FA  A001               	btfss	___fladd@b^0,0,c
 13548   0029FC  EF02  F015         	goto	u3151
 13549   002A00  EF04  F015         	goto	u3150
 13550   002A04                     u3151:
 13551   002A04  EF05  F015         	goto	l3906
 13552   002A08                     u3150:
 13553   002A08  8E10               	bsf	___fladd@grs^0,7,c
 13554   002A0A                     l3906:
 13555   002A0A  3404               	rlcf	(___fladd@b+3)^0,w,c
 13556   002A0C  3204               	rrcf	(___fladd@b+3)^0,f,c
 13557   002A0E  3203               	rrcf	(___fladd@b+2)^0,f,c
 13558   002A10  3202               	rrcf	(___fladd@b+1)^0,f,c
 13559   002A12  3201               	rrcf	___fladd@b^0,f,c
 13560   002A14  2A0F               	incf	___fladd@bexp^0,f,c
 13561   002A16  EF9A  F015         	goto	l3946
 13562   002A1A                     l3910:
 13563   002A1A  5005               	movf	___fladd@a^0,w,c
 13564   002A1C  5C01               	subwf	___fladd@b^0,w,c
 13565   002A1E  5006               	movf	(___fladd@a+1)^0,w,c
 13566   002A20  5802               	subwfb	(___fladd@b+1)^0,w,c
 13567   002A22  5007               	movf	(___fladd@a+2)^0,w,c
 13568   002A24  5803               	subwfb	(___fladd@b+2)^0,w,c
 13569   002A26  5004               	movf	(___fladd@b+3)^0,w,c
 13570   002A28  0A80               	xorlw	128
 13571   002A2A  6E09               	movwf	??___fladd^0,c
 13572   002A2C  5008               	movf	(___fladd@a+3)^0,w,c
 13573   002A2E  0A80               	xorlw	128
 13574   002A30  5809               	subwfb	??___fladd^0,w,c
 13575   002A32  B0D8               	btfsc	status,0,c
 13576   002A34  EF1E  F015         	goto	u3161
 13577   002A38  EF20  F015         	goto	u3160
 13578   002A3C                     u3161:
 13579   002A3C  EF4B  F015         	goto	l3920
 13580   002A40                     u3160:
 13581   002A40  5001               	movf	___fladd@b^0,w,c
 13582   002A42  5C05               	subwf	___fladd@a^0,w,c
 13583   002A44  6E09               	movwf	??___fladd^0,c
 13584   002A46  5002               	movf	(___fladd@b+1)^0,w,c
 13585   002A48  5806               	subwfb	(___fladd@a+1)^0,w,c
 13586   002A4A  6E0A               	movwf	(??___fladd+1)^0,c
 13587   002A4C  5003               	movf	(___fladd@b+2)^0,w,c
 13588   002A4E  5807               	subwfb	(___fladd@a+2)^0,w,c
 13589   002A50  6E0B               	movwf	(??___fladd+2)^0,c
 13590   002A52  5004               	movf	(___fladd@b+3)^0,w,c
 13591   002A54  5808               	subwfb	(___fladd@a+3)^0,w,c
 13592   002A56  6E0C               	movwf	(??___fladd+3)^0,c
 13593   002A58  0EFF               	movlw	255
 13594   002A5A  2409               	addwf	??___fladd^0,w,c
 13595   002A5C  6E01               	movwf	___fladd@b^0,c
 13596   002A5E  0EFF               	movlw	255
 13597   002A60  200A               	addwfc	(??___fladd+1)^0,w,c
 13598   002A62  6E02               	movwf	(___fladd@b+1)^0,c
 13599   002A64  0EFF               	movlw	255
 13600   002A66  200B               	addwfc	(??___fladd+2)^0,w,c
 13601   002A68  6E03               	movwf	(___fladd@b+2)^0,c
 13602   002A6A  0EFF               	movlw	255
 13603   002A6C  200C               	addwfc	(??___fladd+3)^0,w,c
 13604   002A6E  6E04               	movwf	(___fladd@b+3)^0,c
 13605   002A70  0E80               	movlw	128
 13606   002A72  1A0D               	xorwf	___fladd@signs^0,f,c
 13607   002A74  6C10               	negf	___fladd@grs^0,c
 13608   002A76  5010               	movf	___fladd@grs^0,w,c
 13609   002A78  A4D8               	btfss	status,2,c
 13610   002A7A  EF41  F015         	goto	u3171
 13611   002A7E  EF43  F015         	goto	u3170
 13612   002A82                     u3171:
 13613   002A82  EF53  F015         	goto	l1216
 13614   002A86                     u3170:
 13615   002A86  0E01               	movlw	1
 13616   002A88  2601               	addwf	___fladd@b^0,f,c
 13617   002A8A  0E00               	movlw	0
 13618   002A8C  2202               	addwfc	(___fladd@b+1)^0,f,c
 13619   002A8E  2203               	addwfc	(___fladd@b+2)^0,f,c
 13620   002A90  2204               	addwfc	(___fladd@b+3)^0,f,c
 13621   002A92  EF53  F015         	goto	l1216
 13622   002A96                     l3920:
 13623   002A96  5005               	movf	___fladd@a^0,w,c
 13624   002A98  5E01               	subwf	___fladd@b^0,f,c
 13625   002A9A  5006               	movf	(___fladd@a+1)^0,w,c
 13626   002A9C  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13627   002A9E  5007               	movf	(___fladd@a+2)^0,w,c
 13628   002AA0  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13629   002AA2  5008               	movf	(___fladd@a+3)^0,w,c
 13630   002AA4  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13631   002AA6                     l1216:
 13632   002AA6  5001               	movf	___fladd@b^0,w,c
 13633   002AA8  1002               	iorwf	(___fladd@b+1)^0,w,c
 13634   002AAA  1003               	iorwf	(___fladd@b+2)^0,w,c
 13635   002AAC  1004               	iorwf	(___fladd@b+3)^0,w,c
 13636   002AAE  A4D8               	btfss	status,2,c
 13637   002AB0  EF5C  F015         	goto	u3181
 13638   002AB4  EF5E  F015         	goto	u3180
 13639   002AB8                     u3181:
 13640   002AB8  EF93  F015         	goto	l3944
 13641   002ABC                     u3180:
 13642   002ABC  5010               	movf	___fladd@grs^0,w,c
 13643   002ABE  A4D8               	btfss	status,2,c
 13644   002AC0  EF64  F015         	goto	u3191
 13645   002AC4  EF66  F015         	goto	u3190
 13646   002AC8                     u3191:
 13647   002AC8  EF93  F015         	goto	l3944
 13648   002ACC                     u3190:
 13649   002ACC  0E00               	movlw	0
 13650   002ACE  6E01               	movwf	?___fladd^0,c
 13651   002AD0  0E00               	movlw	0
 13652   002AD2  6E02               	movwf	(?___fladd+1)^0,c
 13653   002AD4  0E00               	movlw	0
 13654   002AD6  6E03               	movwf	(?___fladd+2)^0,c
 13655   002AD8  0E00               	movlw	0
 13656   002ADA  6E04               	movwf	(?___fladd+3)^0,c
 13657   002ADC  EF2E  F016         	goto	l1208
 13658   002AE0                     l3928:
 13659   002AE0  90D8               	bcf	status,0,c
 13660   002AE2  3601               	rlcf	___fladd@b^0,f,c
 13661   002AE4  3602               	rlcf	(___fladd@b+1)^0,f,c
 13662   002AE6  3603               	rlcf	(___fladd@b+2)^0,f,c
 13663   002AE8  3604               	rlcf	(___fladd@b+3)^0,f,c
 13664   002AEA  AE10               	btfss	___fladd@grs^0,7,c
 13665   002AEC  EF7A  F015         	goto	u3201
 13666   002AF0  EF7C  F015         	goto	u3200
 13667   002AF4                     u3201:
 13668   002AF4  EF7D  F015         	goto	l3934
 13669   002AF8                     u3200:
 13670   002AF8  8001               	bsf	___fladd@b^0,0,c
 13671   002AFA                     l3934:
 13672   002AFA  A010               	btfss	___fladd@grs^0,0,c
 13673   002AFC  EF82  F015         	goto	u3211
 13674   002B00  EF84  F015         	goto	u3210
 13675   002B04                     u3211:
 13676   002B04  EF88  F015         	goto	l3938
 13677   002B08                     u3210:
 13678   002B08  80D8               	bsf	status,0,c
 13679   002B0A  3610               	rlcf	___fladd@grs^0,f,c
 13680   002B0C  EF8A  F015         	goto	l3940
 13681   002B10                     l3938:
 13682   002B10  90D8               	bcf	status,0,c
 13683   002B12  3610               	rlcf	___fladd@grs^0,f,c
 13684   002B14                     l3940:
 13685   002B14  500F               	movf	___fladd@bexp^0,w,c
 13686   002B16  B4D8               	btfsc	status,2,c
 13687   002B18  EF90  F015         	goto	u3221
 13688   002B1C  EF92  F015         	goto	u3220
 13689   002B20                     u3221:
 13690   002B20  EF93  F015         	goto	l3944
 13691   002B24                     u3220:
 13692   002B24  060F               	decf	___fladd@bexp^0,f,c
 13693   002B26                     l3944:
 13694   002B26  AE03               	btfss	(___fladd@b+2)^0,7,c
 13695   002B28  EF98  F015         	goto	u3231
 13696   002B2C  EF9A  F015         	goto	u3230
 13697   002B30                     u3231:
 13698   002B30  EF70  F015         	goto	l3928
 13699   002B34                     u3230:
 13700   002B34                     l3946:
 13701   002B34  0E00               	movlw	0
 13702   002B36  6E0E               	movwf	___fladd@aexp^0,c
 13703   002B38  AE10               	btfss	___fladd@grs^0,7,c
 13704   002B3A  EFA1  F015         	goto	u3241
 13705   002B3E  EFA3  F015         	goto	u3240
 13706   002B42                     u3241:
 13707   002B42  EFBB  F015         	goto	l1225
 13708   002B46                     u3240:
 13709   002B46  C010  F009         	movff	___fladd@grs,??___fladd
 13710   002B4A  0E7F               	movlw	127
 13711   002B4C  1609               	andwf	??___fladd^0,f,c
 13712   002B4E  B4D8               	btfsc	status,2,c
 13713   002B50  EFAC  F015         	goto	u3251
 13714   002B54  EFAE  F015         	goto	u3250
 13715   002B58                     u3251:
 13716   002B58  EFB2  F015         	goto	l1226
 13717   002B5C                     u3250:
 13718   002B5C                     l3952:
 13719   002B5C  0E01               	movlw	1
 13720   002B5E  6E0E               	movwf	___fladd@aexp^0,c
 13721   002B60  EFBB  F015         	goto	l1225
 13722   002B64                     l1226:
 13723   002B64  A001               	btfss	___fladd@b^0,0,c
 13724   002B66  EFB7  F015         	goto	u3261
 13725   002B6A  EFB9  F015         	goto	u3260
 13726   002B6E                     u3261:
 13727   002B6E  EFBB  F015         	goto	l1225
 13728   002B72                     u3260:
 13729   002B72  EFAE  F015         	goto	l3952
 13730   002B76                     l1225:
 13731   002B76  500E               	movf	___fladd@aexp^0,w,c
 13732   002B78  B4D8               	btfsc	status,2,c
 13733   002B7A  EFC1  F015         	goto	u3271
 13734   002B7E  EFC3  F015         	goto	u3270
 13735   002B82                     u3271:
 13736   002B82  EFEE  F015         	goto	l3964
 13737   002B86                     u3270:
 13738   002B86  0E01               	movlw	1
 13739   002B88  2601               	addwf	___fladd@b^0,f,c
 13740   002B8A  0E00               	movlw	0
 13741   002B8C  2202               	addwfc	(___fladd@b+1)^0,f,c
 13742   002B8E  2203               	addwfc	(___fladd@b+2)^0,f,c
 13743   002B90  2204               	addwfc	(___fladd@b+3)^0,f,c
 13744   002B92  A004               	btfss	(___fladd@b+3)^0,0,c
 13745   002B94  EFCE  F015         	goto	u3281
 13746   002B98  EFD0  F015         	goto	u3280
 13747   002B9C                     u3281:
 13748   002B9C  EFEE  F015         	goto	l3964
 13749   002BA0                     u3280:
 13750   002BA0  C001  F009         	movff	___fladd@b,??___fladd
 13751   002BA4  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13752   002BA8  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13753   002BAC  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13754   002BB0  340C               	rlcf	(??___fladd+3)^0,w,c
 13755   002BB2  320C               	rrcf	(??___fladd+3)^0,f,c
 13756   002BB4  320B               	rrcf	(??___fladd+2)^0,f,c
 13757   002BB6  320A               	rrcf	(??___fladd+1)^0,f,c
 13758   002BB8  3209               	rrcf	??___fladd^0,f,c
 13759   002BBA  C009  F001         	movff	??___fladd,___fladd@b
 13760   002BBE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13761   002BC2  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13762   002BC6  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13763   002BCA  280F               	incf	___fladd@bexp^0,w,c
 13764   002BCC  B4D8               	btfsc	status,2,c
 13765   002BCE  EFEB  F015         	goto	u3291
 13766   002BD2  EFED  F015         	goto	u3290
 13767   002BD6                     u3291:
 13768   002BD6  EFEE  F015         	goto	l3964
 13769   002BDA                     u3290:
 13770   002BDA  2A0F               	incf	___fladd@bexp^0,f,c
 13771   002BDC                     l3964:
 13772   002BDC  280F               	incf	___fladd@bexp^0,w,c
 13773   002BDE  B4D8               	btfsc	status,2,c
 13774   002BE0  EFF4  F015         	goto	u3301
 13775   002BE4  EFF6  F015         	goto	u3300
 13776   002BE8                     u3301:
 13777   002BE8  EFFE  F015         	goto	l3968
 13778   002BEC                     u3300:
 13779   002BEC  500F               	movf	___fladd@bexp^0,w,c
 13780   002BEE  A4D8               	btfss	status,2,c
 13781   002BF0  EFFC  F015         	goto	u3311
 13782   002BF4  EFFE  F015         	goto	u3310
 13783   002BF8                     u3311:
 13784   002BF8  EF10  F016         	goto	l3972
 13785   002BFC                     u3310:
 13786   002BFC                     l3968:
 13787   002BFC  0E00               	movlw	0
 13788   002BFE  6E01               	movwf	___fladd@b^0,c
 13789   002C00  0E00               	movlw	0
 13790   002C02  6E02               	movwf	(___fladd@b+1)^0,c
 13791   002C04  0E00               	movlw	0
 13792   002C06  6E03               	movwf	(___fladd@b+2)^0,c
 13793   002C08  0E00               	movlw	0
 13794   002C0A  6E04               	movwf	(___fladd@b+3)^0,c
 13795   002C0C  500F               	movf	___fladd@bexp^0,w,c
 13796   002C0E  A4D8               	btfss	status,2,c
 13797   002C10  EF0C  F016         	goto	u3321
 13798   002C14  EF0E  F016         	goto	u3320
 13799   002C18                     u3321:
 13800   002C18  EF10  F016         	goto	l3972
 13801   002C1C                     u3320:
 13802   002C1C  0E00               	movlw	0
 13803   002C1E  6E0D               	movwf	___fladd@signs^0,c
 13804   002C20                     l3972:
 13805   002C20  A00F               	btfss	___fladd@bexp^0,0,c
 13806   002C22  EF15  F016         	goto	u3331
 13807   002C26  EF17  F016         	goto	u3330
 13808   002C2A                     u3331:
 13809   002C2A  EF1A  F016         	goto	l3976
 13810   002C2E                     u3330:
 13811   002C2E  8E03               	bsf	(___fladd@b+2)^0,7,c
 13812   002C30  EF1B  F016         	goto	l3978
 13813   002C34                     l3976:
 13814   002C34  9E03               	bcf	(___fladd@b+2)^0,7,c
 13815   002C36                     l3978:
 13816   002C36  90D8               	bcf	status,0,c
 13817   002C38  300F               	rrcf	___fladd@bexp^0,w,c
 13818   002C3A  6E04               	movwf	(___fladd@b+3)^0,c
 13819   002C3C  AE0D               	btfss	___fladd@signs^0,7,c
 13820   002C3E  EF23  F016         	goto	u3341
 13821   002C42  EF25  F016         	goto	u3340
 13822   002C46                     u3341:
 13823   002C46  EF26  F016         	goto	l3984
 13824   002C4A                     u3340:
 13825   002C4A  8E04               	bsf	(___fladd@b+3)^0,7,c
 13826   002C4C                     l3984:
 13827   002C4C  C001  F001         	movff	___fladd@b,?___fladd
 13828   002C50  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13829   002C54  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13830   002C58  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13831   002C5C                     l1208:
 13832   002C5C  0012               	return		;funcret
 13833   002C5E                     __end_of___fladd:
 13834                           	callstack 0
 13835                           
 13836 ;; *************** function ___flmul *****************
 13837 ;; Defined at:
 13838 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;  b               4   16[COMRAM] unsigned char 
 13841 ;;  a               4   20[COMRAM] unsigned char 
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;  prod            4   35[COMRAM] struct .
 13844 ;;  grs             4   29[COMRAM] unsigned long 
 13845 ;;  temp            2   39[COMRAM] struct .
 13846 ;;  bexp            1   34[COMRAM] unsigned char 
 13847 ;;  aexp            1   33[COMRAM] unsigned char 
 13848 ;;  sign            1   28[COMRAM] unsigned char 
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  4   16[COMRAM] unsigned char 
 13851 ;; Registers used:
 13852 ;;		wreg, status,2, status,0, prodl, prodh
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13858 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13859 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13860 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13861 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13862 ;;Total ram usage:       25 bytes
 13863 ;; Hardware stack levels used: 1
 13864 ;; Hardware stack levels required when called: 1
 13865 ;; This function calls:
 13866 ;;		Nothing
 13867 ;; This function is called by:
 13868 ;;		_Colour_decider
 13869 ;;		_reverseOneBlock
 13870 ;;		_ForwardOneBlock
 13871 ;;		_Forwardhalfblock
 13872 ;;		_efgtoa
 13873 ;;		_Backhalfblock
 13874 ;; This function uses a non-reentrant model
 13875 ;;
 13876                           
 13877                           	psect	text75
 13878   002C5E                     __ptext75:
 13879                           	callstack 0
 13880   002C5E                     ___flmul:
 13881                           	callstack 25
 13882   002C5E  5014               	movf	(___flmul@b+3)^0,w,c
 13883   002C60  0B80               	andlw	128
 13884   002C62  6E1D               	movwf	___flmul@sign^0,c
 13885   002C64  5014               	movf	(___flmul@b+3)^0,w,c
 13886   002C66  2414               	addwf	(___flmul@b+3)^0,w,c
 13887   002C68  6E23               	movwf	___flmul@bexp^0,c
 13888   002C6A  AE13               	btfss	(___flmul@b+2)^0,7,c
 13889   002C6C  EF3A  F016         	goto	u3771
 13890   002C70  EF3C  F016         	goto	u3770
 13891   002C74                     u3771:
 13892   002C74  EF3D  F016         	goto	l4258
 13893   002C78                     u3770:
 13894   002C78  8023               	bsf	___flmul@bexp^0,0,c
 13895   002C7A                     l4258:
 13896   002C7A  5023               	movf	___flmul@bexp^0,w,c
 13897   002C7C  B4D8               	btfsc	status,2,c
 13898   002C7E  EF43  F016         	goto	u3781
 13899   002C82  EF45  F016         	goto	u3780
 13900   002C86                     u3781:
 13901   002C86  EF58  F016         	goto	l4266
 13902   002C8A                     u3780:
 13903   002C8A  2823               	incf	___flmul@bexp^0,w,c
 13904   002C8C  A4D8               	btfss	status,2,c
 13905   002C8E  EF4B  F016         	goto	u3791
 13906   002C92  EF4D  F016         	goto	u3790
 13907   002C96                     u3791:
 13908   002C96  EF55  F016         	goto	l4264
 13909   002C9A                     u3790:
 13910   002C9A  0E00               	movlw	0
 13911   002C9C  6E11               	movwf	___flmul@b^0,c
 13912   002C9E  0E00               	movlw	0
 13913   002CA0  6E12               	movwf	(___flmul@b+1)^0,c
 13914   002CA2  0E00               	movlw	0
 13915   002CA4  6E13               	movwf	(___flmul@b+2)^0,c
 13916   002CA6  0E00               	movlw	0
 13917   002CA8  6E14               	movwf	(___flmul@b+3)^0,c
 13918   002CAA                     l4264:
 13919   002CAA  8E13               	bsf	(___flmul@b+2)^0,7,c
 13920   002CAC  EF60  F016         	goto	l4268
 13921   002CB0                     l4266:
 13922   002CB0  0E00               	movlw	0
 13923   002CB2  6E11               	movwf	___flmul@b^0,c
 13924   002CB4  0E00               	movlw	0
 13925   002CB6  6E12               	movwf	(___flmul@b+1)^0,c
 13926   002CB8  0E00               	movlw	0
 13927   002CBA  6E13               	movwf	(___flmul@b+2)^0,c
 13928   002CBC  0E00               	movlw	0
 13929   002CBE  6E14               	movwf	(___flmul@b+3)^0,c
 13930   002CC0                     l4268:
 13931   002CC0  5018               	movf	(___flmul@a+3)^0,w,c
 13932   002CC2  0B80               	andlw	128
 13933   002CC4  1A1D               	xorwf	___flmul@sign^0,f,c
 13934   002CC6  5018               	movf	(___flmul@a+3)^0,w,c
 13935   002CC8  2418               	addwf	(___flmul@a+3)^0,w,c
 13936   002CCA  6E22               	movwf	___flmul@aexp^0,c
 13937   002CCC  AE17               	btfss	(___flmul@a+2)^0,7,c
 13938   002CCE  EF6B  F016         	goto	u3801
 13939   002CD2  EF6D  F016         	goto	u3800
 13940   002CD6                     u3801:
 13941   002CD6  EF6E  F016         	goto	l4276
 13942   002CDA                     u3800:
 13943   002CDA  8022               	bsf	___flmul@aexp^0,0,c
 13944   002CDC                     l4276:
 13945   002CDC  5022               	movf	___flmul@aexp^0,w,c
 13946   002CDE  B4D8               	btfsc	status,2,c
 13947   002CE0  EF74  F016         	goto	u3811
 13948   002CE4  EF76  F016         	goto	u3810
 13949   002CE8                     u3811:
 13950   002CE8  EF89  F016         	goto	l4284
 13951   002CEC                     u3810:
 13952   002CEC  2822               	incf	___flmul@aexp^0,w,c
 13953   002CEE  A4D8               	btfss	status,2,c
 13954   002CF0  EF7C  F016         	goto	u3821
 13955   002CF4  EF7E  F016         	goto	u3820
 13956   002CF8                     u3821:
 13957   002CF8  EF86  F016         	goto	l4282
 13958   002CFC                     u3820:
 13959   002CFC  0E00               	movlw	0
 13960   002CFE  6E15               	movwf	___flmul@a^0,c
 13961   002D00  0E00               	movlw	0
 13962   002D02  6E16               	movwf	(___flmul@a+1)^0,c
 13963   002D04  0E00               	movlw	0
 13964   002D06  6E17               	movwf	(___flmul@a+2)^0,c
 13965   002D08  0E00               	movlw	0
 13966   002D0A  6E18               	movwf	(___flmul@a+3)^0,c
 13967   002D0C                     l4282:
 13968   002D0C  8E17               	bsf	(___flmul@a+2)^0,7,c
 13969   002D0E  EF91  F016         	goto	l1285
 13970   002D12                     l4284:
 13971   002D12  0E00               	movlw	0
 13972   002D14  6E15               	movwf	___flmul@a^0,c
 13973   002D16  0E00               	movlw	0
 13974   002D18  6E16               	movwf	(___flmul@a+1)^0,c
 13975   002D1A  0E00               	movlw	0
 13976   002D1C  6E17               	movwf	(___flmul@a+2)^0,c
 13977   002D1E  0E00               	movlw	0
 13978   002D20  6E18               	movwf	(___flmul@a+3)^0,c
 13979   002D22                     l1285:
 13980   002D22  5022               	movf	___flmul@aexp^0,w,c
 13981   002D24  B4D8               	btfsc	status,2,c
 13982   002D26  EF97  F016         	goto	u3831
 13983   002D2A  EF99  F016         	goto	u3830
 13984   002D2E                     u3831:
 13985   002D2E  EFA1  F016         	goto	l4288
 13986   002D32                     u3830:
 13987   002D32  5023               	movf	___flmul@bexp^0,w,c
 13988   002D34  A4D8               	btfss	status,2,c
 13989   002D36  EF9F  F016         	goto	u3841
 13990   002D3A  EFA1  F016         	goto	u3840
 13991   002D3E                     u3841:
 13992   002D3E  EFAB  F016         	goto	l4292
 13993   002D42                     u3840:
 13994   002D42                     l4288:
 13995   002D42  0E00               	movlw	0
 13996   002D44  6E11               	movwf	?___flmul^0,c
 13997   002D46  0E00               	movlw	0
 13998   002D48  6E12               	movwf	(?___flmul+1)^0,c
 13999   002D4A  0E00               	movlw	0
 14000   002D4C  6E13               	movwf	(?___flmul+2)^0,c
 14001   002D4E  0E00               	movlw	0
 14002   002D50  6E14               	movwf	(?___flmul+3)^0,c
 14003   002D52  EF43  F018         	goto	l1289
 14004   002D56                     l4292:
 14005   002D56  5017               	movf	(___flmul@a+2)^0,w,c
 14006   002D58  0211               	mulwf	___flmul@b^0,c
 14007   002D5A  CFF3 F028          	movff	prodl,___flmul@temp
 14008   002D5E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14009   002D62  5028               	movf	___flmul@temp^0,w,c
 14010   002D64  6E1E               	movwf	___flmul@grs^0,c
 14011   002D66  6A1F               	clrf	(___flmul@grs+1)^0,c
 14012   002D68  6A20               	clrf	(___flmul@grs+2)^0,c
 14013   002D6A  6A21               	clrf	(___flmul@grs+3)^0,c
 14014   002D6C  5029               	movf	(___flmul@temp+1)^0,w,c
 14015   002D6E  6E24               	movwf	___flmul@prod^0,c
 14016   002D70  6A25               	clrf	(___flmul@prod+1)^0,c
 14017   002D72  6A26               	clrf	(___flmul@prod+2)^0,c
 14018   002D74  6A27               	clrf	(___flmul@prod+3)^0,c
 14019   002D76  5016               	movf	(___flmul@a+1)^0,w,c
 14020   002D78  0212               	mulwf	(___flmul@b+1)^0,c
 14021   002D7A  CFF3 F028          	movff	prodl,___flmul@temp
 14022   002D7E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14023   002D82  5028               	movf	___flmul@temp^0,w,c
 14024   002D84  261E               	addwf	___flmul@grs^0,f,c
 14025   002D86  0E00               	movlw	0
 14026   002D88  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14027   002D8A  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14028   002D8C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14029   002D8E  5029               	movf	(___flmul@temp+1)^0,w,c
 14030   002D90  2624               	addwf	___flmul@prod^0,f,c
 14031   002D92  0E00               	movlw	0
 14032   002D94  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14033   002D96  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14034   002D98  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14035   002D9A  5015               	movf	___flmul@a^0,w,c
 14036   002D9C  0213               	mulwf	(___flmul@b+2)^0,c
 14037   002D9E  CFF3 F028          	movff	prodl,___flmul@temp
 14038   002DA2  CFF4 F029          	movff	prodh,___flmul@temp+1
 14039   002DA6  5028               	movf	___flmul@temp^0,w,c
 14040   002DA8  261E               	addwf	___flmul@grs^0,f,c
 14041   002DAA  0E00               	movlw	0
 14042   002DAC  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14043   002DAE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14044   002DB0  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14045   002DB2  5029               	movf	(___flmul@temp+1)^0,w,c
 14046   002DB4  2624               	addwf	___flmul@prod^0,f,c
 14047   002DB6  0E00               	movlw	0
 14048   002DB8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14049   002DBA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14050   002DBC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14051   002DBE  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14052   002DC2  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14053   002DC6  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14054   002DCA  6A1E               	clrf	___flmul@grs^0,c
 14055   002DCC  5015               	movf	___flmul@a^0,w,c
 14056   002DCE  0212               	mulwf	(___flmul@b+1)^0,c
 14057   002DD0  CFF3 F028          	movff	prodl,___flmul@temp
 14058   002DD4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14059   002DD8  5028               	movf	___flmul@temp^0,w,c
 14060   002DDA  261E               	addwf	___flmul@grs^0,f,c
 14061   002DDC  5029               	movf	(___flmul@temp+1)^0,w,c
 14062   002DDE  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14063   002DE0  0E00               	movlw	0
 14064   002DE2  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14065   002DE4  0E00               	movlw	0
 14066   002DE6  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14067   002DE8  5016               	movf	(___flmul@a+1)^0,w,c
 14068   002DEA  0211               	mulwf	___flmul@b^0,c
 14069   002DEC  CFF3 F028          	movff	prodl,___flmul@temp
 14070   002DF0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14071   002DF4  5028               	movf	___flmul@temp^0,w,c
 14072   002DF6  261E               	addwf	___flmul@grs^0,f,c
 14073   002DF8  5029               	movf	(___flmul@temp+1)^0,w,c
 14074   002DFA  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14075   002DFC  0E00               	movlw	0
 14076   002DFE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14077   002E00  0E00               	movlw	0
 14078   002E02  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14079   002E04  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14080   002E08  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14081   002E0C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14082   002E10  6A1E               	clrf	___flmul@grs^0,c
 14083   002E12  5015               	movf	___flmul@a^0,w,c
 14084   002E14  0211               	mulwf	___flmul@b^0,c
 14085   002E16  CFF3 F028          	movff	prodl,___flmul@temp
 14086   002E1A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14087   002E1E  5028               	movf	___flmul@temp^0,w,c
 14088   002E20  261E               	addwf	___flmul@grs^0,f,c
 14089   002E22  5029               	movf	(___flmul@temp+1)^0,w,c
 14090   002E24  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14091   002E26  0E00               	movlw	0
 14092   002E28  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14093   002E2A  0E00               	movlw	0
 14094   002E2C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14095   002E2E  5017               	movf	(___flmul@a+2)^0,w,c
 14096   002E30  0212               	mulwf	(___flmul@b+1)^0,c
 14097   002E32  CFF3 F028          	movff	prodl,___flmul@temp
 14098   002E36  CFF4 F029          	movff	prodh,___flmul@temp+1
 14099   002E3A  5028               	movf	___flmul@temp^0,w,c
 14100   002E3C  2624               	addwf	___flmul@prod^0,f,c
 14101   002E3E  5029               	movf	(___flmul@temp+1)^0,w,c
 14102   002E40  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14103   002E42  0E00               	movlw	0
 14104   002E44  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14105   002E46  0E00               	movlw	0
 14106   002E48  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14107   002E4A  5016               	movf	(___flmul@a+1)^0,w,c
 14108   002E4C  0213               	mulwf	(___flmul@b+2)^0,c
 14109   002E4E  CFF3 F028          	movff	prodl,___flmul@temp
 14110   002E52  CFF4 F029          	movff	prodh,___flmul@temp+1
 14111   002E56  5028               	movf	___flmul@temp^0,w,c
 14112   002E58  2624               	addwf	___flmul@prod^0,f,c
 14113   002E5A  5029               	movf	(___flmul@temp+1)^0,w,c
 14114   002E5C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14115   002E5E  0E00               	movlw	0
 14116   002E60  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14117   002E62  0E00               	movlw	0
 14118   002E64  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14119   002E66  5017               	movf	(___flmul@a+2)^0,w,c
 14120   002E68  0213               	mulwf	(___flmul@b+2)^0,c
 14121   002E6A  CFF3 F028          	movff	prodl,___flmul@temp
 14122   002E6E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14123   002E72  5028               	movf	___flmul@temp^0,w,c
 14124   002E74  6E19               	movwf	??___flmul^0,c
 14125   002E76  5029               	movf	(___flmul@temp+1)^0,w,c
 14126   002E78  6E1A               	movwf	(??___flmul+1)^0,c
 14127   002E7A  6A1B               	clrf	(??___flmul+2)^0,c
 14128   002E7C  6A1C               	clrf	(??___flmul+3)^0,c
 14129   002E7E  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14130   002E82  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14131   002E86  C019  F01A         	movff	??___flmul,??___flmul+1
 14132   002E8A  6A19               	clrf	??___flmul^0,c
 14133   002E8C  5019               	movf	??___flmul^0,w,c
 14134   002E8E  2624               	addwf	___flmul@prod^0,f,c
 14135   002E90  501A               	movf	(??___flmul+1)^0,w,c
 14136   002E92  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14137   002E94  501B               	movf	(??___flmul+2)^0,w,c
 14138   002E96  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14139   002E98  501C               	movf	(??___flmul+3)^0,w,c
 14140   002E9A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14141   002E9C  C01E  F019         	movff	___flmul@grs,??___flmul
 14142   002EA0  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14143   002EA4  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14144   002EA8  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14145   002EAC  0E19               	movlw	25
 14146   002EAE  EF5E  F017         	goto	u3850
 14147   002EB2                     u3855:
 14148   002EB2  90D8               	bcf	status,0,c
 14149   002EB4  321C               	rrcf	(??___flmul+3)^0,f,c
 14150   002EB6  321B               	rrcf	(??___flmul+2)^0,f,c
 14151   002EB8  321A               	rrcf	(??___flmul+1)^0,f,c
 14152   002EBA  3219               	rrcf	??___flmul^0,f,c
 14153   002EBC                     u3850:
 14154   002EBC  2EE8               	decfsz	wreg,f,c
 14155   002EBE  EF59  F017         	goto	u3855
 14156   002EC2  5019               	movf	??___flmul^0,w,c
 14157   002EC4  2624               	addwf	___flmul@prod^0,f,c
 14158   002EC6  501A               	movf	(??___flmul+1)^0,w,c
 14159   002EC8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14160   002ECA  501B               	movf	(??___flmul+2)^0,w,c
 14161   002ECC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14162   002ECE  501C               	movf	(??___flmul+3)^0,w,c
 14163   002ED0  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14164   002ED2  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14165   002ED6  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14166   002EDA  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14167   002EDE  6A1E               	clrf	___flmul@grs^0,c
 14168   002EE0  5022               	movf	___flmul@aexp^0,w,c
 14169   002EE2  C023  F019         	movff	___flmul@bexp,??___flmul
 14170   002EE6  6A1A               	clrf	(??___flmul+1)^0,c
 14171   002EE8  2619               	addwf	??___flmul^0,f,c
 14172   002EEA  0E00               	movlw	0
 14173   002EEC  221A               	addwfc	(??___flmul+1)^0,f,c
 14174   002EEE  0E82               	movlw	130
 14175   002EF0  2419               	addwf	??___flmul^0,w,c
 14176   002EF2  6E28               	movwf	___flmul@temp^0,c
 14177   002EF4  0EFF               	movlw	255
 14178   002EF6  201A               	addwfc	(??___flmul+1)^0,w,c
 14179   002EF8  6E29               	movwf	(___flmul@temp+1)^0,c
 14180   002EFA  EF94  F017         	goto	l4340
 14181   002EFE                     l4334:
 14182   002EFE  90D8               	bcf	status,0,c
 14183   002F00  3624               	rlcf	___flmul@prod^0,f,c
 14184   002F02  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14185   002F04  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14186   002F06  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14187   002F08  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14188   002F0A  EF89  F017         	goto	u3861
 14189   002F0E  EF8B  F017         	goto	u3860
 14190   002F12                     u3861:
 14191   002F12  EF8C  F017         	goto	l1292
 14192   002F16                     u3860:
 14193   002F16  8024               	bsf	___flmul@prod^0,0,c
 14194   002F18                     l1292:
 14195   002F18  90D8               	bcf	status,0,c
 14196   002F1A  361E               	rlcf	___flmul@grs^0,f,c
 14197   002F1C  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14198   002F1E  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14199   002F20  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14200   002F22  0628               	decf	___flmul@temp^0,f,c
 14201   002F24  A0D8               	btfss	status,0,c
 14202   002F26  0629               	decf	(___flmul@temp+1)^0,f,c
 14203   002F28                     l4340:
 14204   002F28  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14205   002F2A  EF99  F017         	goto	u3871
 14206   002F2E  EF9B  F017         	goto	u3870
 14207   002F32                     u3871:
 14208   002F32  EF7F  F017         	goto	l4334
 14209   002F36                     u3870:
 14210   002F36  0E00               	movlw	0
 14211   002F38  6E22               	movwf	___flmul@aexp^0,c
 14212   002F3A  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14213   002F3C  EFA2  F017         	goto	u3881
 14214   002F40  EFA4  F017         	goto	u3880
 14215   002F44                     u3881:
 14216   002F44  EFC8  F017         	goto	l1294
 14217   002F48                     u3880:
 14218   002F48  0EFF               	movlw	255
 14219   002F4A  141E               	andwf	___flmul@grs^0,w,c
 14220   002F4C  6E19               	movwf	??___flmul^0,c
 14221   002F4E  0EFF               	movlw	255
 14222   002F50  141F               	andwf	(___flmul@grs+1)^0,w,c
 14223   002F52  6E1A               	movwf	(??___flmul+1)^0,c
 14224   002F54  0EFF               	movlw	255
 14225   002F56  1420               	andwf	(___flmul@grs+2)^0,w,c
 14226   002F58  6E1B               	movwf	(??___flmul+2)^0,c
 14227   002F5A  0E7F               	movlw	127
 14228   002F5C  1421               	andwf	(___flmul@grs+3)^0,w,c
 14229   002F5E  6E1C               	movwf	(??___flmul+3)^0,c
 14230   002F60  5019               	movf	??___flmul^0,w,c
 14231   002F62  101A               	iorwf	(??___flmul+1)^0,w,c
 14232   002F64  101B               	iorwf	(??___flmul+2)^0,w,c
 14233   002F66  101C               	iorwf	(??___flmul+3)^0,w,c
 14234   002F68  B4D8               	btfsc	status,2,c
 14235   002F6A  EFB9  F017         	goto	u3891
 14236   002F6E  EFBB  F017         	goto	u3890
 14237   002F72                     u3891:
 14238   002F72  EFBF  F017         	goto	l1295
 14239   002F76                     u3890:
 14240   002F76                     l4348:
 14241   002F76  0E01               	movlw	1
 14242   002F78  6E22               	movwf	___flmul@aexp^0,c
 14243   002F7A  EFC8  F017         	goto	l1294
 14244   002F7E                     l1295:
 14245   002F7E  A024               	btfss	___flmul@prod^0,0,c
 14246   002F80  EFC4  F017         	goto	u3901
 14247   002F84  EFC6  F017         	goto	u3900
 14248   002F88                     u3901:
 14249   002F88  EFC8  F017         	goto	l1294
 14250   002F8C                     u3900:
 14251   002F8C  EFBB  F017         	goto	l4348
 14252   002F90                     l1294:
 14253   002F90  5022               	movf	___flmul@aexp^0,w,c
 14254   002F92  B4D8               	btfsc	status,2,c
 14255   002F94  EFCE  F017         	goto	u3911
 14256   002F98  EFD0  F017         	goto	u3910
 14257   002F9C                     u3911:
 14258   002F9C  EFF4  F017         	goto	l4360
 14259   002FA0                     u3910:
 14260   002FA0  0E01               	movlw	1
 14261   002FA2  2624               	addwf	___flmul@prod^0,f,c
 14262   002FA4  0E00               	movlw	0
 14263   002FA6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14264   002FA8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14265   002FAA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14266   002FAC  A027               	btfss	(___flmul@prod+3)^0,0,c
 14267   002FAE  EFDB  F017         	goto	u3921
 14268   002FB2  EFDD  F017         	goto	u3920
 14269   002FB6                     u3921:
 14270   002FB6  EFF4  F017         	goto	l4360
 14271   002FBA                     u3920:
 14272   002FBA  C024  F019         	movff	___flmul@prod,??___flmul
 14273   002FBE  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14274   002FC2  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14275   002FC6  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14276   002FCA  341C               	rlcf	(??___flmul+3)^0,w,c
 14277   002FCC  321C               	rrcf	(??___flmul+3)^0,f,c
 14278   002FCE  321B               	rrcf	(??___flmul+2)^0,f,c
 14279   002FD0  321A               	rrcf	(??___flmul+1)^0,f,c
 14280   002FD2  3219               	rrcf	??___flmul^0,f,c
 14281   002FD4  C019  F024         	movff	??___flmul,___flmul@prod
 14282   002FD8  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14283   002FDC  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14284   002FE0  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14285   002FE4  4A28               	infsnz	___flmul@temp^0,f,c
 14286   002FE6  2A29               	incf	(___flmul@temp+1)^0,f,c
 14287   002FE8                     l4360:
 14288   002FE8  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14289   002FEA  EFFF  F017         	goto	u3931
 14290   002FEE  5029               	movf	(___flmul@temp+1)^0,w,c
 14291   002FF0  E108               	bnz	u3930
 14292   002FF2  2828               	incf	___flmul@temp^0,w,c
 14293   002FF4  A0D8               	btfss	status,0,c
 14294   002FF6  EFFF  F017         	goto	u3931
 14295   002FFA  EF01  F018         	goto	u3930
 14296   002FFE                     u3931:
 14297   002FFE  EF0B  F018         	goto	l4364
 14298   003002                     u3930:
 14299   003002  0E00               	movlw	0
 14300   003004  6E24               	movwf	___flmul@prod^0,c
 14301   003006  0E00               	movlw	0
 14302   003008  6E25               	movwf	(___flmul@prod+1)^0,c
 14303   00300A  0E80               	movlw	128
 14304   00300C  6E26               	movwf	(___flmul@prod+2)^0,c
 14305   00300E  0E7F               	movlw	127
 14306   003010  6E27               	movwf	(___flmul@prod+3)^0,c
 14307   003012  EF39  F018         	goto	l4376
 14308   003016                     l4364:
 14309   003016  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14310   003018  EF18  F018         	goto	u3940
 14311   00301C  5029               	movf	(___flmul@temp+1)^0,w,c
 14312   00301E  E106               	bnz	u3941
 14313   003020  0428               	decf	___flmul@temp^0,w,c
 14314   003022  B0D8               	btfsc	status,0,c
 14315   003024  EF16  F018         	goto	u3941
 14316   003028  EF18  F018         	goto	u3940
 14317   00302C                     u3941:
 14318   00302C  EF24  F018         	goto	l1302
 14319   003030                     u3940:
 14320   003030  0E00               	movlw	0
 14321   003032  6E24               	movwf	___flmul@prod^0,c
 14322   003034  0E00               	movlw	0
 14323   003036  6E25               	movwf	(___flmul@prod+1)^0,c
 14324   003038  0E00               	movlw	0
 14325   00303A  6E26               	movwf	(___flmul@prod+2)^0,c
 14326   00303C  0E00               	movlw	0
 14327   00303E  6E27               	movwf	(___flmul@prod+3)^0,c
 14328   003040  0E00               	movlw	0
 14329   003042  6E1D               	movwf	___flmul@sign^0,c
 14330   003044  EF39  F018         	goto	l4376
 14331   003048                     l1302:
 14332   003048  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14333   00304C  0EFF               	movlw	255
 14334   00304E  1624               	andwf	___flmul@prod^0,f,c
 14335   003050  0EFF               	movlw	255
 14336   003052  1625               	andwf	(___flmul@prod+1)^0,f,c
 14337   003054  0E7F               	movlw	127
 14338   003056  1626               	andwf	(___flmul@prod+2)^0,f,c
 14339   003058  0E00               	movlw	0
 14340   00305A  1627               	andwf	(___flmul@prod+3)^0,f,c
 14341   00305C  A023               	btfss	___flmul@bexp^0,0,c
 14342   00305E  EF33  F018         	goto	u3951
 14343   003062  EF35  F018         	goto	u3950
 14344   003066                     u3951:
 14345   003066  EF36  F018         	goto	l4374
 14346   00306A                     u3950:
 14347   00306A  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14348   00306C                     l4374:
 14349   00306C  90D8               	bcf	status,0,c
 14350   00306E  3023               	rrcf	___flmul@bexp^0,w,c
 14351   003070  6E27               	movwf	(___flmul@prod+3)^0,c
 14352   003072                     l4376:
 14353   003072  501D               	movf	___flmul@sign^0,w,c
 14354   003074  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14355   003076  C024  F011         	movff	___flmul@prod,?___flmul
 14356   00307A  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14357   00307E  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14358   003082  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14359   003086                     l1289:
 14360   003086  0012               	return		;funcret
 14361   003088                     __end_of___flmul:
 14362                           	callstack 0
 14363                           
 14364 ;; *************** function ___flge *****************
 14365 ;; Defined at:
 14366 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14367 ;; Parameters:    Size  Location     Type
 14368 ;;  ff1             4   41[COMRAM] unsigned char 
 14369 ;;  ff2             4   45[COMRAM] unsigned char 
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;		None
 14372 ;; Return value:  Size  Location     Type
 14373 ;;		None               void
 14374 ;; Registers used:
 14375 ;;		wreg, status,2, status,0
 14376 ;; Tracked objects:
 14377 ;;		On entry : 0/0
 14378 ;;		On exit  : 0/0
 14379 ;;		Unchanged: 0/0
 14380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14381 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14384 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14385 ;;Total ram usage:       12 bytes
 14386 ;; Hardware stack levels used: 1
 14387 ;; Hardware stack levels required when called: 1
 14388 ;; This function calls:
 14389 ;;		Nothing
 14390 ;; This function is called by:
 14391 ;;		_Colour_decider
 14392 ;;		_efgtoa
 14393 ;; This function uses a non-reentrant model
 14394 ;;
 14395                           
 14396                           	psect	text76
 14397   004AB8                     __ptext76:
 14398                           	callstack 0
 14399   004AB8                     ___flge:
 14400                           	callstack 25
 14401   004AB8  0E00               	movlw	0
 14402   004ABA  142A               	andwf	___flge@ff1^0,w,c
 14403   004ABC  6E32               	movwf	??___flge^0,c
 14404   004ABE  0E00               	movlw	0
 14405   004AC0  142B               	andwf	(___flge@ff1+1)^0,w,c
 14406   004AC2  6E33               	movwf	(??___flge+1)^0,c
 14407   004AC4  0E80               	movlw	128
 14408   004AC6  142C               	andwf	(___flge@ff1+2)^0,w,c
 14409   004AC8  6E34               	movwf	(??___flge+2)^0,c
 14410   004ACA  0E7F               	movlw	127
 14411   004ACC  142D               	andwf	(___flge@ff1+3)^0,w,c
 14412   004ACE  6E35               	movwf	(??___flge+3)^0,c
 14413   004AD0  5032               	movf	??___flge^0,w,c
 14414   004AD2  1033               	iorwf	(??___flge+1)^0,w,c
 14415   004AD4  1034               	iorwf	(??___flge+2)^0,w,c
 14416   004AD6  1035               	iorwf	(??___flge+3)^0,w,c
 14417   004AD8  A4D8               	btfss	status,2,c
 14418   004ADA  EF71  F025         	goto	u3991
 14419   004ADE  EF73  F025         	goto	u3990
 14420   004AE2                     u3991:
 14421   004AE2  EF7B  F025         	goto	l4408
 14422   004AE6                     u3990:
 14423   004AE6  0E00               	movlw	0
 14424   004AE8  6E2A               	movwf	___flge@ff1^0,c
 14425   004AEA  0E00               	movlw	0
 14426   004AEC  6E2B               	movwf	(___flge@ff1+1)^0,c
 14427   004AEE  0E00               	movlw	0
 14428   004AF0  6E2C               	movwf	(___flge@ff1+2)^0,c
 14429   004AF2  0E00               	movlw	0
 14430   004AF4  6E2D               	movwf	(___flge@ff1+3)^0,c
 14431   004AF6                     l4408:
 14432   004AF6  0E00               	movlw	0
 14433   004AF8  142E               	andwf	___flge@ff2^0,w,c
 14434   004AFA  6E32               	movwf	??___flge^0,c
 14435   004AFC  0E00               	movlw	0
 14436   004AFE  142F               	andwf	(___flge@ff2+1)^0,w,c
 14437   004B00  6E33               	movwf	(??___flge+1)^0,c
 14438   004B02  0E80               	movlw	128
 14439   004B04  1430               	andwf	(___flge@ff2+2)^0,w,c
 14440   004B06  6E34               	movwf	(??___flge+2)^0,c
 14441   004B08  0E7F               	movlw	127
 14442   004B0A  1431               	andwf	(___flge@ff2+3)^0,w,c
 14443   004B0C  6E35               	movwf	(??___flge+3)^0,c
 14444   004B0E  5032               	movf	??___flge^0,w,c
 14445   004B10  1033               	iorwf	(??___flge+1)^0,w,c
 14446   004B12  1034               	iorwf	(??___flge+2)^0,w,c
 14447   004B14  1035               	iorwf	(??___flge+3)^0,w,c
 14448   004B16  A4D8               	btfss	status,2,c
 14449   004B18  EF90  F025         	goto	u4001
 14450   004B1C  EF92  F025         	goto	u4000
 14451   004B20                     u4001:
 14452   004B20  EF9A  F025         	goto	l4412
 14453   004B24                     u4000:
 14454   004B24  0E00               	movlw	0
 14455   004B26  6E2E               	movwf	___flge@ff2^0,c
 14456   004B28  0E00               	movlw	0
 14457   004B2A  6E2F               	movwf	(___flge@ff2+1)^0,c
 14458   004B2C  0E00               	movlw	0
 14459   004B2E  6E30               	movwf	(___flge@ff2+2)^0,c
 14460   004B30  0E00               	movlw	0
 14461   004B32  6E31               	movwf	(___flge@ff2+3)^0,c
 14462   004B34                     l4412:
 14463   004B34  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14464   004B36  EF9F  F025         	goto	u4011
 14465   004B3A  EFA1  F025         	goto	u4010
 14466   004B3E                     u4011:
 14467   004B3E  EFAA  F025         	goto	l4416
 14468   004B42                     u4010:
 14469   004B42  6C2A               	negf	___flge@ff1^0,c
 14470   004B44  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14471   004B46  B0D8               	btfsc	status,0,c
 14472   004B48  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14473   004B4A  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14474   004B4C  B0D8               	btfsc	status,0,c
 14475   004B4E  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14476   004B50  0E80               	movlw	128
 14477   004B52  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14478   004B54                     l4416:
 14479   004B54  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14480   004B56  EFAF  F025         	goto	u4021
 14481   004B5A  EFB1  F025         	goto	u4020
 14482   004B5E                     u4021:
 14483   004B5E  EFBA  F025         	goto	l936
 14484   004B62                     u4020:
 14485   004B62  6C2E               	negf	___flge@ff2^0,c
 14486   004B64  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14487   004B66  B0D8               	btfsc	status,0,c
 14488   004B68  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14489   004B6A  1E30               	comf	(___flge@ff2+2)^0,f,c
 14490   004B6C  B0D8               	btfsc	status,0,c
 14491   004B6E  2A30               	incf	(___flge@ff2+2)^0,f,c
 14492   004B70  0E80               	movlw	128
 14493   004B72  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14494   004B74                     l936:
 14495   004B74  0E00               	movlw	0
 14496   004B76  1A2A               	xorwf	___flge@ff1^0,f,c
 14497   004B78  0E00               	movlw	0
 14498   004B7A  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14499   004B7C  0E00               	movlw	0
 14500   004B7E  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14501   004B80  0E80               	movlw	128
 14502   004B82  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14503   004B84  0E00               	movlw	0
 14504   004B86  1A2E               	xorwf	___flge@ff2^0,f,c
 14505   004B88  0E00               	movlw	0
 14506   004B8A  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14507   004B8C  0E00               	movlw	0
 14508   004B8E  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14509   004B90  0E80               	movlw	128
 14510   004B92  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14511   004B94  502E               	movf	___flge@ff2^0,w,c
 14512   004B96  5C2A               	subwf	___flge@ff1^0,w,c
 14513   004B98  502F               	movf	(___flge@ff2+1)^0,w,c
 14514   004B9A  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14515   004B9C  5030               	movf	(___flge@ff2+2)^0,w,c
 14516   004B9E  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14517   004BA0  5031               	movf	(___flge@ff2+3)^0,w,c
 14518   004BA2  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14519   004BA4  B0D8               	btfsc	status,0,c
 14520   004BA6  EFD7  F025         	goto	u4031
 14521   004BAA  EFD9  F025         	goto	u4030
 14522   004BAE                     u4031:
 14523   004BAE  EFDC  F025         	goto	l4422
 14524   004BB2                     u4030:
 14525   004BB2  90D8               	bcf	status,0,c
 14526   004BB4  EFDD  F025         	goto	l941
 14527   004BB8                     l4422:
 14528   004BB8  80D8               	bsf	status,0,c
 14529   004BBA                     l941:
 14530   004BBA  0012               	return		;funcret
 14531   004BBC                     __end_of___flge:
 14532                           	callstack 0
 14533                           
 14534 ;; *************** function ___fleq *****************
 14535 ;; Defined at:
 14536 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14537 ;; Parameters:    Size  Location     Type
 14538 ;;  ff1             4   49[COMRAM] unsigned char 
 14539 ;;  ff2             4   53[COMRAM] unsigned char 
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;		None
 14542 ;; Return value:  Size  Location     Type
 14543 ;;		None               void
 14544 ;; Registers used:
 14545 ;;		wreg, status,2, status,0
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14551 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14553 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14554 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14555 ;;Total ram usage:       12 bytes
 14556 ;; Hardware stack levels used: 1
 14557 ;; Hardware stack levels required when called: 1
 14558 ;; This function calls:
 14559 ;;		Nothing
 14560 ;; This function is called by:
 14561 ;;		_Colour_decider
 14562 ;;		_efgtoa
 14563 ;; This function uses a non-reentrant model
 14564 ;;
 14565                           
 14566                           	psect	text77
 14567   004F9A                     __ptext77:
 14568                           	callstack 0
 14569   004F9A                     ___fleq:
 14570                           	callstack 25
 14571   004F9A  0E00               	movlw	0
 14572   004F9C  1432               	andwf	___fleq@ff1^0,w,c
 14573   004F9E  6E3A               	movwf	??___fleq^0,c
 14574   004FA0  0E00               	movlw	0
 14575   004FA2  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14576   004FA4  6E3B               	movwf	(??___fleq+1)^0,c
 14577   004FA6  0E80               	movlw	128
 14578   004FA8  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14579   004FAA  6E3C               	movwf	(??___fleq+2)^0,c
 14580   004FAC  0E7F               	movlw	127
 14581   004FAE  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14582   004FB0  6E3D               	movwf	(??___fleq+3)^0,c
 14583   004FB2  503A               	movf	??___fleq^0,w,c
 14584   004FB4  103B               	iorwf	(??___fleq+1)^0,w,c
 14585   004FB6  103C               	iorwf	(??___fleq+2)^0,w,c
 14586   004FB8  103D               	iorwf	(??___fleq+3)^0,w,c
 14587   004FBA  A4D8               	btfss	status,2,c
 14588   004FBC  EFE2  F027         	goto	u3961
 14589   004FC0  EFE4  F027         	goto	u3960
 14590   004FC4                     u3961:
 14591   004FC4  EFEC  F027         	goto	l4392
 14592   004FC8                     u3960:
 14593   004FC8  0E00               	movlw	0
 14594   004FCA  6E32               	movwf	___fleq@ff1^0,c
 14595   004FCC  0E00               	movlw	0
 14596   004FCE  6E33               	movwf	(___fleq@ff1+1)^0,c
 14597   004FD0  0E00               	movlw	0
 14598   004FD2  6E34               	movwf	(___fleq@ff1+2)^0,c
 14599   004FD4  0E00               	movlw	0
 14600   004FD6  6E35               	movwf	(___fleq@ff1+3)^0,c
 14601   004FD8                     l4392:
 14602   004FD8  0E00               	movlw	0
 14603   004FDA  1436               	andwf	___fleq@ff2^0,w,c
 14604   004FDC  6E3A               	movwf	??___fleq^0,c
 14605   004FDE  0E00               	movlw	0
 14606   004FE0  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14607   004FE2  6E3B               	movwf	(??___fleq+1)^0,c
 14608   004FE4  0E80               	movlw	128
 14609   004FE6  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14610   004FE8  6E3C               	movwf	(??___fleq+2)^0,c
 14611   004FEA  0E7F               	movlw	127
 14612   004FEC  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14613   004FEE  6E3D               	movwf	(??___fleq+3)^0,c
 14614   004FF0  503A               	movf	??___fleq^0,w,c
 14615   004FF2  103B               	iorwf	(??___fleq+1)^0,w,c
 14616   004FF4  103C               	iorwf	(??___fleq+2)^0,w,c
 14617   004FF6  103D               	iorwf	(??___fleq+3)^0,w,c
 14618   004FF8  A4D8               	btfss	status,2,c
 14619   004FFA  EF01  F028         	goto	u3971
 14620   004FFE  EF03  F028         	goto	u3970
 14621   005002                     u3971:
 14622   005002  EF0B  F028         	goto	l4396
 14623   005006                     u3970:
 14624   005006  0E00               	movlw	0
 14625   005008  6E36               	movwf	___fleq@ff2^0,c
 14626   00500A  0E00               	movlw	0
 14627   00500C  6E37               	movwf	(___fleq@ff2+1)^0,c
 14628   00500E  0E00               	movlw	0
 14629   005010  6E38               	movwf	(___fleq@ff2+2)^0,c
 14630   005012  0E00               	movlw	0
 14631   005014  6E39               	movwf	(___fleq@ff2+3)^0,c
 14632   005016                     l4396:
 14633   005016  5036               	movf	___fleq@ff2^0,w,c
 14634   005018  1832               	xorwf	___fleq@ff1^0,w,c
 14635   00501A  E10F               	bnz	u3980
 14636   00501C  5037               	movf	(___fleq@ff2+1)^0,w,c
 14637   00501E  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14638   005020  E10C               	bnz	u3980
 14639   005022  5038               	movf	(___fleq@ff2+2)^0,w,c
 14640   005024  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14641   005026  E109               	bnz	u3980
 14642   005028  5039               	movf	(___fleq@ff2+3)^0,w,c
 14643   00502A  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14644   00502C  B4D8               	btfsc	status,2,c
 14645   00502E  EF1B  F028         	goto	u3981
 14646   005032  EF1D  F028         	goto	u3980
 14647   005036                     u3981:
 14648   005036  EF20  F028         	goto	l4400
 14649   00503A                     u3980:
 14650   00503A  90D8               	bcf	status,0,c
 14651   00503C  EF21  F028         	goto	l930
 14652   005040                     l4400:
 14653   005040  80D8               	bsf	status,0,c
 14654   005042                     l930:
 14655   005042  0012               	return		;funcret
 14656   005044                     __end_of___fleq:
 14657                           	callstack 0
 14658                           
 14659 ;; *************** function ___fldiv *****************
 14660 ;; Defined at:
 14661 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14662 ;; Parameters:    Size  Location     Type
 14663 ;;  b               4   49[COMRAM] unsigned char 
 14664 ;;  a               4   53[COMRAM] unsigned char 
 14665 ;; Auto vars:     Size  Location     Type
 14666 ;;  grs             4   68[COMRAM] unsigned long 
 14667 ;;  rem             4   61[COMRAM] unsigned long 
 14668 ;;  new_exp         2   66[COMRAM] short 
 14669 ;;  aexp            1   73[COMRAM] unsigned char 
 14670 ;;  bexp            1   72[COMRAM] unsigned char 
 14671 ;;  sign            1   65[COMRAM] unsigned char 
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  4   49[COMRAM] unsigned char 
 14674 ;; Registers used:
 14675 ;;		wreg, status,2, status,0
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14681 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14682 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14684 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14685 ;;Total ram usage:       25 bytes
 14686 ;; Hardware stack levels used: 1
 14687 ;; Hardware stack levels required when called: 1
 14688 ;; This function calls:
 14689 ;;		Nothing
 14690 ;; This function is called by:
 14691 ;;		_colour_rel
 14692 ;;		_Colour_decider
 14693 ;;		_efgtoa
 14694 ;; This function uses a non-reentrant model
 14695 ;;
 14696                           
 14697                           	psect	text78
 14698   003088                     __ptext78:
 14699                           	callstack 0
 14700   003088                     ___fldiv:
 14701                           	callstack 25
 14702   003088  5035               	movf	(___fldiv@b+3)^0,w,c
 14703   00308A  0B80               	andlw	128
 14704   00308C  6E42               	movwf	___fldiv@sign^0,c
 14705   00308E  5035               	movf	(___fldiv@b+3)^0,w,c
 14706   003090  2435               	addwf	(___fldiv@b+3)^0,w,c
 14707   003092  6E49               	movwf	___fldiv@bexp^0,c
 14708   003094  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14709   003096  EF4F  F018         	goto	u3541
 14710   00309A  EF51  F018         	goto	u3540
 14711   00309E                     u3541:
 14712   00309E  EF52  F018         	goto	l4120
 14713   0030A2                     u3540:
 14714   0030A2  8049               	bsf	___fldiv@bexp^0,0,c
 14715   0030A4                     l4120:
 14716   0030A4  5049               	movf	___fldiv@bexp^0,w,c
 14717   0030A6  B4D8               	btfsc	status,2,c
 14718   0030A8  EF58  F018         	goto	u3551
 14719   0030AC  EF5A  F018         	goto	u3550
 14720   0030B0                     u3551:
 14721   0030B0  EF6F  F018         	goto	l4130
 14722   0030B4                     u3550:
 14723   0030B4  2849               	incf	___fldiv@bexp^0,w,c
 14724   0030B6  A4D8               	btfss	status,2,c
 14725   0030B8  EF60  F018         	goto	u3561
 14726   0030BC  EF62  F018         	goto	u3560
 14727   0030C0                     u3561:
 14728   0030C0  EF6A  F018         	goto	l4126
 14729   0030C4                     u3560:
 14730   0030C4  0E00               	movlw	0
 14731   0030C6  6E32               	movwf	___fldiv@b^0,c
 14732   0030C8  0E00               	movlw	0
 14733   0030CA  6E33               	movwf	(___fldiv@b+1)^0,c
 14734   0030CC  0E00               	movlw	0
 14735   0030CE  6E34               	movwf	(___fldiv@b+2)^0,c
 14736   0030D0  0E00               	movlw	0
 14737   0030D2  6E35               	movwf	(___fldiv@b+3)^0,c
 14738   0030D4                     l4126:
 14739   0030D4  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14740   0030D6  0E00               	movlw	0
 14741   0030D8  6E35               	movwf	(___fldiv@b+3)^0,c
 14742   0030DA  EF77  F018         	goto	l4132
 14743   0030DE                     l4130:
 14744   0030DE  0E00               	movlw	0
 14745   0030E0  6E32               	movwf	___fldiv@b^0,c
 14746   0030E2  0E00               	movlw	0
 14747   0030E4  6E33               	movwf	(___fldiv@b+1)^0,c
 14748   0030E6  0E00               	movlw	0
 14749   0030E8  6E34               	movwf	(___fldiv@b+2)^0,c
 14750   0030EA  0E00               	movlw	0
 14751   0030EC  6E35               	movwf	(___fldiv@b+3)^0,c
 14752   0030EE                     l4132:
 14753   0030EE  5039               	movf	(___fldiv@a+3)^0,w,c
 14754   0030F0  0B80               	andlw	128
 14755   0030F2  1A42               	xorwf	___fldiv@sign^0,f,c
 14756   0030F4  5039               	movf	(___fldiv@a+3)^0,w,c
 14757   0030F6  2439               	addwf	(___fldiv@a+3)^0,w,c
 14758   0030F8  6E4A               	movwf	___fldiv@aexp^0,c
 14759   0030FA  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14760   0030FC  EF82  F018         	goto	u3571
 14761   003100  EF84  F018         	goto	u3570
 14762   003104                     u3571:
 14763   003104  EF85  F018         	goto	l4140
 14764   003108                     u3570:
 14765   003108  804A               	bsf	___fldiv@aexp^0,0,c
 14766   00310A                     l4140:
 14767   00310A  504A               	movf	___fldiv@aexp^0,w,c
 14768   00310C  B4D8               	btfsc	status,2,c
 14769   00310E  EF8B  F018         	goto	u3581
 14770   003112  EF8D  F018         	goto	u3580
 14771   003116                     u3581:
 14772   003116  EFA2  F018         	goto	l4150
 14773   00311A                     u3580:
 14774   00311A  284A               	incf	___fldiv@aexp^0,w,c
 14775   00311C  A4D8               	btfss	status,2,c
 14776   00311E  EF93  F018         	goto	u3591
 14777   003122  EF95  F018         	goto	u3590
 14778   003126                     u3591:
 14779   003126  EF9D  F018         	goto	l4146
 14780   00312A                     u3590:
 14781   00312A  0E00               	movlw	0
 14782   00312C  6E36               	movwf	___fldiv@a^0,c
 14783   00312E  0E00               	movlw	0
 14784   003130  6E37               	movwf	(___fldiv@a+1)^0,c
 14785   003132  0E00               	movlw	0
 14786   003134  6E38               	movwf	(___fldiv@a+2)^0,c
 14787   003136  0E00               	movlw	0
 14788   003138  6E39               	movwf	(___fldiv@a+3)^0,c
 14789   00313A                     l4146:
 14790   00313A  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14791   00313C  0E00               	movlw	0
 14792   00313E  6E39               	movwf	(___fldiv@a+3)^0,c
 14793   003140  EFAA  F018         	goto	l4152
 14794   003144                     l4150:
 14795   003144  0E00               	movlw	0
 14796   003146  6E36               	movwf	___fldiv@a^0,c
 14797   003148  0E00               	movlw	0
 14798   00314A  6E37               	movwf	(___fldiv@a+1)^0,c
 14799   00314C  0E00               	movlw	0
 14800   00314E  6E38               	movwf	(___fldiv@a+2)^0,c
 14801   003150  0E00               	movlw	0
 14802   003152  6E39               	movwf	(___fldiv@a+3)^0,c
 14803   003154                     l4152:
 14804   003154  5036               	movf	___fldiv@a^0,w,c
 14805   003156  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14806   003158  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14807   00315A  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14808   00315C  A4D8               	btfss	status,2,c
 14809   00315E  EFB3  F018         	goto	u3601
 14810   003162  EFB5  F018         	goto	u3600
 14811   003166                     u3601:
 14812   003166  EFCD  F018         	goto	l4164
 14813   00316A                     u3600:
 14814   00316A  0E00               	movlw	0
 14815   00316C  6E32               	movwf	___fldiv@b^0,c
 14816   00316E  0E00               	movlw	0
 14817   003170  6E33               	movwf	(___fldiv@b+1)^0,c
 14818   003172  0E00               	movlw	0
 14819   003174  6E34               	movwf	(___fldiv@b+2)^0,c
 14820   003176  0E00               	movlw	0
 14821   003178  6E35               	movwf	(___fldiv@b+3)^0,c
 14822   00317A  0E80               	movlw	128
 14823   00317C  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14824   00317E  0E7F               	movlw	127
 14825   003180  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14826   003182                     l4158:
 14827   003182  5042               	movf	___fldiv@sign^0,w,c
 14828   003184  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14829   003186  C032  F032         	movff	___fldiv@b,?___fldiv
 14830   00318A  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14831   00318E  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14832   003192  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14833   003196  EF10  F01A         	goto	l1253
 14834   00319A                     l4164:
 14835   00319A  5049               	movf	___fldiv@bexp^0,w,c
 14836   00319C  A4D8               	btfss	status,2,c
 14837   00319E  EFD3  F018         	goto	u3611
 14838   0031A2  EFD5  F018         	goto	u3610
 14839   0031A6                     u3611:
 14840   0031A6  EFDF  F018         	goto	l4172
 14841   0031AA                     u3610:
 14842   0031AA  0E00               	movlw	0
 14843   0031AC  6E32               	movwf	?___fldiv^0,c
 14844   0031AE  0E00               	movlw	0
 14845   0031B0  6E33               	movwf	(?___fldiv+1)^0,c
 14846   0031B2  0E00               	movlw	0
 14847   0031B4  6E34               	movwf	(?___fldiv+2)^0,c
 14848   0031B6  0E00               	movlw	0
 14849   0031B8  6E35               	movwf	(?___fldiv+3)^0,c
 14850   0031BA  EF10  F01A         	goto	l1253
 14851   0031BE                     l4172:
 14852   0031BE  504A               	movf	___fldiv@aexp^0,w,c
 14853   0031C0  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14854   0031C4  6A3B               	clrf	(??___fldiv+1)^0,c
 14855   0031C6  5E3A               	subwf	??___fldiv^0,f,c
 14856   0031C8  0E00               	movlw	0
 14857   0031CA  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14858   0031CC  0E7F               	movlw	127
 14859   0031CE  243A               	addwf	??___fldiv^0,w,c
 14860   0031D0  6E43               	movwf	___fldiv@new_exp^0,c
 14861   0031D2  0E00               	movlw	0
 14862   0031D4  203B               	addwfc	(??___fldiv+1)^0,w,c
 14863   0031D6  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14864   0031D8  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14865   0031DC  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14866   0031E0  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14867   0031E4  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14868   0031E8  0E00               	movlw	0
 14869   0031EA  6E32               	movwf	___fldiv@b^0,c
 14870   0031EC  0E00               	movlw	0
 14871   0031EE  6E33               	movwf	(___fldiv@b+1)^0,c
 14872   0031F0  0E00               	movlw	0
 14873   0031F2  6E34               	movwf	(___fldiv@b+2)^0,c
 14874   0031F4  0E00               	movlw	0
 14875   0031F6  6E35               	movwf	(___fldiv@b+3)^0,c
 14876   0031F8  0E00               	movlw	0
 14877   0031FA  6E45               	movwf	___fldiv@grs^0,c
 14878   0031FC  0E00               	movlw	0
 14879   0031FE  6E46               	movwf	(___fldiv@grs+1)^0,c
 14880   003200  0E00               	movlw	0
 14881   003202  6E47               	movwf	(___fldiv@grs+2)^0,c
 14882   003204  0E00               	movlw	0
 14883   003206  6E48               	movwf	(___fldiv@grs+3)^0,c
 14884   003208  0E00               	movlw	0
 14885   00320A  6E4A               	movwf	___fldiv@aexp^0,c
 14886   00320C  EF40  F019         	goto	l1255
 14887   003210                     l4182:
 14888   003210  504A               	movf	___fldiv@aexp^0,w,c
 14889   003212  B4D8               	btfsc	status,2,c
 14890   003214  EF0E  F019         	goto	u3621
 14891   003218  EF10  F019         	goto	u3620
 14892   00321C                     u3621:
 14893   00321C  EF27  F019         	goto	l4190
 14894   003220                     u3620:
 14895   003220  90D8               	bcf	status,0,c
 14896   003222  363E               	rlcf	___fldiv@rem^0,f,c
 14897   003224  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 14898   003226  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 14899   003228  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 14900   00322A  90D8               	bcf	status,0,c
 14901   00322C  3632               	rlcf	___fldiv@b^0,f,c
 14902   00322E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14903   003230  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14904   003232  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14905   003234  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14906   003236  EF1F  F019         	goto	u3631
 14907   00323A  EF21  F019         	goto	u3630
 14908   00323E                     u3631:
 14909   00323E  EF22  F019         	goto	l1258
 14910   003242                     u3630:
 14911   003242  8032               	bsf	___fldiv@b^0,0,c
 14912   003244                     l1258:
 14913   003244  90D8               	bcf	status,0,c
 14914   003246  3645               	rlcf	___fldiv@grs^0,f,c
 14915   003248  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14916   00324A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14917   00324C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14918   00324E                     l4190:
 14919   00324E  5036               	movf	___fldiv@a^0,w,c
 14920   003250  5C3E               	subwf	___fldiv@rem^0,w,c
 14921   003252  5037               	movf	(___fldiv@a+1)^0,w,c
 14922   003254  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 14923   003256  5038               	movf	(___fldiv@a+2)^0,w,c
 14924   003258  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 14925   00325A  5039               	movf	(___fldiv@a+3)^0,w,c
 14926   00325C  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 14927   00325E  A0D8               	btfss	status,0,c
 14928   003260  EF34  F019         	goto	u3641
 14929   003264  EF36  F019         	goto	u3640
 14930   003268                     u3641:
 14931   003268  EF3F  F019         	goto	l4196
 14932   00326C                     u3640:
 14933   00326C  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 14934   00326E  5036               	movf	___fldiv@a^0,w,c
 14935   003270  5E3E               	subwf	___fldiv@rem^0,f,c
 14936   003272  5037               	movf	(___fldiv@a+1)^0,w,c
 14937   003274  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 14938   003276  5038               	movf	(___fldiv@a+2)^0,w,c
 14939   003278  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 14940   00327A  5039               	movf	(___fldiv@a+3)^0,w,c
 14941   00327C  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 14942   00327E                     l4196:
 14943   00327E  2A4A               	incf	___fldiv@aexp^0,f,c
 14944   003280                     l1255:
 14945   003280  0E19               	movlw	25
 14946   003282  644A               	cpfsgt	___fldiv@aexp^0,c
 14947   003284  EF46  F019         	goto	u3651
 14948   003288  EF48  F019         	goto	u3650
 14949   00328C                     u3651:
 14950   00328C  EF08  F019         	goto	l4182
 14951   003290                     u3650:
 14952   003290  503E               	movf	___fldiv@rem^0,w,c
 14953   003292  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 14954   003294  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 14955   003296  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 14956   003298  B4D8               	btfsc	status,2,c
 14957   00329A  EF51  F019         	goto	u3661
 14958   00329E  EF53  F019         	goto	u3660
 14959   0032A2                     u3661:
 14960   0032A2  EF6B  F019         	goto	l4208
 14961   0032A6                     u3660:
 14962   0032A6  8045               	bsf	___fldiv@grs^0,0,c
 14963   0032A8  EF6B  F019         	goto	l4208
 14964   0032AC                     l4202:
 14965   0032AC  90D8               	bcf	status,0,c
 14966   0032AE  3632               	rlcf	___fldiv@b^0,f,c
 14967   0032B0  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14968   0032B2  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14969   0032B4  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14970   0032B6  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14971   0032B8  EF60  F019         	goto	u3671
 14972   0032BC  EF62  F019         	goto	u3670
 14973   0032C0                     u3671:
 14974   0032C0  EF63  F019         	goto	l1264
 14975   0032C4                     u3670:
 14976   0032C4  8032               	bsf	___fldiv@b^0,0,c
 14977   0032C6                     l1264:
 14978   0032C6  90D8               	bcf	status,0,c
 14979   0032C8  3645               	rlcf	___fldiv@grs^0,f,c
 14980   0032CA  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14981   0032CC  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14982   0032CE  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14983   0032D0  0643               	decf	___fldiv@new_exp^0,f,c
 14984   0032D2  A0D8               	btfss	status,0,c
 14985   0032D4  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 14986   0032D6                     l4208:
 14987   0032D6  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14988   0032D8  EF70  F019         	goto	u3681
 14989   0032DC  EF72  F019         	goto	u3680
 14990   0032E0                     u3681:
 14991   0032E0  EF56  F019         	goto	l4202
 14992   0032E4                     u3680:
 14993   0032E4  0E00               	movlw	0
 14994   0032E6  6E4A               	movwf	___fldiv@aexp^0,c
 14995   0032E8  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14996   0032EA  EF79  F019         	goto	u3691
 14997   0032EE  EF7B  F019         	goto	u3690
 14998   0032F2                     u3691:
 14999   0032F2  EF9F  F019         	goto	l1266
 15000   0032F6                     u3690:
 15001   0032F6  0EFF               	movlw	255
 15002   0032F8  1445               	andwf	___fldiv@grs^0,w,c
 15003   0032FA  6E3A               	movwf	??___fldiv^0,c
 15004   0032FC  0EFF               	movlw	255
 15005   0032FE  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15006   003300  6E3B               	movwf	(??___fldiv+1)^0,c
 15007   003302  0EFF               	movlw	255
 15008   003304  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15009   003306  6E3C               	movwf	(??___fldiv+2)^0,c
 15010   003308  0E7F               	movlw	127
 15011   00330A  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15012   00330C  6E3D               	movwf	(??___fldiv+3)^0,c
 15013   00330E  503A               	movf	??___fldiv^0,w,c
 15014   003310  103B               	iorwf	(??___fldiv+1)^0,w,c
 15015   003312  103C               	iorwf	(??___fldiv+2)^0,w,c
 15016   003314  103D               	iorwf	(??___fldiv+3)^0,w,c
 15017   003316  B4D8               	btfsc	status,2,c
 15018   003318  EF90  F019         	goto	u3701
 15019   00331C  EF92  F019         	goto	u3700
 15020   003320                     u3701:
 15021   003320  EF96  F019         	goto	l1267
 15022   003324                     u3700:
 15023   003324                     l4216:
 15024   003324  0E01               	movlw	1
 15025   003326  6E4A               	movwf	___fldiv@aexp^0,c
 15026   003328  EF9F  F019         	goto	l1266
 15027   00332C                     l1267:
 15028   00332C  A032               	btfss	___fldiv@b^0,0,c
 15029   00332E  EF9B  F019         	goto	u3711
 15030   003332  EF9D  F019         	goto	u3710
 15031   003336                     u3711:
 15032   003336  EF9F  F019         	goto	l1266
 15033   00333A                     u3710:
 15034   00333A  EF92  F019         	goto	l4216
 15035   00333E                     l1266:
 15036   00333E  504A               	movf	___fldiv@aexp^0,w,c
 15037   003340  B4D8               	btfsc	status,2,c
 15038   003342  EFA5  F019         	goto	u3721
 15039   003346  EFA7  F019         	goto	u3720
 15040   00334A                     u3721:
 15041   00334A  EFCB  F019         	goto	l4228
 15042   00334E                     u3720:
 15043   00334E  0E01               	movlw	1
 15044   003350  2632               	addwf	___fldiv@b^0,f,c
 15045   003352  0E00               	movlw	0
 15046   003354  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15047   003356  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15048   003358  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15049   00335A  A035               	btfss	(___fldiv@b+3)^0,0,c
 15050   00335C  EFB2  F019         	goto	u3731
 15051   003360  EFB4  F019         	goto	u3730
 15052   003364                     u3731:
 15053   003364  EFCB  F019         	goto	l4228
 15054   003368                     u3730:
 15055   003368  C032  F03A         	movff	___fldiv@b,??___fldiv
 15056   00336C  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15057   003370  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15058   003374  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15059   003378  343D               	rlcf	(??___fldiv+3)^0,w,c
 15060   00337A  323D               	rrcf	(??___fldiv+3)^0,f,c
 15061   00337C  323C               	rrcf	(??___fldiv+2)^0,f,c
 15062   00337E  323B               	rrcf	(??___fldiv+1)^0,f,c
 15063   003380  323A               	rrcf	??___fldiv^0,f,c
 15064   003382  C03A  F032         	movff	??___fldiv,___fldiv@b
 15065   003386  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15066   00338A  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15067   00338E  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15068   003392  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15069   003394  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15070   003396                     l4228:
 15071   003396  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15072   003398  EFD6  F019         	goto	u3741
 15073   00339C  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15074   00339E  E108               	bnz	u3740
 15075   0033A0  2843               	incf	___fldiv@new_exp^0,w,c
 15076   0033A2  A0D8               	btfss	status,0,c
 15077   0033A4  EFD6  F019         	goto	u3741
 15078   0033A8  EFD8  F019         	goto	u3740
 15079   0033AC                     u3741:
 15080   0033AC  EFE3  F019         	goto	l4232
 15081   0033B0                     u3740:
 15082   0033B0  0E00               	movlw	0
 15083   0033B2  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15084   0033B4  6843               	setf	___fldiv@new_exp^0,c
 15085   0033B6  0E00               	movlw	0
 15086   0033B8  6E32               	movwf	___fldiv@b^0,c
 15087   0033BA  0E00               	movlw	0
 15088   0033BC  6E33               	movwf	(___fldiv@b+1)^0,c
 15089   0033BE  0E00               	movlw	0
 15090   0033C0  6E34               	movwf	(___fldiv@b+2)^0,c
 15091   0033C2  0E00               	movlw	0
 15092   0033C4  6E35               	movwf	(___fldiv@b+3)^0,c
 15093   0033C6                     l4232:
 15094   0033C6  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15095   0033C8  EFF0  F019         	goto	u3750
 15096   0033CC  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15097   0033CE  E106               	bnz	u3751
 15098   0033D0  0443               	decf	___fldiv@new_exp^0,w,c
 15099   0033D2  B0D8               	btfsc	status,0,c
 15100   0033D4  EFEE  F019         	goto	u3751
 15101   0033D8  EFF0  F019         	goto	u3750
 15102   0033DC                     u3751:
 15103   0033DC  EFFE  F019         	goto	l4236
 15104   0033E0                     u3750:
 15105   0033E0  0E00               	movlw	0
 15106   0033E2  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15107   0033E4  0E00               	movlw	0
 15108   0033E6  6E43               	movwf	___fldiv@new_exp^0,c
 15109   0033E8  0E00               	movlw	0
 15110   0033EA  6E32               	movwf	___fldiv@b^0,c
 15111   0033EC  0E00               	movlw	0
 15112   0033EE  6E33               	movwf	(___fldiv@b+1)^0,c
 15113   0033F0  0E00               	movlw	0
 15114   0033F2  6E34               	movwf	(___fldiv@b+2)^0,c
 15115   0033F4  0E00               	movlw	0
 15116   0033F6  6E35               	movwf	(___fldiv@b+3)^0,c
 15117   0033F8  0E00               	movlw	0
 15118   0033FA  6E42               	movwf	___fldiv@sign^0,c
 15119   0033FC                     l4236:
 15120   0033FC  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15121   003400  A049               	btfss	___fldiv@bexp^0,0,c
 15122   003402  EF05  F01A         	goto	u3761
 15123   003406  EF07  F01A         	goto	u3760
 15124   00340A                     u3761:
 15125   00340A  EF0A  F01A         	goto	l4242
 15126   00340E                     u3760:
 15127   00340E  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15128   003410  EF0B  F01A         	goto	l4244
 15129   003414                     l4242:
 15130   003414  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15131   003416                     l4244:
 15132   003416  90D8               	bcf	status,0,c
 15133   003418  3049               	rrcf	___fldiv@bexp^0,w,c
 15134   00341A  6E35               	movwf	(___fldiv@b+3)^0,c
 15135   00341C  EFC1  F018         	goto	l4158
 15136   003420                     l1253:
 15137   003420  0012               	return		;funcret
 15138   003422                     __end_of___fldiv:
 15139                           	callstack 0
 15140                           
 15141 ;; *************** function _HighISR *****************
 15142 ;; Defined at:
 15143 ;;		line 23 in file "interrupts.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;		None
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;		None
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      void 
 15150 ;; Registers used:
 15151 ;;		wreg, status,2
 15152 ;; Tracked objects:
 15153 ;;		On entry : 0/0
 15154 ;;		On exit  : 0/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15161 ;;Total ram usage:        0 bytes
 15162 ;; Hardware stack levels used: 1
 15163 ;; This function calls:
 15164 ;;		Nothing
 15165 ;; This function is called by:
 15166 ;;		Interrupt level 2
 15167 ;; This function uses a non-reentrant model
 15168 ;;
 15169                           
 15170                           	psect	intcode
 15171   000008                     __pintcode:
 15172                           	callstack 0
 15173   000008                     _HighISR:
 15174                           	callstack 22
 15175                           
 15176                           ;incstack = 0
 15177   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15178   00000A                     
 15179                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15180   00000A  010E               	movlb	14	; () banked
 15181   00000C  AB33               	btfss	51,5,b	;volatile
 15182   00000E  EF0B  F000         	goto	i2u560_41
 15183   000012  EF0D  F000         	goto	i2u560_40
 15184   000016                     i2u560_41:
 15185   000016  EF18  F000         	goto	i2l225
 15186   00001A                     i2u560_40:
 15187   00001A                     
 15188                           ; BSR set to: 14
 15189                           ;interrupts.c: 26:         TMR0H=0;
 15190   00001A  0E00               	movlw	0
 15191   00001C  6ED4               	movwf	212,c	;volatile
 15192                           
 15193                           ;interrupts.c: 27:         TMR0L=0;
 15194   00001E  0E00               	movlw	0
 15195   000020  6ED3               	movwf	211,c	;volatile
 15196                           
 15197                           ;interrupts.c: 28:         lost_flag=1;
 15198   000022  0E00               	movlw	0
 15199   000024  0101               	movlb	1	; () banked
 15200   000026  6F19               	movwf	(_lost_flag+1)& (0+255),b
 15201   000028  0E01               	movlw	1
 15202   00002A  6F18               	movwf	_lost_flag& (0+255),b
 15203   00002C                     
 15204                           ; BSR set to: 1
 15205                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15206   00002C  010E               	movlb	14	; () banked
 15207   00002E  9B33               	bcf	51,5,b	;volatile
 15208   000030                     i2l225:
 15209                           
 15210                           ; BSR set to: 14
 15211   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15212   000032  0011               	retfie		f
 15213   000034                     __end_of_HighISR:
 15214                           	callstack 0
 15215                           
 15216                           	psect	rparam
 15217   000000                     
 15218                           	psect	temp
 15219   00005F                     btemp:
 15220                           	callstack 0
 15221   00005F                     	ds	1
 15222   000000                     int$flags	set	btemp
 15223   000000                     wtemp8	set	btemp+1
 15224   000000                     ttemp5	set	btemp+1
 15225   000000                     ttemp6	set	btemp+4
 15226   000000                     ttemp7	set	btemp+8
 15227                           
 15228                           	psect	idloc
 15229                           
 15230                           ;Config register IDLOC0 @ 0x200000
 15231                           ;	unspecified, using default values
 15232   200000                     	org	2097152
 15233   200000  0FFF               	dw	4095
 15234                           
 15235                           ;Config register IDLOC1 @ 0x200002
 15236                           ;	unspecified, using default values
 15237   200002                     	org	2097154
 15238   200002  0FFF               	dw	4095
 15239                           
 15240                           ;Config register IDLOC2 @ 0x200004
 15241                           ;	unspecified, using default values
 15242   200004                     	org	2097156
 15243   200004  0FFF               	dw	4095
 15244                           
 15245                           ;Config register IDLOC3 @ 0x200006
 15246                           ;	unspecified, using default values
 15247   200006                     	org	2097158
 15248   200006  0FFF               	dw	4095
 15249                           
 15250                           ;Config register IDLOC4 @ 0x200008
 15251                           ;	unspecified, using default values
 15252   200008                     	org	2097160
 15253   200008  0FFF               	dw	4095
 15254                           
 15255                           ;Config register IDLOC5 @ 0x20000A
 15256                           ;	unspecified, using default values
 15257   20000A                     	org	2097162
 15258   20000A  0FFF               	dw	4095
 15259                           
 15260                           ;Config register IDLOC6 @ 0x20000C
 15261                           ;	unspecified, using default values
 15262   20000C                     	org	2097164
 15263   20000C  0FFF               	dw	4095
 15264                           
 15265                           ;Config register IDLOC7 @ 0x20000E
 15266                           ;	unspecified, using default values
 15267   20000E                     	org	2097166
 15268   20000E  0FFF               	dw	4095
 15269                           
 15270                           	psect	config
 15271                           
 15272                           ;Config register CONFIG1L @ 0x300000
 15273                           ;	External Oscillator mode Selection bits
 15274                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15275                           ;	Power-up default value for COSC bits
 15276                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15277   300000                     	org	3145728
 15278   300000  AA                 	db	170
 15279                           
 15280                           ;Config register CONFIG1H @ 0x300001
 15281                           ;	unspecified, using default values
 15282                           ;	Clock Out Enable bit
 15283                           ;	CLKOUTEN = 0x1, unprogrammed default
 15284                           ;	Clock Switch Enable bit
 15285                           ;	CSWEN = 0x1, unprogrammed default
 15286                           ;	Fail-Safe Clock Monitor Enable bit
 15287                           ;	FCMEN = 0x1, unprogrammed default
 15288   300001                     	org	3145729
 15289   300001  FF                 	db	255
 15290                           
 15291                           ;Config register CONFIG2L @ 0x300002
 15292                           ;	unspecified, using default values
 15293                           ;	Master Clear Enable bit
 15294                           ;	MCLRE = 0x1, unprogrammed default
 15295                           ;	Power-up Timer Enable bit
 15296                           ;	PWRTE = 0x1, unprogrammed default
 15297                           ;	Low-power BOR enable bit
 15298                           ;	LPBOREN = 0x1, unprogrammed default
 15299                           ;	Brown-out Reset Enable bits
 15300                           ;	BOREN = 0x3, unprogrammed default
 15301   300002                     	org	3145730
 15302   300002  FF                 	db	255
 15303                           
 15304                           ;Config register CONFIG2H @ 0x300003
 15305                           ;	unspecified, using default values
 15306                           ;	Brown Out Reset Voltage selection bits
 15307                           ;	BORV = 0x3, unprogrammed default
 15308                           ;	ZCD Disable bit
 15309                           ;	ZCD = 0x1, unprogrammed default
 15310                           ;	PPSLOCK bit One-Way Set Enable bit
 15311                           ;	PPS1WAY = 0x1, unprogrammed default
 15312                           ;	Stack Full/Underflow Reset Enable bit
 15313                           ;	STVREN = 0x1, unprogrammed default
 15314                           ;	Debugger Enable bit
 15315                           ;	DEBUG = 0x1, unprogrammed default
 15316                           ;	Extended Instruction Set Enable bit
 15317                           ;	XINST = 0x1, unprogrammed default
 15318   300003                     	org	3145731
 15319   300003  FF                 	db	255
 15320                           
 15321                           ;Config register CONFIG3L @ 0x300004
 15322                           ;	WDT Period Select bits
 15323                           ;	WDTCPS = 0x1F, unprogrammed default
 15324                           ;	WDT operating mode
 15325                           ;	WDTE = OFF, WDT Disabled
 15326   300004                     	org	3145732
 15327   300004  9F                 	db	159
 15328                           
 15329                           ;Config register CONFIG3H @ 0x300005
 15330                           ;	unspecified, using default values
 15331                           ;	WDT Window Select bits
 15332                           ;	WDTCWS = 0x7, unprogrammed default
 15333                           ;	WDT input clock selector
 15334                           ;	WDTCCS = 0x7, unprogrammed default
 15335   300005                     	org	3145733
 15336   300005  FF                 	db	255
 15337                           
 15338                           ;Config register CONFIG4L @ 0x300006
 15339                           ;	unspecified, using default values
 15340                           ;	Write Protection Block 0
 15341                           ;	WRT0 = 0x1, unprogrammed default
 15342                           ;	Write Protection Block 1
 15343                           ;	WRT1 = 0x1, unprogrammed default
 15344                           ;	Write Protection Block 2
 15345                           ;	WRT2 = 0x1, unprogrammed default
 15346                           ;	Write Protection Block 3
 15347                           ;	WRT3 = 0x1, unprogrammed default
 15348                           ;	Write Protection Block 3
 15349                           ;	WRT4 = 0x1, unprogrammed default
 15350                           ;	Write Protection Block 3
 15351                           ;	WRT5 = 0x1, unprogrammed default
 15352                           ;	Write Protection Block 3
 15353                           ;	WRT6 = 0x1, unprogrammed default
 15354                           ;	Write Protection Block 3
 15355                           ;	WRT7 = 0x1, unprogrammed default
 15356   300006                     	org	3145734
 15357   300006  FF                 	db	255
 15358                           
 15359                           ;Config register CONFIG4H @ 0x300007
 15360                           ;	unspecified, using default values
 15361                           ;	Configuration Register Write Protection bit
 15362                           ;	WRTC = 0x1, unprogrammed default
 15363                           ;	Boot Block Write Protection bit
 15364                           ;	WRTB = 0x1, unprogrammed default
 15365                           ;	Data EEPROM Write Protection bit
 15366                           ;	WRTD = 0x1, unprogrammed default
 15367                           ;	Scanner Enable bit
 15368                           ;	SCANE = 0x1, unprogrammed default
 15369                           ;	Low Voltage Programming Enable bit
 15370                           ;	LVP = 0x1, unprogrammed default
 15371   300007                     	org	3145735
 15372   300007  FF                 	db	255
 15373                           
 15374                           ;Config register CONFIG5L @ 0x300008
 15375                           ;	unspecified, using default values
 15376                           ;	UserNVM Program Memory Code Protection bit
 15377                           ;	CP = 0x1, unprogrammed default
 15378                           ;	DataNVM Memory Code Protection bit
 15379                           ;	CPD = 0x1, unprogrammed default
 15380   300008                     	org	3145736
 15381   300008  FF                 	db	255
 15382                           
 15383                           ;Config register CONFIG5H @ 0x300009
 15384                           ;	unspecified, using default values
 15385   300009                     	org	3145737
 15386   300009  FF                 	db	255
 15387                           
 15388                           ;Config register CONFIG6L @ 0x30000A
 15389                           ;	unspecified, using default values
 15390                           ;	Table Read Protection Block 0
 15391                           ;	EBTR0 = 0x1, unprogrammed default
 15392                           ;	Table Read Protection Block 1
 15393                           ;	EBTR1 = 0x1, unprogrammed default
 15394                           ;	Table Read Protection Block 2
 15395                           ;	EBTR2 = 0x1, unprogrammed default
 15396                           ;	Table Read Protection Block 3
 15397                           ;	EBTR3 = 0x1, unprogrammed default
 15398                           ;	Table Read Protection Block 4
 15399                           ;	EBTR4 = 0x1, unprogrammed default
 15400                           ;	Table Read Protection Block 5
 15401                           ;	EBTR5 = 0x1, unprogrammed default
 15402                           ;	Table Read Protection Block 6
 15403                           ;	EBTR6 = 0x1, unprogrammed default
 15404                           ;	Table Read Protection Block 7
 15405                           ;	EBTR7 = 0x1, unprogrammed default
 15406   30000A                     	org	3145738
 15407   30000A  FF                 	db	255
 15408                           
 15409                           ;Config register CONFIG6H @ 0x30000B
 15410                           ;	unspecified, using default values
 15411                           ;	Boot Block Table Read Protection bit
 15412                           ;	EBTRB = 0x1, unprogrammed default
 15413   30000B                     	org	3145739
 15414   30000B  FF                 	db	255
 15415                           tosu	equ	0xFFF
 15416                           tosh	equ	0xFFE
 15417                           tosl	equ	0xFFD
 15418                           stkptr	equ	0xFFC
 15419                           pclatu	equ	0xFFB
 15420                           pclath	equ	0xFFA
 15421                           pcl	equ	0xFF9
 15422                           tblptru	equ	0xFF8
 15423                           tblptrh	equ	0xFF7
 15424                           tblptrl	equ	0xFF6
 15425                           tablat	equ	0xFF5
 15426                           prodh	equ	0xFF4
 15427                           prodl	equ	0xFF3
 15428                           indf0	equ	0xFEF
 15429                           postinc0	equ	0xFEE
 15430                           postdec0	equ	0xFED
 15431                           preinc0	equ	0xFEC
 15432                           plusw0	equ	0xFEB
 15433                           fsr0h	equ	0xFEA
 15434                           fsr0l	equ	0xFE9
 15435                           wreg	equ	0xFE8
 15436                           indf1	equ	0xFE7
 15437                           postinc1	equ	0xFE6
 15438                           postdec1	equ	0xFE5
 15439                           preinc1	equ	0xFE4
 15440                           plusw1	equ	0xFE3
 15441                           fsr1h	equ	0xFE2
 15442                           fsr1l	equ	0xFE1
 15443                           bsr	equ	0xFE0
 15444                           indf2	equ	0xFDF
 15445                           postinc2	equ	0xFDE
 15446                           postdec2	equ	0xFDD
 15447                           preinc2	equ	0xFDC
 15448                           plusw2	equ	0xFDB
 15449                           fsr2h	equ	0xFDA
 15450                           fsr2l	equ	0xFD9
 15451                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        6
    BSS         383
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     150
    BANK1           256    106     220
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2793$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2709$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2709$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  411209
                                            113 BANK0      2     2      0
                                              0 BANK1    106   106      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35627
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35272
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34919
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29073
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159707
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4   16076
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23679
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4006
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _reverseDetect
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6A      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C0      62        0.0%
DATA                 0      0     2C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 21:51:34 2023

               _color_read_Red 5A8E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5A3E                   ___fldiv@sign 0042                _color_read_Blue 5B2E  
                           l51 5A8C                             l60 5B7C                             l45 5948  
                           l54 5ADC                             l63 5642                             l48 5FC6  
                           l57 5B2C                             l66 374E                             l76 1872  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 41C6  
             _color_read_Green 5ADE                readColours@vals 000C              ??_Interrupts_init 0001  
                          l130 5F32                            l204 5F08                            l133 5F34  
                          l142 603E                            l151 5D76                            l136 5F5A  
                          l145 6048                            l219 6034                            l139 6052  
                          l148 6028                            l511 5ED8                            l520 5750  
                          l505 521C                            l514 5C18                            l186 6004  
                          l523 56F6                            l195 6008                            l508 5EBE  
                          l452 5342                            l356 234A                            l517 5C66  
                          l541 55E4                            l550 58A4                            l526 569C  
                          l630 3D0C                            l198 601C                            l535 5DF4  
                          l544 599A                            l624 3D0C                            l465 53C0  
                          l529 57AA                            l473 517E                            l481 50E0  
                          l553 58F6                            l538 5E32                            l562 4EEE  
                          l570 431E                            l378 274E                            l459 484C  
                          l547 59EC                            l571 42E6                            l387 279A  
                          l556 5518                            l636 3D34                            l565 4354  
                          l662 5F80                            l566 41E4                            l671 5FA6  
                          l559 4E38                            l576 433A                            l568 423A  
                          l489 52BA                            l665 5E8C                            l497 4F98  
                          l577 438A                            l569 42AE                            l930 5042  
                          l578 43A4                            l659 5FE6                            l668 5EA2  
                          l941 4BBA                            l936 4B74                            l785 46E0  
                          l945 5E6A                            l798 49B0                            l968 4AB6  
                          _abs 5D78                            _pad 53C2                            _rel 014C  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           l1200 297A  
                         l1201 2940                           ?_abs 0013                           l1302 3048  
                         l1216 2AA6                           l1208 2C5C                           l1225 2B76  
                         l1241 5CAC                           l1226 2B64                           l1162 54A6  
                         l1340 44F0                           l1500 5DAE                           l1404 3FB2  
                         l1420 1A4C                           l1253 3420                           l1333 4494  
                         l1326 43FC                           l1255 3280                           l1503 5DB6  
                         l1415 226C                           l1264 32C6                           l4000 547A  
                         l1512 4108                           l1520 556E                           l1329 4558  
                         l1169 54AE                           l1266 333E                           l1258 3244  
                         l4002 5490                           l4010 5CF2                           l1418 1C06  
                         l1267 332C                           l1523 557E                           l1292 2F18  
                         l4004 5498                           l4020 46FE                           l4100 4928  
                         l4012 5CFE                           l1285 2D22                           l1541 4D82  
                         l1381 53E4                           l1509 41C4                           l1349 5852  
                         l1294 2F90                           l4006 549A                           l4030 47C8  
                         l4022 4752                           l4110 4990                           l4102 4948  
                         l4014 5D10                           l1390 3DC2                           l1295 2F7E  
                         l1199 298C                           l1463 3A54                           l4200 32A6  
                         l4120 30A4                           l4008 54A0                           l4032 480C  
                         l4024 4766                           l4040 458C                           l4104 495A  
                         l1552 605A                           l4016 5D14                           l1392 3DCA  
                         l1448 204E                           l5000 383E                           l1289 3086  
                         l1385 543A                           l1393 3E10                           l1529 5A3C  
                         l4210 32E4                           l4202 32AC                           l4122 30B4  
                         l4130 30DE                           l4114 3088                           l4026 476A  
                         l4018 46E2                           l4050 45CE                           l4042 4590  
                         l4034 455A                           l4106 4960                           l5010 389C  
                         l4220 334E                           l4212 32E8                           l4204 32B6  
                         l4140 310A                           l4132 30EE                           l4124 30C4  
                         l4116 3094                           l4300 2D8E                           l4028 47AC  
                         l5100 5B74                           l4060 4628                           l4052 45EC  
                         l4044 459E                           l4036 455E                           l4108 4970  
                         l5020 3902                           l5012 38A4                           l5004 386E  
                         l1549 5D34                           l1485 5800                           l4230 33B0  
                         l4222 335A                           l4214 32F6                           l4206 32C4  
                         l4142 311A                           l4150 3144                           l4134 30F4  
                         l4126 30D4                           l4118 30A2                           l4310 2DD8  
                         l4302 2DA6                           l5110 5854                           l4062 4656  
                         l4054 45F4                           l4070 4690                           l4046 45BE  
                         l4038 456C                           l1558 5CF0                           l5030 39B4  
                         l5022 3936                           l5006 387E                           l1495 4CB8  
                         l4240 340E                           l4232 33C6                           l4224 3368  
                         l4216 3324                           l4208 32D6                           l4160 3186  
                         l4152 3154                           l4144 312A                           l4136 30FA  
                         l4128 30D6                           l4400 5040                           l4320 2E2E  
                         l4312 2DE8                           l4304 2DB2                           l5200 58F8  
                         l5112 5580                           l5120 4F14                           l5104 6008  
                         l4072 46A0                           l4064 4676                           l4056 4608  
                         l4048 45C2                           l4080 4852                           l5008 3894  
                         l5016 38AC                           l4242 3414                           l4234 33E0  
                         l4226 3392                           l4154 316A                           l4146 313A  
                         l4138 3108                           l4410 4B24                           l4330 2ED2  
                         l4322 2E4A                           l4314 2DF4                           l4306 2DBE  
                         l5210 592A                           l5202 58FC                           l5114 5DF6  
                         l5130 4F74                           l5122 4F2C                           l5106 6018  
                         l4074 46C0                           l4066 4678                           l4058 4616  
                         l4090 48B2                           l4082 4860                           l5026 396A  
                         l5018 38DE                           l5042 3A28                           l4244 3416  
                         l4236 33FC                           l4228 3396                           l4180 3208  
                         l4172 31BE                           l4156 317A                           l4164 319A  
                         l4148 313C                           l4420 4BB2                           l4412 4B34  
                         l4404 4AB8                           l4340 2F28                           l4332 2EE0  
                         l4324 2E56                           l4316 2E04                           l4308 2DCC  
                         l4260 2C8A                           l4252 2C5E                           l5300 130E  
                         l5220 593C                           l5212 5934                           l5204 5906  
                         l5116 58A6                           l5108 5DB8                           l5140 4D84  
                         l5132 4F8C                           l5124 4F38                           l4068 468A  
                         l4092 48D0                           l4084 4880                           l4500 4C1A  
                         l5036 39E6                           l5028 3994                           l4238 3400  
                         l4190 324E                           l4182 3210                           l4174 31D8  
                         l4166 31AA                           l4158 3182                           l4422 4BB8  
                         l4414 4B42                           l4406 4AE6                           l4342 2F36  
                         l4334 2EFE                           l4326 2E72                           l4318 2E1E  
                         l4270 2CC6                           l4262 2C9A                           l4254 2C6A  
                         l5150 440C                           l5302 1366                           l5134 569E  
                         l5070 5F1A                           l5230 5946                           l5222 593E  
                         l5214 5936                           l5206 5916                           l5142 4E3A  
                         l5126 4F44                           l5118 4EF0                           l4094 48D8  
                         l4086 4884                           l4078 484E                           l4430 5E5A  
                         l4510 4C6C                           l4502 4C42                           l5038 3A16  
                         l4192 326C                           l4184 3220                           l4176 31E8  
                         l4168 31AA                           l4416 4B54                           l4408 4AF6  
                         l4352 2FA0                           l4360 2FE8                           l4344 2F3A  
                         l4336 2F08                           l4328 2E9C                           l4280 2CFC  
                         l4272 2CCC                           l4264 2CAA                           l4256 2C78  
                         l3800 27EC                           l5160 444A                           l5152 4422  
                         l5144 43A8                           l5400 183C                           l5304 1398  
                         l5312 13D6                           l5136 56B2                           l4600 5106  
                         l5072 5F1C                           l5224 5940                           l5216 5938  
                         l5208 5920                           l5240 35B6                           l5128 4F5C  
                         l5080 5A3E                           l5232 55E6                           l4096 48EC  
                         l4088 4892                           l4440 49DC                           l4504 4C4E  
                         l4520 5CBE                           l4194 326E                           l4186 3234  
                         l4178 31F8                           l4418 4B62                           l4370 305C  
                         l4362 3002                           l4354 2FAC                           l4346 2F48  
                         l4338 2F16                           l4282 2D0C                           l4274 2CDA  
                         l4266 2CB0                           l4258 2C7A                           l3810 281E  
                         l3802 27F4                           l5170 44D2                           l5162 447C  
                         l5146 43B8                           l5314 1408                           l5322 1446  
                         l5306 13CA                           l5250 0E68                           l5138 56CA  
                         l4610 5166                           l4602 511E                           l5074 5F1E  
                         l5066 5F0A                           l5226 5942                           l5218 593A  
                         l5242 35EA                           l5234 3422                           l5082 5A84  
                         l4098 48FA                           l4426 5E34                           l4450 4A2A  
                         l4442 4A06                           l4434 49B2                           l4514 4CB0  
                         l4530 402A                           l4522 551A                           l4196 327E  
                         l4188 3242                           l4372 306A                           l4364 3016  
                         l4356 2FBA                           l4348 2F76                           l4292 2D56  
                         l4284 2D12                           l4276 2CDC                           l4268 2CC0  
                         l3900 29F6                           l3820 2854                           l3812 2824  
                         l3804 2804                           l5180 4528                           l5172 44E0  
                         l5164 447E                           l5156 4436                           l5148 43C6  
                         l5340 159E                           l5324 1478                           l5316 143A  
                         l5252 0E74                           l4604 512A                           l4620 5098  
                         l4612 5044                           l5076 5F20                           l5068 5F14  
                         l5228 5944                           l5244 3682                           l5236 34EE  
                         l5420 6000                           l5412 5FE8                           l5092 5ADE  
                         l4428 5E4A                           l4460 4A56                           l4444 4A08  
                         l4436 49C8                           l4508 4C5A                           l4540 40F8  
                         l4532 403E                           l4524 5538                           l4700 187A  
                         l5500 4300                           l4198 3290                           l4390 4FC8  
                         l4374 306C                           l4366 3030                           l4358 2FE4  
                         l4294 2D62                           l4286 2D32                           l4278 2CEC  
                         l3902 29FA                           l3910 2A1A                           l3830 2890  
                         l3822 2864                           l3814 2832                           l3806 280A  
                         l4382 5C68                           l5182 4538                           l5174 44FE  
                         l5166 448A                           l5158 443E                           l5326 14AA  
                         l5350 15B6                           l5270 0FA2                           l5254 0EA4  
                         l4630 51BC                           l4606 5136                           l4614 5068  
                         l4622 50B0                           l5078 5FAA                           l5246 36B6  
                         l5238 3522                           l5422 6002                           l5414 5FF2  
                         l5094 5B24                           l5086 5A8E                           l5430 5EF0  
                         l4470 4A86                           l4446 4A18                           l4550 41B4  
                         l4534 404C                           l4542 412C                           l4526 3FB4  
                         l4518 5CAE                           l4710 18CA                           l4702 188A  
                         l5190 57AC                           l5510 438C                           l5502 4318  
                         ?_pad 0011                           l4392 4FD8                           l4368 304C  
                         l4376 3072                           l4296 2D6C                           l4288 2D42  
                         l3912 2A40                           l3920 2A96                           l3904 2A08  
                         l3840 28AE                           l3832 289E                           l3824 2866  
                         l3816 2834                           l3808 281C                           l4384 5C78  
                         l5184 4546                           l5176 4500                           l5168 44C6  
                         l5352 15E8                           l5360 1626                           l5328 14E4  
                         l5336 1526                           l5280 10A0                           l5272 0FF6  
                         l5264 0F16                           l5256 0ED8                           l5248 0E3E  
                         l5520 5766                           l5432 602A                           l4632 51C8  
                         l4640 5EA4                           l4608 514E                           l4624 50C8  
                         l4616 5080                           l5512 5F5C                           l5440 52D2  
                         l5416 5FF4                           l5088 5AD4                           l5424 5EDA  
                         l4480 53D0                           l4472 4A96                           l4456 4A42  
                         l4448 4A1C                           l4544 4168                           l4528 3FD4  
                         l4560 5A12                           l4800 1C5E                           l4720 1906  
                         l4712 18D2                           l4704 1898                           l5192 57B8  
                         l5504 431E                           l5600 2272                           l4394 5006  
                         l4378 3076                           l4298 2D82                           l3930 2AEA  
                         l3922 2ABC                           l3914 2A74                           l3906 2A0A  
                         l3850 28C2                           l3842 28B2                           l3834 28A2  
                         l3818 2844                           l3826 286E                           l5186 4548  
                         l5178 4504                           l5362 1658                           l5354 161A  
                         l5338 1560                           l5346 15AA                           l5290 1170  
                         l5274 1028                           l5266 0F68                           l5258 0F0C  
                         l4570 521E                           l5522 577E                           l4634 51D4  
                         l4626 5180                           l4642 5EA8                           l4618 508C  
                         l5514 5F5E                           l5450 531C                           l5442 52D4  
                         l5434 52BC                           l5418 5FFE                           l5098 5B2E  
                         l5426 5EDE                           l3770 4CDE                           l4490 5426  
                         l4482 53DC                           l4650 3D6A                           l4474 4AA6  
                         l4466 4A6A                           l4458 4A4C                           l4546 417C  
                         l4538 40BC                           l4562 5A1E                           l4554 59EE  
                         l4810 1CA8                           l4802 1C76                           l4730 194C  
                         l4714 18E2                           l4722 190A                           l4706 189C  
                         l5194 57D6                           l5530 5824                           l5506 432C  
                         l5610 228E                           l5602 2276                           l4396 5016  
                         l4388 4F9A                           l3940 2B14                           l3932 2AF8  
                         l3924 2ACC                           l3916 2A76                           l3908 2A14  
                         l3860 28D6                           l3852 28C6                           l3844 28B6  
                         l3836 28A6                           l3828 287E                           l5364 168A  
                         l5292 11A8                           l5284 10AC                           l5276 102E  
                         l5268 0F9A                           l3780 5F82                           l4572 5242  
                         l4580 528A                           l4628 51A4                           l4636 51EC  
                         l4644 5EB8                           l5540 54B0                           l5516 5F64  
                         l5460 5336                           l5452 531E                           l5444 52EA  
                         l5436 52CE                           l5428 5EEC                           l4492 5D78  
                         l3772 4CE8                           l4484 53F0                           l4660 3DE2  
                         l4652 3D7A                           l4468 4A76                           l4548 41A4  
                         l4556 5A02                           l4564 5A22                           l4900 21B0  
                         l4812 1CBC                           l4820 1DB2                           l4804 1C88  
                         l4732 1954                           l4724 1930                           l4740 1996  
                         l4716 18F2                           l4708 18C0                           l5196 57F6  
                         l5532 5840                           l5524 5802                           l5508 433C  
                         l5700 2380                           l5620 229A                           l5612 2290  
                         l5604 227A                           l4398 503A                           l3950 2B46  
                         l3942 2B24                           l3934 2AFA                           l3918 2A86  
                         l3870 2928                           l3862 28DA                           l3854 28CA  
                         l3846 28BA                           l3838 28AA                           l3790 27B8  
                         l5390 17CC                           l5366 16C8                           l5374 1712  
                         l5294 11BA                           l5286 10C0                           l5278 104A  
                         l3782 5F9E                           l4582 52A2                           l4574 525A  
                         l4590 536C                           l5518 5752                           l4638 5204  
                         l5542 54EC                           l5470 5FE4                           l4566 5F34  
                         l5550 3A6C                           l5462 5340                           l5454 5328  
                         l5446 52EE                           l5438 52D0                           l4494 5D92  
                         l3774 4D06                           l3766 4CBA                           l4486 5404  
                         l4478 53C2                           l4670 3E18                           l4662 3DE8  
                         l4654 3D9A                           l4646 3D36                           l4558 5A0E  
                         l4910 221E                           l4902 21B8                           l4830 1E7E  
                         l4822 1DD0                           l4814 1D20                           l4806 1C90  
                         l4750 19E0                           l4742 19BC                           l4734 196C  
                         l4726 1942                           l4718 18FE                           l5526 5814  
                         l5710 23D6                           l5702 2394                           l5630 22A4  
                         l5622 229C                           l5614 2292                           l5606 227E  
                         l3960 2BA0                           l3952 2B5C                           l3936 2B08  
                         l3928 2AE0                           l3944 2B26                           l3880 296C  
                         l3872 2938                           l3856 28CE                           l3848 28BE  
                         l3864 28DE                           l3792 27BA                           l5392 17FE  
                         l5376 1750                           l5368 1706                           l5296 1236  
                         l5288 1160                           l4576 5266                           l4592 5378  
                         l4584 5344                           l5544 5504                           l5464 5FC8  
                         l5536 594A                           l4568 5F44                           l4920 604A  
                         l5560 3ADC                           l5552 3A74                           l5456 532A  
                         l5448 5312                           l3776 4D3C                           l3768 4CCC  
                         l4488 5408                           l4680 3EB6                           l4672 3E22  
                         l4664 3DF8                           l4656 3DB6                           l4648 3D56  
                         l4496 4BBC                           l4912 222E                           l4904 21C8  
                         l4840 1F2E                           l4832 1E8E                           l4824 1E04  
                         l4816 1D78                           l4808 1C98                           l4760 1A16  
                         l4744 19CE                           l4736 1976                           l4728 1946  
                         l5528 581C                           l5480 428A                           l5472 41C6  
                         l5800 26C6                           l5720 242C                           l5712 23DA  
                         l5704 23A0                           l5640 22AE                           l5632 22A6  
                         l5624 229E                           l5616 2294                           l5608 228A  
                         l3970 2C1C                           l3962 2BDA                           l3938 2B10  
                         l3946 2B34                           l3882 296E                           l3874 294E  
                         l3866 28E2                           l3858 28D2                           l3794 27CA  
                         l3786 279E                           l5378 178E                           l5298 1292  
                         l4578 5272                           l4586 5348                           l4594 5390  
                         l5538 599C                           l5466 5FD0                           l4922 604E  
                         l4930 6044                           l5570 3BB4                           l5562 3B08  
                         l5546 3A56                           l5458 5334                           l4690 3F7C  
                         l4674 3E28                           l4682 3F1A                           l4666 3E04  
                         l4658 3DD2                           l4498 4BDC                           l4914 2244  
                         l4906 21F8                           l4850 1F92                           l4842 1F62  
                         l4834 1E9E                           l4826 1E36                           l4818 1DAC  
                         l4770 1AD4                           l4746 19D2                           l5490 42C6  
                         l5482 428E                           l5474 41C8                           l5810 270C  
                         l5802 26DA                           l5730 2486                           l5722 2440  
                         l5714 23EE                           l5706 23B4                           l5650 22B8  
                         l5642 22B0                           l5634 22A8                           l5626 22A0  
                         l5618 2296                           l3980 2C3C                           l3972 2C20  
                         l3956 2B86                           l3964 2BDC                           l3948 2B38  
                         l3892 29BE                           l3884 2978                           l3876 295A  
                         l3868 290C                           l3796 27DA                           l3788 27AA  
                         l5388 179A                           l4596 53A8                           l4588 5360  
                         l5468 5FDA                           l4924 6020                           l5580 3C8A  
                         l5572 3BDE                           l5564 3B32                           l5556 3A86  
                         l5548 3A6A                           l4940 5D44                           l4932 6036  
                         l4692 3F82                           l4684 3F34                           l4676 3EAA  
                         l4668 3E0C                           l4916 224C                           l4908 2206  
                         l4860 2044                           l4852 1F98                           l4844 1F76  
                         l4836 1ED2                           l4828 1E4C                           l4780 1B94  
                         l4772 1B06                           l4764 1A5C                           l4748 19D8  
                         l5492 42C8                           l5484 42A6                           l5476 41E6  
                         l5820 2768                           l5812 2724                           l5804 26DE  
                         l5740 2522                           l5724 245C                           l5716 2406  
                         l5732 248E                           l5708 23D2                           l5660 22CA  
                         l5652 22BA                           l5644 22B2                           l5636 22AA  
                         l5628 22A2                           l3982 2C4A                           l3974 2C2E  
                         l3966 2BEC                           l3958 2B92                           l3894 29CE  
                         l3886 299A                           l3878 295E                           l3798 27EA  
                         l5398 180A                           l3990 5444                           l4598 50E2  
                         l4926 6024                           l4950 5E6C                           l5582 3CB6  
                         l5574 3C0A                           l5566 3B5E                           l5558 3AB4  
                         l4942 5D4C                           l4934 603A                           l4694 3F92  
                         l4686 3F52                           l4678 3EB0                           l4870 2088  
                         l4862 2060                           l4854 1FA0                           l4838 1F28  
                         l4846 1F7A                           l4790 1C2A                           l4774 1B44  
                         l4766 1A62                           l4758 19FC                           l5494 42E0  
                         l5486 42A8                           l5478 423C                           l5814 2736  
                         l5806 26E2                           l5750 2568                           l5742 2536  
                         l5734 24AC                           l5726 2476                           l5718 2420  
                         l5670 22EA                           l5662 22D2                           l5654 22BC  
                         l5646 22B4                           l5638 22AC                           l3984 2C4C  
                         l3976 2C34                           l3968 2BFC                           l3896 29DC  
                         l3888 29AA                           l3992 5456                           l4960 5BEC  
                         l4928 6040                           l4952 5E78                           l5584 3CE0  
                         l5576 3C34                           l5568 3B88                           l4944 5D72  
                         l4936 5D38                           l4688 3F6C                           l4872 2090  
                         l4864 206E                           l4880 20B0                           l4856 1FAC  
                         l4848 1F8A                           l4792 1C32                           l4776 1B58  
                         l4784 1BD4                           l4768 1A96                           l5496 42F4  
                         l5488 42BC                           l5808 26F8                           l5760 25AE  
                         l5752 257C                           l5744 253A                           l5736 2502  
                         l5728 247E                           l5816 2752                           l5824 2786  
                         l5680 2306                           l5672 22EE                           l5664 22DA  
                         l5656 22C2                           l5648 22B6                           l3978 2C36  
                         l3898 29EA                           l3994 545E                           l4970 5C4E  
                         l4962 5C00                           l4954 5E88                           l5586 3D20  
                         l5578 3C60                           l4946 5D74                           l4938 5D3C  
                         l4890 2136                           l4882 20C2                           l4874 20A0  
                         l4866 207E                           l4858 2024                           l4794 1C3A  
                         l4786 1C0E                           l4778 1B8C                           l4698 1874  
                         l5498 42FE                           l5818 2764                           l5770 25F4  
                         l5762 25C2                           l5754 2580                           l5746 253E  
                         l5738 250E                           l5690 232E                           l5682 230E  
                         l5674 22F6                           l5666 22E2                           l5658 22C6  
                         l3996 5466                           l3988 543C                           l4972 56F8  
                         l4964 5C1A                           l4956 5BCC                           l4980 5658  
                         l5588 3D2A                           l4892 216A                           l4884 20D4  
                         l4876 20A4                           l4868 2082                           l4796 1C3E  
                         l4788 1C1E                           l5780 263A                           l5772 2608  
                         l5764 25C6                           l5756 2584                           l5748 2554  
                         l5692 2330                           l5684 2316                           l5676 22FE  
                         l5668 22E6                           l3998 5474                           l4974 570C  
                         l4966 5C2E                           l4958 5BE0                           l4982 5670  
                         l4894 2172                           l4886 20D8                           l4878 20AA  
                         l4798 1C50                           l4990 3794                           l5790 2680  
                         l5782 264E                           l5774 260C                           l5766 25CA  
                         l5758 259A                           l5694 2358                           l5686 231A  
                         l5678 2306                           l5598 226E                           l4976 5724  
                         l4968 5C3A                           l4888 20DE                           l4896 2176  
                         l4992 3798                           l4984 3750                           l5792 2694  
                         l5784 2652                           l5776 2610                           l5768 25E0  
                         l5696 2372                           l5688 231A                           l4978 5644  
                         l4898 2194                           l5970 3A08                           l4994 37A8  
                         l4986 3778                           l5794 2698                           l5786 2656  
                         l5778 2626                           l5698 2378                           l4996 37C8  
                         l4988 3786                           l5796 269C                           l5788 266C  
                         l5966 38C0                           l4998 37E8                           l5798 26B2  
                         l5968 397E                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E34                           STR_5 0E38  
                         u3000 2832                           u3001 282E                           u3010 2844  
                         u3011 2840                           u3100 298C                           u3020 2854  
                         u3101 2988                           u3021 2850                           u3110 299A  
                         u3030 2890                           u3111 2996                           u3031 288C  
                         u4000 4B24                           u3200 2AF8                           u3120 29AA  
                         u3040 289E                   _BAUD4CONbits 000EE9                           u4001 4B20  
                         u3201 2AF4                           u3121 29A6                           u3041 289A  
                         u4010 4B42                           u3210 2B08                           u3130 29DC  
                         u3050 290C                           u4011 4B3E                           u3211 2B04  
                         u3131 29D8                           u3051 2908                           u4020 4B62  
                         u3300 2BEC                           u3220 2B24                           u3140 29EA  
                         u3060 2924                           u4100 4A86                           u4021 4B5E  
                         u3301 2BE8                           u3221 2B20                           u3141 29E6  
                         u3061 291E                           u4101 4A82                           u4030 4BB2  
                         u3310 2BFC                           u3230 2B34                           u3150 2A08  
                         u3070 2926                           u4110 4A96                           u4031 4BAE  
                         u3311 2BF8                           u3231 2B30                           u3151 2A04  
                         u4111 4A92                           u3320 2C1C                           u3240 2B46  
                         u3160 2A40                           u3080 294E                           u5000 43B8  
                         u3400 47C8                           u4120 53D0                           u4040 5E4A  
                         u4200 4CA6                           u3321 2C18                           u3241 2B42  
                         u3161 2A3C                           u3081 294A                           u5001 43B4  
                         u3401 47C4                           u4121 53CC                           u4041 5E46  
                         u4201 4CA0                           u3330 2C2E                           u3250 2B5C  
                         u3170 2A86                           u3090 296C                           u5010 43C6  
                         u3410 456C                           u4130 5426                           u4050 49C8  
                         u4210 4CA8                           _T2PR 000FBC                           u3331 2C2A  
                         u3251 2B58                           u3171 2A82                           u3091 2968  
                         u5011 43C2                           u3411 4568                           u4131 5422  
                         u4051 49C4                           u3340 2C4A                           u3260 2B72  
                         u3180 2ABC                           u5020 4422                           u3420 459E  
                         u3500 48D0                           u4140 5D92                           u4060 49FC  
                         u4300 40F8                           u4220 5CF0                           u5100 57F6  
                         u3341 2C46                           u3261 2B6E                           u3181 2AB8  
                         u5021 441E                           u3421 459A                           u3501 48CC  
                         u4141 5D8E                           u4301 40F4                           u4221 5CEC  
                         u5101 57F2                           u3270 2B86                           u3190 2ACC  
                         u5030 4478                           u3350 5456                           u3510 48FA  
                         u4070 4A2A                           u4150 4BFC                           u4310 414C  
                         u4230 5538                           u3271 2B82                           u3191 2AC8  
                         u5031 4474                           u5111 0E6E                           u3351 5452  
                         u3431 45C8                           u3511 48F6                           u4071 4A26  
                         u4231 5534                           u3600 316A                           u3280 2BA0  
                         u5040 44C2                           u5200 13CA                           u5120 0F68  
                         u3360 5474                           u4400 53C0                           u3440 45EC  
                         u3520 4928                           u4080 4A3E                           u4160 4C1A  
                         u4320 4168                           u4240 3FFC                           u3601 3166  
                         u3281 2B9C                           u5041 44BE                           u5201 13C6  
                         u5121 0F64                           u3361 5470                           u4401 53BC  
                         u3441 45E8                           u3521 4924                           u4081 4A3A  
                         u4065 49F2                           u4161 4C16                           u4321 4164  
                         u3610 31AA                           u3290 2BDA                           u5050 44E0  
                         u5210 1408                           u5130 0FF6                           u3370 5490  
                         u4410 5166                           u3450 4616                           u3530 4970  
                         u4090 4A66                           u4170 4C42                           u4330 41A4  
                         u4250 402A                           u3611 31A6                           u3291 2BD6  
                         u5051 44DC                           u5211 1404                           u5131 0FF2  
                         u3371 548C                           u4411 5162                           u3451 4612  
                         u3531 496C                           u4091 4A62                           u4171 4C3E  
                         u4155 4BF2                           u4331 41A0                           u4315 4142  
                         u4251 4026                           u3700 3324                           u3620 3220  
                         u3540 30A2                           u5060 44F0                           u5300 161A  
                         u5220 143A                           u5140 104A                           u4420 517E  
                         u3460 4656                           u3380 5D34                           u4500 3D7A  
                         u4180 4C6C                           u4260 404C                           u4340 5A3C  
                         u3701 3320                           u3621 321C                           u3541 309E  
                         u5061 44EC                           u5301 1616                           u5221 1436  
                         u5141 1046                           u4421 517A                           u3461 4652  
                         u3381 5D30                           u4501 3D76                           u4181 4C68  
                         u4261 4048                           u4245 3FF2                           u4341 5A38  
                         u3710 333A                           u3630 3242                           u3550 30B4  
                         u5070 44FE                           u5310 1658                           u5230 1478  
                         u5150 10A0                           u3390 46FE                           u4430 50C8  
                         u4350 5F44                           u3470 46A0                           u4510 3DB6  
                         u3711 3336                           u3631 323E                           u3551 30B0  
                         u5071 44FA                           u5311 1654                           u5231 1474  
                         u5151 109C                           u3391 46FA                           u6007 5C58  
                         u4431 50C4                           u4351 5F40                           u3471 469C  
                         u4511 3DB2                           u3720 334E                           u3640 326C  
                         u3560 30C4                           u3800 2CDA                           u5080 4538  
                         u5400 186E                           u5320 168A                           u5240 14AA  
                         u5160 10C0                           u4440 50E0                           u4360 5F5A  
                         u3480 4860                           u2920 4CCC                           u4520 3DE2  
                         u4280 40B8                           u4600 18F2                           u3721 334A  
                         u3641 3268                           u3561 30C0                           u3801 2CD6  
                         u5081 4534                           u5401 186A                           u5321 1686  
                         u5241 14A6                           u5161 10BC                           u6017 5140  
                         u4441 50DC                           u4361 5F56                           u3481 485C  
                         u2921 4CC8                           u4521 3DDE                           u4281 40B4  
                         u4601 18EE                           u3730 3368                           u3650 3290  
                         u3570 3108                           u3810 2CEC                           u5090 4546  
                         u5330 16C8                           u5250 14E4                           u5170 1170  
                         u4370 52A2                           u4450 5204                           u5410 5F08  
                         u3490 4892                           u2930 4CDE                           u4530 3DF8  
                         u4290 40DC                           u4610 1930                           u3731 3364  
                         u3651 328C                           u3571 3104                           u3811 2CE8  
                         u5091 4542                           u5331 16C4                           u5251 14E0  
                         u5171 116C                           u4371 529E                           u6107 5382  
                         u4451 5200                           u6027 5EAE                           u5411 5F04  
                         u3491 488E                           u2931 4CDA                           u4531 3DF4  
                         u4195 4C7E                           u4275 4060                           u4611 192C  
                         u3740 33B0                           u3660 32A6                           u3580 311A  
                         u3900 2F8C                           u3820 2CFC                           u5340 1706  
                         u5260 1522                           u5180 11BA                           u4380 52BA  
                         u4460 521C                           u2940 4D06                           u4540 3F34  
                         u4276 406A                           u4700 1C06                           u4620 1942  
                         u5500 4378                           u5420 4264                           u3741 33AC  
                         u3661 32A2                           u3581 3116                           u3901 2F88  
                         u3821 2CF8                           u5341 1702                           u5261 151E  
                         u5181 11B6                           u4381 52B6                           u6117 527C  
                         u4461 5218                           u6037 56BC                           u2941 4D02  
                         u4541 3F30                           u4277 407A                           u4701 1C02  
                         u4621 193E                           u5501 4372                           u5421 425E  
                         u3750 33E0                           u3670 32C4                           u3590 312A  
                         u3910 2FA0                           u3830 2D32                           u5350 1750  
                         u5270 1560                           u5190 1398                           u4390 53A8  
                         u4470 5ED8                           u2950 4D3C                           u4550 3F52  
                         u4710 1C1E                           u4630 19BC                           u5510 438A  
                         u5502 437A                           u5430 4278                           u5422 4266  
                         u3751 33DC                           u3671 32C0                           u3591 3126  
                         u3911 2F9C                           u3831 2D2E                           u5351 174C  
                         u5271 155C                           u5191 1394                           u4391 53A4  
                         u6047 56E8                           u4471 5ED4                           u2951 4D38  
                         u4551 3F4E                           u4295 40D2                           u4711 1C1A  
                         u4631 19B8                           u5511 4386                           u5431 4272  
                         u3760 340E                           u3680 32E4                           u3920 2FBA  
                         u3840 2D42                           u2960 27B8                           u5360 178E  
                         u5280 159E                           u5520 3A82                           u4560 3F6C  
                         u4480 3D66                           u4800 1F76                           u4720 1C50  
                         u4640 19CE                           u5440 428A                           u5432 427A  
                         u3761 340A                           u3681 32E0                           u3921 2FB6  
                         u3841 2D3E                           u2961 27B4                           u5361 178A  
                         u5281 159A                           u6057 5716                           u5521 3A7E  
                         u4561 3F68                           u4481 3D60                           u4801 1F72  
                         u4721 1C4C                           u4641 19CA                           u5441 4286  
                         u3690 32F6                           u3930 3002                           u3850 2EBC  
                         u3770 2C78                           u2970 27CA                           u5370 17CC  
                         u5290 15E8                           u5530 3ADC                           u4570 3F7C  
                         u4490 3D68                           u4810 2024                           u4730 1C5E  
                         u4650 1A48                           u5450 42BC                           u5610 2358  
                         u3691 32F2                           u3931 2FFE                           u3771 2C74  
                         u2971 27C6                           u5371 17C8                           u5291 15E4  
                         u6067 5742                           u5531 3AD8                           u4571 3F78  
                         u4811 2020                           u4731 1C5A                           u4651 1A44  
                         u5451 42B8                           u5611 2354                           u3940 3030  
                         u3860 2F16                           u3780 2C8A                           u2980 27DA  
                         u5380 17FE                           u5540 3B32                           u4900 5D60  
                         u4820 2060                           u4740 1C88                           u4660 1AD4  
                         u4580 1898                           u5460 42F4                           u5700 2680  
                         u5620 23D2                           u3941 302C                           u3861 2F12  
                         u3781 2C86                           u2981 27D6                           u5381 17FA  
                         u6077 51DE                           u5541 3B2E                           u4901 5D58  
                         u4821 205C                           u4741 1C84                           u4661 1AD0  
                         u4581 1894                           u5461 42F0                           u5701 267C  
                         u5621 23CE                           u3950 306A                           u3870 2F36  
                         u3790 2C9A                           u2990 281C                           u5390 183C  
                         u5550 3B88                           u4830 206E                           u4750 1DD0  
                         u4670 1B06                           u4590 18E2                           u5470 432C  
                         u5710 26C6                           u5630 2476                           u3951 3066  
                         u3871 2F32                           u3855 2EB2                           u3791 2C96  
                         u2991 2818                           u5391 1838                           u6087 5770  
                         u5551 3B84                           u4831 206A                           u4751 1DCC  
                         u4671 1B02                           u4591 18DE                           u5471 4328  
                         u5711 26C2                           u5631 2472                           u3960 4FC8  
                         u3880 2F48                           u4920 5EA2                           u5560 3BDE  
                         u4840 20C2                           u4760 1E36                           u4680 1B44  
                         u5480 433A                           u5720 270C                           u5640 24AC  
                         u3961 4FC4                           u3881 2F44                           u6097 579C  
                         u4921 5E9E                           u5561 3BDA                           u4841 20BE  
                         u4761 1E32                           u4681 1B40                           u5481 4336  
                         u5721 2708                           u5641 24A8                           u3970 5006  
                         u3890 2F76                           u5570 3C34                           u4850 2194  
                         u4770 1E7E                           u4690 1BD0                           u4930 3778  
                         u5490 4364                           u5730 2736                           u5650 2522  
                         u3971 5002                           u3891 2F72                           u5571 3C30  
                         u4851 2190                           u4771 1E7A                           u4691 1BCC  
                         u4931 3774                           u5491 435E                           u5731 2732  
                         u5651 251E                           u3980 503A                           u5580 3C8A  
                         u4860 21B0                           u4780 1E8E                           u4940 37C8  
                         u5492 4366                           u5740 2764                           u5660 2568  
                         u3981 5036                           u5581 3C86                           u4861 21AC  
                         u4781 1E8A                           u4941 37C4                           u5741 2760  
                         u5661 2564                           u3990 4AE6                           u5590 3CE0  
                         u4918 5D62                           u4870 2218                           u4790 1F28  
                         u4950 37E8                           u5750 279A                           u5670 25AE  
                         u3991 4AE2                           u5591 3CDC                           u4871 2212  
                         u4791 1F24                           u4951 37E4                           u5751 2796  
                         u5671 25AA                           u4880 221A                           u4960 38FE  
                         u5680 25F4                           u4961 38FA                           u5681 25F0  
                         u4970 6018                           u4890 222E                           u5690 263A  
                         u4971 6014                           u4891 222A                           u5907 4346  
                         u5691 2636                           u5827 233C                           u4980 4F74  
                         u4981 4F70                           u5917 4396                           u5837 2364  
                         u4990 4F8C                           u4991 4F88                           u5927 4F4E  
                         u5847 2412                           u5937 5E7E                           u5857 41D2  
                         u5947 5662                           u5867 4246                           u5957 568E  
                         u5877 4298                           u5967 590C                           u5887 42D2  
                         u5977 5C0A                           u5897 430A                           u5987 50A2  
                         u5997 54F6                  _LightBlueMove 58A6                           abs@a 0013  
                         _dbuf 02A0                           _labs 551A                           _main 226E  
                         _dtoa 3D36                           _prec 00E9                           _vals 016A  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 5344                  ___fpclassifyf 4BBC                           prodh 000FF4  
                         prodl 000FF3                           start 0034                ___fldiv@new_exp 0043  
       __end_of_color_read_Red 5ADE                __end_of_HighISR 0034         __end_of_color_read_lum 5A8E  
                 ___param_bank 000000                ReverseYellow@mL 0020                ReverseYellow@mR 0022  
              __end_of_RedMove 5DF6                          ??_abs 0015                          ??_pad 0017  
                 ?_readColours 000C                    _turnRight45 5BCC                _RunOneBlockTime 00F0  
                ___fltol@sign1 0009                __end_of___aodiv 46E2                          ?_labs 0001  
              __end_of___fladd 2C5E                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 49B2                __end_of___fldiv 3422                __end_of___flneg 5E6C  
              __end_of___flmul 3088                __end_of___flsub 5CAE                __end_of___fltol 4AB8  
                  colour_rel@B 0074                    colour_rel@G 0070                          ?_stop 0014  
                  colour_rel@L 0060                    colour_rel@R 006C                __end_of___lwdiv 54B0  
                        i2l225 0030                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3D36        __end_of_sendCharSerial4 601E  
   __end_of_I2C_2_Master_Start 6054     __end_of_I2C_2_Master_Write 602A                   YellowMove@mL 0020  
                        _flags 00EB                   YellowMove@mR 0022                          _fputc 4CBA  
                        _fputs 5CF2                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00F4                          _width 00E7  
                        _putch 605A                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 5854                 ?___fpclassifyf 0001        __end_of_color_read_Blue 5B7E  
        _I2C_2_Master_RepStart 6036               __end_of_BlueMove 55E6                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 5B7E        __end_of_turnCalibration 43A6                _reverseOneBlock 569E  
                 __end_of_labs 5580                   __end_of_main 279E                   __end_of_dtoa 3FB4  
                 __end_of_stop 53C2                _colour_rel$3203 0064                _colour_rel$3204 0068  
                       ??_labs 0005                         ??_main 00D1                         ??_dtoa 0026  
        __end_of_ReverseYellow 4E3A               __end_of_PinkMove 59EE                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                         i2l5592 000A                         i2l5594 001A  
                       i2l5596 002C                      ??_HighISR 0001       __end_of_color_click_init 594A  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 5854  
             __end_of___xxtofl 455A                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE                  ??_ReversePink 0024  
                       ___flge 4AB8                         ___fleq 4F9A                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 5F82  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 003A  
                    ??___flneg 0005                      ??___flmul 0019                      ??___flsub 0032  
                    ??___fltol 0005                         _efgtoa 1874                      ??___lwdiv 000B  
                       _floorf 3FB4                         _memcpy 59EE                         clear_0 5BA4  
                       clear_1 5BB0                         clear_2 5BBC                         _motorL 0161  
                       _motorR 0158                         isa$std 000001                      ??_go_Home 0028  
                       pad@buf 0013                         dtoa@fp 001C                         _strcpy 5CAE  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                ___fpclassifyf@e 0009                ___fpclassifyf@u 000B  
              ___fpclassifyf@x 0001                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C                         putch@c 0001  
              ??_LightBlueMove 0024               __end_of_vfprintf 5802                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 005F  
             __end_of_turnLeft 5180                     ___flge@ff1 002A                     _YellowMove 594A  
                   ___flge@ff2 002E                ??___fpclassifyf 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0032  
                   ___fleq@ff2 0036                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 5BC2        __end_of_reverseOneBlock 56F8  
                   ___flneg@f1 0001       __end_of_color_read_Green 5B2E         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
              _Interrupts_init 602A                 __pcstackCOMRAM 0001               ?_turnCalibration 0020  
                _fullSpeedBack 5180                   __pidataBANK0 6054                  __end_of_fputc 4D84  
                __end_of_fputs 5D36                  __end_of_putch 605C              __end_of_GreenMove 5E34  
          __end_of_Timer0_init 5FE8            __end_of_ReversePink 4EF0                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14357 00D3  
        __end_of_reverseDetect 5752                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 5752  
                   _getTMR0val 5F5C              __end_of_RetryMove 551A                      ?_PinkMove 0020  
            _color_writetoaddr 5FA8                     _delayed_ms 5E6C                   _T2CLKCONbits 000FBF  
           Colour_decider@Cmax 0072             Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014  
         Colour_decider@Cmax_i 0064                        ?___flge 002A                        ?___fleq 0032  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                      ?_efgtoa 0060                        ?_floorf 004B                   ?_turnRight45 001A  
                      ?_memcpy 0001              __end_of_TurnDelay 5EDA          __end_of_timed_forward 4F9A  
          ??_color_writetoaddr 0004                        ?_strcpy 0001                  colour_rel@rel 004D  
               go_Home@WayBack 0024                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5              ??_ForwardOneBlock 001E                     ??_BlueMove 0024  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 0020  
                   _colour_rel 3422        __end_of_Interrupts_init 6036         color_writetoaddr@value 0003  
             ??_color_read_Red 0007               main@consecuitive 01D6                        _HighISR 0008  
             ??_color_read_lum 0007               ?_reverseOneBlock 001A      __end_of_color_writetoaddr 5FC8  
                      _RedMove 5DB8             _I2C_2_Master_Start 604A                     ??_PinkMove 0024  
                   _initUSART4 5FE8             _I2C_2_Master_Write 601E                        __Hparam 0000  
                      _WayBack 011A                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 5FC8                    RetryMove@mL 0020                    RetryMove@mR 0022  
      sendStringSerial4@string 0002              reverseOneBlock@mL 001A              reverseOneBlock@mR 001C  
                  _ReversePink 4E3A                        ___aodiv 455A                        ___fladd 279E  
                      ___aomod 484E                        ___fldiv 3088                        ___flneg 5E34  
                      ___flmul 2C5E                        ___flsub 5C68                        ___fltol 49B2  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 543C            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A8                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 5B7E                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 3A56                        __ptext0 226E  
                      __ptext1 41C6                        __ptext2 5802                        __ptext3 57AC  
                      __ptext4 3750                        __ptext5 1874                        __ptext6 5CAE  
                      __ptext7 59EE                        __ptext8 551A                        __ptext9 3FB4  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00EF  
            color_read_lum@tmp 000A                        main@buf 0172                        _sprintf 5802  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 5BC2  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 0114                    ?_delayed_ms 0001              turnCalibration@mL 0020  
            turnCalibration@mR 0022              __end_of_vfpfcnvrt 3A56                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00F2                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 52BC  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 50E2                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                    _CCP1CONbits 000FAB                     main@colour 01D8  
                 _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 5C1A  
               __end_of___flge 4BBC                 __end_of___fleq 5044                 _fullSpeedAhead 521E  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 5FA8                 __end_of_efgtoa 226E                 __end_of_floorf 41C6  
               __end_of_memcpy 5A3E                     floorf@F526 00DF       __end_of_Forwardhalfblock 57AC  
                    _GreenMove 5DF6                 __end_of_strcpy 5CF2            start_initialization 5B7E  
                  __end_of_abs 5DB8                    __end_of_pad 543C                  _TxBufWriteCnt 00ED  
        __end_of_LightBlueMove 58F8                   ??_OrangeMove 0024          __end_of___fpclassifyf 4CBA  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 5344                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 52BC                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 54B0                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00F0  
              _ForwardOneBlock 5644                       ??_floorf 004F                       ??_memcpy 0007  
                     ??_strcpy 0005                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 4D84                      ___fldiv@a 0036                      ___fldiv@b 0032  
                   ?_GreenMove 0020                   OrangeMove@mL 0020                   OrangeMove@mR 0022  
           __end_of_OrangeMove 58A6                      ___flmul@a 0015                      ___flmul@b 0011  
                    ___flsub@a 002E                      ___flsub@b 002A                      _TurnDelay 5EA4  
                __pcstackBANK0 0060                  __pcstackBANK1 0172               ___aodiv@dividend 0001  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2852 006F               ___lwdiv@dividend 0007  
                    _dtoa$2821 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 0020                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$3205 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 599C  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 5644              _I2C_2_Master_Idle 5F34              _I2C_2_Master_Init 5F0A  
            _I2C_2_Master_Read 5D36              _I2C_2_Master_Stop 6040                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00EE             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0001                 colour_rel@vals 004B              _sendStringSerial4 5EDA  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001                       _PIE0bits 000E29  
           ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 569E                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 0118  
                     _PIR0bits 000E33                       _PIR4bits 000E37                       i2u560_40 001A  
                     i2u560_41 0016               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E3E            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 3750      __end_of_I2C_2_Master_Idle 5F5C  
    __end_of_I2C_2_Master_Init 5F34      __end_of_I2C_2_Master_Read 5D78              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 604A                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 5F82  
                 _TxBufReadCnt 00EC                       _BlueMove 5580                      _turnRight 5044  
           __end_of_delayed_ms 5EA4                     vfpfcnvrt@c 00A5              ??_turnCalibration 0024  
                    copy_data0 5B92      __end_of_sendStringSerial4 5F0A                   ??_colour_rel 004F  
                _reverseDetect 56F8  __end_of_I2C_2_Master_RepStart 6040             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 484E                   ??_initUSART4 0001                       _PinkMove 599C  
                     __Hrparam 0000         __end_of_Colour_decider 1874                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 521E                    ??_RetryMove 0024           TurnDelay@Turn45Delay 0001  
                  _readColours 55E6                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 3750  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                _timed_forward 4EF0                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 43A6                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 6006                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4BBC                       __ptext11 49B2  
                     __ptext20 455A                       __ptext12 5E34                       __ptext21 5EDA  
                     __ptext13 3D36                       __ptext30 5FE8                       __ptext22 6006  
                     __ptext14 53C2                       __ptext31 52BC                       __ptext23 55E6  
                     __ptext15 5CF2                       __ptext40 58A6                       __ptext32 3A56  
                     __ptext24 5A3E                       __ptext16 4CBA                       __ptext41 5DF6  
                     __ptext33 4EF0                       __ptext25 5A8E                       __ptext17 605A  
                     __ptext50 5F34                       __ptext42 5580                       __ptext34 5E6C  
                     __ptext26 5ADE                       __ptext18 5D78                       __ptext51 5F0A  
                     __ptext43 5F5C                       __ptext35 4D84                       __ptext27 5B2E  
                     __ptext19 484E                       __ptext60 5EA4                       __ptext52 594A  
                     __ptext44 3422                       __ptext36 4E3A                       __ptext28 6036  
                     __ptext61 569E                       __ptext53 5BCC                       __ptext45 58F8  
                     __ptext37 5644                       __ptext29 5D36                       __ptext70 543C  
                     __ptext62 56F8                       __ptext54 5044                       __ptext46 5FA8  
                     __ptext38 5DB8                       __ptext71 0E3E                       __ptext63 5180  
                     __ptext55 5FC8                       __ptext47 601E                       __ptext39 5854  
                     __ptext72 43A6                       __ptext64 602A                       __ptext56 54B0  
                     __ptext48 6040                       __ptext73 5C68                       __ptext65 5752  
                     __ptext57 599C                       __ptext49 604A                       __ptext74 279E  
                     __ptext66 5344                       __ptext58 5C1A                       __ptext75 2C5E  
                     __ptext67 521E                       __ptext59 50E2                       __ptext76 4AB8  
                     __ptext68 46E2                       __ptext77 4F9A                       __ptext69 5F82  
                     __ptext78 3088                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 57AC  
                     _run_flag 0116                  ??_turnRight45 001E                       _turnLeft 50E2  
             ___aomod@dividend 0001                 ?_timed_forward 0014                    delayed_ms@i 0004  
            ??_reverseOneBlock 001E                     _INTCONbits 000FF2                main@prev_colour 01DA  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 46E2  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 00C4               ??_fullSpeedAhead 0018                      strcpy@src 0003  
                 ??_turnLeft45 001E                     BlueMove@mL 0020                     BlueMove@mR 0022  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 58F8                       sprintf@f 00C6  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 5C1A                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 5C68                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 6006                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
