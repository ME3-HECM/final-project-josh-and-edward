

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 15:55:22 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95   000000                     
    96                           ; Generated 06/04/2022 GMT
    97                           ; 
    98                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130   000000                     
   131                           	psect	idataBANK0
   132   005BDC                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _high_threshold
   136   005BDC  03E8               	dw	1000
   137                           
   138                           ;initializer for _Turn45Delay
   139   005BDE  00DC               	dw	220
   140                           
   141                           ;initializer for _power
   142   005BE0  001E               	dw	30
   143                           
   144                           ;initializer for _DataFlag
   145   005BE2  01                 	db	1
   146   000000                     _TRISEbits	set	3973
   147   000000                     _TX4REG	set	3812
   148   000000                     _RC4STAbits	set	3815
   149   000000                     _SP4BRGH	set	3814
   150   000000                     _SSP2CON2bits	set	3802
   151   000000                     _RX4PPS	set	3605
   152   000000                     _SSP2CLKPPS	set	3612
   153   000000                     _SSP2DATPPS	set	3613
   154   000000                     _ANSELDbits	set	3751
   155   000000                     _SSP2ADD	set	3798
   156   000000                     _SSP2CON1bits	set	3801
   157   000000                     _LATAbits	set	3961
   158   000000                     _LATFbits	set	3966
   159   000000                     _LATGbits	set	3967
   160   000000                     _TRISAbits	set	3969
   161   000000                     _TRISGbits	set	3975
   162   000000                     _PORTFbits	set	3982
   163   000000                     _CCPR2H	set	4006
   164   000000                     _CCPR1H	set	4010
   165   000000                     _TRISCbits	set	3971
   166   000000                     _TRISDbits	set	3972
   167   000000                     _TRISFbits	set	3974
   168   000000                     _LATDbits	set	3964
   169   000000                     _RC4REG	set	3811
   170   000000                     _SP4BRGL	set	3813
   171   000000                     _TX4STAbits	set	3816
   172   000000                     _BAUD4CONbits	set	3817
   173   000000                     _SSP2CON2	set	3802
   174   000000                     _SSP2STAT	set	3800
   175   000000                     _ANSELFbits	set	3764
   176   000000                     _SSP2BUF	set	3797
   177   000000                     _PIE4bits	set	3629
   178   000000                     _PIR4bits	set	3639
   179   000000                     _RC0PPS	set	3682
   180   000000                     _RD5PPS	set	3695
   181   000000                     _RE2PPS	set	3700
   182   000000                     _RD6PPS	set	3696
   183   000000                     _RC7PPS	set	3689
   184   000000                     _CCPR4H	set	3873
   185   000000                     _CCPR3H	set	3877
   186   000000                     _CCP1CONbits	set	4011
   187   000000                     _CCPTMRS0bits	set	4013
   188   000000                     _T2PR	set	4028
   189   000000                     _T2CONbits	set	4029
   190   000000                     _CCP2CONbits	set	4007
   191   000000                     _CCP3CONbits	set	3878
   192   000000                     _CCP4CONbits	set	3874
   193   000000                     _RE4PPS	set	3702
   194   000000                     _RG6PPS	set	3720
   195   000000                     _T2CLKCONbits	set	4031
   196   000000                     _T2HLTbits	set	4030
   197                           
   198                           	psect	smallconst
   199   000E00                     __psmallconst:
   200                           	callstack 0
   201   000E00  00                 	db	0
   202   000E01                     STR_1:
   203   000E01  72                 	db	114	;'r'
   204   000E02  65                 	db	101	;'e'
   205   000E03  64                 	db	100	;'d'
   206   000E04  3D                 	db	61	;'='
   207   000E05  25                 	db	37
   208   000E06  66                 	db	102	;'f'
   209   000E07  20                 	db	32
   210   000E08  67                 	db	103	;'g'
   211   000E09  72                 	db	114	;'r'
   212   000E0A  65                 	db	101	;'e'
   213   000E0B  65                 	db	101	;'e'
   214   000E0C  6E                 	db	110	;'n'
   215   000E0D  3D                 	db	61	;'='
   216   000E0E  25                 	db	37
   217   000E0F  66                 	db	102	;'f'
   218   000E10  20                 	db	32
   219   000E11  62                 	db	98	;'b'
   220   000E12  6C                 	db	108	;'l'
   221   000E13  75                 	db	117	;'u'
   222   000E14  65                 	db	101	;'e'
   223   000E15  3D                 	db	61	;'='
   224   000E16  25                 	db	37
   225   000E17  66                 	db	102	;'f'
   226   000E18  20                 	db	32
   227   000E19  6C                 	db	108	;'l'
   228   000E1A  75                 	db	117	;'u'
   229   000E1B  6D                 	db	109	;'m'
   230   000E1C  3D                 	db	61	;'='
   231   000E1D  25                 	db	37
   232   000E1E  64                 	db	100	;'d'
   233   000E1F  20                 	db	32
   234   000E20  63                 	db	99	;'c'
   235   000E21  6F                 	db	111	;'o'
   236   000E22  6C                 	db	108	;'l'
   237   000E23  6F                 	db	111	;'o'
   238   000E24  75                 	db	117	;'u'
   239   000E25  72                 	db	114	;'r'
   240   000E26  31                 	db	49	;'1'
   241   000E27  3D                 	db	61	;'='
   242   000E28  25                 	db	37
   243   000E29  64                 	db	100	;'d'
   244   000E2A  20                 	db	32
   245   000E2B  0D                 	db	13
   246   000E2C  0A                 	db	10
   247   000E2D  00                 	db	0
   248   000E2E                     STR_2:
   249   000E2E  72                 	db	114	;'r'
   250   000E2F  65                 	db	101	;'e'
   251   000E30  64                 	db	100	;'d'
   252   000E31  3D                 	db	61	;'='
   253   000E32  25                 	db	37
   254   000E33  64                 	db	100	;'d'
   255   000E34  20                 	db	32
   256   000E35  67                 	db	103	;'g'
   257   000E36  72                 	db	114	;'r'
   258   000E37  65                 	db	101	;'e'
   259   000E38  65                 	db	101	;'e'
   260   000E39  6E                 	db	110	;'n'
   261   000E3A  3D                 	db	61	;'='
   262   000E3B  25                 	db	37
   263   000E3C  64                 	db	100	;'d'
   264   000E3D  20                 	db	32
   265   000E3E  62                 	db	98	;'b'
   266   000E3F  6C                 	db	108	;'l'
   267   000E40  75                 	db	117	;'u'
   268   000E41  65                 	db	101	;'e'
   269   000E42  3D                 	db	61	;'='
   270   000E43  25                 	db	37
   271   000E44  64                 	db	100	;'d'
   272   000E45  20                 	db	32
   273   000E46  6C                 	db	108	;'l'
   274   000E47  75                 	db	117	;'u'
   275   000E48  6D                 	db	109	;'m'
   276   000E49  3D                 	db	61	;'='
   277   000E4A  25                 	db	37
   278   000E4B  64                 	db	100	;'d'
   279   000E4C  20                 	db	32
   280   000E4D  0D                 	db	13
   281   000E4E  0A                 	db	10
   282   000E4F  00                 	db	0
   283   000E50                     STR_3:
   284   000E50  69                 	db	105	;'i'
   285   000E51  6E                 	db	110	;'n'
   286   000E52  66                 	db	102	;'f'
   287   000E53  00                 	db	0
   288   000E54                     STR_6:
   289   000E54  6E                 	db	110	;'n'
   290   000E55  61                 	db	97	;'a'
   291   000E56  6E                 	db	110	;'n'
   292   000E57  00                 	db	0
   293   000E58  00                 	db	0	; dummy byte at the end
   294   000000                     
   295                           ; #config settings
   296                           
   297                           	psect	cinit
   298   0051F0                     __pcinit:
   299                           	callstack 0
   300   0051F0                     start_initialization:
   301                           	callstack 0
   302   0051F0                     __initialization:
   303                           	callstack 0
   304                           
   305                           ; Initialize objects allocated to BANK0 (7 bytes)
   306                           ; load TBLPTR registers with __pidataBANK0
   307   0051F0  0EDC               	movlw	low __pidataBANK0
   308   0051F2  6EF6               	movwf	tblptrl,c
   309   0051F4  0E5B               	movlw	high __pidataBANK0
   310   0051F6  6EF7               	movwf	tblptrh,c
   311   0051F8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   312   0051FA  6EF8               	movwf	tblptru,c
   313   0051FC  EE00  F0F2         	lfsr	0,__pdataBANK0
   314   005200  EE10 F007          	lfsr	1,7
   315   005204                     copy_data0:
   316   005204  0009               	tblrd		*+
   317   005206  CFF5 FFEE          	movff	tablat,postinc0
   318   00520A  50E5               	movf	postdec1,w,c
   319   00520C  50E1               	movf	fsr1l,w,c
   320   00520E  E1FA               	bnz	copy_data0
   321                           
   322                           ; Clear objects allocated to BANK3 (250 bytes)
   323   005210  EE03  F000         	lfsr	0,__pbssBANK3
   324   005214  0EFA               	movlw	250
   325   005216                     clear_0:
   326   005216  6AEE               	clrf	postinc0,c
   327   005218  06E8               	decf	wreg,f,c
   328   00521A  E1FD               	bnz	clear_0
   329                           
   330                           ; Clear objects allocated to BANK2 (60 bytes)
   331   00521C  EE02  F000         	lfsr	0,__pbssBANK2
   332   005220  0E3C               	movlw	60
   333   005222                     clear_1:
   334   005222  6AEE               	clrf	postinc0,c
   335   005224  06E8               	decf	wreg,f,c
   336   005226  E1FD               	bnz	clear_1
   337                           
   338                           ; Clear objects allocated to BANK1 (140 bytes)
   339   005228  EE01  F000         	lfsr	0,__pbssBANK1
   340   00522C  0E8C               	movlw	140
   341   00522E                     clear_2:
   342   00522E  6AEE               	clrf	postinc0,c
   343   005230  06E8               	decf	wreg,f,c
   344   005232  E1FD               	bnz	clear_2
   345                           
   346                           ; Clear objects allocated to BANK0 (31 bytes)
   347   005234  EE00  F0D3         	lfsr	0,__pbssBANK0
   348   005238  0E1F               	movlw	31
   349   00523A                     clear_3:
   350   00523A  6AEE               	clrf	postinc0,c
   351   00523C  06E8               	decf	wreg,f,c
   352   00523E  E1FD               	bnz	clear_3
   353   005240                     end_of_initialization:
   354                           	callstack 0
   355   005240                     __end_of__initialization:
   356                           	callstack 0
   357   005240  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   358   005242  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   359   005244  0100               	movlb	0
   360   005246  EF98  F011         	goto	_main	;jump to C main() function
   361                           
   362                           	psect	bssBANK0
   363   0000D3                     __pbssBANK0:
   364                           	callstack 0
   365   0000D3                     	ds	12
   366   0000DF                     floorf@F526:
   367                           	callstack 0
   368   0000DF                     	ds	4
   369   0000E3                     ___fpclassifyf@F465:
   370                           	callstack 0
   371   0000E3                     	ds	4
   372   0000E7                     _width:
   373                           	callstack 0
   374   0000E7                     	ds	2
   375   0000E9                     _prec:
   376                           	callstack 0
   377   0000E9                     	ds	2
   378   0000EB                     _low_threshold:
   379                           	callstack 0
   380   0000EB                     	ds	2
   381   0000ED                     _flags:
   382                           	callstack 0
   383   0000ED                     	ds	1
   384   0000EE                     _TxBufReadCnt:
   385                           	callstack 0
   386   0000EE                     	ds	1
   387   0000EF                     _TxBufWriteCnt:
   388                           	callstack 0
   389   0000EF                     	ds	1
   390   0000F0                     _RxBufReadCnt:
   391                           	callstack 0
   392   0000F0                     	ds	1
   393   0000F1                     _RxBufWriteCnt:
   394                           	callstack 0
   395   0000F1                     	ds	1
   396                           
   397                           	psect	dataBANK0
   398   0000F2                     __pdataBANK0:
   399                           	callstack 0
   400   0000F2                     _high_threshold:
   401                           	callstack 0
   402   0000F2                     	ds	2
   403   0000F4                     _Turn45Delay:
   404                           	callstack 0
   405   0000F4                     	ds	2
   406   0000F6                     _power:
   407                           	callstack 0
   408   0000F6                     	ds	2
   409   0000F8                     _DataFlag:
   410                           	callstack 0
   411   0000F8                     	ds	1
   412                           
   413                           	psect	bssBANK1
   414   000100                     __pbssBANK1:
   415                           	callstack 0
   416   000100                     _EUSART4RXbuf:
   417                           	callstack 0
   418   000100                     	ds	20
   419   000114                     _move_count:
   420                           	callstack 0
   421   000114                     	ds	2
   422   000116                     _dbuf:
   423                           	callstack 0
   424   000116                     	ds	80
   425   000166                     _rel:
   426                           	callstack 0
   427   000166                     	ds	12
   428   000172                     _motorR:
   429                           	callstack 0
   430   000172                     	ds	9
   431   00017B                     _motorL:
   432                           	callstack 0
   433   00017B                     	ds	9
   434   000184                     _vals:
   435                           	callstack 0
   436   000184                     	ds	8
   437                           
   438                           	psect	bssBANK2
   439   000200                     __pbssBANK2:
   440                           	callstack 0
   441   000200                     _EUSART4TXbuf:
   442                           	callstack 0
   443   000200                     	ds	60
   444                           
   445                           	psect	bssBANK3
   446   000300                     __pbssBANK3:
   447                           	callstack 0
   448   000300                     _WayBack:
   449                           	callstack 0
   450   000300                     	ds	250
   451                           
   452                           	psect	cstackBANK1
   453   00018C                     __pcstackBANK1:
   454                           	callstack 0
   455   00018C                     main@buf:
   456                           	callstack 0
   457                           
   458                           ; 100 bytes @ 0x0
   459   00018C                     	ds	100
   460   0001F0                     main@run_flag:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x64
   464   0001F0                     	ds	2
   465   0001F2                     main@consecuitive:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x66
   469   0001F2                     	ds	2
   470   0001F4                     main@colour:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x68
   474   0001F4                     	ds	2
   475   0001F6                     main@prev_colour:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x6A
   479   0001F6                     	ds	2
   480                           
   481                           	psect	cstackBANK0
   482   000060                     __pcstackBANK0:
   483                           	callstack 0
   484   000060                     efgtoa@fp:
   485                           	callstack 0
   486   000060                     colour_rel@L:
   487                           	callstack 0
   488   000060                     _Colour_decider$2791:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x0
   492   000060                     	ds	2
   493   000062                     efgtoa@f:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x2
   497   000062                     	ds	2
   498   000064                     Colour_decider@Cmax_i:
   499                           	callstack 0
   500   000064                     _colour_rel$2789:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x4
   504   000064                     	ds	2
   505   000066                     efgtoa@c:
   506                           	callstack 0
   507   000066                     Colour_decider@RGB_col:
   508                           	callstack 0
   509                           
   510                           ; 12 bytes @ 0x6
   511   000066                     	ds	1
   512   000067                     ??_efgtoa:
   513                           
   514                           ; 1 bytes @ 0x7
   515   000067                     	ds	1
   516   000068                     _colour_rel$2790:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x8
   520   000068                     	ds	1
   521   000069                     efgtoa@ne:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x9
   525   000069                     	ds	2
   526   00006B                     efgtoa@p:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xB
   530   00006B                     	ds	1
   531   00006C                     colour_rel@R:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0xC
   535   00006C                     	ds	1
   536   00006D                     efgtoa@t:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xD
   540   00006D                     	ds	2
   541   00006F                     _efgtoa$2418:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xF
   545   00006F                     	ds	1
   546   000070                     colour_rel@G:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x10
   550   000070                     	ds	1
   551   000071                     efgtoa@pp:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x11
   555   000071                     	ds	1
   556   000072                     efgtoa@mode:
   557                           	callstack 0
   558   000072                     Colour_decider@Cmax:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x12
   562   000072                     	ds	1
   563   000073                     efgtoa@nmode:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x13
   567   000073                     	ds	1
   568   000074                     efgtoa@d:
   569                           	callstack 0
   570   000074                     colour_rel@B:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x14
   574   000074                     	ds	2
   575   000076                     efgtoa@m:
   576                           	callstack 0
   577   000076                     Colour_decider@Cmin:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x16
   581   000076                     	ds	2
   582   000078                     efgtoa@e:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x18
   586   000078                     	ds	2
   587   00007A                     Colour_decider@i:
   588                           	callstack 0
   589   00007A                     efgtoa@w:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x1A
   593   00007A                     	ds	2
   594   00007C                     Colour_decider@Hue:
   595                           	callstack 0
   596   00007C                     efgtoa@ou:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x1C
   600   00007C                     	ds	4
   601   000080                     efgtoa@i:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x20
   605   000080                     	ds	2
   606   000082                     efgtoa@h:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x22
   610   000082                     	ds	4
   611   000086                     efgtoa@l:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x26
   615   000086                     	ds	4
   616   00008A                     efgtoa@sign:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x2A
   620   00008A                     	ds	1
   621   00008B                     efgtoa@n:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x2B
   625   00008B                     	ds	2
   626   00008D                     efgtoa@g:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x2D
   630   00008D                     	ds	4
   631   000091                     efgtoa@u:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x31
   635   000091                     	ds	4
   636   000095                     vfpfcnvrt@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x35
   640   000095                     	ds	2
   641   000097                     vfpfcnvrt@fmt:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x37
   645   000097                     	ds	2
   646   000099                     vfpfcnvrt@ap:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x39
   650   000099                     	ds	2
   651   00009B                     ??_vfpfcnvrt:
   652                           
   653                           ; 1 bytes @ 0x3B
   654   00009B                     	ds	2
   655   00009D                     vfpfcnvrt@convarg:
   656                           	callstack 0
   657                           
   658                           ; 8 bytes @ 0x3D
   659   00009D                     	ds	8
   660   0000A5                     vfpfcnvrt@c:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x45
   664   0000A5                     	ds	1
   665   0000A6                     vfpfcnvrt@cp:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x46
   669   0000A6                     	ds	2
   670   0000A8                     ?_vfprintf:
   671                           	callstack 0
   672   0000A8                     vfprintf@fp:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x48
   676   0000A8                     	ds	2
   677   0000AA                     vfprintf@fmt:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x4A
   681   0000AA                     	ds	2
   682   0000AC                     vfprintf@ap:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x4C
   686   0000AC                     	ds	2
   687   0000AE                     vfprintf@cfmt:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x4E
   691   0000AE                     	ds	2
   692   0000B0                     ?_sprintf:
   693                           	callstack 0
   694   0000B0                     sprintf@s:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x50
   698   0000B0                     	ds	2
   699   0000B2                     sprintf@fmt:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x52
   703   0000B2                     	ds	18
   704   0000C4                     sprintf@ap:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x64
   708   0000C4                     	ds	2
   709   0000C6                     sprintf@f:
   710                           	callstack 0
   711                           
   712                           ; 11 bytes @ 0x66
   713   0000C6                     	ds	11
   714   0000D1                     ??_main:
   715                           
   716                           ; 1 bytes @ 0x71
   717   0000D1                     	ds	2
   718                           
   719                           	psect	cstackCOMRAM
   720   000001                     __pcstackCOMRAM:
   721                           	callstack 0
   722   000001                     ??_I2C_2_Master_Idle:
   723   000001                     ?___fpclassifyf:
   724                           	callstack 0
   725   000001                     ?___wmul:
   726                           	callstack 0
   727   000001                     ?___fladd:
   728                           	callstack 0
   729   000001                     ?_labs:
   730                           	callstack 0
   731   000001                     ?___flneg:
   732                           	callstack 0
   733   000001                     ?___fltol:
   734                           	callstack 0
   735   000001                     ?___xxtofl:
   736                           	callstack 0
   737   000001                     ?___aodiv:
   738                           	callstack 0
   739   000001                     ?___aomod:
   740                           	callstack 0
   741   000001                     sendCharSerial4@charToSend:
   742                           	callstack 0
   743   000001                     initDCmotorsPWM@PWMperiod:
   744                           	callstack 0
   745   000001                     ___wmul@multiplier:
   746                           	callstack 0
   747   000001                     memcpy@d1:
   748                           	callstack 0
   749   000001                     fputc@c:
   750                           	callstack 0
   751   000001                     strcpy@dest:
   752                           	callstack 0
   753   000001                     ___flneg@f1:
   754                           	callstack 0
   755   000001                     ___fltol@f1:
   756                           	callstack 0
   757   000001                     ___fladd@b:
   758                           	callstack 0
   759   000001                     ___xxtofl@val:
   760                           	callstack 0
   761   000001                     ___fpclassifyf@x:
   762                           	callstack 0
   763   000001                     labs@a:
   764                           	callstack 0
   765   000001                     ___aodiv@dividend:
   766                           	callstack 0
   767   000001                     ___aomod@dividend:
   768                           	callstack 0
   769                           
   770                           ; 8 bytes @ 0x0
   771   000001                     	ds	1
   772   000002                     ??_I2C_2_Master_Read:
   773   000002                     I2C_2_Master_Write@data_byte:
   774                           	callstack 0
   775   000002                     sendStringSerial4@string:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x1
   779   000002                     	ds	1
   780   000003                     color_writetoaddr@value:
   781                           	callstack 0
   782   000003                     I2C_2_Master_Read@ack:
   783                           	callstack 0
   784   000003                     ___wmul@multiplicand:
   785                           	callstack 0
   786   000003                     memcpy@s1:
   787                           	callstack 0
   788   000003                     fputc@fp:
   789                           	callstack 0
   790   000003                     strcpy@src:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x2
   794   000003                     	ds	1
   795   000004                     color_writetoaddr@address:
   796                           	callstack 0
   797   000004                     I2C_2_Master_Read@tmp:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x3
   801   000004                     	ds	1
   802   000005                     ??_fputc:
   803   000005                     ??___fpclassifyf:
   804   000005                     ??_labs:
   805   000005                     ??_color_click_init:
   806   000005                     ??___fltol:
   807   000005                     ??___xxtofl:
   808   000005                     ?_color_read_lum:
   809                           	callstack 0
   810   000005                     ?_color_read_Red:
   811                           	callstack 0
   812   000005                     ?_color_read_Green:
   813                           	callstack 0
   814   000005                     ?_color_read_Blue:
   815                           	callstack 0
   816   000005                     ___wmul@product:
   817                           	callstack 0
   818   000005                     memcpy@n:
   819                           	callstack 0
   820   000005                     strcpy@s:
   821                           	callstack 0
   822   000005                     ___fladd@a:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x4
   826   000005                     	ds	2
   827   000007                     ??_color_read_lum:
   828   000007                     ??_color_read_Red:
   829   000007                     ??_color_read_Green:
   830   000007                     ??_color_read_Blue:
   831   000007                     ?___lwdiv:
   832                           	callstack 0
   833   000007                     ___lwdiv@dividend:
   834                           	callstack 0
   835   000007                     memcpy@d:
   836                           	callstack 0
   837   000007                     strcpy@d:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x6
   841   000007                     	ds	2
   842   000009                     ??___fladd:
   843   000009                     ___fltol@sign1:
   844                           	callstack 0
   845   000009                     ___xxtofl@sign:
   846                           	callstack 0
   847   000009                     ___lwdiv@divisor:
   848                           	callstack 0
   849   000009                     ___fpclassifyf@e:
   850                           	callstack 0
   851   000009                     memcpy@s:
   852                           	callstack 0
   853   000009                     ___aodiv@divisor:
   854                           	callstack 0
   855   000009                     ___aomod@divisor:
   856                           	callstack 0
   857                           
   858                           ; 8 bytes @ 0x8
   859   000009                     	ds	1
   860   00000A                     ___fltol@exp1:
   861                           	callstack 0
   862   00000A                     ___xxtofl@exp:
   863                           	callstack 0
   864   00000A                     color_read_lum@tmp:
   865                           	callstack 0
   866   00000A                     color_read_Red@tmp:
   867                           	callstack 0
   868   00000A                     color_read_Green@tmp:
   869                           	callstack 0
   870   00000A                     color_read_Blue@tmp:
   871                           	callstack 0
   872   00000A                     fputs@s:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x9
   876   00000A                     	ds	1
   877   00000B                     memcpy@tmp:
   878                           	callstack 0
   879   00000B                     ___lwdiv@quotient:
   880                           	callstack 0
   881   00000B                     ___xxtofl@arg:
   882                           	callstack 0
   883   00000B                     ___fpclassifyf@u:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0xA
   887   00000B                     	ds	1
   888   00000C                     readColours@vals:
   889                           	callstack 0
   890   00000C                     fputs@fp:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0xB
   894   00000C                     	ds	1
   895   00000D                     ___lwdiv@counter:
   896                           	callstack 0
   897   00000D                     ___fladd@signs:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0xC
   901   00000D                     	ds	1
   902   00000E                     ___fladd@aexp:
   903                           	callstack 0
   904   00000E                     fputs@c:
   905                           	callstack 0
   906   00000E                     setMotorPWM@m:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0xD
   910   00000E                     	ds	1
   911   00000F                     ___fladd@bexp:
   912                           	callstack 0
   913   00000F                     fputs@i:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0xE
   917   00000F                     	ds	1
   918   000010                     ??_setMotorPWM:
   919   000010                     ___fladd@grs:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0xF
   923   000010                     	ds	1
   924   000011                     ?___flmul:
   925                           	callstack 0
   926   000011                     ___aodiv@counter:
   927                           	callstack 0
   928   000011                     ___aomod@counter:
   929                           	callstack 0
   930   000011                     pad@fp:
   931                           	callstack 0
   932   000011                     ___flmul@b:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x10
   936   000011                     	ds	1
   937   000012                     setMotorPWM@posDuty:
   938                           	callstack 0
   939   000012                     ___aodiv@sign:
   940                           	callstack 0
   941   000012                     ___aomod@sign:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x11
   945   000012                     	ds	1
   946   000013                     ?_abs:
   947                           	callstack 0
   948   000013                     setMotorPWM@negDuty:
   949                           	callstack 0
   950   000013                     pad@buf:
   951                           	callstack 0
   952   000013                     abs@a:
   953                           	callstack 0
   954   000013                     ___aodiv@quotient:
   955                           	callstack 0
   956                           
   957                           ; 8 bytes @ 0x12
   958   000013                     	ds	1
   959   000014                     stop@mL:
   960                           	callstack 0
   961   000014                     turnLeft@mL:
   962                           	callstack 0
   963   000014                     turnRight@mL:
   964                           	callstack 0
   965   000014                     fullSpeedAhead@mL:
   966                           	callstack 0
   967   000014                     fullSpeedBack@mL:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x13
   971   000014                     	ds	1
   972   000015                     ??_abs:
   973   000015                     pad@p:
   974                           	callstack 0
   975   000015                     ___flmul@a:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x14
   979   000015                     	ds	1
   980   000016                     stop@mR:
   981                           	callstack 0
   982   000016                     turnLeft@mR:
   983                           	callstack 0
   984   000016                     turnRight@mR:
   985                           	callstack 0
   986   000016                     fullSpeedAhead@mR:
   987                           	callstack 0
   988   000016                     fullSpeedBack@mR:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x15
   992   000016                     	ds	1
   993   000017                     ??_pad:
   994                           
   995                           ; 1 bytes @ 0x16
   996   000017                     	ds	1
   997   000018                     ??_stop:
   998   000018                     ??_turnLeft:
   999   000018                     ??_turnRight:
  1000   000018                     ??_fullSpeedAhead:
  1001   000018                     ??_fullSpeedBack:
  1002   000018                     pad@i:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x17
  1006   000018                     	ds	1
  1007   000019                     ??___flmul:
  1008                           
  1009                           ; 1 bytes @ 0x18
  1010   000019                     	ds	1
  1011   00001A                     turnRight45@mL:
  1012                           	callstack 0
  1013   00001A                     turnLeft45@mL:
  1014                           	callstack 0
  1015   00001A                     reverseDetect@mL:
  1016                           	callstack 0
  1017   00001A                     reverseOneBlock@mL:
  1018                           	callstack 0
  1019   00001A                     ForwardOneBlock@mL:
  1020                           	callstack 0
  1021   00001A                     Forwardhalfblock@mL:
  1022                           	callstack 0
  1023   00001A                     RetryMove@mL:
  1024                           	callstack 0
  1025   00001A                     pad@w:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x19
  1029   00001A                     	ds	2
  1030   00001C                     turnRight45@mR:
  1031                           	callstack 0
  1032   00001C                     turnLeft45@mR:
  1033                           	callstack 0
  1034   00001C                     reverseDetect@mR:
  1035                           	callstack 0
  1036   00001C                     reverseOneBlock@mR:
  1037                           	callstack 0
  1038   00001C                     ForwardOneBlock@mR:
  1039                           	callstack 0
  1040   00001C                     Forwardhalfblock@mR:
  1041                           	callstack 0
  1042   00001C                     RetryMove@mR:
  1043                           	callstack 0
  1044   00001C                     dtoa@fp:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x1B
  1048   00001C                     	ds	1
  1049   00001D                     ___flmul@sign:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x1C
  1053   00001D                     	ds	1
  1054   00001E                     ??_Forwardhalfblock:
  1055   00001E                     ??_RetryMove:
  1056   00001E                     ??_turnRight45:
  1057   00001E                     ??_turnLeft45:
  1058   00001E                     ??_reverseDetect:
  1059   00001E                     ??_reverseOneBlock:
  1060   00001E                     ??_ForwardOneBlock:
  1061   00001E                     ___flmul@grs:
  1062                           	callstack 0
  1063   00001E                     dtoa@d:
  1064                           	callstack 0
  1065                           
  1066                           ; 8 bytes @ 0x1D
  1067   00001E                     	ds	2
  1068   000020                     RedMove@mL:
  1069                           	callstack 0
  1070   000020                     GreenMove@mL:
  1071                           	callstack 0
  1072   000020                     BlueMove@mL:
  1073                           	callstack 0
  1074   000020                     YellowMove@mL:
  1075                           	callstack 0
  1076   000020                     PinkMove@mL:
  1077                           	callstack 0
  1078   000020                     OrangeMove@mL:
  1079                           	callstack 0
  1080   000020                     LightBlueMove@mL:
  1081                           	callstack 0
  1082   000020                     ReverseYellow@mL:
  1083                           	callstack 0
  1084   000020                     ReversePink@mL:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x1F
  1088   000020                     	ds	2
  1089   000022                     ___flmul@aexp:
  1090                           	callstack 0
  1091   000022                     RedMove@mR:
  1092                           	callstack 0
  1093   000022                     GreenMove@mR:
  1094                           	callstack 0
  1095   000022                     BlueMove@mR:
  1096                           	callstack 0
  1097   000022                     YellowMove@mR:
  1098                           	callstack 0
  1099   000022                     PinkMove@mR:
  1100                           	callstack 0
  1101   000022                     OrangeMove@mR:
  1102                           	callstack 0
  1103   000022                     LightBlueMove@mR:
  1104                           	callstack 0
  1105   000022                     ReverseYellow@mR:
  1106                           	callstack 0
  1107   000022                     ReversePink@mR:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x21
  1111   000022                     	ds	1
  1112   000023                     ___flmul@bexp:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x22
  1116   000023                     	ds	1
  1117   000024                     go_Home@WayBack:
  1118                           	callstack 0
  1119   000024                     ___flmul@prod:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x23
  1123   000024                     	ds	2
  1124   000026                     ??_dtoa:
  1125                           
  1126                           ; 1 bytes @ 0x25
  1127   000026                     	ds	1
  1128   000027                     go_Home@i:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x26
  1132   000027                     	ds	1
  1133   000028                     ___flmul@temp:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x27
  1137   000028                     	ds	2
  1138   00002A                     ?___flsub:
  1139                           	callstack 0
  1140   00002A                     ___flge@ff1:
  1141                           	callstack 0
  1142   00002A                     ___flsub@b:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x29
  1146   00002A                     	ds	4
  1147   00002E                     _dtoa$2387:
  1148                           	callstack 0
  1149   00002E                     ___flge@ff2:
  1150                           	callstack 0
  1151   00002E                     ___flsub@a:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x2D
  1155   00002E                     	ds	2
  1156   000030                     dtoa@p:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x2F
  1160   000030                     	ds	2
  1161   000032                     ??___flge:
  1162   000032                     ?___fldiv:
  1163                           	callstack 0
  1164   000032                     dtoa@w:
  1165                           	callstack 0
  1166   000032                     ___fleq@ff1:
  1167                           	callstack 0
  1168   000032                     ___fldiv@b:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x31
  1172   000032                     	ds	2
  1173   000034                     dtoa@n:
  1174                           	callstack 0
  1175                           
  1176                           ; 8 bytes @ 0x33
  1177   000034                     	ds	2
  1178   000036                     ___fleq@ff2:
  1179                           	callstack 0
  1180   000036                     ___fldiv@a:
  1181                           	callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x35
  1184   000036                     	ds	4
  1185   00003A                     ??___fldiv:
  1186   00003A                     ??___fleq:
  1187                           
  1188                           ; 1 bytes @ 0x39
  1189   00003A                     	ds	2
  1190   00003C                     dtoa@i:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x3B
  1194   00003C                     	ds	2
  1195   00003E                     dtoa@s:
  1196                           	callstack 0
  1197   00003E                     ___fldiv@rem:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x3D
  1201   00003E                     	ds	4
  1202   000042                     ___fldiv@sign:
  1203                           	callstack 0
  1204                           
  1205                           ; 1 bytes @ 0x41
  1206   000042                     	ds	1
  1207   000043                     ___fldiv@new_exp:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x42
  1211   000043                     	ds	2
  1212   000045                     ___fldiv@grs:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x44
  1216   000045                     	ds	4
  1217   000049                     ___fldiv@bexp:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x48
  1221   000049                     	ds	1
  1222   00004A                     ___fldiv@aexp:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x49
  1226   00004A                     	ds	1
  1227   00004B                     ?_Colour_decider:
  1228                           	callstack 0
  1229   00004B                     ?_floorf:
  1230                           	callstack 0
  1231   00004B                     colour_rel@vals:
  1232                           	callstack 0
  1233   00004B                     Colour_decider@vals:
  1234                           	callstack 0
  1235   00004B                     floorf@x:
  1236                           	callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x4A
  1239   00004B                     	ds	2
  1240   00004D                     colour_rel@rel:
  1241                           	callstack 0
  1242   00004D                     Colour_decider@rel:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x4C
  1246   00004D                     	ds	2
  1247   00004F                     ??_floorf:
  1248   00004F                     ??_Colour_decider:
  1249                           
  1250                           ; 1 bytes @ 0x4E
  1251   00004F                     	ds	6
  1252   000055                     floorf@m:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x54
  1256   000055                     	ds	4
  1257   000059                     floorf@e:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x58
  1261   000059                     	ds	2
  1262   00005B                     floorf@u:
  1263                           	callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x5A
  1266   00005B                     	ds	4
  1267   00005F                     
  1268                           ; 1 bytes @ 0x5E
  1269 ;;
  1270 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1271 ;;
  1272 ;; *************** function _main *****************
  1273 ;; Defined at:
  1274 ;;		line 29 in file "main.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  colour          2  104[BANK1 ] int 
  1279 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1280 ;;  prev_colour     2  106[BANK1 ] int 
  1281 ;;  consecuitive    2  102[BANK1 ] int 
  1282 ;;  run_flag        2  100[BANK1 ] int 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;Total ram usage:      110 bytes
  1297 ;; Hardware stack levels required when called: 9
  1298 ;; This function calls:
  1299 ;;		_BlueMove
  1300 ;;		_Colour_decider
  1301 ;;		_Forwardhalfblock
  1302 ;;		_GreenMove
  1303 ;;		_I2C_2_Master_Init
  1304 ;;		_Interrupts_init
  1305 ;;		_LightBlueMove
  1306 ;;		_OrangeMove
  1307 ;;		_PinkMove
  1308 ;;		_RedMove
  1309 ;;		_RetryMove
  1310 ;;		_YellowMove
  1311 ;;		_color_click_init
  1312 ;;		_colour_rel
  1313 ;;		_go_Home
  1314 ;;		_initDCmotorsPWM
  1315 ;;		_initUSART4
  1316 ;;		_readColours
  1317 ;;		_sendStringSerial4
  1318 ;;		_sprintf
  1319 ;;		_stop
  1320 ;; This function is called by:
  1321 ;;		Startup code after reset
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text0
  1326   002330                     __ptext0:
  1327                           	callstack 0
  1328   002330                     _main:
  1329                           	callstack 22
  1330   002330                     
  1331                           ;main.c: 30:     initUSART4();
  1332   002330  ECBE  F02D         	call	_initUSART4	;wreg free
  1333   002334                     
  1334                           ;main.c: 31:     Interrupts_init();
  1335   002334  ECF3  F02D         	call	_Interrupts_init	;wreg free
  1336   002338                     
  1337                           ;main.c: 32:     color_click_init();
  1338   002338  ECD7  F02A         	call	_color_click_init	;wreg free
  1339   00233C                     
  1340                           ;main.c: 33:     I2C_2_Master_Init();
  1341   00233C  EC72  F02D         	call	_I2C_2_Master_Init	;wreg free
  1342   002340                     
  1343                           ;main.c: 34:     initDCmotorsPWM(200);
  1344   002340  0E00               	movlw	0
  1345   002342  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1346   002344  0EC8               	movlw	200
  1347   002346  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1348   002348  EC28  F027         	call	_initDCmotorsPWM	;wreg free
  1349   00234C                     
  1350                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1351   00234C  9287               	bcf	135,1,c	;volatile
  1352   00234E                     
  1353                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1354   00234E  9881               	bcf	129,4,c	;volatile
  1355   002350                     
  1356                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1357   002350  9E86               	bcf	134,7,c	;volatile
  1358   002352                     
  1359                           ;main.c: 39:     TRISFbits.TRISF2 = 1;
  1360   002352  8486               	bsf	134,2,c	;volatile
  1361   002354                     
  1362                           ;main.c: 40:     ANSELFbits.ANSELF2=0;
  1363   002354  010E               	movlb	14	; () banked
  1364   002356  95B4               	bcf	180,2,b	;volatile
  1365   002358                     
  1366                           ; BSR set to: 14
  1367                           ;main.c: 41:     LATGbits.LATG1=1;
  1368   002358  827F               	bsf	127,1,c	;volatile
  1369   00235A                     
  1370                           ; BSR set to: 14
  1371                           ;main.c: 42:     LATAbits.LATA4=1;
  1372   00235A  8879               	bsf	121,4,c	;volatile
  1373   00235C                     
  1374                           ; BSR set to: 14
  1375                           ;main.c: 43:     LATFbits.LATF7=1;
  1376   00235C  8E7E               	bsf	126,7,c	;volatile
  1377   00235E                     
  1378                           ; BSR set to: 14
  1379                           ;main.c: 47:     motorL.power=0;
  1380   00235E  0E00               	movlw	0
  1381   002360  0101               	movlb	1	; () banked
  1382   002362  6F7B               	movwf	_motorL& (0+255),b
  1383   002364                     
  1384                           ; BSR set to: 1
  1385                           ;main.c: 48:     motorL.direction=1;
  1386   002364  0E01               	movlw	1
  1387   002366  6F7C               	movwf	(_motorL+1)& (0+255),b
  1388   002368                     
  1389                           ; BSR set to: 1
  1390                           ;main.c: 49:     motorL.brakemode=1;
  1391   002368  0E01               	movlw	1
  1392   00236A  6F7D               	movwf	(_motorL+2)& (0+255),b
  1393   00236C                     
  1394                           ; BSR set to: 1
  1395                           ;main.c: 50:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1396   00236C  0EAA               	movlw	170
  1397   00236E  6F80               	movwf	(_motorL+5)& (0+255),b
  1398   002370  0E0F               	movlw	15
  1399   002372  6F81               	movwf	(_motorL+6)& (0+255),b
  1400   002374                     
  1401                           ; BSR set to: 1
  1402                           ;main.c: 51:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1403   002374  0EA6               	movlw	166
  1404   002376  6F82               	movwf	(_motorL+7)& (0+255),b
  1405   002378  0E0F               	movlw	15
  1406   00237A  6F83               	movwf	(_motorL+8)& (0+255),b
  1407   00237C                     
  1408                           ; BSR set to: 1
  1409                           ;main.c: 52:     motorL.PWMperiod=200;
  1410   00237C  0E00               	movlw	0
  1411   00237E  6F7F               	movwf	(_motorL+4)& (0+255),b
  1412   002380  0EC8               	movlw	200
  1413   002382  6F7E               	movwf	(_motorL+3)& (0+255),b
  1414   002384                     
  1415                           ; BSR set to: 1
  1416                           ;main.c: 53:     motorR.power=0;
  1417   002384  0E00               	movlw	0
  1418   002386  6F72               	movwf	_motorR& (0+255),b
  1419   002388                     
  1420                           ; BSR set to: 1
  1421                           ;main.c: 54:     motorR.direction=1;
  1422   002388  0E01               	movlw	1
  1423   00238A  6F73               	movwf	(_motorR+1)& (0+255),b
  1424   00238C                     
  1425                           ; BSR set to: 1
  1426                           ;main.c: 55:     motorR.brakemode=1;
  1427   00238C  0E01               	movlw	1
  1428   00238E  6F74               	movwf	(_motorR+2)& (0+255),b
  1429   002390                     
  1430                           ; BSR set to: 1
  1431                           ;main.c: 56:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1432   002390  0E25               	movlw	37
  1433   002392  6F77               	movwf	(_motorR+5)& (0+255),b
  1434   002394  0E0F               	movlw	15
  1435   002396  6F78               	movwf	(_motorR+6)& (0+255),b
  1436   002398                     
  1437                           ; BSR set to: 1
  1438                           ;main.c: 57:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1439   002398  0E21               	movlw	33
  1440   00239A  6F79               	movwf	(_motorR+7)& (0+255),b
  1441   00239C  0E0F               	movlw	15
  1442   00239E  6F7A               	movwf	(_motorR+8)& (0+255),b
  1443   0023A0                     
  1444                           ; BSR set to: 1
  1445                           ;main.c: 58:     motorR.PWMperiod=200;
  1446   0023A0  0E00               	movlw	0
  1447   0023A2  6F76               	movwf	(_motorR+4)& (0+255),b
  1448   0023A4  0EC8               	movlw	200
  1449   0023A6  6F75               	movwf	(_motorR+3)& (0+255),b
  1450   0023A8                     
  1451                           ; BSR set to: 1
  1452                           ;main.c: 59:     int consecuitive=0;
  1453   0023A8  0E00               	movlw	0
  1454   0023AA  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1455   0023AC  0E00               	movlw	0
  1456   0023AE  6FF2               	movwf	main@consecuitive& (0+255),b
  1457   0023B0                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 60:     int prev_colour =0;
  1460   0023B0  0E00               	movlw	0
  1461   0023B2  6FF7               	movwf	(main@prev_colour+1)& (0+255),b
  1462   0023B4  0E00               	movlw	0
  1463   0023B6  6FF6               	movwf	main@prev_colour& (0+255),b
  1464   0023B8                     
  1465                           ; BSR set to: 1
  1466                           ;main.c: 61:     int run_flag=1;
  1467   0023B8  0E00               	movlw	0
  1468   0023BA  6FF1               	movwf	(main@run_flag+1)& (0+255),b
  1469   0023BC  0E01               	movlw	1
  1470   0023BE  6FF0               	movwf	main@run_flag& (0+255),b
  1471   0023C0                     
  1472                           ; BSR set to: 1
  1473                           ;main.c: 62:     move_count=-1;
  1474   0023C0  6914               	setf	_move_count& (0+255),b	;volatile
  1475   0023C2  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1476   0023C4                     l384:
  1477   0023C4  B48E               	btfsc	142,2,c	;volatile
  1478   0023C6  EFE7  F011         	goto	u5481
  1479   0023CA  EFE9  F011         	goto	u5480
  1480   0023CE                     u5481:
  1481   0023CE  EFE2  F011         	goto	l384
  1482   0023D2                     u5480:
  1483   0023D2                     
  1484                           ;main.c: 64:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1485   0023D2  0E52               	movlw	82
  1486   0023D4  0100               	movlb	0	; () banked
  1487   0023D6  6FD2               	movwf	(??_main+1)& (0+255),b
  1488   0023D8  0E2B               	movlw	43
  1489   0023DA  6FD1               	movwf	??_main& (0+255),b
  1490   0023DC  0E00               	movlw	0
  1491   0023DE                     u5627:
  1492   0023DE  2EE8               	decfsz	wreg,f,c
  1493   0023E0  D7FE               	bra	u5627
  1494   0023E2  2FD1               	decfsz	??_main& (0+255),f,b
  1495   0023E4  D7FC               	bra	u5627
  1496   0023E6  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1497   0023E8  D7FA               	bra	u5627
  1498   0023EA  F000               	nop	
  1499                           
  1500                           ;main.c: 65:     while (run_flag)
  1501   0023EC  EF0F  F014         	goto	l5569
  1502   0023F0                     l5463:
  1503                           
  1504                           ; BSR set to: 1
  1505                           ;main.c: 66:     {;main.c: 67:         Forwardhalfblock(&motorL,&motorR);
  1506   0023F0  0E7B               	movlw	low _motorL
  1507   0023F2  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1508   0023F4  0E01               	movlw	high _motorL
  1509   0023F6  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1510   0023F8  0E72               	movlw	low _motorR
  1511   0023FA  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1512   0023FC  0E01               	movlw	high _motorR
  1513   0023FE  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1514   002400  EC52  F029         	call	_Forwardhalfblock	;wreg free
  1515   002404                     
  1516                           ;main.c: 68:         move_count++;
  1517   002404  0101               	movlb	1	; () banked
  1518   002406  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1519   002408  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1520   00240A                     
  1521                           ; BSR set to: 1
  1522                           ;main.c: 69:         WayBack[move_count]=0;
  1523   00240A  0E00               	movlw	low _WayBack
  1524   00240C  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1525   00240E  6ED9               	movwf	fsr2l,c
  1526   002410  0E03               	movlw	high _WayBack
  1527   002412  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1528   002414  6EDA               	movwf	fsr2h,c
  1529   002416  0E00               	movlw	0
  1530   002418  6EDF               	movwf	indf2,c
  1531   00241A                     
  1532                           ; BSR set to: 1
  1533                           ;main.c: 73:         readColours(&vals);
  1534   00241A  0E84               	movlw	low _vals
  1535   00241C  6E0C               	movwf	readColours@vals^0,c
  1536   00241E  0E01               	movlw	high _vals
  1537   002420  6E0D               	movwf	(readColours@vals+1)^0,c
  1538   002422  ECC9  F028         	call	_readColours	;wreg free
  1539   002426                     
  1540                           ;main.c: 76:         colour_rel(&vals, &rel);
  1541   002426  0E84               	movlw	low _vals
  1542   002428  6E4B               	movwf	colour_rel@vals^0,c
  1543   00242A  0E01               	movlw	high _vals
  1544   00242C  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1545   00242E  0E66               	movlw	low _rel
  1546   002430  6E4D               	movwf	colour_rel@rel^0,c
  1547   002432  0E01               	movlw	high _rel
  1548   002434  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1549   002436  EC5D  F01A         	call	_colour_rel	;wreg free
  1550   00243A                     
  1551                           ;main.c: 79:         if (vals.L>=2200){
  1552   00243A  0101               	movlb	1	; () banked
  1553   00243C  BF8B               	btfsc	(_vals+7)& (0+255),7,b
  1554   00243E  EF2A  F012         	goto	u5491
  1555   002442  0E98               	movlw	152
  1556   002444  5D8A               	subwf	(_vals+6)& (0+255),w,b
  1557   002446  0E08               	movlw	8
  1558   002448  598B               	subwfb	(_vals+7)& (0+255),w,b
  1559   00244A  A0D8               	btfss	status,0,c
  1560   00244C  EF2A  F012         	goto	u5491
  1561   002450  EF2C  F012         	goto	u5490
  1562   002454                     u5491:
  1563   002454  EFEE  F013         	goto	l5565
  1564   002458                     u5490:
  1565   002458                     
  1566                           ; BSR set to: 1
  1567                           ;main.c: 80:             Forwardhalfblock(&motorL,&motorR);
  1568   002458  0E7B               	movlw	low _motorL
  1569   00245A  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1570   00245C  0E01               	movlw	high _motorL
  1571   00245E  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1572   002460  0E72               	movlw	low _motorR
  1573   002462  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1574   002464  0E01               	movlw	high _motorR
  1575   002466  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1576   002468  EC52  F029         	call	_Forwardhalfblock	;wreg free
  1577                           
  1578                           ;main.c: 82:             stop(&motorL, &motorR);
  1579   00246C  0E7B               	movlw	low _motorL
  1580   00246E  6E14               	movwf	stop@mL^0,c
  1581   002470  0E01               	movlw	high _motorL
  1582   002472  6E15               	movwf	(stop@mL+1)^0,c
  1583   002474  0E72               	movlw	low _motorR
  1584   002476  6E16               	movwf	stop@mR^0,c
  1585   002478  0E01               	movlw	high _motorR
  1586   00247A  6E17               	movwf	(stop@mR+1)^0,c
  1587   00247C  ECAD  F027         	call	_stop	;wreg free
  1588   002480                     
  1589                           ;main.c: 83:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1590   002480  0E11               	movlw	17
  1591   002482  0100               	movlb	0	; () banked
  1592   002484  6FD2               	movwf	(??_main+1)& (0+255),b
  1593   002486  0E3C               	movlw	60
  1594   002488  6FD1               	movwf	??_main& (0+255),b
  1595   00248A  0ECB               	movlw	203
  1596   00248C                     u5637:
  1597   00248C  2EE8               	decfsz	wreg,f,c
  1598   00248E  D7FE               	bra	u5637
  1599   002490  2FD1               	decfsz	??_main& (0+255),f,b
  1600   002492  D7FC               	bra	u5637
  1601   002494  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1602   002496  D7FA               	bra	u5637
  1603                           
  1604                           ;main.c: 88:             while (consecuitive<20){
  1605   002498  EF81  F012         	goto	l5491
  1606   00249C                     l5479:
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;main.c: 89:                 int colour = Colour_decider(&vals, &rel);
  1610   00249C  0E84               	movlw	low _vals
  1611   00249E  6E4B               	movwf	Colour_decider@vals^0,c
  1612   0024A0  0E01               	movlw	high _vals
  1613   0024A2  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1614   0024A4  0E66               	movlw	low _rel
  1615   0024A6  6E4D               	movwf	Colour_decider@rel^0,c
  1616   0024A8  0E01               	movlw	high _rel
  1617   0024AA  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1618   0024AC  EC2D  F007         	call	_Colour_decider	;wreg free
  1619   0024B0  C04B  F1F4         	movff	?_Colour_decider,main@colour
  1620   0024B4  C04C  F1F5         	movff	?_Colour_decider+1,main@colour+1
  1621   0024B8                     
  1622                           ;main.c: 90:                 if (colour==prev_colour){
  1623   0024B8  0101               	movlb	1	; () banked
  1624   0024BA  51F6               	movf	main@prev_colour& (0+255),w,b
  1625   0024BC  19F4               	xorwf	main@colour& (0+255),w,b
  1626   0024BE  E107               	bnz	u5501
  1627   0024C0  51F7               	movf	(main@prev_colour+1)& (0+255),w,b
  1628   0024C2  19F5               	xorwf	(main@colour+1)& (0+255),w,b
  1629   0024C4  A4D8               	btfss	status,2,c
  1630   0024C6  EF67  F012         	goto	u5501
  1631   0024CA  EF69  F012         	goto	u5500
  1632   0024CE                     u5501:
  1633   0024CE  EF6D  F012         	goto	l5485
  1634   0024D2                     u5500:
  1635   0024D2                     
  1636                           ; BSR set to: 1
  1637                           ;main.c: 91:                     consecuitive++;
  1638   0024D2  4BF2               	infsnz	main@consecuitive& (0+255),f,b
  1639   0024D4  2BF3               	incf	(main@consecuitive+1)& (0+255),f,b
  1640                           
  1641                           ;main.c: 92:                 }
  1642   0024D6  EF71  F012         	goto	l5487
  1643   0024DA                     l5485:
  1644                           
  1645                           ; BSR set to: 1
  1646                           ;main.c: 94:                     consecuitive=0;
  1647   0024DA  0E00               	movlw	0
  1648   0024DC  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1649   0024DE  0E00               	movlw	0
  1650   0024E0  6FF2               	movwf	main@consecuitive& (0+255),b
  1651   0024E2                     l5487:
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;main.c: 96:                 prev_colour=colour;
  1655   0024E2  C1F4  F1F6         	movff	main@colour,main@prev_colour
  1656   0024E6  C1F5  F1F7         	movff	main@colour+1,main@prev_colour+1
  1657   0024EA                     
  1658                           ; BSR set to: 1
  1659                           ;main.c: 97:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1660   0024EA  0E05               	movlw	5
  1661   0024EC  0100               	movlb	0	; () banked
  1662   0024EE  6FD2               	movwf	(??_main+1)& (0+255),b
  1663   0024F0  0E0F               	movlw	15
  1664   0024F2  6FD1               	movwf	??_main& (0+255),b
  1665   0024F4  0EF1               	movlw	241
  1666   0024F6                     u5647:
  1667   0024F6  2EE8               	decfsz	wreg,f,c
  1668   0024F8  D7FE               	bra	u5647
  1669   0024FA  2FD1               	decfsz	??_main& (0+255),f,b
  1670   0024FC  D7FC               	bra	u5647
  1671   0024FE  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1672   002500  D7FA               	bra	u5647
  1673   002502                     l5491:
  1674                           
  1675                           ;main.c: 88:             while (consecuitive<20){
  1676   002502  0101               	movlb	1	; () banked
  1677   002504  BFF3               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1678   002506  EF8E  F012         	goto	u5511
  1679   00250A  51F3               	movf	(main@consecuitive+1)& (0+255),w,b
  1680   00250C  E109               	bnz	u5510
  1681   00250E  0E14               	movlw	20
  1682   002510  5DF2               	subwf	main@consecuitive& (0+255),w,b
  1683   002512  A0D8               	btfss	status,0,c
  1684   002514  EF8E  F012         	goto	u5511
  1685   002518  EF90  F012         	goto	u5510
  1686   00251C                     u5511:
  1687   00251C  EF4E  F012         	goto	l5479
  1688   002520                     u5510:
  1689   002520                     
  1690                           ; BSR set to: 1
  1691                           ;main.c: 99:             consecuitive=0;
  1692   002520  0E00               	movlw	0
  1693   002522  6FF3               	movwf	(main@consecuitive+1)& (0+255),b
  1694   002524  0E00               	movlw	0
  1695   002526  6FF2               	movwf	main@consecuitive& (0+255),b
  1696   002528                     
  1697                           ; BSR set to: 1
  1698                           ;main.c: 101:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",r
      +                          el.R, rel.G,rel.B,vals.L, prev_colour);
  1699   002528  0E8C               	movlw	low main@buf
  1700   00252A  0100               	movlb	0	; () banked
  1701   00252C  6FB0               	movwf	sprintf@s& (0+255),b
  1702   00252E  0E01               	movlw	high main@buf
  1703   002530  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1704   002532  0E01               	movlw	low STR_1
  1705   002534  6FB2               	movwf	sprintf@fmt& (0+255),b
  1706   002536  0E0E               	movlw	high STR_1
  1707   002538  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1708   00253A  C166  F0B4         	movff	_rel,?_sprintf+4
  1709   00253E  C167  F0B5         	movff	_rel+1,?_sprintf+5
  1710   002542  C168  F0B6         	movff	_rel+2,?_sprintf+6
  1711   002546  C169  F0B7         	movff	_rel+3,?_sprintf+7
  1712   00254A  C16A  F0B8         	movff	_rel+4,?_sprintf+8
  1713   00254E  C16B  F0B9         	movff	_rel+5,?_sprintf+9
  1714   002552  C16C  F0BA         	movff	_rel+6,?_sprintf+10
  1715   002556  C16D  F0BB         	movff	_rel+7,?_sprintf+11
  1716   00255A  C16E  F0BC         	movff	_rel+8,?_sprintf+12
  1717   00255E  C16F  F0BD         	movff	_rel+9,?_sprintf+13
  1718   002562  C170  F0BE         	movff	_rel+10,?_sprintf+14
  1719   002566  C171  F0BF         	movff	_rel+11,?_sprintf+15
  1720   00256A  C18A  F0C0         	movff	_vals+6,?_sprintf+16
  1721   00256E  C18B  F0C1         	movff	_vals+7,?_sprintf+17
  1722   002572  C1F6  F0C2         	movff	main@prev_colour,?_sprintf+18
  1723   002576  C1F7  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1724   00257A  EC5C  F02A         	call	_sprintf	;wreg free
  1725   00257E                     
  1726                           ;main.c: 102:             sendStringSerial4(buf);
  1727   00257E  0E8C               	movlw	low main@buf
  1728   002580  6E02               	movwf	sendStringSerial4@string^0,c
  1729   002582  0E01               	movlw	high main@buf
  1730   002584  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1731   002586  EC5A  F02D         	call	_sendStringSerial4	;wreg free
  1732   00258A                     
  1733                           ;main.c: 104:             if (prev_colour==1){
  1734   00258A  0101               	movlb	1	; () banked
  1735   00258C  05F6               	decf	main@prev_colour& (0+255),w,b
  1736   00258E  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1737   002590  A4D8               	btfss	status,2,c
  1738   002592  EFCD  F012         	goto	u5521
  1739   002596  EFCF  F012         	goto	u5520
  1740   00259A                     u5521:
  1741   00259A  EFE6  F012         	goto	l5507
  1742   00259E                     u5520:
  1743   00259E                     
  1744                           ; BSR set to: 1
  1745                           ;main.c: 105:                 RedMove(&motorL, &motorR);
  1746   00259E  0E7B               	movlw	low _motorL
  1747   0025A0  6E20               	movwf	RedMove@mL^0,c
  1748   0025A2  0E01               	movlw	high _motorL
  1749   0025A4  6E21               	movwf	(RedMove@mL+1)^0,c
  1750   0025A6  0E72               	movlw	low _motorR
  1751   0025A8  6E22               	movwf	RedMove@mR^0,c
  1752   0025AA  0E01               	movlw	high _motorR
  1753   0025AC  6E23               	movwf	(RedMove@mR+1)^0,c
  1754   0025AE  EC00  F02D         	call	_RedMove	;wreg free
  1755   0025B2                     
  1756                           ;main.c: 106:                 move_count++;
  1757   0025B2  0101               	movlb	1	; () banked
  1758   0025B4  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1759   0025B6  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1760   0025B8                     
  1761                           ; BSR set to: 1
  1762                           ;main.c: 107:                 WayBack[move_count]=1;
  1763   0025B8  0E00               	movlw	low _WayBack
  1764   0025BA  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1765   0025BC  6ED9               	movwf	fsr2l,c
  1766   0025BE  0E03               	movlw	high _WayBack
  1767   0025C0  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1768   0025C2  6EDA               	movwf	fsr2h,c
  1769   0025C4  0E01               	movlw	1
  1770   0025C6  6EDF               	movwf	indf2,c
  1771                           
  1772                           ;main.c: 108:             }
  1773   0025C8  EF0F  F014         	goto	l5569
  1774   0025CC                     l5507:
  1775                           
  1776                           ; BSR set to: 1
  1777   0025CC  0E02               	movlw	2
  1778   0025CE  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1779   0025D0  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1780   0025D2  A4D8               	btfss	status,2,c
  1781   0025D4  EFEE  F012         	goto	u5531
  1782   0025D8  EFF0  F012         	goto	u5530
  1783   0025DC                     u5531:
  1784   0025DC  EF07  F013         	goto	l5515
  1785   0025E0                     u5530:
  1786   0025E0                     
  1787                           ; BSR set to: 1
  1788                           ;main.c: 110:                 OrangeMove(&motorL, &motorR);
  1789   0025E0  0E7B               	movlw	low _motorL
  1790   0025E2  6E20               	movwf	OrangeMove@mL^0,c
  1791   0025E4  0E01               	movlw	high _motorL
  1792   0025E6  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1793   0025E8  0E72               	movlw	low _motorR
  1794   0025EA  6E22               	movwf	OrangeMove@mR^0,c
  1795   0025EC  0E01               	movlw	high _motorR
  1796   0025EE  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1797   0025F0  EC85  F02A         	call	_OrangeMove	;wreg free
  1798   0025F4                     
  1799                           ;main.c: 111:                 move_count++;
  1800   0025F4  0101               	movlb	1	; () banked
  1801   0025F6  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1802   0025F8  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1803   0025FA                     
  1804                           ; BSR set to: 1
  1805                           ;main.c: 112:                 WayBack[move_count]=2;
  1806   0025FA  0E00               	movlw	low _WayBack
  1807   0025FC  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1808   0025FE  6ED9               	movwf	fsr2l,c
  1809   002600  0E03               	movlw	high _WayBack
  1810   002602  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1811   002604  6EDA               	movwf	fsr2h,c
  1812   002606  0E02               	movlw	2
  1813   002608  6EDF               	movwf	indf2,c
  1814                           
  1815                           ;main.c: 113:             }
  1816   00260A  EF0F  F014         	goto	l5569
  1817   00260E                     l5515:
  1818                           
  1819                           ; BSR set to: 1
  1820   00260E  0E03               	movlw	3
  1821   002610  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1822   002612  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1823   002614  A4D8               	btfss	status,2,c
  1824   002616  EF0F  F013         	goto	u5541
  1825   00261A  EF11  F013         	goto	u5540
  1826   00261E                     u5541:
  1827   00261E  EF28  F013         	goto	l5523
  1828   002622                     u5540:
  1829   002622                     
  1830                           ; BSR set to: 1
  1831                           ;main.c: 115:                 YellowMove(&motorL, &motorR);
  1832   002622  0E7B               	movlw	low _motorL
  1833   002624  6E20               	movwf	YellowMove@mL^0,c
  1834   002626  0E01               	movlw	high _motorL
  1835   002628  6E21               	movwf	(YellowMove@mL+1)^0,c
  1836   00262A  0E72               	movlw	low _motorR
  1837   00262C  6E22               	movwf	YellowMove@mR^0,c
  1838   00262E  0E01               	movlw	high _motorR
  1839   002630  6E23               	movwf	(YellowMove@mR+1)^0,c
  1840   002632  EC00  F02B         	call	_YellowMove	;wreg free
  1841   002636                     
  1842                           ;main.c: 116:                 move_count++;
  1843   002636  0101               	movlb	1	; () banked
  1844   002638  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1845   00263A  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1846   00263C                     
  1847                           ; BSR set to: 1
  1848                           ;main.c: 117:                 WayBack[move_count]=3;
  1849   00263C  0E00               	movlw	low _WayBack
  1850   00263E  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1851   002640  6ED9               	movwf	fsr2l,c
  1852   002642  0E03               	movlw	high _WayBack
  1853   002644  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1854   002646  6EDA               	movwf	fsr2h,c
  1855   002648  0E03               	movlw	3
  1856   00264A  6EDF               	movwf	indf2,c
  1857                           
  1858                           ;main.c: 118:             }
  1859   00264C  EF0F  F014         	goto	l5569
  1860   002650                     l5523:
  1861                           
  1862                           ; BSR set to: 1
  1863   002650  0E04               	movlw	4
  1864   002652  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1865   002654  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1866   002656  A4D8               	btfss	status,2,c
  1867   002658  EF30  F013         	goto	u5551
  1868   00265C  EF32  F013         	goto	u5550
  1869   002660                     u5551:
  1870   002660  EF49  F013         	goto	l5531
  1871   002664                     u5550:
  1872   002664                     
  1873                           ; BSR set to: 1
  1874                           ;main.c: 120:                 BlueMove(&motorL, &motorR);
  1875   002664  0E7B               	movlw	low _motorL
  1876   002666  6E20               	movwf	BlueMove@mL^0,c
  1877   002668  0E01               	movlw	high _motorL
  1878   00266A  6E21               	movwf	(BlueMove@mL+1)^0,c
  1879   00266C  0E72               	movlw	low _motorR
  1880   00266E  6E22               	movwf	BlueMove@mR^0,c
  1881   002670  0E01               	movlw	high _motorR
  1882   002672  6E23               	movwf	(BlueMove@mR+1)^0,c
  1883   002674  EC96  F028         	call	_BlueMove	;wreg free
  1884   002678                     
  1885                           ;main.c: 121:                 move_count++;
  1886   002678  0101               	movlb	1	; () banked
  1887   00267A  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1888   00267C  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1889   00267E                     
  1890                           ; BSR set to: 1
  1891                           ;main.c: 122:                 WayBack[move_count]=4;
  1892   00267E  0E00               	movlw	low _WayBack
  1893   002680  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1894   002682  6ED9               	movwf	fsr2l,c
  1895   002684  0E03               	movlw	high _WayBack
  1896   002686  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1897   002688  6EDA               	movwf	fsr2h,c
  1898   00268A  0E04               	movlw	4
  1899   00268C  6EDF               	movwf	indf2,c
  1900                           
  1901                           ;main.c: 123:             }
  1902   00268E  EF0F  F014         	goto	l5569
  1903   002692                     l5531:
  1904                           
  1905                           ; BSR set to: 1
  1906   002692  0E05               	movlw	5
  1907   002694  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1908   002696  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1909   002698  A4D8               	btfss	status,2,c
  1910   00269A  EF51  F013         	goto	u5561
  1911   00269E  EF53  F013         	goto	u5560
  1912   0026A2                     u5561:
  1913   0026A2  EF6A  F013         	goto	l5539
  1914   0026A6                     u5560:
  1915   0026A6                     
  1916                           ; BSR set to: 1
  1917                           ;main.c: 125:                 GreenMove(&motorL, &motorR);
  1918   0026A6  0E7B               	movlw	low _motorL
  1919   0026A8  6E20               	movwf	GreenMove@mL^0,c
  1920   0026AA  0E01               	movlw	high _motorL
  1921   0026AC  6E21               	movwf	(GreenMove@mL+1)^0,c
  1922   0026AE  0E72               	movlw	low _motorR
  1923   0026B0  6E22               	movwf	GreenMove@mR^0,c
  1924   0026B2  0E01               	movlw	high _motorR
  1925   0026B4  6E23               	movwf	(GreenMove@mR+1)^0,c
  1926   0026B6  EC1F  F02D         	call	_GreenMove	;wreg free
  1927   0026BA                     
  1928                           ;main.c: 126:                 move_count++;
  1929   0026BA  0101               	movlb	1	; () banked
  1930   0026BC  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1931   0026BE  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1932   0026C0                     
  1933                           ; BSR set to: 1
  1934                           ;main.c: 127:                 WayBack[move_count]=5;
  1935   0026C0  0E00               	movlw	low _WayBack
  1936   0026C2  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1937   0026C4  6ED9               	movwf	fsr2l,c
  1938   0026C6  0E03               	movlw	high _WayBack
  1939   0026C8  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1940   0026CA  6EDA               	movwf	fsr2h,c
  1941   0026CC  0E05               	movlw	5
  1942   0026CE  6EDF               	movwf	indf2,c
  1943                           
  1944                           ;main.c: 128:             }
  1945   0026D0  EF0F  F014         	goto	l5569
  1946   0026D4                     l5539:
  1947                           
  1948                           ; BSR set to: 1
  1949   0026D4  0E06               	movlw	6
  1950   0026D6  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1951   0026D8  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1952   0026DA  A4D8               	btfss	status,2,c
  1953   0026DC  EF72  F013         	goto	u5571
  1954   0026E0  EF74  F013         	goto	u5570
  1955   0026E4                     u5571:
  1956   0026E4  EF8B  F013         	goto	l5547
  1957   0026E8                     u5570:
  1958   0026E8                     
  1959                           ; BSR set to: 1
  1960                           ;main.c: 130:                 LightBlueMove(&motorL, &motorR);
  1961   0026E8  0E7B               	movlw	low _motorL
  1962   0026EA  6E20               	movwf	LightBlueMove@mL^0,c
  1963   0026EC  0E01               	movlw	high _motorL
  1964   0026EE  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1965   0026F0  0E72               	movlw	low _motorR
  1966   0026F2  6E22               	movwf	LightBlueMove@mR^0,c
  1967   0026F4  0E01               	movlw	high _motorR
  1968   0026F6  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1969   0026F8  ECAE  F02A         	call	_LightBlueMove	;wreg free
  1970   0026FC                     
  1971                           ;main.c: 131:                 move_count++;
  1972   0026FC  0101               	movlb	1	; () banked
  1973   0026FE  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1974   002700  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1975   002702                     
  1976                           ; BSR set to: 1
  1977                           ;main.c: 132:                 WayBack[move_count]=6;
  1978   002702  0E00               	movlw	low _WayBack
  1979   002704  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1980   002706  6ED9               	movwf	fsr2l,c
  1981   002708  0E03               	movlw	high _WayBack
  1982   00270A  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1983   00270C  6EDA               	movwf	fsr2h,c
  1984   00270E  0E06               	movlw	6
  1985   002710  6EDF               	movwf	indf2,c
  1986                           
  1987                           ;main.c: 133:             }
  1988   002712  EF0F  F014         	goto	l5569
  1989   002716                     l5547:
  1990                           
  1991                           ; BSR set to: 1
  1992   002716  0E07               	movlw	7
  1993   002718  19F6               	xorwf	main@prev_colour& (0+255),w,b
  1994   00271A  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1995   00271C  A4D8               	btfss	status,2,c
  1996   00271E  EF93  F013         	goto	u5581
  1997   002722  EF95  F013         	goto	u5580
  1998   002726                     u5581:
  1999   002726  EFAC  F013         	goto	l5555
  2000   00272A                     u5580:
  2001   00272A                     
  2002                           ; BSR set to: 1
  2003                           ;main.c: 135:                 PinkMove(&motorL, &motorR);
  2004   00272A  0E7B               	movlw	low _motorL
  2005   00272C  6E20               	movwf	PinkMove@mL^0,c
  2006   00272E  0E01               	movlw	high _motorL
  2007   002730  6E21               	movwf	(PinkMove@mL+1)^0,c
  2008   002732  0E72               	movlw	low _motorR
  2009   002734  6E22               	movwf	PinkMove@mR^0,c
  2010   002736  0E01               	movlw	high _motorR
  2011   002738  6E23               	movwf	(PinkMove@mR+1)^0,c
  2012   00273A  EC29  F02B         	call	_PinkMove	;wreg free
  2013   00273E                     
  2014                           ;main.c: 136:                 move_count++;
  2015   00273E  0101               	movlb	1	; () banked
  2016   002740  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2017   002742  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2018   002744                     
  2019                           ; BSR set to: 1
  2020                           ;main.c: 137:                 WayBack[move_count]=7;
  2021   002744  0E00               	movlw	low _WayBack
  2022   002746  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2023   002748  6ED9               	movwf	fsr2l,c
  2024   00274A  0E03               	movlw	high _WayBack
  2025   00274C  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2026   00274E  6EDA               	movwf	fsr2h,c
  2027   002750  0E07               	movlw	7
  2028   002752  6EDF               	movwf	indf2,c
  2029                           
  2030                           ;main.c: 138:             }
  2031   002754  EF0F  F014         	goto	l5569
  2032   002758                     l5555:
  2033                           
  2034                           ; BSR set to: 1
  2035   002758  0E0A               	movlw	10
  2036   00275A  19F6               	xorwf	main@prev_colour& (0+255),w,b
  2037   00275C  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2038   00275E  A4D8               	btfss	status,2,c
  2039   002760  EFB4  F013         	goto	u5591
  2040   002764  EFB6  F013         	goto	u5590
  2041   002768                     u5591:
  2042   002768  EFC2  F013         	goto	l5559
  2043   00276C                     u5590:
  2044   00276C                     
  2045                           ; BSR set to: 1
  2046                           ;main.c: 140:                 RetryMove(&motorL, &motorR);
  2047   00276C  0E7B               	movlw	low _motorL
  2048   00276E  6E1A               	movwf	RetryMove@mL^0,c
  2049   002770  0E01               	movlw	high _motorL
  2050   002772  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2051   002774  0E72               	movlw	low _motorR
  2052   002776  6E1C               	movwf	RetryMove@mR^0,c
  2053   002778  0E01               	movlw	high _motorR
  2054   00277A  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2055   00277C  EC6C  F027         	call	_RetryMove	;wreg free
  2056                           
  2057                           ;main.c: 141:             }
  2058   002780  EF0F  F014         	goto	l5569
  2059   002784                     l5559:
  2060                           
  2061                           ; BSR set to: 1
  2062   002784  51F6               	movf	main@prev_colour& (0+255),w,b
  2063   002786  11F7               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2064   002788  A4D8               	btfss	status,2,c
  2065   00278A  EFC9  F013         	goto	u5601
  2066   00278E  EFCB  F013         	goto	u5600
  2067   002792                     u5601:
  2068   002792  EFEC  F013         	goto	l406
  2069   002796                     u5600:
  2070   002796                     
  2071                           ; BSR set to: 1
  2072                           ;main.c: 143:                 BlueMove(&motorL, &motorR);
  2073   002796  0E7B               	movlw	low _motorL
  2074   002798  6E20               	movwf	BlueMove@mL^0,c
  2075   00279A  0E01               	movlw	high _motorL
  2076   00279C  6E21               	movwf	(BlueMove@mL+1)^0,c
  2077   00279E  0E72               	movlw	low _motorR
  2078   0027A0  6E22               	movwf	BlueMove@mR^0,c
  2079   0027A2  0E01               	movlw	high _motorR
  2080   0027A4  6E23               	movwf	(BlueMove@mR+1)^0,c
  2081   0027A6  EC96  F028         	call	_BlueMove	;wreg free
  2082                           
  2083                           ;main.c: 144:                 go_Home(WayBack);
  2084   0027AA  0E00               	movlw	low _WayBack
  2085   0027AC  6E24               	movwf	go_Home@WayBack^0,c
  2086   0027AE  0E03               	movlw	high _WayBack
  2087   0027B0  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2088   0027B2  ECBF  F01F         	call	_go_Home	;wreg free
  2089                           
  2090                           ;main.c: 145:                 stop(&motorL, &motorR);
  2091   0027B6  0E7B               	movlw	low _motorL
  2092   0027B8  6E14               	movwf	stop@mL^0,c
  2093   0027BA  0E01               	movlw	high _motorL
  2094   0027BC  6E15               	movwf	(stop@mL+1)^0,c
  2095   0027BE  0E72               	movlw	low _motorR
  2096   0027C0  6E16               	movwf	stop@mR^0,c
  2097   0027C2  0E01               	movlw	high _motorR
  2098   0027C4  6E17               	movwf	(stop@mR+1)^0,c
  2099   0027C6  ECAD  F027         	call	_stop	;wreg free
  2100   0027CA                     
  2101                           ;main.c: 146:                 run_flag=0;
  2102   0027CA  0E00               	movlw	0
  2103   0027CC  0101               	movlb	1	; () banked
  2104   0027CE  6FF1               	movwf	(main@run_flag+1)& (0+255),b
  2105   0027D0  0E00               	movlw	0
  2106   0027D2  6FF0               	movwf	main@run_flag& (0+255),b
  2107   0027D4  EF0F  F014         	goto	l5569
  2108   0027D8                     l406:
  2109                           
  2110                           ; BSR set to: 1
  2111   0027D8  EF0F  F014         	goto	l5569
  2112   0027DC                     l5565:
  2113                           
  2114                           ; BSR set to: 1
  2115                           ;main.c: 152:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals
      +                          .G,vals.B,vals.L);
  2116   0027DC  0E8C               	movlw	low main@buf
  2117   0027DE  0100               	movlb	0	; () banked
  2118   0027E0  6FB0               	movwf	sprintf@s& (0+255),b
  2119   0027E2  0E01               	movlw	high main@buf
  2120   0027E4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2121   0027E6  0E2E               	movlw	low STR_2
  2122   0027E8  6FB2               	movwf	sprintf@fmt& (0+255),b
  2123   0027EA  0E0E               	movlw	high STR_2
  2124   0027EC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2125   0027EE  C184  F0B4         	movff	_vals,?_sprintf+4
  2126   0027F2  C185  F0B5         	movff	_vals+1,?_sprintf+5
  2127   0027F6  C186  F0B6         	movff	_vals+2,?_sprintf+6
  2128   0027FA  C187  F0B7         	movff	_vals+3,?_sprintf+7
  2129   0027FE  C188  F0B8         	movff	_vals+4,?_sprintf+8
  2130   002802  C189  F0B9         	movff	_vals+5,?_sprintf+9
  2131   002806  C18A  F0BA         	movff	_vals+6,?_sprintf+10
  2132   00280A  C18B  F0BB         	movff	_vals+7,?_sprintf+11
  2133   00280E  EC5C  F02A         	call	_sprintf	;wreg free
  2134   002812                     
  2135                           ;main.c: 153:             sendStringSerial4(buf);
  2136   002812  0E8C               	movlw	low main@buf
  2137   002814  6E02               	movwf	sendStringSerial4@string^0,c
  2138   002816  0E01               	movlw	high main@buf
  2139   002818  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2140   00281A  EC5A  F02D         	call	_sendStringSerial4	;wreg free
  2141   00281E                     l5569:
  2142                           
  2143                           ;main.c: 65:     while (run_flag)
  2144   00281E  0101               	movlb	1	; () banked
  2145   002820  51F0               	movf	main@run_flag& (0+255),w,b
  2146   002822  11F1               	iorwf	(main@run_flag+1)& (0+255),w,b
  2147   002824  A4D8               	btfss	status,2,c
  2148   002826  EF17  F014         	goto	u5611
  2149   00282A  EF19  F014         	goto	u5610
  2150   00282E                     u5611:
  2151   00282E  EFF8  F011         	goto	l5463
  2152   002832                     u5610:
  2153   002832                     
  2154                           ; BSR set to: 1
  2155   002832  EF07  F000         	goto	start
  2156   002836                     __end_of_main:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _sprintf *****************
  2160 ;; Defined at:
  2161 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2164 ;;		 -> main@buf(100), 
  2165 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2166 ;;		 -> STR_2(34), STR_1(45), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2169 ;;  ap              2  100[BANK0 ] PTR void [1]
  2170 ;;		 -> ?_sprintf(2), 
  2171 ;;  ret             2    0        int 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  2   80[BANK0 ] int 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2181 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;Total ram usage:       33 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 8
  2188 ;; This function calls:
  2189 ;;		_vfprintf
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text1
  2196   0054B8                     __ptext1:
  2197                           	callstack 0
  2198   0054B8                     _sprintf:
  2199                           	callstack 22
  2200   0054B8  0EB4               	movlw	low (?_sprintf+4)
  2201   0054BA  0100               	movlb	0	; () banked
  2202   0054BC  6FC4               	movwf	sprintf@ap& (0+255),b
  2203   0054BE  0E00               	movlw	high (?_sprintf+4)
  2204   0054C0  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2205   0054C2  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2206   0054C6  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2207   0054CA                     
  2208                           ; BSR set to: 0
  2209   0054CA  0E00               	movlw	0
  2210   0054CC  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2211   0054CE  0E00               	movlw	0
  2212   0054D0  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2213   0054D2                     
  2214                           ; BSR set to: 0
  2215   0054D2  0E00               	movlw	0
  2216   0054D4  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2217   0054D6  0E00               	movlw	0
  2218   0054D8  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2219   0054DA                     
  2220                           ; BSR set to: 0
  2221   0054DA  0EC6               	movlw	low sprintf@f
  2222   0054DC  6FA8               	movwf	vfprintf@fp& (0+255),b
  2223   0054DE  0E00               	movlw	high sprintf@f
  2224   0054E0  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2225   0054E2  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2226   0054E6  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2227   0054EA  0EC4               	movlw	low sprintf@ap
  2228   0054EC  6FAC               	movwf	vfprintf@ap& (0+255),b
  2229   0054EE  0E00               	movlw	high sprintf@ap
  2230   0054F0  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2231   0054F2  EC31  F02A         	call	_vfprintf	;wreg free
  2232   0054F6  0100               	movlb	0	; () banked
  2233   0054F8  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2234   0054FA  25B0               	addwf	sprintf@s& (0+255),w,b
  2235   0054FC  6ED9               	movwf	fsr2l,c
  2236   0054FE  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2237   005500  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2238   005502  6EDA               	movwf	fsr2h,c
  2239   005504  0E00               	movlw	0
  2240   005506  6EDF               	movwf	indf2,c
  2241   005508                     
  2242                           ; BSR set to: 0
  2243   005508  0012               	return		;funcret
  2244   00550A                     __end_of_sprintf:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _vfprintf *****************
  2248 ;; Defined at:
  2249 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2252 ;;		 -> sprintf@f(11), 
  2253 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2254 ;;		 -> STR_2(34), STR_1(45), 
  2255 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2256 ;;		 -> sprintf@ap(2), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2259 ;;		 -> STR_2(34), STR_1(45), 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2   72[BANK0 ] int 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2272 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2273 ;;Total ram usage:        8 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 7
  2276 ;; This function calls:
  2277 ;;		_vfpfcnvrt
  2278 ;; This function is called by:
  2279 ;;		_sprintf
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text2
  2284   005462                     __ptext2:
  2285                           	callstack 0
  2286   005462                     _vfprintf:
  2287                           	callstack 22
  2288   005462                     
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2290   005462  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2291   005466  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2294   00546A  EF46  F02A         	goto	l4991
  2295   00546E                     l4989:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2298   00546E  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2299   005472  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2300   005476  0EAE               	movlw	low vfprintf@cfmt
  2301   005478  0100               	movlb	0	; () banked
  2302   00547A  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2303   00547C  0E00               	movlw	high vfprintf@cfmt
  2304   00547E  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2305   005480  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2306   005484  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2307   005488  ECF4  F01B         	call	_vfpfcnvrt	;wreg free
  2308   00548C                     l4991:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2311   00548C  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2312   005490  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2313   005494                     	if	0	;tblptru may be non-zero
  2314   005494                     	endif
  2315   005494                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2316   005494  0E00               	movlw	low (__mediumconst shr (0+16))
  2317   005496  6EF8               	movwf	tblptru,c
  2318   005498                     	endif
  2319   005498  0008               	tblrd		*
  2320   00549A  50F5               	movf	tablat,w,c
  2321   00549C  0900               	iorlw	0
  2322   00549E  A4D8               	btfss	status,2,c
  2323   0054A0  EF54  F02A         	goto	u4961
  2324   0054A4  EF56  F02A         	goto	u4960
  2325   0054A8                     u4961:
  2326   0054A8  EF37  F02A         	goto	l4989
  2327   0054AC                     u4960:
  2328   0054AC                     
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2330   0054AC  0E00               	movlw	0
  2331   0054AE  0100               	movlb	0	; () banked
  2332   0054B0  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2333   0054B2  0E00               	movlw	0
  2334   0054B4  6FA8               	movwf	?_vfprintf& (0+255),b
  2335   0054B6                     
  2336                           ; BSR set to: 0
  2337   0054B6  0012               	return		;funcret
  2338   0054B8                     __end_of_vfprintf:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _vfpfcnvrt *****************
  2342 ;; Defined at:
  2343 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2346 ;;		 -> sprintf@f(11), 
  2347 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2348 ;;		 -> vfprintf@cfmt(2), 
  2349 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2350 ;;		 -> sprintf@ap(2), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  convarg         8   61[BANK0 ] struct .
  2353 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2354 ;;		 -> STR_2(34), STR_1(45), 
  2355 ;;  i               2    0        int 
  2356 ;;  done            2    0        int 
  2357 ;;  c               1   69[BANK0 ] unsigned char 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2367 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;Total ram usage:       19 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 6
  2374 ;; This function calls:
  2375 ;;		_dtoa
  2376 ;;		_efgtoa
  2377 ;;		_fputc
  2378 ;; This function is called by:
  2379 ;;		_vfprintf
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text3
  2384   0037E8                     __ptext3:
  2385                           	callstack 0
  2386   0037E8                     _vfpfcnvrt:
  2387                           	callstack 22
  2388   0037E8                     
  2389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2390   0037E8  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2391   0037EC  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2392   0037F0  CFDE FFF6          	movff	postinc2,tblptrl
  2393   0037F4  CFDD FFF7          	movff	postdec2,tblptrh
  2394   0037F8                     	if	0	;tblptru may be non-zero
  2395   0037F8                     	endif
  2396   0037F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2397   0037F8  0E00               	movlw	low (__mediumconst shr (0+16))
  2398   0037FA  6EF8               	movwf	tblptru,c
  2399   0037FC                     	endif
  2400   0037FC  0008               	tblrd		*
  2401   0037FE  50F5               	movf	tablat,w,c
  2402   003800  0A25               	xorlw	37
  2403   003802  A4D8               	btfss	status,2,c
  2404   003804  EF06  F01C         	goto	u4811
  2405   003808  EF08  F01C         	goto	u4810
  2406   00380C                     u4811:
  2407   00380C  EF60  F01D         	goto	l4849
  2408   003810                     u4810:
  2409   003810                     
  2410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2411   003810  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2412   003814  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2413   003818  2ADE               	incf	postinc2,f,c
  2414   00381A  0E00               	movlw	0
  2415   00381C  22DD               	addwfc	postdec2,f,c
  2416   00381E                     
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2418   00381E  0E00               	movlw	0
  2419   003820  0100               	movlb	0	; () banked
  2420   003822  6FE8               	movwf	(_width+1)& (0+255),b
  2421   003824  0E00               	movlw	0
  2422   003826  6FE7               	movwf	_width& (0+255),b
  2423   003828  C0E7  F0ED         	movff	_width,_flags
  2424   00382C                     
  2425                           ; BSR set to: 0
  2426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2427   00382C  69E9               	setf	_prec& (0+255),b
  2428   00382E  69EA               	setf	(_prec+1)& (0+255),b
  2429   003830                     
  2430                           ; BSR set to: 0
  2431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2432   003830  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2433   003834  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2434   003838  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2435   00383C  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2436   003840                     
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2439   003840  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2440   003844  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2441   003848                     	if	0	;tblptru may be non-zero
  2442   003848                     	endif
  2443   003848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2444   003848  0E00               	movlw	low (__mediumconst shr (0+16))
  2445   00384A  6EF8               	movwf	tblptru,c
  2446   00384C                     	endif
  2447   00384C  0008               	tblrd		*
  2448   00384E  50F5               	movf	tablat,w,c
  2449   003850  0A64               	xorlw	100
  2450   003852  B4D8               	btfsc	status,2,c
  2451   003854  EF2E  F01C         	goto	u4821
  2452   003858  EF30  F01C         	goto	u4820
  2453   00385C                     u4821:
  2454   00385C  EF40  F01C         	goto	l4805
  2455   003860                     u4820:
  2456   003860                     
  2457                           ; BSR set to: 0
  2458   003860  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2459   003864  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2460   003868                     	if	0	;tblptru may be non-zero
  2461   003868                     	endif
  2462   003868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2463   003868  0E00               	movlw	low (__mediumconst shr (0+16))
  2464   00386A  6EF8               	movwf	tblptru,c
  2465   00386C                     	endif
  2466   00386C  0008               	tblrd		*
  2467   00386E  50F5               	movf	tablat,w,c
  2468   003870  0A69               	xorlw	105
  2469   003872  A4D8               	btfss	status,2,c
  2470   003874  EF3E  F01C         	goto	u4831
  2471   003878  EF40  F01C         	goto	u4830
  2472   00387C                     u4831:
  2473   00387C  EF83  F01C         	goto	l4811
  2474   003880                     u4830:
  2475   003880                     l4805:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2479   003880  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2480   003884  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2481   003888  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2482   00388C  0E02               	movlw	2
  2483   00388E  26DE               	addwf	postinc2,f,c
  2484   003890  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2485   003894  0E00               	movlw	0
  2486   003896  22DD               	addwfc	postdec2,f,c
  2487   003898  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2488   00389C  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2489   0038A0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2490   0038A4  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2491   0038A8  0E00               	movlw	0
  2492   0038AA  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2493   0038AC  0EFF               	movlw	-1
  2494   0038AE  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2495   0038B0  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2496   0038B2  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2497   0038B4  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2498   0038B6  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2499   0038B8  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2502   0038BA  0E01               	movlw	1
  2503   0038BC  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2504   0038BE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2505   0038C0  0E00               	movlw	0
  2506   0038C2  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2507   0038C4  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2508   0038C6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2509   0038CA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2510   0038CE  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2511   0038D2  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2512   0038D6                     
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2515   0038D6  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2516   0038DA  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2517   0038DE  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2518   0038E2  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2519   0038E6  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2520   0038EA  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2521   0038EE  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2522   0038F2  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2523   0038F6  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2524   0038FA  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2525   0038FE  EC77  F01D         	call	_dtoa	;wreg free
  2526   003902  EF76  F01D         	goto	l1406
  2527   003906                     l4811:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2531   003906  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2532   00390A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2533   00390E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2534   003912  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2535   003916                     
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2538   003916  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2539   00391A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2540   00391E                     	if	0	;tblptru may be non-zero
  2541   00391E                     	endif
  2542   00391E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2543   00391E  0E00               	movlw	low (__mediumconst shr (0+16))
  2544   003920  6EF8               	movwf	tblptru,c
  2545   003922                     	endif
  2546   003922  0008               	tblrd		*
  2547   003924  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2550   003928  EFA2  F01C         	goto	l4823
  2551   00392C                     l4815:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2555   00392C  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2556   00392E  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2559   003930  EFBB  F01C         	goto	l4825
  2560   003934                     l4817:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2564   003934  0E6C               	movlw	108
  2565   003936  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2568   003938  EFBB  F01C         	goto	l4825
  2569   00393C                     l4819:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2573   00393C  0E00               	movlw	0
  2574   00393E  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2577   003940  EFBB  F01C         	goto	l4825
  2578   003944                     l4823:
  2579                           
  2580                           ; BSR set to: 0
  2581   003944  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2582   003946  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2583   003948  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2584                           
  2585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2586                           ; Switch size 1, requested type "simple"
  2587                           ; Number of cases is 1, Range of values is 0 to 0
  2588                           ; switch strategies available:
  2589                           ; Name         Instructions Cycles
  2590                           ; simple_byte            4     3 (average)
  2591                           ;	Chosen strategy is simple_byte
  2592   00394A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2593   00394C  0A00               	xorlw	0	; case 0
  2594   00394E  B4D8               	btfsc	status,2,c
  2595   003950  EFAC  F01C         	goto	l5667
  2596   003954  EF9E  F01C         	goto	l4819
  2597   003958                     l5667:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ; Switch size 1, requested type "simple"
  2601                           ; Number of cases is 3, Range of values is 76 to 108
  2602                           ; switch strategies available:
  2603                           ; Name         Instructions Cycles
  2604                           ; simple_byte           10     6 (average)
  2605                           ;	Chosen strategy is simple_byte
  2606   003958  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2607   00395A  0A4C               	xorlw	76	; case 76
  2608   00395C  B4D8               	btfsc	status,2,c
  2609   00395E  EF96  F01C         	goto	l4815
  2610   003962  0A2A               	xorlw	42	; case 102
  2611   003964  B4D8               	btfsc	status,2,c
  2612   003966  EF9A  F01C         	goto	l4817
  2613   00396A  0A0A               	xorlw	10	; case 108
  2614   00396C  B4D8               	btfsc	status,2,c
  2615   00396E  EF96  F01C         	goto	l4815
  2616   003972  EF9E  F01C         	goto	l4819
  2617   003976                     l4825:
  2618                           
  2619                           ; BSR set to: 0
  2620   003976  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2621   00397A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2622   00397E                     	if	0	;tblptru may be non-zero
  2623   00397E                     	endif
  2624   00397E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2625   00397E  0E00               	movlw	low (__mediumconst shr (0+16))
  2626   003980  6EF8               	movwf	tblptru,c
  2627   003982                     	endif
  2628   003982  0008               	tblrd		*
  2629   003984  50F5               	movf	tablat,w,c
  2630   003986  0A66               	xorlw	102
  2631   003988  A4D8               	btfss	status,2,c
  2632   00398A  EFC9  F01C         	goto	u4841
  2633   00398E  EFCB  F01C         	goto	u4840
  2634   003992                     u4841:
  2635   003992  EF57  F01D         	goto	l4845
  2636   003996                     u4840:
  2637   003996  EF01  F01D         	goto	l4833
  2638   00399A                     l4827:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2642   00399A  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2643   00399E  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2644   0039A2  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2645   0039A6  0E04               	movlw	4
  2646   0039A8  26DE               	addwf	postinc2,f,c
  2647   0039AA  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2648   0039AE  0E00               	movlw	0
  2649   0039B0  22DD               	addwfc	postdec2,f,c
  2650   0039B2  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2651   0039B6  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2652   0039BA  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2653   0039BE  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2654   0039C2  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2655   0039C6  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2658   0039CA  EF16  F01D         	goto	l4835
  2659   0039CE                     l4829:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2663   0039CE  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2664   0039D2  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2665   0039D6  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2666   0039DA  0E04               	movlw	4
  2667   0039DC  26DE               	addwf	postinc2,f,c
  2668   0039DE  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2669   0039E2  0E00               	movlw	0
  2670   0039E4  22DD               	addwfc	postdec2,f,c
  2671   0039E6  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2672   0039EA  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2673   0039EE  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2674   0039F2  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2675   0039F6  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2676   0039FA  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2679   0039FE  EF16  F01D         	goto	l4835
  2680   003A02                     l4833:
  2681                           
  2682                           ; BSR set to: 0
  2683   003A02  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2684   003A04  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2685   003A06  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2686                           
  2687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2688                           ; Switch size 1, requested type "simple"
  2689                           ; Number of cases is 1, Range of values is 0 to 0
  2690                           ; switch strategies available:
  2691                           ; Name         Instructions Cycles
  2692                           ; simple_byte            4     3 (average)
  2693                           ;	Chosen strategy is simple_byte
  2694   003A08  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2695   003A0A  0A00               	xorlw	0	; case 0
  2696   003A0C  B4D8               	btfsc	status,2,c
  2697   003A0E  EF0B  F01D         	goto	l5669
  2698   003A12  EF16  F01D         	goto	l4835
  2699   003A16                     l5669:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ; Switch size 1, requested type "simple"
  2703                           ; Number of cases is 2, Range of values is 76 to 108
  2704                           ; switch strategies available:
  2705                           ; Name         Instructions Cycles
  2706                           ; simple_byte            7     4 (average)
  2707                           ;	Chosen strategy is simple_byte
  2708   003A16  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2709   003A18  0A4C               	xorlw	76	; case 76
  2710   003A1A  B4D8               	btfsc	status,2,c
  2711   003A1C  EFE7  F01C         	goto	l4829
  2712   003A20  0A20               	xorlw	32	; case 108
  2713   003A22  B4D8               	btfsc	status,2,c
  2714   003A24  EFCD  F01C         	goto	l4827
  2715   003A28  EF16  F01D         	goto	l4835
  2716   003A2C                     l4835:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2720   003A2C  0E01               	movlw	1
  2721   003A2E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2722   003A30  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2723   003A32  0E00               	movlw	0
  2724   003A34  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2725   003A36  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2726   003A38  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2727   003A3C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2728   003A40  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2729   003A44  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2732   003A48  EF3F  F01D         	goto	l4843
  2733   003A4C                     l4837:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2737   003A4C  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2738   003A50  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2739   003A54  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2740   003A58  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2741   003A5C  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2742   003A60  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2743   003A64  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2744   003A68  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2745   003A6C                     	if	0	;tblptru may be non-zero
  2746   003A6C                     	endif
  2747   003A6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2748   003A6C  0E00               	movlw	low (__mediumconst shr (0+16))
  2749   003A6E  6EF8               	movwf	tblptru,c
  2750   003A70                     	endif
  2751   003A70  0008               	tblrd		*
  2752   003A72  CFF5 F066          	movff	tablat,efgtoa@c
  2753   003A76  EC9B  F00C         	call	_efgtoa	;wreg free
  2754   003A7A  EF76  F01D         	goto	l1406
  2755   003A7E                     l4843:
  2756                           
  2757                           ; BSR set to: 0
  2758   003A7E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2759   003A82  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2760   003A86                     	if	0	;tblptru may be non-zero
  2761   003A86                     	endif
  2762   003A86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2763   003A86  0E00               	movlw	low (__mediumconst shr (0+16))
  2764   003A88  6EF8               	movwf	tblptru,c
  2765   003A8A                     	endif
  2766   003A8A  0008               	tblrd		*
  2767   003A8C  50F5               	movf	tablat,w,c
  2768   003A8E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2769   003A90  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2770                           
  2771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2772                           ; Switch size 1, requested type "simple"
  2773                           ; Number of cases is 1, Range of values is 0 to 0
  2774                           ; switch strategies available:
  2775                           ; Name         Instructions Cycles
  2776                           ; simple_byte            4     3 (average)
  2777                           ;	Chosen strategy is simple_byte
  2778   003A92  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2779   003A94  0A00               	xorlw	0	; case 0
  2780   003A96  B4D8               	btfsc	status,2,c
  2781   003A98  EF50  F01D         	goto	l5671
  2782   003A9C  EF57  F01D         	goto	l4845
  2783   003AA0                     l5671:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ; Switch size 1, requested type "simple"
  2787                           ; Number of cases is 1, Range of values is 102 to 102
  2788                           ; switch strategies available:
  2789                           ; Name         Instructions Cycles
  2790                           ; simple_byte            4     3 (average)
  2791                           ;	Chosen strategy is simple_byte
  2792   003AA0  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2793   003AA2  0A66               	xorlw	102	; case 102
  2794   003AA4  B4D8               	btfsc	status,2,c
  2795   003AA6  EF26  F01D         	goto	l4837
  2796   003AAA  EF57  F01D         	goto	l4845
  2797   003AAE                     l4845:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2800   003AAE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2801   003AB2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2802   003AB6  2ADE               	incf	postinc2,f,c
  2803   003AB8  0E00               	movlw	0
  2804   003ABA  22DD               	addwfc	postdec2,f,c
  2805   003ABC  EF76  F01D         	goto	l1406
  2806   003AC0                     l4849:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2809   003AC0  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2810   003AC4  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2811   003AC8  CFDE FFF6          	movff	postinc2,tblptrl
  2812   003ACC  CFDD FFF7          	movff	postdec2,tblptrh
  2813   003AD0                     	if	0	;tblptru may be non-zero
  2814   003AD0                     	endif
  2815   003AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2816   003AD0  0E00               	movlw	low (__mediumconst shr (0+16))
  2817   003AD2  6EF8               	movwf	tblptru,c
  2818   003AD4                     	endif
  2819   003AD4  0008               	tblrd		*
  2820   003AD6  50F5               	movf	tablat,w,c
  2821   003AD8  6E01               	movwf	fputc@c^0,c
  2822   003ADA  6A02               	clrf	(fputc@c+1)^0,c
  2823   003ADC  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2824   003AE0  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2825   003AE4  EC32  F025         	call	_fputc	;wreg free
  2826   003AE8  EF57  F01D         	goto	l4845
  2827   003AEC                     l1406:
  2828   003AEC  0012               	return		;funcret
  2829   003AEE                     __end_of_vfpfcnvrt:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _efgtoa *****************
  2833 ;; Defined at:
  2834 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2837 ;;		 -> sprintf@f(11), 
  2838 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2839 ;;  c               1    6[BANK0 ] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  u               4   49[BANK0 ] struct flui
  2842 ;;  g               4   45[BANK0 ] struct flui
  2843 ;;  l               4   38[BANK0 ] struct flui
  2844 ;;  h               4   34[BANK0 ] struct flui
  2845 ;;  ou              4   28[BANK0 ] struct flui
  2846 ;;  n               2   43[BANK0 ] int 
  2847 ;;  i               2   32[BANK0 ] int 
  2848 ;;  w               2   26[BANK0 ] int 
  2849 ;;  e               2   24[BANK0 ] int 
  2850 ;;  m               2   22[BANK0 ] int 
  2851 ;;  d               2   20[BANK0 ] int 
  2852 ;;  t               2   13[BANK0 ] int 
  2853 ;;  p               2   11[BANK0 ] int 
  2854 ;;  ne              2    9[BANK0 ] int 
  2855 ;;  sign            1   42[BANK0 ] unsigned char 
  2856 ;;  nmode           1   19[BANK0 ] unsigned char 
  2857 ;;  mode            1   18[BANK0 ] unsigned char 
  2858 ;;  pp              1   17[BANK0 ] unsigned char 
  2859 ;;  esign           1    0        unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2869 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;Total ram usage:       53 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 5
  2876 ;; This function calls:
  2877 ;;		___fladd
  2878 ;;		___fldiv
  2879 ;;		___fleq
  2880 ;;		___flge
  2881 ;;		___flmul
  2882 ;;		___flneg
  2883 ;;		___flsub
  2884 ;;		___fltol
  2885 ;;		___fpclassifyf
  2886 ;;		_floorf
  2887 ;;		_labs
  2888 ;;		_memcpy
  2889 ;;		_pad
  2890 ;;		_strcpy
  2891 ;; This function is called by:
  2892 ;;		_vfpfcnvrt
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text4
  2897   001936                     __ptext4:
  2898                           	callstack 0
  2899   001936                     _efgtoa:
  2900                           	callstack 22
  2901   001936                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2903   001936  0E00               	movlw	0
  2904   001938  0100               	movlb	0	; () banked
  2905   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  2906   00193C                     
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2909   00193C  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2910   001940  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2911   001944  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2912   001948  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2913   00194C                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2916   00194C  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2917   00194E  EFAD  F00C         	goto	u4470
  2918   001952  EFAB  F00C         	goto	u4471
  2919   001956                     u4471:
  2920   001956  EFC1  F00C         	goto	l4525
  2921   00195A                     u4470:
  2922   00195A                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2925   00195A  0E01               	movlw	1
  2926   00195C  6F8A               	movwf	efgtoa@sign& (0+255),b
  2927   00195E                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2930   00195E  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2931   001962  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2932   001966  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2933   00196A  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2934   00196E  EC3E  F02D         	call	___flneg	;wreg free
  2935   001972  C001  F08D         	movff	?___flneg,efgtoa@g
  2936   001976  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2937   00197A  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2938   00197E  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2939   001982                     l4525:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2942   001982  0E00               	movlw	0
  2943   001984  0100               	movlb	0	; () banked
  2944   001986  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2945   001988  0E00               	movlw	0
  2946   00198A  6F8B               	movwf	efgtoa@n& (0+255),b
  2947   00198C                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2950   00198C  C0E7  F07A         	movff	_width,efgtoa@w
  2951   001990  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2952   001994                     
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2955   001994  518A               	movf	efgtoa@sign& (0+255),w,b
  2956   001996  B4D8               	btfsc	status,2,c
  2957   001998  EFD0  F00C         	goto	u4481
  2958   00199C  EFD2  F00C         	goto	u4480
  2959   0019A0                     u4481:
  2960   0019A0  EFE6  F00C         	goto	l4539
  2961   0019A4                     u4480:
  2962   0019A4                     
  2963                           ; BSR set to: 0
  2964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2965   0019A4  518A               	movf	efgtoa@sign& (0+255),w,b
  2966   0019A6  A4D8               	btfss	status,2,c
  2967   0019A8  EFD8  F00C         	goto	u4491
  2968   0019AC  EFDA  F00C         	goto	u4490
  2969   0019B0                     u4491:
  2970   0019B0  EFE0  F00C         	goto	l4535
  2971   0019B4                     u4490:
  2972   0019B4                     
  2973                           ; BSR set to: 0
  2974   0019B4  0E00               	movlw	0
  2975   0019B6  6F70               	movwf	(_efgtoa$2418+1)& (0+255),b
  2976   0019B8  0E2B               	movlw	43
  2977   0019BA  6F6F               	movwf	_efgtoa$2418& (0+255),b
  2978   0019BC  EFE4  F00C         	goto	l4537
  2979   0019C0                     l4535:
  2980                           
  2981                           ; BSR set to: 0
  2982   0019C0  0E00               	movlw	0
  2983   0019C2  6F70               	movwf	(_efgtoa$2418+1)& (0+255),b
  2984   0019C4  0E2D               	movlw	45
  2985   0019C6  6F6F               	movwf	_efgtoa$2418& (0+255),b
  2986   0019C8                     l4537:
  2987                           
  2988                           ; BSR set to: 0
  2989   0019C8  C06F  F08A         	movff	_efgtoa$2418,efgtoa@sign
  2990   0019CC                     l4539:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2994   0019CC  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2995   0019D0  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2996   0019D4  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2997   0019D8  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2998   0019DC  ECB3  F024         	call	___fpclassifyf	;wreg free
  2999   0019E0  0401               	decf	?___fpclassifyf^0,w,c
  3000   0019E2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3001   0019E4  A4D8               	btfss	status,2,c
  3002   0019E6  EFF7  F00C         	goto	u4501
  3003   0019EA  EFF9  F00C         	goto	u4500
  3004   0019EE                     u4501:
  3005   0019EE  EF2C  F00D         	goto	l4557
  3006   0019F2                     u4500:
  3007   0019F2                     
  3008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3009   0019F2  0100               	movlb	0	; () banked
  3010   0019F4  518A               	movf	efgtoa@sign& (0+255),w,b
  3011   0019F6  B4D8               	btfsc	status,2,c
  3012   0019F8  EF00  F00D         	goto	u4511
  3013   0019FC  EF02  F00D         	goto	u4510
  3014   001A00                     u4511:
  3015   001A00  EF0B  F00D         	goto	l4549
  3016   001A04                     u4510:
  3017   001A04                     
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3020   001A04  C08A  F116         	movff	efgtoa@sign,_dbuf
  3021   001A08                     
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3024   001A08  077A               	decf	efgtoa@w& (0+255),f,b
  3025   001A0A  A0D8               	btfss	status,0,c
  3026   001A0C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3027   001A0E                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3030   001A0E  0E00               	movlw	0
  3031   001A10  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3032   001A12  0E01               	movlw	1
  3033   001A14  6F8B               	movwf	efgtoa@n& (0+255),b
  3034   001A16                     l4549:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3038   001A16  0E16               	movlw	low _dbuf
  3039   001A18  258B               	addwf	efgtoa@n& (0+255),w,b
  3040   001A1A  6E01               	movwf	strcpy@dest^0,c
  3041   001A1C  0E01               	movlw	high _dbuf
  3042   001A1E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3043   001A20  6E02               	movwf	(strcpy@dest+1)^0,c
  3044   001A22  0E50               	movlw	low STR_3
  3045   001A24  6E03               	movwf	strcpy@src^0,c
  3046   001A26  0E0E               	movlw	high STR_3
  3047   001A28  6E04               	movwf	(strcpy@src+1)^0,c
  3048   001A2A  EC3D  F02C         	call	_strcpy	;wreg free
  3049   001A2E                     l4551:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3052   001A2E  0100               	movlb	0	; () banked
  3053   001A30  0EFD               	movlw	253
  3054   001A32  277A               	addwf	efgtoa@w& (0+255),f,b
  3055   001A34  0EFF               	movlw	255
  3056   001A36  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3057   001A38                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3060   001A38  C060  F011         	movff	efgtoa@fp,pad@fp
  3061   001A3C  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3062   001A40  0E16               	movlw	low _dbuf
  3063   001A42  6E13               	movwf	pad@buf^0,c
  3064   001A44  0E01               	movlw	high _dbuf
  3065   001A46  6E14               	movwf	(pad@buf+1)^0,c
  3066   001A48  C07A  F015         	movff	efgtoa@w,pad@p
  3067   001A4C  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3068   001A50  ECEC  F027         	call	_pad	;wreg free
  3069   001A54  EF97  F011         	goto	l1358
  3070   001A58                     l4557:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3073   001A58  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3074   001A5C  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3075   001A60  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3076   001A64  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3077   001A68  ECB3  F024         	call	___fpclassifyf	;wreg free
  3078   001A6C  5001               	movf	?___fpclassifyf^0,w,c
  3079   001A6E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3080   001A70  A4D8               	btfss	status,2,c
  3081   001A72  EF3D  F00D         	goto	u4521
  3082   001A76  EF3F  F00D         	goto	u4520
  3083   001A7A                     u4521:
  3084   001A7A  EF5F  F00D         	goto	l4575
  3085   001A7E                     u4520:
  3086   001A7E                     
  3087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3088   001A7E  0100               	movlb	0	; () banked
  3089   001A80  518A               	movf	efgtoa@sign& (0+255),w,b
  3090   001A82  B4D8               	btfsc	status,2,c
  3091   001A84  EF46  F00D         	goto	u4531
  3092   001A88  EF48  F00D         	goto	u4530
  3093   001A8C                     u4531:
  3094   001A8C  EF51  F00D         	goto	l4567
  3095   001A90                     u4530:
  3096   001A90                     
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3099   001A90  C08A  F116         	movff	efgtoa@sign,_dbuf
  3100   001A94                     
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3103   001A94  077A               	decf	efgtoa@w& (0+255),f,b
  3104   001A96  A0D8               	btfss	status,0,c
  3105   001A98  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3106   001A9A                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3109   001A9A  0E00               	movlw	0
  3110   001A9C  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3111   001A9E  0E01               	movlw	1
  3112   001AA0  6F8B               	movwf	efgtoa@n& (0+255),b
  3113   001AA2                     l4567:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3117   001AA2  0E16               	movlw	low _dbuf
  3118   001AA4  258B               	addwf	efgtoa@n& (0+255),w,b
  3119   001AA6  6E01               	movwf	strcpy@dest^0,c
  3120   001AA8  0E01               	movlw	high _dbuf
  3121   001AAA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3122   001AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  3123   001AAE  0E54               	movlw	low STR_6
  3124   001AB0  6E03               	movwf	strcpy@src^0,c
  3125   001AB2  0E0E               	movlw	high STR_6
  3126   001AB4  6E04               	movwf	(strcpy@src+1)^0,c
  3127   001AB6  EC3D  F02C         	call	_strcpy	;wreg free
  3128   001ABA  EF17  F00D         	goto	l4551
  3129   001ABE                     l4575:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3132   001ABE  0E00               	movlw	0
  3133   001AC0  0100               	movlb	0	; () banked
  3134   001AC2  6F91               	movwf	efgtoa@u& (0+255),b
  3135   001AC4  0E00               	movlw	0
  3136   001AC6  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3137   001AC8  0E80               	movlw	128
  3138   001ACA  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3139   001ACC  0E3F               	movlw	63
  3140   001ACE  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3143   001AD0  0E00               	movlw	0
  3144   001AD2  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3145   001AD4  0E00               	movlw	0
  3146   001AD6  6F78               	movwf	efgtoa@e& (0+255),b
  3147   001AD8                     
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3150   001AD8  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3151   001ADC  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3152   001AE0  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3153   001AE4  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3154   001AE8  0E00               	movlw	0
  3155   001AEA  6E36               	movwf	___fleq@ff2^0,c
  3156   001AEC  0E00               	movlw	0
  3157   001AEE  6E37               	movwf	(___fleq@ff2+1)^0,c
  3158   001AF0  0E00               	movlw	0
  3159   001AF2  6E38               	movwf	(___fleq@ff2+2)^0,c
  3160   001AF4  0E00               	movlw	0
  3161   001AF6  6E39               	movwf	(___fleq@ff2+3)^0,c
  3162   001AF8  EC97  F025         	call	___fleq	;wreg free
  3163   001AFC  B0D8               	btfsc	status,0,c
  3164   001AFE  EF83  F00D         	goto	u4541
  3165   001B02  EF85  F00D         	goto	u4540
  3166   001B06                     u4541:
  3167   001B06  EF64  F00E         	goto	l1361
  3168   001B0A                     u4540:
  3169   001B0A  EF92  F00D         	goto	l4583
  3170   001B0E                     l1363:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3173   001B0E  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3174   001B12  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3175   001B16  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3176   001B1A  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3177   001B1E                     
  3178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3179   001B1E  0100               	movlb	0	; () banked
  3180   001B20  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3181   001B22  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3182   001B24                     l4583:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3185   001B24  C091  F011         	movff	efgtoa@u,___flmul@b
  3186   001B28  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3187   001B2C  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3188   001B30  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3189   001B34  0E00               	movlw	0
  3190   001B36  6E15               	movwf	___flmul@a^0,c
  3191   001B38  0E00               	movlw	0
  3192   001B3A  6E16               	movwf	(___flmul@a+1)^0,c
  3193   001B3C  0E20               	movlw	32
  3194   001B3E  6E17               	movwf	(___flmul@a+2)^0,c
  3195   001B40  0E41               	movlw	65
  3196   001B42  6E18               	movwf	(___flmul@a+3)^0,c
  3197   001B44  EC7B  F016         	call	___flmul	;wreg free
  3198   001B48  C011  F07C         	movff	?___flmul,efgtoa@ou
  3199   001B4C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3200   001B50  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3201   001B54  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3202   001B58  0100               	movlb	0	; () banked
  3203   001B5A  517C               	movf	efgtoa@ou& (0+255),w,b
  3204   001B5C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3205   001B5E  6E01               	movwf	labs@a^0,c
  3206   001B60  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3207   001B62  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3208   001B64  6E02               	movwf	(labs@a+1)^0,c
  3209   001B66  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3210   001B68  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3211   001B6A  6E03               	movwf	(labs@a+2)^0,c
  3212   001B6C  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3213   001B6E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3214   001B70  6E04               	movwf	(labs@a+3)^0,c
  3215   001B72  EC63  F028         	call	_labs	;wreg free
  3216   001B76  BE04               	btfsc	(?_labs+3)^0,7,c
  3217   001B78  EFC9  F00D         	goto	u4551
  3218   001B7C  5004               	movf	(?_labs+3)^0,w,c
  3219   001B7E  1003               	iorwf	(?_labs+2)^0,w,c
  3220   001B80  1002               	iorwf	(?_labs+1)^0,w,c
  3221   001B82  E109               	bnz	u4550
  3222   001B84  0E02               	movlw	2
  3223   001B86  5C01               	subwf	?_labs^0,w,c
  3224   001B88  A0D8               	btfss	status,0,c
  3225   001B8A  EFC9  F00D         	goto	u4551
  3226   001B8E  EFCB  F00D         	goto	u4550
  3227   001B92                     u4551:
  3228   001B92  EF87  F00D         	goto	l1363
  3229   001B96                     u4550:
  3230   001B96  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3231   001B9A  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3232   001B9E  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3233   001BA2  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3234   001BA6  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3235   001BAA  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3236   001BAE  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3237   001BB2  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3238   001BB6  EC31  F024         	call	___flge	;wreg free
  3239   001BBA  A0D8               	btfss	status,0,c
  3240   001BBC  EFE2  F00D         	goto	u4561
  3241   001BC0  EFE4  F00D         	goto	u4560
  3242   001BC4                     u4561:
  3243   001BC4  EF87  F00D         	goto	l1363
  3244   001BC8                     u4560:
  3245   001BC8                     
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3247   001BC8  0100               	movlb	0	; () banked
  3248   001BCA  5191               	movf	efgtoa@u& (0+255),w,b
  3249   001BCC  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3250   001BCE  6E01               	movwf	labs@a^0,c
  3251   001BD0  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3252   001BD2  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3253   001BD4  6E02               	movwf	(labs@a+1)^0,c
  3254   001BD6  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3255   001BD8  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3256   001BDA  6E03               	movwf	(labs@a+2)^0,c
  3257   001BDC  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3258   001BDE  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3259   001BE0  6E04               	movwf	(labs@a+3)^0,c
  3260   001BE2  EC63  F028         	call	_labs	;wreg free
  3261   001BE6  BE04               	btfsc	(?_labs+3)^0,7,c
  3262   001BE8  EF03  F00E         	goto	u4570
  3263   001BEC  5004               	movf	(?_labs+3)^0,w,c
  3264   001BEE  1003               	iorwf	(?_labs+2)^0,w,c
  3265   001BF0  1002               	iorwf	(?_labs+1)^0,w,c
  3266   001BF2  E107               	bnz	u4571
  3267   001BF4  0E02               	movlw	2
  3268   001BF6  5C01               	subwf	?_labs^0,w,c
  3269   001BF8  B0D8               	btfsc	status,0,c
  3270   001BFA  EF01  F00E         	goto	u4571
  3271   001BFE  EF03  F00E         	goto	u4570
  3272   001C02                     u4571:
  3273   001C02  EF4B  F00E         	goto	l4601
  3274   001C06                     u4570:
  3275   001C06                     l4591:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3278   001C06  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3279   001C0A  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3280   001C0E  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3281   001C12  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3284   001C16  EF64  F00E         	goto	l1361
  3285   001C1A                     l4593:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3288   001C1A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3289   001C1E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3290   001C22  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3291   001C26  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3292   001C2A  0E00               	movlw	0
  3293   001C2C  6E36               	movwf	___fldiv@a^0,c
  3294   001C2E  0E00               	movlw	0
  3295   001C30  6E37               	movwf	(___fldiv@a+1)^0,c
  3296   001C32  0E20               	movlw	32
  3297   001C34  6E38               	movwf	(___fldiv@a+2)^0,c
  3298   001C36  0E41               	movlw	65
  3299   001C38  6E39               	movwf	(___fldiv@a+3)^0,c
  3300   001C3A  EC90  F018         	call	___fldiv	;wreg free
  3301   001C3E  C032  F091         	movff	?___fldiv,efgtoa@u
  3302   001C42  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3303   001C46  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3304   001C4A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3305   001C4E                     
  3306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3307   001C4E  0100               	movlb	0	; () banked
  3308   001C50  0778               	decf	efgtoa@e& (0+255),f,b
  3309   001C52  A0D8               	btfss	status,0,c
  3310   001C54  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3311   001C56                     
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3314   001C56  5191               	movf	efgtoa@u& (0+255),w,b
  3315   001C58  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3316   001C5A  6E01               	movwf	labs@a^0,c
  3317   001C5C  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3318   001C5E  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3319   001C60  6E02               	movwf	(labs@a+1)^0,c
  3320   001C62  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3321   001C64  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3322   001C66  6E03               	movwf	(labs@a+2)^0,c
  3323   001C68  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3324   001C6A  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3325   001C6C  6E04               	movwf	(labs@a+3)^0,c
  3326   001C6E  EC63  F028         	call	_labs	;wreg free
  3327   001C72  BE04               	btfsc	(?_labs+3)^0,7,c
  3328   001C74  EF49  F00E         	goto	u4580
  3329   001C78  5004               	movf	(?_labs+3)^0,w,c
  3330   001C7A  1003               	iorwf	(?_labs+2)^0,w,c
  3331   001C7C  1002               	iorwf	(?_labs+1)^0,w,c
  3332   001C7E  E107               	bnz	u4581
  3333   001C80  0E02               	movlw	2
  3334   001C82  5C01               	subwf	?_labs^0,w,c
  3335   001C84  B0D8               	btfsc	status,0,c
  3336   001C86  EF47  F00E         	goto	u4581
  3337   001C8A  EF49  F00E         	goto	u4580
  3338   001C8E                     u4581:
  3339   001C8E  EF4B  F00E         	goto	l4601
  3340   001C92                     u4580:
  3341   001C92  EF03  F00E         	goto	l4591
  3342   001C96                     l4601:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3345   001C96  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3346   001C9A  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3347   001C9E  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3348   001CA2  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3349   001CA6  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3350   001CAA  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3351   001CAE  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3352   001CB2  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3353   001CB6  EC31  F024         	call	___flge	;wreg free
  3354   001CBA  A0D8               	btfss	status,0,c
  3355   001CBC  EF62  F00E         	goto	u4591
  3356   001CC0  EF64  F00E         	goto	u4590
  3357   001CC4                     u4591:
  3358   001CC4  EF0D  F00E         	goto	l4593
  3359   001CC8                     u4590:
  3360   001CC8                     l1361:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3363   001CC8  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3366   001CCC  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3367   001CD0                     
  3368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3369   001CD0  0100               	movlb	0	; () banked
  3370   001CD2  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3371   001CD4  EF6E  F00E         	goto	u4601
  3372   001CD8  EF70  F00E         	goto	u4600
  3373   001CDC                     u4601:
  3374   001CDC  EF76  F00E         	goto	l4607
  3375   001CE0                     u4600:
  3376   001CE0                     
  3377                           ; BSR set to: 0
  3378   001CE0  C0E9  F06B         	movff	_prec,efgtoa@p
  3379   001CE4  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3380   001CE8  EF7A  F00E         	goto	l4609
  3381   001CEC                     l4607:
  3382                           
  3383                           ; BSR set to: 0
  3384   001CEC  0E00               	movlw	0
  3385   001CEE  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3386   001CF0  0E06               	movlw	6
  3387   001CF2  6F6B               	movwf	efgtoa@p& (0+255),b
  3388   001CF4                     l4609:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3392   001CF4  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3393   001CF8  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3394   001CFC                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3397   001CFC  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3398   001CFE  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3399   001D00                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3402   001D00  0E66               	movlw	102
  3403   001D02  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3404   001D04  A4D8               	btfss	status,2,c
  3405   001D06  EF87  F00E         	goto	u4611
  3406   001D0A  EF89  F00E         	goto	u4610
  3407   001D0E                     u4611:
  3408   001D0E  EFA9  F00E         	goto	l4623
  3409   001D12                     u4610:
  3410   001D12                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3413   001D12  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3414   001D14  EF90  F00E         	goto	u4620
  3415   001D18  EF8E  F00E         	goto	u4621
  3416   001D1C                     u4621:
  3417   001D1C  EF9C  F00E         	goto	l4619
  3418   001D20                     u4620:
  3419   001D20                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3422   001D20  0E00               	movlw	0
  3423   001D22  6F91               	movwf	efgtoa@u& (0+255),b
  3424   001D24  0E00               	movlw	0
  3425   001D26  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3426   001D28  0E80               	movlw	128
  3427   001D2A  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3428   001D2C  0E3F               	movlw	63
  3429   001D2E  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3432   001D30  0E00               	movlw	0
  3433   001D32  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3434   001D34  0E00               	movlw	0
  3435   001D36  6F78               	movwf	efgtoa@e& (0+255),b
  3436   001D38                     l4619:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3440   001D38  0E67               	movlw	103
  3441   001D3A  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3442   001D3C  B4D8               	btfsc	status,2,c
  3443   001D3E  EFA3  F00E         	goto	u4631
  3444   001D42  EFA5  F00E         	goto	u4630
  3445   001D46                     u4631:
  3446   001D46  EFA9  F00E         	goto	l4623
  3447   001D4A                     u4630:
  3448   001D4A                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3451   001D4A  5178               	movf	efgtoa@e& (0+255),w,b
  3452   001D4C  2776               	addwf	efgtoa@m& (0+255),f,b
  3453   001D4E  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3454   001D50  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3455   001D52                     l4623:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3459   001D52  0E00               	movlw	0
  3460   001D54  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3461   001D56  0E00               	movlw	0
  3462   001D58  6F80               	movwf	efgtoa@i& (0+255),b
  3463   001D5A                     
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3466   001D5A  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3467   001D5E  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3468   001D62  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3469   001D66  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3470   001D6A                     
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3473   001D6A  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3474   001D6E  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3475   001D72  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3476   001D76  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3479   001D7A  EF3A  F00F         	goto	l4637
  3480   001D7E                     l4629:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3484   001D7E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3485   001D82  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3486   001D86  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3487   001D8A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3488   001D8E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3489   001D92  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3490   001D96  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3491   001D9A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3492   001D9E  EC90  F018         	call	___fldiv	;wreg free
  3493   001DA2  C032  F04B         	movff	?___fldiv,floorf@x
  3494   001DA6  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3495   001DAA  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3496   001DAE  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3497   001DB2  ECB6  F01E         	call	_floorf	;wreg free
  3498   001DB6  C04B  F086         	movff	?_floorf,efgtoa@l
  3499   001DBA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3500   001DBE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3501   001DC2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3504   001DC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3505   001DCA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3506   001DCE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3507   001DD2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3508   001DD6  ECAE  F023         	call	___fltol	;wreg free
  3509   001DDA  C001  F074         	movff	?___fltol,efgtoa@d
  3510   001DDE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3511   001DE2                     
  3512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3513   001DE2  C082  F02A         	movff	efgtoa@h,___flsub@b
  3514   001DE6  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3515   001DEA  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3516   001DEE  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3517   001DF2  C086  F015         	movff	efgtoa@l,___flmul@a
  3518   001DF6  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3519   001DFA  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3520   001DFE  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3521   001E02  C091  F011         	movff	efgtoa@u,___flmul@b
  3522   001E06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3523   001E0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3524   001E0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3525   001E12  EC7B  F016         	call	___flmul	;wreg free
  3526   001E16  C011  F02E         	movff	?___flmul,___flsub@a
  3527   001E1A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3528   001E1E  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3529   001E22  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3530   001E26  EC1A  F02C         	call	___flsub	;wreg free
  3531   001E2A  C02A  F082         	movff	?___flsub,efgtoa@h
  3532   001E2E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3533   001E32  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3534   001E36  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3535   001E3A                     
  3536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3537   001E3A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3538   001E3E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3539   001E42  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3540   001E46  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3541   001E4A  0E00               	movlw	0
  3542   001E4C  6E36               	movwf	___fldiv@a^0,c
  3543   001E4E  0E00               	movlw	0
  3544   001E50  6E37               	movwf	(___fldiv@a+1)^0,c
  3545   001E52  0E20               	movlw	32
  3546   001E54  6E38               	movwf	(___fldiv@a+2)^0,c
  3547   001E56  0E41               	movlw	65
  3548   001E58  6E39               	movwf	(___fldiv@a+3)^0,c
  3549   001E5A  EC90  F018         	call	___fldiv	;wreg free
  3550   001E5E  C032  F091         	movff	?___fldiv,efgtoa@u
  3551   001E62  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3552   001E66  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3553   001E6A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3554   001E6E                     
  3555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3556   001E6E  0100               	movlb	0	; () banked
  3557   001E70  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3558   001E72  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3559   001E74                     l4637:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3563   001E74  5176               	movf	efgtoa@m& (0+255),w,b
  3564   001E76  5D80               	subwf	efgtoa@i& (0+255),w,b
  3565   001E78  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3566   001E7A  0A80               	xorlw	128
  3567   001E7C  6F67               	movwf	??_efgtoa& (0+255),b
  3568   001E7E  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3569   001E80  0A80               	xorlw	128
  3570   001E82  5967               	subwfb	??_efgtoa& (0+255),w,b
  3571   001E84  A0D8               	btfss	status,0,c
  3572   001E86  EF47  F00F         	goto	u4641
  3573   001E8A  EF49  F00F         	goto	u4640
  3574   001E8E                     u4641:
  3575   001E8E  EFBF  F00E         	goto	l4629
  3576   001E92                     u4640:
  3577   001E92                     
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3580   001E92  C091  F011         	movff	efgtoa@u,___flmul@b
  3581   001E96  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3582   001E9A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3583   001E9E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3584   001EA2  0E00               	movlw	0
  3585   001EA4  6E15               	movwf	___flmul@a^0,c
  3586   001EA6  0E00               	movlw	0
  3587   001EA8  6E16               	movwf	(___flmul@a+1)^0,c
  3588   001EAA  0EA0               	movlw	160
  3589   001EAC  6E17               	movwf	(___flmul@a+2)^0,c
  3590   001EAE  0E40               	movlw	64
  3591   001EB0  6E18               	movwf	(___flmul@a+3)^0,c
  3592   001EB2  EC7B  F016         	call	___flmul	;wreg free
  3593   001EB6  C011  F086         	movff	?___flmul,efgtoa@l
  3594   001EBA  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3595   001EBE  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3596   001EC2  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3597   001EC6                     
  3598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3599   001EC6  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3600   001ECA  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3601   001ECE  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3602   001ED2  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3603   001ED6  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3604   001EDA  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3605   001EDE  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3606   001EE2  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3607   001EE6  EC31  F024         	call	___flge	;wreg free
  3608   001EEA  B0D8               	btfsc	status,0,c
  3609   001EEC  EF7A  F00F         	goto	u4651
  3610   001EF0  EF7C  F00F         	goto	u4650
  3611   001EF4                     u4651:
  3612   001EF4  EF87  F00F         	goto	l4645
  3613   001EF8                     u4650:
  3614   001EF8                     
  3615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3616   001EF8  0E00               	movlw	0
  3617   001EFA  0100               	movlb	0	; () banked
  3618   001EFC  6F86               	movwf	efgtoa@l& (0+255),b
  3619   001EFE  0E00               	movlw	0
  3620   001F00  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3621   001F02  0E00               	movlw	0
  3622   001F04  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3623   001F06  0E00               	movlw	0
  3624   001F08  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3627   001F0A  EFB0  F00F         	goto	l4651
  3628   001F0E                     l4645:
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3631   001F0E  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3632   001F12  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3633   001F16  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3634   001F1A  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3635   001F1E  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3636   001F22  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3637   001F26  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3638   001F2A  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3639   001F2E  EC97  F025         	call	___fleq	;wreg free
  3640   001F32  A0D8               	btfss	status,0,c
  3641   001F34  EF9E  F00F         	goto	u4661
  3642   001F38  EFA0  F00F         	goto	u4660
  3643   001F3C                     u4661:
  3644   001F3C  EFB0  F00F         	goto	l4651
  3645   001F40                     u4660:
  3646   001F40  0100               	movlb	0	; () banked
  3647   001F42  B174               	btfsc	efgtoa@d& (0+255),0,b
  3648   001F44  EFA6  F00F         	goto	u4671
  3649   001F48  EFA8  F00F         	goto	u4670
  3650   001F4C                     u4671:
  3651   001F4C  EFB0  F00F         	goto	l4651
  3652   001F50                     u4670:
  3653   001F50                     
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3656   001F50  0E00               	movlw	0
  3657   001F52  6F86               	movwf	efgtoa@l& (0+255),b
  3658   001F54  0E00               	movlw	0
  3659   001F56  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3660   001F58  0E00               	movlw	0
  3661   001F5A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3662   001F5C  0E00               	movlw	0
  3663   001F5E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3664   001F60                     l4651:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3667   001F60  C08D  F001         	movff	efgtoa@g,___fladd@b
  3668   001F64  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3669   001F68  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3670   001F6C  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3671   001F70  C086  F005         	movff	efgtoa@l,___fladd@a
  3672   001F74  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3673   001F78  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3674   001F7C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3675   001F80  EC1B  F014         	call	___fladd	;wreg free
  3676   001F84  C001  F082         	movff	?___fladd,efgtoa@h
  3677   001F88  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3678   001F8C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3679   001F90  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3680   001F94                     
  3681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3682   001F94  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3683   001F98  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3684   001F9C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3685   001FA0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3686   001FA4  0E00               	movlw	0
  3687   001FA6  6E15               	movwf	___flmul@a^0,c
  3688   001FA8  0E00               	movlw	0
  3689   001FAA  6E16               	movwf	(___flmul@a+1)^0,c
  3690   001FAC  0E20               	movlw	32
  3691   001FAE  6E17               	movwf	(___flmul@a+2)^0,c
  3692   001FB0  0E41               	movlw	65
  3693   001FB2  6E18               	movwf	(___flmul@a+3)^0,c
  3694   001FB4  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3695   001FB8  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3696   001FBC  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3697   001FC0  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3698   001FC4  EC7B  F016         	call	___flmul	;wreg free
  3699   001FC8  C011  F02E         	movff	?___flmul,___flge@ff2
  3700   001FCC  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3701   001FD0  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3702   001FD4  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3703   001FD8  EC31  F024         	call	___flge	;wreg free
  3704   001FDC  A0D8               	btfss	status,0,c
  3705   001FDE  EFF3  F00F         	goto	u4681
  3706   001FE2  EFF5  F00F         	goto	u4680
  3707   001FE6                     u4681:
  3708   001FE6  EF1E  F010         	goto	l4663
  3709   001FEA                     u4680:
  3710   001FEA                     
  3711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3712   001FEA  0100               	movlb	0	; () banked
  3713   001FEC  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3714   001FEE  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3715   001FF0                     
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3718   001FF0  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3719   001FF4  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3720   001FF8  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3721   001FFC  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3722   002000  0E00               	movlw	0
  3723   002002  6E15               	movwf	___flmul@a^0,c
  3724   002004  0E00               	movlw	0
  3725   002006  6E16               	movwf	(___flmul@a+1)^0,c
  3726   002008  0E20               	movlw	32
  3727   00200A  6E17               	movwf	(___flmul@a+2)^0,c
  3728   00200C  0E41               	movlw	65
  3729   00200E  6E18               	movwf	(___flmul@a+3)^0,c
  3730   002010  EC7B  F016         	call	___flmul	;wreg free
  3731   002014  C011  F07C         	movff	?___flmul,efgtoa@ou
  3732   002018  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3733   00201C  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3734   002020  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3735   002024                     
  3736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3737   002024  0E66               	movlw	102
  3738   002026  0100               	movlb	0	; () banked
  3739   002028  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3740   00202A  A4D8               	btfss	status,2,c
  3741   00202C  EF1A  F010         	goto	u4691
  3742   002030  EF1C  F010         	goto	u4690
  3743   002034                     u4691:
  3744   002034  EF1E  F010         	goto	l4663
  3745   002038                     u4690:
  3746   002038                     
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3749   002038  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3750   00203A  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3751   00203C                     l4663:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3754   00203C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3755   002040  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3756   002044  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3757   002048  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3758   00204C                     
  3759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3760   00204C  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3761   002050  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3762   002054                     
  3763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3764   002054  0E00               	movlw	0
  3765   002056  0100               	movlb	0	; () banked
  3766   002058  6F71               	movwf	efgtoa@pp& (0+255),b
  3767   00205A                     
  3768                           ; BSR set to: 0
  3769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3770   00205A  0E00               	movlw	0
  3771   00205C  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3772   00205E  0E00               	movlw	0
  3773   002060  6F6D               	movwf	efgtoa@t& (0+255),b
  3774   002062                     
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3777   002062  0E00               	movlw	0
  3778   002064  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3779   002066  0E00               	movlw	0
  3780   002068  6F80               	movwf	efgtoa@i& (0+255),b
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3783   00206A  EF1C  F011         	goto	l4713
  3784   00206E                     l4673:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3788   00206E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3789   002072  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3790   002076  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3791   00207A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3792   00207E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3793   002082  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3794   002086  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3795   00208A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3796   00208E  EC90  F018         	call	___fldiv	;wreg free
  3797   002092  C032  F04B         	movff	?___fldiv,floorf@x
  3798   002096  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3799   00209A  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3800   00209E  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3801   0020A2  ECB6  F01E         	call	_floorf	;wreg free
  3802   0020A6  C04B  F086         	movff	?_floorf,efgtoa@l
  3803   0020AA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3804   0020AE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3805   0020B2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3806                           
  3807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3808   0020B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3809   0020BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3810   0020BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3811   0020C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3812   0020C6  ECAE  F023         	call	___fltol	;wreg free
  3813   0020CA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3814   0020CC  EF73  F010         	goto	u4700
  3815   0020D0  5002               	movf	(?___fltol+1)^0,w,c
  3816   0020D2  E107               	bnz	u4701
  3817   0020D4  0E0A               	movlw	10
  3818   0020D6  5C01               	subwf	?___fltol^0,w,c
  3819   0020D8  B0D8               	btfsc	status,0,c
  3820   0020DA  EF71  F010         	goto	u4701
  3821   0020DE  EF73  F010         	goto	u4700
  3822   0020E2                     u4701:
  3823   0020E2  EF83  F010         	goto	l4677
  3824   0020E6                     u4700:
  3825   0020E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3826   0020EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3827   0020EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3828   0020F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3829   0020F6  ECAE  F023         	call	___fltol	;wreg free
  3830   0020FA  C001  F074         	movff	?___fltol,efgtoa@d
  3831   0020FE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3832   002102  EF88  F010         	goto	l1391
  3833   002106                     l4677:
  3834   002106  0E00               	movlw	0
  3835   002108  0100               	movlb	0	; () banked
  3836   00210A  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3837   00210C  0E09               	movlw	9
  3838   00210E  6F74               	movwf	efgtoa@d& (0+255),b
  3839   002110                     l1391:
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3842   002110  0100               	movlb	0	; () banked
  3843   002112  5171               	movf	efgtoa@pp& (0+255),w,b
  3844   002114  A4D8               	btfss	status,2,c
  3845   002116  EF8F  F010         	goto	u4711
  3846   00211A  EF91  F010         	goto	u4710
  3847   00211E                     u4711:
  3848   00211E  EFB9  F010         	goto	l4697
  3849   002122                     u4710:
  3850   002122                     
  3851                           ; BSR set to: 0
  3852   002122  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3853   002124  EF98  F010         	goto	u4720
  3854   002128  EF96  F010         	goto	u4721
  3855   00212C                     u4721:
  3856   00212C  EFB9  F010         	goto	l4697
  3857   002130                     u4720:
  3858   002130                     
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3861   002130  0E16               	movlw	low _dbuf
  3862   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  3863   002134  6ED9               	movwf	fsr2l,c
  3864   002136  0E01               	movlw	high _dbuf
  3865   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3866   00213A  6EDA               	movwf	fsr2h,c
  3867   00213C  0E2E               	movlw	46
  3868   00213E  6EDF               	movwf	indf2,c
  3869   002140                     
  3870                           ; BSR set to: 0
  3871   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3872   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3873   002144                     
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3876   002144  077A               	decf	efgtoa@w& (0+255),f,b
  3877   002146  A0D8               	btfss	status,0,c
  3878   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3879   00214A                     
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3882   00214A  0E01               	movlw	1
  3883   00214C  6F71               	movwf	efgtoa@pp& (0+255),b
  3884   00214E  EFB9  F010         	goto	l4697
  3885   002152                     l4689:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3889   002152  0E16               	movlw	low _dbuf
  3890   002154  258B               	addwf	efgtoa@n& (0+255),w,b
  3891   002156  6ED9               	movwf	fsr2l,c
  3892   002158  0E01               	movlw	high _dbuf
  3893   00215A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3894   00215C  6EDA               	movwf	fsr2h,c
  3895   00215E  0E30               	movlw	48
  3896   002160  6EDF               	movwf	indf2,c
  3897   002162                     
  3898                           ; BSR set to: 0
  3899   002162  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3900   002164  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3901   002166                     
  3902                           ; BSR set to: 0
  3903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3904   002166  077A               	decf	efgtoa@w& (0+255),f,b
  3905   002168  A0D8               	btfss	status,0,c
  3906   00216A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3907   00216C                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3910   00216C  076D               	decf	efgtoa@t& (0+255),f,b
  3911   00216E  A0D8               	btfss	status,0,c
  3912   002170  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3913   002172                     l4697:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3917   002172  516D               	movf	efgtoa@t& (0+255),w,b
  3918   002174  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3919   002176  A4D8               	btfss	status,2,c
  3920   002178  EFC0  F010         	goto	u4731
  3921   00217C  EFC2  F010         	goto	u4730
  3922   002180                     u4731:
  3923   002180  EFA9  F010         	goto	l4689
  3924   002184                     u4730:
  3925   002184                     
  3926                           ; BSR set to: 0
  3927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3928   002184  0E16               	movlw	low _dbuf
  3929   002186  258B               	addwf	efgtoa@n& (0+255),w,b
  3930   002188  6ED9               	movwf	fsr2l,c
  3931   00218A  0E01               	movlw	high _dbuf
  3932   00218C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3933   00218E  6EDA               	movwf	fsr2h,c
  3934   002190  5174               	movf	efgtoa@d& (0+255),w,b
  3935   002192  0F30               	addlw	48
  3936   002194  6EDF               	movwf	indf2,c
  3937   002196                     
  3938                           ; BSR set to: 0
  3939   002196  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3940   002198  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3941   00219A                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3944   00219A  077A               	decf	efgtoa@w& (0+255),f,b
  3945   00219C  A0D8               	btfss	status,0,c
  3946   00219E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3947   0021A0                     
  3948                           ; BSR set to: 0
  3949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3950   0021A0  C082  F02A         	movff	efgtoa@h,___flsub@b
  3951   0021A4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3952   0021A8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3953   0021AC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3954   0021B0  C086  F015         	movff	efgtoa@l,___flmul@a
  3955   0021B4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3956   0021B8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3957   0021BC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3958   0021C0  C091  F011         	movff	efgtoa@u,___flmul@b
  3959   0021C4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3960   0021C8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3961   0021CC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3962   0021D0  EC7B  F016         	call	___flmul	;wreg free
  3963   0021D4  C011  F02E         	movff	?___flmul,___flsub@a
  3964   0021D8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3965   0021DC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3966   0021E0  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3967   0021E4  EC1A  F02C         	call	___flsub	;wreg free
  3968   0021E8  C02A  F082         	movff	?___flsub,efgtoa@h
  3969   0021EC  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3970   0021F0  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3971   0021F4  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3972   0021F8                     
  3973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3974   0021F8  C091  F032         	movff	efgtoa@u,___fldiv@b
  3975   0021FC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3976   002200  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3977   002204  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3978   002208  0E00               	movlw	0
  3979   00220A  6E36               	movwf	___fldiv@a^0,c
  3980   00220C  0E00               	movlw	0
  3981   00220E  6E37               	movwf	(___fldiv@a+1)^0,c
  3982   002210  0E20               	movlw	32
  3983   002212  6E38               	movwf	(___fldiv@a+2)^0,c
  3984   002214  0E41               	movlw	65
  3985   002216  6E39               	movwf	(___fldiv@a+3)^0,c
  3986   002218  EC90  F018         	call	___fldiv	;wreg free
  3987   00221C  C032  F091         	movff	?___fldiv,efgtoa@u
  3988   002220  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3989   002224  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3990   002228  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3991   00222C                     
  3992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3993   00222C  0100               	movlb	0	; () banked
  3994   00222E  0769               	decf	efgtoa@ne& (0+255),f,b
  3995   002230  A0D8               	btfss	status,0,c
  3996   002232  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  3997   002234                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4000   002234  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4001   002236  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4002   002238                     l4713:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4006   002238  5176               	movf	efgtoa@m& (0+255),w,b
  4007   00223A  5D80               	subwf	efgtoa@i& (0+255),w,b
  4008   00223C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4009   00223E  0A80               	xorlw	128
  4010   002240  6F67               	movwf	??_efgtoa& (0+255),b
  4011   002242  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4012   002244  0A80               	xorlw	128
  4013   002246  5967               	subwfb	??_efgtoa& (0+255),w,b
  4014   002248  B0D8               	btfsc	status,0,c
  4015   00224A  EF29  F011         	goto	u4741
  4016   00224E  EF2B  F011         	goto	u4740
  4017   002252                     u4741:
  4018   002252  EF39  F011         	goto	l4717
  4019   002256                     u4740:
  4020   002256                     
  4021                           ; BSR set to: 0
  4022   002256  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4023   002258  EF37  F011         	goto	u4751
  4024   00225C  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4025   00225E  E109               	bnz	u4750
  4026   002260  0E4B               	movlw	75
  4027   002262  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4028   002264  A0D8               	btfss	status,0,c
  4029   002266  EF37  F011         	goto	u4751
  4030   00226A  EF39  F011         	goto	u4750
  4031   00226E                     u4751:
  4032   00226E  EF37  F010         	goto	l4673
  4033   002272                     u4750:
  4034   002272                     l4717:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4038   002272  0E00               	movlw	0
  4039   002274  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4040   002276  0E4F               	movlw	79
  4041   002278  6F80               	movwf	efgtoa@i& (0+255),b
  4042   00227A                     
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4045   00227A  0E16               	movlw	low _dbuf
  4046   00227C  2580               	addwf	efgtoa@i& (0+255),w,b
  4047   00227E  6ED9               	movwf	fsr2l,c
  4048   002280  0E01               	movlw	high _dbuf
  4049   002282  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4050   002284  6EDA               	movwf	fsr2h,c
  4051   002286  0E00               	movlw	0
  4052   002288  6EDF               	movwf	indf2,c
  4053   00228A                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4056   00228A  0E16               	movlw	low _dbuf
  4057   00228C  6F67               	movwf	??_efgtoa& (0+255),b
  4058   00228E  0E01               	movlw	high _dbuf
  4059   002290  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4060   002292  518B               	movf	efgtoa@n& (0+255),w,b
  4061   002294  5F67               	subwf	??_efgtoa& (0+255),f,b
  4062   002296  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4063   002298  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4064   00229A  5180               	movf	efgtoa@i& (0+255),w,b
  4065   00229C  2567               	addwf	??_efgtoa& (0+255),w,b
  4066   00229E  6E01               	movwf	memcpy@d1^0,c
  4067   0022A0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4068   0022A2  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4069   0022A4  6E02               	movwf	(memcpy@d1+1)^0,c
  4070   0022A6  0E16               	movlw	low _dbuf
  4071   0022A8  6E03               	movwf	memcpy@s1^0,c
  4072   0022AA  0E01               	movlw	high _dbuf
  4073   0022AC  6E04               	movwf	(memcpy@s1+1)^0,c
  4074   0022AE  C08B  F005         	movff	efgtoa@n,memcpy@n
  4075   0022B2  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4076   0022B6  EC52  F02B         	call	_memcpy	;wreg free
  4077   0022BA                     
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4079   0022BA  0100               	movlb	0	; () banked
  4080   0022BC  518B               	movf	efgtoa@n& (0+255),w,b
  4081   0022BE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4082   0022C0  6F8B               	movwf	efgtoa@n& (0+255),b
  4083   0022C2  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4084   0022C4  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4085   0022C6  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4086   0022C8                     
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4089   0022C8  518A               	movf	efgtoa@sign& (0+255),w,b
  4090   0022CA  A4D8               	btfss	status,2,c
  4091   0022CC  EF6A  F011         	goto	u4761
  4092   0022D0  EF6D  F011         	goto	u4760
  4093   0022D4                     u4761:
  4094   0022D4  0E01               	movlw	1
  4095   0022D6  EF6E  F011         	goto	u4770
  4096   0022DA                     u4760:
  4097   0022DA  0E00               	movlw	0
  4098   0022DC                     u4770:
  4099   0022DC  6F80               	movwf	efgtoa@i& (0+255),b
  4100   0022DE  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4101   0022E0                     
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4104   0022E0  518A               	movf	efgtoa@sign& (0+255),w,b
  4105   0022E2  B4D8               	btfsc	status,2,c
  4106   0022E4  EF76  F011         	goto	u4781
  4107   0022E8  EF78  F011         	goto	u4780
  4108   0022EC                     u4781:
  4109   0022EC  EF83  F011         	goto	l4731
  4110   0022F0                     u4780:
  4111   0022F0                     
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4114   0022F0  078B               	decf	efgtoa@n& (0+255),f,b
  4115   0022F2  A0D8               	btfss	status,0,c
  4116   0022F4  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4117   0022F6  0E16               	movlw	low _dbuf
  4118   0022F8  258B               	addwf	efgtoa@n& (0+255),w,b
  4119   0022FA  6ED9               	movwf	fsr2l,c
  4120   0022FC  0E01               	movlw	high _dbuf
  4121   0022FE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4122   002300  6EDA               	movwf	fsr2h,c
  4123   002302  C08A  FFDF         	movff	efgtoa@sign,indf2
  4124   002306                     l4731:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4128   002306  5180               	movf	efgtoa@i& (0+255),w,b
  4129   002308  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4130   00230A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4131   00230C  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4132   00230E                     
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4135   00230E  C060  F011         	movff	efgtoa@fp,pad@fp
  4136   002312  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4137   002316  0E16               	movlw	low _dbuf
  4138   002318  258B               	addwf	efgtoa@n& (0+255),w,b
  4139   00231A  6E13               	movwf	pad@buf^0,c
  4140   00231C  0E01               	movlw	high _dbuf
  4141   00231E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4142   002320  6E14               	movwf	(pad@buf+1)^0,c
  4143   002322  C07A  F015         	movff	efgtoa@w,pad@p
  4144   002326  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4145   00232A  ECEC  F027         	call	_pad	;wreg free
  4146   00232E                     l1358:
  4147   00232E  0012               	return		;funcret
  4148   002330                     __end_of_efgtoa:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function _strcpy *****************
  4152 ;; Defined at:
  4153 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4156 ;;		 -> dbuf(80), 
  4157 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4158 ;;		 -> STR_6(4), STR_3(4), 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  d               2    6[COMRAM] PTR unsigned char 
  4161 ;;		 -> dbuf(80), 
  4162 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4163 ;;		 -> STR_6(4), STR_3(4), 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2    0[COMRAM] PTR unsigned char 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;Total ram usage:        8 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_efgtoa
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text5
  4188   00587A                     __ptext5:
  4189                           	callstack 0
  4190   00587A                     _strcpy:
  4191                           	callstack 25
  4192   00587A  C003  F005         	movff	strcpy@src,strcpy@s
  4193   00587E  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4194   005882  C001  F007         	movff	strcpy@dest,strcpy@d
  4195   005886  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4196   00588A                     l4343:
  4197   00588A  C005  FFF6         	movff	strcpy@s,tblptrl
  4198   00588E  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4199   005892  4A05               	infsnz	strcpy@s^0,f,c
  4200   005894  2A06               	incf	(strcpy@s+1)^0,f,c
  4201   005896                     	if	0	;tblptru may be non-zero
  4202   005896                     	endif
  4203   005896                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4204   005896  0E00               	movlw	low (__mediumconst shr (0+16))
  4205   005898  6EF8               	movwf	tblptru,c
  4206   00589A                     	endif
  4207   00589A  C007  FFD9         	movff	strcpy@d,fsr2l
  4208   00589E  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4209   0058A2  4A07               	infsnz	strcpy@d^0,f,c
  4210   0058A4  2A08               	incf	(strcpy@d+1)^0,f,c
  4211   0058A6  0008               	tblrd		*
  4212   0058A8  CFF5 FFDF          	movff	tablat,indf2
  4213   0058AC  50DF               	movf	indf2,w,c
  4214   0058AE  A4D8               	btfss	status,2,c
  4215   0058B0  EF5C  F02C         	goto	u4121
  4216   0058B4  EF5E  F02C         	goto	u4120
  4217   0058B8                     u4121:
  4218   0058B8  EF45  F02C         	goto	l4343
  4219   0058BC                     u4120:
  4220   0058BC  0012               	return		;funcret
  4221   0058BE                     __end_of_strcpy:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _memcpy *****************
  4225 ;; Defined at:
  4226 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  d1              2    0[COMRAM] PTR void 
  4229 ;;		 -> dbuf(80), 
  4230 ;;  s1              2    2[COMRAM] PTR const void 
  4231 ;;		 -> dbuf(80), 
  4232 ;;  n               2    4[COMRAM] unsigned int 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4235 ;;		 -> dbuf(80), 
  4236 ;;  d               2    6[COMRAM] PTR unsigned char 
  4237 ;;		 -> dbuf(80), 
  4238 ;;  tmp             1   10[COMRAM] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2    0[COMRAM] PTR void 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4248 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;Total ram usage:       11 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_efgtoa
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text6
  4263   0056A4                     __ptext6:
  4264                           	callstack 0
  4265   0056A4                     _memcpy:
  4266                           	callstack 25
  4267   0056A4  C003  F009         	movff	memcpy@s1,memcpy@s
  4268   0056A8  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4269   0056AC  C001  F007         	movff	memcpy@d1,memcpy@d
  4270   0056B0  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4271   0056B4  EF6C  F02B         	goto	l4387
  4272   0056B8                     l4379:
  4273   0056B8  C009  FFD9         	movff	memcpy@s,fsr2l
  4274   0056BC  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4275   0056C0  50DF               	movf	indf2,w,c
  4276   0056C2  6E0B               	movwf	memcpy@tmp^0,c
  4277   0056C4  4A09               	infsnz	memcpy@s^0,f,c
  4278   0056C6  2A0A               	incf	(memcpy@s+1)^0,f,c
  4279   0056C8  C007  FFD9         	movff	memcpy@d,fsr2l
  4280   0056CC  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4281   0056D0  C00B  FFDF         	movff	memcpy@tmp,indf2
  4282   0056D4  4A07               	infsnz	memcpy@d^0,f,c
  4283   0056D6  2A08               	incf	(memcpy@d+1)^0,f,c
  4284   0056D8                     l4387:
  4285   0056D8  0605               	decf	memcpy@n^0,f,c
  4286   0056DA  A0D8               	btfss	status,0,c
  4287   0056DC  0606               	decf	(memcpy@n+1)^0,f,c
  4288   0056DE  2805               	incf	memcpy@n^0,w,c
  4289   0056E0  E106               	bnz	u4241
  4290   0056E2  2806               	incf	(memcpy@n+1)^0,w,c
  4291   0056E4  A4D8               	btfss	status,2,c
  4292   0056E6  EF77  F02B         	goto	u4241
  4293   0056EA  EF79  F02B         	goto	u4240
  4294   0056EE                     u4241:
  4295   0056EE  EF5C  F02B         	goto	l4379
  4296   0056F2                     u4240:
  4297   0056F2  0012               	return		;funcret
  4298   0056F4                     __end_of_memcpy:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _labs *****************
  4302 ;; Defined at:
  4303 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  a               4    0[COMRAM] long 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  4    0[COMRAM] long 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;Total ram usage:        8 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_efgtoa
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text7
  4332   0050C6                     __ptext7:
  4333                           	callstack 0
  4334   0050C6                     _labs:
  4335                           	callstack 25
  4336   0050C6  BE04               	btfsc	(labs@a+3)^0,7,c
  4337   0050C8  EF72  F028         	goto	u4130
  4338   0050CC  5004               	movf	(labs@a+3)^0,w,c
  4339   0050CE  1003               	iorwf	(labs@a+2)^0,w,c
  4340   0050D0  1002               	iorwf	(labs@a+1)^0,w,c
  4341   0050D2  E106               	bnz	u4131
  4342   0050D4  0401               	decf	labs@a^0,w,c
  4343   0050D6  B0D8               	btfsc	status,0,c
  4344   0050D8  EF70  F028         	goto	u4131
  4345   0050DC  EF72  F028         	goto	u4130
  4346   0050E0                     u4131:
  4347   0050E0  EF8D  F028         	goto	l1463
  4348   0050E4                     u4130:
  4349   0050E4  C001  F005         	movff	labs@a,??_labs
  4350   0050E8  C002  F006         	movff	labs@a+1,??_labs+1
  4351   0050EC  C003  F007         	movff	labs@a+2,??_labs+2
  4352   0050F0  C004  F008         	movff	labs@a+3,??_labs+3
  4353   0050F4  1E05               	comf	??_labs^0,f,c
  4354   0050F6  1E06               	comf	(??_labs+1)^0,f,c
  4355   0050F8  1E07               	comf	(??_labs+2)^0,f,c
  4356   0050FA  1E08               	comf	(??_labs+3)^0,f,c
  4357   0050FC  2A05               	incf	??_labs^0,f,c
  4358   0050FE  0E00               	movlw	0
  4359   005100  2206               	addwfc	(??_labs+1)^0,f,c
  4360   005102  2207               	addwfc	(??_labs+2)^0,f,c
  4361   005104  2208               	addwfc	(??_labs+3)^0,f,c
  4362   005106  C005  F001         	movff	??_labs,?_labs
  4363   00510A  C006  F002         	movff	??_labs+1,?_labs+1
  4364   00510E  C007  F003         	movff	??_labs+2,?_labs+2
  4365   005112  C008  F004         	movff	??_labs+3,?_labs+3
  4366   005116  EF95  F028         	goto	l1466
  4367   00511A                     l1463:
  4368   00511A  C001  F001         	movff	labs@a,?_labs
  4369   00511E  C002  F002         	movff	labs@a+1,?_labs+1
  4370   005122  C003  F003         	movff	labs@a+2,?_labs+2
  4371   005126  C004  F004         	movff	labs@a+3,?_labs+3
  4372   00512A                     l1466:
  4373   00512A  0012               	return		;funcret
  4374   00512C                     __end_of_labs:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _floorf *****************
  4378 ;; Defined at:
  4379 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  x               4   74[COMRAM] float 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  u               4   90[COMRAM] struct .
  4384 ;;  m               4   84[COMRAM] unsigned long 
  4385 ;;  e               2   88[COMRAM] int 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  4   74[COMRAM] float 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;Total ram usage:       20 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; Hardware stack levels required when called: 1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_efgtoa
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text8
  4410   003D6C                     __ptext8:
  4411                           	callstack 0
  4412   003D6C                     _floorf:
  4413                           	callstack 25
  4414   003D6C  C0DF  F05B         	movff	floorf@F526,floorf@u
  4415   003D70  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4416   003D74  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4417   003D78  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4418   003D7C  C04B  F05B         	movff	floorf@x,floorf@u
  4419   003D80  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4420   003D84  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4421   003D88  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4422   003D8C  0E81               	movlw	129
  4423   003D8E  6E4F               	movwf	??_floorf^0,c
  4424   003D90  0EFF               	movlw	255
  4425   003D92  6E50               	movwf	(??_floorf+1)^0,c
  4426   003D94  C05B  F051         	movff	floorf@u,??_floorf+2
  4427   003D98  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4428   003D9C  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4429   003DA0  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4430   003DA4  0E18               	movlw	24
  4431   003DA6  EFDA  F01E         	goto	u4140
  4432   003DAA                     u4145:
  4433   003DAA  90D8               	bcf	status,0,c
  4434   003DAC  3254               	rrcf	(??_floorf+5)^0,f,c
  4435   003DAE  3253               	rrcf	(??_floorf+4)^0,f,c
  4436   003DB0  3252               	rrcf	(??_floorf+3)^0,f,c
  4437   003DB2  3251               	rrcf	(??_floorf+2)^0,f,c
  4438   003DB4                     u4140:
  4439   003DB4  2EE8               	decfsz	wreg,f,c
  4440   003DB6  EFD5  F01E         	goto	u4145
  4441   003DBA  5051               	movf	(??_floorf+2)^0,w,c
  4442   003DBC  244F               	addwf	??_floorf^0,w,c
  4443   003DBE  6E59               	movwf	floorf@e^0,c
  4444   003DC0  0E00               	movlw	0
  4445   003DC2  2050               	addwfc	(??_floorf+1)^0,w,c
  4446   003DC4  6E5A               	movwf	(floorf@e+1)^0,c
  4447   003DC6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4448   003DC8  EFEF  F01E         	goto	u4151
  4449   003DCC  505A               	movf	(floorf@e+1)^0,w,c
  4450   003DCE  E109               	bnz	u4150
  4451   003DD0  0E17               	movlw	23
  4452   003DD2  5C59               	subwf	floorf@e^0,w,c
  4453   003DD4  A0D8               	btfss	status,0,c
  4454   003DD6  EFEF  F01E         	goto	u4151
  4455   003DDA  EFF1  F01E         	goto	u4150
  4456   003DDE                     u4151:
  4457   003DDE  EFFB  F01E         	goto	l4355
  4458   003DE2                     u4150:
  4459   003DE2                     l4353:
  4460   003DE2  C04B  F04B         	movff	floorf@x,?_floorf
  4461   003DE6  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4462   003DEA  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4463   003DEE  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4464   003DF2  EFBE  F01F         	goto	l1452
  4465   003DF6                     l4355:
  4466   003DF6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4467   003DF8  EF00  F01F         	goto	u4161
  4468   003DFC  EF02  F01F         	goto	u4160
  4469   003E00                     u4161:
  4470   003E00  EF72  F01F         	goto	l4365
  4471   003E04                     u4160:
  4472   003E04  C059  F04F         	movff	floorf@e,??_floorf
  4473   003E08  0EFF               	movlw	255
  4474   003E0A  6E50               	movwf	(??_floorf+1)^0,c
  4475   003E0C  0EFF               	movlw	255
  4476   003E0E  6E51               	movwf	(??_floorf+2)^0,c
  4477   003E10  0E7F               	movlw	127
  4478   003E12  6E52               	movwf	(??_floorf+3)^0,c
  4479   003E14  0E00               	movlw	0
  4480   003E16  6E53               	movwf	(??_floorf+4)^0,c
  4481   003E18                     u4175:
  4482   003E18  664F               	tstfsz	??_floorf^0,c
  4483   003E1A  EF11  F01F         	goto	u4176
  4484   003E1E  EF19  F01F         	goto	u4177
  4485   003E22                     u4176:
  4486   003E22  3453               	rlcf	(??_floorf+4)^0,w,c
  4487   003E24  3253               	rrcf	(??_floorf+4)^0,f,c
  4488   003E26  3252               	rrcf	(??_floorf+3)^0,f,c
  4489   003E28  3251               	rrcf	(??_floorf+2)^0,f,c
  4490   003E2A  3250               	rrcf	(??_floorf+1)^0,f,c
  4491   003E2C  2E4F               	decfsz	??_floorf^0,f,c
  4492   003E2E  EF0C  F01F         	goto	u4175
  4493   003E32                     u4177:
  4494   003E32  C050  F055         	movff	??_floorf+1,floorf@m
  4495   003E36  C051  F056         	movff	??_floorf+2,floorf@m+1
  4496   003E3A  C052  F057         	movff	??_floorf+3,floorf@m+2
  4497   003E3E  C053  F058         	movff	??_floorf+4,floorf@m+3
  4498   003E42  5055               	movf	floorf@m^0,w,c
  4499   003E44  145B               	andwf	floorf@u^0,w,c
  4500   003E46  6E4F               	movwf	??_floorf^0,c
  4501   003E48  5056               	movf	(floorf@m+1)^0,w,c
  4502   003E4A  145C               	andwf	(floorf@u+1)^0,w,c
  4503   003E4C  6E50               	movwf	(??_floorf+1)^0,c
  4504   003E4E  5057               	movf	(floorf@m+2)^0,w,c
  4505   003E50  145D               	andwf	(floorf@u+2)^0,w,c
  4506   003E52  6E51               	movwf	(??_floorf+2)^0,c
  4507   003E54  5058               	movf	(floorf@m+3)^0,w,c
  4508   003E56  145E               	andwf	(floorf@u+3)^0,w,c
  4509   003E58  6E52               	movwf	(??_floorf+3)^0,c
  4510   003E5A  504F               	movf	??_floorf^0,w,c
  4511   003E5C  1050               	iorwf	(??_floorf+1)^0,w,c
  4512   003E5E  1051               	iorwf	(??_floorf+2)^0,w,c
  4513   003E60  1052               	iorwf	(??_floorf+3)^0,w,c
  4514   003E62  A4D8               	btfss	status,2,c
  4515   003E64  EF36  F01F         	goto	u4181
  4516   003E68  EF38  F01F         	goto	u4180
  4517   003E6C                     u4181:
  4518   003E6C  EF3A  F01F         	goto	l4361
  4519   003E70                     u4180:
  4520   003E70  EFF1  F01E         	goto	l4353
  4521   003E74                     l4361:
  4522   003E74  C05B  F04F         	movff	floorf@u,??_floorf
  4523   003E78  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4524   003E7C  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4525   003E80  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4526   003E84  0E20               	movlw	32
  4527   003E86  EF4A  F01F         	goto	u4190
  4528   003E8A                     u4195:
  4529   003E8A  90D8               	bcf	status,0,c
  4530   003E8C  3252               	rrcf	(??_floorf+3)^0,f,c
  4531   003E8E  3251               	rrcf	(??_floorf+2)^0,f,c
  4532   003E90  3250               	rrcf	(??_floorf+1)^0,f,c
  4533   003E92  324F               	rrcf	??_floorf^0,f,c
  4534   003E94                     u4190:
  4535   003E94  2EE8               	decfsz	wreg,f,c
  4536   003E96  EF45  F01F         	goto	u4195
  4537   003E9A  504F               	movf	??_floorf^0,w,c
  4538   003E9C  1050               	iorwf	(??_floorf+1)^0,w,c
  4539   003E9E  1051               	iorwf	(??_floorf+2)^0,w,c
  4540   003EA0  1052               	iorwf	(??_floorf+3)^0,w,c
  4541   003EA2  B4D8               	btfsc	status,2,c
  4542   003EA4  EF56  F01F         	goto	u4201
  4543   003EA8  EF58  F01F         	goto	u4200
  4544   003EAC                     u4201:
  4545   003EAC  EF60  F01F         	goto	l1455
  4546   003EB0                     u4200:
  4547   003EB0  5055               	movf	floorf@m^0,w,c
  4548   003EB2  265B               	addwf	floorf@u^0,f,c
  4549   003EB4  5056               	movf	(floorf@m+1)^0,w,c
  4550   003EB6  225C               	addwfc	(floorf@u+1)^0,f,c
  4551   003EB8  5057               	movf	(floorf@m+2)^0,w,c
  4552   003EBA  225D               	addwfc	(floorf@u+2)^0,f,c
  4553   003EBC  5058               	movf	(floorf@m+3)^0,w,c
  4554   003EBE  225E               	addwfc	(floorf@u+3)^0,f,c
  4555   003EC0                     l1455:
  4556   003EC0  1C55               	comf	floorf@m^0,w,c
  4557   003EC2  6E4F               	movwf	??_floorf^0,c
  4558   003EC4  1C56               	comf	(floorf@m+1)^0,w,c
  4559   003EC6  6E50               	movwf	(??_floorf+1)^0,c
  4560   003EC8  1C57               	comf	(floorf@m+2)^0,w,c
  4561   003ECA  6E51               	movwf	(??_floorf+2)^0,c
  4562   003ECC  1C58               	comf	(floorf@m+3)^0,w,c
  4563   003ECE  6E52               	movwf	(??_floorf+3)^0,c
  4564   003ED0  504F               	movf	??_floorf^0,w,c
  4565   003ED2  165B               	andwf	floorf@u^0,f,c
  4566   003ED4  5050               	movf	(??_floorf+1)^0,w,c
  4567   003ED6  165C               	andwf	(floorf@u+1)^0,f,c
  4568   003ED8  5051               	movf	(??_floorf+2)^0,w,c
  4569   003EDA  165D               	andwf	(floorf@u+2)^0,f,c
  4570   003EDC  5052               	movf	(??_floorf+3)^0,w,c
  4571   003EDE  165E               	andwf	(floorf@u+3)^0,f,c
  4572   003EE0  EFB6  F01F         	goto	l4373
  4573   003EE4                     l4365:
  4574   003EE4  C05B  F04F         	movff	floorf@u,??_floorf
  4575   003EE8  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4576   003EEC  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4577   003EF0  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4578   003EF4  0E20               	movlw	32
  4579   003EF6  EF82  F01F         	goto	u4210
  4580   003EFA                     u4215:
  4581   003EFA  90D8               	bcf	status,0,c
  4582   003EFC  3252               	rrcf	(??_floorf+3)^0,f,c
  4583   003EFE  3251               	rrcf	(??_floorf+2)^0,f,c
  4584   003F00  3250               	rrcf	(??_floorf+1)^0,f,c
  4585   003F02  324F               	rrcf	??_floorf^0,f,c
  4586   003F04                     u4210:
  4587   003F04  2EE8               	decfsz	wreg,f,c
  4588   003F06  EF7D  F01F         	goto	u4215
  4589   003F0A  504F               	movf	??_floorf^0,w,c
  4590   003F0C  1050               	iorwf	(??_floorf+1)^0,w,c
  4591   003F0E  1051               	iorwf	(??_floorf+2)^0,w,c
  4592   003F10  1052               	iorwf	(??_floorf+3)^0,w,c
  4593   003F12  A4D8               	btfss	status,2,c
  4594   003F14  EF8E  F01F         	goto	u4221
  4595   003F18  EF90  F01F         	goto	u4220
  4596   003F1C                     u4221:
  4597   003F1C  EF9A  F01F         	goto	l4369
  4598   003F20                     u4220:
  4599   003F20  0E00               	movlw	0
  4600   003F22  6E5B               	movwf	floorf@u^0,c
  4601   003F24  0E00               	movlw	0
  4602   003F26  6E5C               	movwf	(floorf@u+1)^0,c
  4603   003F28  0E00               	movlw	0
  4604   003F2A  6E5D               	movwf	(floorf@u+2)^0,c
  4605   003F2C  0E00               	movlw	0
  4606   003F2E  6E5E               	movwf	(floorf@u+3)^0,c
  4607   003F30  EFB6  F01F         	goto	l4373
  4608   003F34                     l4369:
  4609   003F34  90D8               	bcf	status,0,c
  4610   003F36  345B               	rlcf	floorf@u^0,w,c
  4611   003F38  6E4F               	movwf	??_floorf^0,c
  4612   003F3A  345C               	rlcf	(floorf@u+1)^0,w,c
  4613   003F3C  6E50               	movwf	(??_floorf+1)^0,c
  4614   003F3E  345D               	rlcf	(floorf@u+2)^0,w,c
  4615   003F40  6E51               	movwf	(??_floorf+2)^0,c
  4616   003F42  345E               	rlcf	(floorf@u+3)^0,w,c
  4617   003F44  6E52               	movwf	(??_floorf+3)^0,c
  4618   003F46  504F               	movf	??_floorf^0,w,c
  4619   003F48  1050               	iorwf	(??_floorf+1)^0,w,c
  4620   003F4A  1051               	iorwf	(??_floorf+2)^0,w,c
  4621   003F4C  1052               	iorwf	(??_floorf+3)^0,w,c
  4622   003F4E  B4D8               	btfsc	status,2,c
  4623   003F50  EFAC  F01F         	goto	u4231
  4624   003F54  EFAE  F01F         	goto	u4230
  4625   003F58                     u4231:
  4626   003F58  EFB6  F01F         	goto	l4373
  4627   003F5C                     u4230:
  4628   003F5C  0E00               	movlw	0
  4629   003F5E  6E5B               	movwf	floorf@u^0,c
  4630   003F60  0E00               	movlw	0
  4631   003F62  6E5C               	movwf	(floorf@u+1)^0,c
  4632   003F64  0E80               	movlw	128
  4633   003F66  6E5D               	movwf	(floorf@u+2)^0,c
  4634   003F68  0EBF               	movlw	191
  4635   003F6A  6E5E               	movwf	(floorf@u+3)^0,c
  4636   003F6C                     l4373:
  4637   003F6C  C05B  F04B         	movff	floorf@u,?_floorf
  4638   003F70  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4639   003F74  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4640   003F78  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4641   003F7C                     l1452:
  4642   003F7C  0012               	return		;funcret
  4643   003F7E                     __end_of_floorf:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function ___fpclassifyf *****************
  4647 ;; Defined at:
  4648 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  x               4    0[COMRAM] float 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  u               4   10[COMRAM] struct .
  4653 ;;  e               2    8[COMRAM] int 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  2    0[COMRAM] int 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4666 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4667 ;;Total ram usage:       14 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_efgtoa
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text9
  4678   004966                     __ptext9:
  4679                           	callstack 0
  4680   004966                     ___fpclassifyf:
  4681                           	callstack 25
  4682   004966  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4683   00496A  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4684   00496E  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4685   004972  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4686   004976  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4687   00497A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4688   00497E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4689   004982  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4690   004986  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4691   00498A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4692   00498E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4693   004992  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4694   004996  0E18               	movlw	24
  4695   004998  EFD3  F024         	goto	u4050
  4696   00499C                     u4055:
  4697   00499C  90D8               	bcf	status,0,c
  4698   00499E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4699   0049A0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4700   0049A2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4701   0049A4  3205               	rrcf	??___fpclassifyf^0,f,c
  4702   0049A6                     u4050:
  4703   0049A6  2EE8               	decfsz	wreg,f,c
  4704   0049A8  EFCE  F024         	goto	u4055
  4705   0049AC  5005               	movf	??___fpclassifyf^0,w,c
  4706   0049AE  6E09               	movwf	___fpclassifyf@e^0,c
  4707   0049B0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4708   0049B2  5009               	movf	___fpclassifyf@e^0,w,c
  4709   0049B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4710   0049B6  A4D8               	btfss	status,2,c
  4711   0049B8  EFE0  F024         	goto	u4061
  4712   0049BC  EFE2  F024         	goto	u4060
  4713   0049C0                     u4061:
  4714   0049C0  EF02  F025         	goto	l4331
  4715   0049C4                     u4060:
  4716   0049C4  90D8               	bcf	status,0,c
  4717   0049C6  340B               	rlcf	___fpclassifyf@u^0,w,c
  4718   0049C8  6E05               	movwf	??___fpclassifyf^0,c
  4719   0049CA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4720   0049CC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4721   0049CE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4722   0049D0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4723   0049D2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4724   0049D4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4725   0049D6  5005               	movf	??___fpclassifyf^0,w,c
  4726   0049D8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4727   0049DA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4728   0049DC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4729   0049DE  A4D8               	btfss	status,2,c
  4730   0049E0  EFF4  F024         	goto	u4071
  4731   0049E4  EFF6  F024         	goto	u4070
  4732   0049E8                     u4071:
  4733   0049E8  EFFC  F024         	goto	l4327
  4734   0049EC                     u4070:
  4735   0049EC  0E00               	movlw	0
  4736   0049EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4737   0049F0  0E02               	movlw	2
  4738   0049F2  6E01               	movwf	?___fpclassifyf^0,c
  4739   0049F4  EF31  F025         	goto	l1438
  4740   0049F8                     l4327:
  4741   0049F8  0E00               	movlw	0
  4742   0049FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4743   0049FC  0E03               	movlw	3
  4744   0049FE  6E01               	movwf	?___fpclassifyf^0,c
  4745   004A00  EF31  F025         	goto	l1438
  4746   004A04                     l4331:
  4747   004A04  2809               	incf	___fpclassifyf@e^0,w,c
  4748   004A06  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4749   004A08  A4D8               	btfss	status,2,c
  4750   004A0A  EF09  F025         	goto	u4081
  4751   004A0E  EF0B  F025         	goto	u4080
  4752   004A12                     u4081:
  4753   004A12  EF2D  F025         	goto	l4337
  4754   004A16                     u4080:
  4755   004A16  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4756   004A1A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4757   004A1E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4758   004A22  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4759   004A26  0E09               	movlw	9
  4760   004A28                     u4095:
  4761   004A28  90D8               	bcf	status,0,c
  4762   004A2A  3605               	rlcf	??___fpclassifyf^0,f,c
  4763   004A2C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4764   004A2E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4765   004A30  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4766   004A32  2EE8               	decfsz	wreg,f,c
  4767   004A34  EF14  F025         	goto	u4095
  4768   004A38  5005               	movf	??___fpclassifyf^0,w,c
  4769   004A3A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4770   004A3C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4771   004A3E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4772   004A40  B4D8               	btfsc	status,2,c
  4773   004A42  EF25  F025         	goto	u4101
  4774   004A46  EF28  F025         	goto	u4100
  4775   004A4A                     u4101:
  4776   004A4A  0E01               	movlw	1
  4777   004A4C  EF29  F025         	goto	u4110
  4778   004A50                     u4100:
  4779   004A50  0E00               	movlw	0
  4780   004A52                     u4110:
  4781   004A52  6E01               	movwf	?___fpclassifyf^0,c
  4782   004A54  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4783   004A56  EF31  F025         	goto	l1438
  4784   004A5A                     l4337:
  4785   004A5A  0E00               	movlw	0
  4786   004A5C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4787   004A5E  0E04               	movlw	4
  4788   004A60  6E01               	movwf	?___fpclassifyf^0,c
  4789   004A62                     l1438:
  4790   004A62  0012               	return		;funcret
  4791   004A64                     __end_of___fpclassifyf:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function ___fltol *****************
  4795 ;; Defined at:
  4796 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  f1              4    0[COMRAM] int 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  exp1            1    9[COMRAM] unsigned char 
  4801 ;;  sign1           1    8[COMRAM] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  4    0[COMRAM] long 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;Total ram usage:       10 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_turnRight45
  4822 ;;		_turnLeft45
  4823 ;;		_efgtoa
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text10
  4828   00475C                     __ptext10:
  4829                           	callstack 0
  4830   00475C                     ___fltol:
  4831                           	callstack 25
  4832   00475C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4833   00475E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4834   004760  6E0A               	movwf	___fltol@exp1^0,c
  4835   004762  500A               	movf	___fltol@exp1^0,w,c
  4836   004764  A4D8               	btfss	status,2,c
  4837   004766  EFB7  F023         	goto	u3951
  4838   00476A  EFB9  F023         	goto	u3950
  4839   00476E                     u3951:
  4840   00476E  EFC3  F023         	goto	l4263
  4841   004772                     u3950:
  4842   004772                     l4259:
  4843   004772  0E00               	movlw	0
  4844   004774  6E01               	movwf	?___fltol^0,c
  4845   004776  0E00               	movlw	0
  4846   004778  6E02               	movwf	(?___fltol+1)^0,c
  4847   00477A  0E00               	movlw	0
  4848   00477C  6E03               	movwf	(?___fltol+2)^0,c
  4849   00477E  0E00               	movlw	0
  4850   004780  6E04               	movwf	(?___fltol+3)^0,c
  4851   004782  EF30  F024         	goto	l911
  4852   004786                     l4263:
  4853   004786  C001  F005         	movff	___fltol@f1,??___fltol
  4854   00478A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4855   00478E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4856   004792  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4857   004796  0E20               	movlw	32
  4858   004798  EFD3  F023         	goto	u3960
  4859   00479C                     u3965:
  4860   00479C  90D8               	bcf	status,0,c
  4861   00479E  3208               	rrcf	(??___fltol+3)^0,f,c
  4862   0047A0  3207               	rrcf	(??___fltol+2)^0,f,c
  4863   0047A2  3206               	rrcf	(??___fltol+1)^0,f,c
  4864   0047A4  3205               	rrcf	??___fltol^0,f,c
  4865   0047A6                     u3960:
  4866   0047A6  2EE8               	decfsz	wreg,f,c
  4867   0047A8  EFCE  F023         	goto	u3965
  4868   0047AC  5005               	movf	??___fltol^0,w,c
  4869   0047AE  6E09               	movwf	___fltol@sign1^0,c
  4870   0047B0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4871   0047B2  0EFF               	movlw	255
  4872   0047B4  1601               	andwf	___fltol@f1^0,f,c
  4873   0047B6  0EFF               	movlw	255
  4874   0047B8  1602               	andwf	(___fltol@f1+1)^0,f,c
  4875   0047BA  0EFF               	movlw	255
  4876   0047BC  1603               	andwf	(___fltol@f1+2)^0,f,c
  4877   0047BE  0E00               	movlw	0
  4878   0047C0  1604               	andwf	(___fltol@f1+3)^0,f,c
  4879   0047C2  0E96               	movlw	150
  4880   0047C4  5E0A               	subwf	___fltol@exp1^0,f,c
  4881   0047C6  BE0A               	btfsc	___fltol@exp1^0,7,c
  4882   0047C8  EFEA  F023         	goto	u3970
  4883   0047CC  EFE8  F023         	goto	u3971
  4884   0047D0                     u3971:
  4885   0047D0  EF00  F024         	goto	l4283
  4886   0047D4                     u3970:
  4887   0047D4  500A               	movf	___fltol@exp1^0,w,c
  4888   0047D6  0A80               	xorlw	128
  4889   0047D8  0F97               	addlw	151
  4890   0047DA  B0D8               	btfsc	status,0,c
  4891   0047DC  EFF2  F023         	goto	u3981
  4892   0047E0  EFF4  F023         	goto	u3980
  4893   0047E4                     u3981:
  4894   0047E4  EFF6  F023         	goto	l4279
  4895   0047E8                     u3980:
  4896   0047E8  EFB9  F023         	goto	l4259
  4897   0047EC                     l4279:
  4898   0047EC  90D8               	bcf	status,0,c
  4899   0047EE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4900   0047F0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4901   0047F2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4902   0047F4  3201               	rrcf	___fltol@f1^0,f,c
  4903   0047F6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4904   0047F8  EFF6  F023         	goto	l4279
  4905   0047FC  EF18  F024         	goto	l4293
  4906   004800                     l4283:
  4907   004800  0E1F               	movlw	31
  4908   004802  640A               	cpfsgt	___fltol@exp1^0,c
  4909   004804  EF06  F024         	goto	u3991
  4910   004808  EF08  F024         	goto	u3990
  4911   00480C                     u3991:
  4912   00480C  EF10  F024         	goto	l4291
  4913   004810                     u3990:
  4914   004810  EFB9  F023         	goto	l4259
  4915   004814                     l4289:
  4916   004814  90D8               	bcf	status,0,c
  4917   004816  3601               	rlcf	___fltol@f1^0,f,c
  4918   004818  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4919   00481A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4920   00481C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4921   00481E  060A               	decf	___fltol@exp1^0,f,c
  4922   004820                     l4291:
  4923   004820  500A               	movf	___fltol@exp1^0,w,c
  4924   004822  A4D8               	btfss	status,2,c
  4925   004824  EF16  F024         	goto	u4001
  4926   004828  EF18  F024         	goto	u4000
  4927   00482C                     u4001:
  4928   00482C  EF0A  F024         	goto	l4289
  4929   004830                     u4000:
  4930   004830                     l4293:
  4931   004830  5009               	movf	___fltol@sign1^0,w,c
  4932   004832  B4D8               	btfsc	status,2,c
  4933   004834  EF1E  F024         	goto	u4011
  4934   004838  EF20  F024         	goto	u4010
  4935   00483C                     u4011:
  4936   00483C  EF28  F024         	goto	l4297
  4937   004840                     u4010:
  4938   004840  1E04               	comf	(___fltol@f1+3)^0,f,c
  4939   004842  1E03               	comf	(___fltol@f1+2)^0,f,c
  4940   004844  1E02               	comf	(___fltol@f1+1)^0,f,c
  4941   004846  6C01               	negf	___fltol@f1^0,c
  4942   004848  0E00               	movlw	0
  4943   00484A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4944   00484C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4945   00484E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4946   004850                     l4297:
  4947   004850  C001  F001         	movff	___fltol@f1,?___fltol
  4948   004854  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4949   004858  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4950   00485C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4951   004860                     l911:
  4952   004860  0012               	return		;funcret
  4953   004862                     __end_of___fltol:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function ___flneg *****************
  4957 ;; Defined at:
  4958 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  f1              4    0[COMRAM] long 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  4    0[COMRAM] long 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, status,0
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;Total ram usage:        4 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_efgtoa
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text11
  4987   005A7C                     __ptext11:
  4988                           	callstack 0
  4989   005A7C                     ___flneg:
  4990                           	callstack 25
  4991   005A7C  5001               	movf	___flneg@f1^0,w,c
  4992   005A7E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4993   005A80  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4994   005A82  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4995   005A84  B4D8               	btfsc	status,2,c
  4996   005A86  EF47  F02D         	goto	u3941
  4997   005A8A  EF49  F02D         	goto	u3940
  4998   005A8E                     u3941:
  4999   005A8E  EF51  F02D         	goto	l4253
  5000   005A92                     u3940:
  5001   005A92  0E00               	movlw	0
  5002   005A94  1A01               	xorwf	___flneg@f1^0,f,c
  5003   005A96  0E00               	movlw	0
  5004   005A98  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5005   005A9A  0E00               	movlw	0
  5006   005A9C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5007   005A9E  0E80               	movlw	128
  5008   005AA0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5009   005AA2                     l4253:
  5010   005AA2  C001  F001         	movff	___flneg@f1,?___flneg
  5011   005AA6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5012   005AAA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5013   005AAE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5014   005AB2  0012               	return		;funcret
  5015   005AB4                     __end_of___flneg:
  5016                           	callstack 0
  5017                           
  5018 ;; *************** function _dtoa *****************
  5019 ;; Defined at:
  5020 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5023 ;;		 -> sprintf@f(11), 
  5024 ;;  d               8   29[COMRAM] long long 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  n               8   51[COMRAM] long long 
  5027 ;;  i               2   59[COMRAM] int 
  5028 ;;  w               2   49[COMRAM] int 
  5029 ;;  p               2   47[COMRAM] int 
  5030 ;;  s               1   61[COMRAM] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5040 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;Total ram usage:       35 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 5
  5047 ;; This function calls:
  5048 ;;		___aodiv
  5049 ;;		___aomod
  5050 ;;		_abs
  5051 ;;		_pad
  5052 ;; This function is called by:
  5053 ;;		_vfpfcnvrt
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text12
  5058   003AEE                     __ptext12:
  5059                           	callstack 0
  5060   003AEE                     _dtoa:
  5061                           	callstack 22
  5062   003AEE                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5064   003AEE  C01E  F034         	movff	dtoa@d,dtoa@n
  5065   003AF2  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5066   003AF6  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5067   003AFA  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5068   003AFE  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5069   003B02  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5070   003B06  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5071   003B0A  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5072   003B0E                     
  5073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5074   003B0E  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5075   003B10  EF8C  F01D         	goto	u4371
  5076   003B14  EF8F  F01D         	goto	u4370
  5077   003B18                     u4371:
  5078   003B18  0E01               	movlw	1
  5079   003B1A  EF90  F01D         	goto	u4380
  5080   003B1E                     u4370:
  5081   003B1E  0E00               	movlw	0
  5082   003B20                     u4380:
  5083   003B20  6E3E               	movwf	dtoa@s^0,c
  5084   003B22                     
  5085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5086   003B22  503E               	movf	dtoa@s^0,w,c
  5087   003B24  B4D8               	btfsc	status,2,c
  5088   003B26  EF97  F01D         	goto	u4391
  5089   003B2A  EF99  F01D         	goto	u4390
  5090   003B2E                     u4391:
  5091   003B2E  EFA9  F01D         	goto	l4471
  5092   003B32                     u4390:
  5093   003B32                     
  5094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5095   003B32  1E3B               	comf	(dtoa@n+7)^0,f,c
  5096   003B34  1E3A               	comf	(dtoa@n+6)^0,f,c
  5097   003B36  1E39               	comf	(dtoa@n+5)^0,f,c
  5098   003B38  1E38               	comf	(dtoa@n+4)^0,f,c
  5099   003B3A  1E37               	comf	(dtoa@n+3)^0,f,c
  5100   003B3C  1E36               	comf	(dtoa@n+2)^0,f,c
  5101   003B3E  1E35               	comf	(dtoa@n+1)^0,f,c
  5102   003B40  6C34               	negf	dtoa@n^0,c
  5103   003B42  0E00               	movlw	0
  5104   003B44  2235               	addwfc	(dtoa@n+1)^0,f,c
  5105   003B46  2236               	addwfc	(dtoa@n+2)^0,f,c
  5106   003B48  2237               	addwfc	(dtoa@n+3)^0,f,c
  5107   003B4A  2238               	addwfc	(dtoa@n+4)^0,f,c
  5108   003B4C  2239               	addwfc	(dtoa@n+5)^0,f,c
  5109   003B4E  223A               	addwfc	(dtoa@n+6)^0,f,c
  5110   003B50  223B               	addwfc	(dtoa@n+7)^0,f,c
  5111   003B52                     l4471:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5114   003B52  0100               	movlb	0	; () banked
  5115   003B54  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5116   003B56  EFB7  F01D         	goto	u4400
  5117   003B5A  51EA               	movf	(_prec+1)& (0+255),w,b
  5118   003B5C  E106               	bnz	u4401
  5119   003B5E  05E9               	decf	_prec& (0+255),w,b
  5120   003B60  B0D8               	btfsc	status,0,c
  5121   003B62  EFB5  F01D         	goto	u4401
  5122   003B66  EFB7  F01D         	goto	u4400
  5123   003B6A                     u4401:
  5124   003B6A  EFBD  F01D         	goto	l1333
  5125   003B6E                     u4400:
  5126   003B6E                     
  5127                           ; BSR set to: 0
  5128   003B6E  0E00               	movlw	0
  5129   003B70  6E31               	movwf	(dtoa@p+1)^0,c
  5130   003B72  0E01               	movlw	1
  5131   003B74  6E30               	movwf	dtoa@p^0,c
  5132   003B76  EFC1  F01D         	goto	l1335
  5133   003B7A                     l1333:
  5134                           
  5135                           ; BSR set to: 0
  5136   003B7A  C0E9  F030         	movff	_prec,dtoa@p
  5137   003B7E  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5138   003B82                     l1335:
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5142   003B82  C0E7  F032         	movff	_width,dtoa@w
  5143   003B86  C0E8  F033         	movff	_width+1,dtoa@w+1
  5144   003B8A                     
  5145                           ; BSR set to: 0
  5146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5147   003B8A  503E               	movf	dtoa@s^0,w,c
  5148   003B8C  B4D8               	btfsc	status,2,c
  5149   003B8E  EFCB  F01D         	goto	u4411
  5150   003B92  EFCD  F01D         	goto	u4410
  5151   003B96                     u4411:
  5152   003B96  EFE4  F01D         	goto	l1336
  5153   003B9A                     u4410:
  5154   003B9A                     
  5155                           ; BSR set to: 0
  5156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5157   003B9A  0632               	decf	dtoa@w^0,f,c
  5158   003B9C  A0D8               	btfss	status,0,c
  5159   003B9E  0633               	decf	(dtoa@w+1)^0,f,c
  5160   003BA0                     
  5161                           ; BSR set to: 0
  5162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5163   003BA0  503E               	movf	dtoa@s^0,w,c
  5164   003BA2  A4D8               	btfss	status,2,c
  5165   003BA4  EFD6  F01D         	goto	u4421
  5166   003BA8  EFD8  F01D         	goto	u4420
  5167   003BAC                     u4421:
  5168   003BAC  EFDE  F01D         	goto	l4483
  5169   003BB0                     u4420:
  5170   003BB0                     
  5171                           ; BSR set to: 0
  5172   003BB0  0E00               	movlw	0
  5173   003BB2  6E2F               	movwf	(_dtoa$2387+1)^0,c
  5174   003BB4  0E2B               	movlw	43
  5175   003BB6  6E2E               	movwf	_dtoa$2387^0,c
  5176   003BB8  EFE2  F01D         	goto	l4485
  5177   003BBC                     l4483:
  5178                           
  5179                           ; BSR set to: 0
  5180   003BBC  0E00               	movlw	0
  5181   003BBE  6E2F               	movwf	(_dtoa$2387+1)^0,c
  5182   003BC0  0E2D               	movlw	45
  5183   003BC2  6E2E               	movwf	_dtoa$2387^0,c
  5184   003BC4                     l4485:
  5185                           
  5186                           ; BSR set to: 0
  5187   003BC4  C02E  F03E         	movff	_dtoa$2387,dtoa@s
  5188   003BC8                     l1336:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5192   003BC8  0E00               	movlw	0
  5193   003BCA  6E3D               	movwf	(dtoa@i+1)^0,c
  5194   003BCC  0E4F               	movlw	79
  5195   003BCE  6E3C               	movwf	dtoa@i^0,c
  5196   003BD0                     
  5197                           ; BSR set to: 0
  5198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5199   003BD0  0E00               	movlw	0
  5200   003BD2  0101               	movlb	1	; () banked
  5201   003BD4  6F65               	movwf	(_dbuf+79)& (0+255),b
  5202                           
  5203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5204   003BD6  EF69  F01E         	goto	l4499
  5205   003BDA                     l4489:
  5206                           
  5207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5208   003BDA  063C               	decf	dtoa@i^0,f,c
  5209   003BDC  A0D8               	btfss	status,0,c
  5210   003BDE  063D               	decf	(dtoa@i+1)^0,f,c
  5211   003BE0                     
  5212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5213   003BE0  0E16               	movlw	low _dbuf
  5214   003BE2  243C               	addwf	dtoa@i^0,w,c
  5215   003BE4  6ED9               	movwf	fsr2l,c
  5216   003BE6  0E01               	movlw	high _dbuf
  5217   003BE8  203D               	addwfc	(dtoa@i+1)^0,w,c
  5218   003BEA  6EDA               	movwf	fsr2h,c
  5219   003BEC  C034  F001         	movff	dtoa@n,___aomod@dividend
  5220   003BF0  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5221   003BF4  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5222   003BF8  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5223   003BFC  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5224   003C00  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5225   003C04  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5226   003C08  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5227   003C0C  0E0A               	movlw	10
  5228   003C0E  6E09               	movwf	___aomod@divisor^0,c
  5229   003C10  0E00               	movlw	0
  5230   003C12  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5231   003C14  0E00               	movlw	0
  5232   003C16  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5233   003C18  0E00               	movlw	0
  5234   003C1A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5235   003C1C  0E00               	movlw	0
  5236   003C1E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5237   003C20  0E00               	movlw	0
  5238   003C22  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5239   003C24  0E00               	movlw	0
  5240   003C26  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5241   003C28  0E00               	movlw	0
  5242   003C2A  6E10               	movwf	(___aomod@divisor+7)^0,c
  5243   003C2C  ECFC  F022         	call	___aomod	;wreg free
  5244   003C30  C001  F026         	movff	?___aomod,??_dtoa
  5245   003C34  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5246   003C38  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5247   003C3C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5248   003C40  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5249   003C44  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5250   003C48  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5251   003C4C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5252   003C50  C026  F013         	movff	??_dtoa,abs@a
  5253   003C54  C027  F014         	movff	??_dtoa+1,abs@a+1
  5254   003C58  ECA2  F02C         	call	_abs	;wreg free
  5255   003C5C  5013               	movf	?_abs^0,w,c
  5256   003C5E  0F30               	addlw	48
  5257   003C60  6EDF               	movwf	indf2,c
  5258   003C62                     
  5259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5260   003C62  0630               	decf	dtoa@p^0,f,c
  5261   003C64  A0D8               	btfss	status,0,c
  5262   003C66  0631               	decf	(dtoa@p+1)^0,f,c
  5263   003C68                     
  5264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5265   003C68  0632               	decf	dtoa@w^0,f,c
  5266   003C6A  A0D8               	btfss	status,0,c
  5267   003C6C  0633               	decf	(dtoa@w+1)^0,f,c
  5268   003C6E                     
  5269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5270   003C6E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5271   003C72  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5272   003C76  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5273   003C7A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5274   003C7E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5275   003C82  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5276   003C86  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5277   003C8A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5278   003C8E  0E0A               	movlw	10
  5279   003C90  6E09               	movwf	___aodiv@divisor^0,c
  5280   003C92  0E00               	movlw	0
  5281   003C94  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5282   003C96  0E00               	movlw	0
  5283   003C98  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5284   003C9A  0E00               	movlw	0
  5285   003C9C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5286   003C9E  0E00               	movlw	0
  5287   003CA0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5288   003CA2  0E00               	movlw	0
  5289   003CA4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5290   003CA6  0E00               	movlw	0
  5291   003CA8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5292   003CAA  0E00               	movlw	0
  5293   003CAC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5294   003CAE  EC82  F021         	call	___aodiv	;wreg free
  5295   003CB2  C001  F034         	movff	?___aodiv,dtoa@n
  5296   003CB6  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5297   003CBA  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5298   003CBE  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5299   003CC2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5300   003CC6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5301   003CCA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5302   003CCE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5303   003CD2                     l4499:
  5304                           
  5305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5306   003CD2  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5307   003CD4  EF74  F01E         	goto	u4431
  5308   003CD8  503D               	movf	(dtoa@i+1)^0,w,c
  5309   003CDA  E108               	bnz	u4430
  5310   003CDC  043C               	decf	dtoa@i^0,w,c
  5311   003CDE  A0D8               	btfss	status,0,c
  5312   003CE0  EF74  F01E         	goto	u4431
  5313   003CE4  EF76  F01E         	goto	u4430
  5314   003CE8                     u4431:
  5315   003CE8  EF92  F01E         	goto	l4505
  5316   003CEC                     u4430:
  5317   003CEC  5034               	movf	dtoa@n^0,w,c
  5318   003CEE  1035               	iorwf	(dtoa@n+1)^0,w,c
  5319   003CF0  1036               	iorwf	(dtoa@n+2)^0,w,c
  5320   003CF2  1037               	iorwf	(dtoa@n+3)^0,w,c
  5321   003CF4  1038               	iorwf	(dtoa@n+4)^0,w,c
  5322   003CF6  1039               	iorwf	(dtoa@n+5)^0,w,c
  5323   003CF8  103A               	iorwf	(dtoa@n+6)^0,w,c
  5324   003CFA  103B               	iorwf	(dtoa@n+7)^0,w,c
  5325   003CFC  A4D8               	btfss	status,2,c
  5326   003CFE  EF83  F01E         	goto	u4441
  5327   003D02  EF85  F01E         	goto	u4440
  5328   003D06                     u4441:
  5329   003D06  EFED  F01D         	goto	l4489
  5330   003D0A                     u4440:
  5331   003D0A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5332   003D0C  EF92  F01E         	goto	u4450
  5333   003D10  5031               	movf	(dtoa@p+1)^0,w,c
  5334   003D12  E106               	bnz	u4451
  5335   003D14  0430               	decf	dtoa@p^0,w,c
  5336   003D16  B0D8               	btfsc	status,0,c
  5337   003D18  EF90  F01E         	goto	u4451
  5338   003D1C  EF92  F01E         	goto	u4450
  5339   003D20                     u4451:
  5340   003D20  EFED  F01D         	goto	l4489
  5341   003D24                     u4450:
  5342   003D24                     l4505:
  5343                           
  5344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5345   003D24  503E               	movf	dtoa@s^0,w,c
  5346   003D26  B4D8               	btfsc	status,2,c
  5347   003D28  EF98  F01E         	goto	u4461
  5348   003D2C  EF9A  F01E         	goto	u4460
  5349   003D30                     u4461:
  5350   003D30  EFA5  F01E         	goto	l4511
  5351   003D34                     u4460:
  5352   003D34                     
  5353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5354   003D34  063C               	decf	dtoa@i^0,f,c
  5355   003D36  A0D8               	btfss	status,0,c
  5356   003D38  063D               	decf	(dtoa@i+1)^0,f,c
  5357   003D3A                     
  5358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5359   003D3A  0E16               	movlw	low _dbuf
  5360   003D3C  243C               	addwf	dtoa@i^0,w,c
  5361   003D3E  6ED9               	movwf	fsr2l,c
  5362   003D40  0E01               	movlw	high _dbuf
  5363   003D42  203D               	addwfc	(dtoa@i+1)^0,w,c
  5364   003D44  6EDA               	movwf	fsr2h,c
  5365   003D46  C03E  FFDF         	movff	dtoa@s,indf2
  5366   003D4A                     l4511:
  5367                           
  5368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5369   003D4A  C01C  F011         	movff	dtoa@fp,pad@fp
  5370   003D4E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5371   003D52  0E16               	movlw	low _dbuf
  5372   003D54  243C               	addwf	dtoa@i^0,w,c
  5373   003D56  6E13               	movwf	pad@buf^0,c
  5374   003D58  0E01               	movlw	high _dbuf
  5375   003D5A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5376   003D5C  6E14               	movwf	(pad@buf+1)^0,c
  5377   003D5E  C032  F015         	movff	dtoa@w,pad@p
  5378   003D62  C033  F016         	movff	dtoa@w+1,pad@p+1
  5379   003D66  ECEC  F027         	call	_pad	;wreg free
  5380   003D6A  0012               	return		;funcret
  5381   003D6C                     __end_of_dtoa:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function _pad *****************
  5385 ;; Defined at:
  5386 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5389 ;;		 -> sprintf@f(11), 
  5390 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5391 ;;		 -> dbuf(80), 
  5392 ;;  p               2   20[COMRAM] int 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  w               2   25[COMRAM] int 
  5395 ;;  i               2   23[COMRAM] int 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5405 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5408 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;Total ram usage:       11 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; Hardware stack levels required when called: 4
  5412 ;; This function calls:
  5413 ;;		_fputc
  5414 ;;		_fputs
  5415 ;; This function is called by:
  5416 ;;		_dtoa
  5417 ;;		_efgtoa
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text13
  5422   004FD8                     __ptext13:
  5423                           	callstack 0
  5424   004FD8                     _pad:
  5425                           	callstack 22
  5426   004FD8                     
  5427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5428   004FD8  BE16               	btfsc	(pad@p+1)^0,7,c
  5429   004FDA  EFF1  F027         	goto	u4021
  5430   004FDE  EFF3  F027         	goto	u4020
  5431   004FE2                     u4021:
  5432   004FE2  EFF9  F027         	goto	l4305
  5433   004FE6                     u4020:
  5434   004FE6  C015  F01A         	movff	pad@p,pad@w
  5435   004FEA  C016  F01B         	movff	pad@p+1,pad@w+1
  5436   004FEE  EFFD  F027         	goto	l1324
  5437   004FF2                     l4305:
  5438   004FF2  0E00               	movlw	0
  5439   004FF4  6E1B               	movwf	(pad@w+1)^0,c
  5440   004FF6  0E00               	movlw	0
  5441   004FF8  6E1A               	movwf	pad@w^0,c
  5442   004FFA                     l1324:
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5445   004FFA  0E00               	movlw	0
  5446   004FFC  6E19               	movwf	(pad@i+1)^0,c
  5447   004FFE  0E00               	movlw	0
  5448   005000  6E18               	movwf	pad@i^0,c
  5449                           
  5450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5451   005002  EF0F  F028         	goto	l4311
  5452   005006                     l4307:
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5455   005006  0E00               	movlw	0
  5456   005008  6E02               	movwf	(fputc@c+1)^0,c
  5457   00500A  0E20               	movlw	32
  5458   00500C  6E01               	movwf	fputc@c^0,c
  5459   00500E  C011  F003         	movff	pad@fp,fputc@fp
  5460   005012  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5461   005016  EC32  F025         	call	_fputc	;wreg free
  5462   00501A                     
  5463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5464   00501A  4A18               	infsnz	pad@i^0,f,c
  5465   00501C  2A19               	incf	(pad@i+1)^0,f,c
  5466   00501E                     l4311:
  5467                           
  5468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5469   00501E  501A               	movf	pad@w^0,w,c
  5470   005020  5C18               	subwf	pad@i^0,w,c
  5471   005022  5019               	movf	(pad@i+1)^0,w,c
  5472   005024  0A80               	xorlw	128
  5473   005026  6E17               	movwf	??_pad^0,c
  5474   005028  501B               	movf	(pad@w+1)^0,w,c
  5475   00502A  0A80               	xorlw	128
  5476   00502C  5817               	subwfb	??_pad^0,w,c
  5477   00502E  A0D8               	btfss	status,0,c
  5478   005030  EF1C  F028         	goto	u4031
  5479   005034  EF1E  F028         	goto	u4030
  5480   005038                     u4031:
  5481   005038  EF03  F028         	goto	l4307
  5482   00503C                     u4030:
  5483   00503C                     
  5484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5485   00503C  C013  F00A         	movff	pad@buf,fputs@s
  5486   005040  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5487   005044  C011  F00C         	movff	pad@fp,fputs@fp
  5488   005048  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5489   00504C  EC5F  F02C         	call	_fputs	;wreg free
  5490   005050  0012               	return		;funcret
  5491   005052                     __end_of_pad:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _fputs *****************
  5495 ;; Defined at:
  5496 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5499 ;;		 -> dbuf(80), 
  5500 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5501 ;;		 -> sprintf@f(11), 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  i               2   14[COMRAM] int 
  5504 ;;  c               1   13[COMRAM] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  2    9[COMRAM] int 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5517 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;Total ram usage:        7 bytes
  5519 ;; Hardware stack levels used: 1
  5520 ;; Hardware stack levels required when called: 3
  5521 ;; This function calls:
  5522 ;;		_fputc
  5523 ;; This function is called by:
  5524 ;;		_pad
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text14
  5529   0058BE                     __ptext14:
  5530                           	callstack 0
  5531   0058BE                     _fputs:
  5532                           	callstack 22
  5533   0058BE  0E00               	movlw	0
  5534   0058C0  6E10               	movwf	(fputs@i+1)^0,c
  5535   0058C2  0E00               	movlw	0
  5536   0058C4  6E0F               	movwf	fputs@i^0,c
  5537   0058C6  EF70  F02C         	goto	l3839
  5538   0058CA                     l3835:
  5539   0058CA  C00E  F001         	movff	fputs@c,fputc@c
  5540   0058CE  6A02               	clrf	(fputc@c+1)^0,c
  5541   0058D0  C00C  F003         	movff	fputs@fp,fputc@fp
  5542   0058D4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5543   0058D8  EC32  F025         	call	_fputc	;wreg free
  5544   0058DC  4A0F               	infsnz	fputs@i^0,f,c
  5545   0058DE  2A10               	incf	(fputs@i+1)^0,f,c
  5546   0058E0                     l3839:
  5547   0058E0  500F               	movf	fputs@i^0,w,c
  5548   0058E2  240A               	addwf	fputs@s^0,w,c
  5549   0058E4  6ED9               	movwf	fsr2l,c
  5550   0058E6  5010               	movf	(fputs@i+1)^0,w,c
  5551   0058E8  200B               	addwfc	(fputs@s+1)^0,w,c
  5552   0058EA  6EDA               	movwf	fsr2h,c
  5553   0058EC  50DF               	movf	indf2,w,c
  5554   0058EE  6E0E               	movwf	fputs@c^0,c
  5555   0058F0  500E               	movf	fputs@c^0,w,c
  5556   0058F2  A4D8               	btfss	status,2,c
  5557   0058F4  EF7E  F02C         	goto	u3281
  5558   0058F8  EF80  F02C         	goto	u3280
  5559   0058FC                     u3281:
  5560   0058FC  EF65  F02C         	goto	l3835
  5561   005900                     u3280:
  5562   005900  0012               	return		;funcret
  5563   005902                     __end_of_fputs:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _fputc *****************
  5567 ;; Defined at:
  5568 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  c               2    0[COMRAM] int 
  5571 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5572 ;;		 -> sprintf@f(11), 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  2    0[COMRAM] int 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;Total ram usage:        9 bytes
  5589 ;; Hardware stack levels used: 1
  5590 ;; Hardware stack levels required when called: 2
  5591 ;; This function calls:
  5592 ;;		_putch
  5593 ;; This function is called by:
  5594 ;;		_pad
  5595 ;;		_vfpfcnvrt
  5596 ;;		_fputs
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text15
  5601   004A64                     __ptext15:
  5602                           	callstack 0
  5603   004A64                     _fputc:
  5604                           	callstack 25
  5605   004A64  5003               	movf	fputc@fp^0,w,c
  5606   004A66  1004               	iorwf	(fputc@fp+1)^0,w,c
  5607   004A68  B4D8               	btfsc	status,2,c
  5608   004A6A  EF39  F025         	goto	u2821
  5609   004A6E  EF3B  F025         	goto	u2820
  5610   004A72                     u2821:
  5611   004A72  EF44  F025         	goto	l3593
  5612   004A76                     u2820:
  5613   004A76  5003               	movf	fputc@fp^0,w,c
  5614   004A78  1004               	iorwf	(fputc@fp+1)^0,w,c
  5615   004A7A  A4D8               	btfss	status,2,c
  5616   004A7C  EF42  F025         	goto	u2831
  5617   004A80  EF44  F025         	goto	u2830
  5618   004A84                     u2831:
  5619   004A84  EF49  F025         	goto	l3595
  5620   004A88                     u2830:
  5621   004A88                     l3593:
  5622   004A88  5001               	movf	fputc@c^0,w,c
  5623   004A8A  ECF2  F02D         	call	_putch
  5624   004A8E  EF96  F025         	goto	l1484
  5625   004A92                     l3595:
  5626   004A92  EE20 F009          	lfsr	2,9
  5627   004A96  5003               	movf	fputc@fp^0,w,c
  5628   004A98  26D9               	addwf	fsr2l,f,c
  5629   004A9A  5004               	movf	(fputc@fp+1)^0,w,c
  5630   004A9C  22DA               	addwfc	fsr2h,f,c
  5631   004A9E  50DE               	movf	postinc2,w,c
  5632   004AA0  10DE               	iorwf	postinc2,w,c
  5633   004AA2  B4D8               	btfsc	status,2,c
  5634   004AA4  EF56  F025         	goto	u2841
  5635   004AA8  EF58  F025         	goto	u2840
  5636   004AAC                     u2841:
  5637   004AAC  EF73  F025         	goto	l3599
  5638   004AB0                     u2840:
  5639   004AB0  EE20 F009          	lfsr	2,9
  5640   004AB4  5003               	movf	fputc@fp^0,w,c
  5641   004AB6  26D9               	addwf	fsr2l,f,c
  5642   004AB8  5004               	movf	(fputc@fp+1)^0,w,c
  5643   004ABA  22DA               	addwfc	fsr2h,f,c
  5644   004ABC  EE10 F003          	lfsr	1,3
  5645   004AC0  5003               	movf	fputc@fp^0,w,c
  5646   004AC2  26E1               	addwf	fsr1l,f,c
  5647   004AC4  5004               	movf	(fputc@fp+1)^0,w,c
  5648   004AC6  22E2               	addwfc	fsr1h,f,c
  5649   004AC8  50DE               	movf	postinc2,w,c
  5650   004ACA  5CE6               	subwf	postinc1,w,c
  5651   004ACC  50E6               	movf	postinc1,w,c
  5652   004ACE  0A80               	xorlw	128
  5653   004AD0  6E09               	movwf	(??_fputc+4)^0,c
  5654   004AD2  50DE               	movf	postinc2,w,c
  5655   004AD4  0A80               	xorlw	128
  5656   004AD6  5809               	subwfb	(??_fputc+4)^0,w,c
  5657   004AD8  B0D8               	btfsc	status,0,c
  5658   004ADA  EF71  F025         	goto	u2851
  5659   004ADE  EF73  F025         	goto	u2850
  5660   004AE2                     u2851:
  5661   004AE2  EF96  F025         	goto	l1484
  5662   004AE6                     u2850:
  5663   004AE6                     l3599:
  5664   004AE6  EE20 F003          	lfsr	2,3
  5665   004AEA  5003               	movf	fputc@fp^0,w,c
  5666   004AEC  26D9               	addwf	fsr2l,f,c
  5667   004AEE  5004               	movf	(fputc@fp+1)^0,w,c
  5668   004AF0  22DA               	addwfc	fsr2h,f,c
  5669   004AF2  CFDE F005          	movff	postinc2,??_fputc
  5670   004AF6  CFDD F006          	movff	postdec2,??_fputc+1
  5671   004AFA  C003  FFD9         	movff	fputc@fp,fsr2l
  5672   004AFE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5673   004B02  CFDE F007          	movff	postinc2,??_fputc+2
  5674   004B06  CFDD F008          	movff	postdec2,??_fputc+3
  5675   004B0A  5005               	movf	??_fputc^0,w,c
  5676   004B0C  2407               	addwf	(??_fputc+2)^0,w,c
  5677   004B0E  6ED9               	movwf	fsr2l,c
  5678   004B10  5006               	movf	(??_fputc+1)^0,w,c
  5679   004B12  2008               	addwfc	(??_fputc+3)^0,w,c
  5680   004B14  6EDA               	movwf	fsr2h,c
  5681   004B16  C001  FFDF         	movff	fputc@c,indf2
  5682   004B1A  EE20 F003          	lfsr	2,3
  5683   004B1E  5003               	movf	fputc@fp^0,w,c
  5684   004B20  26D9               	addwf	fsr2l,f,c
  5685   004B22  5004               	movf	(fputc@fp+1)^0,w,c
  5686   004B24  22DA               	addwfc	fsr2h,f,c
  5687   004B26  2ADE               	incf	postinc2,f,c
  5688   004B28  0E00               	movlw	0
  5689   004B2A  22DD               	addwfc	postdec2,f,c
  5690   004B2C                     l1484:
  5691   004B2C  0012               	return		;funcret
  5692   004B2E                     __end_of_fputc:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function _putch *****************
  5696 ;; Defined at:
  5697 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  c               1    wreg     unsigned char 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  c               1    0[COMRAM] unsigned char 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used: 1
  5717 ;; Hardware stack levels required when called: 1
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_fputc
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text16
  5726   005BE4                     __ptext16:
  5727                           	callstack 0
  5728   005BE4                     _putch:
  5729                           	callstack 25
  5730   005BE4  0012               	return		;funcret
  5731   005BE6                     __end_of_putch:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function _abs *****************
  5735 ;; Defined at:
  5736 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  a               2   18[COMRAM] int 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  2   18[COMRAM] int 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;Total ram usage:        4 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_dtoa
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text17
  5765   005944                     __ptext17:
  5766                           	callstack 0
  5767   005944                     _abs:
  5768                           	callstack 25
  5769   005944  BE14               	btfsc	(abs@a+1)^0,7,c
  5770   005946  EFAF  F02C         	goto	u4040
  5771   00594A  5014               	movf	(abs@a+1)^0,w,c
  5772   00594C  E106               	bnz	u4041
  5773   00594E  0413               	decf	abs@a^0,w,c
  5774   005950  B0D8               	btfsc	status,0,c
  5775   005952  EFAD  F02C         	goto	u4041
  5776   005956  EFAF  F02C         	goto	u4040
  5777   00595A                     u4041:
  5778   00595A  EFBD  F02C         	goto	l1443
  5779   00595E                     u4040:
  5780   00595E  C013  F015         	movff	abs@a,??_abs
  5781   005962  C014  F016         	movff	abs@a+1,??_abs+1
  5782   005966  1E15               	comf	??_abs^0,f,c
  5783   005968  1E16               	comf	(??_abs+1)^0,f,c
  5784   00596A  4A15               	infsnz	??_abs^0,f,c
  5785   00596C  2A16               	incf	(??_abs+1)^0,f,c
  5786   00596E  C015  F013         	movff	??_abs,?_abs
  5787   005972  C016  F014         	movff	??_abs+1,?_abs+1
  5788   005976  EFC1  F02C         	goto	l1446
  5789   00597A                     l1443:
  5790   00597A  C013  F013         	movff	abs@a,?_abs
  5791   00597E  C014  F014         	movff	abs@a+1,?_abs+1
  5792   005982                     l1446:
  5793   005982  0012               	return		;funcret
  5794   005984                     __end_of_abs:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function ___aomod *****************
  5798 ;; Defined at:
  5799 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  dividend        8    0[COMRAM] long long 
  5802 ;;  divisor         8    8[COMRAM] long long 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  sign            1   17[COMRAM] unsigned char 
  5805 ;;  counter         1   16[COMRAM] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  8    0[COMRAM] long long 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5815 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;Total ram usage:       18 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 1
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_dtoa
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text18
  5830   0045F8                     __ptext18:
  5831                           	callstack 0
  5832   0045F8                     ___aomod:
  5833                           	callstack 25
  5834   0045F8  0E00               	movlw	0
  5835   0045FA  6E12               	movwf	___aomod@sign^0,c
  5836   0045FC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5837   0045FE  EF05  F023         	goto	u3380
  5838   004602  EF03  F023         	goto	u3381
  5839   004606                     u3381:
  5840   004606  EF17  F023         	goto	l3909
  5841   00460A                     u3380:
  5842   00460A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5843   00460C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5844   00460E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5845   004610  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5846   004612  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5847   004614  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5848   004616  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5849   004618  6C01               	negf	___aomod@dividend^0,c
  5850   00461A  0E00               	movlw	0
  5851   00461C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5852   00461E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5853   004620  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5854   004622  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5855   004624  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5856   004626  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5857   004628  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5858   00462A  0E01               	movlw	1
  5859   00462C  6E12               	movwf	___aomod@sign^0,c
  5860   00462E                     l3909:
  5861   00462E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5862   004630  EF1E  F023         	goto	u3390
  5863   004634  EF1C  F023         	goto	u3391
  5864   004638                     u3391:
  5865   004638  EF2E  F023         	goto	l3913
  5866   00463C                     u3390:
  5867   00463C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5868   00463E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5869   004640  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5870   004642  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5871   004644  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5872   004646  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5873   004648  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5874   00464A  6C09               	negf	___aomod@divisor^0,c
  5875   00464C  0E00               	movlw	0
  5876   00464E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5877   004650  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5878   004652  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5879   004654  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5880   004656  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5881   004658  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5882   00465A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5883   00465C                     l3913:
  5884   00465C  5009               	movf	___aomod@divisor^0,w,c
  5885   00465E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5886   004660  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5887   004662  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5888   004664  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5889   004666  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5890   004668  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5891   00466A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5892   00466C  B4D8               	btfsc	status,2,c
  5893   00466E  EF3B  F023         	goto	u3401
  5894   004672  EF3D  F023         	goto	u3400
  5895   004676                     u3401:
  5896   004676  EF85  F023         	goto	l3929
  5897   00467A                     u3400:
  5898   00467A  0E01               	movlw	1
  5899   00467C  6E11               	movwf	___aomod@counter^0,c
  5900   00467E  EF4B  F023         	goto	l3919
  5901   004682                     l3917:
  5902   004682  90D8               	bcf	status,0,c
  5903   004684  3609               	rlcf	___aomod@divisor^0,f,c
  5904   004686  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5905   004688  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5906   00468A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5907   00468C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5908   00468E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5909   004690  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5910   004692  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5911   004694  2A11               	incf	___aomod@counter^0,f,c
  5912   004696                     l3919:
  5913   004696  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5914   004698  EF50  F023         	goto	u3411
  5915   00469C  EF52  F023         	goto	u3410
  5916   0046A0                     u3411:
  5917   0046A0  EF41  F023         	goto	l3917
  5918   0046A4                     u3410:
  5919   0046A4                     l3921:
  5920   0046A4  5009               	movf	___aomod@divisor^0,w,c
  5921   0046A6  5C01               	subwf	___aomod@dividend^0,w,c
  5922   0046A8  500A               	movf	(___aomod@divisor+1)^0,w,c
  5923   0046AA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5924   0046AC  500B               	movf	(___aomod@divisor+2)^0,w,c
  5925   0046AE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5926   0046B0  500C               	movf	(___aomod@divisor+3)^0,w,c
  5927   0046B2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5928   0046B4  500D               	movf	(___aomod@divisor+4)^0,w,c
  5929   0046B6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5930   0046B8  500E               	movf	(___aomod@divisor+5)^0,w,c
  5931   0046BA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5932   0046BC  500F               	movf	(___aomod@divisor+6)^0,w,c
  5933   0046BE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5934   0046C0  5010               	movf	(___aomod@divisor+7)^0,w,c
  5935   0046C2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5936   0046C4  A0D8               	btfss	status,0,c
  5937   0046C6  EF67  F023         	goto	u3421
  5938   0046CA  EF69  F023         	goto	u3420
  5939   0046CE                     u3421:
  5940   0046CE  EF79  F023         	goto	l3925
  5941   0046D2                     u3420:
  5942   0046D2  5009               	movf	___aomod@divisor^0,w,c
  5943   0046D4  5E01               	subwf	___aomod@dividend^0,f,c
  5944   0046D6  500A               	movf	(___aomod@divisor+1)^0,w,c
  5945   0046D8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5946   0046DA  500B               	movf	(___aomod@divisor+2)^0,w,c
  5947   0046DC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5948   0046DE  500C               	movf	(___aomod@divisor+3)^0,w,c
  5949   0046E0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5950   0046E2  500D               	movf	(___aomod@divisor+4)^0,w,c
  5951   0046E4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5952   0046E6  500E               	movf	(___aomod@divisor+5)^0,w,c
  5953   0046E8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5954   0046EA  500F               	movf	(___aomod@divisor+6)^0,w,c
  5955   0046EC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5956   0046EE  5010               	movf	(___aomod@divisor+7)^0,w,c
  5957   0046F0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5958   0046F2                     l3925:
  5959   0046F2  90D8               	bcf	status,0,c
  5960   0046F4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5961   0046F6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5962   0046F8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5963   0046FA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5964   0046FC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5965   0046FE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5966   004700  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5967   004702  3209               	rrcf	___aomod@divisor^0,f,c
  5968   004704  2E11               	decfsz	___aomod@counter^0,f,c
  5969   004706  EF52  F023         	goto	l3921
  5970   00470A                     l3929:
  5971   00470A  5012               	movf	___aomod@sign^0,w,c
  5972   00470C  B4D8               	btfsc	status,2,c
  5973   00470E  EF8B  F023         	goto	u3431
  5974   004712  EF8D  F023         	goto	u3430
  5975   004716                     u3431:
  5976   004716  EF9D  F023         	goto	l3933
  5977   00471A                     u3430:
  5978   00471A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5979   00471C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5980   00471E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5981   004720  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5982   004722  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5983   004724  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5984   004726  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5985   004728  6C01               	negf	___aomod@dividend^0,c
  5986   00472A  0E00               	movlw	0
  5987   00472C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5988   00472E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5989   004730  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5990   004732  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5991   004734  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5992   004736  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5993   004738  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5994   00473A                     l3933:
  5995   00473A  C001  F001         	movff	___aomod@dividend,?___aomod
  5996   00473E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5997   004742  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5998   004746  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5999   00474A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6000   00474E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6001   004752  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6002   004756  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6003   00475A  0012               	return		;funcret
  6004   00475C                     __end_of___aomod:
  6005                           	callstack 0
  6006                           
  6007 ;; *************** function ___aodiv *****************
  6008 ;; Defined at:
  6009 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  dividend        8    0[COMRAM] long long 
  6012 ;;  divisor         8    8[COMRAM] long long 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  quotient        8   18[COMRAM] long long 
  6015 ;;  sign            1   17[COMRAM] unsigned char 
  6016 ;;  counter         1   16[COMRAM] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  8    0[COMRAM] long long 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6026 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;Total ram usage:       26 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 1
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_dtoa
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text19
  6041   004304                     __ptext19:
  6042                           	callstack 0
  6043   004304                     ___aodiv:
  6044                           	callstack 25
  6045   004304  0E00               	movlw	0
  6046   004306  6E12               	movwf	___aodiv@sign^0,c
  6047   004308  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6048   00430A  EF8B  F021         	goto	u3310
  6049   00430E  EF89  F021         	goto	u3311
  6050   004312                     u3311:
  6051   004312  EF9D  F021         	goto	l3865
  6052   004316                     u3310:
  6053   004316  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6054   004318  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6055   00431A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6056   00431C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6057   00431E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6058   004320  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6059   004322  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6060   004324  6C09               	negf	___aodiv@divisor^0,c
  6061   004326  0E00               	movlw	0
  6062   004328  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6063   00432A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6064   00432C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6065   00432E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6066   004330  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6067   004332  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6068   004334  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6069   004336  0E01               	movlw	1
  6070   004338  6E12               	movwf	___aodiv@sign^0,c
  6071   00433A                     l3865:
  6072   00433A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6073   00433C  EFA4  F021         	goto	u3320
  6074   004340  EFA2  F021         	goto	u3321
  6075   004344                     u3321:
  6076   004344  EFB6  F021         	goto	l3871
  6077   004348                     u3320:
  6078   004348  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6079   00434A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6080   00434C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6081   00434E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6082   004350  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6083   004352  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6084   004354  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6085   004356  6C01               	negf	___aodiv@dividend^0,c
  6086   004358  0E00               	movlw	0
  6087   00435A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6088   00435C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6089   00435E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6090   004360  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6091   004362  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6092   004364  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6093   004366  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6094   004368  0E01               	movlw	1
  6095   00436A  1A12               	xorwf	___aodiv@sign^0,f,c
  6096   00436C                     l3871:
  6097   00436C  EE20  F013         	lfsr	2,___aodiv@quotient
  6098   004370  0E07               	movlw	7
  6099   004372                     u3331:
  6100   004372  6ADE               	clrf	postinc2,c
  6101   004374  06E8               	decf	wreg,f,c
  6102   004376  E2FD               	bc	u3331
  6103   004378  5009               	movf	___aodiv@divisor^0,w,c
  6104   00437A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6105   00437C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6106   00437E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6107   004380  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6108   004382  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6109   004384  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6110   004386  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6111   004388  B4D8               	btfsc	status,2,c
  6112   00438A  EFC9  F021         	goto	u3341
  6113   00438E  EFCB  F021         	goto	u3340
  6114   004392                     u3341:
  6115   004392  EF1D  F022         	goto	l3893
  6116   004396                     u3340:
  6117   004396  0E01               	movlw	1
  6118   004398  6E11               	movwf	___aodiv@counter^0,c
  6119   00439A  EFD9  F021         	goto	l3879
  6120   00439E                     l3877:
  6121   00439E  90D8               	bcf	status,0,c
  6122   0043A0  3609               	rlcf	___aodiv@divisor^0,f,c
  6123   0043A2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6124   0043A4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6125   0043A6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6126   0043A8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6127   0043AA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6128   0043AC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6129   0043AE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6130   0043B0  2A11               	incf	___aodiv@counter^0,f,c
  6131   0043B2                     l3879:
  6132   0043B2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6133   0043B4  EFDE  F021         	goto	u3351
  6134   0043B8  EFE0  F021         	goto	u3350
  6135   0043BC                     u3351:
  6136   0043BC  EFCF  F021         	goto	l3877
  6137   0043C0                     u3350:
  6138   0043C0                     l3881:
  6139   0043C0  90D8               	bcf	status,0,c
  6140   0043C2  3613               	rlcf	___aodiv@quotient^0,f,c
  6141   0043C4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6142   0043C6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6143   0043C8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6144   0043CA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6145   0043CC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6146   0043CE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6147   0043D0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6148   0043D2  5009               	movf	___aodiv@divisor^0,w,c
  6149   0043D4  5C01               	subwf	___aodiv@dividend^0,w,c
  6150   0043D6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6151   0043D8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6152   0043DA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6153   0043DC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6154   0043DE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6155   0043E0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6156   0043E2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6157   0043E4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6158   0043E6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6159   0043E8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6160   0043EA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6161   0043EC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6162   0043EE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6163   0043F0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6164   0043F2  A0D8               	btfss	status,0,c
  6165   0043F4  EFFE  F021         	goto	u3361
  6166   0043F8  EF00  F022         	goto	u3360
  6167   0043FC                     u3361:
  6168   0043FC  EF11  F022         	goto	l3889
  6169   004400                     u3360:
  6170   004400  5009               	movf	___aodiv@divisor^0,w,c
  6171   004402  5E01               	subwf	___aodiv@dividend^0,f,c
  6172   004404  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6173   004406  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6174   004408  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6175   00440A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6176   00440C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6177   00440E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6178   004410  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6179   004412  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6180   004414  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6181   004416  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6182   004418  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6183   00441A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6184   00441C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6185   00441E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6186   004420  8013               	bsf	___aodiv@quotient^0,0,c
  6187   004422                     l3889:
  6188   004422  90D8               	bcf	status,0,c
  6189   004424  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6190   004426  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6191   004428  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6192   00442A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6193   00442C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6194   00442E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6195   004430  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6196   004432  3209               	rrcf	___aodiv@divisor^0,f,c
  6197   004434  2E11               	decfsz	___aodiv@counter^0,f,c
  6198   004436  EFE0  F021         	goto	l3881
  6199   00443A                     l3893:
  6200   00443A  5012               	movf	___aodiv@sign^0,w,c
  6201   00443C  B4D8               	btfsc	status,2,c
  6202   00443E  EF23  F022         	goto	u3371
  6203   004442  EF25  F022         	goto	u3370
  6204   004446                     u3371:
  6205   004446  EF35  F022         	goto	l3897
  6206   00444A                     u3370:
  6207   00444A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6208   00444C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6209   00444E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6210   004450  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6211   004452  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6212   004454  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6213   004456  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6214   004458  6C13               	negf	___aodiv@quotient^0,c
  6215   00445A  0E00               	movlw	0
  6216   00445C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6217   00445E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6218   004460  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6219   004462  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6220   004464  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6221   004466  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6222   004468  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6223   00446A                     l3897:
  6224   00446A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6225   00446E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6226   004472  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6227   004476  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6228   00447A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6229   00447E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6230   004482  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6231   004486  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6232   00448A  0012               	return		;funcret
  6233   00448C                     __end_of___aodiv:
  6234                           	callstack 0
  6235                           
  6236 ;; *************** function _sendStringSerial4 *****************
  6237 ;; Defined at:
  6238 ;;		line 33 in file "serial.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  string          2    1[COMRAM] PTR unsigned char 
  6241 ;;		 -> main@buf(100), 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6257 ;;Total ram usage:        2 bytes
  6258 ;; Hardware stack levels used: 1
  6259 ;; Hardware stack levels required when called: 2
  6260 ;; This function calls:
  6261 ;;		_sendCharSerial4
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text20
  6268   005AB4                     __ptext20:
  6269                           	callstack 0
  6270   005AB4                     _sendStringSerial4:
  6271                           	callstack 28
  6272   005AB4                     
  6273                           ;serial.c: 34:     while (*string!=0){
  6274   005AB4  EF65  F02D         	goto	l5247
  6275   005AB8                     l5243:
  6276                           
  6277                           ;serial.c: 35:         sendCharSerial4(*string++);
  6278   005AB8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6279   005ABC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6280   005AC0  50DF               	movf	indf2,w,c
  6281   005AC2  ECCD  F02D         	call	_sendCharSerial4
  6282   005AC6  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6283   005AC8  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6284   005ACA                     l5247:
  6285                           
  6286                           ;serial.c: 34:     while (*string!=0){
  6287   005ACA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6288   005ACE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6289   005AD2  50DF               	movf	indf2,w,c
  6290   005AD4  A4D8               	btfss	status,2,c
  6291   005AD6  EF6F  F02D         	goto	u5301
  6292   005ADA  EF71  F02D         	goto	u5300
  6293   005ADE                     u5301:
  6294   005ADE  EF5C  F02D         	goto	l5243
  6295   005AE2                     u5300:
  6296   005AE2  0012               	return		;funcret
  6297   005AE4                     __end_of_sendStringSerial4:
  6298                           	callstack 0
  6299                           
  6300 ;; *************** function _sendCharSerial4 *****************
  6301 ;; Defined at:
  6302 ;;		line 26 in file "serial.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  charToSend      1    wreg     unsigned char 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  charToSend      1    0[COMRAM] unsigned char 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;Total ram usage:        1 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 1
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_sendStringSerial4
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text21
  6331   005B9A                     __ptext21:
  6332                           	callstack 0
  6333   005B9A                     _sendCharSerial4:
  6334                           	callstack 28
  6335                           
  6336                           ;incstack = 0
  6337                           ;sendCharSerial4@charToSend stored from wreg
  6338   005B9A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6339   005B9C                     l207:
  6340   005B9C  010E               	movlb	14	; () banked
  6341   005B9E  A537               	btfss	55,2,b	;volatile
  6342   005BA0  EFD4  F02D         	goto	u4851
  6343   005BA4  EFD6  F02D         	goto	u4850
  6344   005BA8                     u4851:
  6345   005BA8  EFCE  F02D         	goto	l207
  6346   005BAC                     u4850:
  6347   005BAC                     
  6348                           ; BSR set to: 14
  6349                           ;serial.c: 28:     TX4REG = charToSend;
  6350   005BAC  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6351   005BB0                     
  6352                           ; BSR set to: 14
  6353   005BB0  0012               	return		;funcret
  6354   005BB2                     __end_of_sendCharSerial4:
  6355                           	callstack 0
  6356                           
  6357 ;; *************** function _readColours *****************
  6358 ;; Defined at:
  6359 ;;		line 105 in file "color.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  vals            2   11[COMRAM] PTR struct RGB
  6362 ;;		 -> vals(8), 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  1    wreg      void 
  6367 ;; Registers used:
  6368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;Total ram usage:        2 bytes
  6379 ;; Hardware stack levels used: 1
  6380 ;; Hardware stack levels required when called: 4
  6381 ;; This function calls:
  6382 ;;		_color_read_Blue
  6383 ;;		_color_read_Green
  6384 ;;		_color_read_Red
  6385 ;;		_color_read_lum
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text22
  6392   005192                     __ptext22:
  6393                           	callstack 0
  6394   005192                     _readColours:
  6395                           	callstack 26
  6396   005192                     
  6397                           ;color.c: 107:     vals ->R = color_read_Red();
  6398   005192  ECA2  F02B         	call	_color_read_Red	;wreg free
  6399   005196  C00C  FFD9         	movff	readColours@vals,fsr2l
  6400   00519A  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6401   00519E  C005  FFDE         	movff	?_color_read_Red,postinc2
  6402   0051A2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6403                           
  6404                           ;color.c: 108:     vals ->B = color_read_Blue();
  6405   0051A6  ECF2  F02B         	call	_color_read_Blue	;wreg free
  6406   0051AA  EE20 F004          	lfsr	2,4
  6407   0051AE  500C               	movf	readColours@vals^0,w,c
  6408   0051B0  26D9               	addwf	fsr2l,f,c
  6409   0051B2  500D               	movf	(readColours@vals+1)^0,w,c
  6410   0051B4  22DA               	addwfc	fsr2h,f,c
  6411   0051B6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6412   0051BA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6413                           
  6414                           ;color.c: 109:     vals ->G = color_read_Green();
  6415   0051BE  ECCA  F02B         	call	_color_read_Green	;wreg free
  6416   0051C2  EE20 F002          	lfsr	2,2
  6417   0051C6  500C               	movf	readColours@vals^0,w,c
  6418   0051C8  26D9               	addwf	fsr2l,f,c
  6419   0051CA  500D               	movf	(readColours@vals+1)^0,w,c
  6420   0051CC  22DA               	addwfc	fsr2h,f,c
  6421   0051CE  C005  FFDE         	movff	?_color_read_Green,postinc2
  6422   0051D2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6423                           
  6424                           ;color.c: 110:     vals ->L = color_read_lum();
  6425   0051D6  EC7A  F02B         	call	_color_read_lum	;wreg free
  6426   0051DA  EE20 F006          	lfsr	2,6
  6427   0051DE  500C               	movf	readColours@vals^0,w,c
  6428   0051E0  26D9               	addwf	fsr2l,f,c
  6429   0051E2  500D               	movf	(readColours@vals+1)^0,w,c
  6430   0051E4  22DA               	addwfc	fsr2h,f,c
  6431   0051E6  C005  FFDE         	movff	?_color_read_lum,postinc2
  6432   0051EA  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6433   0051EE  0012               	return		;funcret
  6434   0051F0                     __end_of_readColours:
  6435                           	callstack 0
  6436                           
  6437 ;; *************** function _color_read_lum *****************
  6438 ;; Defined at:
  6439 ;;		line 49 in file "color.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  tmp             2    9[COMRAM] unsigned int 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2    4[COMRAM] unsigned int 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;Total ram usage:        7 bytes
  6458 ;; Hardware stack levels used: 1
  6459 ;; Hardware stack levels required when called: 3
  6460 ;; This function calls:
  6461 ;;		_I2C_2_Master_Read
  6462 ;;		_I2C_2_Master_RepStart
  6463 ;;		_I2C_2_Master_Start
  6464 ;;		_I2C_2_Master_Stop
  6465 ;;		_I2C_2_Master_Write
  6466 ;; This function is called by:
  6467 ;;		_readColours
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text23
  6472   0056F4                     __ptext23:
  6473                           	callstack 0
  6474   0056F4                     _color_read_lum:
  6475                           	callstack 26
  6476   0056F4                     
  6477                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6478   0056F4  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  6479                           
  6480                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6481   0056F8  0E52               	movlw	82
  6482   0056FA  ECD9  F02D         	call	_I2C_2_Master_Write
  6483                           
  6484                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6485   0056FE  0EB4               	movlw	180
  6486   005700  ECD9  F02D         	call	_I2C_2_Master_Write
  6487                           
  6488                           ;color.c: 55:  I2C_2_Master_RepStart();
  6489   005704  ECDF  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6490                           
  6491                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6492   005708  0E53               	movlw	83
  6493   00570A  ECD9  F02D         	call	_I2C_2_Master_Write
  6494                           
  6495                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6496   00570E  0E01               	movlw	1
  6497   005710  EC81  F02C         	call	_I2C_2_Master_Read
  6498   005714  6E07               	movwf	??_color_read_lum^0,c
  6499   005716  5007               	movf	??_color_read_lum^0,w,c
  6500   005718  6E0A               	movwf	color_read_lum@tmp^0,c
  6501   00571A  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6502                           
  6503                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6504   00571C  0E00               	movlw	0
  6505   00571E  EC81  F02C         	call	_I2C_2_Master_Read
  6506   005722  6E07               	movwf	??_color_read_lum^0,c
  6507   005724  5007               	movf	??_color_read_lum^0,w,c
  6508   005726  6E09               	movwf	(??_color_read_lum+2)^0,c
  6509   005728  6A08               	clrf	(??_color_read_lum+1)^0,c
  6510   00572A  500A               	movf	color_read_lum@tmp^0,w,c
  6511   00572C  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6512   00572E  6E0A               	movwf	color_read_lum@tmp^0,c
  6513   005730  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6514   005732  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6515   005734  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6516                           
  6517                           ;color.c: 59:  I2C_2_Master_Stop();
  6518   005736  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6519   00573A                     
  6520                           ;color.c: 60:  return tmp;
  6521   00573A  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6522   00573E  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6523   005742  0012               	return		;funcret
  6524   005744                     __end_of_color_read_lum:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function _color_read_Red *****************
  6528 ;; Defined at:
  6529 ;;		line 63 in file "color.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  tmp             2    9[COMRAM] unsigned int 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2    4[COMRAM] unsigned int 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;Total ram usage:        7 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; Hardware stack levels required when called: 3
  6550 ;; This function calls:
  6551 ;;		_I2C_2_Master_Read
  6552 ;;		_I2C_2_Master_RepStart
  6553 ;;		_I2C_2_Master_Start
  6554 ;;		_I2C_2_Master_Stop
  6555 ;;		_I2C_2_Master_Write
  6556 ;; This function is called by:
  6557 ;;		_readColours
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text24
  6562   005744                     __ptext24:
  6563                           	callstack 0
  6564   005744                     _color_read_Red:
  6565                           	callstack 26
  6566   005744                     
  6567                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6568   005744  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  6569                           
  6570                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6571   005748  0E52               	movlw	82
  6572   00574A  ECD9  F02D         	call	_I2C_2_Master_Write
  6573                           
  6574                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6575   00574E  0EB6               	movlw	182
  6576   005750  ECD9  F02D         	call	_I2C_2_Master_Write
  6577                           
  6578                           ;color.c: 69:  I2C_2_Master_RepStart();
  6579   005754  ECDF  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6580                           
  6581                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6582   005758  0E53               	movlw	83
  6583   00575A  ECD9  F02D         	call	_I2C_2_Master_Write
  6584                           
  6585                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  6586   00575E  0E01               	movlw	1
  6587   005760  EC81  F02C         	call	_I2C_2_Master_Read
  6588   005764  6E07               	movwf	??_color_read_Red^0,c
  6589   005766  5007               	movf	??_color_read_Red^0,w,c
  6590   005768  6E0A               	movwf	color_read_Red@tmp^0,c
  6591   00576A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6592                           
  6593                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6594   00576C  0E00               	movlw	0
  6595   00576E  EC81  F02C         	call	_I2C_2_Master_Read
  6596   005772  6E07               	movwf	??_color_read_Red^0,c
  6597   005774  5007               	movf	??_color_read_Red^0,w,c
  6598   005776  6E09               	movwf	(??_color_read_Red+2)^0,c
  6599   005778  6A08               	clrf	(??_color_read_Red+1)^0,c
  6600   00577A  500A               	movf	color_read_Red@tmp^0,w,c
  6601   00577C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6602   00577E  6E0A               	movwf	color_read_Red@tmp^0,c
  6603   005780  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6604   005782  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6605   005784  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6606                           
  6607                           ;color.c: 73:  I2C_2_Master_Stop();
  6608   005786  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6609   00578A                     
  6610                           ;color.c: 74:  return tmp;
  6611   00578A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6612   00578E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6613   005792  0012               	return		;funcret
  6614   005794                     __end_of_color_read_Red:
  6615                           	callstack 0
  6616                           
  6617 ;; *************** function _color_read_Green *****************
  6618 ;; Defined at:
  6619 ;;		line 76 in file "color.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  tmp             2    9[COMRAM] unsigned int 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  2    4[COMRAM] unsigned int 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;Total ram usage:        7 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 3
  6640 ;; This function calls:
  6641 ;;		_I2C_2_Master_Read
  6642 ;;		_I2C_2_Master_RepStart
  6643 ;;		_I2C_2_Master_Start
  6644 ;;		_I2C_2_Master_Stop
  6645 ;;		_I2C_2_Master_Write
  6646 ;; This function is called by:
  6647 ;;		_readColours
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text25
  6652   005794                     __ptext25:
  6653                           	callstack 0
  6654   005794                     _color_read_Green:
  6655                           	callstack 26
  6656   005794                     
  6657                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6658   005794  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  6659                           
  6660                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6661   005798  0E52               	movlw	82
  6662   00579A  ECD9  F02D         	call	_I2C_2_Master_Write
  6663                           
  6664                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  6665   00579E  0EB8               	movlw	184
  6666   0057A0  ECD9  F02D         	call	_I2C_2_Master_Write
  6667                           
  6668                           ;color.c: 82:  I2C_2_Master_RepStart();
  6669   0057A4  ECDF  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6670                           
  6671                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6672   0057A8  0E53               	movlw	83
  6673   0057AA  ECD9  F02D         	call	_I2C_2_Master_Write
  6674                           
  6675                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6676   0057AE  0E01               	movlw	1
  6677   0057B0  EC81  F02C         	call	_I2C_2_Master_Read
  6678   0057B4  6E07               	movwf	??_color_read_Green^0,c
  6679   0057B6  5007               	movf	??_color_read_Green^0,w,c
  6680   0057B8  6E0A               	movwf	color_read_Green@tmp^0,c
  6681   0057BA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6682                           
  6683                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6684   0057BC  0E00               	movlw	0
  6685   0057BE  EC81  F02C         	call	_I2C_2_Master_Read
  6686   0057C2  6E07               	movwf	??_color_read_Green^0,c
  6687   0057C4  5007               	movf	??_color_read_Green^0,w,c
  6688   0057C6  6E09               	movwf	(??_color_read_Green+2)^0,c
  6689   0057C8  6A08               	clrf	(??_color_read_Green+1)^0,c
  6690   0057CA  500A               	movf	color_read_Green@tmp^0,w,c
  6691   0057CC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6692   0057CE  6E0A               	movwf	color_read_Green@tmp^0,c
  6693   0057D0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6694   0057D2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6695   0057D4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6696                           
  6697                           ;color.c: 86:  I2C_2_Master_Stop();
  6698   0057D6  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6699   0057DA                     
  6700                           ;color.c: 87:  return tmp;
  6701   0057DA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6702   0057DE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6703   0057E2  0012               	return		;funcret
  6704   0057E4                     __end_of_color_read_Green:
  6705                           	callstack 0
  6706                           
  6707 ;; *************** function _color_read_Blue *****************
  6708 ;; Defined at:
  6709 ;;		line 90 in file "color.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;		None
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  tmp             2    9[COMRAM] unsigned int 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  2    4[COMRAM] unsigned int 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0, cstack
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;Total ram usage:        7 bytes
  6728 ;; Hardware stack levels used: 1
  6729 ;; Hardware stack levels required when called: 3
  6730 ;; This function calls:
  6731 ;;		_I2C_2_Master_Read
  6732 ;;		_I2C_2_Master_RepStart
  6733 ;;		_I2C_2_Master_Start
  6734 ;;		_I2C_2_Master_Stop
  6735 ;;		_I2C_2_Master_Write
  6736 ;; This function is called by:
  6737 ;;		_readColours
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text26
  6742   0057E4                     __ptext26:
  6743                           	callstack 0
  6744   0057E4                     _color_read_Blue:
  6745                           	callstack 26
  6746   0057E4                     
  6747                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  6748   0057E4  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  6749                           
  6750                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  6751   0057E8  0E52               	movlw	82
  6752   0057EA  ECD9  F02D         	call	_I2C_2_Master_Write
  6753                           
  6754                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  6755   0057EE  0EBA               	movlw	186
  6756   0057F0  ECD9  F02D         	call	_I2C_2_Master_Write
  6757                           
  6758                           ;color.c: 96:  I2C_2_Master_RepStart();
  6759   0057F4  ECDF  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6760                           
  6761                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  6762   0057F8  0E53               	movlw	83
  6763   0057FA  ECD9  F02D         	call	_I2C_2_Master_Write
  6764                           
  6765                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  6766   0057FE  0E01               	movlw	1
  6767   005800  EC81  F02C         	call	_I2C_2_Master_Read
  6768   005804  6E07               	movwf	??_color_read_Blue^0,c
  6769   005806  5007               	movf	??_color_read_Blue^0,w,c
  6770   005808  6E0A               	movwf	color_read_Blue@tmp^0,c
  6771   00580A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6772                           
  6773                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6774   00580C  0E00               	movlw	0
  6775   00580E  EC81  F02C         	call	_I2C_2_Master_Read
  6776   005812  6E07               	movwf	??_color_read_Blue^0,c
  6777   005814  5007               	movf	??_color_read_Blue^0,w,c
  6778   005816  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6779   005818  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6780   00581A  500A               	movf	color_read_Blue@tmp^0,w,c
  6781   00581C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6782   00581E  6E0A               	movwf	color_read_Blue@tmp^0,c
  6783   005820  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6784   005822  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6785   005824  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6786                           
  6787                           ;color.c: 100:  I2C_2_Master_Stop();
  6788   005826  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6789   00582A                     
  6790                           ;color.c: 101:  return tmp;
  6791   00582A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6792   00582E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6793   005832  0012               	return		;funcret
  6794   005834                     __end_of_color_read_Blue:
  6795                           	callstack 0
  6796                           
  6797 ;; *************** function _I2C_2_Master_RepStart *****************
  6798 ;; Defined at:
  6799 ;;		line 33 in file "i2c.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0, cstack
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;Total ram usage:        0 bytes
  6818 ;; Hardware stack levels used: 1
  6819 ;; Hardware stack levels required when called: 2
  6820 ;; This function calls:
  6821 ;;		_I2C_2_Master_Idle
  6822 ;; This function is called by:
  6823 ;;		_color_read_lum
  6824 ;;		_color_read_Red
  6825 ;;		_color_read_Green
  6826 ;;		_color_read_Blue
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text27
  6831   005BBE                     __ptext27:
  6832                           	callstack 0
  6833   005BBE                     _I2C_2_Master_RepStart:
  6834                           	callstack 26
  6835   005BBE                     
  6836                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6837   005BBE  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6838   005BC2                     
  6839                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6840   005BC2  010E               	movlb	14	; () banked
  6841   005BC4  83DA               	bsf	218,1,b	;volatile
  6842   005BC6                     
  6843                           ; BSR set to: 14
  6844   005BC6  0012               	return		;funcret
  6845   005BC8                     __end_of_I2C_2_Master_RepStart:
  6846                           	callstack 0
  6847                           
  6848 ;; *************** function _I2C_2_Master_Read *****************
  6849 ;; Defined at:
  6850 ;;		line 51 in file "i2c.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  ack             1    wreg     unsigned char 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  ack             1    2[COMRAM] unsigned char 
  6855 ;;  tmp             1    3[COMRAM] unsigned char 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      unsigned char 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;Total ram usage:        3 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; Hardware stack levels required when called: 2
  6872 ;; This function calls:
  6873 ;;		_I2C_2_Master_Idle
  6874 ;; This function is called by:
  6875 ;;		_color_read_lum
  6876 ;;		_color_read_Red
  6877 ;;		_color_read_Green
  6878 ;;		_color_read_Blue
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text28
  6883   005902                     __ptext28:
  6884                           	callstack 0
  6885   005902                     _I2C_2_Master_Read:
  6886                           	callstack 26
  6887                           
  6888                           ; BSR set to: 14
  6889                           ;incstack = 0
  6890                           ;I2C_2_Master_Read@ack stored from wreg
  6891   005902  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6892   005904                     
  6893                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6894   005904  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6895   005908                     
  6896                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6897   005908  010E               	movlb	14	; () banked
  6898   00590A  87DA               	bsf	218,3,b	;volatile
  6899                           
  6900                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6901   00590C  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6902   005910                     
  6903                           ;i2c.c: 57:   tmp = SSP2BUF;
  6904   005910  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6905                           
  6906                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6907   005914  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6908   005918                     
  6909                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6910   005918  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6911   00591A  B4D8               	btfsc	status,2,c
  6912   00591C  EF92  F02C         	goto	u4791
  6913   005920  EF96  F02C         	goto	u4790
  6914   005924                     u4791:
  6915   005924  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6916   005926  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6917   005928  EF97  F02C         	goto	u4808
  6918   00592C                     u4790:
  6919   00592C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6920   00592E                     u4808:
  6921   00592E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6922   005930  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6923   005932  010E               	movlb	14	; () banked
  6924   005934  51DA               	movf	218,w,b	;volatile
  6925   005936  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6926   005938  0BDF               	andlw	-33
  6927   00593A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6928   00593C  6FDA               	movwf	218,b	;volatile
  6929   00593E                     
  6930                           ; BSR set to: 14
  6931                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6932   00593E  89DA               	bsf	218,4,b	;volatile
  6933   005940                     
  6934                           ; BSR set to: 14
  6935                           ;i2c.c: 61:   return tmp;
  6936   005940  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6937   005942                     
  6938                           ; BSR set to: 14
  6939   005942  0012               	return		;funcret
  6940   005944                     __end_of_I2C_2_Master_Read:
  6941                           	callstack 0
  6942                           
  6943 ;; *************** function _initUSART4 *****************
  6944 ;; Defined at:
  6945 ;;		line 4 in file "serial.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;		None
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  1    wreg      void 
  6952 ;; Registers used:
  6953 ;;		wreg, status,2
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;Total ram usage:        0 bytes
  6964 ;; Hardware stack levels used: 1
  6965 ;; Hardware stack levels required when called: 1
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_main
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text29
  6974   005B7C                     __ptext29:
  6975                           	callstack 0
  6976   005B7C                     _initUSART4:
  6977                           	callstack 29
  6978   005B7C                     
  6979                           ;serial.c: 5:     RC0PPS = 0x12;
  6980   005B7C  0E12               	movlw	18
  6981   005B7E  010E               	movlb	14	; () banked
  6982   005B80  6F62               	movwf	98,b	;volatile
  6983                           
  6984                           ;serial.c: 6:     RX4PPS = 0x11;
  6985   005B82  0E11               	movlw	17
  6986   005B84  6F15               	movwf	21,b	;volatile
  6987   005B86                     
  6988                           ; BSR set to: 14
  6989                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  6990   005B86  97E9               	bcf	233,3,b	;volatile
  6991   005B88                     
  6992                           ; BSR set to: 14
  6993                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  6994   005B88  95E8               	bcf	232,2,b	;volatile
  6995                           
  6996                           ;serial.c: 9:     SP4BRGL = 51;
  6997   005B8A  0E33               	movlw	51
  6998   005B8C  6FE5               	movwf	229,b	;volatile
  6999                           
  7000                           ;serial.c: 10:     SP4BRGH = 0;
  7001   005B8E  0E00               	movlw	0
  7002   005B90  6FE6               	movwf	230,b	;volatile
  7003   005B92                     
  7004                           ; BSR set to: 14
  7005                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7006   005B92  89E7               	bsf	231,4,b	;volatile
  7007   005B94                     
  7008                           ; BSR set to: 14
  7009                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7010   005B94  8BE8               	bsf	232,5,b	;volatile
  7011   005B96                     
  7012                           ; BSR set to: 14
  7013                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7014   005B96  8FE7               	bsf	231,7,b	;volatile
  7015   005B98                     
  7016                           ; BSR set to: 14
  7017   005B98  0012               	return		;funcret
  7018   005B9A                     __end_of_initUSART4:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _initDCmotorsPWM *****************
  7022 ;; Defined at:
  7023 ;;		line 5 in file "dc_motor.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;Total ram usage:        2 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_main
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text30
  7052   004E50                     __ptext30:
  7053                           	callstack 0
  7054   004E50                     _initDCmotorsPWM:
  7055                           	callstack 29
  7056   004E50                     
  7057                           ;dc_motor.c: 9:     RE2PPS=0x05;
  7058   004E50  0E05               	movlw	5
  7059   004E52  010E               	movlb	14	; () banked
  7060   004E54  6F74               	movwf	116,b	;volatile
  7061                           
  7062                           ;dc_motor.c: 10:     RE4PPS=0x06;
  7063   004E56  0E06               	movlw	6
  7064   004E58  6F76               	movwf	118,b	;volatile
  7065                           
  7066                           ;dc_motor.c: 11:     RC7PPS=0x07;
  7067   004E5A  0E07               	movlw	7
  7068   004E5C  6F69               	movwf	105,b	;volatile
  7069                           
  7070                           ;dc_motor.c: 12:     RG6PPS=0x08;
  7071   004E5E  0E08               	movlw	8
  7072   004E60  6F88               	movwf	136,b	;volatile
  7073   004E62                     
  7074                           ; BSR set to: 14
  7075                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  7076   004E62  9485               	bcf	133,2,c	;volatile
  7077   004E64                     
  7078                           ; BSR set to: 14
  7079                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  7080   004E64  9885               	bcf	133,4,c	;volatile
  7081   004E66                     
  7082                           ; BSR set to: 14
  7083                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  7084   004E66  9E83               	bcf	131,7,c	;volatile
  7085   004E68                     
  7086                           ; BSR set to: 14
  7087                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  7088   004E68  9C87               	bcf	135,6,c	;volatile
  7089                           
  7090                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  7091   004E6A  50BD               	movf	189,w,c	;volatile
  7092   004E6C  0B8F               	andlw	-113
  7093   004E6E  0930               	iorlw	48
  7094   004E70  6EBD               	movwf	189,c	;volatile
  7095                           
  7096                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  7097   004E72  0EE0               	movlw	-32
  7098   004E74  16BE               	andwf	190,f,c	;volatile
  7099                           
  7100                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  7101   004E76  50BF               	movf	191,w,c	;volatile
  7102   004E78  0BF0               	andlw	-16
  7103   004E7A  0901               	iorlw	1
  7104   004E7C  6EBF               	movwf	191,c	;volatile
  7105   004E7E                     
  7106                           ; BSR set to: 14
  7107                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  7108   004E7E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7109   004E82                     
  7110                           ; BSR set to: 14
  7111                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  7112   004E82  8EBD               	bsf	189,7,c	;volatile
  7113                           
  7114                           ;dc_motor.c: 33:     CCPR1H=0;
  7115   004E84  0E00               	movlw	0
  7116   004E86  6EAA               	movwf	170,c	;volatile
  7117                           
  7118                           ;dc_motor.c: 34:     CCPR2H=0;
  7119   004E88  0E00               	movlw	0
  7120   004E8A  6EA6               	movwf	166,c	;volatile
  7121                           
  7122                           ;dc_motor.c: 35:     CCPR3H=0;
  7123   004E8C  0E00               	movlw	0
  7124   004E8E  010F               	movlb	15	; () banked
  7125   004E90  6F25               	movwf	37,b	;volatile
  7126                           
  7127                           ;dc_motor.c: 36:     CCPR4H=0;
  7128   004E92  0E00               	movlw	0
  7129   004E94  6F21               	movwf	33,b	;volatile
  7130                           
  7131                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  7132   004E96  0EFC               	movlw	-4
  7133   004E98  16AD               	andwf	173,f,c	;volatile
  7134                           
  7135                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  7136   004E9A  0EF3               	movlw	-13
  7137   004E9C  16AD               	andwf	173,f,c	;volatile
  7138                           
  7139                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  7140   004E9E  0ECF               	movlw	-49
  7141   004EA0  16AD               	andwf	173,f,c	;volatile
  7142                           
  7143                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  7144   004EA2  0E3F               	movlw	-193
  7145   004EA4  16AD               	andwf	173,f,c	;volatile
  7146   004EA6                     
  7147                           ; BSR set to: 15
  7148                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  7149   004EA6  88AB               	bsf	171,4,c	;volatile
  7150                           
  7151                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  7152   004EA8  50AB               	movf	171,w,c	;volatile
  7153   004EAA  0BF0               	andlw	-16
  7154   004EAC  090C               	iorlw	12
  7155   004EAE  6EAB               	movwf	171,c	;volatile
  7156   004EB0                     
  7157                           ; BSR set to: 15
  7158                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  7159   004EB0  8EAB               	bsf	171,7,c	;volatile
  7160   004EB2                     
  7161                           ; BSR set to: 15
  7162                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  7163   004EB2  88A7               	bsf	167,4,c	;volatile
  7164                           
  7165                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  7166   004EB4  50A7               	movf	167,w,c	;volatile
  7167   004EB6  0BF0               	andlw	-16
  7168   004EB8  090C               	iorlw	12
  7169   004EBA  6EA7               	movwf	167,c	;volatile
  7170   004EBC                     
  7171                           ; BSR set to: 15
  7172                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  7173   004EBC  8EA7               	bsf	167,7,c	;volatile
  7174   004EBE                     
  7175                           ; BSR set to: 15
  7176                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  7177   004EBE  8926               	bsf	38,4,b	;volatile
  7178                           
  7179                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  7180   004EC0  5126               	movf	38,w,b	;volatile
  7181   004EC2  0BF0               	andlw	-16
  7182   004EC4  090C               	iorlw	12
  7183   004EC6  6F26               	movwf	38,b	;volatile
  7184   004EC8                     
  7185                           ; BSR set to: 15
  7186                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  7187   004EC8  8F26               	bsf	38,7,b	;volatile
  7188   004ECA                     
  7189                           ; BSR set to: 15
  7190                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  7191   004ECA  8922               	bsf	34,4,b	;volatile
  7192                           
  7193                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  7194   004ECC  5122               	movf	34,w,b	;volatile
  7195   004ECE  0BF0               	andlw	-16
  7196   004ED0  090C               	iorlw	12
  7197   004ED2  6F22               	movwf	34,b	;volatile
  7198   004ED4                     
  7199                           ; BSR set to: 15
  7200                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  7201   004ED4  8F22               	bsf	34,7,b	;volatile
  7202   004ED6                     
  7203                           ; BSR set to: 15
  7204   004ED6  0012               	return		;funcret
  7205   004ED8                     __end_of_initDCmotorsPWM:
  7206                           	callstack 0
  7207                           
  7208 ;; *************** function _go_Home *****************
  7209 ;; Defined at:
  7210 ;;		line 3 in file "Memory.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7213 ;;		 -> WayBack(250), 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  i               2   38[COMRAM] int 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      void 
  7218 ;; Registers used:
  7219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7228 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7229 ;;Total ram usage:        5 bytes
  7230 ;; Hardware stack levels used: 1
  7231 ;; Hardware stack levels required when called: 6
  7232 ;; This function calls:
  7233 ;;		_BlueMove
  7234 ;;		_Forwardhalfblock
  7235 ;;		_GreenMove
  7236 ;;		_LightBlueMove
  7237 ;;		_OrangeMove
  7238 ;;		_RedMove
  7239 ;;		_ReversePink
  7240 ;;		_ReverseYellow
  7241 ;; This function is called by:
  7242 ;;		_main
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text31
  7247   003F7E                     __ptext31:
  7248                           	callstack 0
  7249   003F7E                     _go_Home:
  7250                           	callstack 24
  7251   003F7E                     
  7252                           ;Memory.c: 4:     int i;;Memory.c: 5:     for (i = move_count; i >= 0; i--){
  7253   003F7E  C114  F027         	movff	_move_count,go_Home@i	;volatile
  7254   003F82  C115  F028         	movff	_move_count+1,go_Home@i+1	;volatile
  7255   003F86                     l5319:
  7256   003F86  BE28               	btfsc	(go_Home@i+1)^0,7,c
  7257   003F88  EFCA  F01F         	goto	u5340
  7258   003F8C  EFC8  F01F         	goto	u5341
  7259   003F90                     u5341:
  7260   003F90  EFCC  F01F         	goto	l5323
  7261   003F94                     u5340:
  7262   003F94  EFA7  F020         	goto	l611
  7263   003F98                     l5323:
  7264                           
  7265                           ;Memory.c: 6:         if (WayBack[i]==0){
  7266   003F98  5027               	movf	go_Home@i^0,w,c
  7267   003F9A  2424               	addwf	go_Home@WayBack^0,w,c
  7268   003F9C  6ED9               	movwf	fsr2l,c
  7269   003F9E  5028               	movf	(go_Home@i+1)^0,w,c
  7270   003FA0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7271   003FA2  6EDA               	movwf	fsr2h,c
  7272   003FA4  50DF               	movf	indf2,w,c
  7273   003FA6  A4D8               	btfss	status,2,c
  7274   003FA8  EFD8  F01F         	goto	u5351
  7275   003FAC  EFDA  F01F         	goto	u5350
  7276   003FB0                     u5351:
  7277   003FB0  EFE6  F01F         	goto	l5327
  7278   003FB4                     u5350:
  7279   003FB4                     
  7280                           ;Memory.c: 7:             Forwardhalfblock(&motorL,&motorR);
  7281   003FB4  0E7B               	movlw	low _motorL
  7282   003FB6  6E1A               	movwf	Forwardhalfblock@mL^0,c
  7283   003FB8  0E01               	movlw	high _motorL
  7284   003FBA  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  7285   003FBC  0E72               	movlw	low _motorR
  7286   003FBE  6E1C               	movwf	Forwardhalfblock@mR^0,c
  7287   003FC0  0E01               	movlw	high _motorR
  7288   003FC2  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  7289   003FC4  EC52  F029         	call	_Forwardhalfblock	;wreg free
  7290                           
  7291                           ;Memory.c: 8:         }
  7292   003FC8  EFA2  F020         	goto	l5355
  7293   003FCC                     l5327:
  7294   003FCC  5027               	movf	go_Home@i^0,w,c
  7295   003FCE  2424               	addwf	go_Home@WayBack^0,w,c
  7296   003FD0  6ED9               	movwf	fsr2l,c
  7297   003FD2  5028               	movf	(go_Home@i+1)^0,w,c
  7298   003FD4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7299   003FD6  6EDA               	movwf	fsr2h,c
  7300   003FD8  04DE               	decf	postinc2,w,c
  7301   003FDA  A4D8               	btfss	status,2,c
  7302   003FDC  EFF2  F01F         	goto	u5361
  7303   003FE0  EFF4  F01F         	goto	u5360
  7304   003FE4                     u5361:
  7305   003FE4  EF00  F020         	goto	l5331
  7306   003FE8                     u5360:
  7307   003FE8                     
  7308                           ;Memory.c: 10:             GreenMove(&motorL, &motorR);
  7309   003FE8  0E7B               	movlw	low _motorL
  7310   003FEA  6E20               	movwf	GreenMove@mL^0,c
  7311   003FEC  0E01               	movlw	high _motorL
  7312   003FEE  6E21               	movwf	(GreenMove@mL+1)^0,c
  7313   003FF0  0E72               	movlw	low _motorR
  7314   003FF2  6E22               	movwf	GreenMove@mR^0,c
  7315   003FF4  0E01               	movlw	high _motorR
  7316   003FF6  6E23               	movwf	(GreenMove@mR+1)^0,c
  7317   003FF8  EC1F  F02D         	call	_GreenMove	;wreg free
  7318                           
  7319                           ;Memory.c: 11:         }
  7320   003FFC  EFA2  F020         	goto	l5355
  7321   004000                     l5331:
  7322   004000  5027               	movf	go_Home@i^0,w,c
  7323   004002  2424               	addwf	go_Home@WayBack^0,w,c
  7324   004004  6ED9               	movwf	fsr2l,c
  7325   004006  5028               	movf	(go_Home@i+1)^0,w,c
  7326   004008  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7327   00400A  6EDA               	movwf	fsr2h,c
  7328   00400C  0E02               	movlw	2
  7329   00400E  18DE               	xorwf	postinc2,w,c
  7330   004010  A4D8               	btfss	status,2,c
  7331   004012  EF0D  F020         	goto	u5371
  7332   004016  EF0F  F020         	goto	u5370
  7333   00401A                     u5371:
  7334   00401A  EF1B  F020         	goto	l5335
  7335   00401E                     u5370:
  7336   00401E                     
  7337                           ;Memory.c: 13:             LightBlueMove(&motorL, &motorR);
  7338   00401E  0E7B               	movlw	low _motorL
  7339   004020  6E20               	movwf	LightBlueMove@mL^0,c
  7340   004022  0E01               	movlw	high _motorL
  7341   004024  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7342   004026  0E72               	movlw	low _motorR
  7343   004028  6E22               	movwf	LightBlueMove@mR^0,c
  7344   00402A  0E01               	movlw	high _motorR
  7345   00402C  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7346   00402E  ECAE  F02A         	call	_LightBlueMove	;wreg free
  7347                           
  7348                           ;Memory.c: 14:         }
  7349   004032  EFA2  F020         	goto	l5355
  7350   004036                     l5335:
  7351   004036  5027               	movf	go_Home@i^0,w,c
  7352   004038  2424               	addwf	go_Home@WayBack^0,w,c
  7353   00403A  6ED9               	movwf	fsr2l,c
  7354   00403C  5028               	movf	(go_Home@i+1)^0,w,c
  7355   00403E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7356   004040  6EDA               	movwf	fsr2h,c
  7357   004042  0E03               	movlw	3
  7358   004044  18DE               	xorwf	postinc2,w,c
  7359   004046  A4D8               	btfss	status,2,c
  7360   004048  EF28  F020         	goto	u5381
  7361   00404C  EF2A  F020         	goto	u5380
  7362   004050                     u5381:
  7363   004050  EF36  F020         	goto	l5339
  7364   004054                     u5380:
  7365   004054                     
  7366                           ;Memory.c: 16:             ReverseYellow(&motorL, &motorR);
  7367   004054  0E7B               	movlw	low _motorL
  7368   004056  6E20               	movwf	ReverseYellow@mL^0,c
  7369   004058  0E01               	movlw	high _motorL
  7370   00405A  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7371   00405C  0E72               	movlw	low _motorR
  7372   00405E  6E22               	movwf	ReverseYellow@mR^0,c
  7373   004060  0E01               	movlw	high _motorR
  7374   004062  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7375   004064  ECC2  F02C         	call	_ReverseYellow	;wreg free
  7376                           
  7377                           ;Memory.c: 17:         }
  7378   004068  EFA2  F020         	goto	l5355
  7379   00406C                     l5339:
  7380   00406C  5027               	movf	go_Home@i^0,w,c
  7381   00406E  2424               	addwf	go_Home@WayBack^0,w,c
  7382   004070  6ED9               	movwf	fsr2l,c
  7383   004072  5028               	movf	(go_Home@i+1)^0,w,c
  7384   004074  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7385   004076  6EDA               	movwf	fsr2h,c
  7386   004078  0E04               	movlw	4
  7387   00407A  18DE               	xorwf	postinc2,w,c
  7388   00407C  A4D8               	btfss	status,2,c
  7389   00407E  EF43  F020         	goto	u5391
  7390   004082  EF45  F020         	goto	u5390
  7391   004086                     u5391:
  7392   004086  EF51  F020         	goto	l5343
  7393   00408A                     u5390:
  7394   00408A                     
  7395                           ;Memory.c: 19:             BlueMove(&motorL, &motorR);
  7396   00408A  0E7B               	movlw	low _motorL
  7397   00408C  6E20               	movwf	BlueMove@mL^0,c
  7398   00408E  0E01               	movlw	high _motorL
  7399   004090  6E21               	movwf	(BlueMove@mL+1)^0,c
  7400   004092  0E72               	movlw	low _motorR
  7401   004094  6E22               	movwf	BlueMove@mR^0,c
  7402   004096  0E01               	movlw	high _motorR
  7403   004098  6E23               	movwf	(BlueMove@mR+1)^0,c
  7404   00409A  EC96  F028         	call	_BlueMove	;wreg free
  7405                           
  7406                           ;Memory.c: 20:         }
  7407   00409E  EFA2  F020         	goto	l5355
  7408   0040A2                     l5343:
  7409   0040A2  5027               	movf	go_Home@i^0,w,c
  7410   0040A4  2424               	addwf	go_Home@WayBack^0,w,c
  7411   0040A6  6ED9               	movwf	fsr2l,c
  7412   0040A8  5028               	movf	(go_Home@i+1)^0,w,c
  7413   0040AA  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7414   0040AC  6EDA               	movwf	fsr2h,c
  7415   0040AE  0E05               	movlw	5
  7416   0040B0  18DE               	xorwf	postinc2,w,c
  7417   0040B2  A4D8               	btfss	status,2,c
  7418   0040B4  EF5E  F020         	goto	u5401
  7419   0040B8  EF60  F020         	goto	u5400
  7420   0040BC                     u5401:
  7421   0040BC  EF6C  F020         	goto	l5347
  7422   0040C0                     u5400:
  7423   0040C0                     
  7424                           ;Memory.c: 22:             RedMove(&motorL, &motorR);
  7425   0040C0  0E7B               	movlw	low _motorL
  7426   0040C2  6E20               	movwf	RedMove@mL^0,c
  7427   0040C4  0E01               	movlw	high _motorL
  7428   0040C6  6E21               	movwf	(RedMove@mL+1)^0,c
  7429   0040C8  0E72               	movlw	low _motorR
  7430   0040CA  6E22               	movwf	RedMove@mR^0,c
  7431   0040CC  0E01               	movlw	high _motorR
  7432   0040CE  6E23               	movwf	(RedMove@mR+1)^0,c
  7433   0040D0  EC00  F02D         	call	_RedMove	;wreg free
  7434                           
  7435                           ;Memory.c: 23:         }
  7436   0040D4  EFA2  F020         	goto	l5355
  7437   0040D8                     l5347:
  7438   0040D8  5027               	movf	go_Home@i^0,w,c
  7439   0040DA  2424               	addwf	go_Home@WayBack^0,w,c
  7440   0040DC  6ED9               	movwf	fsr2l,c
  7441   0040DE  5028               	movf	(go_Home@i+1)^0,w,c
  7442   0040E0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7443   0040E2  6EDA               	movwf	fsr2h,c
  7444   0040E4  0E06               	movlw	6
  7445   0040E6  18DE               	xorwf	postinc2,w,c
  7446   0040E8  A4D8               	btfss	status,2,c
  7447   0040EA  EF79  F020         	goto	u5411
  7448   0040EE  EF7B  F020         	goto	u5410
  7449   0040F2                     u5411:
  7450   0040F2  EF87  F020         	goto	l5351
  7451   0040F6                     u5410:
  7452   0040F6                     
  7453                           ;Memory.c: 25:             OrangeMove(&motorL, &motorR);
  7454   0040F6  0E7B               	movlw	low _motorL
  7455   0040F8  6E20               	movwf	OrangeMove@mL^0,c
  7456   0040FA  0E01               	movlw	high _motorL
  7457   0040FC  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7458   0040FE  0E72               	movlw	low _motorR
  7459   004100  6E22               	movwf	OrangeMove@mR^0,c
  7460   004102  0E01               	movlw	high _motorR
  7461   004104  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7462   004106  EC85  F02A         	call	_OrangeMove	;wreg free
  7463                           
  7464                           ;Memory.c: 26:         }
  7465   00410A  EFA2  F020         	goto	l5355
  7466   00410E                     l5351:
  7467   00410E  5027               	movf	go_Home@i^0,w,c
  7468   004110  2424               	addwf	go_Home@WayBack^0,w,c
  7469   004112  6ED9               	movwf	fsr2l,c
  7470   004114  5028               	movf	(go_Home@i+1)^0,w,c
  7471   004116  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7472   004118  6EDA               	movwf	fsr2h,c
  7473   00411A  0E07               	movlw	7
  7474   00411C  18DE               	xorwf	postinc2,w,c
  7475   00411E  A4D8               	btfss	status,2,c
  7476   004120  EF94  F020         	goto	u5421
  7477   004124  EF96  F020         	goto	u5420
  7478   004128                     u5421:
  7479   004128  EFA2  F020         	goto	l605
  7480   00412C                     u5420:
  7481   00412C                     
  7482                           ;Memory.c: 28:             ReversePink(&motorL, &motorR);
  7483   00412C  0E7B               	movlw	low _motorL
  7484   00412E  6E20               	movwf	ReversePink@mL^0,c
  7485   004130  0E01               	movlw	high _motorL
  7486   004132  6E21               	movwf	(ReversePink@mL+1)^0,c
  7487   004134  0E72               	movlw	low _motorR
  7488   004136  6E22               	movwf	ReversePink@mR^0,c
  7489   004138  0E01               	movlw	high _motorR
  7490   00413A  6E23               	movwf	(ReversePink@mR+1)^0,c
  7491   00413C  ECE1  F02C         	call	_ReversePink	;wreg free
  7492   004140  EFA2  F020         	goto	l5355
  7493   004144                     l605:
  7494   004144                     l5355:
  7495                           
  7496                           ;Memory.c: 32:   }
  7497   004144  0627               	decf	go_Home@i^0,f,c
  7498   004146  A0D8               	btfss	status,0,c
  7499   004148  0628               	decf	(go_Home@i+1)^0,f,c
  7500   00414A  EFC3  F01F         	goto	l5319
  7501   00414E                     l611:
  7502   00414E  0012               	return		;funcret
  7503   004150                     __end_of_go_Home:
  7504                           	callstack 0
  7505                           
  7506 ;; *************** function _ReverseYellow *****************
  7507 ;; Defined at:
  7508 ;;		line 304 in file "dc_motor.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7511 ;;		 -> motorL(9), 
  7512 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7513 ;;		 -> motorR(9), 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;Total ram usage:        4 bytes
  7530 ;; Hardware stack levels used: 1
  7531 ;; Hardware stack levels required when called: 5
  7532 ;; This function calls:
  7533 ;;		_ForwardOneBlock
  7534 ;;		_turnLeft45
  7535 ;; This function is called by:
  7536 ;;		_go_Home
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text32
  7541   005984                     __ptext32:
  7542                           	callstack 0
  7543   005984                     _ReverseYellow:
  7544                           	callstack 24
  7545   005984                     
  7546                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  7547   005984  0E7B               	movlw	low _motorL
  7548   005986  6E1A               	movwf	turnLeft45@mL^0,c
  7549   005988  0E01               	movlw	high _motorL
  7550   00598A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7551   00598C  0E72               	movlw	low _motorR
  7552   00598E  6E1C               	movwf	turnLeft45@mR^0,c
  7553   005990  0E01               	movlw	high _motorR
  7554   005992  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7555   005994  EC05  F02A         	call	_turnLeft45	;wreg free
  7556                           
  7557                           ;dc_motor.c: 306:     turnLeft45(&motorL, &motorR);
  7558   005998  0E7B               	movlw	low _motorL
  7559   00599A  6E1A               	movwf	turnLeft45@mL^0,c
  7560   00599C  0E01               	movlw	high _motorL
  7561   00599E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7562   0059A0  0E72               	movlw	low _motorR
  7563   0059A2  6E1C               	movwf	turnLeft45@mR^0,c
  7564   0059A4  0E01               	movlw	high _motorR
  7565   0059A6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7566   0059A8  EC05  F02A         	call	_turnLeft45	;wreg free
  7567                           
  7568                           ;dc_motor.c: 307:     ForwardOneBlock(&motorL, &motorR);
  7569   0059AC  0E7B               	movlw	low _motorL
  7570   0059AE  6E1A               	movwf	ForwardOneBlock@mL^0,c
  7571   0059B0  0E01               	movlw	high _motorL
  7572   0059B2  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  7573   0059B4  0E72               	movlw	low _motorR
  7574   0059B6  6E1C               	movwf	ForwardOneBlock@mR^0,c
  7575   0059B8  0E01               	movlw	high _motorR
  7576   0059BA  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  7577   0059BC  EC25  F029         	call	_ForwardOneBlock	;wreg free
  7578   0059C0  0012               	return		;funcret
  7579   0059C2                     __end_of_ReverseYellow:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _ReversePink *****************
  7583 ;; Defined at:
  7584 ;;		line 309 in file "dc_motor.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7587 ;;		 -> motorL(9), 
  7588 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7589 ;;		 -> motorR(9), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;Total ram usage:        4 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 5
  7608 ;; This function calls:
  7609 ;;		_ForwardOneBlock
  7610 ;;		_turnRight45
  7611 ;; This function is called by:
  7612 ;;		_go_Home
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text33
  7617   0059C2                     __ptext33:
  7618                           	callstack 0
  7619   0059C2                     _ReversePink:
  7620                           	callstack 24
  7621   0059C2                     
  7622                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  7623   0059C2  0E7B               	movlw	low _motorL
  7624   0059C4  6E1A               	movwf	turnRight45@mL^0,c
  7625   0059C6  0E01               	movlw	high _motorL
  7626   0059C8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7627   0059CA  0E72               	movlw	low _motorR
  7628   0059CC  6E1C               	movwf	turnRight45@mR^0,c
  7629   0059CE  0E01               	movlw	high _motorR
  7630   0059D0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7631   0059D2  ECD9  F029         	call	_turnRight45	;wreg free
  7632                           
  7633                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  7634   0059D6  0E7B               	movlw	low _motorL
  7635   0059D8  6E1A               	movwf	turnRight45@mL^0,c
  7636   0059DA  0E01               	movlw	high _motorL
  7637   0059DC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7638   0059DE  0E72               	movlw	low _motorR
  7639   0059E0  6E1C               	movwf	turnRight45@mR^0,c
  7640   0059E2  0E01               	movlw	high _motorR
  7641   0059E4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7642   0059E6  ECD9  F029         	call	_turnRight45	;wreg free
  7643                           
  7644                           ;dc_motor.c: 312:     ForwardOneBlock(&motorL, &motorR);
  7645   0059EA  0E7B               	movlw	low _motorL
  7646   0059EC  6E1A               	movwf	ForwardOneBlock@mL^0,c
  7647   0059EE  0E01               	movlw	high _motorL
  7648   0059F0  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  7649   0059F2  0E72               	movlw	low _motorR
  7650   0059F4  6E1C               	movwf	ForwardOneBlock@mR^0,c
  7651   0059F6  0E01               	movlw	high _motorR
  7652   0059F8  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  7653   0059FA  EC25  F029         	call	_ForwardOneBlock	;wreg free
  7654   0059FE  0012               	return		;funcret
  7655   005A00                     __end_of_ReversePink:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _ForwardOneBlock *****************
  7659 ;; Defined at:
  7660 ;;		line 208 in file "dc_motor.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7663 ;;		 -> motorL(9), 
  7664 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7665 ;;		 -> motorR(9), 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;Total ram usage:        6 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; Hardware stack levels required when called: 4
  7684 ;; This function calls:
  7685 ;;		_fullSpeedAhead
  7686 ;;		_stop
  7687 ;; This function is called by:
  7688 ;;		_ReverseYellow
  7689 ;;		_ReversePink
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           	psect	text34
  7694   00524A                     __ptext34:
  7695                           	callstack 0
  7696   00524A                     _ForwardOneBlock:
  7697                           	callstack 24
  7698   00524A                     
  7699                           ;dc_motor.c: 209:     fullSpeedAhead(mL,mR);
  7700   00524A  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  7701   00524E  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  7702   005252  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  7703   005256  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  7704   00525A  EC3B  F026         	call	_fullSpeedAhead	;wreg free
  7705   00525E                     
  7706                           ;dc_motor.c: 210:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7707   00525E  0E52               	movlw	82
  7708   005260  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  7709   005262  0E2B               	movlw	43
  7710   005264  6E1E               	movwf	??_ForwardOneBlock^0,c
  7711   005266  0E00               	movlw	0
  7712   005268                     u5657:
  7713   005268  2EE8               	decfsz	wreg,f,c
  7714   00526A  D7FE               	bra	u5657
  7715   00526C  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  7716   00526E  D7FC               	bra	u5657
  7717   005270  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7718   005272  D7FA               	bra	u5657
  7719   005274  D000               	nop2	
  7720   005276                     
  7721                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7722   005276  0E7B               	movlw	low _motorL
  7723   005278  6E14               	movwf	stop@mL^0,c
  7724   00527A  0E01               	movlw	high _motorL
  7725   00527C  6E15               	movwf	(stop@mL+1)^0,c
  7726   00527E  0E72               	movlw	low _motorR
  7727   005280  6E16               	movwf	stop@mR^0,c
  7728   005282  0E01               	movlw	high _motorR
  7729   005284  6E17               	movwf	(stop@mR+1)^0,c
  7730   005286  ECAD  F027         	call	_stop	;wreg free
  7731                           
  7732                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7733   00528A  0E52               	movlw	82
  7734   00528C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  7735   00528E  0E2B               	movlw	43
  7736   005290  6E1E               	movwf	??_ForwardOneBlock^0,c
  7737   005292  0E00               	movlw	0
  7738   005294                     u5667:
  7739   005294  2EE8               	decfsz	wreg,f,c
  7740   005296  D7FE               	bra	u5667
  7741   005298  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  7742   00529A  D7FC               	bra	u5667
  7743   00529C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7744   00529E  D7FA               	bra	u5667
  7745   0052A0  D000               	nop2	
  7746   0052A2  0012               	return		;funcret
  7747   0052A4                     __end_of_ForwardOneBlock:
  7748                           	callstack 0
  7749                           
  7750 ;; *************** function _RedMove *****************
  7751 ;; Defined at:
  7752 ;;		line 232 in file "dc_motor.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7755 ;;		 -> motorL(9), 
  7756 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7757 ;;		 -> motorR(9), 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;Total ram usage:        4 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; Hardware stack levels required when called: 5
  7776 ;; This function calls:
  7777 ;;		_reverseDetect
  7778 ;;		_turnRight45
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;;		_go_Home
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text35
  7786   005A00                     __ptext35:
  7787                           	callstack 0
  7788   005A00                     _RedMove:
  7789                           	callstack 24
  7790   005A00                     
  7791                           ;dc_motor.c: 233:     reverseDetect(&motorL, &motorR);
  7792   005A00  0E7B               	movlw	low _motorL
  7793   005A02  6E1A               	movwf	reverseDetect@mL^0,c
  7794   005A04  0E01               	movlw	high _motorL
  7795   005A06  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7796   005A08  0E72               	movlw	low _motorR
  7797   005A0A  6E1C               	movwf	reverseDetect@mR^0,c
  7798   005A0C  0E01               	movlw	high _motorR
  7799   005A0E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7800   005A10  ECAC  F029         	call	_reverseDetect	;wreg free
  7801                           
  7802                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  7803   005A14  0E7B               	movlw	low _motorL
  7804   005A16  6E1A               	movwf	turnRight45@mL^0,c
  7805   005A18  0E01               	movlw	high _motorL
  7806   005A1A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7807   005A1C  0E72               	movlw	low _motorR
  7808   005A1E  6E1C               	movwf	turnRight45@mR^0,c
  7809   005A20  0E01               	movlw	high _motorR
  7810   005A22  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7811   005A24  ECD9  F029         	call	_turnRight45	;wreg free
  7812                           
  7813                           ;dc_motor.c: 236:     turnRight45(&motorL, &motorR);
  7814   005A28  0E7B               	movlw	low _motorL
  7815   005A2A  6E1A               	movwf	turnRight45@mL^0,c
  7816   005A2C  0E01               	movlw	high _motorL
  7817   005A2E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7818   005A30  0E72               	movlw	low _motorR
  7819   005A32  6E1C               	movwf	turnRight45@mR^0,c
  7820   005A34  0E01               	movlw	high _motorR
  7821   005A36  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7822   005A38  ECD9  F029         	call	_turnRight45	;wreg free
  7823   005A3C  0012               	return		;funcret
  7824   005A3E                     __end_of_RedMove:
  7825                           	callstack 0
  7826                           
  7827 ;; *************** function _OrangeMove *****************
  7828 ;; Defined at:
  7829 ;;		line 278 in file "dc_motor.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7832 ;;		 -> motorL(9), 
  7833 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7834 ;;		 -> motorR(9), 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7850 ;;Total ram usage:        4 bytes
  7851 ;; Hardware stack levels used: 1
  7852 ;; Hardware stack levels required when called: 5
  7853 ;; This function calls:
  7854 ;;		_reverseDetect
  7855 ;;		_turnRight45
  7856 ;; This function is called by:
  7857 ;;		_main
  7858 ;;		_go_Home
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text36
  7863   00550A                     __ptext36:
  7864                           	callstack 0
  7865   00550A                     _OrangeMove:
  7866                           	callstack 24
  7867   00550A                     
  7868                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  7869   00550A  0E7B               	movlw	low _motorL
  7870   00550C  6E1A               	movwf	reverseDetect@mL^0,c
  7871   00550E  0E01               	movlw	high _motorL
  7872   005510  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7873   005512  0E72               	movlw	low _motorR
  7874   005514  6E1C               	movwf	reverseDetect@mR^0,c
  7875   005516  0E01               	movlw	high _motorR
  7876   005518  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7877   00551A  ECAC  F029         	call	_reverseDetect	;wreg free
  7878                           
  7879                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  7880   00551E  0E7B               	movlw	low _motorL
  7881   005520  6E1A               	movwf	turnRight45@mL^0,c
  7882   005522  0E01               	movlw	high _motorL
  7883   005524  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7884   005526  0E72               	movlw	low _motorR
  7885   005528  6E1C               	movwf	turnRight45@mR^0,c
  7886   00552A  0E01               	movlw	high _motorR
  7887   00552C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7888   00552E  ECD9  F029         	call	_turnRight45	;wreg free
  7889                           
  7890                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  7891   005532  0E7B               	movlw	low _motorL
  7892   005534  6E1A               	movwf	turnRight45@mL^0,c
  7893   005536  0E01               	movlw	high _motorL
  7894   005538  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7895   00553A  0E72               	movlw	low _motorR
  7896   00553C  6E1C               	movwf	turnRight45@mR^0,c
  7897   00553E  0E01               	movlw	high _motorR
  7898   005540  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7899   005542  ECD9  F029         	call	_turnRight45	;wreg free
  7900                           
  7901                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  7902   005546  0E7B               	movlw	low _motorL
  7903   005548  6E1A               	movwf	turnRight45@mL^0,c
  7904   00554A  0E01               	movlw	high _motorL
  7905   00554C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7906   00554E  0E72               	movlw	low _motorR
  7907   005550  6E1C               	movwf	turnRight45@mR^0,c
  7908   005552  0E01               	movlw	high _motorR
  7909   005554  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7910   005556  ECD9  F029         	call	_turnRight45	;wreg free
  7911   00555A  0012               	return		;funcret
  7912   00555C                     __end_of_OrangeMove:
  7913                           	callstack 0
  7914                           
  7915 ;; *************** function _LightBlueMove *****************
  7916 ;; Defined at:
  7917 ;;		line 287 in file "dc_motor.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7920 ;;		 -> motorL(9), 
  7921 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7922 ;;		 -> motorR(9), 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;		None
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;Total ram usage:        4 bytes
  7939 ;; Hardware stack levels used: 1
  7940 ;; Hardware stack levels required when called: 5
  7941 ;; This function calls:
  7942 ;;		_reverseDetect
  7943 ;;		_turnLeft45
  7944 ;; This function is called by:
  7945 ;;		_main
  7946 ;;		_go_Home
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text37
  7951   00555C                     __ptext37:
  7952                           	callstack 0
  7953   00555C                     _LightBlueMove:
  7954                           	callstack 24
  7955   00555C                     
  7956                           ;dc_motor.c: 288:     reverseDetect(&motorL, &motorR);
  7957   00555C  0E7B               	movlw	low _motorL
  7958   00555E  6E1A               	movwf	reverseDetect@mL^0,c
  7959   005560  0E01               	movlw	high _motorL
  7960   005562  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7961   005564  0E72               	movlw	low _motorR
  7962   005566  6E1C               	movwf	reverseDetect@mR^0,c
  7963   005568  0E01               	movlw	high _motorR
  7964   00556A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7965   00556C  ECAC  F029         	call	_reverseDetect	;wreg free
  7966                           
  7967                           ;dc_motor.c: 290:     turnLeft45(&motorL, &motorR);
  7968   005570  0E7B               	movlw	low _motorL
  7969   005572  6E1A               	movwf	turnLeft45@mL^0,c
  7970   005574  0E01               	movlw	high _motorL
  7971   005576  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7972   005578  0E72               	movlw	low _motorR
  7973   00557A  6E1C               	movwf	turnLeft45@mR^0,c
  7974   00557C  0E01               	movlw	high _motorR
  7975   00557E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7976   005580  EC05  F02A         	call	_turnLeft45	;wreg free
  7977                           
  7978                           ;dc_motor.c: 291:     turnLeft45(&motorL, &motorR);
  7979   005584  0E7B               	movlw	low _motorL
  7980   005586  6E1A               	movwf	turnLeft45@mL^0,c
  7981   005588  0E01               	movlw	high _motorL
  7982   00558A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7983   00558C  0E72               	movlw	low _motorR
  7984   00558E  6E1C               	movwf	turnLeft45@mR^0,c
  7985   005590  0E01               	movlw	high _motorR
  7986   005592  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7987   005594  EC05  F02A         	call	_turnLeft45	;wreg free
  7988                           
  7989                           ;dc_motor.c: 292:     turnLeft45(&motorL, &motorR);
  7990   005598  0E7B               	movlw	low _motorL
  7991   00559A  6E1A               	movwf	turnLeft45@mL^0,c
  7992   00559C  0E01               	movlw	high _motorL
  7993   00559E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7994   0055A0  0E72               	movlw	low _motorR
  7995   0055A2  6E1C               	movwf	turnLeft45@mR^0,c
  7996   0055A4  0E01               	movlw	high _motorR
  7997   0055A6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7998   0055A8  EC05  F02A         	call	_turnLeft45	;wreg free
  7999   0055AC  0012               	return		;funcret
  8000   0055AE                     __end_of_LightBlueMove:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function _GreenMove *****************
  8004 ;; Defined at:
  8005 ;;		line 240 in file "dc_motor.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8008 ;;		 -> motorL(9), 
  8009 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8010 ;;		 -> motorR(9), 
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;		None
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      void 
  8015 ;; Registers used:
  8016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8026 ;;Total ram usage:        4 bytes
  8027 ;; Hardware stack levels used: 1
  8028 ;; Hardware stack levels required when called: 5
  8029 ;; This function calls:
  8030 ;;		_reverseDetect
  8031 ;;		_turnLeft45
  8032 ;; This function is called by:
  8033 ;;		_main
  8034 ;;		_go_Home
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text38
  8039   005A3E                     __ptext38:
  8040                           	callstack 0
  8041   005A3E                     _GreenMove:
  8042                           	callstack 24
  8043   005A3E                     
  8044                           ;dc_motor.c: 241:     reverseDetect(&motorL, &motorR);
  8045   005A3E  0E7B               	movlw	low _motorL
  8046   005A40  6E1A               	movwf	reverseDetect@mL^0,c
  8047   005A42  0E01               	movlw	high _motorL
  8048   005A44  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8049   005A46  0E72               	movlw	low _motorR
  8050   005A48  6E1C               	movwf	reverseDetect@mR^0,c
  8051   005A4A  0E01               	movlw	high _motorR
  8052   005A4C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8053   005A4E  ECAC  F029         	call	_reverseDetect	;wreg free
  8054                           
  8055                           ;dc_motor.c: 243:     turnLeft45(&motorL, &motorR);
  8056   005A52  0E7B               	movlw	low _motorL
  8057   005A54  6E1A               	movwf	turnLeft45@mL^0,c
  8058   005A56  0E01               	movlw	high _motorL
  8059   005A58  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8060   005A5A  0E72               	movlw	low _motorR
  8061   005A5C  6E1C               	movwf	turnLeft45@mR^0,c
  8062   005A5E  0E01               	movlw	high _motorR
  8063   005A60  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8064   005A62  EC05  F02A         	call	_turnLeft45	;wreg free
  8065                           
  8066                           ;dc_motor.c: 244:     turnLeft45(&motorL, &motorR);
  8067   005A66  0E7B               	movlw	low _motorL
  8068   005A68  6E1A               	movwf	turnLeft45@mL^0,c
  8069   005A6A  0E01               	movlw	high _motorL
  8070   005A6C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8071   005A6E  0E72               	movlw	low _motorR
  8072   005A70  6E1C               	movwf	turnLeft45@mR^0,c
  8073   005A72  0E01               	movlw	high _motorR
  8074   005A74  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8075   005A76  EC05  F02A         	call	_turnLeft45	;wreg free
  8076   005A7A  0012               	return		;funcret
  8077   005A7C                     __end_of_GreenMove:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function _Forwardhalfblock *****************
  8081 ;; Defined at:
  8082 ;;		line 215 in file "dc_motor.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8085 ;;		 -> motorL(9), 
  8086 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8087 ;;		 -> motorR(9), 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;		None
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  1    wreg      void 
  8092 ;; Registers used:
  8093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8102 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8103 ;;Total ram usage:        6 bytes
  8104 ;; Hardware stack levels used: 1
  8105 ;; Hardware stack levels required when called: 4
  8106 ;; This function calls:
  8107 ;;		_fullSpeedAhead
  8108 ;;		_stop
  8109 ;; This function is called by:
  8110 ;;		_main
  8111 ;;		_go_Home
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text39
  8116   0052A4                     __ptext39:
  8117                           	callstack 0
  8118   0052A4                     _Forwardhalfblock:
  8119                           	callstack 25
  8120   0052A4                     
  8121                           ;dc_motor.c: 216:     fullSpeedAhead(mL,mR);
  8122   0052A4  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8123   0052A8  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8124   0052AC  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8125   0052B0  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8126   0052B4  EC3B  F026         	call	_fullSpeedAhead	;wreg free
  8127   0052B8                     
  8128                           ;dc_motor.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8129   0052B8  0E29               	movlw	41
  8130   0052BA  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8131   0052BC  0E96               	movlw	150
  8132   0052BE  6E1E               	movwf	??_Forwardhalfblock^0,c
  8133   0052C0  0E7F               	movlw	127
  8134   0052C2                     u5677:
  8135   0052C2  2EE8               	decfsz	wreg,f,c
  8136   0052C4  D7FE               	bra	u5677
  8137   0052C6  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8138   0052C8  D7FC               	bra	u5677
  8139   0052CA  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8140   0052CC  D7FA               	bra	u5677
  8141   0052CE  F000               	nop	
  8142   0052D0                     
  8143                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  8144   0052D0  0E7B               	movlw	low _motorL
  8145   0052D2  6E14               	movwf	stop@mL^0,c
  8146   0052D4  0E01               	movlw	high _motorL
  8147   0052D6  6E15               	movwf	(stop@mL+1)^0,c
  8148   0052D8  0E72               	movlw	low _motorR
  8149   0052DA  6E16               	movwf	stop@mR^0,c
  8150   0052DC  0E01               	movlw	high _motorR
  8151   0052DE  6E17               	movwf	(stop@mR+1)^0,c
  8152   0052E0  ECAD  F027         	call	_stop	;wreg free
  8153                           
  8154                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8155   0052E4  0E52               	movlw	82
  8156   0052E6  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8157   0052E8  0E2B               	movlw	43
  8158   0052EA  6E1E               	movwf	??_Forwardhalfblock^0,c
  8159   0052EC  0E00               	movlw	0
  8160   0052EE                     u5687:
  8161   0052EE  2EE8               	decfsz	wreg,f,c
  8162   0052F0  D7FE               	bra	u5687
  8163   0052F2  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8164   0052F4  D7FC               	bra	u5687
  8165   0052F6  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8166   0052F8  D7FA               	bra	u5687
  8167   0052FA  D000               	nop2	
  8168   0052FC  0012               	return		;funcret
  8169   0052FE                     __end_of_Forwardhalfblock:
  8170                           	callstack 0
  8171                           
  8172 ;; *************** function _BlueMove *****************
  8173 ;; Defined at:
  8174 ;;		line 248 in file "dc_motor.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8177 ;;		 -> motorL(9), 
  8178 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8179 ;;		 -> motorR(9), 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8195 ;;Total ram usage:        4 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; Hardware stack levels required when called: 5
  8198 ;; This function calls:
  8199 ;;		_reverseDetect
  8200 ;;		_turnRight45
  8201 ;; This function is called by:
  8202 ;;		_main
  8203 ;;		_go_Home
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text40
  8208   00512C                     __ptext40:
  8209                           	callstack 0
  8210   00512C                     _BlueMove:
  8211                           	callstack 24
  8212   00512C                     
  8213                           ;dc_motor.c: 249:     reverseDetect(&motorL, &motorR);
  8214   00512C  0E7B               	movlw	low _motorL
  8215   00512E  6E1A               	movwf	reverseDetect@mL^0,c
  8216   005130  0E01               	movlw	high _motorL
  8217   005132  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8218   005134  0E72               	movlw	low _motorR
  8219   005136  6E1C               	movwf	reverseDetect@mR^0,c
  8220   005138  0E01               	movlw	high _motorR
  8221   00513A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8222   00513C  ECAC  F029         	call	_reverseDetect	;wreg free
  8223                           
  8224                           ;dc_motor.c: 251:     turnRight45(&motorL, &motorR);
  8225   005140  0E7B               	movlw	low _motorL
  8226   005142  6E1A               	movwf	turnRight45@mL^0,c
  8227   005144  0E01               	movlw	high _motorL
  8228   005146  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8229   005148  0E72               	movlw	low _motorR
  8230   00514A  6E1C               	movwf	turnRight45@mR^0,c
  8231   00514C  0E01               	movlw	high _motorR
  8232   00514E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8233   005150  ECD9  F029         	call	_turnRight45	;wreg free
  8234                           
  8235                           ;dc_motor.c: 252:     turnRight45(&motorL, &motorR);
  8236   005154  0E7B               	movlw	low _motorL
  8237   005156  6E1A               	movwf	turnRight45@mL^0,c
  8238   005158  0E01               	movlw	high _motorL
  8239   00515A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8240   00515C  0E72               	movlw	low _motorR
  8241   00515E  6E1C               	movwf	turnRight45@mR^0,c
  8242   005160  0E01               	movlw	high _motorR
  8243   005162  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8244   005164  ECD9  F029         	call	_turnRight45	;wreg free
  8245                           
  8246                           ;dc_motor.c: 253:     turnRight45(&motorL, &motorR);
  8247   005168  0E7B               	movlw	low _motorL
  8248   00516A  6E1A               	movwf	turnRight45@mL^0,c
  8249   00516C  0E01               	movlw	high _motorL
  8250   00516E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8251   005170  0E72               	movlw	low _motorR
  8252   005172  6E1C               	movwf	turnRight45@mR^0,c
  8253   005174  0E01               	movlw	high _motorR
  8254   005176  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8255   005178  ECD9  F029         	call	_turnRight45	;wreg free
  8256                           
  8257                           ;dc_motor.c: 254:     turnRight45(&motorL, &motorR);
  8258   00517C  0E7B               	movlw	low _motorL
  8259   00517E  6E1A               	movwf	turnRight45@mL^0,c
  8260   005180  0E01               	movlw	high _motorL
  8261   005182  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8262   005184  0E72               	movlw	low _motorR
  8263   005186  6E1C               	movwf	turnRight45@mR^0,c
  8264   005188  0E01               	movlw	high _motorR
  8265   00518A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8266   00518C  ECD9  F029         	call	_turnRight45	;wreg free
  8267   005190  0012               	return		;funcret
  8268   005192                     __end_of_BlueMove:
  8269                           	callstack 0
  8270                           
  8271 ;; *************** function _colour_rel *****************
  8272 ;; Defined at:
  8273 ;;		line 114 in file "color.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  vals            2   74[COMRAM] PTR struct RGB
  8276 ;;		 -> vals(8), 
  8277 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8278 ;;		 -> rel(12), 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  B               4   20[BANK0 ] float 
  8281 ;;  G               4   16[BANK0 ] float 
  8282 ;;  R               4   12[BANK0 ] float 
  8283 ;;  L               4    0[BANK0 ] float 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;Total ram usage:       28 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; Hardware stack levels required when called: 2
  8300 ;; This function calls:
  8301 ;;		___fladd
  8302 ;;		___fldiv
  8303 ;;		___xxtofl
  8304 ;; This function is called by:
  8305 ;;		_main
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text41
  8310   0034BA                     __ptext41:
  8311                           	callstack 0
  8312   0034BA                     _colour_rel:
  8313                           	callstack 28
  8314   0034BA                     
  8315                           ;color.c: 115:     float R = vals->R;
  8316   0034BA  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  8317   0034BE  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  8318   0034C2  CFDE F001          	movff	postinc2,___xxtofl@val
  8319   0034C6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8320   0034CA  0E00               	movlw	0
  8321   0034CC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8322   0034CE  0EFF               	movlw	-1
  8323   0034D0  6E03               	movwf	(___xxtofl@val+2)^0,c
  8324   0034D2  6E04               	movwf	(___xxtofl@val+3)^0,c
  8325   0034D4  0E01               	movlw	1
  8326   0034D6  ECA8  F020         	call	___xxtofl
  8327   0034DA  C001  F06C         	movff	?___xxtofl,colour_rel@R
  8328   0034DE  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  8329   0034E2  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  8330   0034E6  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  8331                           
  8332                           ;color.c: 116:     float G = vals->G;
  8333   0034EA  EE20 F002          	lfsr	2,2
  8334   0034EE  504B               	movf	colour_rel@vals^0,w,c
  8335   0034F0  26D9               	addwf	fsr2l,f,c
  8336   0034F2  504C               	movf	(colour_rel@vals+1)^0,w,c
  8337   0034F4  22DA               	addwfc	fsr2h,f,c
  8338   0034F6  CFDE F001          	movff	postinc2,___xxtofl@val
  8339   0034FA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8340   0034FE  0E00               	movlw	0
  8341   003500  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8342   003502  0EFF               	movlw	-1
  8343   003504  6E03               	movwf	(___xxtofl@val+2)^0,c
  8344   003506  6E04               	movwf	(___xxtofl@val+3)^0,c
  8345   003508  0E01               	movlw	1
  8346   00350A  ECA8  F020         	call	___xxtofl
  8347   00350E  C001  F070         	movff	?___xxtofl,colour_rel@G
  8348   003512  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  8349   003516  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  8350   00351A  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  8351                           
  8352                           ;color.c: 117:     float B = vals->B;
  8353   00351E  EE20 F004          	lfsr	2,4
  8354   003522  504B               	movf	colour_rel@vals^0,w,c
  8355   003524  26D9               	addwf	fsr2l,f,c
  8356   003526  504C               	movf	(colour_rel@vals+1)^0,w,c
  8357   003528  22DA               	addwfc	fsr2h,f,c
  8358   00352A  CFDE F001          	movff	postinc2,___xxtofl@val
  8359   00352E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8360   003532  0E00               	movlw	0
  8361   003534  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8362   003536  0EFF               	movlw	-1
  8363   003538  6E03               	movwf	(___xxtofl@val+2)^0,c
  8364   00353A  6E04               	movwf	(___xxtofl@val+3)^0,c
  8365   00353C  0E01               	movlw	1
  8366   00353E  ECA8  F020         	call	___xxtofl
  8367   003542  C001  F074         	movff	?___xxtofl,colour_rel@B
  8368   003546  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  8369   00354A  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  8370   00354E  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  8371                           
  8372                           ;color.c: 118:     float L = vals->L;
  8373   003552  EE20 F006          	lfsr	2,6
  8374   003556  504B               	movf	colour_rel@vals^0,w,c
  8375   003558  26D9               	addwf	fsr2l,f,c
  8376   00355A  504C               	movf	(colour_rel@vals+1)^0,w,c
  8377   00355C  22DA               	addwfc	fsr2h,f,c
  8378   00355E  CFDE F001          	movff	postinc2,___xxtofl@val
  8379   003562  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8380   003566  0E00               	movlw	0
  8381   003568  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8382   00356A  0EFF               	movlw	-1
  8383   00356C  6E03               	movwf	(___xxtofl@val+2)^0,c
  8384   00356E  6E04               	movwf	(___xxtofl@val+3)^0,c
  8385   003570  0E01               	movlw	1
  8386   003572  ECA8  F020         	call	___xxtofl
  8387   003576  C001  F060         	movff	?___xxtofl,colour_rel@L
  8388   00357A  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  8389   00357E  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  8390   003582  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  8391   003586                     
  8392                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8393   003586  C070  F005         	movff	colour_rel@G,___fladd@a
  8394   00358A  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8395   00358E  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8396   003592  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8397   003596  C06C  F001         	movff	colour_rel@R,___fladd@b
  8398   00359A  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8399   00359E  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8400   0035A2  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8401   0035A6  EC1B  F014         	call	___fladd	;wreg free
  8402   0035AA  C001  F064         	movff	?___fladd,_colour_rel$2789
  8403   0035AE  C002  F065         	movff	?___fladd+1,_colour_rel$2789+1
  8404   0035B2  C003  F066         	movff	?___fladd+2,_colour_rel$2789+2
  8405   0035B6  C004  F067         	movff	?___fladd+3,_colour_rel$2789+3
  8406   0035BA                     
  8407                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8408   0035BA  C074  F005         	movff	colour_rel@B,___fladd@a
  8409   0035BE  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8410   0035C2  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8411   0035C6  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8412   0035CA  C064  F001         	movff	_colour_rel$2789,___fladd@b
  8413   0035CE  C065  F002         	movff	_colour_rel$2789+1,___fladd@b+1
  8414   0035D2  C066  F003         	movff	_colour_rel$2789+2,___fladd@b+2
  8415   0035D6  C067  F004         	movff	_colour_rel$2789+3,___fladd@b+3
  8416   0035DA  EC1B  F014         	call	___fladd	;wreg free
  8417   0035DE  C001  F068         	movff	?___fladd,_colour_rel$2790
  8418   0035E2  C002  F069         	movff	?___fladd+1,_colour_rel$2790+1
  8419   0035E6  C003  F06A         	movff	?___fladd+2,_colour_rel$2790+2
  8420   0035EA  C004  F06B         	movff	?___fladd+3,_colour_rel$2790+3
  8421                           
  8422                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8423   0035EE  C06C  F032         	movff	colour_rel@R,___fldiv@b
  8424   0035F2  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  8425   0035F6  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  8426   0035FA  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  8427   0035FE  C060  F005         	movff	colour_rel@L,___fladd@a
  8428   003602  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8429   003606  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8430   00360A  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8431   00360E  C068  F001         	movff	_colour_rel$2790,___fladd@b
  8432   003612  C069  F002         	movff	_colour_rel$2790+1,___fladd@b+1
  8433   003616  C06A  F003         	movff	_colour_rel$2790+2,___fladd@b+2
  8434   00361A  C06B  F004         	movff	_colour_rel$2790+3,___fladd@b+3
  8435   00361E  EC1B  F014         	call	___fladd	;wreg free
  8436   003622  C001  F036         	movff	?___fladd,___fldiv@a
  8437   003626  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8438   00362A  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8439   00362E  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8440   003632  EC90  F018         	call	___fldiv	;wreg free
  8441   003636  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  8442   00363A  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  8443   00363E  C032  FFDE         	movff	?___fldiv,postinc2
  8444   003642  C033  FFDE         	movff	?___fldiv+1,postinc2
  8445   003646  C034  FFDE         	movff	?___fldiv+2,postinc2
  8446   00364A  C035  FFDE         	movff	?___fldiv+3,postinc2
  8447   00364E                     
  8448                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8449   00364E  C070  F005         	movff	colour_rel@G,___fladd@a
  8450   003652  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8451   003656  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8452   00365A  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8453   00365E  C06C  F001         	movff	colour_rel@R,___fladd@b
  8454   003662  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8455   003666  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8456   00366A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8457   00366E  EC1B  F014         	call	___fladd	;wreg free
  8458   003672  C001  F064         	movff	?___fladd,_colour_rel$2789
  8459   003676  C002  F065         	movff	?___fladd+1,_colour_rel$2789+1
  8460   00367A  C003  F066         	movff	?___fladd+2,_colour_rel$2789+2
  8461   00367E  C004  F067         	movff	?___fladd+3,_colour_rel$2789+3
  8462   003682                     
  8463                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8464   003682  C074  F005         	movff	colour_rel@B,___fladd@a
  8465   003686  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8466   00368A  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8467   00368E  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8468   003692  C064  F001         	movff	_colour_rel$2789,___fladd@b
  8469   003696  C065  F002         	movff	_colour_rel$2789+1,___fladd@b+1
  8470   00369A  C066  F003         	movff	_colour_rel$2789+2,___fladd@b+2
  8471   00369E  C067  F004         	movff	_colour_rel$2789+3,___fladd@b+3
  8472   0036A2  EC1B  F014         	call	___fladd	;wreg free
  8473   0036A6  C001  F068         	movff	?___fladd,_colour_rel$2790
  8474   0036AA  C002  F069         	movff	?___fladd+1,_colour_rel$2790+1
  8475   0036AE  C003  F06A         	movff	?___fladd+2,_colour_rel$2790+2
  8476   0036B2  C004  F06B         	movff	?___fladd+3,_colour_rel$2790+3
  8477                           
  8478                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8479   0036B6  C074  F032         	movff	colour_rel@B,___fldiv@b
  8480   0036BA  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  8481   0036BE  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  8482   0036C2  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  8483   0036C6  C060  F005         	movff	colour_rel@L,___fladd@a
  8484   0036CA  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8485   0036CE  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8486   0036D2  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8487   0036D6  C068  F001         	movff	_colour_rel$2790,___fladd@b
  8488   0036DA  C069  F002         	movff	_colour_rel$2790+1,___fladd@b+1
  8489   0036DE  C06A  F003         	movff	_colour_rel$2790+2,___fladd@b+2
  8490   0036E2  C06B  F004         	movff	_colour_rel$2790+3,___fladd@b+3
  8491   0036E6  EC1B  F014         	call	___fladd	;wreg free
  8492   0036EA  C001  F036         	movff	?___fladd,___fldiv@a
  8493   0036EE  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8494   0036F2  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8495   0036F6  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8496   0036FA  EC90  F018         	call	___fldiv	;wreg free
  8497   0036FE  EE20 F008          	lfsr	2,8
  8498   003702  504D               	movf	colour_rel@rel^0,w,c
  8499   003704  26D9               	addwf	fsr2l,f,c
  8500   003706  504E               	movf	(colour_rel@rel+1)^0,w,c
  8501   003708  22DA               	addwfc	fsr2h,f,c
  8502   00370A  C032  FFDE         	movff	?___fldiv,postinc2
  8503   00370E  C033  FFDE         	movff	?___fldiv+1,postinc2
  8504   003712  C034  FFDE         	movff	?___fldiv+2,postinc2
  8505   003716  C035  FFDE         	movff	?___fldiv+3,postinc2
  8506   00371A                     
  8507                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8508   00371A  C070  F005         	movff	colour_rel@G,___fladd@a
  8509   00371E  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8510   003722  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8511   003726  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8512   00372A  C06C  F001         	movff	colour_rel@R,___fladd@b
  8513   00372E  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8514   003732  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8515   003736  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8516   00373A  EC1B  F014         	call	___fladd	;wreg free
  8517   00373E  C001  F064         	movff	?___fladd,_colour_rel$2789
  8518   003742  C002  F065         	movff	?___fladd+1,_colour_rel$2789+1
  8519   003746  C003  F066         	movff	?___fladd+2,_colour_rel$2789+2
  8520   00374A  C004  F067         	movff	?___fladd+3,_colour_rel$2789+3
  8521   00374E                     
  8522                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8523   00374E  C074  F005         	movff	colour_rel@B,___fladd@a
  8524   003752  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8525   003756  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8526   00375A  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8527   00375E  C064  F001         	movff	_colour_rel$2789,___fladd@b
  8528   003762  C065  F002         	movff	_colour_rel$2789+1,___fladd@b+1
  8529   003766  C066  F003         	movff	_colour_rel$2789+2,___fladd@b+2
  8530   00376A  C067  F004         	movff	_colour_rel$2789+3,___fladd@b+3
  8531   00376E  EC1B  F014         	call	___fladd	;wreg free
  8532   003772  C001  F068         	movff	?___fladd,_colour_rel$2790
  8533   003776  C002  F069         	movff	?___fladd+1,_colour_rel$2790+1
  8534   00377A  C003  F06A         	movff	?___fladd+2,_colour_rel$2790+2
  8535   00377E  C004  F06B         	movff	?___fladd+3,_colour_rel$2790+3
  8536                           
  8537                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8538   003782  C070  F032         	movff	colour_rel@G,___fldiv@b
  8539   003786  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  8540   00378A  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  8541   00378E  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  8542   003792  C060  F005         	movff	colour_rel@L,___fladd@a
  8543   003796  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8544   00379A  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8545   00379E  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8546   0037A2  C068  F001         	movff	_colour_rel$2790,___fladd@b
  8547   0037A6  C069  F002         	movff	_colour_rel$2790+1,___fladd@b+1
  8548   0037AA  C06A  F003         	movff	_colour_rel$2790+2,___fladd@b+2
  8549   0037AE  C06B  F004         	movff	_colour_rel$2790+3,___fladd@b+3
  8550   0037B2  EC1B  F014         	call	___fladd	;wreg free
  8551   0037B6  C001  F036         	movff	?___fladd,___fldiv@a
  8552   0037BA  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8553   0037BE  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8554   0037C2  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8555   0037C6  EC90  F018         	call	___fldiv	;wreg free
  8556   0037CA  EE20 F004          	lfsr	2,4
  8557   0037CE  504D               	movf	colour_rel@rel^0,w,c
  8558   0037D0  26D9               	addwf	fsr2l,f,c
  8559   0037D2  504E               	movf	(colour_rel@rel+1)^0,w,c
  8560   0037D4  22DA               	addwfc	fsr2h,f,c
  8561   0037D6  C032  FFDE         	movff	?___fldiv,postinc2
  8562   0037DA  C033  FFDE         	movff	?___fldiv+1,postinc2
  8563   0037DE  C034  FFDE         	movff	?___fldiv+2,postinc2
  8564   0037E2  C035  FFDE         	movff	?___fldiv+3,postinc2
  8565   0037E6  0012               	return		;funcret
  8566   0037E8                     __end_of_colour_rel:
  8567                           	callstack 0
  8568                           
  8569 ;; *************** function _color_click_init *****************
  8570 ;; Defined at:
  8571 ;;		line 7 in file "color.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;Total ram usage:        1 bytes
  8590 ;; Hardware stack levels used: 1
  8591 ;; Hardware stack levels required when called: 4
  8592 ;; This function calls:
  8593 ;;		_I2C_2_Master_Init
  8594 ;;		_color_writetoaddr
  8595 ;; This function is called by:
  8596 ;;		_main
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text42
  8601   0055AE                     __ptext42:
  8602                           	callstack 0
  8603   0055AE                     _color_click_init:
  8604                           	callstack 26
  8605   0055AE                     
  8606                           ;color.c: 10:     I2C_2_Master_Init();
  8607   0055AE  EC72  F02D         	call	_I2C_2_Master_Init	;wreg free
  8608   0055B2                     
  8609                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  8610   0055B2  0E01               	movlw	1
  8611   0055B4  6E03               	movwf	color_writetoaddr@value^0,c
  8612   0055B6  0E00               	movlw	0
  8613   0055B8  ECAE  F02D         	call	_color_writetoaddr
  8614   0055BC                     
  8615                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8616   0055BC  0E3F               	movlw	63
  8617   0055BE  6E05               	movwf	??_color_click_init^0,c
  8618   0055C0  0E55               	movlw	85
  8619   0055C2                     u5697:
  8620   0055C2  2EE8               	decfsz	wreg,f,c
  8621   0055C4  D7FE               	bra	u5697
  8622   0055C6  2E05               	decfsz	??_color_click_init^0,f,c
  8623   0055C8  D7FC               	bra	u5697
  8624   0055CA  F000               	nop	
  8625   0055CC                     
  8626                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8627   0055CC  0E03               	movlw	3
  8628   0055CE  6E03               	movwf	color_writetoaddr@value^0,c
  8629   0055D0  0E00               	movlw	0
  8630   0055D2  ECAE  F02D         	call	_color_writetoaddr
  8631   0055D6                     
  8632                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  8633   0055D6  0ED5               	movlw	213
  8634   0055D8  6E03               	movwf	color_writetoaddr@value^0,c
  8635   0055DA  0E01               	movlw	1
  8636   0055DC  ECAE  F02D         	call	_color_writetoaddr
  8637   0055E0                     
  8638                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  8639   0055E0  0E00               	movlw	0
  8640   0055E2  6E03               	movwf	color_writetoaddr@value^0,c
  8641   0055E4  0E0F               	movlw	15
  8642   0055E6  ECAE  F02D         	call	_color_writetoaddr
  8643   0055EA                     
  8644                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  8645   0055EA  9287               	bcf	135,1,c	;volatile
  8646   0055EC                     
  8647                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  8648   0055EC  9881               	bcf	129,4,c	;volatile
  8649   0055EE                     
  8650                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  8651   0055EE  9E86               	bcf	134,7,c	;volatile
  8652   0055F0                     
  8653                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  8654   0055F0  9684               	bcf	132,3,c	;volatile
  8655   0055F2                     
  8656                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  8657   0055F2  9884               	bcf	132,4,c	;volatile
  8658   0055F4                     
  8659                           ;color.c: 28:     LATGbits.LATG1=0;
  8660   0055F4  927F               	bcf	127,1,c	;volatile
  8661   0055F6                     
  8662                           ;color.c: 29:     LATFbits.LATF7=0;
  8663   0055F6  9E7E               	bcf	126,7,c	;volatile
  8664   0055F8                     
  8665                           ;color.c: 30:     LATAbits.LATA4=0;
  8666   0055F8  9879               	bcf	121,4,c	;volatile
  8667   0055FA                     
  8668                           ;color.c: 32:     LATDbits.LATD3=0;
  8669   0055FA  967C               	bcf	124,3,c	;volatile
  8670   0055FC                     
  8671                           ;color.c: 33:     LATDbits.LATD4=0;
  8672   0055FC  987C               	bcf	124,4,c	;volatile
  8673   0055FE  0012               	return		;funcret
  8674   005600                     __end_of_color_click_init:
  8675                           	callstack 0
  8676                           
  8677 ;; *************** function _color_writetoaddr *****************
  8678 ;; Defined at:
  8679 ;;		line 41 in file "color.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;  address         1    wreg     unsigned char 
  8682 ;;  value           1    2[COMRAM] unsigned char 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  address         1    3[COMRAM] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8694 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;Total ram usage:        2 bytes
  8699 ;; Hardware stack levels used: 1
  8700 ;; Hardware stack levels required when called: 3
  8701 ;; This function calls:
  8702 ;;		_I2C_2_Master_Start
  8703 ;;		_I2C_2_Master_Stop
  8704 ;;		_I2C_2_Master_Write
  8705 ;; This function is called by:
  8706 ;;		_color_click_init
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text43
  8711   005B5C                     __ptext43:
  8712                           	callstack 0
  8713   005B5C                     _color_writetoaddr:
  8714                           	callstack 26
  8715                           
  8716                           ;incstack = 0
  8717                           ;color_writetoaddr@address stored from wreg
  8718   005B5C  6E04               	movwf	color_writetoaddr@address^0,c
  8719   005B5E                     
  8720                           ;color.c: 42:     I2C_2_Master_Start();
  8721   005B5E  ECE9  F02D         	call	_I2C_2_Master_Start	;wreg free
  8722                           
  8723                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  8724   005B62  0E52               	movlw	82
  8725   005B64  ECD9  F02D         	call	_I2C_2_Master_Write
  8726                           
  8727                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  8728   005B68  5004               	movf	color_writetoaddr@address^0,w,c
  8729   005B6A  0980               	iorlw	128
  8730   005B6C  ECD9  F02D         	call	_I2C_2_Master_Write
  8731                           
  8732                           ;color.c: 45:     I2C_2_Master_Write(value);
  8733   005B70  5003               	movf	color_writetoaddr@value^0,w,c
  8734   005B72  ECD9  F02D         	call	_I2C_2_Master_Write
  8735                           
  8736                           ;color.c: 46:     I2C_2_Master_Stop();
  8737   005B76  ECE4  F02D         	call	_I2C_2_Master_Stop	;wreg free
  8738   005B7A  0012               	return		;funcret
  8739   005B7C                     __end_of_color_writetoaddr:
  8740                           	callstack 0
  8741                           
  8742 ;; *************** function _I2C_2_Master_Write *****************
  8743 ;; Defined at:
  8744 ;;		line 45 in file "i2c.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  data_byte       1    wreg     unsigned char 
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;  data_byte       1    1[COMRAM] unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      void 
  8751 ;; Registers used:
  8752 ;;		wreg, status,2, status,0, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8762 ;;Total ram usage:        1 bytes
  8763 ;; Hardware stack levels used: 1
  8764 ;; Hardware stack levels required when called: 2
  8765 ;; This function calls:
  8766 ;;		_I2C_2_Master_Idle
  8767 ;; This function is called by:
  8768 ;;		_color_writetoaddr
  8769 ;;		_color_read_lum
  8770 ;;		_color_read_Red
  8771 ;;		_color_read_Green
  8772 ;;		_color_read_Blue
  8773 ;; This function uses a non-reentrant model
  8774 ;;
  8775                           
  8776                           	psect	text44
  8777   005BB2                     __ptext44:
  8778                           	callstack 0
  8779   005BB2                     _I2C_2_Master_Write:
  8780                           	callstack 26
  8781                           
  8782                           ;incstack = 0
  8783                           ;I2C_2_Master_Write@data_byte stored from wreg
  8784   005BB2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8785   005BB4                     
  8786                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8787   005BB4  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8788   005BB8                     
  8789                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8790   005BB8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8791   005BBC  0012               	return		;funcret
  8792   005BBE                     __end_of_I2C_2_Master_Write:
  8793                           	callstack 0
  8794                           
  8795 ;; *************** function _I2C_2_Master_Stop *****************
  8796 ;; Defined at:
  8797 ;;		line 39 in file "i2c.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;Total ram usage:        0 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; Hardware stack levels required when called: 2
  8818 ;; This function calls:
  8819 ;;		_I2C_2_Master_Idle
  8820 ;; This function is called by:
  8821 ;;		_color_writetoaddr
  8822 ;;		_color_read_lum
  8823 ;;		_color_read_Red
  8824 ;;		_color_read_Green
  8825 ;;		_color_read_Blue
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text45
  8830   005BC8                     __ptext45:
  8831                           	callstack 0
  8832   005BC8                     _I2C_2_Master_Stop:
  8833                           	callstack 26
  8834   005BC8                     
  8835                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8836   005BC8  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8837   005BCC                     
  8838                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8839   005BCC  010E               	movlb	14	; () banked
  8840   005BCE  85DA               	bsf	218,2,b	;volatile
  8841   005BD0                     
  8842                           ; BSR set to: 14
  8843   005BD0  0012               	return		;funcret
  8844   005BD2                     __end_of_I2C_2_Master_Stop:
  8845                           	callstack 0
  8846                           
  8847 ;; *************** function _I2C_2_Master_Start *****************
  8848 ;; Defined at:
  8849 ;;		line 27 in file "i2c.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		wreg, status,2, status,0, cstack
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used: 1
  8869 ;; Hardware stack levels required when called: 2
  8870 ;; This function calls:
  8871 ;;		_I2C_2_Master_Idle
  8872 ;; This function is called by:
  8873 ;;		_color_writetoaddr
  8874 ;;		_color_read_lum
  8875 ;;		_color_read_Red
  8876 ;;		_color_read_Green
  8877 ;;		_color_read_Blue
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text46
  8882   005BD2                     __ptext46:
  8883                           	callstack 0
  8884   005BD2                     _I2C_2_Master_Start:
  8885                           	callstack 26
  8886   005BD2                     
  8887                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8888   005BD2  EC87  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8889   005BD6                     
  8890                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8891   005BD6  010E               	movlb	14	; () banked
  8892   005BD8  81DA               	bsf	218,0,b	;volatile
  8893   005BDA                     
  8894                           ; BSR set to: 14
  8895   005BDA  0012               	return		;funcret
  8896   005BDC                     __end_of_I2C_2_Master_Start:
  8897                           	callstack 0
  8898                           
  8899 ;; *************** function _I2C_2_Master_Idle *****************
  8900 ;; Defined at:
  8901 ;;		line 22 in file "i2c.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;		None
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;		None
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      void 
  8908 ;; Registers used:
  8909 ;;		wreg, status,2, status,0
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;Total ram usage:        1 bytes
  8920 ;; Hardware stack levels used: 1
  8921 ;; Hardware stack levels required when called: 1
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_I2C_2_Master_Start
  8926 ;;		_I2C_2_Master_RepStart
  8927 ;;		_I2C_2_Master_Stop
  8928 ;;		_I2C_2_Master_Write
  8929 ;;		_I2C_2_Master_Read
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text47
  8934   005B0E                     __ptext47:
  8935                           	callstack 0
  8936   005B0E                     _I2C_2_Master_Idle:
  8937                           	callstack 26
  8938   005B0E                     l141:
  8939   005B0E  010E               	movlb	14	; () banked
  8940   005B10  B5D8               	btfsc	216,2,b	;volatile
  8941   005B12  EF8D  F02D         	goto	u4251
  8942   005B16  EF8F  F02D         	goto	u4250
  8943   005B1A                     u4251:
  8944   005B1A  EF87  F02D         	goto	l141
  8945   005B1E                     u4250:
  8946   005B1E                     
  8947                           ; BSR set to: 14
  8948   005B1E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8949   005B22  0E1F               	movlw	31
  8950   005B24  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8951   005B26  A4D8               	btfss	status,2,c
  8952   005B28  EF98  F02D         	goto	u4261
  8953   005B2C  EF9A  F02D         	goto	u4260
  8954   005B30                     u4261:
  8955   005B30  EF87  F02D         	goto	l141
  8956   005B34                     u4260:
  8957   005B34                     
  8958                           ; BSR set to: 14
  8959   005B34  0012               	return		;funcret
  8960   005B36                     __end_of_I2C_2_Master_Idle:
  8961                           	callstack 0
  8962                           
  8963 ;; *************** function _I2C_2_Master_Init *****************
  8964 ;; Defined at:
  8965 ;;		line 4 in file "i2c.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;		None
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;		None
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8983 ;;Total ram usage:        0 bytes
  8984 ;; Hardware stack levels used: 1
  8985 ;; Hardware stack levels required when called: 1
  8986 ;; This function calls:
  8987 ;;		Nothing
  8988 ;; This function is called by:
  8989 ;;		_color_click_init
  8990 ;;		_main
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           	psect	text48
  8995   005AE4                     __ptext48:
  8996                           	callstack 0
  8997   005AE4                     _I2C_2_Master_Init:
  8998                           	callstack 28
  8999   005AE4                     
  9000                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9001   005AE4  010E               	movlb	14	; () banked
  9002   005AE6  51D9               	movf	217,w,b	;volatile
  9003   005AE8  0BF0               	andlw	-16
  9004   005AEA  0908               	iorlw	8
  9005   005AEC  6FD9               	movwf	217,b	;volatile
  9006   005AEE                     
  9007                           ; BSR set to: 14
  9008                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9009   005AEE  8BD9               	bsf	217,5,b	;volatile
  9010                           
  9011                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9012   005AF0  0E9F               	movlw	159
  9013   005AF2  6FD6               	movwf	214,b	;volatile
  9014   005AF4                     
  9015                           ; BSR set to: 14
  9016                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9017   005AF4  8A84               	bsf	132,5,c	;volatile
  9018   005AF6                     
  9019                           ; BSR set to: 14
  9020                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9021   005AF6  8C84               	bsf	132,6,c	;volatile
  9022   005AF8                     
  9023                           ; BSR set to: 14
  9024                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9025   005AF8  9BA7               	bcf	167,5,b	;volatile
  9026   005AFA                     
  9027                           ; BSR set to: 14
  9028                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9029   005AFA  9DA7               	bcf	167,6,b	;volatile
  9030                           
  9031                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9032   005AFC  0E1D               	movlw	29
  9033   005AFE  6F1D               	movwf	29,b	;volatile
  9034                           
  9035                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9036   005B00  0E1E               	movlw	30
  9037   005B02  6F1C               	movwf	28,b	;volatile
  9038                           
  9039                           ;i2c.c: 18:   RD5PPS=0x1C;
  9040   005B04  0E1C               	movlw	28
  9041   005B06  6F6F               	movwf	111,b	;volatile
  9042                           
  9043                           ;i2c.c: 19:   RD6PPS=0x1B;
  9044   005B08  0E1B               	movlw	27
  9045   005B0A  6F70               	movwf	112,b	;volatile
  9046   005B0C                     
  9047                           ; BSR set to: 14
  9048   005B0C  0012               	return		;funcret
  9049   005B0E                     __end_of_I2C_2_Master_Init:
  9050                           	callstack 0
  9051                           
  9052 ;; *************** function _YellowMove *****************
  9053 ;; Defined at:
  9054 ;;		line 258 in file "dc_motor.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9057 ;;		 -> motorL(9), 
  9058 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9059 ;;		 -> motorR(9), 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used: 1
  9077 ;; Hardware stack levels required when called: 5
  9078 ;; This function calls:
  9079 ;;		_reverseDetect
  9080 ;;		_reverseOneBlock
  9081 ;;		_turnRight45
  9082 ;; This function is called by:
  9083 ;;		_main
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text49
  9088   005600                     __ptext49:
  9089                           	callstack 0
  9090   005600                     _YellowMove:
  9091                           	callstack 25
  9092   005600                     
  9093                           ;dc_motor.c: 259:     reverseDetect(&motorL, &motorR);
  9094   005600  0E7B               	movlw	low _motorL
  9095   005602  6E1A               	movwf	reverseDetect@mL^0,c
  9096   005604  0E01               	movlw	high _motorL
  9097   005606  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9098   005608  0E72               	movlw	low _motorR
  9099   00560A  6E1C               	movwf	reverseDetect@mR^0,c
  9100   00560C  0E01               	movlw	high _motorR
  9101   00560E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9102   005610  ECAC  F029         	call	_reverseDetect	;wreg free
  9103                           
  9104                           ;dc_motor.c: 261:     reverseOneBlock(&motorL, &motorR);
  9105   005614  0E7B               	movlw	low _motorL
  9106   005616  6E1A               	movwf	reverseOneBlock@mL^0,c
  9107   005618  0E01               	movlw	high _motorL
  9108   00561A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9109   00561C  0E72               	movlw	low _motorR
  9110   00561E  6E1C               	movwf	reverseOneBlock@mR^0,c
  9111   005620  0E01               	movlw	high _motorR
  9112   005622  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9113   005624  EC7F  F029         	call	_reverseOneBlock	;wreg free
  9114                           
  9115                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  9116   005628  0E7B               	movlw	low _motorL
  9117   00562A  6E1A               	movwf	turnRight45@mL^0,c
  9118   00562C  0E01               	movlw	high _motorL
  9119   00562E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9120   005630  0E72               	movlw	low _motorR
  9121   005632  6E1C               	movwf	turnRight45@mR^0,c
  9122   005634  0E01               	movlw	high _motorR
  9123   005636  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9124   005638  ECD9  F029         	call	_turnRight45	;wreg free
  9125                           
  9126                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  9127   00563C  0E7B               	movlw	low _motorL
  9128   00563E  6E1A               	movwf	turnRight45@mL^0,c
  9129   005640  0E01               	movlw	high _motorL
  9130   005642  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9131   005644  0E72               	movlw	low _motorR
  9132   005646  6E1C               	movwf	turnRight45@mR^0,c
  9133   005648  0E01               	movlw	high _motorR
  9134   00564A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9135   00564C  ECD9  F029         	call	_turnRight45	;wreg free
  9136   005650  0012               	return		;funcret
  9137   005652                     __end_of_YellowMove:
  9138                           	callstack 0
  9139                           
  9140 ;; *************** function _turnRight45 *****************
  9141 ;; Defined at:
  9142 ;;		line 181 in file "dc_motor.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9145 ;;		 -> motorL(9), 
  9146 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9147 ;;		 -> motorR(9), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      void 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9163 ;;Total ram usage:        6 bytes
  9164 ;; Hardware stack levels used: 1
  9165 ;; Hardware stack levels required when called: 4
  9166 ;; This function calls:
  9167 ;;		_stop
  9168 ;;		_turnRight
  9169 ;; This function is called by:
  9170 ;;		_RedMove
  9171 ;;		_BlueMove
  9172 ;;		_YellowMove
  9173 ;;		_OrangeMove
  9174 ;;		_ReversePink
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text50
  9179   0053B2                     __ptext50:
  9180                           	callstack 0
  9181   0053B2                     _turnRight45:
  9182                           	callstack 24
  9183   0053B2                     
  9184                           ;dc_motor.c: 182:     turnRight(mL,mR);
  9185   0053B2  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  9186   0053B6  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9187   0053BA  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  9188   0053BE  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9189   0053C2  ECEC  F025         	call	_turnRight	;wreg free
  9190   0053C6                     
  9191                           ;dc_motor.c: 183:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  9192   0053C6  0E12               	movlw	18
  9193   0053C8  6E1F               	movwf	(??_turnRight45+1)^0,c
  9194   0053CA  0EDC               	movlw	220
  9195   0053CC  6E1E               	movwf	??_turnRight45^0,c
  9196   0053CE  0E60               	movlw	96
  9197   0053D0                     u5707:
  9198   0053D0  2EE8               	decfsz	wreg,f,c
  9199   0053D2  D7FE               	bra	u5707
  9200   0053D4  2E1E               	decfsz	??_turnRight45^0,f,c
  9201   0053D6  D7FC               	bra	u5707
  9202   0053D8  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9203   0053DA  D7FA               	bra	u5707
  9204   0053DC                     
  9205                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  9206   0053DC  0E7B               	movlw	low _motorL
  9207   0053DE  6E14               	movwf	stop@mL^0,c
  9208   0053E0  0E01               	movlw	high _motorL
  9209   0053E2  6E15               	movwf	(stop@mL+1)^0,c
  9210   0053E4  0E72               	movlw	low _motorR
  9211   0053E6  6E16               	movwf	stop@mR^0,c
  9212   0053E8  0E01               	movlw	high _motorR
  9213   0053EA  6E17               	movwf	(stop@mR+1)^0,c
  9214   0053EC  ECAD  F027         	call	_stop	;wreg free
  9215                           
  9216                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9217   0053F0  0E52               	movlw	82
  9218   0053F2  6E1F               	movwf	(??_turnRight45+1)^0,c
  9219   0053F4  0E2B               	movlw	43
  9220   0053F6  6E1E               	movwf	??_turnRight45^0,c
  9221   0053F8  0E00               	movlw	0
  9222   0053FA                     u5717:
  9223   0053FA  2EE8               	decfsz	wreg,f,c
  9224   0053FC  D7FE               	bra	u5717
  9225   0053FE  2E1E               	decfsz	??_turnRight45^0,f,c
  9226   005400  D7FC               	bra	u5717
  9227   005402  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9228   005404  D7FA               	bra	u5717
  9229   005406  D000               	nop2	
  9230   005408  0012               	return		;funcret
  9231   00540A                     __end_of_turnRight45:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function _turnRight *****************
  9235 ;; Defined at:
  9236 ;;		line 128 in file "dc_motor.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9239 ;;		 -> motorL(9), 
  9240 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9241 ;;		 -> motorR(9), 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;Total ram usage:        6 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 3
  9260 ;; This function calls:
  9261 ;;		_setMotorPWM
  9262 ;; This function is called by:
  9263 ;;		_turnRight45
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text51
  9268   004BD8                     __ptext51:
  9269                           	callstack 0
  9270   004BD8                     _turnRight:
  9271                           	callstack 24
  9272   004BD8                     
  9273                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  9274   004BD8  EE20 F001          	lfsr	2,1
  9275   004BDC  5014               	movf	turnRight@mL^0,w,c
  9276   004BDE  26D9               	addwf	fsr2l,f,c
  9277   004BE0  5015               	movf	(turnRight@mL+1)^0,w,c
  9278   004BE2  22DA               	addwfc	fsr2h,f,c
  9279   004BE4  0E01               	movlw	1
  9280   004BE6  6EDF               	movwf	indf2,c
  9281                           
  9282                           ;dc_motor.c: 131:     mR->direction =0;
  9283   004BE8  EE20 F001          	lfsr	2,1
  9284   004BEC  5016               	movf	turnRight@mR^0,w,c
  9285   004BEE  26D9               	addwf	fsr2l,f,c
  9286   004BF0  5017               	movf	(turnRight@mR+1)^0,w,c
  9287   004BF2  22DA               	addwfc	fsr2h,f,c
  9288   004BF4  0E00               	movlw	0
  9289   004BF6  6EDF               	movwf	indf2,c
  9290                           
  9291                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  9292   004BF8  EF22  F026         	goto	l4431
  9293   004BFC                     l4423:
  9294                           
  9295                           ;dc_motor.c: 135:         mL->power+=10;
  9296   004BFC  C014  FFD9         	movff	turnRight@mL,fsr2l
  9297   004C00  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9298   004C04  0E0A               	movlw	10
  9299   004C06  26DF               	addwf	indf2,f,c
  9300                           
  9301                           ;dc_motor.c: 136:         mR->power+=10;
  9302   004C08  C016  FFD9         	movff	turnRight@mR,fsr2l
  9303   004C0C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9304   004C10  0E0A               	movlw	10
  9305   004C12  26DF               	addwf	indf2,f,c
  9306   004C14                     
  9307                           ;dc_motor.c: 138:         setMotorPWM(mL);
  9308   004C14  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9309   004C18  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9310   004C1C  EC46  F022         	call	_setMotorPWM	;wreg free
  9311   004C20                     
  9312                           ;dc_motor.c: 139:         setMotorPWM(mR);
  9313   004C20  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9314   004C24  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9315   004C28  EC46  F022         	call	_setMotorPWM	;wreg free
  9316   004C2C                     
  9317                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9318   004C2C  0E02               	movlw	2
  9319   004C2E  6E19               	movwf	(??_turnRight+1)^0,c
  9320   004C30  0EA0               	movlw	160
  9321   004C32  6E18               	movwf	??_turnRight^0,c
  9322   004C34  0E92               	movlw	146
  9323   004C36                     u5727:
  9324   004C36  2EE8               	decfsz	wreg,f,c
  9325   004C38  D7FE               	bra	u5727
  9326   004C3A  2E18               	decfsz	??_turnRight^0,f,c
  9327   004C3C  D7FC               	bra	u5727
  9328   004C3E  2E19               	decfsz	(??_turnRight+1)^0,f,c
  9329   004C40  D7FA               	bra	u5727
  9330   004C42  D000               	nop2	
  9331   004C44                     l4431:
  9332   004C44  C014  FFD9         	movff	turnRight@mL,fsr2l
  9333   004C48  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9334   004C4C  0E1E               	movlw	30
  9335   004C4E  60DF               	cpfslt	indf2,c
  9336   004C50  EF2C  F026         	goto	u4311
  9337   004C54  EF2E  F026         	goto	u4310
  9338   004C58                     u4311:
  9339   004C58  EF3A  F026         	goto	l496
  9340   004C5C                     u4310:
  9341   004C5C  C016  FFD9         	movff	turnRight@mR,fsr2l
  9342   004C60  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9343   004C64  0E1D               	movlw	29
  9344   004C66  64DF               	cpfsgt	indf2,c
  9345   004C68  EF38  F026         	goto	u4321
  9346   004C6C  EF3A  F026         	goto	u4320
  9347   004C70                     u4321:
  9348   004C70  EFFE  F025         	goto	l4423
  9349   004C74                     u4320:
  9350   004C74                     l496:
  9351   004C74  0012               	return		;funcret
  9352   004C76                     __end_of_turnRight:
  9353                           	callstack 0
  9354                           
  9355 ;; *************** function _RetryMove *****************
  9356 ;; Defined at:
  9357 ;;		line 295 in file "dc_motor.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9360 ;;		 -> motorL(9), 
  9361 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9362 ;;		 -> motorR(9), 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      void 
  9367 ;; Registers used:
  9368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9377 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9378 ;;Total ram usage:        6 bytes
  9379 ;; Hardware stack levels used: 1
  9380 ;; Hardware stack levels required when called: 4
  9381 ;; This function calls:
  9382 ;;		_fullSpeedAhead
  9383 ;;		_fullSpeedBack
  9384 ;;		_stop
  9385 ;; This function is called by:
  9386 ;;		_main
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           	psect	text52
  9391   004ED8                     __ptext52:
  9392                           	callstack 0
  9393   004ED8                     _RetryMove:
  9394                           	callstack 26
  9395   004ED8                     
  9396                           ;dc_motor.c: 296:     fullSpeedBack(mL,mR);
  9397   004ED8  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  9398   004EDC  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  9399   004EE0  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  9400   004EE4  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  9401   004EE8  ECD9  F026         	call	_fullSpeedBack	;wreg free
  9402   004EEC                     
  9403                           ;dc_motor.c: 297:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9404   004EEC  0E29               	movlw	41
  9405   004EEE  6E1F               	movwf	(??_RetryMove+1)^0,c
  9406   004EF0  0E96               	movlw	150
  9407   004EF2  6E1E               	movwf	??_RetryMove^0,c
  9408   004EF4  0E7F               	movlw	127
  9409   004EF6                     u5737:
  9410   004EF6  2EE8               	decfsz	wreg,f,c
  9411   004EF8  D7FE               	bra	u5737
  9412   004EFA  2E1E               	decfsz	??_RetryMove^0,f,c
  9413   004EFC  D7FC               	bra	u5737
  9414   004EFE  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  9415   004F00  D7FA               	bra	u5737
  9416   004F02  F000               	nop	
  9417   004F04                     
  9418                           ;dc_motor.c: 298:     stop(&motorL, &motorR);
  9419   004F04  0E7B               	movlw	low _motorL
  9420   004F06  6E14               	movwf	stop@mL^0,c
  9421   004F08  0E01               	movlw	high _motorL
  9422   004F0A  6E15               	movwf	(stop@mL+1)^0,c
  9423   004F0C  0E72               	movlw	low _motorR
  9424   004F0E  6E16               	movwf	stop@mR^0,c
  9425   004F10  0E01               	movlw	high _motorR
  9426   004F12  6E17               	movwf	(stop@mR+1)^0,c
  9427   004F14  ECAD  F027         	call	_stop	;wreg free
  9428   004F18                     
  9429                           ;dc_motor.c: 299:     fullSpeedAhead(mL,mR);
  9430   004F18  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9431   004F1C  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9432   004F20  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9433   004F24  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9434   004F28  EC3B  F026         	call	_fullSpeedAhead	;wreg free
  9435   004F2C                     
  9436                           ;dc_motor.c: 300:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9437   004F2C  0E29               	movlw	41
  9438   004F2E  6E1F               	movwf	(??_RetryMove+1)^0,c
  9439   004F30  0E96               	movlw	150
  9440   004F32  6E1E               	movwf	??_RetryMove^0,c
  9441   004F34  0E7F               	movlw	127
  9442   004F36                     u5747:
  9443   004F36  2EE8               	decfsz	wreg,f,c
  9444   004F38  D7FE               	bra	u5747
  9445   004F3A  2E1E               	decfsz	??_RetryMove^0,f,c
  9446   004F3C  D7FC               	bra	u5747
  9447   004F3E  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  9448   004F40  D7FA               	bra	u5747
  9449   004F42  F000               	nop	
  9450                           
  9451                           ;dc_motor.c: 301:     stop(&motorL, &motorR);
  9452   004F44  0E7B               	movlw	low _motorL
  9453   004F46  6E14               	movwf	stop@mL^0,c
  9454   004F48  0E01               	movlw	high _motorL
  9455   004F4A  6E15               	movwf	(stop@mL+1)^0,c
  9456   004F4C  0E72               	movlw	low _motorR
  9457   004F4E  6E16               	movwf	stop@mR^0,c
  9458   004F50  0E01               	movlw	high _motorR
  9459   004F52  6E17               	movwf	(stop@mR+1)^0,c
  9460   004F54  ECAD  F027         	call	_stop	;wreg free
  9461   004F58  0012               	return		;funcret
  9462   004F5A                     __end_of_RetryMove:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function _fullSpeedAhead *****************
  9466 ;; Defined at:
  9467 ;;		line 146 in file "dc_motor.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9470 ;;		 -> motorL(9), 
  9471 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9472 ;;		 -> motorR(9), 
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;		None
  9475 ;; Return value:  Size  Location     Type
  9476 ;;                  1    wreg      void 
  9477 ;; Registers used:
  9478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9479 ;; Tracked objects:
  9480 ;;		On entry : 0/0
  9481 ;;		On exit  : 0/0
  9482 ;;		Unchanged: 0/0
  9483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9488 ;;Total ram usage:        6 bytes
  9489 ;; Hardware stack levels used: 1
  9490 ;; Hardware stack levels required when called: 3
  9491 ;; This function calls:
  9492 ;;		_setMotorPWM
  9493 ;; This function is called by:
  9494 ;;		_ForwardOneBlock
  9495 ;;		_Forwardhalfblock
  9496 ;;		_RetryMove
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text53
  9501   004C76                     __ptext53:
  9502                           	callstack 0
  9503   004C76                     _fullSpeedAhead:
  9504                           	callstack 24
  9505   004C76                     
  9506                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  9507   004C76  EE20 F001          	lfsr	2,1
  9508   004C7A  5014               	movf	fullSpeedAhead@mL^0,w,c
  9509   004C7C  26D9               	addwf	fsr2l,f,c
  9510   004C7E  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  9511   004C80  22DA               	addwfc	fsr2h,f,c
  9512   004C82  0E01               	movlw	1
  9513   004C84  6EDF               	movwf	indf2,c
  9514                           
  9515                           ;dc_motor.c: 150:     mR->direction =1;
  9516   004C86  EE20 F001          	lfsr	2,1
  9517   004C8A  5016               	movf	fullSpeedAhead@mR^0,w,c
  9518   004C8C  26D9               	addwf	fsr2l,f,c
  9519   004C8E  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  9520   004C90  22DA               	addwfc	fsr2h,f,c
  9521   004C92  0E01               	movlw	1
  9522   004C94  6EDF               	movwf	indf2,c
  9523                           
  9524                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  9525   004C96  EF71  F026         	goto	l4445
  9526   004C9A                     l4437:
  9527                           
  9528                           ;dc_motor.c: 153:         mL->power+=10;
  9529   004C9A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9530   004C9E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9531   004CA2  0E0A               	movlw	10
  9532   004CA4  26DF               	addwf	indf2,f,c
  9533                           
  9534                           ;dc_motor.c: 154:         mR->power+=10;
  9535   004CA6  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9536   004CAA  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9537   004CAE  0E0A               	movlw	10
  9538   004CB0  26DF               	addwf	indf2,f,c
  9539   004CB2                     
  9540                           ;dc_motor.c: 156:         setMotorPWM(mL);
  9541   004CB2  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  9542   004CB6  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  9543   004CBA  EC46  F022         	call	_setMotorPWM	;wreg free
  9544   004CBE                     
  9545                           ;dc_motor.c: 157:         setMotorPWM(mR);
  9546   004CBE  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  9547   004CC2  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  9548   004CC6  EC46  F022         	call	_setMotorPWM	;wreg free
  9549   004CCA                     
  9550                           ;dc_motor.c: 159:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9551   004CCA  0E02               	movlw	2
  9552   004CCC  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  9553   004CCE  0EA0               	movlw	160
  9554   004CD0  6E18               	movwf	??_fullSpeedAhead^0,c
  9555   004CD2  0E92               	movlw	146
  9556   004CD4                     u5757:
  9557   004CD4  2EE8               	decfsz	wreg,f,c
  9558   004CD6  D7FE               	bra	u5757
  9559   004CD8  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  9560   004CDA  D7FC               	bra	u5757
  9561   004CDC  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  9562   004CDE  D7FA               	bra	u5757
  9563   004CE0  D000               	nop2	
  9564   004CE2                     l4445:
  9565   004CE2  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9566   004CE6  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9567   004CEA  0E1E               	movlw	30
  9568   004CEC  60DF               	cpfslt	indf2,c
  9569   004CEE  EF7B  F026         	goto	u4331
  9570   004CF2  EF7D  F026         	goto	u4330
  9571   004CF6                     u4331:
  9572   004CF6  EF89  F026         	goto	l504
  9573   004CFA                     u4330:
  9574   004CFA  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9575   004CFE  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9576   004D02  0E1D               	movlw	29
  9577   004D04  64DF               	cpfsgt	indf2,c
  9578   004D06  EF87  F026         	goto	u4341
  9579   004D0A  EF89  F026         	goto	u4340
  9580   004D0E                     u4341:
  9581   004D0E  EF4D  F026         	goto	l4437
  9582   004D12                     u4340:
  9583   004D12                     l504:
  9584   004D12  0012               	return		;funcret
  9585   004D14                     __end_of_fullSpeedAhead:
  9586                           	callstack 0
  9587                           
  9588 ;; *************** function _PinkMove *****************
  9589 ;; Defined at:
  9590 ;;		line 268 in file "dc_motor.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9593 ;;		 -> motorL(9), 
  9594 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9595 ;;		 -> motorR(9), 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  1    wreg      void 
  9600 ;; Registers used:
  9601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;Total ram usage:        4 bytes
  9612 ;; Hardware stack levels used: 1
  9613 ;; Hardware stack levels required when called: 5
  9614 ;; This function calls:
  9615 ;;		_reverseDetect
  9616 ;;		_reverseOneBlock
  9617 ;;		_turnLeft45
  9618 ;; This function is called by:
  9619 ;;		_main
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text54
  9624   005652                     __ptext54:
  9625                           	callstack 0
  9626   005652                     _PinkMove:
  9627                           	callstack 25
  9628   005652                     
  9629                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  9630   005652  0E7B               	movlw	low _motorL
  9631   005654  6E1A               	movwf	reverseDetect@mL^0,c
  9632   005656  0E01               	movlw	high _motorL
  9633   005658  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9634   00565A  0E72               	movlw	low _motorR
  9635   00565C  6E1C               	movwf	reverseDetect@mR^0,c
  9636   00565E  0E01               	movlw	high _motorR
  9637   005660  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9638   005662  ECAC  F029         	call	_reverseDetect	;wreg free
  9639                           
  9640                           ;dc_motor.c: 271:     reverseOneBlock(&motorL, &motorR);
  9641   005666  0E7B               	movlw	low _motorL
  9642   005668  6E1A               	movwf	reverseOneBlock@mL^0,c
  9643   00566A  0E01               	movlw	high _motorL
  9644   00566C  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9645   00566E  0E72               	movlw	low _motorR
  9646   005670  6E1C               	movwf	reverseOneBlock@mR^0,c
  9647   005672  0E01               	movlw	high _motorR
  9648   005674  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9649   005676  EC7F  F029         	call	_reverseOneBlock	;wreg free
  9650                           
  9651                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9652   00567A  0E7B               	movlw	low _motorL
  9653   00567C  6E1A               	movwf	turnLeft45@mL^0,c
  9654   00567E  0E01               	movlw	high _motorL
  9655   005680  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9656   005682  0E72               	movlw	low _motorR
  9657   005684  6E1C               	movwf	turnLeft45@mR^0,c
  9658   005686  0E01               	movlw	high _motorR
  9659   005688  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9660   00568A  EC05  F02A         	call	_turnLeft45	;wreg free
  9661                           
  9662                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9663   00568E  0E7B               	movlw	low _motorL
  9664   005690  6E1A               	movwf	turnLeft45@mL^0,c
  9665   005692  0E01               	movlw	high _motorL
  9666   005694  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9667   005696  0E72               	movlw	low _motorR
  9668   005698  6E1C               	movwf	turnLeft45@mR^0,c
  9669   00569A  0E01               	movlw	high _motorR
  9670   00569C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9671   00569E  EC05  F02A         	call	_turnLeft45	;wreg free
  9672   0056A2  0012               	return		;funcret
  9673   0056A4                     __end_of_PinkMove:
  9674                           	callstack 0
  9675                           
  9676 ;; *************** function _turnLeft45 *****************
  9677 ;; Defined at:
  9678 ;;		line 188 in file "dc_motor.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9681 ;;		 -> motorL(9), 
  9682 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9683 ;;		 -> motorR(9), 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      void 
  9688 ;; Registers used:
  9689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9699 ;;Total ram usage:        6 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; Hardware stack levels required when called: 4
  9702 ;; This function calls:
  9703 ;;		_stop
  9704 ;;		_turnLeft
  9705 ;; This function is called by:
  9706 ;;		_GreenMove
  9707 ;;		_PinkMove
  9708 ;;		_LightBlueMove
  9709 ;;		_ReverseYellow
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           	psect	text55
  9714   00540A                     __ptext55:
  9715                           	callstack 0
  9716   00540A                     _turnLeft45:
  9717                           	callstack 24
  9718   00540A                     
  9719                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  9720   00540A  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  9721   00540E  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  9722   005412  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  9723   005416  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  9724   00541A  EC8A  F026         	call	_turnLeft	;wreg free
  9725   00541E                     
  9726                           ;dc_motor.c: 190:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  9727   00541E  0E12               	movlw	18
  9728   005420  6E1F               	movwf	(??_turnLeft45+1)^0,c
  9729   005422  0EDC               	movlw	220
  9730   005424  6E1E               	movwf	??_turnLeft45^0,c
  9731   005426  0E60               	movlw	96
  9732   005428                     u5767:
  9733   005428  2EE8               	decfsz	wreg,f,c
  9734   00542A  D7FE               	bra	u5767
  9735   00542C  2E1E               	decfsz	??_turnLeft45^0,f,c
  9736   00542E  D7FC               	bra	u5767
  9737   005430  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  9738   005432  D7FA               	bra	u5767
  9739   005434                     
  9740                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  9741   005434  0E7B               	movlw	low _motorL
  9742   005436  6E14               	movwf	stop@mL^0,c
  9743   005438  0E01               	movlw	high _motorL
  9744   00543A  6E15               	movwf	(stop@mL+1)^0,c
  9745   00543C  0E72               	movlw	low _motorR
  9746   00543E  6E16               	movwf	stop@mR^0,c
  9747   005440  0E01               	movlw	high _motorR
  9748   005442  6E17               	movwf	(stop@mR+1)^0,c
  9749   005444  ECAD  F027         	call	_stop	;wreg free
  9750                           
  9751                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9752   005448  0E52               	movlw	82
  9753   00544A  6E1F               	movwf	(??_turnLeft45+1)^0,c
  9754   00544C  0E2B               	movlw	43
  9755   00544E  6E1E               	movwf	??_turnLeft45^0,c
  9756   005450  0E00               	movlw	0
  9757   005452                     u5777:
  9758   005452  2EE8               	decfsz	wreg,f,c
  9759   005454  D7FE               	bra	u5777
  9760   005456  2E1E               	decfsz	??_turnLeft45^0,f,c
  9761   005458  D7FC               	bra	u5777
  9762   00545A  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  9763   00545C  D7FA               	bra	u5777
  9764   00545E  D000               	nop2	
  9765   005460  0012               	return		;funcret
  9766   005462                     __end_of_turnLeft45:
  9767                           	callstack 0
  9768                           
  9769 ;; *************** function _turnLeft *****************
  9770 ;; Defined at:
  9771 ;;		line 110 in file "dc_motor.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9774 ;;		 -> motorL(9), 
  9775 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9776 ;;		 -> motorR(9), 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;Total ram usage:        6 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 3
  9795 ;; This function calls:
  9796 ;;		_setMotorPWM
  9797 ;; This function is called by:
  9798 ;;		_turnLeft45
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text56
  9803   004D14                     __ptext56:
  9804                           	callstack 0
  9805   004D14                     _turnLeft:
  9806                           	callstack 24
  9807   004D14                     
  9808                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  9809   004D14  EE20 F001          	lfsr	2,1
  9810   004D18  5014               	movf	turnLeft@mL^0,w,c
  9811   004D1A  26D9               	addwf	fsr2l,f,c
  9812   004D1C  5015               	movf	(turnLeft@mL+1)^0,w,c
  9813   004D1E  22DA               	addwfc	fsr2h,f,c
  9814   004D20  0E00               	movlw	0
  9815   004D22  6EDF               	movwf	indf2,c
  9816                           
  9817                           ;dc_motor.c: 113:     mR->direction =1;
  9818   004D24  EE20 F001          	lfsr	2,1
  9819   004D28  5016               	movf	turnLeft@mR^0,w,c
  9820   004D2A  26D9               	addwf	fsr2l,f,c
  9821   004D2C  5017               	movf	(turnLeft@mR+1)^0,w,c
  9822   004D2E  22DA               	addwfc	fsr2h,f,c
  9823   004D30  0E01               	movlw	1
  9824   004D32  6EDF               	movwf	indf2,c
  9825                           
  9826                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  9827   004D34  EFC0  F026         	goto	l4417
  9828   004D38                     l4409:
  9829                           
  9830                           ;dc_motor.c: 117:         mL->power+=10;
  9831   004D38  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9832   004D3C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9833   004D40  0E0A               	movlw	10
  9834   004D42  26DF               	addwf	indf2,f,c
  9835                           
  9836                           ;dc_motor.c: 118:         mR->power+=10;
  9837   004D44  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9838   004D48  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9839   004D4C  0E0A               	movlw	10
  9840   004D4E  26DF               	addwf	indf2,f,c
  9841   004D50                     
  9842                           ;dc_motor.c: 120:         setMotorPWM(mL);
  9843   004D50  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9844   004D54  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9845   004D58  EC46  F022         	call	_setMotorPWM	;wreg free
  9846   004D5C                     
  9847                           ;dc_motor.c: 121:         setMotorPWM(mR);
  9848   004D5C  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9849   004D60  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9850   004D64  EC46  F022         	call	_setMotorPWM	;wreg free
  9851   004D68                     
  9852                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9853   004D68  0E02               	movlw	2
  9854   004D6A  6E19               	movwf	(??_turnLeft+1)^0,c
  9855   004D6C  0EA0               	movlw	160
  9856   004D6E  6E18               	movwf	??_turnLeft^0,c
  9857   004D70  0E92               	movlw	146
  9858   004D72                     u5787:
  9859   004D72  2EE8               	decfsz	wreg,f,c
  9860   004D74  D7FE               	bra	u5787
  9861   004D76  2E18               	decfsz	??_turnLeft^0,f,c
  9862   004D78  D7FC               	bra	u5787
  9863   004D7A  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  9864   004D7C  D7FA               	bra	u5787
  9865   004D7E  D000               	nop2	
  9866   004D80                     l4417:
  9867   004D80  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9868   004D84  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9869   004D88  0E1E               	movlw	30
  9870   004D8A  60DF               	cpfslt	indf2,c
  9871   004D8C  EFCA  F026         	goto	u4291
  9872   004D90  EFCC  F026         	goto	u4290
  9873   004D94                     u4291:
  9874   004D94  EFD8  F026         	goto	l488
  9875   004D98                     u4290:
  9876   004D98  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9877   004D9C  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9878   004DA0  0E1D               	movlw	29
  9879   004DA2  64DF               	cpfsgt	indf2,c
  9880   004DA4  EFD6  F026         	goto	u4301
  9881   004DA8  EFD8  F026         	goto	u4300
  9882   004DAC                     u4301:
  9883   004DAC  EF9C  F026         	goto	l4409
  9884   004DB0                     u4300:
  9885   004DB0                     l488:
  9886   004DB0  0012               	return		;funcret
  9887   004DB2                     __end_of_turnLeft:
  9888                           	callstack 0
  9889                           
  9890 ;; *************** function _reverseOneBlock *****************
  9891 ;; Defined at:
  9892 ;;		line 202 in file "dc_motor.c"
  9893 ;; Parameters:    Size  Location     Type
  9894 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9895 ;;		 -> motorL(9), 
  9896 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9897 ;;		 -> motorR(9), 
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;		None
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  1    wreg      void 
  9902 ;; Registers used:
  9903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9912 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9913 ;;Total ram usage:        6 bytes
  9914 ;; Hardware stack levels used: 1
  9915 ;; Hardware stack levels required when called: 4
  9916 ;; This function calls:
  9917 ;;		_fullSpeedBack
  9918 ;;		_stop
  9919 ;; This function is called by:
  9920 ;;		_YellowMove
  9921 ;;		_PinkMove
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text57
  9926   0052FE                     __ptext57:
  9927                           	callstack 0
  9928   0052FE                     _reverseOneBlock:
  9929                           	callstack 25
  9930   0052FE                     
  9931                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  9932   0052FE  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  9933   005302  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  9934   005306  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  9935   00530A  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  9936   00530E  ECD9  F026         	call	_fullSpeedBack	;wreg free
  9937   005312                     
  9938                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9939   005312  0E52               	movlw	82
  9940   005314  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  9941   005316  0E2B               	movlw	43
  9942   005318  6E1E               	movwf	??_reverseOneBlock^0,c
  9943   00531A  0E00               	movlw	0
  9944   00531C                     u5797:
  9945   00531C  2EE8               	decfsz	wreg,f,c
  9946   00531E  D7FE               	bra	u5797
  9947   005320  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  9948   005322  D7FC               	bra	u5797
  9949   005324  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9950   005326  D7FA               	bra	u5797
  9951   005328  D000               	nop2	
  9952   00532A                     
  9953                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  9954   00532A  0E7B               	movlw	low _motorL
  9955   00532C  6E14               	movwf	stop@mL^0,c
  9956   00532E  0E01               	movlw	high _motorL
  9957   005330  6E15               	movwf	(stop@mL+1)^0,c
  9958   005332  0E72               	movlw	low _motorR
  9959   005334  6E16               	movwf	stop@mR^0,c
  9960   005336  0E01               	movlw	high _motorR
  9961   005338  6E17               	movwf	(stop@mR+1)^0,c
  9962   00533A  ECAD  F027         	call	_stop	;wreg free
  9963                           
  9964                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9965   00533E  0E52               	movlw	82
  9966   005340  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  9967   005342  0E2B               	movlw	43
  9968   005344  6E1E               	movwf	??_reverseOneBlock^0,c
  9969   005346  0E00               	movlw	0
  9970   005348                     u5807:
  9971   005348  2EE8               	decfsz	wreg,f,c
  9972   00534A  D7FE               	bra	u5807
  9973   00534C  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  9974   00534E  D7FC               	bra	u5807
  9975   005350  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9976   005352  D7FA               	bra	u5807
  9977   005354  D000               	nop2	
  9978   005356  0012               	return		;funcret
  9979   005358                     __end_of_reverseOneBlock:
  9980                           	callstack 0
  9981                           
  9982 ;; *************** function _reverseDetect *****************
  9983 ;; Defined at:
  9984 ;;		line 195 in file "dc_motor.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9987 ;;		 -> motorL(9), 
  9988 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9989 ;;		 -> motorR(9), 
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10004 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10005 ;;Total ram usage:        6 bytes
 10006 ;; Hardware stack levels used: 1
 10007 ;; Hardware stack levels required when called: 4
 10008 ;; This function calls:
 10009 ;;		_fullSpeedBack
 10010 ;;		_stop
 10011 ;; This function is called by:
 10012 ;;		_RedMove
 10013 ;;		_GreenMove
 10014 ;;		_BlueMove
 10015 ;;		_YellowMove
 10016 ;;		_PinkMove
 10017 ;;		_OrangeMove
 10018 ;;		_LightBlueMove
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text58
 10023   005358                     __ptext58:
 10024                           	callstack 0
 10025   005358                     _reverseDetect:
 10026                           	callstack 24
 10027   005358                     
 10028                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
 10029   005358  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10030   00535C  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10031   005360  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10032   005364  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10033   005368  ECD9  F026         	call	_fullSpeedBack	;wreg free
 10034   00536C                     
 10035                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10036   00536C  0E11               	movlw	17
 10037   00536E  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10038   005370  0E3C               	movlw	60
 10039   005372  6E1E               	movwf	??_reverseDetect^0,c
 10040   005374  0ECB               	movlw	203
 10041   005376                     u5817:
 10042   005376  2EE8               	decfsz	wreg,f,c
 10043   005378  D7FE               	bra	u5817
 10044   00537A  2E1E               	decfsz	??_reverseDetect^0,f,c
 10045   00537C  D7FC               	bra	u5817
 10046   00537E  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10047   005380  D7FA               	bra	u5817
 10048   005382  F000               	nop	
 10049   005384                     
 10050                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
 10051   005384  0E7B               	movlw	low _motorL
 10052   005386  6E14               	movwf	stop@mL^0,c
 10053   005388  0E01               	movlw	high _motorL
 10054   00538A  6E15               	movwf	(stop@mL+1)^0,c
 10055   00538C  0E72               	movlw	low _motorR
 10056   00538E  6E16               	movwf	stop@mR^0,c
 10057   005390  0E01               	movlw	high _motorR
 10058   005392  6E17               	movwf	(stop@mR+1)^0,c
 10059   005394  ECAD  F027         	call	_stop	;wreg free
 10060                           
 10061                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10062   005398  0E52               	movlw	82
 10063   00539A  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10064   00539C  0E2B               	movlw	43
 10065   00539E  6E1E               	movwf	??_reverseDetect^0,c
 10066   0053A0  0E00               	movlw	0
 10067   0053A2                     u5827:
 10068   0053A2  2EE8               	decfsz	wreg,f,c
 10069   0053A4  D7FE               	bra	u5827
 10070   0053A6  2E1E               	decfsz	??_reverseDetect^0,f,c
 10071   0053A8  D7FC               	bra	u5827
 10072   0053AA  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10073   0053AC  D7FA               	bra	u5827
 10074   0053AE  D000               	nop2	
 10075   0053B0  0012               	return		;funcret
 10076   0053B2                     __end_of_reverseDetect:
 10077                           	callstack 0
 10078                           
 10079 ;; *************** function _stop *****************
 10080 ;; Defined at:
 10081 ;;		line 92 in file "dc_motor.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10084 ;;		 -> motorL(9), 
 10085 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10086 ;;		 -> motorR(9), 
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;		None
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  1    wreg      void 
 10091 ;; Registers used:
 10092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;Total ram usage:        6 bytes
 10103 ;; Hardware stack levels used: 1
 10104 ;; Hardware stack levels required when called: 3
 10105 ;; This function calls:
 10106 ;;		_setMotorPWM
 10107 ;; This function is called by:
 10108 ;;		_main
 10109 ;;		_turnRight45
 10110 ;;		_turnLeft45
 10111 ;;		_reverseDetect
 10112 ;;		_reverseOneBlock
 10113 ;;		_ForwardOneBlock
 10114 ;;		_Forwardhalfblock
 10115 ;;		_RetryMove
 10116 ;;		_Backhalfblock
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text59
 10121   004F5A                     __ptext59:
 10122                           	callstack 0
 10123   004F5A                     _stop:
 10124                           	callstack 27
 10125   004F5A                     
 10126                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
 10127   004F5A  EFD3  F027         	goto	l4403
 10128   004F5E                     l4395:
 10129                           
 10130                           ;dc_motor.c: 96:         mL->power-=10;
 10131   004F5E  C014  FFD9         	movff	stop@mL,fsr2l
 10132   004F62  C015  FFDA         	movff	stop@mL+1,fsr2h
 10133   004F66  0E0A               	movlw	10
 10134   004F68  5EDF               	subwf	indf2,f,c
 10135                           
 10136                           ;dc_motor.c: 97:         mR->power-=10;
 10137   004F6A  C016  FFD9         	movff	stop@mR,fsr2l
 10138   004F6E  C017  FFDA         	movff	stop@mR+1,fsr2h
 10139   004F72  0E0A               	movlw	10
 10140   004F74  5EDF               	subwf	indf2,f,c
 10141   004F76                     
 10142                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10143   004F76  C014  F00E         	movff	stop@mL,setMotorPWM@m
 10144   004F7A  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 10145   004F7E  EC46  F022         	call	_setMotorPWM	;wreg free
 10146   004F82                     
 10147                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10148   004F82  C016  F00E         	movff	stop@mR,setMotorPWM@m
 10149   004F86  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 10150   004F8A  EC46  F022         	call	_setMotorPWM	;wreg free
 10151   004F8E                     
 10152                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10153   004F8E  0E02               	movlw	2
 10154   004F90  6E19               	movwf	(??_stop+1)^0,c
 10155   004F92  0EA0               	movlw	160
 10156   004F94  6E18               	movwf	??_stop^0,c
 10157   004F96  0E92               	movlw	146
 10158   004F98                     u5837:
 10159   004F98  2EE8               	decfsz	wreg,f,c
 10160   004F9A  D7FE               	bra	u5837
 10161   004F9C  2E18               	decfsz	??_stop^0,f,c
 10162   004F9E  D7FC               	bra	u5837
 10163   004FA0  2E19               	decfsz	(??_stop+1)^0,f,c
 10164   004FA2  D7FA               	bra	u5837
 10165   004FA4  D000               	nop2	
 10166   004FA6                     l4403:
 10167                           
 10168                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
 10169   004FA6  C014  FFD9         	movff	stop@mL,fsr2l
 10170   004FAA  C015  FFDA         	movff	stop@mL+1,fsr2h
 10171   004FAE  50DF               	movf	indf2,w,c
 10172   004FB0  A4D8               	btfss	status,2,c
 10173   004FB2  EFDD  F027         	goto	u4271
 10174   004FB6  EFDF  F027         	goto	u4270
 10175   004FBA                     u4271:
 10176   004FBA  EFAF  F027         	goto	l4395
 10177   004FBE                     u4270:
 10178   004FBE  C016  FFD9         	movff	stop@mR,fsr2l
 10179   004FC2  C017  FFDA         	movff	stop@mR+1,fsr2h
 10180   004FC6  50DF               	movf	indf2,w,c
 10181   004FC8  A4D8               	btfss	status,2,c
 10182   004FCA  EFE9  F027         	goto	u4281
 10183   004FCE  EFEB  F027         	goto	u4280
 10184   004FD2                     u4281:
 10185   004FD2  EFAF  F027         	goto	l4395
 10186   004FD6                     u4280:
 10187   004FD6  0012               	return		;funcret
 10188   004FD8                     __end_of_stop:
 10189                           	callstack 0
 10190                           
 10191 ;; *************** function _fullSpeedBack *****************
 10192 ;; Defined at:
 10193 ;;		line 164 in file "dc_motor.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10196 ;;		 -> motorL(9), 
 10197 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10198 ;;		 -> motorR(9), 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;		None
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      void 
 10203 ;; Registers used:
 10204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10214 ;;Total ram usage:        6 bytes
 10215 ;; Hardware stack levels used: 1
 10216 ;; Hardware stack levels required when called: 3
 10217 ;; This function calls:
 10218 ;;		_setMotorPWM
 10219 ;; This function is called by:
 10220 ;;		_reverseDetect
 10221 ;;		_reverseOneBlock
 10222 ;;		_RetryMove
 10223 ;;		_Backhalfblock
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           	psect	text60
 10228   004DB2                     __ptext60:
 10229                           	callstack 0
 10230   004DB2                     _fullSpeedBack:
 10231                           	callstack 24
 10232   004DB2                     
 10233                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
 10234   004DB2  EE20 F001          	lfsr	2,1
 10235   004DB6  5014               	movf	fullSpeedBack@mL^0,w,c
 10236   004DB8  26D9               	addwf	fsr2l,f,c
 10237   004DBA  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10238   004DBC  22DA               	addwfc	fsr2h,f,c
 10239   004DBE  0E00               	movlw	0
 10240   004DC0  6EDF               	movwf	indf2,c
 10241                           
 10242                           ;dc_motor.c: 168:     mR->direction =0;
 10243   004DC2  EE20 F001          	lfsr	2,1
 10244   004DC6  5016               	movf	fullSpeedBack@mR^0,w,c
 10245   004DC8  26D9               	addwf	fsr2l,f,c
 10246   004DCA  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10247   004DCC  22DA               	addwfc	fsr2h,f,c
 10248   004DCE  0E00               	movlw	0
 10249   004DD0  6EDF               	movwf	indf2,c
 10250                           
 10251                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
 10252   004DD2  EF0F  F027         	goto	l4459
 10253   004DD6                     l4451:
 10254                           
 10255                           ;dc_motor.c: 171:         mL->power+=10;
 10256   004DD6  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10257   004DDA  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10258   004DDE  0E0A               	movlw	10
 10259   004DE0  26DF               	addwf	indf2,f,c
 10260                           
 10261                           ;dc_motor.c: 172:         mR->power+=10;
 10262   004DE2  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10263   004DE6  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10264   004DEA  0E0A               	movlw	10
 10265   004DEC  26DF               	addwf	indf2,f,c
 10266   004DEE                     
 10267                           ;dc_motor.c: 174:         setMotorPWM(mL);
 10268   004DEE  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10269   004DF2  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10270   004DF6  EC46  F022         	call	_setMotorPWM	;wreg free
 10271   004DFA                     
 10272                           ;dc_motor.c: 175:         setMotorPWM(mR);
 10273   004DFA  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10274   004DFE  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10275   004E02  EC46  F022         	call	_setMotorPWM	;wreg free
 10276   004E06                     
 10277                           ;dc_motor.c: 177:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10278   004E06  0E02               	movlw	2
 10279   004E08  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10280   004E0A  0EA0               	movlw	160
 10281   004E0C  6E18               	movwf	??_fullSpeedBack^0,c
 10282   004E0E  0E92               	movlw	146
 10283   004E10                     u5847:
 10284   004E10  2EE8               	decfsz	wreg,f,c
 10285   004E12  D7FE               	bra	u5847
 10286   004E14  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10287   004E16  D7FC               	bra	u5847
 10288   004E18  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10289   004E1A  D7FA               	bra	u5847
 10290   004E1C  D000               	nop2	
 10291   004E1E                     l4459:
 10292   004E1E  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10293   004E22  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10294   004E26  0E1E               	movlw	30
 10295   004E28  60DF               	cpfslt	indf2,c
 10296   004E2A  EF19  F027         	goto	u4351
 10297   004E2E  EF1B  F027         	goto	u4350
 10298   004E32                     u4351:
 10299   004E32  EF27  F027         	goto	l512
 10300   004E36                     u4350:
 10301   004E36  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10302   004E3A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10303   004E3E  0E1D               	movlw	29
 10304   004E40  64DF               	cpfsgt	indf2,c
 10305   004E42  EF25  F027         	goto	u4361
 10306   004E46  EF27  F027         	goto	u4360
 10307   004E4A                     u4361:
 10308   004E4A  EFEB  F026         	goto	l4451
 10309   004E4E                     u4360:
 10310   004E4E                     l512:
 10311   004E4E  0012               	return		;funcret
 10312   004E50                     __end_of_fullSpeedBack:
 10313                           	callstack 0
 10314                           
 10315 ;; *************** function _setMotorPWM *****************
 10316 ;; Defined at:
 10317 ;;		line 67 in file "dc_motor.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;  m               2   13[COMRAM] PTR struct DC_motor
 10320 ;;		 -> motorR(9), motorL(9), 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  negDuty         1   18[COMRAM] unsigned char 
 10323 ;;  posDuty         1   17[COMRAM] unsigned char 
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10337 ;;Total ram usage:        6 bytes
 10338 ;; Hardware stack levels used: 1
 10339 ;; Hardware stack levels required when called: 2
 10340 ;; This function calls:
 10341 ;;		___lwdiv
 10342 ;;		___wmul
 10343 ;; This function is called by:
 10344 ;;		_stop
 10345 ;;		_turnLeft
 10346 ;;		_turnRight
 10347 ;;		_fullSpeedAhead
 10348 ;;		_fullSpeedBack
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text61
 10353   00448C                     __ptext61:
 10354                           	callstack 0
 10355   00448C                     _setMotorPWM:
 10356                           	callstack 27
 10357   00448C                     
 10358                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
 10359   00448C  EE20 F002          	lfsr	2,2
 10360   004490  500E               	movf	setMotorPWM@m^0,w,c
 10361   004492  26D9               	addwf	fsr2l,f,c
 10362   004494  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10363   004496  22DA               	addwfc	fsr2h,f,c
 10364   004498  50DF               	movf	indf2,w,c
 10365   00449A  B4D8               	btfsc	status,2,c
 10366   00449C  EF52  F022         	goto	u3291
 10367   0044A0  EF54  F022         	goto	u3290
 10368   0044A4                     u3291:
 10369   0044A4  EF88  F022         	goto	l3847
 10370   0044A8                     u3290:
 10371   0044A8                     
 10372                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 10373   0044A8  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10374   0044AC  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10375   0044B0  50DF               	movf	indf2,w,c
 10376   0044B2  6E10               	movwf	??_setMotorPWM^0,c
 10377   0044B4  5010               	movf	??_setMotorPWM^0,w,c
 10378   0044B6  6E01               	movwf	___wmul@multiplier^0,c
 10379   0044B8  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10380   0044BA  EE20 F003          	lfsr	2,3
 10381   0044BE  500E               	movf	setMotorPWM@m^0,w,c
 10382   0044C0  26D9               	addwf	fsr2l,f,c
 10383   0044C2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10384   0044C4  22DA               	addwfc	fsr2h,f,c
 10385   0044C6  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10386   0044CA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10387   0044CE  EC9B  F02D         	call	___wmul	;wreg free
 10388   0044D2  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10389   0044D6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10390   0044DA  0E00               	movlw	0
 10391   0044DC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10392   0044DE  0E64               	movlw	100
 10393   0044E0  6E09               	movwf	___lwdiv@divisor^0,c
 10394   0044E2  EC29  F028         	call	___lwdiv	;wreg free
 10395   0044E6  EE20 F003          	lfsr	2,3
 10396   0044EA  500E               	movf	setMotorPWM@m^0,w,c
 10397   0044EC  26D9               	addwf	fsr2l,f,c
 10398   0044EE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10399   0044F0  22DA               	addwfc	fsr2h,f,c
 10400   0044F2  50DF               	movf	indf2,w,c
 10401   0044F4  6E11               	movwf	(??_setMotorPWM+1)^0,c
 10402   0044F6  5007               	movf	?___lwdiv^0,w,c
 10403   0044F8  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 10404   0044FA  6E12               	movwf	setMotorPWM@posDuty^0,c
 10405   0044FC                     
 10406                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
 10407   0044FC  EE20 F003          	lfsr	2,3
 10408   004500  500E               	movf	setMotorPWM@m^0,w,c
 10409   004502  26D9               	addwf	fsr2l,f,c
 10410   004504  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10411   004506  22DA               	addwfc	fsr2h,f,c
 10412   004508  50DF               	movf	indf2,w,c
 10413   00450A  6E13               	movwf	setMotorPWM@negDuty^0,c
 10414                           
 10415                           ;dc_motor.c: 74:     }
 10416   00450C  EFAB  F022         	goto	l3851
 10417   004510                     l3847:
 10418                           
 10419                           ;dc_motor.c: 76:         posDuty=0;
 10420   004510  0E00               	movlw	0
 10421   004512  6E12               	movwf	setMotorPWM@posDuty^0,c
 10422   004514                     
 10423                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10424   004514  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10425   004518  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10426   00451C  50DF               	movf	indf2,w,c
 10427   00451E  6E10               	movwf	??_setMotorPWM^0,c
 10428   004520  5010               	movf	??_setMotorPWM^0,w,c
 10429   004522  6E01               	movwf	___wmul@multiplier^0,c
 10430   004524  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10431   004526  EE20 F003          	lfsr	2,3
 10432   00452A  500E               	movf	setMotorPWM@m^0,w,c
 10433   00452C  26D9               	addwf	fsr2l,f,c
 10434   00452E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10435   004530  22DA               	addwfc	fsr2h,f,c
 10436   004532  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10437   004536  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10438   00453A  EC9B  F02D         	call	___wmul	;wreg free
 10439   00453E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10440   004542  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10441   004546  0E00               	movlw	0
 10442   004548  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10443   00454A  0E64               	movlw	100
 10444   00454C  6E09               	movwf	___lwdiv@divisor^0,c
 10445   00454E  EC29  F028         	call	___lwdiv	;wreg free
 10446   004552  5007               	movf	?___lwdiv^0,w,c
 10447   004554  6E13               	movwf	setMotorPWM@negDuty^0,c
 10448   004556                     l3851:
 10449                           
 10450                           ;dc_motor.c: 80:     if (m->direction) {
 10451   004556  EE20 F001          	lfsr	2,1
 10452   00455A  500E               	movf	setMotorPWM@m^0,w,c
 10453   00455C  26D9               	addwf	fsr2l,f,c
 10454   00455E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10455   004560  22DA               	addwfc	fsr2h,f,c
 10456   004562  50DF               	movf	indf2,w,c
 10457   004564  B4D8               	btfsc	status,2,c
 10458   004566  EFB7  F022         	goto	u3301
 10459   00456A  EFB9  F022         	goto	u3300
 10460   00456E                     u3301:
 10461   00456E  EFDB  F022         	goto	l3855
 10462   004572                     u3300:
 10463   004572                     
 10464                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 10465   004572  EE20 F005          	lfsr	2,5
 10466   004576  500E               	movf	setMotorPWM@m^0,w,c
 10467   004578  26D9               	addwf	fsr2l,f,c
 10468   00457A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10469   00457C  22DA               	addwfc	fsr2h,f,c
 10470   00457E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10471   004582  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10472   004586  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10473   00458A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10474   00458E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10475                           
 10476                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 10477   004592  EE20 F007          	lfsr	2,7
 10478   004596  500E               	movf	setMotorPWM@m^0,w,c
 10479   004598  26D9               	addwf	fsr2l,f,c
 10480   00459A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10481   00459C  22DA               	addwfc	fsr2h,f,c
 10482   00459E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10483   0045A2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10484   0045A6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10485   0045AA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10486   0045AE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10487                           
 10488                           ;dc_motor.c: 85:     } else {
 10489   0045B2  EFFB  F022         	goto	l474
 10490   0045B6                     l3855:
 10491                           
 10492                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 10493   0045B6  EE20 F005          	lfsr	2,5
 10494   0045BA  500E               	movf	setMotorPWM@m^0,w,c
 10495   0045BC  26D9               	addwf	fsr2l,f,c
 10496   0045BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10497   0045C0  22DA               	addwfc	fsr2h,f,c
 10498   0045C2  CFDE F010          	movff	postinc2,??_setMotorPWM
 10499   0045C6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10500   0045CA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10501   0045CE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10502   0045D2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10503                           
 10504                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 10505   0045D6  EE20 F007          	lfsr	2,7
 10506   0045DA  500E               	movf	setMotorPWM@m^0,w,c
 10507   0045DC  26D9               	addwf	fsr2l,f,c
 10508   0045DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10509   0045E0  22DA               	addwfc	fsr2h,f,c
 10510   0045E2  CFDE F010          	movff	postinc2,??_setMotorPWM
 10511   0045E6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10512   0045EA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10513   0045EE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10514   0045F2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10515   0045F6                     l474:
 10516   0045F6  0012               	return		;funcret
 10517   0045F8                     __end_of_setMotorPWM:
 10518                           	callstack 0
 10519                           
 10520 ;; *************** function ___wmul *****************
 10521 ;; Defined at:
 10522 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;  multiplier      2    0[COMRAM] unsigned int 
 10525 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;  product         2    4[COMRAM] unsigned int 
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  2    0[COMRAM] unsigned int 
 10530 ;; Registers used:
 10531 ;;		wreg, status,2, status,0, prodl, prodh
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10541 ;;Total ram usage:        6 bytes
 10542 ;; Hardware stack levels used: 1
 10543 ;; Hardware stack levels required when called: 1
 10544 ;; This function calls:
 10545 ;;		Nothing
 10546 ;; This function is called by:
 10547 ;;		_setMotorPWM
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           	psect	text62
 10552   005B36                     __ptext62:
 10553                           	callstack 0
 10554   005B36                     ___wmul:
 10555                           	callstack 27
 10556   005B36  5001               	movf	___wmul@multiplier^0,w,c
 10557   005B38  0203               	mulwf	___wmul@multiplicand^0,c
 10558   005B3A  CFF3 F005          	movff	prodl,___wmul@product
 10559   005B3E  CFF4 F006          	movff	prodh,___wmul@product+1
 10560   005B42  5001               	movf	___wmul@multiplier^0,w,c
 10561   005B44  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10562   005B46  50F3               	movf	243,w,c
 10563   005B48  2606               	addwf	(___wmul@product+1)^0,f,c
 10564   005B4A  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10565   005B4C  0203               	mulwf	___wmul@multiplicand^0,c
 10566   005B4E  50F3               	movf	243,w,c
 10567   005B50  2606               	addwf	(___wmul@product+1)^0,f,c
 10568   005B52  C005  F001         	movff	___wmul@product,?___wmul
 10569   005B56  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10570   005B5A  0012               	return		;funcret
 10571   005B5C                     __end_of___wmul:
 10572                           	callstack 0
 10573                           
 10574 ;; *************** function ___lwdiv *****************
 10575 ;; Defined at:
 10576 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  dividend        2    6[COMRAM] unsigned int 
 10579 ;;  divisor         2    8[COMRAM] unsigned int 
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  quotient        2   10[COMRAM] unsigned int 
 10582 ;;  counter         1   12[COMRAM] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  2    6[COMRAM] unsigned int 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10593 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10595 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10596 ;;Total ram usage:        7 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; Hardware stack levels required when called: 1
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_setMotorPWM
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	text63
 10607   005052                     __ptext63:
 10608                           	callstack 0
 10609   005052                     ___lwdiv:
 10610                           	callstack 27
 10611   005052  0E00               	movlw	0
 10612   005054  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10613   005056  0E00               	movlw	0
 10614   005058  6E0B               	movwf	___lwdiv@quotient^0,c
 10615   00505A  5009               	movf	___lwdiv@divisor^0,w,c
 10616   00505C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10617   00505E  B4D8               	btfsc	status,2,c
 10618   005060  EF34  F028         	goto	u3251
 10619   005064  EF36  F028         	goto	u3250
 10620   005068                     u3251:
 10621   005068  EF5E  F028         	goto	l1105
 10622   00506C                     u3250:
 10623   00506C  0E01               	movlw	1
 10624   00506E  6E0D               	movwf	___lwdiv@counter^0,c
 10625   005070  EF3E  F028         	goto	l3819
 10626   005074                     l3817:
 10627   005074  90D8               	bcf	status,0,c
 10628   005076  3609               	rlcf	___lwdiv@divisor^0,f,c
 10629   005078  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10630   00507A  2A0D               	incf	___lwdiv@counter^0,f,c
 10631   00507C                     l3819:
 10632   00507C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10633   00507E  EF43  F028         	goto	u3261
 10634   005082  EF45  F028         	goto	u3260
 10635   005086                     u3261:
 10636   005086  EF3A  F028         	goto	l3817
 10637   00508A                     u3260:
 10638   00508A                     l3821:
 10639   00508A  90D8               	bcf	status,0,c
 10640   00508C  360B               	rlcf	___lwdiv@quotient^0,f,c
 10641   00508E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10642   005090  5009               	movf	___lwdiv@divisor^0,w,c
 10643   005092  5C07               	subwf	___lwdiv@dividend^0,w,c
 10644   005094  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10645   005096  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10646   005098  A0D8               	btfss	status,0,c
 10647   00509A  EF51  F028         	goto	u3271
 10648   00509E  EF53  F028         	goto	u3270
 10649   0050A2                     u3271:
 10650   0050A2  EF58  F028         	goto	l3829
 10651   0050A6                     u3270:
 10652   0050A6  5009               	movf	___lwdiv@divisor^0,w,c
 10653   0050A8  5E07               	subwf	___lwdiv@dividend^0,f,c
 10654   0050AA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10655   0050AC  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10656   0050AE  800B               	bsf	___lwdiv@quotient^0,0,c
 10657   0050B0                     l3829:
 10658   0050B0  90D8               	bcf	status,0,c
 10659   0050B2  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10660   0050B4  3209               	rrcf	___lwdiv@divisor^0,f,c
 10661   0050B6  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10662   0050B8  EF45  F028         	goto	l3821
 10663   0050BC                     l1105:
 10664   0050BC  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10665   0050C0  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10666   0050C4  0012               	return		;funcret
 10667   0050C6                     __end_of___lwdiv:
 10668                           	callstack 0
 10669                           
 10670 ;; *************** function _Interrupts_init *****************
 10671 ;; Defined at:
 10672 ;;		line 12 in file "interrupts.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;		None
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		None
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10690 ;;Total ram usage:        0 bytes
 10691 ;; Hardware stack levels used: 1
 10692 ;; Hardware stack levels required when called: 1
 10693 ;; This function calls:
 10694 ;;		Nothing
 10695 ;; This function is called by:
 10696 ;;		_main
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700                           	psect	text64
 10701   005BE6                     __ptext64:
 10702                           	callstack 0
 10703   005BE6                     _Interrupts_init:
 10704                           	callstack 29
 10705   005BE6  0012               	return		;funcret
 10706   005BE8                     __end_of_Interrupts_init:
 10707                           	callstack 0
 10708                           
 10709 ;; *************** function _Colour_decider *****************
 10710 ;; Defined at:
 10711 ;;		line 125 in file "color.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  vals            2   74[COMRAM] PTR struct RGB
 10714 ;;		 -> vals(8), 
 10715 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 10716 ;;		 -> rel(12), 
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  RGB_col        12    6[BANK0 ] float [3]
 10719 ;;  Hue             4   28[BANK0 ] float 
 10720 ;;  Cmin            4   22[BANK0 ] float 
 10721 ;;  Cmax            4   18[BANK0 ] float 
 10722 ;;  i               2   26[BANK0 ] int 
 10723 ;;  Cmax_i          2    4[BANK0 ] int 
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  2   74[COMRAM] int 
 10726 ;; Registers used:
 10727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10734 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;Total ram usage:       38 bytes
 10738 ;; Hardware stack levels used: 1
 10739 ;; Hardware stack levels required when called: 3
 10740 ;; This function calls:
 10741 ;;		___fladd
 10742 ;;		___fldiv
 10743 ;;		___fleq
 10744 ;;		___flge
 10745 ;;		___flmul
 10746 ;;		___flsub
 10747 ;;		___xxtofl
 10748 ;; This function is called by:
 10749 ;;		_main
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text65
 10754   000E5A                     __ptext65:
 10755                           	callstack 0
 10756   000E5A                     _Colour_decider:
 10757                           	callstack 27
 10758   000E5A                     
 10759                           ;color.c: 126:     float Cmax = 0;
 10760   000E5A  0E00               	movlw	0
 10761   000E5C  0100               	movlb	0	; () banked
 10762   000E5E  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 10763   000E60  0E00               	movlw	0
 10764   000E62  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 10765   000E64  0E00               	movlw	0
 10766   000E66  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 10767   000E68  0E00               	movlw	0
 10768   000E6A  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 10769                           
 10770                           ;color.c: 127:     float Cmin= 100000;
 10771   000E6C  0E00               	movlw	0
 10772   000E6E  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 10773   000E70  0E50               	movlw	80
 10774   000E72  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 10775   000E74  0EC3               	movlw	195
 10776   000E76  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 10777   000E78  0E47               	movlw	71
 10778   000E7A  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 10779                           
 10780                           ;color.c: 128:     int Cmax_i =4;
 10781   000E7C  0E00               	movlw	0
 10782   000E7E  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 10783   000E80  0E04               	movlw	4
 10784   000E82  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 10785   000E84                     
 10786                           ; BSR set to: 0
 10787                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 10788   000E84  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 10789   000E88  0E0B               	movlw	11
 10790   000E8A                     u4971:
 10791   000E8A  6ADE               	clrf	postinc2,c
 10792   000E8C  06E8               	decf	wreg,f,c
 10793   000E8E  E2FD               	bc	u4971
 10794   000E90                     
 10795                           ; BSR set to: 0
 10796   000E90  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 10797   000E94  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 10798   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
 10799   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10800   000EA0  0E00               	movlw	0
 10801   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10802   000EA4  0EFF               	movlw	-1
 10803   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
 10804   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
 10805   000EAA  0E01               	movlw	1
 10806   000EAC  ECA8  F020         	call	___xxtofl
 10807   000EB0  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 10808   000EB4  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 10809   000EB8  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 10810   000EBC  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 10811   000EC0  EE20 F002          	lfsr	2,2
 10812   000EC4  504B               	movf	Colour_decider@vals^0,w,c
 10813   000EC6  26D9               	addwf	fsr2l,f,c
 10814   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
 10815   000ECA  22DA               	addwfc	fsr2h,f,c
 10816   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
 10817   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10818   000ED4  0E00               	movlw	0
 10819   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10820   000ED8  0EFF               	movlw	-1
 10821   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
 10822   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
 10823   000EDE  0E01               	movlw	1
 10824   000EE0  ECA8  F020         	call	___xxtofl
 10825   000EE4  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 10826   000EE8  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 10827   000EEC  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 10828   000EF0  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 10829   000EF4  EE20 F004          	lfsr	2,4
 10830   000EF8  504B               	movf	Colour_decider@vals^0,w,c
 10831   000EFA  26D9               	addwf	fsr2l,f,c
 10832   000EFC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 10833   000EFE  22DA               	addwfc	fsr2h,f,c
 10834   000F00  CFDE F001          	movff	postinc2,___xxtofl@val
 10835   000F04  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10836   000F08  0E00               	movlw	0
 10837   000F0A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10838   000F0C  0EFF               	movlw	-1
 10839   000F0E  6E03               	movwf	(___xxtofl@val+2)^0,c
 10840   000F10  6E04               	movwf	(___xxtofl@val+3)^0,c
 10841   000F12  0E01               	movlw	1
 10842   000F14  ECA8  F020         	call	___xxtofl
 10843   000F18  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 10844   000F1C  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 10845   000F20  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 10846   000F24  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 10847   000F28                     
 10848                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 10849   000F28  0E00               	movlw	0
 10850   000F2A  0100               	movlb	0	; () banked
 10851   000F2C  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 10852   000F2E  0E00               	movlw	0
 10853   000F30  6F7A               	movwf	Colour_decider@i& (0+255),b
 10854   000F32                     l5061:
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 10858   000F32  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 10859   000F36  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 10860   000F3A  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 10861   000F3E  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 10862   000F42  0E66               	movlw	low Colour_decider@RGB_col
 10863   000F44  6E4F               	movwf	??_Colour_decider^0,c
 10864   000F46  0E00               	movlw	high Colour_decider@RGB_col
 10865   000F48  6E50               	movwf	(??_Colour_decider+1)^0,c
 10866   000F4A  90D8               	bcf	status,0,c
 10867   000F4C  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10868   000F4E  6ED9               	movwf	fsr2l,c
 10869   000F50  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10870   000F52  6EDA               	movwf	fsr2h,c
 10871   000F54  90D8               	bcf	status,0,c
 10872   000F56  36D9               	rlcf	fsr2l,f,c
 10873   000F58  36DA               	rlcf	fsr2h,f,c
 10874   000F5A  504F               	movf	??_Colour_decider^0,w,c
 10875   000F5C  26D9               	addwf	fsr2l,f,c
 10876   000F5E  5050               	movf	(??_Colour_decider+1)^0,w,c
 10877   000F60  22DA               	addwfc	fsr2h,f,c
 10878   000F62  CFDE F02E          	movff	postinc2,___flge@ff2
 10879   000F66  CFDE F02F          	movff	postinc2,___flge@ff2+1
 10880   000F6A  CFDE F030          	movff	postinc2,___flge@ff2+2
 10881   000F6E  CFDE F031          	movff	postinc2,___flge@ff2+3
 10882   000F72  EC31  F024         	call	___flge	;wreg free
 10883   000F76  B0D8               	btfsc	status,0,c
 10884   000F78  EFC0  F007         	goto	u4981
 10885   000F7C  EFC2  F007         	goto	u4980
 10886   000F80                     u4981:
 10887   000F80  EFDF  F007         	goto	l5067
 10888   000F84                     u4980:
 10889   000F84                     
 10890                           ;color.c: 137:             Cmax=RGB_col[i];
 10891   000F84  0E66               	movlw	low Colour_decider@RGB_col
 10892   000F86  6E4F               	movwf	??_Colour_decider^0,c
 10893   000F88  0E00               	movlw	high Colour_decider@RGB_col
 10894   000F8A  6E50               	movwf	(??_Colour_decider+1)^0,c
 10895   000F8C  90D8               	bcf	status,0,c
 10896   000F8E  0100               	movlb	0	; () banked
 10897   000F90  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10898   000F92  6ED9               	movwf	fsr2l,c
 10899   000F94  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10900   000F96  6EDA               	movwf	fsr2h,c
 10901   000F98  90D8               	bcf	status,0,c
 10902   000F9A  36D9               	rlcf	fsr2l,f,c
 10903   000F9C  36DA               	rlcf	fsr2h,f,c
 10904   000F9E  504F               	movf	??_Colour_decider^0,w,c
 10905   000FA0  26D9               	addwf	fsr2l,f,c
 10906   000FA2  5050               	movf	(??_Colour_decider+1)^0,w,c
 10907   000FA4  22DA               	addwfc	fsr2h,f,c
 10908   000FA6  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 10909   000FAA  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 10910   000FAE  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 10911   000FB2  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 10912   000FB6                     
 10913                           ; BSR set to: 0
 10914                           ;color.c: 138:             Cmax_i=i;
 10915   000FB6  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 10916   000FBA  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 10917   000FBE                     l5067:
 10918                           
 10919                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 10920   000FBE  0E66               	movlw	low Colour_decider@RGB_col
 10921   000FC0  6E4F               	movwf	??_Colour_decider^0,c
 10922   000FC2  0E00               	movlw	high Colour_decider@RGB_col
 10923   000FC4  6E50               	movwf	(??_Colour_decider+1)^0,c
 10924   000FC6  90D8               	bcf	status,0,c
 10925   000FC8  0100               	movlb	0	; () banked
 10926   000FCA  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10927   000FCC  6ED9               	movwf	fsr2l,c
 10928   000FCE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10929   000FD0  6EDA               	movwf	fsr2h,c
 10930   000FD2  90D8               	bcf	status,0,c
 10931   000FD4  36D9               	rlcf	fsr2l,f,c
 10932   000FD6  36DA               	rlcf	fsr2h,f,c
 10933   000FD8  504F               	movf	??_Colour_decider^0,w,c
 10934   000FDA  26D9               	addwf	fsr2l,f,c
 10935   000FDC  5050               	movf	(??_Colour_decider+1)^0,w,c
 10936   000FDE  22DA               	addwfc	fsr2h,f,c
 10937   000FE0  CFDE F02A          	movff	postinc2,___flge@ff1
 10938   000FE4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 10939   000FE8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 10940   000FEC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 10941   000FF0  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 10942   000FF4  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 10943   000FF8  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 10944   000FFC  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 10945   001000  EC31  F024         	call	___flge	;wreg free
 10946   001004  B0D8               	btfsc	status,0,c
 10947   001006  EF07  F008         	goto	u4991
 10948   00100A  EF09  F008         	goto	u4990
 10949   00100E                     u4991:
 10950   00100E  EF22  F008         	goto	l5071
 10951   001012                     u4990:
 10952   001012  0E66               	movlw	low Colour_decider@RGB_col
 10953   001014  6E4F               	movwf	??_Colour_decider^0,c
 10954   001016  0E00               	movlw	high Colour_decider@RGB_col
 10955   001018  6E50               	movwf	(??_Colour_decider+1)^0,c
 10956   00101A  90D8               	bcf	status,0,c
 10957   00101C  0100               	movlb	0	; () banked
 10958   00101E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10959   001020  6ED9               	movwf	fsr2l,c
 10960   001022  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10961   001024  6EDA               	movwf	fsr2h,c
 10962   001026  90D8               	bcf	status,0,c
 10963   001028  36D9               	rlcf	fsr2l,f,c
 10964   00102A  36DA               	rlcf	fsr2h,f,c
 10965   00102C  504F               	movf	??_Colour_decider^0,w,c
 10966   00102E  26D9               	addwf	fsr2l,f,c
 10967   001030  5050               	movf	(??_Colour_decider+1)^0,w,c
 10968   001032  22DA               	addwfc	fsr2h,f,c
 10969   001034  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 10970   001038  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 10971   00103C  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 10972   001040  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 10973   001044                     l5071:
 10974                           
 10975                           ;color.c: 141:     }
 10976   001044  0100               	movlb	0	; () banked
 10977   001046  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 10978   001048  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 10979   00104A                     
 10980                           ; BSR set to: 0
 10981   00104A  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 10982   00104C  EF31  F008         	goto	u5001
 10983   001050  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 10984   001052  E109               	bnz	u5000
 10985   001054  0E03               	movlw	3
 10986   001056  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 10987   001058  A0D8               	btfss	status,0,c
 10988   00105A  EF31  F008         	goto	u5001
 10989   00105E  EF33  F008         	goto	u5000
 10990   001062                     u5001:
 10991   001062  EF99  F007         	goto	l5061
 10992   001066                     u5000:
 10993   001066                     
 10994                           ; BSR set to: 0
 10995                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 10996   001066  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 10997   00106A  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 10998   00106E  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 10999   001072  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11000   001076  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11001   00107A  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11002   00107E  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11003   001082  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11004   001086  EC1A  F02C         	call	___flsub	;wreg free
 11005   00108A  C02A  F032         	movff	?___flsub,___fleq@ff1
 11006   00108E  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 11007   001092  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 11008   001096  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 11009   00109A  0E00               	movlw	0
 11010   00109C  6E36               	movwf	___fleq@ff2^0,c
 11011   00109E  0E00               	movlw	0
 11012   0010A0  6E37               	movwf	(___fleq@ff2+1)^0,c
 11013   0010A2  0E00               	movlw	0
 11014   0010A4  6E38               	movwf	(___fleq@ff2+2)^0,c
 11015   0010A6  0E00               	movlw	0
 11016   0010A8  6E39               	movwf	(___fleq@ff2+3)^0,c
 11017   0010AA  EC97  F025         	call	___fleq	;wreg free
 11018   0010AE  A0D8               	btfss	status,0,c
 11019   0010B0  EF5C  F008         	goto	u5011
 11020   0010B4  EF5E  F008         	goto	u5010
 11021   0010B8                     u5011:
 11022   0010B8  EF64  F008         	goto	l5081
 11023   0010BC                     u5010:
 11024   0010BC                     l5077:
 11025   0010BC  0E00               	movlw	0
 11026   0010BE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11027   0010C0  0E00               	movlw	0
 11028   0010C2  6E4B               	movwf	?_Colour_decider^0,c
 11029   0010C4  EF9A  F00C         	goto	l74
 11030   0010C8                     l5081:
 11031                           
 11032                           ;color.c: 146:     if (Cmax_i==0){
 11033   0010C8  0100               	movlb	0	; () banked
 11034   0010CA  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 11035   0010CC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11036   0010CE  A4D8               	btfss	status,2,c
 11037   0010D0  EF6C  F008         	goto	u5021
 11038   0010D4  EF6E  F008         	goto	u5020
 11039   0010D8                     u5021:
 11040   0010D8  EFE2  F008         	goto	l5089
 11041   0010DC                     u5020:
 11042   0010DC                     
 11043                           ; BSR set to: 0
 11044                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 11045   0010DC  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11046   0010E0  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11047   0010E4  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11048   0010E8  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11049   0010EC  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11050   0010F0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11051   0010F4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11052   0010F8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11053   0010FC  EC1A  F02C         	call	___flsub	;wreg free
 11054   001100  C02A  F036         	movff	?___flsub,___fldiv@a
 11055   001104  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11056   001108  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11057   00110C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11058   001110  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 11059   001114  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 11060   001118  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 11061   00111C  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 11062   001120  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 11063   001124  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 11064   001128  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 11065   00112C  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 11066   001130  EC1A  F02C         	call	___flsub	;wreg free
 11067   001134  C02A  F032         	movff	?___flsub,___fldiv@b
 11068   001138  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11069   00113C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11070   001140  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11071   001144  EC90  F018         	call	___fldiv	;wreg free
 11072   001148  C032  F011         	movff	?___fldiv,___flmul@b
 11073   00114C  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 11074   001150  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 11075   001154  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 11076   001158  0E00               	movlw	0
 11077   00115A  6E15               	movwf	___flmul@a^0,c
 11078   00115C  0E00               	movlw	0
 11079   00115E  6E16               	movwf	(___flmul@a+1)^0,c
 11080   001160  0E70               	movlw	112
 11081   001162  6E17               	movwf	(___flmul@a+2)^0,c
 11082   001164  0E42               	movlw	66
 11083   001166  6E18               	movwf	(___flmul@a+3)^0,c
 11084   001168  EC7B  F016         	call	___flmul	;wreg free
 11085   00116C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11086   001170  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11087   001174  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11088   001178  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11089   00117C                     
 11090                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 11091   00117C  0100               	movlb	0	; () banked
 11092   00117E  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 11093   001180  EFC6  F008         	goto	u5030
 11094   001184  EFC4  F008         	goto	u5031
 11095   001188                     u5031:
 11096   001188  EFC1  F009         	goto	l5099
 11097   00118C                     u5030:
 11098   00118C                     
 11099                           ; BSR set to: 0
 11100   00118C  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 11101   001190  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 11102   001194  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 11103   001198  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 11104   00119C  0E00               	movlw	0
 11105   00119E  6E05               	movwf	___fladd@a^0,c
 11106   0011A0  0E00               	movlw	0
 11107   0011A2  6E06               	movwf	(___fladd@a+1)^0,c
 11108   0011A4  0EB4               	movlw	180
 11109   0011A6  6E07               	movwf	(___fladd@a+2)^0,c
 11110   0011A8  0E43               	movlw	67
 11111   0011AA  6E08               	movwf	(___fladd@a+3)^0,c
 11112   0011AC  EC1B  F014         	call	___fladd	;wreg free
 11113   0011B0  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 11114   0011B4  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 11115   0011B8  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 11116   0011BC  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 11117   0011C0  EFC1  F009         	goto	l5099
 11118   0011C4                     l5089:
 11119                           
 11120                           ; BSR set to: 0
 11121   0011C4  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 11122   0011C6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11123   0011C8  A4D8               	btfss	status,2,c
 11124   0011CA  EFE9  F008         	goto	u5041
 11125   0011CE  EFEB  F008         	goto	u5040
 11126   0011D2                     u5041:
 11127   0011D2  EF57  F009         	goto	l5095
 11128   0011D6                     u5040:
 11129   0011D6                     
 11130                           ; BSR set to: 0
 11131                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11132   0011D6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11133   0011DA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11134   0011DE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11135   0011E2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11136   0011E6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11137   0011EA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11138   0011EE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11139   0011F2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11140   0011F6  EC1A  F02C         	call	___flsub	;wreg free
 11141   0011FA  C02A  F036         	movff	?___flsub,___fldiv@a
 11142   0011FE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11143   001202  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11144   001206  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11145   00120A  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 11146   00120E  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 11147   001212  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 11148   001216  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 11149   00121A  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 11150   00121E  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 11151   001222  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 11152   001226  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 11153   00122A  EC1A  F02C         	call	___flsub	;wreg free
 11154   00122E  C02A  F032         	movff	?___flsub,___fldiv@b
 11155   001232  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11156   001236  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11157   00123A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11158   00123E  EC90  F018         	call	___fldiv	;wreg free
 11159   001242  C032  F060         	movff	?___fldiv,_Colour_decider$2791
 11160   001246  C033  F061         	movff	?___fldiv+1,_Colour_decider$2791+1
 11161   00124A  C034  F062         	movff	?___fldiv+2,_Colour_decider$2791+2
 11162   00124E  C035  F063         	movff	?___fldiv+3,_Colour_decider$2791+3
 11163   001252                     
 11164                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11165   001252  0E00               	movlw	0
 11166   001254  6E05               	movwf	___fladd@a^0,c
 11167   001256  0E00               	movlw	0
 11168   001258  6E06               	movwf	(___fladd@a+1)^0,c
 11169   00125A  0E00               	movlw	0
 11170   00125C  6E07               	movwf	(___fladd@a+2)^0,c
 11171   00125E  0E40               	movlw	64
 11172   001260  6E08               	movwf	(___fladd@a+3)^0,c
 11173   001262  C060  F001         	movff	_Colour_decider$2791,___fladd@b
 11174   001266  C061  F002         	movff	_Colour_decider$2791+1,___fladd@b+1
 11175   00126A  C062  F003         	movff	_Colour_decider$2791+2,___fladd@b+2
 11176   00126E  C063  F004         	movff	_Colour_decider$2791+3,___fladd@b+3
 11177   001272  EC1B  F014         	call	___fladd	;wreg free
 11178   001276  C001  F011         	movff	?___fladd,___flmul@b
 11179   00127A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11180   00127E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11181   001282  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11182   001286  0E00               	movlw	0
 11183   001288  6E15               	movwf	___flmul@a^0,c
 11184   00128A  0E00               	movlw	0
 11185   00128C  6E16               	movwf	(___flmul@a+1)^0,c
 11186   00128E  0E70               	movlw	112
 11187   001290  6E17               	movwf	(___flmul@a+2)^0,c
 11188   001292  0E42               	movlw	66
 11189   001294  6E18               	movwf	(___flmul@a+3)^0,c
 11190   001296  EC7B  F016         	call	___flmul	;wreg free
 11191   00129A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11192   00129E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11193   0012A2  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11194   0012A6  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11195                           
 11196                           ;color.c: 155:     }
 11197   0012AA  EFC1  F009         	goto	l5099
 11198   0012AE                     l5095:
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11202   0012AE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11203   0012B2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11204   0012B6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11205   0012BA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11206   0012BE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11207   0012C2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11208   0012C6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11209   0012CA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11210   0012CE  EC1A  F02C         	call	___flsub	;wreg free
 11211   0012D2  C02A  F036         	movff	?___flsub,___fldiv@a
 11212   0012D6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11213   0012DA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11214   0012DE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11215   0012E2  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 11216   0012E6  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 11217   0012EA  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 11218   0012EE  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 11219   0012F2  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 11220   0012F6  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 11221   0012FA  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 11222   0012FE  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 11223   001302  EC1A  F02C         	call	___flsub	;wreg free
 11224   001306  C02A  F032         	movff	?___flsub,___fldiv@b
 11225   00130A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11226   00130E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11227   001312  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11228   001316  EC90  F018         	call	___fldiv	;wreg free
 11229   00131A  C032  F060         	movff	?___fldiv,_Colour_decider$2791
 11230   00131E  C033  F061         	movff	?___fldiv+1,_Colour_decider$2791+1
 11231   001322  C034  F062         	movff	?___fldiv+2,_Colour_decider$2791+2
 11232   001326  C035  F063         	movff	?___fldiv+3,_Colour_decider$2791+3
 11233   00132A                     
 11234                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11235   00132A  0E00               	movlw	0
 11236   00132C  6E05               	movwf	___fladd@a^0,c
 11237   00132E  0E00               	movlw	0
 11238   001330  6E06               	movwf	(___fladd@a+1)^0,c
 11239   001332  0E80               	movlw	128
 11240   001334  6E07               	movwf	(___fladd@a+2)^0,c
 11241   001336  0E40               	movlw	64
 11242   001338  6E08               	movwf	(___fladd@a+3)^0,c
 11243   00133A  C060  F001         	movff	_Colour_decider$2791,___fladd@b
 11244   00133E  C061  F002         	movff	_Colour_decider$2791+1,___fladd@b+1
 11245   001342  C062  F003         	movff	_Colour_decider$2791+2,___fladd@b+2
 11246   001346  C063  F004         	movff	_Colour_decider$2791+3,___fladd@b+3
 11247   00134A  EC1B  F014         	call	___fladd	;wreg free
 11248   00134E  C001  F011         	movff	?___fladd,___flmul@b
 11249   001352  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11250   001356  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11251   00135A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11252   00135E  0E00               	movlw	0
 11253   001360  6E15               	movwf	___flmul@a^0,c
 11254   001362  0E00               	movlw	0
 11255   001364  6E16               	movwf	(___flmul@a+1)^0,c
 11256   001366  0E70               	movlw	112
 11257   001368  6E17               	movwf	(___flmul@a+2)^0,c
 11258   00136A  0E42               	movlw	66
 11259   00136C  6E18               	movwf	(___flmul@a+3)^0,c
 11260   00136E  EC7B  F016         	call	___flmul	;wreg free
 11261   001372  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11262   001376  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11263   00137A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11264   00137E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11265   001382                     l5099:
 11266                           
 11267                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 11268   001382  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11269   001386  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11270   00138A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11271   00138E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11272   001392  0E00               	movlw	0
 11273   001394  6E2E               	movwf	___flge@ff2^0,c
 11274   001396  0E00               	movlw	0
 11275   001398  6E2F               	movwf	(___flge@ff2+1)^0,c
 11276   00139A  0EA5               	movlw	165
 11277   00139C  6E30               	movwf	(___flge@ff2+2)^0,c
 11278   00139E  0E43               	movlw	67
 11279   0013A0  6E31               	movwf	(___flge@ff2+3)^0,c
 11280   0013A2  EC31  F024         	call	___flge	;wreg free
 11281   0013A6  A0D8               	btfss	status,0,c
 11282   0013A8  EFD8  F009         	goto	u5051
 11283   0013AC  EFDA  F009         	goto	u5050
 11284   0013B0                     u5051:
 11285   0013B0  EFF9  F009         	goto	l5109
 11286   0013B4                     u5050:
 11287   0013B4  0E00               	movlw	0
 11288   0013B6  6E2A               	movwf	___flge@ff1^0,c
 11289   0013B8  0E00               	movlw	0
 11290   0013BA  6E2B               	movwf	(___flge@ff1+1)^0,c
 11291   0013BC  0EB4               	movlw	180
 11292   0013BE  6E2C               	movwf	(___flge@ff1+2)^0,c
 11293   0013C0  0E43               	movlw	67
 11294   0013C2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11295   0013C4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11296   0013C8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11297   0013CC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11298   0013D0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11299   0013D4  EC31  F024         	call	___flge	;wreg free
 11300   0013D8  A0D8               	btfss	status,0,c
 11301   0013DA  EFF1  F009         	goto	u5061
 11302   0013DE  EFF3  F009         	goto	u5060
 11303   0013E2                     u5061:
 11304   0013E2  EFF9  F009         	goto	l5109
 11305   0013E6                     u5060:
 11306   0013E6                     
 11307                           ;color.c: 164:         return 1;
 11308   0013E6  0E00               	movlw	0
 11309   0013E8  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11310   0013EA  0E01               	movlw	1
 11311   0013EC  6E4B               	movwf	?_Colour_decider^0,c
 11312   0013EE  EF9A  F00C         	goto	l74
 11313   0013F2                     l5109:
 11314   0013F2  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11315   0013F6  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11316   0013FA  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11317   0013FE  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11318   001402  0E00               	movlw	0
 11319   001404  6E2E               	movwf	___flge@ff2^0,c
 11320   001406  0E00               	movlw	0
 11321   001408  6E2F               	movwf	(___flge@ff2+1)^0,c
 11322   00140A  0EA0               	movlw	160
 11323   00140C  6E30               	movwf	(___flge@ff2+2)^0,c
 11324   00140E  0E40               	movlw	64
 11325   001410  6E31               	movwf	(___flge@ff2+3)^0,c
 11326   001412  EC31  F024         	call	___flge	;wreg free
 11327   001416  A0D8               	btfss	status,0,c
 11328   001418  EF10  F00A         	goto	u5071
 11329   00141C  EF12  F00A         	goto	u5070
 11330   001420                     u5071:
 11331   001420  EF31  F00A         	goto	l5119
 11332   001424                     u5070:
 11333   001424  0E00               	movlw	0
 11334   001426  6E2A               	movwf	___flge@ff1^0,c
 11335   001428  0E00               	movlw	0
 11336   00142A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11337   00142C  0E40               	movlw	64
 11338   00142E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11339   001430  0E41               	movlw	65
 11340   001432  6E2D               	movwf	(___flge@ff1+3)^0,c
 11341   001434  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11342   001438  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11343   00143C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11344   001440  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11345   001444  EC31  F024         	call	___flge	;wreg free
 11346   001448  A0D8               	btfss	status,0,c
 11347   00144A  EF29  F00A         	goto	u5081
 11348   00144E  EF2B  F00A         	goto	u5080
 11349   001452                     u5081:
 11350   001452  EF31  F00A         	goto	l5119
 11351   001456                     u5080:
 11352   001456                     
 11353                           ;color.c: 168:         return 2;
 11354   001456  0E00               	movlw	0
 11355   001458  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11356   00145A  0E02               	movlw	2
 11357   00145C  6E4B               	movwf	?_Colour_decider^0,c
 11358   00145E  EF9A  F00C         	goto	l74
 11359   001462                     l5119:
 11360   001462  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11361   001466  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11362   00146A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11363   00146E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11364   001472  0E00               	movlw	0
 11365   001474  6E2E               	movwf	___flge@ff2^0,c
 11366   001476  0E00               	movlw	0
 11367   001478  6E2F               	movwf	(___flge@ff2+1)^0,c
 11368   00147A  0EA0               	movlw	160
 11369   00147C  6E30               	movwf	(___flge@ff2+2)^0,c
 11370   00147E  0E41               	movlw	65
 11371   001480  6E31               	movwf	(___flge@ff2+3)^0,c
 11372   001482  EC31  F024         	call	___flge	;wreg free
 11373   001486  A0D8               	btfss	status,0,c
 11374   001488  EF48  F00A         	goto	u5091
 11375   00148C  EF4A  F00A         	goto	u5090
 11376   001490                     u5091:
 11377   001490  EFCA  F00A         	goto	l5145
 11378   001494                     u5090:
 11379   001494  0E00               	movlw	0
 11380   001496  6E2A               	movwf	___flge@ff1^0,c
 11381   001498  0E00               	movlw	0
 11382   00149A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11383   00149C  0EE8               	movlw	232
 11384   00149E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11385   0014A0  0E41               	movlw	65
 11386   0014A2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11387   0014A4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11388   0014A8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11389   0014AC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11390   0014B0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11391   0014B4  EC31  F024         	call	___flge	;wreg free
 11392   0014B8  A0D8               	btfss	status,0,c
 11393   0014BA  EF61  F00A         	goto	u5101
 11394   0014BE  EF63  F00A         	goto	u5100
 11395   0014C2                     u5101:
 11396   0014C2  EFCA  F00A         	goto	l5145
 11397   0014C6                     u5100:
 11398   0014C6                     
 11399                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11400   0014C6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11401   0014CA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11402   0014CE  CFDE F02A          	movff	postinc2,___flge@ff1
 11403   0014D2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11404   0014D6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11405   0014DA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11406   0014DE  0ECD               	movlw	205
 11407   0014E0  6E2E               	movwf	___flge@ff2^0,c
 11408   0014E2  0ECC               	movlw	204
 11409   0014E4  6E2F               	movwf	(___flge@ff2+1)^0,c
 11410   0014E6  0E4C               	movlw	76
 11411   0014E8  6E30               	movwf	(___flge@ff2+2)^0,c
 11412   0014EA  0E3E               	movlw	62
 11413   0014EC  6E31               	movwf	(___flge@ff2+3)^0,c
 11414   0014EE  EC31  F024         	call	___flge	;wreg free
 11415   0014F2  A0D8               	btfss	status,0,c
 11416   0014F4  EF7E  F00A         	goto	u5111
 11417   0014F8  EF80  F00A         	goto	u5110
 11418   0014FC                     u5111:
 11419   0014FC  EF9F  F00A         	goto	l5133
 11420   001500                     u5110:
 11421   001500  0E1F               	movlw	31
 11422   001502  6E2A               	movwf	___flge@ff1^0,c
 11423   001504  0E85               	movlw	133
 11424   001506  6E2B               	movwf	(___flge@ff1+1)^0,c
 11425   001508  0E6B               	movlw	107
 11426   00150A  6E2C               	movwf	(___flge@ff1+2)^0,c
 11427   00150C  0E3E               	movlw	62
 11428   00150E  6E2D               	movwf	(___flge@ff1+3)^0,c
 11429   001510  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11430   001514  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11431   001518  CFDE F02E          	movff	postinc2,___flge@ff2
 11432   00151C  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11433   001520  CFDE F030          	movff	postinc2,___flge@ff2+2
 11434   001524  CFDE F031          	movff	postinc2,___flge@ff2+3
 11435   001528  EC31  F024         	call	___flge	;wreg free
 11436   00152C  A0D8               	btfss	status,0,c
 11437   00152E  EF9B  F00A         	goto	u5121
 11438   001532  EF9D  F00A         	goto	u5120
 11439   001536                     u5121:
 11440   001536  EF9F  F00A         	goto	l5133
 11441   00153A                     u5120:
 11442   00153A  EF5E  F008         	goto	l5077
 11443   00153E                     l5133:
 11444   00153E  EE20 F008          	lfsr	2,8
 11445   001542  504D               	movf	Colour_decider@rel^0,w,c
 11446   001544  26D9               	addwf	fsr2l,f,c
 11447   001546  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11448   001548  22DA               	addwfc	fsr2h,f,c
 11449   00154A  CFDE F02A          	movff	postinc2,___flge@ff1
 11450   00154E  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11451   001552  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11452   001556  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11453   00155A  0E29               	movlw	41
 11454   00155C  6E2E               	movwf	___flge@ff2^0,c
 11455   00155E  0E5C               	movlw	92
 11456   001560  6E2F               	movwf	(___flge@ff2+1)^0,c
 11457   001562  0E0F               	movlw	15
 11458   001564  6E30               	movwf	(___flge@ff2+2)^0,c
 11459   001566  0E3E               	movlw	62
 11460   001568  6E31               	movwf	(___flge@ff2+3)^0,c
 11461   00156A  EC31  F024         	call	___flge	;wreg free
 11462   00156E  A0D8               	btfss	status,0,c
 11463   001570  EFBC  F00A         	goto	u5131
 11464   001574  EFBE  F00A         	goto	u5130
 11465   001578                     u5131:
 11466   001578  EFC4  F00A         	goto	l5141
 11467   00157C                     u5130:
 11468   00157C                     l5135:
 11469                           
 11470                           ;color.c: 179:             return 4;
 11471   00157C  0E00               	movlw	0
 11472   00157E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11473   001580  0E04               	movlw	4
 11474   001582  6E4B               	movwf	?_Colour_decider^0,c
 11475   001584  EF9A  F00C         	goto	l74
 11476   001588                     l5141:
 11477                           
 11478                           ;color.c: 182:             return 3;
 11479   001588  0E00               	movlw	0
 11480   00158A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11481   00158C  0E03               	movlw	3
 11482   00158E  6E4B               	movwf	?_Colour_decider^0,c
 11483   001590  EF9A  F00C         	goto	l74
 11484   001594                     l5145:
 11485   001594  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11486   001598  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11487   00159C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11488   0015A0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11489   0015A4  0E00               	movlw	0
 11490   0015A6  6E2E               	movwf	___flge@ff2^0,c
 11491   0015A8  0E00               	movlw	0
 11492   0015AA  6E2F               	movwf	(___flge@ff2+1)^0,c
 11493   0015AC  0E34               	movlw	52
 11494   0015AE  6E30               	movwf	(___flge@ff2+2)^0,c
 11495   0015B0  0E42               	movlw	66
 11496   0015B2  6E31               	movwf	(___flge@ff2+3)^0,c
 11497   0015B4  EC31  F024         	call	___flge	;wreg free
 11498   0015B8  A0D8               	btfss	status,0,c
 11499   0015BA  EFE1  F00A         	goto	u5141
 11500   0015BE  EFE3  F00A         	goto	u5140
 11501   0015C2                     u5141:
 11502   0015C2  EF48  F00B         	goto	l5169
 11503   0015C6                     u5140:
 11504   0015C6  0E00               	movlw	0
 11505   0015C8  6E2A               	movwf	___flge@ff1^0,c
 11506   0015CA  0E00               	movlw	0
 11507   0015CC  6E2B               	movwf	(___flge@ff1+1)^0,c
 11508   0015CE  0EA0               	movlw	160
 11509   0015D0  6E2C               	movwf	(___flge@ff1+2)^0,c
 11510   0015D2  0E42               	movlw	66
 11511   0015D4  6E2D               	movwf	(___flge@ff1+3)^0,c
 11512   0015D6  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11513   0015DA  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11514   0015DE  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11515   0015E2  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11516   0015E6  EC31  F024         	call	___flge	;wreg free
 11517   0015EA  A0D8               	btfss	status,0,c
 11518   0015EC  EFFA  F00A         	goto	u5151
 11519   0015F0  EFFC  F00A         	goto	u5150
 11520   0015F4                     u5151:
 11521   0015F4  EF48  F00B         	goto	l5169
 11522   0015F8                     u5150:
 11523   0015F8                     
 11524                           ;color.c: 188:         if(0.15<=rel->B){
 11525   0015F8  EE20 F008          	lfsr	2,8
 11526   0015FC  504D               	movf	Colour_decider@rel^0,w,c
 11527   0015FE  26D9               	addwf	fsr2l,f,c
 11528   001600  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11529   001602  22DA               	addwfc	fsr2h,f,c
 11530   001604  CFDE F02A          	movff	postinc2,___flge@ff1
 11531   001608  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11532   00160C  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11533   001610  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11534   001614  0E9A               	movlw	154
 11535   001616  6E2E               	movwf	___flge@ff2^0,c
 11536   001618  0E99               	movlw	153
 11537   00161A  6E2F               	movwf	(___flge@ff2+1)^0,c
 11538   00161C  0E19               	movlw	25
 11539   00161E  6E30               	movwf	(___flge@ff2+2)^0,c
 11540   001620  0E3E               	movlw	62
 11541   001622  6E31               	movwf	(___flge@ff2+3)^0,c
 11542   001624  EC31  F024         	call	___flge	;wreg free
 11543   001628  A0D8               	btfss	status,0,c
 11544   00162A  EF19  F00B         	goto	u5161
 11545   00162E  EF1B  F00B         	goto	u5160
 11546   001632                     u5161:
 11547   001632  EF1D  F00B         	goto	l5157
 11548   001636                     u5160:
 11549   001636  EFBE  F00A         	goto	l5135
 11550   00163A                     l5157:
 11551   00163A  EE20 F008          	lfsr	2,8
 11552   00163E  504D               	movf	Colour_decider@rel^0,w,c
 11553   001640  26D9               	addwf	fsr2l,f,c
 11554   001642  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11555   001644  22DA               	addwfc	fsr2h,f,c
 11556   001646  CFDE F02A          	movff	postinc2,___flge@ff1
 11557   00164A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11558   00164E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11559   001652  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11560   001656  0E8F               	movlw	143
 11561   001658  6E2E               	movwf	___flge@ff2^0,c
 11562   00165A  0EC2               	movlw	194
 11563   00165C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11564   00165E  0EF5               	movlw	245
 11565   001660  6E30               	movwf	(___flge@ff2+2)^0,c
 11566   001662  0E3D               	movlw	61
 11567   001664  6E31               	movwf	(___flge@ff2+3)^0,c
 11568   001666  EC31  F024         	call	___flge	;wreg free
 11569   00166A  A0D8               	btfss	status,0,c
 11570   00166C  EF3A  F00B         	goto	u5171
 11571   001670  EF3C  F00B         	goto	u5170
 11572   001674                     u5171:
 11573   001674  EF42  F00B         	goto	l5165
 11574   001678                     u5170:
 11575   001678                     l5159:
 11576                           
 11577                           ;color.c: 192:             return 6;
 11578   001678  0E00               	movlw	0
 11579   00167A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11580   00167C  0E06               	movlw	6
 11581   00167E  6E4B               	movwf	?_Colour_decider^0,c
 11582   001680  EF9A  F00C         	goto	l74
 11583   001684                     l5165:
 11584                           
 11585                           ;color.c: 195:             return 5;
 11586   001684  0E00               	movlw	0
 11587   001686  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11588   001688  0E05               	movlw	5
 11589   00168A  6E4B               	movwf	?_Colour_decider^0,c
 11590   00168C  EF9A  F00C         	goto	l74
 11591   001690                     l5169:
 11592   001690  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11593   001694  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11594   001698  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11595   00169C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11596   0016A0  0E00               	movlw	0
 11597   0016A2  6E2E               	movwf	___flge@ff2^0,c
 11598   0016A4  0E00               	movlw	0
 11599   0016A6  6E2F               	movwf	(___flge@ff2+1)^0,c
 11600   0016A8  0EA2               	movlw	162
 11601   0016AA  6E30               	movwf	(___flge@ff2+2)^0,c
 11602   0016AC  0E42               	movlw	66
 11603   0016AE  6E31               	movwf	(___flge@ff2+3)^0,c
 11604   0016B0  EC31  F024         	call	___flge	;wreg free
 11605   0016B4  A0D8               	btfss	status,0,c
 11606   0016B6  EF5F  F00B         	goto	u5181
 11607   0016BA  EF61  F00B         	goto	u5180
 11608   0016BE                     u5181:
 11609   0016BE  EF9B  F00B         	goto	l5185
 11610   0016C2                     u5180:
 11611   0016C2  0E00               	movlw	0
 11612   0016C4  6E2A               	movwf	___flge@ff1^0,c
 11613   0016C6  0E00               	movlw	0
 11614   0016C8  6E2B               	movwf	(___flge@ff1+1)^0,c
 11615   0016CA  0EE6               	movlw	230
 11616   0016CC  6E2C               	movwf	(___flge@ff1+2)^0,c
 11617   0016CE  0E42               	movlw	66
 11618   0016D0  6E2D               	movwf	(___flge@ff1+3)^0,c
 11619   0016D2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11620   0016D6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11621   0016DA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11622   0016DE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11623   0016E2  EC31  F024         	call	___flge	;wreg free
 11624   0016E6  A0D8               	btfss	status,0,c
 11625   0016E8  EF78  F00B         	goto	u5191
 11626   0016EC  EF7A  F00B         	goto	u5190
 11627   0016F0                     u5191:
 11628   0016F0  EF9B  F00B         	goto	l5185
 11629   0016F4                     u5190:
 11630   0016F4                     
 11631                           ;color.c: 201:         if(0.15<=rel->B){
 11632   0016F4  EE20 F008          	lfsr	2,8
 11633   0016F8  504D               	movf	Colour_decider@rel^0,w,c
 11634   0016FA  26D9               	addwf	fsr2l,f,c
 11635   0016FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11636   0016FE  22DA               	addwfc	fsr2h,f,c
 11637   001700  CFDE F02A          	movff	postinc2,___flge@ff1
 11638   001704  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11639   001708  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11640   00170C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11641   001710  0E9A               	movlw	154
 11642   001712  6E2E               	movwf	___flge@ff2^0,c
 11643   001714  0E99               	movlw	153
 11644   001716  6E2F               	movwf	(___flge@ff2+1)^0,c
 11645   001718  0E19               	movlw	25
 11646   00171A  6E30               	movwf	(___flge@ff2+2)^0,c
 11647   00171C  0E3E               	movlw	62
 11648   00171E  6E31               	movwf	(___flge@ff2+3)^0,c
 11649   001720  EC31  F024         	call	___flge	;wreg free
 11650   001724  A0D8               	btfss	status,0,c
 11651   001726  EF97  F00B         	goto	u5201
 11652   00172A  EF99  F00B         	goto	u5200
 11653   00172E                     u5201:
 11654   00172E  EF3C  F00B         	goto	l5159
 11655   001732                     u5200:
 11656   001732  EFBE  F00A         	goto	l5135
 11657   001736                     l5185:
 11658   001736  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11659   00173A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11660   00173E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11661   001742  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11662   001746  0E00               	movlw	0
 11663   001748  6E2E               	movwf	___flge@ff2^0,c
 11664   00174A  0E00               	movlw	0
 11665   00174C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11666   00174E  0EF0               	movlw	240
 11667   001750  6E30               	movwf	(___flge@ff2+2)^0,c
 11668   001752  0E41               	movlw	65
 11669   001754  6E31               	movwf	(___flge@ff2+3)^0,c
 11670   001756  EC31  F024         	call	___flge	;wreg free
 11671   00175A  A0D8               	btfss	status,0,c
 11672   00175C  EFB2  F00B         	goto	u5211
 11673   001760  EFB4  F00B         	goto	u5210
 11674   001764                     u5211:
 11675   001764  EFCD  F00B         	goto	l5189
 11676   001768                     u5210:
 11677   001768  0E00               	movlw	0
 11678   00176A  6E2A               	movwf	___flge@ff1^0,c
 11679   00176C  0E00               	movlw	0
 11680   00176E  6E2B               	movwf	(___flge@ff1+1)^0,c
 11681   001770  0E68               	movlw	104
 11682   001772  6E2C               	movwf	(___flge@ff1+2)^0,c
 11683   001774  0E42               	movlw	66
 11684   001776  6E2D               	movwf	(___flge@ff1+3)^0,c
 11685   001778  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11686   00177C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11687   001780  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11688   001784  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11689   001788  EC31  F024         	call	___flge	;wreg free
 11690   00178C  B0D8               	btfsc	status,0,c
 11691   00178E  EFCB  F00B         	goto	u5221
 11692   001792  EFCD  F00B         	goto	u5220
 11693   001796                     u5221:
 11694   001796  EFBE  F00A         	goto	l5135
 11695   00179A                     u5220:
 11696   00179A                     l5189:
 11697   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11698   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11699   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11700   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11701   0017AA  0E00               	movlw	0
 11702   0017AC  6E2E               	movwf	___flge@ff2^0,c
 11703   0017AE  0E00               	movlw	0
 11704   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
 11705   0017B2  0EF0               	movlw	240
 11706   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
 11707   0017B6  0E42               	movlw	66
 11708   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
 11709   0017BA  EC31  F024         	call	___flge	;wreg free
 11710   0017BE  A0D8               	btfss	status,0,c
 11711   0017C0  EFE4  F00B         	goto	u5231
 11712   0017C4  EFE6  F00B         	goto	u5230
 11713   0017C8                     u5231:
 11714   0017C8  EF01  F00C         	goto	l5199
 11715   0017CC                     u5230:
 11716   0017CC  0E00               	movlw	0
 11717   0017CE  6E2A               	movwf	___flge@ff1^0,c
 11718   0017D0  0E00               	movlw	0
 11719   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
 11720   0017D4  0E5C               	movlw	92
 11721   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
 11722   0017D8  0E43               	movlw	67
 11723   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
 11724   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11725   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11726   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11727   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11728   0017EC  EC31  F024         	call	___flge	;wreg free
 11729   0017F0  A0D8               	btfss	status,0,c
 11730   0017F2  EFFD  F00B         	goto	u5241
 11731   0017F6  EFFF  F00B         	goto	u5240
 11732   0017FA                     u5241:
 11733   0017FA  EF01  F00C         	goto	l5199
 11734   0017FE                     u5240:
 11735   0017FE  EFBE  F00A         	goto	l5135
 11736   001802                     l5199:
 11737   001802  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11738   001806  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11739   00180A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11740   00180E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11741   001812  0E00               	movlw	0
 11742   001814  6E2E               	movwf	___flge@ff2^0,c
 11743   001816  0E00               	movlw	0
 11744   001818  6E2F               	movwf	(___flge@ff2+1)^0,c
 11745   00181A  0E60               	movlw	96
 11746   00181C  6E30               	movwf	(___flge@ff2+2)^0,c
 11747   00181E  0E41               	movlw	65
 11748   001820  6E31               	movwf	(___flge@ff2+3)^0,c
 11749   001822  EC31  F024         	call	___flge	;wreg free
 11750   001826  A0D8               	btfss	status,0,c
 11751   001828  EF18  F00C         	goto	u5251
 11752   00182C  EF1A  F00C         	goto	u5250
 11753   001830                     u5251:
 11754   001830  EF96  F00C         	goto	l5225
 11755   001834                     u5250:
 11756   001834  0E00               	movlw	0
 11757   001836  6E2A               	movwf	___flge@ff1^0,c
 11758   001838  0E00               	movlw	0
 11759   00183A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11760   00183C  0E98               	movlw	152
 11761   00183E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11762   001840  0E41               	movlw	65
 11763   001842  6E2D               	movwf	(___flge@ff1+3)^0,c
 11764   001844  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11765   001848  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11766   00184C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11767   001850  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11768   001854  EC31  F024         	call	___flge	;wreg free
 11769   001858  A0D8               	btfss	status,0,c
 11770   00185A  EF31  F00C         	goto	u5261
 11771   00185E  EF33  F00C         	goto	u5260
 11772   001862                     u5261:
 11773   001862  EF96  F00C         	goto	l5225
 11774   001866                     u5260:
 11775   001866                     
 11776                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11777   001866  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11778   00186A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11779   00186E  CFDE F02A          	movff	postinc2,___flge@ff1
 11780   001872  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11781   001876  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11782   00187A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11783   00187E  0ECD               	movlw	205
 11784   001880  6E2E               	movwf	___flge@ff2^0,c
 11785   001882  0ECC               	movlw	204
 11786   001884  6E2F               	movwf	(___flge@ff2+1)^0,c
 11787   001886  0E4C               	movlw	76
 11788   001888  6E30               	movwf	(___flge@ff2+2)^0,c
 11789   00188A  0E3E               	movlw	62
 11790   00188C  6E31               	movwf	(___flge@ff2+3)^0,c
 11791   00188E  EC31  F024         	call	___flge	;wreg free
 11792   001892  A0D8               	btfss	status,0,c
 11793   001894  EF4E  F00C         	goto	u5271
 11794   001898  EF50  F00C         	goto	u5270
 11795   00189C                     u5271:
 11796   00189C  EF6F  F00C         	goto	l5213
 11797   0018A0                     u5270:
 11798   0018A0  0E1F               	movlw	31
 11799   0018A2  6E2A               	movwf	___flge@ff1^0,c
 11800   0018A4  0E85               	movlw	133
 11801   0018A6  6E2B               	movwf	(___flge@ff1+1)^0,c
 11802   0018A8  0E6B               	movlw	107
 11803   0018AA  6E2C               	movwf	(___flge@ff1+2)^0,c
 11804   0018AC  0E3E               	movlw	62
 11805   0018AE  6E2D               	movwf	(___flge@ff1+3)^0,c
 11806   0018B0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11807   0018B4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11808   0018B8  CFDE F02E          	movff	postinc2,___flge@ff2
 11809   0018BC  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11810   0018C0  CFDE F030          	movff	postinc2,___flge@ff2+2
 11811   0018C4  CFDE F031          	movff	postinc2,___flge@ff2+3
 11812   0018C8  EC31  F024         	call	___flge	;wreg free
 11813   0018CC  A0D8               	btfss	status,0,c
 11814   0018CE  EF6B  F00C         	goto	u5281
 11815   0018D2  EF6D  F00C         	goto	u5280
 11816   0018D6                     u5281:
 11817   0018D6  EF6F  F00C         	goto	l5213
 11818   0018DA                     u5280:
 11819   0018DA  EF5E  F008         	goto	l5077
 11820   0018DE                     l5213:
 11821   0018DE  EE20 F008          	lfsr	2,8
 11822   0018E2  504D               	movf	Colour_decider@rel^0,w,c
 11823   0018E4  26D9               	addwf	fsr2l,f,c
 11824   0018E6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11825   0018E8  22DA               	addwfc	fsr2h,f,c
 11826   0018EA  CFDE F02A          	movff	postinc2,___flge@ff1
 11827   0018EE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11828   0018F2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11829   0018F6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11830   0018FA  0E9A               	movlw	154
 11831   0018FC  6E2E               	movwf	___flge@ff2^0,c
 11832   0018FE  0E99               	movlw	153
 11833   001900  6E2F               	movwf	(___flge@ff2+1)^0,c
 11834   001902  0E19               	movlw	25
 11835   001904  6E30               	movwf	(___flge@ff2+2)^0,c
 11836   001906  0E3E               	movlw	62
 11837   001908  6E31               	movwf	(___flge@ff2+3)^0,c
 11838   00190A  EC31  F024         	call	___flge	;wreg free
 11839   00190E  A0D8               	btfss	status,0,c
 11840   001910  EF8C  F00C         	goto	u5291
 11841   001914  EF8E  F00C         	goto	u5290
 11842   001918                     u5291:
 11843   001918  EF90  F00C         	goto	l5221
 11844   00191C                     u5290:
 11845   00191C  EFBE  F00A         	goto	l5135
 11846   001920                     l5221:
 11847                           
 11848                           ;color.c: 223:             return 7;
 11849   001920  0E00               	movlw	0
 11850   001922  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11851   001924  0E07               	movlw	7
 11852   001926  6E4B               	movwf	?_Colour_decider^0,c
 11853   001928  EF9A  F00C         	goto	l74
 11854   00192C                     l5225:
 11855                           
 11856                           ;color.c: 227:         return 10;
 11857   00192C  0E00               	movlw	0
 11858   00192E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11859   001930  0E0A               	movlw	10
 11860   001932  6E4B               	movwf	?_Colour_decider^0,c
 11861   001934                     l74:
 11862   001934  0012               	return		;funcret
 11863   001936                     __end_of_Colour_decider:
 11864                           	callstack 0
 11865                           
 11866 ;; *************** function ___xxtofl *****************
 11867 ;; Defined at:
 11868 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 11869 ;; Parameters:    Size  Location     Type
 11870 ;;  sign            1    wreg     unsigned char 
 11871 ;;  val             4    0[COMRAM] long 
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;  sign            1    8[COMRAM] unsigned char 
 11874 ;;  arg             4   10[COMRAM] unsigned long 
 11875 ;;  exp             1    9[COMRAM] unsigned char 
 11876 ;; Return value:  Size  Location     Type
 11877 ;;                  4    0[COMRAM] unsigned char 
 11878 ;; Registers used:
 11879 ;;		wreg, status,2, status,0
 11880 ;; Tracked objects:
 11881 ;;		On entry : 0/0
 11882 ;;		On exit  : 0/0
 11883 ;;		Unchanged: 0/0
 11884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11886 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11888 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11889 ;;Total ram usage:       14 bytes
 11890 ;; Hardware stack levels used: 1
 11891 ;; Hardware stack levels required when called: 1
 11892 ;; This function calls:
 11893 ;;		Nothing
 11894 ;; This function is called by:
 11895 ;;		_colour_rel
 11896 ;;		_Colour_decider
 11897 ;;		_turnRight45
 11898 ;;		_turnLeft45
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text66
 11903   004150                     __ptext66:
 11904                           	callstack 0
 11905   004150                     ___xxtofl:
 11906                           	callstack 28
 11907                           
 11908                           ;incstack = 0
 11909                           ;___xxtofl@sign stored from wreg
 11910   004150  6E09               	movwf	___xxtofl@sign^0,c
 11911   004152  5009               	movf	___xxtofl@sign^0,w,c
 11912   004154  B4D8               	btfsc	status,2,c
 11913   004156  EFAF  F020         	goto	u4861
 11914   00415A  EFB1  F020         	goto	u4860
 11915   00415E                     u4861:
 11916   00415E  EFD3  F020         	goto	l1269
 11917   004162                     u4860:
 11918   004162  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11919   004164  EFB8  F020         	goto	u4870
 11920   004168  EFB6  F020         	goto	u4871
 11921   00416C                     u4871:
 11922   00416C  EFD3  F020         	goto	l1269
 11923   004170                     u4870:
 11924   004170  C001  F005         	movff	___xxtofl@val,??___xxtofl
 11925   004174  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 11926   004178  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 11927   00417C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 11928   004180  1E05               	comf	??___xxtofl^0,f,c
 11929   004182  1E06               	comf	(??___xxtofl+1)^0,f,c
 11930   004184  1E07               	comf	(??___xxtofl+2)^0,f,c
 11931   004186  1E08               	comf	(??___xxtofl+3)^0,f,c
 11932   004188  2A05               	incf	??___xxtofl^0,f,c
 11933   00418A  0E00               	movlw	0
 11934   00418C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11935   00418E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11936   004190  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11937   004192  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 11938   004196  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11939   00419A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11940   00419E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11941   0041A2  EFDB  F020         	goto	l4947
 11942   0041A6                     l1269:
 11943   0041A6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 11944   0041AA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11945   0041AE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11946   0041B2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11947   0041B6                     l4947:
 11948   0041B6  5001               	movf	___xxtofl@val^0,w,c
 11949   0041B8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11950   0041BA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11951   0041BC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11952   0041BE  A4D8               	btfss	status,2,c
 11953   0041C0  EFE4  F020         	goto	u4881
 11954   0041C4  EFE6  F020         	goto	u4880
 11955   0041C8                     u4881:
 11956   0041C8  EFF0  F020         	goto	l4953
 11957   0041CC                     u4880:
 11958   0041CC  0E00               	movlw	0
 11959   0041CE  6E01               	movwf	?___xxtofl^0,c
 11960   0041D0  0E00               	movlw	0
 11961   0041D2  6E02               	movwf	(?___xxtofl+1)^0,c
 11962   0041D4  0E00               	movlw	0
 11963   0041D6  6E03               	movwf	(?___xxtofl+2)^0,c
 11964   0041D8  0E00               	movlw	0
 11965   0041DA  6E04               	movwf	(?___xxtofl+3)^0,c
 11966   0041DC  EF81  F021         	goto	l1272
 11967   0041E0                     l4953:
 11968   0041E0  0E96               	movlw	150
 11969   0041E2  6E0A               	movwf	___xxtofl@exp^0,c
 11970   0041E4  EFFA  F020         	goto	l4957
 11971   0041E8                     l4955:
 11972   0041E8  2A0A               	incf	___xxtofl@exp^0,f,c
 11973   0041EA  90D8               	bcf	status,0,c
 11974   0041EC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11975   0041EE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11976   0041F0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11977   0041F2  320B               	rrcf	___xxtofl@arg^0,f,c
 11978   0041F4                     l4957:
 11979   0041F4  0E00               	movlw	0
 11980   0041F6  140B               	andwf	___xxtofl@arg^0,w,c
 11981   0041F8  6E05               	movwf	??___xxtofl^0,c
 11982   0041FA  0E00               	movlw	0
 11983   0041FC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11984   0041FE  6E06               	movwf	(??___xxtofl+1)^0,c
 11985   004200  0E00               	movlw	0
 11986   004202  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11987   004204  6E07               	movwf	(??___xxtofl+2)^0,c
 11988   004206  0EFE               	movlw	254
 11989   004208  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11990   00420A  6E08               	movwf	(??___xxtofl+3)^0,c
 11991   00420C  5005               	movf	??___xxtofl^0,w,c
 11992   00420E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11993   004210  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11994   004212  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11995   004214  A4D8               	btfss	status,2,c
 11996   004216  EF0F  F021         	goto	u4891
 11997   00421A  EF11  F021         	goto	u4890
 11998   00421E                     u4891:
 11999   00421E  EFF4  F020         	goto	l4955
 12000   004222                     u4890:
 12001   004222  EF1F  F021         	goto	l1276
 12002   004226                     l4959:
 12003   004226  2A0A               	incf	___xxtofl@exp^0,f,c
 12004   004228  0E01               	movlw	1
 12005   00422A  260B               	addwf	___xxtofl@arg^0,f,c
 12006   00422C  0E00               	movlw	0
 12007   00422E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12008   004230  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12009   004232  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12010   004234  90D8               	bcf	status,0,c
 12011   004236  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12012   004238  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12013   00423A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12014   00423C  320B               	rrcf	___xxtofl@arg^0,f,c
 12015   00423E                     l1276:
 12016   00423E  0E00               	movlw	0
 12017   004240  140B               	andwf	___xxtofl@arg^0,w,c
 12018   004242  6E05               	movwf	??___xxtofl^0,c
 12019   004244  0E00               	movlw	0
 12020   004246  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12021   004248  6E06               	movwf	(??___xxtofl+1)^0,c
 12022   00424A  0E00               	movlw	0
 12023   00424C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12024   00424E  6E07               	movwf	(??___xxtofl+2)^0,c
 12025   004250  0EFF               	movlw	255
 12026   004252  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12027   004254  6E08               	movwf	(??___xxtofl+3)^0,c
 12028   004256  5005               	movf	??___xxtofl^0,w,c
 12029   004258  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12030   00425A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12031   00425C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12032   00425E  A4D8               	btfss	status,2,c
 12033   004260  EF34  F021         	goto	u4901
 12034   004264  EF36  F021         	goto	u4900
 12035   004268                     u4901:
 12036   004268  EF13  F021         	goto	l4959
 12037   00426C                     u4900:
 12038   00426C  EF3E  F021         	goto	l4967
 12039   004270                     l4965:
 12040   004270  060A               	decf	___xxtofl@exp^0,f,c
 12041   004272  90D8               	bcf	status,0,c
 12042   004274  360B               	rlcf	___xxtofl@arg^0,f,c
 12043   004276  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12044   004278  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12045   00427A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12046   00427C                     l4967:
 12047   00427C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12048   00427E  EF43  F021         	goto	u4911
 12049   004282  EF45  F021         	goto	u4910
 12050   004286                     u4911:
 12051   004286  EF4D  F021         	goto	l1283
 12052   00428A                     u4910:
 12053   00428A  0E02               	movlw	2
 12054   00428C  600A               	cpfslt	___xxtofl@exp^0,c
 12055   00428E  EF4B  F021         	goto	u4921
 12056   004292  EF4D  F021         	goto	u4920
 12057   004296                     u4921:
 12058   004296  EF38  F021         	goto	l4965
 12059   00429A                     u4920:
 12060   00429A                     l1283:
 12061   00429A  B00A               	btfsc	___xxtofl@exp^0,0,c
 12062   00429C  EF52  F021         	goto	u4931
 12063   0042A0  EF54  F021         	goto	u4930
 12064   0042A4                     u4931:
 12065   0042A4  EF55  F021         	goto	l4973
 12066   0042A8                     u4930:
 12067   0042A8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12068   0042AA                     l4973:
 12069   0042AA  90D8               	bcf	status,0,c
 12070   0042AC  320A               	rrcf	___xxtofl@exp^0,f,c
 12071   0042AE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12072   0042B2  6A06               	clrf	(??___xxtofl+1)^0,c
 12073   0042B4  6A07               	clrf	(??___xxtofl+2)^0,c
 12074   0042B6  6A08               	clrf	(??___xxtofl+3)^0,c
 12075   0042B8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12076   0042BC  6A07               	clrf	(??___xxtofl+2)^0,c
 12077   0042BE  6A06               	clrf	(??___xxtofl+1)^0,c
 12078   0042C0  6A05               	clrf	??___xxtofl^0,c
 12079   0042C2  5005               	movf	??___xxtofl^0,w,c
 12080   0042C4  120B               	iorwf	___xxtofl@arg^0,f,c
 12081   0042C6  5006               	movf	(??___xxtofl+1)^0,w,c
 12082   0042C8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12083   0042CA  5007               	movf	(??___xxtofl+2)^0,w,c
 12084   0042CC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12085   0042CE  5008               	movf	(??___xxtofl+3)^0,w,c
 12086   0042D0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12087   0042D2  5009               	movf	___xxtofl@sign^0,w,c
 12088   0042D4  B4D8               	btfsc	status,2,c
 12089   0042D6  EF6F  F021         	goto	u4941
 12090   0042DA  EF71  F021         	goto	u4940
 12091   0042DE                     u4941:
 12092   0042DE  EF79  F021         	goto	l4983
 12093   0042E2                     u4940:
 12094   0042E2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12095   0042E4  EF78  F021         	goto	u4950
 12096   0042E8  EF76  F021         	goto	u4951
 12097   0042EC                     u4951:
 12098   0042EC  EF79  F021         	goto	l4983
 12099   0042F0                     u4950:
 12100   0042F0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12101   0042F2                     l4983:
 12102   0042F2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12103   0042F6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12104   0042FA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12105   0042FE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12106   004302                     l1272:
 12107   004302  0012               	return		;funcret
 12108   004304                     __end_of___xxtofl:
 12109                           	callstack 0
 12110                           
 12111 ;; *************** function ___flsub *****************
 12112 ;; Defined at:
 12113 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;  b               4   41[COMRAM] unsigned char 
 12116 ;;  a               4   45[COMRAM] unsigned char 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;		None
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  4   41[COMRAM] unsigned char 
 12121 ;; Registers used:
 12122 ;;		wreg, status,2, status,0, cstack
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12128 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12131 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12132 ;;Total ram usage:        8 bytes
 12133 ;; Hardware stack levels used: 1
 12134 ;; Hardware stack levels required when called: 2
 12135 ;; This function calls:
 12136 ;;		___fladd
 12137 ;; This function is called by:
 12138 ;;		_Colour_decider
 12139 ;;		_efgtoa
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text67
 12144   005834                     __ptext67:
 12145                           	callstack 0
 12146   005834                     ___flsub:
 12147                           	callstack 24
 12148   005834  0E00               	movlw	0
 12149   005836  1A2E               	xorwf	___flsub@a^0,f,c
 12150   005838  0E00               	movlw	0
 12151   00583A  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 12152   00583C  0E00               	movlw	0
 12153   00583E  1A30               	xorwf	(___flsub@a+2)^0,f,c
 12154   005840  0E80               	movlw	128
 12155   005842  1A31               	xorwf	(___flsub@a+3)^0,f,c
 12156   005844  C02A  F001         	movff	___flsub@b,___fladd@b
 12157   005848  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 12158   00584C  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 12159   005850  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 12160   005854  C02E  F005         	movff	___flsub@a,___fladd@a
 12161   005858  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 12162   00585C  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 12163   005860  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 12164   005864  EC1B  F014         	call	___fladd	;wreg free
 12165   005868  C001  F02A         	movff	?___fladd,?___flsub
 12166   00586C  C002  F02B         	movff	?___fladd+1,?___flsub+1
 12167   005870  C003  F02C         	movff	?___fladd+2,?___flsub+2
 12168   005874  C004  F02D         	movff	?___fladd+3,?___flsub+3
 12169   005878  0012               	return		;funcret
 12170   00587A                     __end_of___flsub:
 12171                           	callstack 0
 12172                           
 12173 ;; *************** function ___fladd *****************
 12174 ;; Defined at:
 12175 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  b               4    0[COMRAM] unsigned char 
 12178 ;;  a               4    4[COMRAM] unsigned char 
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;  grs             1   15[COMRAM] unsigned char 
 12181 ;;  bexp            1   14[COMRAM] unsigned char 
 12182 ;;  aexp            1   13[COMRAM] unsigned char 
 12183 ;;  signs           1   12[COMRAM] unsigned char 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  4    0[COMRAM] unsigned char 
 12186 ;; Registers used:
 12187 ;;		wreg, status,2, status,0
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12193 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12194 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12196 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;Total ram usage:       16 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 1
 12200 ;; This function calls:
 12201 ;;		Nothing
 12202 ;; This function is called by:
 12203 ;;		_colour_rel
 12204 ;;		_Colour_decider
 12205 ;;		___flsub
 12206 ;;		_efgtoa
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text68
 12211   002836                     __ptext68:
 12212                           	callstack 0
 12213   002836                     ___fladd:
 12214                           	callstack 24
 12215   002836  5004               	movf	(___fladd@b+3)^0,w,c
 12216   002838  0B80               	andlw	128
 12217   00283A  6E0D               	movwf	___fladd@signs^0,c
 12218   00283C  5004               	movf	(___fladd@b+3)^0,w,c
 12219   00283E  2404               	addwf	(___fladd@b+3)^0,w,c
 12220   002840  6E0F               	movwf	___fladd@bexp^0,c
 12221   002842  AE03               	btfss	(___fladd@b+2)^0,7,c
 12222   002844  EF26  F014         	goto	u2861
 12223   002848  EF28  F014         	goto	u2860
 12224   00284C                     u2861:
 12225   00284C  EF29  F014         	goto	l3615
 12226   002850                     u2860:
 12227   002850  800F               	bsf	___fladd@bexp^0,0,c
 12228   002852                     l3615:
 12229   002852  500F               	movf	___fladd@bexp^0,w,c
 12230   002854  B4D8               	btfsc	status,2,c
 12231   002856  EF2F  F014         	goto	u2871
 12232   00285A  EF31  F014         	goto	u2870
 12233   00285E                     u2871:
 12234   00285E  EF46  F014         	goto	l3625
 12235   002862                     u2870:
 12236   002862  280F               	incf	___fladd@bexp^0,w,c
 12237   002864  A4D8               	btfss	status,2,c
 12238   002866  EF37  F014         	goto	u2881
 12239   00286A  EF39  F014         	goto	u2880
 12240   00286E                     u2881:
 12241   00286E  EF41  F014         	goto	l3621
 12242   002872                     u2880:
 12243   002872  0E00               	movlw	0
 12244   002874  6E01               	movwf	___fladd@b^0,c
 12245   002876  0E00               	movlw	0
 12246   002878  6E02               	movwf	(___fladd@b+1)^0,c
 12247   00287A  0E00               	movlw	0
 12248   00287C  6E03               	movwf	(___fladd@b+2)^0,c
 12249   00287E  0E00               	movlw	0
 12250   002880  6E04               	movwf	(___fladd@b+3)^0,c
 12251   002882                     l3621:
 12252   002882  8E03               	bsf	(___fladd@b+2)^0,7,c
 12253   002884  0E00               	movlw	0
 12254   002886  6E04               	movwf	(___fladd@b+3)^0,c
 12255   002888  EF4E  F014         	goto	l3627
 12256   00288C                     l3625:
 12257   00288C  0E00               	movlw	0
 12258   00288E  6E01               	movwf	___fladd@b^0,c
 12259   002890  0E00               	movlw	0
 12260   002892  6E02               	movwf	(___fladd@b+1)^0,c
 12261   002894  0E00               	movlw	0
 12262   002896  6E03               	movwf	(___fladd@b+2)^0,c
 12263   002898  0E00               	movlw	0
 12264   00289A  6E04               	movwf	(___fladd@b+3)^0,c
 12265   00289C                     l3627:
 12266   00289C  5008               	movf	(___fladd@a+3)^0,w,c
 12267   00289E  0B80               	andlw	128
 12268   0028A0  6E0E               	movwf	___fladd@aexp^0,c
 12269   0028A2  500D               	movf	___fladd@signs^0,w,c
 12270   0028A4  180E               	xorwf	___fladd@aexp^0,w,c
 12271   0028A6  B4D8               	btfsc	status,2,c
 12272   0028A8  EF58  F014         	goto	u2891
 12273   0028AC  EF5A  F014         	goto	u2890
 12274   0028B0                     u2891:
 12275   0028B0  EF5B  F014         	goto	l3633
 12276   0028B4                     u2890:
 12277   0028B4  8C0D               	bsf	___fladd@signs^0,6,c
 12278   0028B6                     l3633:
 12279   0028B6  5008               	movf	(___fladd@a+3)^0,w,c
 12280   0028B8  2408               	addwf	(___fladd@a+3)^0,w,c
 12281   0028BA  6E0E               	movwf	___fladd@aexp^0,c
 12282   0028BC  AE07               	btfss	(___fladd@a+2)^0,7,c
 12283   0028BE  EF63  F014         	goto	u2901
 12284   0028C2  EF65  F014         	goto	u2900
 12285   0028C6                     u2901:
 12286   0028C6  EF66  F014         	goto	l3639
 12287   0028CA                     u2900:
 12288   0028CA  800E               	bsf	___fladd@aexp^0,0,c
 12289   0028CC                     l3639:
 12290   0028CC  500E               	movf	___fladd@aexp^0,w,c
 12291   0028CE  B4D8               	btfsc	status,2,c
 12292   0028D0  EF6C  F014         	goto	u2911
 12293   0028D4  EF6E  F014         	goto	u2910
 12294   0028D8                     u2911:
 12295   0028D8  EF83  F014         	goto	l3649
 12296   0028DC                     u2910:
 12297   0028DC  280E               	incf	___fladd@aexp^0,w,c
 12298   0028DE  A4D8               	btfss	status,2,c
 12299   0028E0  EF74  F014         	goto	u2921
 12300   0028E4  EF76  F014         	goto	u2920
 12301   0028E8                     u2921:
 12302   0028E8  EF7E  F014         	goto	l3645
 12303   0028EC                     u2920:
 12304   0028EC  0E00               	movlw	0
 12305   0028EE  6E05               	movwf	___fladd@a^0,c
 12306   0028F0  0E00               	movlw	0
 12307   0028F2  6E06               	movwf	(___fladd@a+1)^0,c
 12308   0028F4  0E00               	movlw	0
 12309   0028F6  6E07               	movwf	(___fladd@a+2)^0,c
 12310   0028F8  0E00               	movlw	0
 12311   0028FA  6E08               	movwf	(___fladd@a+3)^0,c
 12312   0028FC                     l3645:
 12313   0028FC  8E07               	bsf	(___fladd@a+2)^0,7,c
 12314   0028FE  0E00               	movlw	0
 12315   002900  6E08               	movwf	(___fladd@a+3)^0,c
 12316   002902  EF8B  F014         	goto	l3651
 12317   002906                     l3649:
 12318   002906  0E00               	movlw	0
 12319   002908  6E05               	movwf	___fladd@a^0,c
 12320   00290A  0E00               	movlw	0
 12321   00290C  6E06               	movwf	(___fladd@a+1)^0,c
 12322   00290E  0E00               	movlw	0
 12323   002910  6E07               	movwf	(___fladd@a+2)^0,c
 12324   002912  0E00               	movlw	0
 12325   002914  6E08               	movwf	(___fladd@a+3)^0,c
 12326   002916                     l3651:
 12327   002916  500F               	movf	___fladd@bexp^0,w,c
 12328   002918  5C0E               	subwf	___fladd@aexp^0,w,c
 12329   00291A  B0D8               	btfsc	status,0,c
 12330   00291C  EF92  F014         	goto	u2931
 12331   002920  EF94  F014         	goto	u2930
 12332   002924                     u2931:
 12333   002924  EFBB  F014         	goto	l3687
 12334   002928                     u2930:
 12335   002928  AC0D               	btfss	___fladd@signs^0,6,c
 12336   00292A  EF99  F014         	goto	u2941
 12337   00292E  EF9B  F014         	goto	u2940
 12338   002932                     u2941:
 12339   002932  EF9D  F014         	goto	l3657
 12340   002936                     u2940:
 12341   002936  0E80               	movlw	128
 12342   002938  1A0D               	xorwf	___fladd@signs^0,f,c
 12343   00293A                     l3657:
 12344   00293A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 12345   00293E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12346   002942  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 12347   002946  C001  F010         	movff	___fladd@b,___fladd@grs
 12348   00294A  C005  F001         	movff	___fladd@a,___fladd@b
 12349   00294E  C010  F005         	movff	___fladd@grs,___fladd@a
 12350   002952  C002  F010         	movff	___fladd@b+1,___fladd@grs
 12351   002956  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 12352   00295A  C010  F006         	movff	___fladd@grs,___fladd@a+1
 12353   00295E  C003  F010         	movff	___fladd@b+2,___fladd@grs
 12354   002962  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 12355   002966  C010  F007         	movff	___fladd@grs,___fladd@a+2
 12356   00296A  C004  F010         	movff	___fladd@b+3,___fladd@grs
 12357   00296E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 12358   002972  C010  F008         	movff	___fladd@grs,___fladd@a+3
 12359   002976                     l3687:
 12360   002976  0E00               	movlw	0
 12361   002978  6E10               	movwf	___fladd@grs^0,c
 12362   00297A  500F               	movf	___fladd@bexp^0,w,c
 12363   00297C  C00E  F009         	movff	___fladd@aexp,??___fladd
 12364   002980  6A0A               	clrf	(??___fladd+1)^0,c
 12365   002982  5E09               	subwf	??___fladd^0,f,c
 12366   002984  0E00               	movlw	0
 12367   002986  5A0A               	subwfb	(??___fladd+1)^0,f,c
 12368   002988  BE0A               	btfsc	(??___fladd+1)^0,7,c
 12369   00298A  EFD0  F014         	goto	u2951
 12370   00298E  500A               	movf	(??___fladd+1)^0,w,c
 12371   002990  E109               	bnz	u2950
 12372   002992  0E1A               	movlw	26
 12373   002994  5C09               	subwf	??___fladd^0,w,c
 12374   002996  A0D8               	btfss	status,0,c
 12375   002998  EFD0  F014         	goto	u2951
 12376   00299C  EFD2  F014         	goto	u2950
 12377   0029A0                     u2951:
 12378   0029A0  EF09  F015         	goto	l1143
 12379   0029A4                     u2950:
 12380   0029A4  5001               	movf	___fladd@b^0,w,c
 12381   0029A6  1002               	iorwf	(___fladd@b+1)^0,w,c
 12382   0029A8  1003               	iorwf	(___fladd@b+2)^0,w,c
 12383   0029AA  1004               	iorwf	(___fladd@b+3)^0,w,c
 12384   0029AC  A4D8               	btfss	status,2,c
 12385   0029AE  EFDB  F014         	goto	u2961
 12386   0029B2  EFDE  F014         	goto	u2960
 12387   0029B6                     u2961:
 12388   0029B6  0E01               	movlw	1
 12389   0029B8  EFDF  F014         	goto	u2970
 12390   0029BC                     u2960:
 12391   0029BC  0E00               	movlw	0
 12392   0029BE                     u2970:
 12393   0029BE  6E10               	movwf	___fladd@grs^0,c
 12394   0029C0  0E00               	movlw	0
 12395   0029C2  6E01               	movwf	___fladd@b^0,c
 12396   0029C4  0E00               	movlw	0
 12397   0029C6  6E02               	movwf	(___fladd@b+1)^0,c
 12398   0029C8  0E00               	movlw	0
 12399   0029CA  6E03               	movwf	(___fladd@b+2)^0,c
 12400   0029CC  0E00               	movlw	0
 12401   0029CE  6E04               	movwf	(___fladd@b+3)^0,c
 12402   0029D0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12403   0029D4  EF12  F015         	goto	l1142
 12404   0029D8                     l1144:
 12405   0029D8  A010               	btfss	___fladd@grs^0,0,c
 12406   0029DA  EFF1  F014         	goto	u2981
 12407   0029DE  EFF3  F014         	goto	u2980
 12408   0029E2                     u2981:
 12409   0029E2  EFF9  F014         	goto	l3699
 12410   0029E6                     u2980:
 12411   0029E6  90D8               	bcf	status,0,c
 12412   0029E8  3010               	rrcf	___fladd@grs^0,w,c
 12413   0029EA  0901               	iorlw	1
 12414   0029EC  6E10               	movwf	___fladd@grs^0,c
 12415   0029EE  EFFB  F014         	goto	l3701
 12416   0029F2                     l3699:
 12417   0029F2  90D8               	bcf	status,0,c
 12418   0029F4  3210               	rrcf	___fladd@grs^0,f,c
 12419   0029F6                     l3701:
 12420   0029F6  A001               	btfss	___fladd@b^0,0,c
 12421   0029F8  EF00  F015         	goto	u2991
 12422   0029FC  EF02  F015         	goto	u2990
 12423   002A00                     u2991:
 12424   002A00  EF03  F015         	goto	l3705
 12425   002A04                     u2990:
 12426   002A04  8E10               	bsf	___fladd@grs^0,7,c
 12427   002A06                     l3705:
 12428   002A06  3404               	rlcf	(___fladd@b+3)^0,w,c
 12429   002A08  3204               	rrcf	(___fladd@b+3)^0,f,c
 12430   002A0A  3203               	rrcf	(___fladd@b+2)^0,f,c
 12431   002A0C  3202               	rrcf	(___fladd@b+1)^0,f,c
 12432   002A0E  3201               	rrcf	___fladd@b^0,f,c
 12433   002A10  2A0F               	incf	___fladd@bexp^0,f,c
 12434   002A12                     l1143:
 12435   002A12  500E               	movf	___fladd@aexp^0,w,c
 12436   002A14  5C0F               	subwf	___fladd@bexp^0,w,c
 12437   002A16  A0D8               	btfss	status,0,c
 12438   002A18  EF10  F015         	goto	u3001
 12439   002A1C  EF12  F015         	goto	u3000
 12440   002A20                     u3001:
 12441   002A20  EFEC  F014         	goto	l1144
 12442   002A24                     u3000:
 12443   002A24                     l1142:
 12444   002A24  BC0D               	btfsc	___fladd@signs^0,6,c
 12445   002A26  EF17  F015         	goto	u3011
 12446   002A2A  EF19  F015         	goto	u3010
 12447   002A2E                     u3011:
 12448   002A2E  EF59  F015         	goto	l3733
 12449   002A32                     u3010:
 12450   002A32  500F               	movf	___fladd@bexp^0,w,c
 12451   002A34  A4D8               	btfss	status,2,c
 12452   002A36  EF1F  F015         	goto	u3021
 12453   002A3A  EF21  F015         	goto	u3020
 12454   002A3E                     u3021:
 12455   002A3E  EF2B  F015         	goto	l3715
 12456   002A42                     u3020:
 12457   002A42  0E00               	movlw	0
 12458   002A44  6E01               	movwf	?___fladd^0,c
 12459   002A46  0E00               	movlw	0
 12460   002A48  6E02               	movwf	(?___fladd+1)^0,c
 12461   002A4A  0E00               	movlw	0
 12462   002A4C  6E03               	movwf	(?___fladd+2)^0,c
 12463   002A4E  0E00               	movlw	0
 12464   002A50  6E04               	movwf	(?___fladd+3)^0,c
 12465   002A52  EF7A  F016         	goto	l1151
 12466   002A56                     l3715:
 12467   002A56  5005               	movf	___fladd@a^0,w,c
 12468   002A58  2601               	addwf	___fladd@b^0,f,c
 12469   002A5A  5006               	movf	(___fladd@a+1)^0,w,c
 12470   002A5C  2202               	addwfc	(___fladd@b+1)^0,f,c
 12471   002A5E  5007               	movf	(___fladd@a+2)^0,w,c
 12472   002A60  2203               	addwfc	(___fladd@b+2)^0,f,c
 12473   002A62  5008               	movf	(___fladd@a+3)^0,w,c
 12474   002A64  2204               	addwfc	(___fladd@b+3)^0,f,c
 12475   002A66  A004               	btfss	(___fladd@b+3)^0,0,c
 12476   002A68  EF38  F015         	goto	u3031
 12477   002A6C  EF3A  F015         	goto	u3030
 12478   002A70                     u3031:
 12479   002A70  EFE6  F015         	goto	l3769
 12480   002A74                     u3030:
 12481   002A74  A010               	btfss	___fladd@grs^0,0,c
 12482   002A76  EF3F  F015         	goto	u3041
 12483   002A7A  EF41  F015         	goto	u3040
 12484   002A7E                     u3041:
 12485   002A7E  EF47  F015         	goto	l3723
 12486   002A82                     u3040:
 12487   002A82  90D8               	bcf	status,0,c
 12488   002A84  3010               	rrcf	___fladd@grs^0,w,c
 12489   002A86  0901               	iorlw	1
 12490   002A88  6E10               	movwf	___fladd@grs^0,c
 12491   002A8A  EF49  F015         	goto	l3725
 12492   002A8E                     l3723:
 12493   002A8E  90D8               	bcf	status,0,c
 12494   002A90  3210               	rrcf	___fladd@grs^0,f,c
 12495   002A92                     l3725:
 12496   002A92  A001               	btfss	___fladd@b^0,0,c
 12497   002A94  EF4E  F015         	goto	u3051
 12498   002A98  EF50  F015         	goto	u3050
 12499   002A9C                     u3051:
 12500   002A9C  EF51  F015         	goto	l3729
 12501   002AA0                     u3050:
 12502   002AA0  8E10               	bsf	___fladd@grs^0,7,c
 12503   002AA2                     l3729:
 12504   002AA2  3404               	rlcf	(___fladd@b+3)^0,w,c
 12505   002AA4  3204               	rrcf	(___fladd@b+3)^0,f,c
 12506   002AA6  3203               	rrcf	(___fladd@b+2)^0,f,c
 12507   002AA8  3202               	rrcf	(___fladd@b+1)^0,f,c
 12508   002AAA  3201               	rrcf	___fladd@b^0,f,c
 12509   002AAC  2A0F               	incf	___fladd@bexp^0,f,c
 12510   002AAE  EFE6  F015         	goto	l3769
 12511   002AB2                     l3733:
 12512   002AB2  5005               	movf	___fladd@a^0,w,c
 12513   002AB4  5C01               	subwf	___fladd@b^0,w,c
 12514   002AB6  5006               	movf	(___fladd@a+1)^0,w,c
 12515   002AB8  5802               	subwfb	(___fladd@b+1)^0,w,c
 12516   002ABA  5007               	movf	(___fladd@a+2)^0,w,c
 12517   002ABC  5803               	subwfb	(___fladd@b+2)^0,w,c
 12518   002ABE  5004               	movf	(___fladd@b+3)^0,w,c
 12519   002AC0  0A80               	xorlw	128
 12520   002AC2  6E09               	movwf	??___fladd^0,c
 12521   002AC4  5008               	movf	(___fladd@a+3)^0,w,c
 12522   002AC6  0A80               	xorlw	128
 12523   002AC8  5809               	subwfb	??___fladd^0,w,c
 12524   002ACA  B0D8               	btfsc	status,0,c
 12525   002ACC  EF6A  F015         	goto	u3061
 12526   002AD0  EF6C  F015         	goto	u3060
 12527   002AD4                     u3061:
 12528   002AD4  EF97  F015         	goto	l3743
 12529   002AD8                     u3060:
 12530   002AD8  5001               	movf	___fladd@b^0,w,c
 12531   002ADA  5C05               	subwf	___fladd@a^0,w,c
 12532   002ADC  6E09               	movwf	??___fladd^0,c
 12533   002ADE  5002               	movf	(___fladd@b+1)^0,w,c
 12534   002AE0  5806               	subwfb	(___fladd@a+1)^0,w,c
 12535   002AE2  6E0A               	movwf	(??___fladd+1)^0,c
 12536   002AE4  5003               	movf	(___fladd@b+2)^0,w,c
 12537   002AE6  5807               	subwfb	(___fladd@a+2)^0,w,c
 12538   002AE8  6E0B               	movwf	(??___fladd+2)^0,c
 12539   002AEA  5004               	movf	(___fladd@b+3)^0,w,c
 12540   002AEC  5808               	subwfb	(___fladd@a+3)^0,w,c
 12541   002AEE  6E0C               	movwf	(??___fladd+3)^0,c
 12542   002AF0  0EFF               	movlw	255
 12543   002AF2  2409               	addwf	??___fladd^0,w,c
 12544   002AF4  6E01               	movwf	___fladd@b^0,c
 12545   002AF6  0EFF               	movlw	255
 12546   002AF8  200A               	addwfc	(??___fladd+1)^0,w,c
 12547   002AFA  6E02               	movwf	(___fladd@b+1)^0,c
 12548   002AFC  0EFF               	movlw	255
 12549   002AFE  200B               	addwfc	(??___fladd+2)^0,w,c
 12550   002B00  6E03               	movwf	(___fladd@b+2)^0,c
 12551   002B02  0EFF               	movlw	255
 12552   002B04  200C               	addwfc	(??___fladd+3)^0,w,c
 12553   002B06  6E04               	movwf	(___fladd@b+3)^0,c
 12554   002B08  0E80               	movlw	128
 12555   002B0A  1A0D               	xorwf	___fladd@signs^0,f,c
 12556   002B0C  6C10               	negf	___fladd@grs^0,c
 12557   002B0E  5010               	movf	___fladd@grs^0,w,c
 12558   002B10  A4D8               	btfss	status,2,c
 12559   002B12  EF8D  F015         	goto	u3071
 12560   002B16  EF8F  F015         	goto	u3070
 12561   002B1A                     u3071:
 12562   002B1A  EF9F  F015         	goto	l1159
 12563   002B1E                     u3070:
 12564   002B1E  0E01               	movlw	1
 12565   002B20  2601               	addwf	___fladd@b^0,f,c
 12566   002B22  0E00               	movlw	0
 12567   002B24  2202               	addwfc	(___fladd@b+1)^0,f,c
 12568   002B26  2203               	addwfc	(___fladd@b+2)^0,f,c
 12569   002B28  2204               	addwfc	(___fladd@b+3)^0,f,c
 12570   002B2A  EF9F  F015         	goto	l1159
 12571   002B2E                     l3743:
 12572   002B2E  5005               	movf	___fladd@a^0,w,c
 12573   002B30  5E01               	subwf	___fladd@b^0,f,c
 12574   002B32  5006               	movf	(___fladd@a+1)^0,w,c
 12575   002B34  5A02               	subwfb	(___fladd@b+1)^0,f,c
 12576   002B36  5007               	movf	(___fladd@a+2)^0,w,c
 12577   002B38  5A03               	subwfb	(___fladd@b+2)^0,f,c
 12578   002B3A  5008               	movf	(___fladd@a+3)^0,w,c
 12579   002B3C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 12580   002B3E                     l1159:
 12581   002B3E  5001               	movf	___fladd@b^0,w,c
 12582   002B40  1002               	iorwf	(___fladd@b+1)^0,w,c
 12583   002B42  1003               	iorwf	(___fladd@b+2)^0,w,c
 12584   002B44  1004               	iorwf	(___fladd@b+3)^0,w,c
 12585   002B46  A4D8               	btfss	status,2,c
 12586   002B48  EFA8  F015         	goto	u3081
 12587   002B4C  EFAA  F015         	goto	u3080
 12588   002B50                     u3081:
 12589   002B50  EFDF  F015         	goto	l3767
 12590   002B54                     u3080:
 12591   002B54  5010               	movf	___fladd@grs^0,w,c
 12592   002B56  A4D8               	btfss	status,2,c
 12593   002B58  EFB0  F015         	goto	u3091
 12594   002B5C  EFB2  F015         	goto	u3090
 12595   002B60                     u3091:
 12596   002B60  EFDF  F015         	goto	l3767
 12597   002B64                     u3090:
 12598   002B64  0E00               	movlw	0
 12599   002B66  6E01               	movwf	?___fladd^0,c
 12600   002B68  0E00               	movlw	0
 12601   002B6A  6E02               	movwf	(?___fladd+1)^0,c
 12602   002B6C  0E00               	movlw	0
 12603   002B6E  6E03               	movwf	(?___fladd+2)^0,c
 12604   002B70  0E00               	movlw	0
 12605   002B72  6E04               	movwf	(?___fladd+3)^0,c
 12606   002B74  EF7A  F016         	goto	l1151
 12607   002B78                     l3751:
 12608   002B78  90D8               	bcf	status,0,c
 12609   002B7A  3601               	rlcf	___fladd@b^0,f,c
 12610   002B7C  3602               	rlcf	(___fladd@b+1)^0,f,c
 12611   002B7E  3603               	rlcf	(___fladd@b+2)^0,f,c
 12612   002B80  3604               	rlcf	(___fladd@b+3)^0,f,c
 12613   002B82  AE10               	btfss	___fladd@grs^0,7,c
 12614   002B84  EFC6  F015         	goto	u3101
 12615   002B88  EFC8  F015         	goto	u3100
 12616   002B8C                     u3101:
 12617   002B8C  EFC9  F015         	goto	l3757
 12618   002B90                     u3100:
 12619   002B90  8001               	bsf	___fladd@b^0,0,c
 12620   002B92                     l3757:
 12621   002B92  A010               	btfss	___fladd@grs^0,0,c
 12622   002B94  EFCE  F015         	goto	u3111
 12623   002B98  EFD0  F015         	goto	u3110
 12624   002B9C                     u3111:
 12625   002B9C  EFD4  F015         	goto	l3761
 12626   002BA0                     u3110:
 12627   002BA0  80D8               	bsf	status,0,c
 12628   002BA2  3610               	rlcf	___fladd@grs^0,f,c
 12629   002BA4  EFD6  F015         	goto	l3763
 12630   002BA8                     l3761:
 12631   002BA8  90D8               	bcf	status,0,c
 12632   002BAA  3610               	rlcf	___fladd@grs^0,f,c
 12633   002BAC                     l3763:
 12634   002BAC  500F               	movf	___fladd@bexp^0,w,c
 12635   002BAE  B4D8               	btfsc	status,2,c
 12636   002BB0  EFDC  F015         	goto	u3121
 12637   002BB4  EFDE  F015         	goto	u3120
 12638   002BB8                     u3121:
 12639   002BB8  EFDF  F015         	goto	l3767
 12640   002BBC                     u3120:
 12641   002BBC  060F               	decf	___fladd@bexp^0,f,c
 12642   002BBE                     l3767:
 12643   002BBE  AE03               	btfss	(___fladd@b+2)^0,7,c
 12644   002BC0  EFE4  F015         	goto	u3131
 12645   002BC4  EFE6  F015         	goto	u3130
 12646   002BC8                     u3131:
 12647   002BC8  EFBC  F015         	goto	l3751
 12648   002BCC                     u3130:
 12649   002BCC                     l3769:
 12650   002BCC  0E00               	movlw	0
 12651   002BCE  6E0E               	movwf	___fladd@aexp^0,c
 12652   002BD0  AE10               	btfss	___fladd@grs^0,7,c
 12653   002BD2  EFED  F015         	goto	u3141
 12654   002BD6  EFEF  F015         	goto	u3140
 12655   002BDA                     u3141:
 12656   002BDA  EF07  F016         	goto	l1168
 12657   002BDE                     u3140:
 12658   002BDE  C010  F009         	movff	___fladd@grs,??___fladd
 12659   002BE2  0E7F               	movlw	127
 12660   002BE4  1609               	andwf	??___fladd^0,f,c
 12661   002BE6  B4D8               	btfsc	status,2,c
 12662   002BE8  EFF8  F015         	goto	u3151
 12663   002BEC  EFFA  F015         	goto	u3150
 12664   002BF0                     u3151:
 12665   002BF0  EFFE  F015         	goto	l1169
 12666   002BF4                     u3150:
 12667   002BF4                     l3775:
 12668   002BF4  0E01               	movlw	1
 12669   002BF6  6E0E               	movwf	___fladd@aexp^0,c
 12670   002BF8  EF07  F016         	goto	l1168
 12671   002BFC                     l1169:
 12672   002BFC  A001               	btfss	___fladd@b^0,0,c
 12673   002BFE  EF03  F016         	goto	u3161
 12674   002C02  EF05  F016         	goto	u3160
 12675   002C06                     u3161:
 12676   002C06  EF07  F016         	goto	l1168
 12677   002C0A                     u3160:
 12678   002C0A  EFFA  F015         	goto	l3775
 12679   002C0E                     l1168:
 12680   002C0E  500E               	movf	___fladd@aexp^0,w,c
 12681   002C10  B4D8               	btfsc	status,2,c
 12682   002C12  EF0D  F016         	goto	u3171
 12683   002C16  EF0F  F016         	goto	u3170
 12684   002C1A                     u3171:
 12685   002C1A  EF3A  F016         	goto	l3787
 12686   002C1E                     u3170:
 12687   002C1E  0E01               	movlw	1
 12688   002C20  2601               	addwf	___fladd@b^0,f,c
 12689   002C22  0E00               	movlw	0
 12690   002C24  2202               	addwfc	(___fladd@b+1)^0,f,c
 12691   002C26  2203               	addwfc	(___fladd@b+2)^0,f,c
 12692   002C28  2204               	addwfc	(___fladd@b+3)^0,f,c
 12693   002C2A  A004               	btfss	(___fladd@b+3)^0,0,c
 12694   002C2C  EF1A  F016         	goto	u3181
 12695   002C30  EF1C  F016         	goto	u3180
 12696   002C34                     u3181:
 12697   002C34  EF3A  F016         	goto	l3787
 12698   002C38                     u3180:
 12699   002C38  C001  F009         	movff	___fladd@b,??___fladd
 12700   002C3C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 12701   002C40  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 12702   002C44  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 12703   002C48  340C               	rlcf	(??___fladd+3)^0,w,c
 12704   002C4A  320C               	rrcf	(??___fladd+3)^0,f,c
 12705   002C4C  320B               	rrcf	(??___fladd+2)^0,f,c
 12706   002C4E  320A               	rrcf	(??___fladd+1)^0,f,c
 12707   002C50  3209               	rrcf	??___fladd^0,f,c
 12708   002C52  C009  F001         	movff	??___fladd,___fladd@b
 12709   002C56  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 12710   002C5A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 12711   002C5E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 12712   002C62  280F               	incf	___fladd@bexp^0,w,c
 12713   002C64  B4D8               	btfsc	status,2,c
 12714   002C66  EF37  F016         	goto	u3191
 12715   002C6A  EF39  F016         	goto	u3190
 12716   002C6E                     u3191:
 12717   002C6E  EF3A  F016         	goto	l3787
 12718   002C72                     u3190:
 12719   002C72  2A0F               	incf	___fladd@bexp^0,f,c
 12720   002C74                     l3787:
 12721   002C74  280F               	incf	___fladd@bexp^0,w,c
 12722   002C76  B4D8               	btfsc	status,2,c
 12723   002C78  EF40  F016         	goto	u3201
 12724   002C7C  EF42  F016         	goto	u3200
 12725   002C80                     u3201:
 12726   002C80  EF4A  F016         	goto	l3791
 12727   002C84                     u3200:
 12728   002C84  500F               	movf	___fladd@bexp^0,w,c
 12729   002C86  A4D8               	btfss	status,2,c
 12730   002C88  EF48  F016         	goto	u3211
 12731   002C8C  EF4A  F016         	goto	u3210
 12732   002C90                     u3211:
 12733   002C90  EF5C  F016         	goto	l3795
 12734   002C94                     u3210:
 12735   002C94                     l3791:
 12736   002C94  0E00               	movlw	0
 12737   002C96  6E01               	movwf	___fladd@b^0,c
 12738   002C98  0E00               	movlw	0
 12739   002C9A  6E02               	movwf	(___fladd@b+1)^0,c
 12740   002C9C  0E00               	movlw	0
 12741   002C9E  6E03               	movwf	(___fladd@b+2)^0,c
 12742   002CA0  0E00               	movlw	0
 12743   002CA2  6E04               	movwf	(___fladd@b+3)^0,c
 12744   002CA4  500F               	movf	___fladd@bexp^0,w,c
 12745   002CA6  A4D8               	btfss	status,2,c
 12746   002CA8  EF58  F016         	goto	u3221
 12747   002CAC  EF5A  F016         	goto	u3220
 12748   002CB0                     u3221:
 12749   002CB0  EF5C  F016         	goto	l3795
 12750   002CB4                     u3220:
 12751   002CB4  0E00               	movlw	0
 12752   002CB6  6E0D               	movwf	___fladd@signs^0,c
 12753   002CB8                     l3795:
 12754   002CB8  A00F               	btfss	___fladd@bexp^0,0,c
 12755   002CBA  EF61  F016         	goto	u3231
 12756   002CBE  EF63  F016         	goto	u3230
 12757   002CC2                     u3231:
 12758   002CC2  EF66  F016         	goto	l3799
 12759   002CC6                     u3230:
 12760   002CC6  8E03               	bsf	(___fladd@b+2)^0,7,c
 12761   002CC8  EF67  F016         	goto	l3801
 12762   002CCC                     l3799:
 12763   002CCC  9E03               	bcf	(___fladd@b+2)^0,7,c
 12764   002CCE                     l3801:
 12765   002CCE  90D8               	bcf	status,0,c
 12766   002CD0  300F               	rrcf	___fladd@bexp^0,w,c
 12767   002CD2  6E04               	movwf	(___fladd@b+3)^0,c
 12768   002CD4  AE0D               	btfss	___fladd@signs^0,7,c
 12769   002CD6  EF6F  F016         	goto	u3241
 12770   002CDA  EF71  F016         	goto	u3240
 12771   002CDE                     u3241:
 12772   002CDE  EF72  F016         	goto	l3807
 12773   002CE2                     u3240:
 12774   002CE2  8E04               	bsf	(___fladd@b+3)^0,7,c
 12775   002CE4                     l3807:
 12776   002CE4  C001  F001         	movff	___fladd@b,?___fladd
 12777   002CE8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 12778   002CEC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 12779   002CF0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 12780   002CF4                     l1151:
 12781   002CF4  0012               	return		;funcret
 12782   002CF6                     __end_of___fladd:
 12783                           	callstack 0
 12784                           
 12785 ;; *************** function ___flmul *****************
 12786 ;; Defined at:
 12787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;  b               4   16[COMRAM] unsigned char 
 12790 ;;  a               4   20[COMRAM] unsigned char 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;  prod            4   35[COMRAM] struct .
 12793 ;;  grs             4   29[COMRAM] unsigned long 
 12794 ;;  temp            2   39[COMRAM] struct .
 12795 ;;  bexp            1   34[COMRAM] unsigned char 
 12796 ;;  aexp            1   33[COMRAM] unsigned char 
 12797 ;;  sign            1   28[COMRAM] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  4   16[COMRAM] unsigned char 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, prodl, prodh
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12808 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12809 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12810 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12811 ;;Total ram usage:       25 bytes
 12812 ;; Hardware stack levels used: 1
 12813 ;; Hardware stack levels required when called: 1
 12814 ;; This function calls:
 12815 ;;		Nothing
 12816 ;; This function is called by:
 12817 ;;		_Colour_decider
 12818 ;;		_turnRight45
 12819 ;;		_turnLeft45
 12820 ;;		_efgtoa
 12821 ;; This function uses a non-reentrant model
 12822 ;;
 12823                           
 12824                           	psect	text69
 12825   002CF6                     __ptext69:
 12826                           	callstack 0
 12827   002CF6                     ___flmul:
 12828                           	callstack 25
 12829   002CF6  5014               	movf	(___flmul@b+3)^0,w,c
 12830   002CF8  0B80               	andlw	128
 12831   002CFA  6E1D               	movwf	___flmul@sign^0,c
 12832   002CFC  5014               	movf	(___flmul@b+3)^0,w,c
 12833   002CFE  2414               	addwf	(___flmul@b+3)^0,w,c
 12834   002D00  6E23               	movwf	___flmul@bexp^0,c
 12835   002D02  AE13               	btfss	(___flmul@b+2)^0,7,c
 12836   002D04  EF86  F016         	goto	u3671
 12837   002D08  EF88  F016         	goto	u3670
 12838   002D0C                     u3671:
 12839   002D0C  EF89  F016         	goto	l4081
 12840   002D10                     u3670:
 12841   002D10  8023               	bsf	___flmul@bexp^0,0,c
 12842   002D12                     l4081:
 12843   002D12  5023               	movf	___flmul@bexp^0,w,c
 12844   002D14  B4D8               	btfsc	status,2,c
 12845   002D16  EF8F  F016         	goto	u3681
 12846   002D1A  EF91  F016         	goto	u3680
 12847   002D1E                     u3681:
 12848   002D1E  EFA4  F016         	goto	l4089
 12849   002D22                     u3680:
 12850   002D22  2823               	incf	___flmul@bexp^0,w,c
 12851   002D24  A4D8               	btfss	status,2,c
 12852   002D26  EF97  F016         	goto	u3691
 12853   002D2A  EF99  F016         	goto	u3690
 12854   002D2E                     u3691:
 12855   002D2E  EFA1  F016         	goto	l4087
 12856   002D32                     u3690:
 12857   002D32  0E00               	movlw	0
 12858   002D34  6E11               	movwf	___flmul@b^0,c
 12859   002D36  0E00               	movlw	0
 12860   002D38  6E12               	movwf	(___flmul@b+1)^0,c
 12861   002D3A  0E00               	movlw	0
 12862   002D3C  6E13               	movwf	(___flmul@b+2)^0,c
 12863   002D3E  0E00               	movlw	0
 12864   002D40  6E14               	movwf	(___flmul@b+3)^0,c
 12865   002D42                     l4087:
 12866   002D42  8E13               	bsf	(___flmul@b+2)^0,7,c
 12867   002D44  EFAC  F016         	goto	l4091
 12868   002D48                     l4089:
 12869   002D48  0E00               	movlw	0
 12870   002D4A  6E11               	movwf	___flmul@b^0,c
 12871   002D4C  0E00               	movlw	0
 12872   002D4E  6E12               	movwf	(___flmul@b+1)^0,c
 12873   002D50  0E00               	movlw	0
 12874   002D52  6E13               	movwf	(___flmul@b+2)^0,c
 12875   002D54  0E00               	movlw	0
 12876   002D56  6E14               	movwf	(___flmul@b+3)^0,c
 12877   002D58                     l4091:
 12878   002D58  5018               	movf	(___flmul@a+3)^0,w,c
 12879   002D5A  0B80               	andlw	128
 12880   002D5C  1A1D               	xorwf	___flmul@sign^0,f,c
 12881   002D5E  5018               	movf	(___flmul@a+3)^0,w,c
 12882   002D60  2418               	addwf	(___flmul@a+3)^0,w,c
 12883   002D62  6E22               	movwf	___flmul@aexp^0,c
 12884   002D64  AE17               	btfss	(___flmul@a+2)^0,7,c
 12885   002D66  EFB7  F016         	goto	u3701
 12886   002D6A  EFB9  F016         	goto	u3700
 12887   002D6E                     u3701:
 12888   002D6E  EFBA  F016         	goto	l4099
 12889   002D72                     u3700:
 12890   002D72  8022               	bsf	___flmul@aexp^0,0,c
 12891   002D74                     l4099:
 12892   002D74  5022               	movf	___flmul@aexp^0,w,c
 12893   002D76  B4D8               	btfsc	status,2,c
 12894   002D78  EFC0  F016         	goto	u3711
 12895   002D7C  EFC2  F016         	goto	u3710
 12896   002D80                     u3711:
 12897   002D80  EFD5  F016         	goto	l4107
 12898   002D84                     u3710:
 12899   002D84  2822               	incf	___flmul@aexp^0,w,c
 12900   002D86  A4D8               	btfss	status,2,c
 12901   002D88  EFC8  F016         	goto	u3721
 12902   002D8C  EFCA  F016         	goto	u3720
 12903   002D90                     u3721:
 12904   002D90  EFD2  F016         	goto	l4105
 12905   002D94                     u3720:
 12906   002D94  0E00               	movlw	0
 12907   002D96  6E15               	movwf	___flmul@a^0,c
 12908   002D98  0E00               	movlw	0
 12909   002D9A  6E16               	movwf	(___flmul@a+1)^0,c
 12910   002D9C  0E00               	movlw	0
 12911   002D9E  6E17               	movwf	(___flmul@a+2)^0,c
 12912   002DA0  0E00               	movlw	0
 12913   002DA2  6E18               	movwf	(___flmul@a+3)^0,c
 12914   002DA4                     l4105:
 12915   002DA4  8E17               	bsf	(___flmul@a+2)^0,7,c
 12916   002DA6  EFDD  F016         	goto	l1228
 12917   002DAA                     l4107:
 12918   002DAA  0E00               	movlw	0
 12919   002DAC  6E15               	movwf	___flmul@a^0,c
 12920   002DAE  0E00               	movlw	0
 12921   002DB0  6E16               	movwf	(___flmul@a+1)^0,c
 12922   002DB2  0E00               	movlw	0
 12923   002DB4  6E17               	movwf	(___flmul@a+2)^0,c
 12924   002DB6  0E00               	movlw	0
 12925   002DB8  6E18               	movwf	(___flmul@a+3)^0,c
 12926   002DBA                     l1228:
 12927   002DBA  5022               	movf	___flmul@aexp^0,w,c
 12928   002DBC  B4D8               	btfsc	status,2,c
 12929   002DBE  EFE3  F016         	goto	u3731
 12930   002DC2  EFE5  F016         	goto	u3730
 12931   002DC6                     u3731:
 12932   002DC6  EFED  F016         	goto	l4111
 12933   002DCA                     u3730:
 12934   002DCA  5023               	movf	___flmul@bexp^0,w,c
 12935   002DCC  A4D8               	btfss	status,2,c
 12936   002DCE  EFEB  F016         	goto	u3741
 12937   002DD2  EFED  F016         	goto	u3740
 12938   002DD6                     u3741:
 12939   002DD6  EFF7  F016         	goto	l4115
 12940   002DDA                     u3740:
 12941   002DDA                     l4111:
 12942   002DDA  0E00               	movlw	0
 12943   002DDC  6E11               	movwf	?___flmul^0,c
 12944   002DDE  0E00               	movlw	0
 12945   002DE0  6E12               	movwf	(?___flmul+1)^0,c
 12946   002DE2  0E00               	movlw	0
 12947   002DE4  6E13               	movwf	(?___flmul+2)^0,c
 12948   002DE6  0E00               	movlw	0
 12949   002DE8  6E14               	movwf	(?___flmul+3)^0,c
 12950   002DEA  EF8F  F018         	goto	l1232
 12951   002DEE                     l4115:
 12952   002DEE  5017               	movf	(___flmul@a+2)^0,w,c
 12953   002DF0  0211               	mulwf	___flmul@b^0,c
 12954   002DF2  CFF3 F028          	movff	prodl,___flmul@temp
 12955   002DF6  CFF4 F029          	movff	prodh,___flmul@temp+1
 12956   002DFA  5028               	movf	___flmul@temp^0,w,c
 12957   002DFC  6E1E               	movwf	___flmul@grs^0,c
 12958   002DFE  6A1F               	clrf	(___flmul@grs+1)^0,c
 12959   002E00  6A20               	clrf	(___flmul@grs+2)^0,c
 12960   002E02  6A21               	clrf	(___flmul@grs+3)^0,c
 12961   002E04  5029               	movf	(___flmul@temp+1)^0,w,c
 12962   002E06  6E24               	movwf	___flmul@prod^0,c
 12963   002E08  6A25               	clrf	(___flmul@prod+1)^0,c
 12964   002E0A  6A26               	clrf	(___flmul@prod+2)^0,c
 12965   002E0C  6A27               	clrf	(___flmul@prod+3)^0,c
 12966   002E0E  5016               	movf	(___flmul@a+1)^0,w,c
 12967   002E10  0212               	mulwf	(___flmul@b+1)^0,c
 12968   002E12  CFF3 F028          	movff	prodl,___flmul@temp
 12969   002E16  CFF4 F029          	movff	prodh,___flmul@temp+1
 12970   002E1A  5028               	movf	___flmul@temp^0,w,c
 12971   002E1C  261E               	addwf	___flmul@grs^0,f,c
 12972   002E1E  0E00               	movlw	0
 12973   002E20  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12974   002E22  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12975   002E24  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12976   002E26  5029               	movf	(___flmul@temp+1)^0,w,c
 12977   002E28  2624               	addwf	___flmul@prod^0,f,c
 12978   002E2A  0E00               	movlw	0
 12979   002E2C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12980   002E2E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12981   002E30  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12982   002E32  5015               	movf	___flmul@a^0,w,c
 12983   002E34  0213               	mulwf	(___flmul@b+2)^0,c
 12984   002E36  CFF3 F028          	movff	prodl,___flmul@temp
 12985   002E3A  CFF4 F029          	movff	prodh,___flmul@temp+1
 12986   002E3E  5028               	movf	___flmul@temp^0,w,c
 12987   002E40  261E               	addwf	___flmul@grs^0,f,c
 12988   002E42  0E00               	movlw	0
 12989   002E44  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12990   002E46  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12991   002E48  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12992   002E4A  5029               	movf	(___flmul@temp+1)^0,w,c
 12993   002E4C  2624               	addwf	___flmul@prod^0,f,c
 12994   002E4E  0E00               	movlw	0
 12995   002E50  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12996   002E52  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12997   002E54  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12998   002E56  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12999   002E5A  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13000   002E5E  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13001   002E62  6A1E               	clrf	___flmul@grs^0,c
 13002   002E64  5015               	movf	___flmul@a^0,w,c
 13003   002E66  0212               	mulwf	(___flmul@b+1)^0,c
 13004   002E68  CFF3 F028          	movff	prodl,___flmul@temp
 13005   002E6C  CFF4 F029          	movff	prodh,___flmul@temp+1
 13006   002E70  5028               	movf	___flmul@temp^0,w,c
 13007   002E72  261E               	addwf	___flmul@grs^0,f,c
 13008   002E74  5029               	movf	(___flmul@temp+1)^0,w,c
 13009   002E76  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13010   002E78  0E00               	movlw	0
 13011   002E7A  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13012   002E7C  0E00               	movlw	0
 13013   002E7E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13014   002E80  5016               	movf	(___flmul@a+1)^0,w,c
 13015   002E82  0211               	mulwf	___flmul@b^0,c
 13016   002E84  CFF3 F028          	movff	prodl,___flmul@temp
 13017   002E88  CFF4 F029          	movff	prodh,___flmul@temp+1
 13018   002E8C  5028               	movf	___flmul@temp^0,w,c
 13019   002E8E  261E               	addwf	___flmul@grs^0,f,c
 13020   002E90  5029               	movf	(___flmul@temp+1)^0,w,c
 13021   002E92  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13022   002E94  0E00               	movlw	0
 13023   002E96  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13024   002E98  0E00               	movlw	0
 13025   002E9A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13026   002E9C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13027   002EA0  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13028   002EA4  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13029   002EA8  6A1E               	clrf	___flmul@grs^0,c
 13030   002EAA  5015               	movf	___flmul@a^0,w,c
 13031   002EAC  0211               	mulwf	___flmul@b^0,c
 13032   002EAE  CFF3 F028          	movff	prodl,___flmul@temp
 13033   002EB2  CFF4 F029          	movff	prodh,___flmul@temp+1
 13034   002EB6  5028               	movf	___flmul@temp^0,w,c
 13035   002EB8  261E               	addwf	___flmul@grs^0,f,c
 13036   002EBA  5029               	movf	(___flmul@temp+1)^0,w,c
 13037   002EBC  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13038   002EBE  0E00               	movlw	0
 13039   002EC0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13040   002EC2  0E00               	movlw	0
 13041   002EC4  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13042   002EC6  5017               	movf	(___flmul@a+2)^0,w,c
 13043   002EC8  0212               	mulwf	(___flmul@b+1)^0,c
 13044   002ECA  CFF3 F028          	movff	prodl,___flmul@temp
 13045   002ECE  CFF4 F029          	movff	prodh,___flmul@temp+1
 13046   002ED2  5028               	movf	___flmul@temp^0,w,c
 13047   002ED4  2624               	addwf	___flmul@prod^0,f,c
 13048   002ED6  5029               	movf	(___flmul@temp+1)^0,w,c
 13049   002ED8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13050   002EDA  0E00               	movlw	0
 13051   002EDC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13052   002EDE  0E00               	movlw	0
 13053   002EE0  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13054   002EE2  5016               	movf	(___flmul@a+1)^0,w,c
 13055   002EE4  0213               	mulwf	(___flmul@b+2)^0,c
 13056   002EE6  CFF3 F028          	movff	prodl,___flmul@temp
 13057   002EEA  CFF4 F029          	movff	prodh,___flmul@temp+1
 13058   002EEE  5028               	movf	___flmul@temp^0,w,c
 13059   002EF0  2624               	addwf	___flmul@prod^0,f,c
 13060   002EF2  5029               	movf	(___flmul@temp+1)^0,w,c
 13061   002EF4  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13062   002EF6  0E00               	movlw	0
 13063   002EF8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13064   002EFA  0E00               	movlw	0
 13065   002EFC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13066   002EFE  5017               	movf	(___flmul@a+2)^0,w,c
 13067   002F00  0213               	mulwf	(___flmul@b+2)^0,c
 13068   002F02  CFF3 F028          	movff	prodl,___flmul@temp
 13069   002F06  CFF4 F029          	movff	prodh,___flmul@temp+1
 13070   002F0A  5028               	movf	___flmul@temp^0,w,c
 13071   002F0C  6E19               	movwf	??___flmul^0,c
 13072   002F0E  5029               	movf	(___flmul@temp+1)^0,w,c
 13073   002F10  6E1A               	movwf	(??___flmul+1)^0,c
 13074   002F12  6A1B               	clrf	(??___flmul+2)^0,c
 13075   002F14  6A1C               	clrf	(??___flmul+3)^0,c
 13076   002F16  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 13077   002F1A  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 13078   002F1E  C019  F01A         	movff	??___flmul,??___flmul+1
 13079   002F22  6A19               	clrf	??___flmul^0,c
 13080   002F24  5019               	movf	??___flmul^0,w,c
 13081   002F26  2624               	addwf	___flmul@prod^0,f,c
 13082   002F28  501A               	movf	(??___flmul+1)^0,w,c
 13083   002F2A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13084   002F2C  501B               	movf	(??___flmul+2)^0,w,c
 13085   002F2E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13086   002F30  501C               	movf	(??___flmul+3)^0,w,c
 13087   002F32  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13088   002F34  C01E  F019         	movff	___flmul@grs,??___flmul
 13089   002F38  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 13090   002F3C  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 13091   002F40  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 13092   002F44  0E19               	movlw	25
 13093   002F46  EFAA  F017         	goto	u3750
 13094   002F4A                     u3755:
 13095   002F4A  90D8               	bcf	status,0,c
 13096   002F4C  321C               	rrcf	(??___flmul+3)^0,f,c
 13097   002F4E  321B               	rrcf	(??___flmul+2)^0,f,c
 13098   002F50  321A               	rrcf	(??___flmul+1)^0,f,c
 13099   002F52  3219               	rrcf	??___flmul^0,f,c
 13100   002F54                     u3750:
 13101   002F54  2EE8               	decfsz	wreg,f,c
 13102   002F56  EFA5  F017         	goto	u3755
 13103   002F5A  5019               	movf	??___flmul^0,w,c
 13104   002F5C  2624               	addwf	___flmul@prod^0,f,c
 13105   002F5E  501A               	movf	(??___flmul+1)^0,w,c
 13106   002F60  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13107   002F62  501B               	movf	(??___flmul+2)^0,w,c
 13108   002F64  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13109   002F66  501C               	movf	(??___flmul+3)^0,w,c
 13110   002F68  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13111   002F6A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13112   002F6E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13113   002F72  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13114   002F76  6A1E               	clrf	___flmul@grs^0,c
 13115   002F78  5022               	movf	___flmul@aexp^0,w,c
 13116   002F7A  C023  F019         	movff	___flmul@bexp,??___flmul
 13117   002F7E  6A1A               	clrf	(??___flmul+1)^0,c
 13118   002F80  2619               	addwf	??___flmul^0,f,c
 13119   002F82  0E00               	movlw	0
 13120   002F84  221A               	addwfc	(??___flmul+1)^0,f,c
 13121   002F86  0E82               	movlw	130
 13122   002F88  2419               	addwf	??___flmul^0,w,c
 13123   002F8A  6E28               	movwf	___flmul@temp^0,c
 13124   002F8C  0EFF               	movlw	255
 13125   002F8E  201A               	addwfc	(??___flmul+1)^0,w,c
 13126   002F90  6E29               	movwf	(___flmul@temp+1)^0,c
 13127   002F92  EFE0  F017         	goto	l4163
 13128   002F96                     l4157:
 13129   002F96  90D8               	bcf	status,0,c
 13130   002F98  3624               	rlcf	___flmul@prod^0,f,c
 13131   002F9A  3625               	rlcf	(___flmul@prod+1)^0,f,c
 13132   002F9C  3626               	rlcf	(___flmul@prod+2)^0,f,c
 13133   002F9E  3627               	rlcf	(___flmul@prod+3)^0,f,c
 13134   002FA0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13135   002FA2  EFD5  F017         	goto	u3761
 13136   002FA6  EFD7  F017         	goto	u3760
 13137   002FAA                     u3761:
 13138   002FAA  EFD8  F017         	goto	l1235
 13139   002FAE                     u3760:
 13140   002FAE  8024               	bsf	___flmul@prod^0,0,c
 13141   002FB0                     l1235:
 13142   002FB0  90D8               	bcf	status,0,c
 13143   002FB2  361E               	rlcf	___flmul@grs^0,f,c
 13144   002FB4  361F               	rlcf	(___flmul@grs+1)^0,f,c
 13145   002FB6  3620               	rlcf	(___flmul@grs+2)^0,f,c
 13146   002FB8  3621               	rlcf	(___flmul@grs+3)^0,f,c
 13147   002FBA  0628               	decf	___flmul@temp^0,f,c
 13148   002FBC  A0D8               	btfss	status,0,c
 13149   002FBE  0629               	decf	(___flmul@temp+1)^0,f,c
 13150   002FC0                     l4163:
 13151   002FC0  AE26               	btfss	(___flmul@prod+2)^0,7,c
 13152   002FC2  EFE5  F017         	goto	u3771
 13153   002FC6  EFE7  F017         	goto	u3770
 13154   002FCA                     u3771:
 13155   002FCA  EFCB  F017         	goto	l4157
 13156   002FCE                     u3770:
 13157   002FCE  0E00               	movlw	0
 13158   002FD0  6E22               	movwf	___flmul@aexp^0,c
 13159   002FD2  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13160   002FD4  EFEE  F017         	goto	u3781
 13161   002FD8  EFF0  F017         	goto	u3780
 13162   002FDC                     u3781:
 13163   002FDC  EF14  F018         	goto	l1237
 13164   002FE0                     u3780:
 13165   002FE0  0EFF               	movlw	255
 13166   002FE2  141E               	andwf	___flmul@grs^0,w,c
 13167   002FE4  6E19               	movwf	??___flmul^0,c
 13168   002FE6  0EFF               	movlw	255
 13169   002FE8  141F               	andwf	(___flmul@grs+1)^0,w,c
 13170   002FEA  6E1A               	movwf	(??___flmul+1)^0,c
 13171   002FEC  0EFF               	movlw	255
 13172   002FEE  1420               	andwf	(___flmul@grs+2)^0,w,c
 13173   002FF0  6E1B               	movwf	(??___flmul+2)^0,c
 13174   002FF2  0E7F               	movlw	127
 13175   002FF4  1421               	andwf	(___flmul@grs+3)^0,w,c
 13176   002FF6  6E1C               	movwf	(??___flmul+3)^0,c
 13177   002FF8  5019               	movf	??___flmul^0,w,c
 13178   002FFA  101A               	iorwf	(??___flmul+1)^0,w,c
 13179   002FFC  101B               	iorwf	(??___flmul+2)^0,w,c
 13180   002FFE  101C               	iorwf	(??___flmul+3)^0,w,c
 13181   003000  B4D8               	btfsc	status,2,c
 13182   003002  EF05  F018         	goto	u3791
 13183   003006  EF07  F018         	goto	u3790
 13184   00300A                     u3791:
 13185   00300A  EF0B  F018         	goto	l1238
 13186   00300E                     u3790:
 13187   00300E                     l4171:
 13188   00300E  0E01               	movlw	1
 13189   003010  6E22               	movwf	___flmul@aexp^0,c
 13190   003012  EF14  F018         	goto	l1237
 13191   003016                     l1238:
 13192   003016  A024               	btfss	___flmul@prod^0,0,c
 13193   003018  EF10  F018         	goto	u3801
 13194   00301C  EF12  F018         	goto	u3800
 13195   003020                     u3801:
 13196   003020  EF14  F018         	goto	l1237
 13197   003024                     u3800:
 13198   003024  EF07  F018         	goto	l4171
 13199   003028                     l1237:
 13200   003028  5022               	movf	___flmul@aexp^0,w,c
 13201   00302A  B4D8               	btfsc	status,2,c
 13202   00302C  EF1A  F018         	goto	u3811
 13203   003030  EF1C  F018         	goto	u3810
 13204   003034                     u3811:
 13205   003034  EF40  F018         	goto	l4183
 13206   003038                     u3810:
 13207   003038  0E01               	movlw	1
 13208   00303A  2624               	addwf	___flmul@prod^0,f,c
 13209   00303C  0E00               	movlw	0
 13210   00303E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13211   003040  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13212   003042  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13213   003044  A027               	btfss	(___flmul@prod+3)^0,0,c
 13214   003046  EF27  F018         	goto	u3821
 13215   00304A  EF29  F018         	goto	u3820
 13216   00304E                     u3821:
 13217   00304E  EF40  F018         	goto	l4183
 13218   003052                     u3820:
 13219   003052  C024  F019         	movff	___flmul@prod,??___flmul
 13220   003056  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 13221   00305A  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 13222   00305E  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 13223   003062  341C               	rlcf	(??___flmul+3)^0,w,c
 13224   003064  321C               	rrcf	(??___flmul+3)^0,f,c
 13225   003066  321B               	rrcf	(??___flmul+2)^0,f,c
 13226   003068  321A               	rrcf	(??___flmul+1)^0,f,c
 13227   00306A  3219               	rrcf	??___flmul^0,f,c
 13228   00306C  C019  F024         	movff	??___flmul,___flmul@prod
 13229   003070  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 13230   003074  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 13231   003078  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 13232   00307C  4A28               	infsnz	___flmul@temp^0,f,c
 13233   00307E  2A29               	incf	(___flmul@temp+1)^0,f,c
 13234   003080                     l4183:
 13235   003080  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13236   003082  EF4B  F018         	goto	u3831
 13237   003086  5029               	movf	(___flmul@temp+1)^0,w,c
 13238   003088  E108               	bnz	u3830
 13239   00308A  2828               	incf	___flmul@temp^0,w,c
 13240   00308C  A0D8               	btfss	status,0,c
 13241   00308E  EF4B  F018         	goto	u3831
 13242   003092  EF4D  F018         	goto	u3830
 13243   003096                     u3831:
 13244   003096  EF57  F018         	goto	l4187
 13245   00309A                     u3830:
 13246   00309A  0E00               	movlw	0
 13247   00309C  6E24               	movwf	___flmul@prod^0,c
 13248   00309E  0E00               	movlw	0
 13249   0030A0  6E25               	movwf	(___flmul@prod+1)^0,c
 13250   0030A2  0E80               	movlw	128
 13251   0030A4  6E26               	movwf	(___flmul@prod+2)^0,c
 13252   0030A6  0E7F               	movlw	127
 13253   0030A8  6E27               	movwf	(___flmul@prod+3)^0,c
 13254   0030AA  EF85  F018         	goto	l4199
 13255   0030AE                     l4187:
 13256   0030AE  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13257   0030B0  EF64  F018         	goto	u3840
 13258   0030B4  5029               	movf	(___flmul@temp+1)^0,w,c
 13259   0030B6  E106               	bnz	u3841
 13260   0030B8  0428               	decf	___flmul@temp^0,w,c
 13261   0030BA  B0D8               	btfsc	status,0,c
 13262   0030BC  EF62  F018         	goto	u3841
 13263   0030C0  EF64  F018         	goto	u3840
 13264   0030C4                     u3841:
 13265   0030C4  EF70  F018         	goto	l1245
 13266   0030C8                     u3840:
 13267   0030C8  0E00               	movlw	0
 13268   0030CA  6E24               	movwf	___flmul@prod^0,c
 13269   0030CC  0E00               	movlw	0
 13270   0030CE  6E25               	movwf	(___flmul@prod+1)^0,c
 13271   0030D0  0E00               	movlw	0
 13272   0030D2  6E26               	movwf	(___flmul@prod+2)^0,c
 13273   0030D4  0E00               	movlw	0
 13274   0030D6  6E27               	movwf	(___flmul@prod+3)^0,c
 13275   0030D8  0E00               	movlw	0
 13276   0030DA  6E1D               	movwf	___flmul@sign^0,c
 13277   0030DC  EF85  F018         	goto	l4199
 13278   0030E0                     l1245:
 13279   0030E0  C028  F023         	movff	___flmul@temp,___flmul@bexp
 13280   0030E4  0EFF               	movlw	255
 13281   0030E6  1624               	andwf	___flmul@prod^0,f,c
 13282   0030E8  0EFF               	movlw	255
 13283   0030EA  1625               	andwf	(___flmul@prod+1)^0,f,c
 13284   0030EC  0E7F               	movlw	127
 13285   0030EE  1626               	andwf	(___flmul@prod+2)^0,f,c
 13286   0030F0  0E00               	movlw	0
 13287   0030F2  1627               	andwf	(___flmul@prod+3)^0,f,c
 13288   0030F4  A023               	btfss	___flmul@bexp^0,0,c
 13289   0030F6  EF7F  F018         	goto	u3851
 13290   0030FA  EF81  F018         	goto	u3850
 13291   0030FE                     u3851:
 13292   0030FE  EF82  F018         	goto	l4197
 13293   003102                     u3850:
 13294   003102  8E26               	bsf	(___flmul@prod+2)^0,7,c
 13295   003104                     l4197:
 13296   003104  90D8               	bcf	status,0,c
 13297   003106  3023               	rrcf	___flmul@bexp^0,w,c
 13298   003108  6E27               	movwf	(___flmul@prod+3)^0,c
 13299   00310A                     l4199:
 13300   00310A  501D               	movf	___flmul@sign^0,w,c
 13301   00310C  1227               	iorwf	(___flmul@prod+3)^0,f,c
 13302   00310E  C024  F011         	movff	___flmul@prod,?___flmul
 13303   003112  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 13304   003116  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 13305   00311A  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 13306   00311E                     l1232:
 13307   00311E  0012               	return		;funcret
 13308   003120                     __end_of___flmul:
 13309                           	callstack 0
 13310                           
 13311 ;; *************** function ___flge *****************
 13312 ;; Defined at:
 13313 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;  ff1             4   41[COMRAM] unsigned char 
 13316 ;;  ff2             4   45[COMRAM] unsigned char 
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;		None               void
 13321 ;; Registers used:
 13322 ;;		wreg, status,2, status,0
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13328 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13331 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13332 ;;Total ram usage:       12 bytes
 13333 ;; Hardware stack levels used: 1
 13334 ;; Hardware stack levels required when called: 1
 13335 ;; This function calls:
 13336 ;;		Nothing
 13337 ;; This function is called by:
 13338 ;;		_Colour_decider
 13339 ;;		_efgtoa
 13340 ;; This function uses a non-reentrant model
 13341 ;;
 13342                           
 13343                           	psect	text70
 13344   004862                     __ptext70:
 13345                           	callstack 0
 13346   004862                     ___flge:
 13347                           	callstack 25
 13348   004862  0E00               	movlw	0
 13349   004864  142A               	andwf	___flge@ff1^0,w,c
 13350   004866  6E32               	movwf	??___flge^0,c
 13351   004868  0E00               	movlw	0
 13352   00486A  142B               	andwf	(___flge@ff1+1)^0,w,c
 13353   00486C  6E33               	movwf	(??___flge+1)^0,c
 13354   00486E  0E80               	movlw	128
 13355   004870  142C               	andwf	(___flge@ff1+2)^0,w,c
 13356   004872  6E34               	movwf	(??___flge+2)^0,c
 13357   004874  0E7F               	movlw	127
 13358   004876  142D               	andwf	(___flge@ff1+3)^0,w,c
 13359   004878  6E35               	movwf	(??___flge+3)^0,c
 13360   00487A  5032               	movf	??___flge^0,w,c
 13361   00487C  1033               	iorwf	(??___flge+1)^0,w,c
 13362   00487E  1034               	iorwf	(??___flge+2)^0,w,c
 13363   004880  1035               	iorwf	(??___flge+3)^0,w,c
 13364   004882  A4D8               	btfss	status,2,c
 13365   004884  EF46  F024         	goto	u3891
 13366   004888  EF48  F024         	goto	u3890
 13367   00488C                     u3891:
 13368   00488C  EF50  F024         	goto	l4231
 13369   004890                     u3890:
 13370   004890  0E00               	movlw	0
 13371   004892  6E2A               	movwf	___flge@ff1^0,c
 13372   004894  0E00               	movlw	0
 13373   004896  6E2B               	movwf	(___flge@ff1+1)^0,c
 13374   004898  0E00               	movlw	0
 13375   00489A  6E2C               	movwf	(___flge@ff1+2)^0,c
 13376   00489C  0E00               	movlw	0
 13377   00489E  6E2D               	movwf	(___flge@ff1+3)^0,c
 13378   0048A0                     l4231:
 13379   0048A0  0E00               	movlw	0
 13380   0048A2  142E               	andwf	___flge@ff2^0,w,c
 13381   0048A4  6E32               	movwf	??___flge^0,c
 13382   0048A6  0E00               	movlw	0
 13383   0048A8  142F               	andwf	(___flge@ff2+1)^0,w,c
 13384   0048AA  6E33               	movwf	(??___flge+1)^0,c
 13385   0048AC  0E80               	movlw	128
 13386   0048AE  1430               	andwf	(___flge@ff2+2)^0,w,c
 13387   0048B0  6E34               	movwf	(??___flge+2)^0,c
 13388   0048B2  0E7F               	movlw	127
 13389   0048B4  1431               	andwf	(___flge@ff2+3)^0,w,c
 13390   0048B6  6E35               	movwf	(??___flge+3)^0,c
 13391   0048B8  5032               	movf	??___flge^0,w,c
 13392   0048BA  1033               	iorwf	(??___flge+1)^0,w,c
 13393   0048BC  1034               	iorwf	(??___flge+2)^0,w,c
 13394   0048BE  1035               	iorwf	(??___flge+3)^0,w,c
 13395   0048C0  A4D8               	btfss	status,2,c
 13396   0048C2  EF65  F024         	goto	u3901
 13397   0048C6  EF67  F024         	goto	u3900
 13398   0048CA                     u3901:
 13399   0048CA  EF6F  F024         	goto	l4235
 13400   0048CE                     u3900:
 13401   0048CE  0E00               	movlw	0
 13402   0048D0  6E2E               	movwf	___flge@ff2^0,c
 13403   0048D2  0E00               	movlw	0
 13404   0048D4  6E2F               	movwf	(___flge@ff2+1)^0,c
 13405   0048D6  0E00               	movlw	0
 13406   0048D8  6E30               	movwf	(___flge@ff2+2)^0,c
 13407   0048DA  0E00               	movlw	0
 13408   0048DC  6E31               	movwf	(___flge@ff2+3)^0,c
 13409   0048DE                     l4235:
 13410   0048DE  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 13411   0048E0  EF74  F024         	goto	u3911
 13412   0048E4  EF76  F024         	goto	u3910
 13413   0048E8                     u3911:
 13414   0048E8  EF7F  F024         	goto	l4239
 13415   0048EC                     u3910:
 13416   0048EC  6C2A               	negf	___flge@ff1^0,c
 13417   0048EE  1E2B               	comf	(___flge@ff1+1)^0,f,c
 13418   0048F0  B0D8               	btfsc	status,0,c
 13419   0048F2  2A2B               	incf	(___flge@ff1+1)^0,f,c
 13420   0048F4  1E2C               	comf	(___flge@ff1+2)^0,f,c
 13421   0048F6  B0D8               	btfsc	status,0,c
 13422   0048F8  2A2C               	incf	(___flge@ff1+2)^0,f,c
 13423   0048FA  0E80               	movlw	128
 13424   0048FC  562D               	subfwb	(___flge@ff1+3)^0,f,c
 13425   0048FE                     l4239:
 13426   0048FE  AE31               	btfss	(___flge@ff2+3)^0,7,c
 13427   004900  EF84  F024         	goto	u3921
 13428   004904  EF86  F024         	goto	u3920
 13429   004908                     u3921:
 13430   004908  EF8F  F024         	goto	l879
 13431   00490C                     u3920:
 13432   00490C  6C2E               	negf	___flge@ff2^0,c
 13433   00490E  1E2F               	comf	(___flge@ff2+1)^0,f,c
 13434   004910  B0D8               	btfsc	status,0,c
 13435   004912  2A2F               	incf	(___flge@ff2+1)^0,f,c
 13436   004914  1E30               	comf	(___flge@ff2+2)^0,f,c
 13437   004916  B0D8               	btfsc	status,0,c
 13438   004918  2A30               	incf	(___flge@ff2+2)^0,f,c
 13439   00491A  0E80               	movlw	128
 13440   00491C  5631               	subfwb	(___flge@ff2+3)^0,f,c
 13441   00491E                     l879:
 13442   00491E  0E00               	movlw	0
 13443   004920  1A2A               	xorwf	___flge@ff1^0,f,c
 13444   004922  0E00               	movlw	0
 13445   004924  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 13446   004926  0E00               	movlw	0
 13447   004928  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 13448   00492A  0E80               	movlw	128
 13449   00492C  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 13450   00492E  0E00               	movlw	0
 13451   004930  1A2E               	xorwf	___flge@ff2^0,f,c
 13452   004932  0E00               	movlw	0
 13453   004934  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 13454   004936  0E00               	movlw	0
 13455   004938  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 13456   00493A  0E80               	movlw	128
 13457   00493C  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 13458   00493E  502E               	movf	___flge@ff2^0,w,c
 13459   004940  5C2A               	subwf	___flge@ff1^0,w,c
 13460   004942  502F               	movf	(___flge@ff2+1)^0,w,c
 13461   004944  582B               	subwfb	(___flge@ff1+1)^0,w,c
 13462   004946  5030               	movf	(___flge@ff2+2)^0,w,c
 13463   004948  582C               	subwfb	(___flge@ff1+2)^0,w,c
 13464   00494A  5031               	movf	(___flge@ff2+3)^0,w,c
 13465   00494C  582D               	subwfb	(___flge@ff1+3)^0,w,c
 13466   00494E  B0D8               	btfsc	status,0,c
 13467   004950  EFAC  F024         	goto	u3931
 13468   004954  EFAE  F024         	goto	u3930
 13469   004958                     u3931:
 13470   004958  EFB1  F024         	goto	l4245
 13471   00495C                     u3930:
 13472   00495C  90D8               	bcf	status,0,c
 13473   00495E  EFB2  F024         	goto	l884
 13474   004962                     l4245:
 13475   004962  80D8               	bsf	status,0,c
 13476   004964                     l884:
 13477   004964  0012               	return		;funcret
 13478   004966                     __end_of___flge:
 13479                           	callstack 0
 13480                           
 13481 ;; *************** function ___fleq *****************
 13482 ;; Defined at:
 13483 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;  ff1             4   49[COMRAM] unsigned char 
 13486 ;;  ff2             4   53[COMRAM] unsigned char 
 13487 ;; Auto vars:     Size  Location     Type
 13488 ;;		None
 13489 ;; Return value:  Size  Location     Type
 13490 ;;		None               void
 13491 ;; Registers used:
 13492 ;;		wreg, status,2, status,0
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13498 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13500 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13501 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13502 ;;Total ram usage:       12 bytes
 13503 ;; Hardware stack levels used: 1
 13504 ;; Hardware stack levels required when called: 1
 13505 ;; This function calls:
 13506 ;;		Nothing
 13507 ;; This function is called by:
 13508 ;;		_Colour_decider
 13509 ;;		_efgtoa
 13510 ;; This function uses a non-reentrant model
 13511 ;;
 13512                           
 13513                           	psect	text71
 13514   004B2E                     __ptext71:
 13515                           	callstack 0
 13516   004B2E                     ___fleq:
 13517                           	callstack 25
 13518   004B2E  0E00               	movlw	0
 13519   004B30  1432               	andwf	___fleq@ff1^0,w,c
 13520   004B32  6E3A               	movwf	??___fleq^0,c
 13521   004B34  0E00               	movlw	0
 13522   004B36  1433               	andwf	(___fleq@ff1+1)^0,w,c
 13523   004B38  6E3B               	movwf	(??___fleq+1)^0,c
 13524   004B3A  0E80               	movlw	128
 13525   004B3C  1434               	andwf	(___fleq@ff1+2)^0,w,c
 13526   004B3E  6E3C               	movwf	(??___fleq+2)^0,c
 13527   004B40  0E7F               	movlw	127
 13528   004B42  1435               	andwf	(___fleq@ff1+3)^0,w,c
 13529   004B44  6E3D               	movwf	(??___fleq+3)^0,c
 13530   004B46  503A               	movf	??___fleq^0,w,c
 13531   004B48  103B               	iorwf	(??___fleq+1)^0,w,c
 13532   004B4A  103C               	iorwf	(??___fleq+2)^0,w,c
 13533   004B4C  103D               	iorwf	(??___fleq+3)^0,w,c
 13534   004B4E  A4D8               	btfss	status,2,c
 13535   004B50  EFAC  F025         	goto	u3861
 13536   004B54  EFAE  F025         	goto	u3860
 13537   004B58                     u3861:
 13538   004B58  EFB6  F025         	goto	l4215
 13539   004B5C                     u3860:
 13540   004B5C  0E00               	movlw	0
 13541   004B5E  6E32               	movwf	___fleq@ff1^0,c
 13542   004B60  0E00               	movlw	0
 13543   004B62  6E33               	movwf	(___fleq@ff1+1)^0,c
 13544   004B64  0E00               	movlw	0
 13545   004B66  6E34               	movwf	(___fleq@ff1+2)^0,c
 13546   004B68  0E00               	movlw	0
 13547   004B6A  6E35               	movwf	(___fleq@ff1+3)^0,c
 13548   004B6C                     l4215:
 13549   004B6C  0E00               	movlw	0
 13550   004B6E  1436               	andwf	___fleq@ff2^0,w,c
 13551   004B70  6E3A               	movwf	??___fleq^0,c
 13552   004B72  0E00               	movlw	0
 13553   004B74  1437               	andwf	(___fleq@ff2+1)^0,w,c
 13554   004B76  6E3B               	movwf	(??___fleq+1)^0,c
 13555   004B78  0E80               	movlw	128
 13556   004B7A  1438               	andwf	(___fleq@ff2+2)^0,w,c
 13557   004B7C  6E3C               	movwf	(??___fleq+2)^0,c
 13558   004B7E  0E7F               	movlw	127
 13559   004B80  1439               	andwf	(___fleq@ff2+3)^0,w,c
 13560   004B82  6E3D               	movwf	(??___fleq+3)^0,c
 13561   004B84  503A               	movf	??___fleq^0,w,c
 13562   004B86  103B               	iorwf	(??___fleq+1)^0,w,c
 13563   004B88  103C               	iorwf	(??___fleq+2)^0,w,c
 13564   004B8A  103D               	iorwf	(??___fleq+3)^0,w,c
 13565   004B8C  A4D8               	btfss	status,2,c
 13566   004B8E  EFCB  F025         	goto	u3871
 13567   004B92  EFCD  F025         	goto	u3870
 13568   004B96                     u3871:
 13569   004B96  EFD5  F025         	goto	l4219
 13570   004B9A                     u3870:
 13571   004B9A  0E00               	movlw	0
 13572   004B9C  6E36               	movwf	___fleq@ff2^0,c
 13573   004B9E  0E00               	movlw	0
 13574   004BA0  6E37               	movwf	(___fleq@ff2+1)^0,c
 13575   004BA2  0E00               	movlw	0
 13576   004BA4  6E38               	movwf	(___fleq@ff2+2)^0,c
 13577   004BA6  0E00               	movlw	0
 13578   004BA8  6E39               	movwf	(___fleq@ff2+3)^0,c
 13579   004BAA                     l4219:
 13580   004BAA  5036               	movf	___fleq@ff2^0,w,c
 13581   004BAC  1832               	xorwf	___fleq@ff1^0,w,c
 13582   004BAE  E10F               	bnz	u3880
 13583   004BB0  5037               	movf	(___fleq@ff2+1)^0,w,c
 13584   004BB2  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 13585   004BB4  E10C               	bnz	u3880
 13586   004BB6  5038               	movf	(___fleq@ff2+2)^0,w,c
 13587   004BB8  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 13588   004BBA  E109               	bnz	u3880
 13589   004BBC  5039               	movf	(___fleq@ff2+3)^0,w,c
 13590   004BBE  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 13591   004BC0  B4D8               	btfsc	status,2,c
 13592   004BC2  EFE5  F025         	goto	u3881
 13593   004BC6  EFE7  F025         	goto	u3880
 13594   004BCA                     u3881:
 13595   004BCA  EFEA  F025         	goto	l4223
 13596   004BCE                     u3880:
 13597   004BCE  90D8               	bcf	status,0,c
 13598   004BD0  EFEB  F025         	goto	l873
 13599   004BD4                     l4223:
 13600   004BD4  80D8               	bsf	status,0,c
 13601   004BD6                     l873:
 13602   004BD6  0012               	return		;funcret
 13603   004BD8                     __end_of___fleq:
 13604                           	callstack 0
 13605                           
 13606 ;; *************** function ___fldiv *****************
 13607 ;; Defined at:
 13608 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  b               4   49[COMRAM] unsigned char 
 13611 ;;  a               4   53[COMRAM] unsigned char 
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;  grs             4   68[COMRAM] unsigned long 
 13614 ;;  rem             4   61[COMRAM] unsigned long 
 13615 ;;  new_exp         2   66[COMRAM] short 
 13616 ;;  aexp            1   73[COMRAM] unsigned char 
 13617 ;;  bexp            1   72[COMRAM] unsigned char 
 13618 ;;  sign            1   65[COMRAM] unsigned char 
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  4   49[COMRAM] unsigned char 
 13621 ;; Registers used:
 13622 ;;		wreg, status,2, status,0
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13628 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13629 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13631 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13632 ;;Total ram usage:       25 bytes
 13633 ;; Hardware stack levels used: 1
 13634 ;; Hardware stack levels required when called: 1
 13635 ;; This function calls:
 13636 ;;		Nothing
 13637 ;; This function is called by:
 13638 ;;		_colour_rel
 13639 ;;		_Colour_decider
 13640 ;;		_efgtoa
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text72
 13645   003120                     __ptext72:
 13646                           	callstack 0
 13647   003120                     ___fldiv:
 13648                           	callstack 25
 13649   003120  5035               	movf	(___fldiv@b+3)^0,w,c
 13650   003122  0B80               	andlw	128
 13651   003124  6E42               	movwf	___fldiv@sign^0,c
 13652   003126  5035               	movf	(___fldiv@b+3)^0,w,c
 13653   003128  2435               	addwf	(___fldiv@b+3)^0,w,c
 13654   00312A  6E49               	movwf	___fldiv@bexp^0,c
 13655   00312C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 13656   00312E  EF9B  F018         	goto	u3441
 13657   003132  EF9D  F018         	goto	u3440
 13658   003136                     u3441:
 13659   003136  EF9E  F018         	goto	l3943
 13660   00313A                     u3440:
 13661   00313A  8049               	bsf	___fldiv@bexp^0,0,c
 13662   00313C                     l3943:
 13663   00313C  5049               	movf	___fldiv@bexp^0,w,c
 13664   00313E  B4D8               	btfsc	status,2,c
 13665   003140  EFA4  F018         	goto	u3451
 13666   003144  EFA6  F018         	goto	u3450
 13667   003148                     u3451:
 13668   003148  EFBB  F018         	goto	l3953
 13669   00314C                     u3450:
 13670   00314C  2849               	incf	___fldiv@bexp^0,w,c
 13671   00314E  A4D8               	btfss	status,2,c
 13672   003150  EFAC  F018         	goto	u3461
 13673   003154  EFAE  F018         	goto	u3460
 13674   003158                     u3461:
 13675   003158  EFB6  F018         	goto	l3949
 13676   00315C                     u3460:
 13677   00315C  0E00               	movlw	0
 13678   00315E  6E32               	movwf	___fldiv@b^0,c
 13679   003160  0E00               	movlw	0
 13680   003162  6E33               	movwf	(___fldiv@b+1)^0,c
 13681   003164  0E00               	movlw	0
 13682   003166  6E34               	movwf	(___fldiv@b+2)^0,c
 13683   003168  0E00               	movlw	0
 13684   00316A  6E35               	movwf	(___fldiv@b+3)^0,c
 13685   00316C                     l3949:
 13686   00316C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 13687   00316E  0E00               	movlw	0
 13688   003170  6E35               	movwf	(___fldiv@b+3)^0,c
 13689   003172  EFC3  F018         	goto	l3955
 13690   003176                     l3953:
 13691   003176  0E00               	movlw	0
 13692   003178  6E32               	movwf	___fldiv@b^0,c
 13693   00317A  0E00               	movlw	0
 13694   00317C  6E33               	movwf	(___fldiv@b+1)^0,c
 13695   00317E  0E00               	movlw	0
 13696   003180  6E34               	movwf	(___fldiv@b+2)^0,c
 13697   003182  0E00               	movlw	0
 13698   003184  6E35               	movwf	(___fldiv@b+3)^0,c
 13699   003186                     l3955:
 13700   003186  5039               	movf	(___fldiv@a+3)^0,w,c
 13701   003188  0B80               	andlw	128
 13702   00318A  1A42               	xorwf	___fldiv@sign^0,f,c
 13703   00318C  5039               	movf	(___fldiv@a+3)^0,w,c
 13704   00318E  2439               	addwf	(___fldiv@a+3)^0,w,c
 13705   003190  6E4A               	movwf	___fldiv@aexp^0,c
 13706   003192  AE38               	btfss	(___fldiv@a+2)^0,7,c
 13707   003194  EFCE  F018         	goto	u3471
 13708   003198  EFD0  F018         	goto	u3470
 13709   00319C                     u3471:
 13710   00319C  EFD1  F018         	goto	l3963
 13711   0031A0                     u3470:
 13712   0031A0  804A               	bsf	___fldiv@aexp^0,0,c
 13713   0031A2                     l3963:
 13714   0031A2  504A               	movf	___fldiv@aexp^0,w,c
 13715   0031A4  B4D8               	btfsc	status,2,c
 13716   0031A6  EFD7  F018         	goto	u3481
 13717   0031AA  EFD9  F018         	goto	u3480
 13718   0031AE                     u3481:
 13719   0031AE  EFEE  F018         	goto	l3973
 13720   0031B2                     u3480:
 13721   0031B2  284A               	incf	___fldiv@aexp^0,w,c
 13722   0031B4  A4D8               	btfss	status,2,c
 13723   0031B6  EFDF  F018         	goto	u3491
 13724   0031BA  EFE1  F018         	goto	u3490
 13725   0031BE                     u3491:
 13726   0031BE  EFE9  F018         	goto	l3969
 13727   0031C2                     u3490:
 13728   0031C2  0E00               	movlw	0
 13729   0031C4  6E36               	movwf	___fldiv@a^0,c
 13730   0031C6  0E00               	movlw	0
 13731   0031C8  6E37               	movwf	(___fldiv@a+1)^0,c
 13732   0031CA  0E00               	movlw	0
 13733   0031CC  6E38               	movwf	(___fldiv@a+2)^0,c
 13734   0031CE  0E00               	movlw	0
 13735   0031D0  6E39               	movwf	(___fldiv@a+3)^0,c
 13736   0031D2                     l3969:
 13737   0031D2  8E38               	bsf	(___fldiv@a+2)^0,7,c
 13738   0031D4  0E00               	movlw	0
 13739   0031D6  6E39               	movwf	(___fldiv@a+3)^0,c
 13740   0031D8  EFF6  F018         	goto	l3975
 13741   0031DC                     l3973:
 13742   0031DC  0E00               	movlw	0
 13743   0031DE  6E36               	movwf	___fldiv@a^0,c
 13744   0031E0  0E00               	movlw	0
 13745   0031E2  6E37               	movwf	(___fldiv@a+1)^0,c
 13746   0031E4  0E00               	movlw	0
 13747   0031E6  6E38               	movwf	(___fldiv@a+2)^0,c
 13748   0031E8  0E00               	movlw	0
 13749   0031EA  6E39               	movwf	(___fldiv@a+3)^0,c
 13750   0031EC                     l3975:
 13751   0031EC  5036               	movf	___fldiv@a^0,w,c
 13752   0031EE  1037               	iorwf	(___fldiv@a+1)^0,w,c
 13753   0031F0  1038               	iorwf	(___fldiv@a+2)^0,w,c
 13754   0031F2  1039               	iorwf	(___fldiv@a+3)^0,w,c
 13755   0031F4  A4D8               	btfss	status,2,c
 13756   0031F6  EFFF  F018         	goto	u3501
 13757   0031FA  EF01  F019         	goto	u3500
 13758   0031FE                     u3501:
 13759   0031FE  EF19  F019         	goto	l3987
 13760   003202                     u3500:
 13761   003202  0E00               	movlw	0
 13762   003204  6E32               	movwf	___fldiv@b^0,c
 13763   003206  0E00               	movlw	0
 13764   003208  6E33               	movwf	(___fldiv@b+1)^0,c
 13765   00320A  0E00               	movlw	0
 13766   00320C  6E34               	movwf	(___fldiv@b+2)^0,c
 13767   00320E  0E00               	movlw	0
 13768   003210  6E35               	movwf	(___fldiv@b+3)^0,c
 13769   003212  0E80               	movlw	128
 13770   003214  1234               	iorwf	(___fldiv@b+2)^0,f,c
 13771   003216  0E7F               	movlw	127
 13772   003218  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13773   00321A                     l3981:
 13774   00321A  5042               	movf	___fldiv@sign^0,w,c
 13775   00321C  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13776   00321E  C032  F032         	movff	___fldiv@b,?___fldiv
 13777   003222  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 13778   003226  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 13779   00322A  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 13780   00322E  EF5C  F01A         	goto	l1196
 13781   003232                     l3987:
 13782   003232  5049               	movf	___fldiv@bexp^0,w,c
 13783   003234  A4D8               	btfss	status,2,c
 13784   003236  EF1F  F019         	goto	u3511
 13785   00323A  EF21  F019         	goto	u3510
 13786   00323E                     u3511:
 13787   00323E  EF2B  F019         	goto	l3995
 13788   003242                     u3510:
 13789   003242  0E00               	movlw	0
 13790   003244  6E32               	movwf	?___fldiv^0,c
 13791   003246  0E00               	movlw	0
 13792   003248  6E33               	movwf	(?___fldiv+1)^0,c
 13793   00324A  0E00               	movlw	0
 13794   00324C  6E34               	movwf	(?___fldiv+2)^0,c
 13795   00324E  0E00               	movlw	0
 13796   003250  6E35               	movwf	(?___fldiv+3)^0,c
 13797   003252  EF5C  F01A         	goto	l1196
 13798   003256                     l3995:
 13799   003256  504A               	movf	___fldiv@aexp^0,w,c
 13800   003258  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 13801   00325C  6A3B               	clrf	(??___fldiv+1)^0,c
 13802   00325E  5E3A               	subwf	??___fldiv^0,f,c
 13803   003260  0E00               	movlw	0
 13804   003262  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 13805   003264  0E7F               	movlw	127
 13806   003266  243A               	addwf	??___fldiv^0,w,c
 13807   003268  6E43               	movwf	___fldiv@new_exp^0,c
 13808   00326A  0E00               	movlw	0
 13809   00326C  203B               	addwfc	(??___fldiv+1)^0,w,c
 13810   00326E  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 13811   003270  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 13812   003274  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 13813   003278  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 13814   00327C  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 13815   003280  0E00               	movlw	0
 13816   003282  6E32               	movwf	___fldiv@b^0,c
 13817   003284  0E00               	movlw	0
 13818   003286  6E33               	movwf	(___fldiv@b+1)^0,c
 13819   003288  0E00               	movlw	0
 13820   00328A  6E34               	movwf	(___fldiv@b+2)^0,c
 13821   00328C  0E00               	movlw	0
 13822   00328E  6E35               	movwf	(___fldiv@b+3)^0,c
 13823   003290  0E00               	movlw	0
 13824   003292  6E45               	movwf	___fldiv@grs^0,c
 13825   003294  0E00               	movlw	0
 13826   003296  6E46               	movwf	(___fldiv@grs+1)^0,c
 13827   003298  0E00               	movlw	0
 13828   00329A  6E47               	movwf	(___fldiv@grs+2)^0,c
 13829   00329C  0E00               	movlw	0
 13830   00329E  6E48               	movwf	(___fldiv@grs+3)^0,c
 13831   0032A0  0E00               	movlw	0
 13832   0032A2  6E4A               	movwf	___fldiv@aexp^0,c
 13833   0032A4  EF8C  F019         	goto	l1198
 13834   0032A8                     l4005:
 13835   0032A8  504A               	movf	___fldiv@aexp^0,w,c
 13836   0032AA  B4D8               	btfsc	status,2,c
 13837   0032AC  EF5A  F019         	goto	u3521
 13838   0032B0  EF5C  F019         	goto	u3520
 13839   0032B4                     u3521:
 13840   0032B4  EF73  F019         	goto	l4013
 13841   0032B8                     u3520:
 13842   0032B8  90D8               	bcf	status,0,c
 13843   0032BA  363E               	rlcf	___fldiv@rem^0,f,c
 13844   0032BC  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 13845   0032BE  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 13846   0032C0  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 13847   0032C2  90D8               	bcf	status,0,c
 13848   0032C4  3632               	rlcf	___fldiv@b^0,f,c
 13849   0032C6  3633               	rlcf	(___fldiv@b+1)^0,f,c
 13850   0032C8  3634               	rlcf	(___fldiv@b+2)^0,f,c
 13851   0032CA  3635               	rlcf	(___fldiv@b+3)^0,f,c
 13852   0032CC  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13853   0032CE  EF6B  F019         	goto	u3531
 13854   0032D2  EF6D  F019         	goto	u3530
 13855   0032D6                     u3531:
 13856   0032D6  EF6E  F019         	goto	l1201
 13857   0032DA                     u3530:
 13858   0032DA  8032               	bsf	___fldiv@b^0,0,c
 13859   0032DC                     l1201:
 13860   0032DC  90D8               	bcf	status,0,c
 13861   0032DE  3645               	rlcf	___fldiv@grs^0,f,c
 13862   0032E0  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 13863   0032E2  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 13864   0032E4  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 13865   0032E6                     l4013:
 13866   0032E6  5036               	movf	___fldiv@a^0,w,c
 13867   0032E8  5C3E               	subwf	___fldiv@rem^0,w,c
 13868   0032EA  5037               	movf	(___fldiv@a+1)^0,w,c
 13869   0032EC  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 13870   0032EE  5038               	movf	(___fldiv@a+2)^0,w,c
 13871   0032F0  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 13872   0032F2  5039               	movf	(___fldiv@a+3)^0,w,c
 13873   0032F4  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 13874   0032F6  A0D8               	btfss	status,0,c
 13875   0032F8  EF80  F019         	goto	u3541
 13876   0032FC  EF82  F019         	goto	u3540
 13877   003300                     u3541:
 13878   003300  EF8B  F019         	goto	l4019
 13879   003304                     u3540:
 13880   003304  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 13881   003306  5036               	movf	___fldiv@a^0,w,c
 13882   003308  5E3E               	subwf	___fldiv@rem^0,f,c
 13883   00330A  5037               	movf	(___fldiv@a+1)^0,w,c
 13884   00330C  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 13885   00330E  5038               	movf	(___fldiv@a+2)^0,w,c
 13886   003310  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 13887   003312  5039               	movf	(___fldiv@a+3)^0,w,c
 13888   003314  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 13889   003316                     l4019:
 13890   003316  2A4A               	incf	___fldiv@aexp^0,f,c
 13891   003318                     l1198:
 13892   003318  0E19               	movlw	25
 13893   00331A  644A               	cpfsgt	___fldiv@aexp^0,c
 13894   00331C  EF92  F019         	goto	u3551
 13895   003320  EF94  F019         	goto	u3550
 13896   003324                     u3551:
 13897   003324  EF54  F019         	goto	l4005
 13898   003328                     u3550:
 13899   003328  503E               	movf	___fldiv@rem^0,w,c
 13900   00332A  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 13901   00332C  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 13902   00332E  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 13903   003330  B4D8               	btfsc	status,2,c
 13904   003332  EF9D  F019         	goto	u3561
 13905   003336  EF9F  F019         	goto	u3560
 13906   00333A                     u3561:
 13907   00333A  EFB7  F019         	goto	l4031
 13908   00333E                     u3560:
 13909   00333E  8045               	bsf	___fldiv@grs^0,0,c
 13910   003340  EFB7  F019         	goto	l4031
 13911   003344                     l4025:
 13912   003344  90D8               	bcf	status,0,c
 13913   003346  3632               	rlcf	___fldiv@b^0,f,c
 13914   003348  3633               	rlcf	(___fldiv@b+1)^0,f,c
 13915   00334A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 13916   00334C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 13917   00334E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13918   003350  EFAC  F019         	goto	u3571
 13919   003354  EFAE  F019         	goto	u3570
 13920   003358                     u3571:
 13921   003358  EFAF  F019         	goto	l1207
 13922   00335C                     u3570:
 13923   00335C  8032               	bsf	___fldiv@b^0,0,c
 13924   00335E                     l1207:
 13925   00335E  90D8               	bcf	status,0,c
 13926   003360  3645               	rlcf	___fldiv@grs^0,f,c
 13927   003362  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 13928   003364  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 13929   003366  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 13930   003368  0643               	decf	___fldiv@new_exp^0,f,c
 13931   00336A  A0D8               	btfss	status,0,c
 13932   00336C  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 13933   00336E                     l4031:
 13934   00336E  AE34               	btfss	(___fldiv@b+2)^0,7,c
 13935   003370  EFBC  F019         	goto	u3581
 13936   003374  EFBE  F019         	goto	u3580
 13937   003378                     u3581:
 13938   003378  EFA2  F019         	goto	l4025
 13939   00337C                     u3580:
 13940   00337C  0E00               	movlw	0
 13941   00337E  6E4A               	movwf	___fldiv@aexp^0,c
 13942   003380  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13943   003382  EFC5  F019         	goto	u3591
 13944   003386  EFC7  F019         	goto	u3590
 13945   00338A                     u3591:
 13946   00338A  EFEB  F019         	goto	l1209
 13947   00338E                     u3590:
 13948   00338E  0EFF               	movlw	255
 13949   003390  1445               	andwf	___fldiv@grs^0,w,c
 13950   003392  6E3A               	movwf	??___fldiv^0,c
 13951   003394  0EFF               	movlw	255
 13952   003396  1446               	andwf	(___fldiv@grs+1)^0,w,c
 13953   003398  6E3B               	movwf	(??___fldiv+1)^0,c
 13954   00339A  0EFF               	movlw	255
 13955   00339C  1447               	andwf	(___fldiv@grs+2)^0,w,c
 13956   00339E  6E3C               	movwf	(??___fldiv+2)^0,c
 13957   0033A0  0E7F               	movlw	127
 13958   0033A2  1448               	andwf	(___fldiv@grs+3)^0,w,c
 13959   0033A4  6E3D               	movwf	(??___fldiv+3)^0,c
 13960   0033A6  503A               	movf	??___fldiv^0,w,c
 13961   0033A8  103B               	iorwf	(??___fldiv+1)^0,w,c
 13962   0033AA  103C               	iorwf	(??___fldiv+2)^0,w,c
 13963   0033AC  103D               	iorwf	(??___fldiv+3)^0,w,c
 13964   0033AE  B4D8               	btfsc	status,2,c
 13965   0033B0  EFDC  F019         	goto	u3601
 13966   0033B4  EFDE  F019         	goto	u3600
 13967   0033B8                     u3601:
 13968   0033B8  EFE2  F019         	goto	l1210
 13969   0033BC                     u3600:
 13970   0033BC                     l4039:
 13971   0033BC  0E01               	movlw	1
 13972   0033BE  6E4A               	movwf	___fldiv@aexp^0,c
 13973   0033C0  EFEB  F019         	goto	l1209
 13974   0033C4                     l1210:
 13975   0033C4  A032               	btfss	___fldiv@b^0,0,c
 13976   0033C6  EFE7  F019         	goto	u3611
 13977   0033CA  EFE9  F019         	goto	u3610
 13978   0033CE                     u3611:
 13979   0033CE  EFEB  F019         	goto	l1209
 13980   0033D2                     u3610:
 13981   0033D2  EFDE  F019         	goto	l4039
 13982   0033D6                     l1209:
 13983   0033D6  504A               	movf	___fldiv@aexp^0,w,c
 13984   0033D8  B4D8               	btfsc	status,2,c
 13985   0033DA  EFF1  F019         	goto	u3621
 13986   0033DE  EFF3  F019         	goto	u3620
 13987   0033E2                     u3621:
 13988   0033E2  EF17  F01A         	goto	l4051
 13989   0033E6                     u3620:
 13990   0033E6  0E01               	movlw	1
 13991   0033E8  2632               	addwf	___fldiv@b^0,f,c
 13992   0033EA  0E00               	movlw	0
 13993   0033EC  2233               	addwfc	(___fldiv@b+1)^0,f,c
 13994   0033EE  2234               	addwfc	(___fldiv@b+2)^0,f,c
 13995   0033F0  2235               	addwfc	(___fldiv@b+3)^0,f,c
 13996   0033F2  A035               	btfss	(___fldiv@b+3)^0,0,c
 13997   0033F4  EFFE  F019         	goto	u3631
 13998   0033F8  EF00  F01A         	goto	u3630
 13999   0033FC                     u3631:
 14000   0033FC  EF17  F01A         	goto	l4051
 14001   003400                     u3630:
 14002   003400  C032  F03A         	movff	___fldiv@b,??___fldiv
 14003   003404  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 14004   003408  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 14005   00340C  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 14006   003410  343D               	rlcf	(??___fldiv+3)^0,w,c
 14007   003412  323D               	rrcf	(??___fldiv+3)^0,f,c
 14008   003414  323C               	rrcf	(??___fldiv+2)^0,f,c
 14009   003416  323B               	rrcf	(??___fldiv+1)^0,f,c
 14010   003418  323A               	rrcf	??___fldiv^0,f,c
 14011   00341A  C03A  F032         	movff	??___fldiv,___fldiv@b
 14012   00341E  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 14013   003422  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 14014   003426  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 14015   00342A  4A43               	infsnz	___fldiv@new_exp^0,f,c
 14016   00342C  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 14017   00342E                     l4051:
 14018   00342E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14019   003430  EF22  F01A         	goto	u3641
 14020   003434  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14021   003436  E108               	bnz	u3640
 14022   003438  2843               	incf	___fldiv@new_exp^0,w,c
 14023   00343A  A0D8               	btfss	status,0,c
 14024   00343C  EF22  F01A         	goto	u3641
 14025   003440  EF24  F01A         	goto	u3640
 14026   003444                     u3641:
 14027   003444  EF2F  F01A         	goto	l4055
 14028   003448                     u3640:
 14029   003448  0E00               	movlw	0
 14030   00344A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14031   00344C  6843               	setf	___fldiv@new_exp^0,c
 14032   00344E  0E00               	movlw	0
 14033   003450  6E32               	movwf	___fldiv@b^0,c
 14034   003452  0E00               	movlw	0
 14035   003454  6E33               	movwf	(___fldiv@b+1)^0,c
 14036   003456  0E00               	movlw	0
 14037   003458  6E34               	movwf	(___fldiv@b+2)^0,c
 14038   00345A  0E00               	movlw	0
 14039   00345C  6E35               	movwf	(___fldiv@b+3)^0,c
 14040   00345E                     l4055:
 14041   00345E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14042   003460  EF3C  F01A         	goto	u3650
 14043   003464  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14044   003466  E106               	bnz	u3651
 14045   003468  0443               	decf	___fldiv@new_exp^0,w,c
 14046   00346A  B0D8               	btfsc	status,0,c
 14047   00346C  EF3A  F01A         	goto	u3651
 14048   003470  EF3C  F01A         	goto	u3650
 14049   003474                     u3651:
 14050   003474  EF4A  F01A         	goto	l4059
 14051   003478                     u3650:
 14052   003478  0E00               	movlw	0
 14053   00347A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14054   00347C  0E00               	movlw	0
 14055   00347E  6E43               	movwf	___fldiv@new_exp^0,c
 14056   003480  0E00               	movlw	0
 14057   003482  6E32               	movwf	___fldiv@b^0,c
 14058   003484  0E00               	movlw	0
 14059   003486  6E33               	movwf	(___fldiv@b+1)^0,c
 14060   003488  0E00               	movlw	0
 14061   00348A  6E34               	movwf	(___fldiv@b+2)^0,c
 14062   00348C  0E00               	movlw	0
 14063   00348E  6E35               	movwf	(___fldiv@b+3)^0,c
 14064   003490  0E00               	movlw	0
 14065   003492  6E42               	movwf	___fldiv@sign^0,c
 14066   003494                     l4059:
 14067   003494  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 14068   003498  A049               	btfss	___fldiv@bexp^0,0,c
 14069   00349A  EF51  F01A         	goto	u3661
 14070   00349E  EF53  F01A         	goto	u3660
 14071   0034A2                     u3661:
 14072   0034A2  EF56  F01A         	goto	l4065
 14073   0034A6                     u3660:
 14074   0034A6  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14075   0034A8  EF57  F01A         	goto	l4067
 14076   0034AC                     l4065:
 14077   0034AC  9E34               	bcf	(___fldiv@b+2)^0,7,c
 14078   0034AE                     l4067:
 14079   0034AE  90D8               	bcf	status,0,c
 14080   0034B0  3049               	rrcf	___fldiv@bexp^0,w,c
 14081   0034B2  6E35               	movwf	(___fldiv@b+3)^0,c
 14082   0034B4  EF0D  F019         	goto	l3981
 14083   0034B8                     l1196:
 14084   0034B8  0012               	return		;funcret
 14085   0034BA                     __end_of___fldiv:
 14086                           	callstack 0
 14087                           
 14088 ;; *************** function _HighISR *****************
 14089 ;; Defined at:
 14090 ;;		line 59 in file "interrupts.c"
 14091 ;; Parameters:    Size  Location     Type
 14092 ;;		None
 14093 ;; Auto vars:     Size  Location     Type
 14094 ;;		None
 14095 ;; Return value:  Size  Location     Type
 14096 ;;                  1    wreg      void 
 14097 ;; Registers used:
 14098 ;;		None
 14099 ;; Tracked objects:
 14100 ;;		On entry : 0/0
 14101 ;;		On exit  : 0/0
 14102 ;;		Unchanged: 0/0
 14103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14108 ;;Total ram usage:        0 bytes
 14109 ;; Hardware stack levels used: 1
 14110 ;; This function calls:
 14111 ;;		Nothing
 14112 ;; This function is called by:
 14113 ;;		Interrupt level 2
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117                           	psect	intcode
 14118   000008                     __pintcode:
 14119                           	callstack 0
 14120   000008                     _HighISR:
 14121                           	callstack 22
 14122                           
 14123                           ;incstack = 0
 14124   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14125   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14126   00000C  0011               	retfie		f
 14127   00000E                     __end_of_HighISR:
 14128                           	callstack 0
 14129                           
 14130                           	psect	rparam
 14131   000000                     
 14132                           	psect	temp
 14133   00005F                     btemp:
 14134                           	callstack 0
 14135   00005F                     	ds	1
 14136   000000                     int$flags	set	btemp
 14137   000000                     wtemp8	set	btemp+1
 14138   000000                     ttemp5	set	btemp+1
 14139   000000                     ttemp6	set	btemp+4
 14140   000000                     ttemp7	set	btemp+8
 14141                           
 14142                           	psect	idloc
 14143                           
 14144                           ;Config register IDLOC0 @ 0x200000
 14145                           ;	unspecified, using default values
 14146   200000                     	org	2097152
 14147   200000  0FFF               	dw	4095
 14148                           
 14149                           ;Config register IDLOC1 @ 0x200002
 14150                           ;	unspecified, using default values
 14151   200002                     	org	2097154
 14152   200002  0FFF               	dw	4095
 14153                           
 14154                           ;Config register IDLOC2 @ 0x200004
 14155                           ;	unspecified, using default values
 14156   200004                     	org	2097156
 14157   200004  0FFF               	dw	4095
 14158                           
 14159                           ;Config register IDLOC3 @ 0x200006
 14160                           ;	unspecified, using default values
 14161   200006                     	org	2097158
 14162   200006  0FFF               	dw	4095
 14163                           
 14164                           ;Config register IDLOC4 @ 0x200008
 14165                           ;	unspecified, using default values
 14166   200008                     	org	2097160
 14167   200008  0FFF               	dw	4095
 14168                           
 14169                           ;Config register IDLOC5 @ 0x20000A
 14170                           ;	unspecified, using default values
 14171   20000A                     	org	2097162
 14172   20000A  0FFF               	dw	4095
 14173                           
 14174                           ;Config register IDLOC6 @ 0x20000C
 14175                           ;	unspecified, using default values
 14176   20000C                     	org	2097164
 14177   20000C  0FFF               	dw	4095
 14178                           
 14179                           ;Config register IDLOC7 @ 0x20000E
 14180                           ;	unspecified, using default values
 14181   20000E                     	org	2097166
 14182   20000E  0FFF               	dw	4095
 14183                           
 14184                           	psect	config
 14185                           
 14186                           ;Config register CONFIG1L @ 0x300000
 14187                           ;	External Oscillator mode Selection bits
 14188                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14189                           ;	Power-up default value for COSC bits
 14190                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14191   300000                     	org	3145728
 14192   300000  AA                 	db	170
 14193                           
 14194                           ;Config register CONFIG1H @ 0x300001
 14195                           ;	unspecified, using default values
 14196                           ;	Clock Out Enable bit
 14197                           ;	CLKOUTEN = 0x1, unprogrammed default
 14198                           ;	Clock Switch Enable bit
 14199                           ;	CSWEN = 0x1, unprogrammed default
 14200                           ;	Fail-Safe Clock Monitor Enable bit
 14201                           ;	FCMEN = 0x1, unprogrammed default
 14202   300001                     	org	3145729
 14203   300001  FF                 	db	255
 14204                           
 14205                           ;Config register CONFIG2L @ 0x300002
 14206                           ;	unspecified, using default values
 14207                           ;	Master Clear Enable bit
 14208                           ;	MCLRE = 0x1, unprogrammed default
 14209                           ;	Power-up Timer Enable bit
 14210                           ;	PWRTE = 0x1, unprogrammed default
 14211                           ;	Low-power BOR enable bit
 14212                           ;	LPBOREN = 0x1, unprogrammed default
 14213                           ;	Brown-out Reset Enable bits
 14214                           ;	BOREN = 0x3, unprogrammed default
 14215   300002                     	org	3145730
 14216   300002  FF                 	db	255
 14217                           
 14218                           ;Config register CONFIG2H @ 0x300003
 14219                           ;	unspecified, using default values
 14220                           ;	Brown Out Reset Voltage selection bits
 14221                           ;	BORV = 0x3, unprogrammed default
 14222                           ;	ZCD Disable bit
 14223                           ;	ZCD = 0x1, unprogrammed default
 14224                           ;	PPSLOCK bit One-Way Set Enable bit
 14225                           ;	PPS1WAY = 0x1, unprogrammed default
 14226                           ;	Stack Full/Underflow Reset Enable bit
 14227                           ;	STVREN = 0x1, unprogrammed default
 14228                           ;	Debugger Enable bit
 14229                           ;	DEBUG = 0x1, unprogrammed default
 14230                           ;	Extended Instruction Set Enable bit
 14231                           ;	XINST = 0x1, unprogrammed default
 14232   300003                     	org	3145731
 14233   300003  FF                 	db	255
 14234                           
 14235                           ;Config register CONFIG3L @ 0x300004
 14236                           ;	WDT Period Select bits
 14237                           ;	WDTCPS = 0x1F, unprogrammed default
 14238                           ;	WDT operating mode
 14239                           ;	WDTE = OFF, WDT Disabled
 14240   300004                     	org	3145732
 14241   300004  9F                 	db	159
 14242                           
 14243                           ;Config register CONFIG3H @ 0x300005
 14244                           ;	unspecified, using default values
 14245                           ;	WDT Window Select bits
 14246                           ;	WDTCWS = 0x7, unprogrammed default
 14247                           ;	WDT input clock selector
 14248                           ;	WDTCCS = 0x7, unprogrammed default
 14249   300005                     	org	3145733
 14250   300005  FF                 	db	255
 14251                           
 14252                           ;Config register CONFIG4L @ 0x300006
 14253                           ;	unspecified, using default values
 14254                           ;	Write Protection Block 0
 14255                           ;	WRT0 = 0x1, unprogrammed default
 14256                           ;	Write Protection Block 1
 14257                           ;	WRT1 = 0x1, unprogrammed default
 14258                           ;	Write Protection Block 2
 14259                           ;	WRT2 = 0x1, unprogrammed default
 14260                           ;	Write Protection Block 3
 14261                           ;	WRT3 = 0x1, unprogrammed default
 14262                           ;	Write Protection Block 3
 14263                           ;	WRT4 = 0x1, unprogrammed default
 14264                           ;	Write Protection Block 3
 14265                           ;	WRT5 = 0x1, unprogrammed default
 14266                           ;	Write Protection Block 3
 14267                           ;	WRT6 = 0x1, unprogrammed default
 14268                           ;	Write Protection Block 3
 14269                           ;	WRT7 = 0x1, unprogrammed default
 14270   300006                     	org	3145734
 14271   300006  FF                 	db	255
 14272                           
 14273                           ;Config register CONFIG4H @ 0x300007
 14274                           ;	unspecified, using default values
 14275                           ;	Configuration Register Write Protection bit
 14276                           ;	WRTC = 0x1, unprogrammed default
 14277                           ;	Boot Block Write Protection bit
 14278                           ;	WRTB = 0x1, unprogrammed default
 14279                           ;	Data EEPROM Write Protection bit
 14280                           ;	WRTD = 0x1, unprogrammed default
 14281                           ;	Scanner Enable bit
 14282                           ;	SCANE = 0x1, unprogrammed default
 14283                           ;	Low Voltage Programming Enable bit
 14284                           ;	LVP = 0x1, unprogrammed default
 14285   300007                     	org	3145735
 14286   300007  FF                 	db	255
 14287                           
 14288                           ;Config register CONFIG5L @ 0x300008
 14289                           ;	unspecified, using default values
 14290                           ;	UserNVM Program Memory Code Protection bit
 14291                           ;	CP = 0x1, unprogrammed default
 14292                           ;	DataNVM Memory Code Protection bit
 14293                           ;	CPD = 0x1, unprogrammed default
 14294   300008                     	org	3145736
 14295   300008  FF                 	db	255
 14296                           
 14297                           ;Config register CONFIG5H @ 0x300009
 14298                           ;	unspecified, using default values
 14299   300009                     	org	3145737
 14300   300009  FF                 	db	255
 14301                           
 14302                           ;Config register CONFIG6L @ 0x30000A
 14303                           ;	unspecified, using default values
 14304                           ;	Table Read Protection Block 0
 14305                           ;	EBTR0 = 0x1, unprogrammed default
 14306                           ;	Table Read Protection Block 1
 14307                           ;	EBTR1 = 0x1, unprogrammed default
 14308                           ;	Table Read Protection Block 2
 14309                           ;	EBTR2 = 0x1, unprogrammed default
 14310                           ;	Table Read Protection Block 3
 14311                           ;	EBTR3 = 0x1, unprogrammed default
 14312                           ;	Table Read Protection Block 4
 14313                           ;	EBTR4 = 0x1, unprogrammed default
 14314                           ;	Table Read Protection Block 5
 14315                           ;	EBTR5 = 0x1, unprogrammed default
 14316                           ;	Table Read Protection Block 6
 14317                           ;	EBTR6 = 0x1, unprogrammed default
 14318                           ;	Table Read Protection Block 7
 14319                           ;	EBTR7 = 0x1, unprogrammed default
 14320   30000A                     	org	3145738
 14321   30000A  FF                 	db	255
 14322                           
 14323                           ;Config register CONFIG6H @ 0x30000B
 14324                           ;	unspecified, using default values
 14325                           ;	Boot Block Table Read Protection bit
 14326                           ;	EBTRB = 0x1, unprogrammed default
 14327   30000B                     	org	3145739
 14328   30000B  FF                 	db	255
 14329                           tosu	equ	0xFFF
 14330                           tosh	equ	0xFFE
 14331                           tosl	equ	0xFFD
 14332                           stkptr	equ	0xFFC
 14333                           pclatu	equ	0xFFB
 14334                           pclath	equ	0xFFA
 14335                           pcl	equ	0xFF9
 14336                           tblptru	equ	0xFF8
 14337                           tblptrh	equ	0xFF7
 14338                           tblptrl	equ	0xFF6
 14339                           tablat	equ	0xFF5
 14340                           prodh	equ	0xFF4
 14341                           prodl	equ	0xFF3
 14342                           indf0	equ	0xFEF
 14343                           postinc0	equ	0xFEE
 14344                           postdec0	equ	0xFED
 14345                           preinc0	equ	0xFEC
 14346                           plusw0	equ	0xFEB
 14347                           fsr0h	equ	0xFEA
 14348                           fsr0l	equ	0xFE9
 14349                           wreg	equ	0xFE8
 14350                           indf1	equ	0xFE7
 14351                           postinc1	equ	0xFE6
 14352                           postdec1	equ	0xFE5
 14353                           preinc1	equ	0xFE4
 14354                           plusw1	equ	0xFE3
 14355                           fsr1h	equ	0xFE2
 14356                           fsr1l	equ	0xFE1
 14357                           bsr	equ	0xFE0
 14358                           indf2	equ	0xFDF
 14359                           postinc2	equ	0xFDE
 14360                           postdec2	equ	0xFDD
 14361                           preinc2	equ	0xFDC
 14362                           plusw2	equ	0xFDB
 14363                           fsr2h	equ	0xFDA
 14364                           fsr2l	equ	0xFD9
 14365                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    0
    Data        7
    BSS         481
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     153
    BANK1           256    108     248
    BANK2           256      0      60
    BANK3           256      0     250
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2359$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2275$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2275$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 250
		 -> WayBack(BANK3[250]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _fullSpeedAhead->_setMotorPWM
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  320190
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                   _color_click_init
                         _colour_rel
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35773
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35266
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34913
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29067
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     593
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              5     3      2  111544
                                             35 COMRAM     5     3      2
                           _BlueMove
                   _Forwardhalfblock
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   13796
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   14404
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6442
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6594
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   15620
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8736
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   21910
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    7810
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    8947
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2461
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   21302
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7202
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6594
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7354
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3633
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23739
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     801
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3232
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _go_Home
     _BlueMove
     _Forwardhalfblock
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FA      11       97.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      F8       7       96.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRhlll        6      0       0      37        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     325      60        0.0%
DATA                 0      0     325       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 15:55:22 2023

               _color_read_Red 5744                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 56F4                   ___fldiv@sign 0042                _color_read_Blue 57E4  
                           l43 55FE                             l52 5792                             l61 51EE  
                           l46 5B7A                             l55 57E2                             l64 37E6  
                           l49 5742                             l74 1934                             l58 5832  
          ___wmul@multiplicand 0003               _color_read_Green 5794                readColours@vals 000C  
            ??_Interrupts_init 0001                            l210 5BB0                            l141 5B0E  
                          l150 5BC6                            l207 5B9C                            l144 5B34  
                          l216 5AE2                            l153 5BD0                            l138 5B0C  
                          l147 5BDA                            l156 5BBC                            l270 5BE6  
                          l414 2832                            l406 27D8                            l159 5942  
                          l512 4E4E                            l504 4D12                            l521 53B0  
                          l530 52FC                            l515 5408                            l611 414E  
                          l524 5356                            l605 4144                            l614 5B5A  
                          l518 5460                            l542 5190                            l198 5B98  
                          l551 555A                            l527 52A2                            l480 4FD6  
                          l536 5A3C                            l560 59C0                            l384 23C4  
                          l545 5650                            l474 45F6                            l554 55AC  
                          l539 5A7A                            l563 59FE                            l467 4ED6  
                          l548 56A2                            l557 4F58                            l741 475A  
                          l911 4860                            l488 4DB0                            l496 4C74  
                          l728 448A                            l873 4BD6                            l884 4964  
                          l879 491E                            l888 5AB2                            _abs 5944  
                          _pad 4FD8                            _rel 0166                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           l1112 50C4                           l1201 32DC  
                         l1105 50BC                           l1210 33C4                           ?_abs 0013  
                         l1142 2A24                           l1207 335E                           l1151 2CF4  
                         l1143 2A12                           l1232 311E                           l1144 29D8  
                         l1209 33D6                           l1235 2FB0                           l1228 2DBA  
                         l1324 4FFA                           l1245 30E0                           l1237 3028  
                         l1333 3B7A                           l1501 58BC                           l1238 3016  
                         l1406 3AEC                           l1159 2B3E                           l1335 3B82  
                         l1168 2C0E                           l1184 5878                           l1272 4302  
                         l1328 5050                           l1336 3BC8                           l4001 3290  
                         l1169 2BFC                           l1361 1CC8                           l4011 32DA  
                         l4003 32A0                           l1283 429A                           l1443 597A  
                         l1347 3D6A                           l1363 1B0E                           l1196 34B8  
                         l1276 423E                           l1452 3F7C                           l1428 54B6  
                         l1292 5508                           l4021 3328                           l4013 32E6  
                         l4005 32A8                           l4101 2D84                           l1269 41A6  
                         l1198 3318                           l1446 5982                           l1438 4A62  
                         l1358 232E                           l4023 333E                           l4031 336E  
                         l4015 3304                           l4007 32B8                           l4111 2DDA  
                         l4103 2D94                           l1455 3EC0                           l1463 511A  
                         l1391 2110                           l1472 56F2                           l4033 337C  
                         l4025 3344                           l4017 3306                           l4009 32CC  
                         l4201 310E                           l4121 2E1A                           l4105 2DA4  
                         l5001 55BC                           l1466 512A                           l4043 33E6  
                         l4051 342E                           l4035 3380                           l4027 334E  
                         l4019 3316                           l4211 4B2E                           l4131 2E64  
                         l4123 2E26                           l4115 2DEE                           l4107 2DAA  
                         l5011 55EC                           l5003 55CC                           l1484 4B2C  
                         l1492 5900                           l4061 3498                           l4053 3448  
                         l4045 33F2                           l4037 338E                           l4029 335C  
                         l4221 4BCE                           l4213 4B5C                           l4141 2EB6  
                         l4133 2E70                           l4125 2E3E                           l4117 2DFA  
                         l4109 2DCA                           l4205 5834                           l5101 13B4  
                         l5021 55F6                           l5013 55EE                           l5005 55D6  
                         l4301 4FD8                           l4063 34A6                           l4055 345E  
                         l4047 3400                           l4039 33BC                           l4223 4BD4  
                         l4215 4B6C                           l4231 48A0                           l4151 2F34  
                         l4143 2EC6                           l4135 2E80                           l4127 2E4A  
                         l4119 2E04                           l4207 5844                           l5111 1424  
                         l5103 13E6                           l5023 55F8                           l5015 55F0  
                         l5007 55E0                           l5031 34BA                           l1495 5BE4  
                         l4311 501E                           l4303 4FE6                           l4065 34AC  
                         l4057 3478                           l4049 342A                           l4217 4B9A  
                         l4241 490C                           l4233 48CE                           l4161 2FAE  
                         l4153 2F6A                           l4145 2EE2                           l4137 2E8C  
                         l4129 2E56                           l4081 2D12                           l5201 1834  
                         l5121 1494                           l5113 1456                           l4401 4F8E  
                         l5025 55FA                           l5017 55F2                           l5009 55EA  
                         l5041 371A                           l5033 3586                           l4313 503C  
                         l4305 4FF2                           l4321 4986                           l4067 34AE  
                         l4059 3494                           l4219 4BAA                           l4243 495C  
                         l4235 48DE                           l4227 4862                           l4171 300E  
                         l4163 2FC0                           l4155 2F78                           l4147 2EEE  
                         l4139 2E9C                           l4091 2D58                           l4083 2D22  
                         l4075 2CF6                           l3611 2842                           l5203 1866  
                         l5123 14C6                           l5051 0EC0                           l3603 5B36  
                         l4403 4FA6                           l4411 4D50                           l5027 55FC  
                         l5019 55F4                           l5043 374E                           l5035 35BA  
                         l4315 5944                           l4307 5006                           l4251 5A92  
                         l4323 49C4                           l4331 4A04                           l4245 4962  
                         l4237 48EC                           l4229 4890                           l4181 307C  
                         l4165 2FCE                           l4157 2F96                           l4149 2F0A  
                         l4093 2D5E                           l4085 2D32                           l4077 2D02  
                         l3701 29F6                           l3621 2882                           l3613 2850  
                         l5221 1920                           l5205 18A0                           l5213 18DE  
                         l5141 1588                           l5125 1500                           l5133 153E  
                         l5109 13F2                           l5061 0F32                           l5053 0EF4  
                         l5045 0E5A                           l3605 5B52                           l4405 4FBE  
                         l4413 4D5C                           l4421 4BD8                           l5037 364E  
                         l5029 5192                           l4317 595E                           l4309 501A  
                         l4501 3CEC                           l4253 5AA2                           l4333 4A16  
                         l4325 49EC                           l4341 587A                           l4239 48FE  
                         l4191 30E4                           l4175 3038                           l4183 3080  
                         l4167 2FD2                           l4159 2FA0                           l4095 2D64  
                         l4087 2D42                           l4079 2D10                           l3711 2A42  
                         l3703 2A04                           l3631 28B4                           l3623 2884  
                         l3615 2852                           l5135 157C                           l5119 1462  
                         l5071 1044                           l5063 0F84                           l5055 0F28  
                         l5047 0E84                           l4415 4D68                           l4407 4D14  
                         l5311 4F04                           l4423 4BFC                           l4431 4C44  
                         l5303 5600                           l5039 3682                           l5231 5B86  
                         l4511 3D4A                           l4503 3D0A                           l4271 47C6  
                         l4263 4786                           l4327 49F8                           l4319 4966  
                         l4351 3D8C                           l4343 588A                           l4193 30F4  
                         l4185 309A                           l4177 3044                           l4169 2FE0  
                         l4097 2D72                           l4089 2D48                           l3801 2CCE  
                         l3721 2A82                           l3705 2A06                           l3641 28DC  
                         l3633 28B6                           l3617 2862                           l3625 288C  
                         l3609 2836                           l5225 192C                           l5145 1594  
                         l5081 10C8                           l5073 104A                           l5065 0FB6  
                         l5049 0E90                           l4409 4D38                           l4417 4D80  
                         l5305 5652                           l4441 4CBE                           l5313 4F18  
                         l4433 4C5C                           l4425 4C14                           l5233 5B88  
                         l5241 5AB4                           l4505 3D24                           l4249 5A7C  
                         l4281 47F6                           l4273 47D4                           l4265 47B0  
                         l4257 475C                           l4337 4A5A                           l4361 3E74  
                         l4353 3DE2                           l4345 50C6                           l4601 1C96  
                         l4521 195A                           l4195 3102                           l4187 30AE  
                         l4179 3052                           l4099 2D74                           l3803 2CD4  
                         l3731 2AAC                           l3723 2A8E                           l3715 2A56  
                         l3707 2A10                           l3651 2916                           l3643 28EC  
                         l3635 28BC                           l3627 289C                           l3619 2872  
                         l5171 16C2                           l5147 15C6                           l5091 11D6  
                         l5083 10DC                           l5075 1066                           l5067 0FBE  
                         l3811 5052                           l4451 4DD6                           l4419 4D98  
                         l4443 4CCA                           l4435 4C76                           l5315 4F2C  
                         l5307 4ED8                           l4427 4C20                           l5331 4000  
                         l5323 3F98                           l5235 5B92                           l5243 5AB8  
                         l4507 3D34                           l4291 4820                           l4283 4800  
                         l4267 47B2                           l4259 4772                           l4371 3F5C  
                         l4363 3EB0                           l4355 3DF6                           l4347 50E4  
                         l4611 1CFC                           l4603 1CD0                           l4531 19A4  
                         l4523 195E                           l4515 1936                           l5411 2340  
                         l5403 2330                           l4197 3104                           l4189 30C8  
                         l3805 2CE2                           l3741 2B1E                           l3725 2A92  
                         l3717 2A66                           l3709 2A32                           l3733 2AB2  
                         l3661 2942                           l3653 2928                           l3645 28FC  
                         l3637 28CA                           l3629 28A2                           l5173 16F4  
                         l5165 1684                           l5157 163A                           l5149 15F8  
                         l5093 1252                           l5085 117C                           l5077 10BC  
                         l5069 1012                           l3821 508A                           l3813 505A  
                         l4461 4E36                           l4453 4DEE                           l4437 4C9A  
                         l4445 4CE2                           l5309 4EEC                           l4429 4C2C  
                         l5341 408A                           l5333 401E                           l5325 3FB4  
                         l5317 3F7E                           l5261 4E50                           l5237 5B94  
                         l5229 5B7C                           l5245 5AC6                           l3901 45F8  
                         l4509 3D3A                           l4293 4830                           l4269 47C2  
                         l4373 3F6C                           l4357 3E04                           l4365 3EE4  
                         l4349 3D6C                           l4381 56C4                           l4701 2196  
                         l4621 1D4A                           l4613 1D00                           l4605 1CE0  
                         l4541 19F2                           l4533 19B4                           l4525 1982  
                         l4517 193C                           l5501 259E                           l5421 2354  
                         l5413 234C                           l5405 2334                           ?_pad 0011  
                         l4199 310A                           l3807 2CE4                           l3751 2B78  
                         l3735 2AD8                           l3743 2B2E                           l3727 2AA0  
                         l3719 2A74                           l3671 2956                           l3663 2946  
                         l3655 2936                           l3647 28FE                           l3639 28CC  
                         l5191 17CC                           l5159 1678                           l5095 12AE  
                         l5087 118C                           l3831 50B6                           l3823 5090  
                         l3815 506C                           l4455 4DFA                           l4447 4CFA  
                         l4439 4CB2                           l4391 5B1E                           l5351 410E  
                         l5343 40A2                           l5335 4036                           l5327 3FCC  
                         l5319 3F86                           l5271 4E7E                           l5263 4E62  
                         l5239 5B96                           l5247 5ACA                           l3911 463C  
                         l3903 45FC                           l3591 4A76                           l4471 3B52  
                         l4463 3AEE                           l4295 4840                           l4279 47EC  
                         l4367 3F20                           l4383 56C8                           l4711 2234  
                         l4703 219A                           l4631 1DE2                           l4615 1D12  
                         l4623 1D52                           l4607 1CEC                           l4551 1A2E  
                         l4543 1A04                           l4535 19C0                           l4527 198C  
                         l4519 194C                           l5511 25F4                           l5503 25B2  
                         l5431 2364                           l5423 2358                           l5415 234E  
                         l5407 2338                           l3761 2BA8                           l3753 2B82  
                         l3745 2B54                           l3737 2B0C                           l3729 2AA2  
                         l3681 296A                           l3673 295A                           l3665 294A  
                         l3657 293A                           l3649 2906                           l5185 1736  
                         l5169 1690                           l5097 132A                           l5089 11C4  
                         l3825 50A6                           l3817 5074                           l3841 448C  
                         l4457 4E06                           l4449 4DB2                           l4393 4F5A  
                         l5353 412C                           l5345 40C0                           l5337 4054  
                         l5329 3FE8                           l5281 4EBC                           l5273 4E82  
                         l5265 4E64                           l3921 46A4                           l3913 465C  
                         l3905 460A                           l3593 4A88                           l3833 58BE  
                         l4481 3BB0                           l4473 3B6E                           l4465 3B0E  
                         l4297 4850                           l4289 4814                           l4369 3F34  
                         l4385 56D4                           l4377 56A4                           l4721 228A  
                         l4705 21A0                           l4713 2238                           l4641 1EC6  
                         l4633 1E3A                           l4625 1D5A                           l4617 1D20  
                         l4609 1CF4                           l4561 1A90                           l4553 1A38  
                         l4545 1A08                           l4537 19C8                           l4529 1994  
                         l4801 3840                           l5521 263C                           l5513 25FA  
                         l5505 25B8                           l5441 2384                           l5433 2368  
                         l5425 235A                           l5417 2350                           l5409 233C  
                         l3771 2BD0                           l3763 2BAC                           l3755 2B90  
                         l3747 2B64                           l3739 2B0E                           l3691 29A4  
                         l3683 296E                           l3675 295E                           l3667 294E  
                         l3659 293E                           l5187 1768                           l5099 1382  
                         l3827 50AE                           l3819 507C                           l3851 4556  
                         l3843 44A8                           l4459 4E1E                           l4395 4F5E  
                         l5347 40D8                           l5339 406C                           l5355 4144  
                         l5283 4EBE                           l5275 4EA6                           l5267 4E66  
                         l3931 471A                           l3923 46D2                           l3915 467A  
                         l3907 462A                           l3595 4A92                           l3835 58CA  
                         l4491 3BE0                           l4483 3BBC                           l4475 3B8A  
                         l4467 3B22                           l4379 56B8                           l4387 56D8  
                         l4731 2306                           l4723 22BA                           l4715 2256  
                         l4707 21F8                           l4651 1F60                           l4643 1EF8  
                         l4635 1E6E                           l4627 1D6A                           l4619 1D38  
                         l4563 1A94                           l4547 1A0E                           l4539 19CC  
                         l4811 3906                           l4803 3860                           l5291 54B8  
                         l5531 2692                           l5523 2650                           l5515 260E  
                         l5507 25CC                           l5451 23A0                           l5443 2388  
                         l5435 236C                           l5427 235C                           l5419 2352  
                         l3941 313A                           l3781 2C2A                           l3773 2BDE  
                         l3765 2BBC                           l3757 2B92                           l3693 29C0  
                         l3685 2972                           l3677 2962                           l3669 2952  
                         l5189 179A                           l3829 50B0                           l3853 4572  
                         l3845 44FC                           l4397 4F76                           l4389 5B0E  
                         l4741 5BB4                           l5349 40F6                           l5285 4EC8  
                         l5277 4EB0                           l5269 4E68                           l4901 57DA  
                         l3861 4316                           l3933 473A                           l3925 46F2  
                         l3917 4682                           l3909 462E                           l3597 4AB0  
                         l3589 4A64                           l3837 58DC                           l4493 3C62  
                         l4485 3BC4                           l4477 3B9A                           l4469 3B32  
                         l4733 230E                           l4725 22C8                           l4717 2272  
                         l4709 222C                           l4661 2038                           l4653 1F94  
                         l4645 1F0E                           l4629 1D7E                           l4637 1E74  
                         l4581 1B1E                           l4565 1A9A                           l4549 1A16  
                         l4557 1A58                           l4813 3916                           l4805 3880  
                         l5293 54CA                           l5541 26E8                           l5533 26A6  
                         l5525 2664                           l5517 2622                           l5509 25E0  
                         l5461 23D2                           l5453 23A8                           l5445 238C  
                         l5437 2374                           l5429 235E                           l3951 316E  
                         l3943 313C                           l3791 2C94                           l3783 2C38  
                         l3775 2BF4                           l3759 2BA0                           l3767 2BBE  
                         l3695 29D0                           l3679 2966                           l3687 2976  
                         l5199 1802                           l3855 45B6                           l3847 4510  
                         l4399 4F82                           l4743 5BB8                           l5287 4ECA  
                         l5279 4EB2                           l4751 5BC2                           l4911 5B9C  
                         l3871 436C                           l3863 4336                           l3927 4704  
                         l3919 4696                           l3599 4AE6                           l3839 58E0  
                         l4495 3C68                           l4487 3BD0                           l4479 3BA0  
                         l4727 22E0                           l4719 227A                           l4671 2062  
                         l4655 1FEA                           l4663 203C                           l4647 1F40  
                         l4639 1E92                           l4591 1C06                           l4583 1B24  
                         l4567 1AA2                           l4559 1A7E                           l4575 1ABE  
                         l4815 392C                           l4823 3944                           l4807 38D6  
                         l5295 54D2                           l5551 273E                           l5543 26FC  
                         l5535 26BA                           l5527 2678                           l5519 2636  
                         l5471 2426                           l5463 23F0                           l5455 23B0  
                         l5447 2390                           l5439 237C                           l3961 31A0  
                         l3945 314C                           l3953 3176                           l3937 3120  
                         l3793 2CB4                           l3785 2C72                           l3769 2BCC  
                         l3697 29E6                           l3689 297A                           l3849 4514  
                         l4737 5BD2                           l4745 5BC8                           l4921 5A00  
                         l5289 4ED4                           l4761 593E                           l4753 5904  
                         l4905 57E4                           l4913 5BAC                           l3881 43C0  
                         l3873 4378                           l3865 433A                           l3857 4304  
                         l3929 470A                           l4497 3C6E                           l4489 3BDA  
                         l4729 22F0                           l4681 2130                           l4673 206E  
                         l4665 204C                           l4657 1FF0                           l4649 1F50  
                         l4593 1C1A                           l4585 1B58                           l4577 1AD8  
                         l4833 3A02                           l4817 3934                           l4825 3976  
                         l5297 54DA                           l5561 2796                           l5553 2744  
                         l5545 2702                           l5537 26C0                           l5529 267E  
                         l5481 24B8                           l5473 243A                           l5465 2404  
                         l5457 23B8                           l5449 2398                           l3971 31D4  
                         l3963 31A2                           l3955 3186                           l3947 315C  
                         l3939 312C                           l3795 2CB8                           l3779 2C1E  
                         l3787 2C74                           l3699 29F2                           l4931 52FE  
                         l4771 53DC                           l4739 5BD6                           l4747 5BCC  
                         l4915 52A4                           l4923 550A                           l4763 5940  
                         l4755 5908                           l4907 582A                           l3891 4434  
                         l3883 43D2                           l3875 4396                           l3867 4348  
                         l3859 4308                           l4499 3CD2                           l4691 2162  
                         l4683 2140                           l4675 20E6                           l4667 2054  
                         l4659 2024                           l4595 1C4E                           l4587 1B96  
                         l4843 3A7E                           l4835 3A2C                           l4827 399A  
                         l4819 393C                           l5299 54F6                           l5563 27CA  
                         l5555 2758                           l5547 2716                           l5539 26D4  
                         l5483 24D2                           l5491 2502                           l5475 2458  
                         l5467 240A                           l5459 23C0                           l3981 321A  
                         l3965 31B2                           l3973 31DC                           l3957 318C  
                         l3949 316C                           l3797 2CC6                           l3789 2C84  
                         l4941 4152                           l4781 536C                           l4933 5312  
                         l4773 540A                           l4925 512C                           l4917 52B8  
                         l4757 5910                           l4749 5BBE                           l3885 4400  
                         l3877 439E                           l3893 443A                           l3869 4368  
                         l4693 2166                           l4685 2144                           l4677 2106  
                         l4669 205A                           l4597 1C56                           l4589 1BC8  
                         l4837 3A4C                           l4829 39CE                           l4845 3AAE  
                         l5557 276C                           l5549 272A                           l5493 2520  
                         l5485 24DA                           l5477 2480                           l5565 27DC  
                         l5469 241A                           l3991 3242                           l3983 321E  
                         l3975 31EC                           l3967 31C2                           l3959 3192  
                         l3799 2CCC                           l4943 4162                           l4783 5384  
                         l4935 532A                           l4775 541E                           l4767 53B2  
                         l4919 52D0                           l4927 5A3E                           l4759 5918  
                         l3895 444A                           l3887 4420                           l3879 43B2  
                         l4695 216C                           l4687 214A                           l4679 2122  
                         l5671 3AA0                           l4791 37E8                           l5567 2812  
                         l5559 2784                           l5495 2528                           l5487 24E2  
                         l5479 249C                           l3977 3202                           l3969 31D2  
                         l4961 4228                           l4953 41E0                           l4945 4170  
                         l4777 5434                           l4769 53C6                           l4881 5AF8  
                         l4873 5AE4                           l4929 555C                           l4785 524A  
                         l4937 5984                           l3897 446A                           l3889 4422  
                         l4689 2152                           l4697 2172                           l4793 3810  
                         l4849 3AC0                           l5497 257E                           l5489 24EA  
                         l5569 281E                           l3995 3256                           l3979 3212  
                         l3987 3232                           l4971 42A8                           l4963 4234  
                         l4955 41E8                           l4947 41B6                           l4779 5358  
                         l4883 5AFA                           l4875 5AEE                           l4787 525E  
                         l4939 59C2                           l4699 2184                           l5667 3958  
                         l4795 381E                           l5499 258A                           l3997 3270  
                         l3989 3242                           l4981 42F0                           l4973 42AA  
                         l4965 4270                           l4957 41F4                           l4949 41CC  
                         l4877 5AF4                           l4885 5B5E                           l4789 5276  
                         l4893 5744                           l5669 3A16                           l4797 382C  
                         l3999 3280                           l4983 42F2                           l4975 42AE  
                         l4967 427C                           l4959 4226                           l4879 5AF6  
                         l4895 578A                           l4887 56F4                           l4799 3830  
                         l4991 548C                           l4977 42D2                           l4969 428A  
                         l4889 573A                           l4993 54AC                           l4979 42E2  
                         l4899 5794                           l4987 5462                           l4997 55AE  
                         l4989 546E                           l4999 55B2                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E2E  
                         STR_3 0E50                           STR_6 0E54                           u3000 2A24  
                         u3001 2A20                           u3010 2A32                           u3011 2A2E  
                         u3100 2B90                           u3020 2A42                           u3101 2B8C  
                         u3021 2A3E                           u3110 2BA0                           u3030 2A74  
                         u3111 2B9C                           u3031 2A70                           u3200 2C84  
                         u3120 2BBC                           u3040 2A82                           u4000 4830  
                 _BAUD4CONbits 000EE9                           u3201 2C80                           u3121 2BB8  
                         u3041 2A7E                           u4001 482C                           u3210 2C94  
                         u3130 2BCC                           u3050 2AA0                           u4010 4840  
                         u3211 2C90                           u3131 2BC8                           u3051 2A9C  
                         u4011 483C                           u3220 2CB4                           u3140 2BDE  
                         u3060 2AD8                           u3300 4572                           u4020 4FE6  
                         u4100 4A50                           u3221 2CB0                           u3141 2BDA  
                         u3061 2AD4                           u3301 456E                           u4021 4FE2  
                         u4101 4A4A                           u3230 2CC6                           u3150 2BF4  
                         u3070 2B1E                           u3310 4316                           u4030 503C  
                         u4110 4A52                           u3231 2CC2                           u3151 2BF0  
                         u3071 2B1A                           u3311 4312                           u4031 5038  
                         u3240 2CE2                           u3160 2C0A                           u3080 2B54  
                         u5000 1066                           u3320 4348                           u3400 467A  
                         u4040 595E                           u4200 3EB0                           u4120 58BC  
                         u3241 2CDE                           u3161 2C06                           u3081 2B50  
                         u5001 1062                           u3321 4344                           u3401 4676  
                         u4041 595A                           u4201 3EAC                           u4121 58B8  
                         u3170 2C1E                           u3090 2B64                           u5010 10BC  
                         u3250 506C                           u3410 46A4                           u4050 49A6  
                         u4210 3F04                           u4130 50E4                           _T2PR 000FBC  
                         u3171 2C1A                           u3091 2B60                           u5011 10B8  
                         u3251 5068                           u3331 4372                           u3411 46A0  
                         u4131 50E0                           u3500 3202                           u3180 2C38  
                         u5100 14C6                           u5020 10DC                           u3260 508A  
                         u4300 4DB0                           u3340 4396                           u3420 46D2  
                         u4060 49C4                           u4220 3F20                           u4140 3DB4  
                         u3501 31FE                           u3181 2C34                           u5101 14C2  
                         u5021 10D8                           u3261 5086                           u4301 4DAC  
                         u3341 4392                           u3421 46CE                           u4061 49C0  
                         u4221 3F1C                           u3510 3242                           u3190 2C72  
                         u5110 1500                           u5030 118C                           u3270 50A6  
                         u4310 4C5C                           u3350 43C0                           u3430 471A  
                         u4070 49EC                           u4230 3F5C                           u4150 3DE2  
                         u3511 323E                           u3191 2C6E                           u5111 14FC  
                         u5031 1188                           u3271 50A2                           u4311 4C58  
                         u3351 43BC                           u3431 4716                           u4071 49E8  
                         u4055 499C                           u4231 3F58                           u4215 3EFA  
                         u4151 3DDE                           u3600 33BC                           u3520 32B8  
                         u3440 313A                           u5200 1732                           u5120 153A  
                         u5040 11D6                           u4320 4C74                           u3360 4400  
                         u3280 5900                           u4400 3B6E                           u4080 4A16  
                         u4160 3E04                           u4240 56F2                           u3601 33B8  
                         u3521 32B4                           u3441 3136                           u5201 172E  
                         u5121 1536                           u5041 11D2                           u4321 4C70  
                         u3361 43FC                           u3281 58FC                           u4401 3B6A  
                         u4081 4A12                           u4161 3E00                           u4145 3DAA  
                         u4241 56EE                           u3610 33D2                           u3530 32DA  
                         u3450 314C                           u5210 1768                           u5130 157C  
                         u5050 13B4                           u3290 44A8                           u4330 4CFA  
                         u4250 5B1E                           u3370 444A                           u4410 3B9A  
                         u3611 33CE                           u3531 32D6                           u3451 3148  
                         u5211 1764                           u5131 1578                           u5051 13B0  
                         u3291 44A4                           u4331 4CF6                           u4251 5B1A  
                         u3371 4446                           u4411 3B96                           u3620 33E6  
                         u3540 3304                           u3460 315C                           u3700 2D72  
                         u2900 28CA                           u5220 179A                           u5140 15C6  
                         u5060 13E6                           u4340 4D12                           u4260 5B34  
                         u5300 5AE2                           u3380 460A                           u2820 4A76  
                         u4420 3BB0                           u4180 3E70                           u4500 19F2  
                         u3621 33E2                           u3541 3300                           u3461 3158  
                         u3701 2D6E                           u2901 28C6                           u5221 1796  
                         u5141 15C2                           u5061 13E2                           u4341 4D0E  
                         u4261 5B30                           u5301 5ADE                           u3381 4606  
                         u2821 4A72                           u4421 3BAC                           u4181 3E6C  
                         u4501 19EE                           u3630 3400                           u3550 3328  
                         u3470 31A0                           u3710 2D84                           u2910 28DC  
                         u5230 17CC                           u5150 15F8                           u5070 1424  
                         u4350 4E36                           u4270 4FBE                           u3390 463C  
                         u2830 4A88                           u4430 3CEC                           u4190 3E94  
                         u4510 1A04                           u3631 33FC                           u3551 3324  
                         u3471 319C                           u3711 2D80                           u2911 28D8  
                         u5231 17C8                           u5151 15F4                           u5071 1420  
                         u4351 4E32                           u4271 4FBA                           u3391 4638  
                         u2831 4A84                           u4431 3CE8                           u4095 4A28  
                         u4175 3E18                           u4511 1A00                           u3640 3448  
                         u3560 333E                           u3480 31B2                           u3800 3024  
                         u3720 2D94                           u2920 28EC                           u5240 17FE  
                         u5160 1636                           u5080 1456                           u4360 4E4E  
                         u4280 4FD6                           u5400 40C0                           u2840 4AB0  
                         u4440 3D0A                           u4176 3E22                           u4600 1CE0  
                         u4520 1A7E                           u3641 3444                           u3561 333A  
                         u3481 31AE                           u3801 3020                           u3721 2D90  
                         u2921 28E8                           u5241 17FA                           u5161 1632  
                         u5081 1452                           u4361 4E4A                           u4281 4FD2  
                         u5401 40BC                           u2841 4AAC                           u4441 3D06  
                         u4177 3E32                           u4601 1CDC                           u4521 1A7A  
                         u3650 3478                           u3570 335C                           u3490 31C2  
                         u3810 3038                           u3730 2DCA                           u2930 2928  
                         u5250 1834                           u5170 1678                           u5090 1494  
                         u4290 4D98                           u5410 40F6                           u2850 4AE6  
                         u4450 3D24                           u4370 3B1E                           u4610 1D12  
                         u4530 1A90                           u3651 3474                           u3571 3358  
                         u3491 31BE                           u3811 3034                           u3731 2DC6  
                         u2931 2924                           u5251 1830                           u5171 1674  
                         u5091 1490                           u4291 4D94                           u5411 40F2  
                         u2851 4AE2                           u4451 3D20                           u4371 3B18  
                         u4195 3E8A                           u4611 1D0E                           u4531 1A8C  
                         u3660 34A6                           u3580 337C                           u3900 48CE  
                         u3820 3052                           u3740 2DDA                           u2940 2936  
                         u2860 2850                           u5260 1866                           u5180 16C2  
                         u5420 412C                           u5340 3F94                           u4460 3D34  
                         u4380 3B20                           u4700 20E6                           u4620 1D20  
                         u4540 1B0A                           u5500 24D2                           u3661 34A2  
                         u3581 3378                           u3901 48CA                           u3821 304E  
                         u3741 2DD6                           u2941 2932                           u2861 284C  
                         u5261 1862                           u5181 16BE                           u5421 4128  
                         u5341 3F90                           u4461 3D30                           u4701 20E2  
                         u4621 1D1C                           u4541 1B06                           u5501 24CE  
                         u3590 338E                           u3910 48EC                           u3830 309A  
                         u3750 2F54                           u3670 2D10                           u2950 29A4  
                         u2870 2862                           u5270 18A0                           u5190 16F4  
                         u5350 3FB4                           u4390 3B32                           u4710 2122  
                         u4630 1D4A                           u4550 1B96                           u4470 195A  
                         u5510 2520                           u3591 338A                           u3911 48E8  
                         u3831 3096                           u3671 2D0C                           u2951 29A0  
                         u2871 285E                           u5271 189C                           u5191 16F0  
                         u5351 3FB0                           u4391 3B2E                           u4711 211E  
                         u4631 1D46                           u4551 1B92                           u4471 1956  
                         u5511 251C                           u3920 490C                           u3840 30C8  
                         u3760 2FAE                           u3680 2D22                           u2960 29BC  
                         u2880 2872                           u5280 18DA                           u5360 3FE8  
                         u4720 2130                           u4640 1E92                           u4560 1BC8  
                         u4480 19A4                           u5600 2796                           u5520 259E  
                         u3921 4908                           u3841 30C4                           u3761 2FAA  
                         u3681 2D1E                           u2961 29B6                           u2881 286E  
                         u5281 18D6                           u5361 3FE4                           u4721 212C  
                         u4641 1E8E                           u4561 1BC4                           u4481 19A0  
                         u5601 2792                           u5521 259A                           u3930 495C  
                         u3850 3102                           u3770 2FCE                           u3690 2D32  
                         u2970 29BE                           u2890 28B4                           u5290 191C  
                         u5370 401E                           u4730 2184                           u4650 1EF8  
                         u4570 1C06                           u4490 19B4                           u4810 3810  
                         u5610 2832                           u5530 25E0                           u3931 4958  
                         u3851 30FE                           u3771 2FCA                           u3755 2F4A  
                         u3691 2D2E                           u2891 28B0                           u5291 1918  
                         u5371 401A                           u4731 2180                           u4651 1EF4  
                         u4571 1C02                           u4491 19B0                           u4811 380C  
                         u5611 282E                           u5531 25DC                           u3860 4B5C  
                         u3780 2FE0                           u2980 29E6                           u4900 426C  
                         u5380 4054                           u3940 5A92                           u4740 2256  
                         u4660 1F40                           u4580 1C92                           u4820 3860  
                         u5540 2622                           u3861 4B58                           u3781 2FDC  
                         u2981 29E2                           u4901 4268                           u5381 4050  
                         u3941 5A8E                           u4741 2252                           u4661 1F3C  
                         u4581 1C8E                           u4821 385C                           u5541 261E  
                         u3870 4B9A                           u3790 300E                           u2990 2A04  
                         u4910 428A                           u5390 408A                           u3950 4772  
                         u4750 2272                           u4670 1F50                           u4590 1CC8  
                         u4830 3880                           u5550 2664                           u3871 4B96  
                         u3791 300A                           u2991 2A00                           u4911 4286  
                         u5391 4086                           u3951 476E                           u4751 226E  
                         u4671 1F4C                           u4591 1CC4                           u4831 387C  
                         u5551 2660                           u3880 4BCE                           u4920 429A  
                         u4808 592E                           u3960 47A6                           u4760 22DA  
                         u4680 1FEA                           u4840 3996                           u5560 26A6  
                         u5480 23D2                           u3881 4BCA                           u4921 4296  
                         u4761 22D4                           u4681 1FE6                           u4841 3992  
                         u5561 26A2                           u5481 23CE                           u3890 4890  
                         u4930 42A8                           u4850 5BAC                           u3970 47D4  
                         u4770 22DC                           u4690 2038                           u5570 26E8  
                         u5490 2458                           u3891 488C                           u4931 42A4  
                         u5707 53D0                           u4851 5BA8                           u3971 47D0  
                         u4691 2034                           u5571 26E4                           u5491 2454  
                         u5627 23DE                           u4940 42E2                           u4860 4162  
                         u3980 47E8                           u4780 22F0                           u5580 272A  
                         u4941 42DE                           u4861 415E                           u5717 53FA  
                         u3981 47E4                           u3965 479C                           u4781 22EC  
                         u5581 2726                           u5637 248C                           u4950 42F0  
                         u4870 4170                           u4790 592C                           u3990 4810  
                         u5590 276C                           u4951 42EC                           u4871 416C  
                         u5807 5348                           u5727 4C36                           u4791 5924  
                         u3991 480C                           u5591 2768                           u5647 24F6  
                         u4880 41CC                           u4960 54AC                           u4881 41C8  
                         u5817 5376                           u5737 4EF6                           u5657 5268  
                         u4961 54A8                           u4890 4222                           u4891 421E  
                         u4971 0E8A                           u5827 53A2                           u5747 4F36  
                         u5667 5294                           u4980 0F84                           u4981 0F80  
                         u5837 4F98                           u5757 4CD4                           u5677 52C2  
                         u4990 1012                           u4991 100E                           u5847 4E10  
                         u5767 5428                           u5687 52EE                           u5777 5452  
                         u5697 55C2                           u5787 4D72                           u5797 531C  
                _LightBlueMove 555C                           abs@a 0013                           _dbuf 0116  
                         _labs 50C6                           _main 2330                           _dtoa 3AEE  
                         _prec 00E9                           _vals 0184                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4F5A  
                ___fpclassifyf 4966                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 0043         __end_of_color_read_Red 5794  
              __end_of_HighISR 000E         __end_of_color_read_lum 5744                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 5A3E  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 53B2                  ___fltol@sign1 0009                __end_of___aodiv 448C  
                        ?_labs 0001                __end_of___fladd 2CF6                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 475C                __end_of___fldiv 34BA  
              __end_of___flneg 5AB4                __end_of___flmul 3120                __end_of___flsub 587A  
              __end_of___fltol 4862                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 50C6                          i2l275 000A                   vfpfcnvrt@fmt 0097  
              __end_of_go_Home 4150        __end_of_sendCharSerial4 5BB2     __end_of_I2C_2_Master_Start 5BDC  
   __end_of_I2C_2_Master_Write 5BBE                   YellowMove@mL 0020                          _flags 00ED  
                 YellowMove@mR 0022                          _fputc 4A64                          _fputs 58BE  
                        labs@a 0001                          pad@fp 0011                          _power 00F6  
                        _width 00E7                          _putch 5BE4                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                   main@run_flag 01F0  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 550A  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5834          _I2C_2_Master_RepStart 5BBE  
             __end_of_BlueMove 5192                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 51F0  
              _reverseOneBlock 52FE                   __end_of_labs 512C                   __end_of_main 2836  
                 __end_of_dtoa 3D6C                   __end_of_stop 4FD8                _colour_rel$2790 0068  
              _colour_rel$2789 0064                         ??_labs 0005                         ??_main 00D1  
                       ??_dtoa 0026          __end_of_ReverseYellow 59C2               __end_of_PinkMove 56A4  
                       ??_stop 0018                  __activetblptr 000003              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 5600                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 550A               __end_of___xxtofl 4304                      ??_RedMove 0024  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE                  ??_ReversePink 0024  
                       ___flge 4862                         ___fleq 4B2E                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 5B36  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 003A  
                    ??___flneg 0005                      ??___flmul 0019                      ??___flsub 0032  
                    ??___fltol 0005                         _efgtoa 1936                      ??___lwdiv 000B  
                       _floorf 3D6C                         _memcpy 56A4                         clear_0 5216  
                       clear_1 5222                         clear_2 522E                         clear_3 523A  
                       _motorL 017B                         _motorR 0172                         isa$std 000001  
                    ??_go_Home 0026                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 587A                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 54B8  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 4DB2                     ___flge@ff1 002A  
                   _YellowMove 5600                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 5240  
      __end_of_reverseOneBlock 5358                     ___flneg@f1 0001       __end_of_color_read_Green 57E4  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 5BE6                 __pcstackCOMRAM 0001  
                _fullSpeedBack 4DB2                   __pidataBANK0 5BDC                  __end_of_fputc 4B2E  
                __end_of_fputs 5902                  __end_of_putch 5BE6              __end_of_GreenMove 5A7C  
          __end_of_ReversePink 5A00                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14347 00D3          __end_of_reverseDetect 53B2  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                     __pbssBANK3 0300                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 52A4  
            __end_of_RetryMove 4F5A                      ?_PinkMove 0020              _color_writetoaddr 5B5C  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 34BA  
      __end_of_Interrupts_init 5BE8         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 01F2                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 5B7C                        _RedMove 5A00  
           _I2C_2_Master_Start 5BD2                     ??_PinkMove 0024                     _initUSART4 5B7C  
           _I2C_2_Master_Write 5BB2                        __Hparam 0000                        _WayBack 0300  
                      __Lparam 0000              color_read_Red@tmp 000A                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 59C2                        ___aodiv 4304  
                      ___fladd 2836                        ___aomod 45F8                        ___fldiv 3120  
                      ___flneg 5A7C                        ___flmul 2CF6                        ___flsub 5834  
                      ___fltol 475C            ?_I2C_2_Master_Start 0001                        ___lwdiv 5052  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 51F0  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3F7E  
                      __ptext0 2330                        __ptext1 54B8                        __ptext2 5462  
                      __ptext3 37E8                        __ptext4 1936                        __ptext5 587A  
                      __ptext6 56A4                        __ptext7 50C6                        __ptext8 3D6C  
                      __ptext9 4966                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00F1              color_read_lum@tmp 000A                        main@buf 018C  
                      _sprintf 54B8           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 5240                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 0114              __end_of_vfpfcnvrt 3AEE                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00F4                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 4E50  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 4C76                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 01F4                   _EUSART4RXbuf 0100  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 540A                 __end_of___flge 4966  
               __end_of___fleq 4BD8                 _fullSpeedAhead 4C76                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 5B5C  
               __end_of_efgtoa 2330                 __end_of_floorf 3F7E                 __end_of_memcpy 56F4  
                   floorf@F526 00DF       __end_of_Forwardhalfblock 52FE                      _GreenMove 5A3E  
               __end_of_strcpy 58BE            start_initialization 51F0                    __end_of_abs 5984  
                  __end_of_pad 5052                  _TxBufWriteCnt 00EF          __end_of_LightBlueMove 55AE  
                 ??_OrangeMove 0024          __end_of___fpclassifyf 4A64            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 4ED8                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 4D14  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 4ED8  
                     ??___wmul 0005                  ??_readColours 000E                       ??_efgtoa 0067  
                  __pdataBANK0 00F2                _ForwardOneBlock 524A                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 5984                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 555C                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                __pcstackBANK0 0060                  __pcstackBANK1 018C               ___aodiv@dividend 0001  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2418 006F               ___lwdiv@dividend 0007  
                    _dtoa$2387 002E                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 0020                     ?_RetryMove 001A  
                     ?___aodiv 0001                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$2791 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 5652  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00            __end_of_readColours 51F0  
            _I2C_2_Master_Idle 5B0E              _I2C_2_Master_Init 5AE4              _I2C_2_Master_Read 5902  
            _I2C_2_Master_Stop 5BC8                  _low_threshold 00EB                   _RxBufReadCnt 00F0  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0                 colour_rel@vals 004B  
            _sendStringSerial4 5AB4            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 52A4                    turnRight@mL 0014                    turnRight@mR 0016  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E5A            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 37E8      __end_of_I2C_2_Master_Idle 5B36  
    __end_of_I2C_2_Master_Init 5B0E      __end_of_I2C_2_Master_Read 5944              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 5BD2                   setMotorPWM@m 000E                       _DataFlag 00F8  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024              ??_color_read_Blue 0007  
                 _TxBufReadCnt 00EE                       _BlueMove 512C                      _turnRight 4BD8  
                   vfpfcnvrt@c 00A5                      copy_data0 5204      __end_of_sendStringSerial4 5AE4  
                 ??_colour_rel 004F                  _reverseDetect 5358  __end_of_I2C_2_Master_RepStart 5BC8  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 45F8                   ??_initUSART4 0001  
                     _PinkMove 5652                       __Hrparam 0000         __end_of_Colour_decider 1936  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 4E50                    ??_RetryMove 001E  
                  _readColours 5192                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 37E8  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                   sprintf@fmt 00B2              ?_Forwardhalfblock 001A                       ___xxtofl 4150  
              ___lwdiv@divisor 0009             __end_of_initUSART4 5B9A                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 475C  
                     __ptext11 5A7C                       __ptext20 5AB4                       __ptext12 3AEE  
                     __ptext21 5B9A                       __ptext13 4FD8                       __ptext30 4E50  
                     __ptext22 5192                       __ptext14 58BE                       __ptext31 3F7E  
                     __ptext23 56F4                       __ptext15 4A64                       __ptext40 512C  
                     __ptext32 5984                       __ptext24 5744                       __ptext16 5BE4  
                     __ptext41 34BA                       __ptext33 59C2                       __ptext25 5794  
                     __ptext17 5944                       __ptext50 53B2                       __ptext42 55AE  
                     __ptext34 524A                       __ptext26 57E4                       __ptext18 45F8  
                     __ptext51 4BD8                       __ptext43 5B5C                       __ptext35 5A00  
                     __ptext27 5BBE                       __ptext19 4304                       __ptext60 4DB2  
                     __ptext52 4ED8                       __ptext44 5BB2                       __ptext36 550A  
                     __ptext28 5902                       __ptext61 448C                       __ptext53 4C76  
                     __ptext45 5BC8                       __ptext37 555C                       __ptext29 5B7C  
                     __ptext70 4862                       __ptext62 5B36                       __ptext54 5652  
                     __ptext46 5BD2                       __ptext38 5A3E                       __ptext71 4B2E  
                     __ptext63 5052                       __ptext55 540A                       __ptext47 5B0E  
                     __ptext39 52A4                       __ptext72 3120                       __ptext64 5BE6  
                     __ptext56 4D14                       __ptext48 5AE4                       __ptext65 0E5A  
                     __ptext57 52FE                       __ptext49 5600                       __ptext66 4150  
                     __ptext58 5358                       __ptext67 5834                       __ptext59 4F5A  
                     __ptext68 2836                       __ptext69 2CF6                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 0027                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 5462                  ??_turnRight45 001E                       _turnLeft 4D14  
             ___aomod@dividend 0001              ??_reverseOneBlock 001E                main@prev_colour 01F6  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 448C  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 00C4                 _high_threshold 00F2               ??_fullSpeedAhead 0018  
                    strcpy@src 0003                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                    efgtoa@nmode 0073                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 009B                ___aomod@counter 0011               _color_click_init 55AE  
                     sprintf@f 00C6                       sprintf@s 00B0                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 540A                ??_reverseDetect 001E  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 5462  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 5B9A  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
