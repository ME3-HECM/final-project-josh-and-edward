

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 19:55:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    92   000000                     
    93                           ; Generated 06/04/2022 GMT
    94                           ; 
    95                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution. Publication is not required when
   109                           ;        this file is used in an embedded application.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F67K40 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127   000000                     
   128                           	psect	idataBANK0
   129   004C4E                     __pidataBANK0:
   130                           	callstack 0
   131                           
   132                           ;initializer for _DataFlag
   133   004C4E  01                 	db	1
   134                           
   135                           	psect	idataBANK1
   136   004C42                     __pidataBANK1:
   137                           	callstack 0
   138                           
   139                           ;initializer for _high_threshold
   140   004C42  03E8               	dw	1000
   141                           
   142                           ;initializer for _RunOneBlockTime
   143   004C44  07D0               	dw	2000
   144                           
   145                           ;initializer for _Turn45Delay
   146   004C46  00DC               	dw	220
   147                           
   148                           ;initializer for _power
   149   004C48  001E               	dw	30
   150   000000                     _TRISEbits	set	3973
   151   000000                     _TX4REG	set	3812
   152   000000                     _RC4STAbits	set	3815
   153   000000                     _SP4BRGH	set	3814
   154   000000                     _SSP2CON2bits	set	3802
   155   000000                     _RX4PPS	set	3605
   156   000000                     _SSP2CLKPPS	set	3612
   157   000000                     _SSP2DATPPS	set	3613
   158   000000                     _ANSELDbits	set	3751
   159   000000                     _SSP2ADD	set	3798
   160   000000                     _SSP2CON1bits	set	3801
   161   000000                     _LATAbits	set	3961
   162   000000                     _LATFbits	set	3966
   163   000000                     _LATGbits	set	3967
   164   000000                     _TRISAbits	set	3969
   165   000000                     _TRISGbits	set	3975
   166   000000                     _PORTFbits	set	3982
   167   000000                     _CCPR2H	set	4006
   168   000000                     _CCPR1H	set	4010
   169   000000                     _TRISCbits	set	3971
   170   000000                     _TRISDbits	set	3972
   171   000000                     _TRISFbits	set	3974
   172   000000                     _LATDbits	set	3964
   173   000000                     _RC4REG	set	3811
   174   000000                     _SP4BRGL	set	3813
   175   000000                     _TX4STAbits	set	3816
   176   000000                     _BAUD4CONbits	set	3817
   177   000000                     _SSP2CON2	set	3802
   178   000000                     _SSP2STAT	set	3800
   179   000000                     _ANSELFbits	set	3764
   180   000000                     _SSP2BUF	set	3797
   181   000000                     _PIE4bits	set	3629
   182   000000                     _PIR4bits	set	3639
   183   000000                     _RC0PPS	set	3682
   184   000000                     _RD5PPS	set	3695
   185   000000                     _RE2PPS	set	3700
   186   000000                     _RD6PPS	set	3696
   187   000000                     _RC7PPS	set	3689
   188   000000                     _CCPR4H	set	3873
   189   000000                     _CCPR3H	set	3877
   190   000000                     _CCP1CONbits	set	4011
   191   000000                     _CCPTMRS0bits	set	4013
   192   000000                     _T2PR	set	4028
   193   000000                     _T2CONbits	set	4029
   194   000000                     _TMR0L	set	4051
   195   000000                     _TMR0H	set	4052
   196   000000                     _CCP2CONbits	set	4007
   197   000000                     _CCP3CONbits	set	3878
   198   000000                     _CCP4CONbits	set	3874
   199   000000                     _T0CON1bits	set	4054
   200   000000                     _T0CON0bits	set	4053
   201   000000                     _RE4PPS	set	3702
   202   000000                     _RG6PPS	set	3720
   203   000000                     _T2CLKCONbits	set	4031
   204   000000                     _T2HLTbits	set	4030
   205                           
   206                           	psect	smallconst
   207   000E00                     __psmallconst:
   208                           	callstack 0
   209   000E00  00                 	db	0
   210   000E01                     STR_1:
   211   000E01  72                 	db	114	;'r'
   212   000E02  65                 	db	101	;'e'
   213   000E03  64                 	db	100	;'d'
   214   000E04  3D                 	db	61	;'='
   215   000E05  25                 	db	37
   216   000E06  64                 	db	100	;'d'
   217   000E07  20                 	db	32
   218   000E08  67                 	db	103	;'g'
   219   000E09  72                 	db	114	;'r'
   220   000E0A  65                 	db	101	;'e'
   221   000E0B  65                 	db	101	;'e'
   222   000E0C  6E                 	db	110	;'n'
   223   000E0D  3D                 	db	61	;'='
   224   000E0E  25                 	db	37
   225   000E0F  64                 	db	100	;'d'
   226   000E10  20                 	db	32
   227   000E11  62                 	db	98	;'b'
   228   000E12  6C                 	db	108	;'l'
   229   000E13  75                 	db	117	;'u'
   230   000E14  65                 	db	101	;'e'
   231   000E15  3D                 	db	61	;'='
   232   000E16  25                 	db	37
   233   000E17  64                 	db	100	;'d'
   234   000E18  20                 	db	32
   235   000E19  74                 	db	116	;'t'
   236   000E1A  69                 	db	105	;'i'
   237   000E1B  6D                 	db	109	;'m'
   238   000E1C  65                 	db	101	;'e'
   239   000E1D  72                 	db	114	;'r'
   240   000E1E  3D                 	db	61	;'='
   241   000E1F  25                 	db	37
   242   000E20  64                 	db	100	;'d'
   243   000E21  20                 	db	32
   244   000E22  0D                 	db	13
   245   000E23  0A                 	db	10
   246   000E24  00                 	db	0
   247   000E25  00                 	db	0	; dummy byte at the end
   248   000000                     
   249                           ; #config settings
   250                           
   251                           	psect	cinit
   252   0041D2                     __pcinit:
   253                           	callstack 0
   254   0041D2                     start_initialization:
   255                           	callstack 0
   256   0041D2                     __initialization:
   257                           	callstack 0
   258                           
   259                           ; Initialize objects allocated to BANK1 (8 bytes)
   260                           ; load TBLPTR registers with __pidataBANK1
   261   0041D2  0E42               	movlw	low __pidataBANK1
   262   0041D4  6EF6               	movwf	tblptrl,c
   263   0041D6  0E4C               	movlw	high __pidataBANK1
   264   0041D8  6EF7               	movwf	tblptrh,c
   265   0041DA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   266   0041DC  6EF8               	movwf	tblptru,c
   267   0041DE  EE01  F0CF         	lfsr	0,__pdataBANK1
   268   0041E2  EE10 F008          	lfsr	1,8
   269   0041E6                     copy_data0:
   270   0041E6  0009               	tblrd		*+
   271   0041E8  CFF5 FFEE          	movff	tablat,postinc0
   272   0041EC  50E5               	movf	postdec1,w,c
   273   0041EE  50E1               	movf	fsr1l,w,c
   274   0041F0  E1FA               	bnz	copy_data0
   275                           
   276                           ; Initialize objects allocated to BANK0 (1 bytes)
   277                           ; load TBLPTR registers with __pidataBANK0
   278   0041F2  0E4E               	movlw	low __pidataBANK0
   279   0041F4  6EF6               	movwf	tblptrl,c
   280   0041F6  0E4C               	movlw	high __pidataBANK0
   281   0041F8  6EF7               	movwf	tblptrh,c
   282   0041FA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   283   0041FC  6EF8               	movwf	tblptru,c
   284   0041FE  0009               	tblrd		*+	;fetch initializer
   285   004200  CFF5 F0FE          	movff	tablat,__pdataBANK0
   286                           
   287                           ; Clear objects allocated to BANK2 (100 bytes)
   288   004204  EE02  F000         	lfsr	0,__pbssBANK2
   289   004208  0E64               	movlw	100
   290   00420A                     clear_0:
   291   00420A  6AEE               	clrf	postinc0,c
   292   00420C  06E8               	decf	wreg,f,c
   293   00420E  E1FD               	bnz	clear_0
   294                           
   295                           ; Clear objects allocated to BANK1 (207 bytes)
   296   004210  EE01  F000         	lfsr	0,__pbssBANK1
   297   004214  0ECF               	movlw	207
   298   004216                     clear_1:
   299   004216  6AEE               	clrf	postinc0,c
   300   004218  06E8               	decf	wreg,f,c
   301   00421A  E1FD               	bnz	clear_1
   302                           
   303                           ; Clear objects allocated to BANK0 (14 bytes)
   304   00421C  EE00  F0F0         	lfsr	0,__pbssBANK0
   305   004220  0E0E               	movlw	14
   306   004222                     clear_2:
   307   004222  6AEE               	clrf	postinc0,c
   308   004224  06E8               	decf	wreg,f,c
   309   004226  E1FD               	bnz	clear_2
   310                           
   311                           ; Clear objects allocated to COMRAM (4 bytes)
   312   004228  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   313   00422A  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   314   00422C  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   315   00422E  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   316   004230                     end_of_initialization:
   317                           	callstack 0
   318   004230                     __end_of__initialization:
   319                           	callstack 0
   320   004230  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321   004232  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322   004234  0E00               	movlw	low (__Lsmallconst shr (0+16))
   323   004236  6EF8               	movwf	tblptru,c
   324   004238  0E0E               	movlw	high __Lsmallconst
   325   00423A  6EF7               	movwf	tblptrh,c
   326   00423C  0100               	movlb	0
   327   00423E  EF81  F00C         	goto	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMRAM
   330   00005B                     __pbssCOMRAM:
   331                           	callstack 0
   332   00005B                     _TxBufReadCnt:
   333                           	callstack 0
   334   00005B                     	ds	1
   335   00005C                     _TxBufWriteCnt:
   336                           	callstack 0
   337   00005C                     	ds	1
   338   00005D                     _RxBufReadCnt:
   339                           	callstack 0
   340   00005D                     	ds	1
   341   00005E                     _RxBufWriteCnt:
   342                           	callstack 0
   343   00005E                     	ds	1
   344                           
   345                           	psect	bssBANK0
   346   0000F0                     __pbssBANK0:
   347                           	callstack 0
   348   0000F0                     _prec:
   349                           	callstack 0
   350   0000F0                     	ds	2
   351   0000F2                     _move_count:
   352                           	callstack 0
   353   0000F2                     	ds	2
   354   0000F4                     _flags:
   355                           	callstack 0
   356   0000F4                     	ds	1
   357   0000F5                     _motorL:
   358                           	callstack 0
   359   0000F5                     	ds	9
   360                           
   361                           	psect	dataBANK0
   362   0000FE                     __pdataBANK0:
   363                           	callstack 0
   364   0000FE                     _DataFlag:
   365                           	callstack 0
   366   0000FE                     	ds	1
   367                           
   368                           	psect	bssBANK1
   369   000100                     __pbssBANK1:
   370                           	callstack 0
   371   000100                     _EUSART4TXbuf:
   372                           	callstack 0
   373   000100                     	ds	60
   374   00013C                     _EUSART4RXbuf:
   375                           	callstack 0
   376   00013C                     	ds	20
   377   000150                     	ds	12
   378   00015C                     _width:
   379                           	callstack 0
   380   00015C                     	ds	2
   381   00015E                     _low_threshold:
   382                           	callstack 0
   383   00015E                     	ds	2
   384   000160                     _WayBack:
   385                           	callstack 0
   386   000160                     	ds	50
   387   000192                     _dbuf:
   388                           	callstack 0
   389   000192                     	ds	32
   390   0001B2                     _rel:
   391                           	callstack 0
   392   0001B2                     	ds	12
   393   0001BE                     _motorR:
   394                           	callstack 0
   395   0001BE                     	ds	9
   396   0001C7                     _vals:
   397                           	callstack 0
   398   0001C7                     	ds	8
   399                           
   400                           	psect	dataBANK1
   401   0001CF                     __pdataBANK1:
   402                           	callstack 0
   403   0001CF                     _high_threshold:
   404                           	callstack 0
   405   0001CF                     	ds	2
   406   0001D1                     _RunOneBlockTime:
   407                           	callstack 0
   408   0001D1                     	ds	2
   409   0001D3                     _Turn45Delay:
   410                           	callstack 0
   411   0001D3                     	ds	2
   412   0001D5                     _power:
   413                           	callstack 0
   414   0001D5                     	ds	2
   415                           
   416                           	psect	bssBANK2
   417   000200                     __pbssBANK2:
   418                           	callstack 0
   419   000200                     _Time_forward:
   420                           	callstack 0
   421   000200                     	ds	100
   422                           
   423                           	psect	cstackBANK0
   424   000060                     __pcstackBANK0:
   425                           	callstack 0
   426   000060                     ?_sprintf:
   427                           	callstack 0
   428   000060                     sprintf@s:
   429                           	callstack 0
   430   000060                     _Colour_decider$2837:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x0
   434   000060                     	ds	2
   435   000062                     sprintf@fmt:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x2
   439   000062                     	ds	2
   440   000064                     Colour_decider@Cmax_i:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x4
   444   000064                     	ds	2
   445   000066                     Colour_decider@RGB_col:
   446                           	callstack 0
   447                           
   448                           ; 12 bytes @ 0x6
   449   000066                     	ds	6
   450   00006C                     sprintf@ap:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0xC
   454   00006C                     	ds	2
   455   00006E                     sprintf@f:
   456                           	callstack 0
   457                           
   458                           ; 11 bytes @ 0xE
   459   00006E                     	ds	4
   460   000072                     Colour_decider@Cmax:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x12
   464   000072                     	ds	4
   465   000076                     Colour_decider@Cmin:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x16
   469   000076                     	ds	4
   470   00007A                     Colour_decider@i:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x1A
   474   00007A                     	ds	2
   475   00007C                     Colour_decider@Hue:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x1C
   479   00007C                     	ds	4
   480   000080                     main@buf:
   481                           	callstack 0
   482                           
   483                           ; 100 bytes @ 0x20
   484   000080                     	ds	100
   485   0000E4                     main@temp:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x84
   489   0000E4                     	ds	2
   490   0000E6                     main@temp_1191:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x86
   494   0000E6                     	ds	2
   495   0000E8                     main@run_flag:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x88
   499   0000E8                     	ds	2
   500   0000EA                     main@consecuitive:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x8A
   504   0000EA                     	ds	2
   505   0000EC                     main@colour:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x8C
   509   0000EC                     	ds	2
   510   0000EE                     main@prev_colour:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x8E
   514   0000EE                     	ds	2
   515                           
   516                           	psect	cstackCOMRAM
   517   000001                     __pcstackCOMRAM:
   518                           	callstack 0
   519   000001                     ??_I2C_2_Master_Idle:
   520   000001                     ?___wmul:
   521                           	callstack 0
   522   000001                     ?___fladd:
   523                           	callstack 0
   524   000001                     ?___xxtofl:
   525                           	callstack 0
   526   000001                     ?___aodiv:
   527                           	callstack 0
   528   000001                     ?___aomod:
   529                           	callstack 0
   530   000001                     sendCharSerial4@charToSend:
   531                           	callstack 0
   532   000001                     initDCmotorsPWM@PWMperiod:
   533                           	callstack 0
   534   000001                     getTMR0val@moving:
   535                           	callstack 0
   536   000001                     delayed_ms@time:
   537                           	callstack 0
   538   000001                     ___wmul@multiplier:
   539                           	callstack 0
   540   000001                     fputc@c:
   541                           	callstack 0
   542   000001                     ___flge@ff1:
   543                           	callstack 0
   544   000001                     ___fladd@b:
   545                           	callstack 0
   546   000001                     ___xxtofl@val:
   547                           	callstack 0
   548   000001                     ___aodiv@dividend:
   549                           	callstack 0
   550   000001                     ___aomod@dividend:
   551                           	callstack 0
   552                           
   553                           ; 8 bytes @ 0x0
   554   000001                     	ds	1
   555   000002                     ??_I2C_2_Master_Read:
   556   000002                     I2C_2_Master_Write@data_byte:
   557                           	callstack 0
   558   000002                     sendStringSerial4@string:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1
   562   000002                     	ds	1
   563   000003                     ??_delayed_ms:
   564   000003                     color_writetoaddr@value:
   565                           	callstack 0
   566   000003                     I2C_2_Master_Read@ack:
   567                           	callstack 0
   568   000003                     ___wmul@multiplicand:
   569                           	callstack 0
   570   000003                     fputc@fp:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x2
   574   000003                     	ds	1
   575   000004                     color_writetoaddr@address:
   576                           	callstack 0
   577   000004                     I2C_2_Master_Read@tmp:
   578                           	callstack 0
   579   000004                     delayed_ms@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x3
   583   000004                     	ds	1
   584   000005                     ??_fputc:
   585   000005                     ??_color_click_init:
   586   000005                     ??___xxtofl:
   587   000005                     ?_color_read_lum:
   588                           	callstack 0
   589   000005                     ?_color_read_Red:
   590                           	callstack 0
   591   000005                     ?_color_read_Green:
   592                           	callstack 0
   593   000005                     ?_color_read_Blue:
   594                           	callstack 0
   595   000005                     ___wmul@product:
   596                           	callstack 0
   597   000005                     ___flge@ff2:
   598                           	callstack 0
   599   000005                     ___fladd@a:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x4
   603   000005                     	ds	2
   604   000007                     ??_color_read_lum:
   605   000007                     ??_color_read_Red:
   606   000007                     ??_color_read_Green:
   607   000007                     ??_color_read_Blue:
   608   000007                     ?___lwdiv:
   609                           	callstack 0
   610   000007                     ___lwdiv@dividend:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x6
   614   000007                     	ds	2
   615   000009                     ??___fladd:
   616   000009                     ??___flge:
   617   000009                     ___xxtofl@sign:
   618                           	callstack 0
   619   000009                     ___lwdiv@divisor:
   620                           	callstack 0
   621   000009                     ___aodiv@divisor:
   622                           	callstack 0
   623   000009                     ___aomod@divisor:
   624                           	callstack 0
   625                           
   626                           ; 8 bytes @ 0x8
   627   000009                     	ds	1
   628   00000A                     ___xxtofl@exp:
   629                           	callstack 0
   630   00000A                     color_read_lum@tmp:
   631                           	callstack 0
   632   00000A                     color_read_Red@tmp:
   633                           	callstack 0
   634   00000A                     color_read_Green@tmp:
   635                           	callstack 0
   636   00000A                     color_read_Blue@tmp:
   637                           	callstack 0
   638   00000A                     fputs@s:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x9
   642   00000A                     	ds	1
   643   00000B                     ___lwdiv@quotient:
   644                           	callstack 0
   645   00000B                     ___xxtofl@arg:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0xA
   649   00000B                     	ds	1
   650   00000C                     readColours@vals:
   651                           	callstack 0
   652   00000C                     fputs@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0xB
   656   00000C                     	ds	1
   657   00000D                     ___lwdiv@counter:
   658                           	callstack 0
   659   00000D                     ___fladd@signs:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0xC
   663   00000D                     	ds	1
   664   00000E                     ___fladd@aexp:
   665                           	callstack 0
   666   00000E                     fputs@c:
   667                           	callstack 0
   668   00000E                     setMotorPWM@m:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0xD
   672   00000E                     	ds	1
   673   00000F                     ___fladd@bexp:
   674                           	callstack 0
   675   00000F                     fputs@i:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0xE
   679   00000F                     	ds	1
   680   000010                     ??_setMotorPWM:
   681   000010                     ___fladd@grs:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0xF
   685   000010                     	ds	1
   686   000011                     ?___flsub:
   687                           	callstack 0
   688   000011                     ___aodiv@counter:
   689                           	callstack 0
   690   000011                     ___aomod@counter:
   691                           	callstack 0
   692   000011                     pad@fp:
   693                           	callstack 0
   694   000011                     ___flsub@b:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x10
   698   000011                     	ds	1
   699   000012                     setMotorPWM@posDuty:
   700                           	callstack 0
   701   000012                     ___aodiv@sign:
   702                           	callstack 0
   703   000012                     ___aomod@sign:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x11
   707   000012                     	ds	1
   708   000013                     ?_abs:
   709                           	callstack 0
   710   000013                     setMotorPWM@negDuty:
   711                           	callstack 0
   712   000013                     pad@buf:
   713                           	callstack 0
   714   000013                     abs@a:
   715                           	callstack 0
   716   000013                     ___aodiv@quotient:
   717                           	callstack 0
   718                           
   719                           ; 8 bytes @ 0x12
   720   000013                     	ds	1
   721   000014                     stop@mL:
   722                           	callstack 0
   723   000014                     turnLeft@mL:
   724                           	callstack 0
   725   000014                     turnRight@mL:
   726                           	callstack 0
   727   000014                     fullSpeedAhead@mL:
   728                           	callstack 0
   729   000014                     timed_forward@mL:
   730                           	callstack 0
   731   000014                     fullSpeedBack@mL:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x13
   735   000014                     	ds	1
   736   000015                     ??_abs:
   737   000015                     pad@p:
   738                           	callstack 0
   739   000015                     ___flsub@a:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x14
   743   000015                     	ds	1
   744   000016                     stop@mR:
   745                           	callstack 0
   746   000016                     turnLeft@mR:
   747                           	callstack 0
   748   000016                     turnRight@mR:
   749                           	callstack 0
   750   000016                     fullSpeedAhead@mR:
   751                           	callstack 0
   752   000016                     timed_forward@mR:
   753                           	callstack 0
   754   000016                     fullSpeedBack@mR:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x15
   758   000016                     	ds	1
   759   000017                     ??_pad:
   760                           
   761                           ; 1 bytes @ 0x16
   762   000017                     	ds	1
   763   000018                     ??_fullSpeedAhead:
   764   000018                     ??_stop:
   765   000018                     ??_turnLeft:
   766   000018                     ??_turnRight:
   767   000018                     ??_fullSpeedBack:
   768   000018                     timed_forward@time:
   769                           	callstack 0
   770   000018                     pad@i:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x17
   774   000018                     	ds	1
   775   000019                     ?___fldiv:
   776                           	callstack 0
   777   000019                     ___fleq@ff1:
   778                           	callstack 0
   779   000019                     ___fldiv@b:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x18
   783   000019                     	ds	1
   784   00001A                     ??_timed_forward:
   785   00001A                     turnRight45@mL:
   786                           	callstack 0
   787   00001A                     turnLeft45@mL:
   788                           	callstack 0
   789   00001A                     reverseDetect@mL:
   790                           	callstack 0
   791   00001A                     reverseOneBlock@mL:
   792                           	callstack 0
   793   00001A                     ForwardOneBlock@mL:
   794                           	callstack 0
   795   00001A                     Forwardhalfblock@mL:
   796                           	callstack 0
   797   00001A                     RetryMove@mL:
   798                           	callstack 0
   799   00001A                     pad@w:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x19
   803   00001A                     	ds	2
   804   00001C                     turnRight45@mR:
   805                           	callstack 0
   806   00001C                     turnLeft45@mR:
   807                           	callstack 0
   808   00001C                     reverseDetect@mR:
   809                           	callstack 0
   810   00001C                     reverseOneBlock@mR:
   811                           	callstack 0
   812   00001C                     ForwardOneBlock@mR:
   813                           	callstack 0
   814   00001C                     Forwardhalfblock@mR:
   815                           	callstack 0
   816   00001C                     RetryMove@mR:
   817                           	callstack 0
   818   00001C                     dtoa@fp:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1B
   822   00001C                     	ds	1
   823   00001D                     ___fleq@ff2:
   824                           	callstack 0
   825   00001D                     ___fldiv@a:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x1C
   829   00001D                     	ds	1
   830   00001E                     ??_Forwardhalfblock:
   831   00001E                     ??_RetryMove:
   832   00001E                     ??_turnRight45:
   833   00001E                     ??_turnLeft45:
   834   00001E                     ??_reverseDetect:
   835   00001E                     ??_reverseOneBlock:
   836   00001E                     ??_ForwardOneBlock:
   837   00001E                     dtoa@d:
   838                           	callstack 0
   839                           
   840                           ; 8 bytes @ 0x1D
   841   00001E                     	ds	2
   842   000020                     RedMove@mL:
   843                           	callstack 0
   844   000020                     GreenMove@mL:
   845                           	callstack 0
   846   000020                     BlueMove@mL:
   847                           	callstack 0
   848   000020                     YellowMove@mL:
   849                           	callstack 0
   850   000020                     PinkMove@mL:
   851                           	callstack 0
   852   000020                     OrangeMove@mL:
   853                           	callstack 0
   854   000020                     LightBlueMove@mL:
   855                           	callstack 0
   856   000020                     ReverseYellow@mL:
   857                           	callstack 0
   858   000020                     ReversePink@mL:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1F
   862   000020                     	ds	1
   863   000021                     ??___fldiv:
   864   000021                     ??___fleq:
   865                           
   866                           ; 1 bytes @ 0x20
   867   000021                     	ds	1
   868   000022                     RedMove@mR:
   869                           	callstack 0
   870   000022                     GreenMove@mR:
   871                           	callstack 0
   872   000022                     BlueMove@mR:
   873                           	callstack 0
   874   000022                     YellowMove@mR:
   875                           	callstack 0
   876   000022                     PinkMove@mR:
   877                           	callstack 0
   878   000022                     OrangeMove@mR:
   879                           	callstack 0
   880   000022                     LightBlueMove@mR:
   881                           	callstack 0
   882   000022                     ReverseYellow@mR:
   883                           	callstack 0
   884   000022                     ReversePink@mR:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x21
   888   000022                     	ds	2
   889   000024                     go_Home@WayBack:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x23
   893   000024                     	ds	1
   894   000025                     ___fldiv@rem:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x24
   898   000025                     	ds	1
   899   000026                     ??_dtoa:
   900   000026                     go_Home@Time_forward:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x25
   904   000026                     	ds	2
   905   000028                     ??_go_Home:
   906                           
   907                           ; 1 bytes @ 0x27
   908   000028                     	ds	1
   909   000029                     ___fldiv@sign:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x28
   913   000029                     	ds	1
   914   00002A                     ___fldiv@new_exp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x29
   918   00002A                     	ds	1
   919   00002B                     go_Home@i:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2A
   923   00002B                     	ds	1
   924   00002C                     ___fldiv@grs:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x2B
   928   00002C                     	ds	2
   929   00002E                     _dtoa$2513:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x2D
   933   00002E                     	ds	2
   934   000030                     ___fldiv@bexp:
   935                           	callstack 0
   936   000030                     dtoa@p:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x2F
   940   000030                     	ds	1
   941   000031                     ___fldiv@aexp:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x30
   945   000031                     	ds	1
   946   000032                     ?___flmul:
   947                           	callstack 0
   948   000032                     colour_rel@vals:
   949                           	callstack 0
   950   000032                     dtoa@w:
   951                           	callstack 0
   952   000032                     ___flmul@b:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x31
   956   000032                     	ds	2
   957   000034                     colour_rel@rel:
   958                           	callstack 0
   959   000034                     dtoa@n:
   960                           	callstack 0
   961                           
   962                           ; 8 bytes @ 0x33
   963   000034                     	ds	2
   964   000036                     colour_rel@L:
   965                           	callstack 0
   966   000036                     ___flmul@a:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x35
   970   000036                     	ds	4
   971   00003A                     ??___flmul:
   972   00003A                     _colour_rel$2835:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x39
   976   00003A                     	ds	2
   977   00003C                     dtoa@i:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3B
   981   00003C                     	ds	2
   982   00003E                     ___flmul@sign:
   983                           	callstack 0
   984   00003E                     dtoa@s:
   985                           	callstack 0
   986   00003E                     _colour_rel$2836:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x3D
   990   00003E                     	ds	1
   991   00003F                     vfpfcnvrt@fp:
   992                           	callstack 0
   993   00003F                     ___flmul@grs:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x3E
   997   00003F                     	ds	2
   998   000041                     vfpfcnvrt@fmt:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x40
  1002   000041                     	ds	1
  1003   000042                     colour_rel@R:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x41
  1007   000042                     	ds	1
  1008   000043                     ___flmul@aexp:
  1009                           	callstack 0
  1010   000043                     vfpfcnvrt@ap:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x42
  1014   000043                     	ds	1
  1015   000044                     ___flmul@bexp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x43
  1019   000044                     	ds	1
  1020   000045                     ??_vfpfcnvrt:
  1021   000045                     ___flmul@prod:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x44
  1025   000045                     	ds	1
  1026   000046                     colour_rel@G:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x45
  1030   000046                     	ds	1
  1031   000047                     vfpfcnvrt@convarg:
  1032                           	callstack 0
  1033                           
  1034                           ; 8 bytes @ 0x46
  1035   000047                     	ds	2
  1036   000049                     ___flmul@temp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x48
  1040   000049                     	ds	1
  1041   00004A                     colour_rel@B:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x49
  1045   00004A                     	ds	1
  1046   00004B                     ?_Colour_decider:
  1047                           	callstack 0
  1048   00004B                     Colour_decider@vals:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x4A
  1052   00004B                     	ds	2
  1053   00004D                     Colour_decider@rel:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x4C
  1057   00004D                     	ds	2
  1058   00004F                     ??_Colour_decider:
  1059   00004F                     vfpfcnvrt@cp:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x4E
  1063   00004F                     	ds	2
  1064   000051                     ?_vfprintf:
  1065                           	callstack 0
  1066   000051                     vfprintf@fp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x50
  1070   000051                     	ds	2
  1071   000053                     vfprintf@fmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x52
  1075   000053                     	ds	2
  1076   000055                     vfprintf@ap:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x54
  1080   000055                     	ds	2
  1081   000057                     vfprintf@cfmt:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x56
  1085   000057                     	ds	2
  1086   000059                     ??_main:
  1087                           
  1088                           ; 1 bytes @ 0x58
  1089   000059                     	ds	2
  1090                           
  1091 ;;
  1092 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1093 ;;
  1094 ;; *************** function _main *****************
  1095 ;; Defined at:
  1096 ;;		line 30 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  colour          2  140[BANK0 ] int 
  1101 ;;  temp            2  134[BANK0 ] int 
  1102 ;;  temp            2  132[BANK0 ] int 
  1103 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1104 ;;  prev_colour     2  142[BANK0 ] int 
  1105 ;;  consecuitive    2  138[BANK0 ] int 
  1106 ;;  run_flag        2  136[BANK0 ] int 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1117 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1119 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1120 ;;Total ram usage:      114 bytes
  1121 ;; Hardware stack levels required when called: 9
  1122 ;; This function calls:
  1123 ;;		_BlueMove
  1124 ;;		_Colour_decider
  1125 ;;		_Forwardhalfblock
  1126 ;;		_GreenMove
  1127 ;;		_I2C_2_Master_Init
  1128 ;;		_Interrupts_init
  1129 ;;		_LightBlueMove
  1130 ;;		_OrangeMove
  1131 ;;		_PinkMove
  1132 ;;		_RedMove
  1133 ;;		_RetryMove
  1134 ;;		_Timer0_init
  1135 ;;		_YellowMove
  1136 ;;		_color_click_init
  1137 ;;		_colour_rel
  1138 ;;		_fullSpeedAhead
  1139 ;;		_getTMR0val
  1140 ;;		_go_Home
  1141 ;;		_initDCmotorsPWM
  1142 ;;		_initUSART4
  1143 ;;		_readColours
  1144 ;;		_sendStringSerial4
  1145 ;;		_sprintf
  1146 ;;		_stop
  1147 ;; This function is called by:
  1148 ;;		Startup code after reset
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text0
  1153   001902                     __ptext0:
  1154                           	callstack 0
  1155   001902                     _main:
  1156                           	callstack 22
  1157   001902                     
  1158                           ;main.c: 31:     initUSART4();
  1159   001902  ECF1  F025         	call	_initUSART4	;wreg free
  1160   001906                     
  1161                           ;main.c: 32:     Interrupts_init();
  1162   001906  EC26  F026         	call	_Interrupts_init	;wreg free
  1163   00190A                     
  1164                           ;main.c: 33:     color_click_init();
  1165   00190A  EC0A  F023         	call	_color_click_init	;wreg free
  1166   00190E                     
  1167                           ;main.c: 34:     I2C_2_Master_Init();
  1168   00190E  EC82  F025         	call	_I2C_2_Master_Init	;wreg free
  1169   001912                     
  1170                           ;main.c: 35:     Timer0_init();
  1171   001912  ECE1  F025         	call	_Timer0_init	;wreg free
  1172   001916                     
  1173                           ;main.c: 36:     initDCmotorsPWM(200);
  1174   001916  0E00               	movlw	0
  1175   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1176   00191A  0EC8               	movlw	200
  1177   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1178   00191E  ECAE  F01F         	call	_initDCmotorsPWM	;wreg free
  1179   001922                     
  1180                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1181   001922  9287               	bcf	135,1,c	;volatile
  1182   001924                     
  1183                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1184   001924  9881               	bcf	129,4,c	;volatile
  1185   001926                     
  1186                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1187   001926  9E86               	bcf	134,7,c	;volatile
  1188   001928                     
  1189                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1190   001928  8486               	bsf	134,2,c	;volatile
  1191   00192A                     
  1192                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1193   00192A  010E               	movlb	14	; () banked
  1194   00192C  95B4               	bcf	180,2,b	;volatile
  1195   00192E                     
  1196                           ; BSR set to: 14
  1197                           ;main.c: 43:     LATGbits.LATG1=1;
  1198   00192E  827F               	bsf	127,1,c	;volatile
  1199   001930                     
  1200                           ; BSR set to: 14
  1201                           ;main.c: 44:     LATAbits.LATA4=1;
  1202   001930  8879               	bsf	121,4,c	;volatile
  1203   001932                     
  1204                           ; BSR set to: 14
  1205                           ;main.c: 45:     LATFbits.LATF7=1;
  1206   001932  8E7E               	bsf	126,7,c	;volatile
  1207   001934                     
  1208                           ; BSR set to: 14
  1209                           ;main.c: 49:     motorL.power=0;
  1210   001934  0E00               	movlw	0
  1211   001936  0100               	movlb	0	; () banked
  1212   001938  6FF5               	movwf	_motorL& (0+255),b
  1213   00193A                     
  1214                           ; BSR set to: 0
  1215                           ;main.c: 50:     motorL.direction=1;
  1216   00193A  0E01               	movlw	1
  1217   00193C  6FF6               	movwf	(_motorL+1)& (0+255),b
  1218   00193E                     
  1219                           ; BSR set to: 0
  1220                           ;main.c: 51:     motorL.brakemode=1;
  1221   00193E  0E01               	movlw	1
  1222   001940  6FF7               	movwf	(_motorL+2)& (0+255),b
  1223   001942                     
  1224                           ; BSR set to: 0
  1225                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1226   001942  0EAA               	movlw	170
  1227   001944  6FFA               	movwf	(_motorL+5)& (0+255),b
  1228   001946  0E0F               	movlw	15
  1229   001948  6FFB               	movwf	(_motorL+6)& (0+255),b
  1230   00194A                     
  1231                           ; BSR set to: 0
  1232                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1233   00194A  0EA6               	movlw	166
  1234   00194C  6FFC               	movwf	(_motorL+7)& (0+255),b
  1235   00194E  0E0F               	movlw	15
  1236   001950  6FFD               	movwf	(_motorL+8)& (0+255),b
  1237   001952                     
  1238                           ; BSR set to: 0
  1239                           ;main.c: 54:     motorL.PWMperiod=200;
  1240   001952  0E00               	movlw	0
  1241   001954  6FF9               	movwf	(_motorL+4)& (0+255),b
  1242   001956  0EC8               	movlw	200
  1243   001958  6FF8               	movwf	(_motorL+3)& (0+255),b
  1244   00195A                     
  1245                           ; BSR set to: 0
  1246                           ;main.c: 55:     motorR.power=0;
  1247   00195A  0E00               	movlw	0
  1248   00195C  0101               	movlb	1	; () banked
  1249   00195E  6FBE               	movwf	_motorR& (0+255),b
  1250   001960                     
  1251                           ; BSR set to: 1
  1252                           ;main.c: 56:     motorR.direction=1;
  1253   001960  0E01               	movlw	1
  1254   001962  6FBF               	movwf	(_motorR+1)& (0+255),b
  1255   001964                     
  1256                           ; BSR set to: 1
  1257                           ;main.c: 57:     motorR.brakemode=1;
  1258   001964  0E01               	movlw	1
  1259   001966  6FC0               	movwf	(_motorR+2)& (0+255),b
  1260   001968                     
  1261                           ; BSR set to: 1
  1262                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1263   001968  0E25               	movlw	37
  1264   00196A  6FC3               	movwf	(_motorR+5)& (0+255),b
  1265   00196C  0E0F               	movlw	15
  1266   00196E  6FC4               	movwf	(_motorR+6)& (0+255),b
  1267   001970                     
  1268                           ; BSR set to: 1
  1269                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1270   001970  0E21               	movlw	33
  1271   001972  6FC5               	movwf	(_motorR+7)& (0+255),b
  1272   001974  0E0F               	movlw	15
  1273   001976  6FC6               	movwf	(_motorR+8)& (0+255),b
  1274   001978                     
  1275                           ; BSR set to: 1
  1276                           ;main.c: 60:     motorR.PWMperiod=200;
  1277   001978  0E00               	movlw	0
  1278   00197A  6FC2               	movwf	(_motorR+4)& (0+255),b
  1279   00197C  0EC8               	movlw	200
  1280   00197E  6FC1               	movwf	(_motorR+3)& (0+255),b
  1281   001980                     
  1282                           ; BSR set to: 1
  1283                           ;main.c: 61:     int consecuitive=0;
  1284   001980  0E00               	movlw	0
  1285   001982  0100               	movlb	0	; () banked
  1286   001984  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1287   001986  0E00               	movlw	0
  1288   001988  6FEA               	movwf	main@consecuitive& (0+255),b
  1289   00198A                     
  1290                           ; BSR set to: 0
  1291                           ;main.c: 62:     int prev_colour =0;
  1292   00198A  0E00               	movlw	0
  1293   00198C  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1294   00198E  0E00               	movlw	0
  1295   001990  6FEE               	movwf	main@prev_colour& (0+255),b
  1296   001992                     
  1297                           ; BSR set to: 0
  1298                           ;main.c: 63:     int run_flag=1;
  1299   001992  0E00               	movlw	0
  1300   001994  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1301   001996  0E01               	movlw	1
  1302   001998  6FE8               	movwf	main@run_flag& (0+255),b
  1303   00199A                     
  1304                           ; BSR set to: 0
  1305                           ;main.c: 64:     move_count=-1;
  1306   00199A  69F2               	setf	_move_count& (0+255),b	;volatile
  1307   00199C  69F3               	setf	(_move_count+1)& (0+255),b	;volatile
  1308   00199E                     l400:
  1309   00199E  B48E               	btfsc	142,2,c	;volatile
  1310   0019A0  EFD4  F00C         	goto	u4431
  1311   0019A4  EFD6  F00C         	goto	u4430
  1312   0019A8                     u4431:
  1313   0019A8  EFCF  F00C         	goto	l400
  1314   0019AC                     u4430:
  1315   0019AC                     
  1316                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1317   0019AC  0E52               	movlw	82
  1318   0019AE  6E5A               	movwf	(??_main+1)^0,c
  1319   0019B0  0E2B               	movlw	43
  1320   0019B2  6E59               	movwf	??_main^0,c
  1321   0019B4  0E00               	movlw	0
  1322   0019B6                     u4707:
  1323   0019B6  2EE8               	decfsz	wreg,f,c
  1324   0019B8  D7FE               	bra	u4707
  1325   0019BA  2E59               	decfsz	??_main^0,f,c
  1326   0019BC  D7FC               	bra	u4707
  1327   0019BE  2E5A               	decfsz	(??_main+1)^0,f,c
  1328   0019C0  D7FA               	bra	u4707
  1329   0019C2  D000               	nop2	
  1330   0019C4                     
  1331                           ;main.c: 67:     TMR0H=0;
  1332   0019C4  0E00               	movlw	0
  1333   0019C6  6ED4               	movwf	212,c	;volatile
  1334   0019C8                     
  1335                           ;main.c: 68:     TMR0L=0;
  1336   0019C8  0E00               	movlw	0
  1337   0019CA  6ED3               	movwf	211,c	;volatile
  1338                           
  1339                           ;main.c: 69:     while (run_flag)
  1340   0019CC  EFFF  F00E         	goto	l4836
  1341   0019D0                     l4710:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;main.c: 70:     {;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1345   0019D0  0EF5               	movlw	low _motorL
  1346   0019D2  6E14               	movwf	fullSpeedAhead@mL^0,c
  1347   0019D4  0E00               	movlw	high _motorL
  1348   0019D6  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1349   0019D8  0EBE               	movlw	low _motorR
  1350   0019DA  6E16               	movwf	fullSpeedAhead@mR^0,c
  1351   0019DC  0E01               	movlw	high _motorR
  1352   0019DE  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1353   0019E0  EC5F  F01F         	call	_fullSpeedAhead	;wreg free
  1354   0019E4                     
  1355                           ;main.c: 77:         readColours(&vals);
  1356   0019E4  0EC7               	movlw	low _vals
  1357   0019E6  6E0C               	movwf	readColours@vals^0,c
  1358   0019E8  0E01               	movlw	high _vals
  1359   0019EA  6E0D               	movwf	(readColours@vals+1)^0,c
  1360   0019EC  EC54  F021         	call	_readColours	;wreg free
  1361   0019F0                     
  1362                           ;main.c: 80:         colour_rel(&vals, &rel);
  1363   0019F0  0EC7               	movlw	low _vals
  1364   0019F2  6E32               	movwf	colour_rel@vals^0,c
  1365   0019F4  0E01               	movlw	high _vals
  1366   0019F6  6E33               	movwf	(colour_rel@vals+1)^0,c
  1367   0019F8  0EB2               	movlw	low _rel
  1368   0019FA  6E34               	movwf	colour_rel@rel^0,c
  1369   0019FC  0E01               	movlw	high _rel
  1370   0019FE  6E35               	movwf	(colour_rel@rel+1)^0,c
  1371   001A00  EC4D  F015         	call	_colour_rel	;wreg free
  1372   001A04                     
  1373                           ;main.c: 83:         if (vals.L>=500){
  1374   001A04  0101               	movlb	1	; () banked
  1375   001A06  BFCE               	btfsc	(_vals+7)& (0+255),7,b
  1376   001A08  EF0F  F00D         	goto	u4441
  1377   001A0C  0EF4               	movlw	244
  1378   001A0E  5DCD               	subwf	(_vals+6)& (0+255),w,b
  1379   001A10  0E01               	movlw	1
  1380   001A12  59CE               	subwfb	(_vals+7)& (0+255),w,b
  1381   001A14  A0D8               	btfss	status,0,c
  1382   001A16  EF0F  F00D         	goto	u4441
  1383   001A1A  EF11  F00D         	goto	u4440
  1384   001A1E                     u4441:
  1385   001A1E  EFDC  F00E         	goto	l405
  1386   001A22                     u4440:
  1387   001A22                     
  1388                           ; BSR set to: 1
  1389                           ;main.c: 84:             move_count++;
  1390   001A22  0100               	movlb	0	; () banked
  1391   001A24  4BF2               	infsnz	_move_count& (0+255),f,b	;volatile
  1392   001A26  2BF3               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1393   001A28                     
  1394                           ; BSR set to: 0
  1395                           ;main.c: 85:             getTMR0val();
  1396   001A28  ECAB  F025         	call	_getTMR0val	;wreg free
  1397   001A2C                     
  1398                           ;main.c: 87:             Forwardhalfblock(&motorL,&motorR);
  1399   001A2C  0EF5               	movlw	low _motorL
  1400   001A2E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1401   001A30  0E00               	movlw	high _motorL
  1402   001A32  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1403   001A34  0EBE               	movlw	low _motorR
  1404   001A36  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1405   001A38  0E01               	movlw	high _motorR
  1406   001A3A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1407   001A3C  EC0A  F022         	call	_Forwardhalfblock	;wreg free
  1408   001A40                     
  1409                           ;main.c: 89:             stop(&motorL, &motorR);
  1410   001A40  0EF5               	movlw	low _motorL
  1411   001A42  6E14               	movwf	stop@mL^0,c
  1412   001A44  0E00               	movlw	high _motorL
  1413   001A46  6E15               	movwf	(stop@mL+1)^0,c
  1414   001A48  0EBE               	movlw	low _motorR
  1415   001A4A  6E16               	movwf	stop@mR^0,c
  1416   001A4C  0E01               	movlw	high _motorR
  1417   001A4E  6E17               	movwf	(stop@mR+1)^0,c
  1418   001A50  EC33  F020         	call	_stop	;wreg free
  1419   001A54                     
  1420                           ;main.c: 90:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1421   001A54  0E11               	movlw	17
  1422   001A56  6E5A               	movwf	(??_main+1)^0,c
  1423   001A58  0E3C               	movlw	60
  1424   001A5A  6E59               	movwf	??_main^0,c
  1425   001A5C  0ECB               	movlw	203
  1426   001A5E                     u4717:
  1427   001A5E  2EE8               	decfsz	wreg,f,c
  1428   001A60  D7FE               	bra	u4717
  1429   001A62  2E59               	decfsz	??_main^0,f,c
  1430   001A64  D7FC               	bra	u4717
  1431   001A66  2E5A               	decfsz	(??_main+1)^0,f,c
  1432   001A68  D7FA               	bra	u4717
  1433   001A6A  F000               	nop	
  1434                           
  1435                           ;main.c: 97:             while (consecuitive<20){
  1436   001A6C  EF6B  F00D         	goto	l4740
  1437   001A70                     l4728:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 98:                 int colour = Colour_decider(&vals, &rel);
  1441   001A70  0EC7               	movlw	low _vals
  1442   001A72  6E4B               	movwf	Colour_decider@vals^0,c
  1443   001A74  0E01               	movlw	high _vals
  1444   001A76  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1445   001A78  0EB2               	movlw	low _rel
  1446   001A7A  6E4D               	movwf	Colour_decider@rel^0,c
  1447   001A7C  0E01               	movlw	high _rel
  1448   001A7E  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1449   001A80  EC13  F007         	call	_Colour_decider	;wreg free
  1450   001A84  C04B  F0EC         	movff	?_Colour_decider,main@colour
  1451   001A88  C04C  F0ED         	movff	?_Colour_decider+1,main@colour+1
  1452   001A8C                     
  1453                           ;main.c: 99:                 if (colour==prev_colour){
  1454   001A8C  0100               	movlb	0	; () banked
  1455   001A8E  51EE               	movf	main@prev_colour& (0+255),w,b
  1456   001A90  19EC               	xorwf	main@colour& (0+255),w,b
  1457   001A92  E107               	bnz	u4451
  1458   001A94  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1459   001A96  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1460   001A98  A4D8               	btfss	status,2,c
  1461   001A9A  EF51  F00D         	goto	u4451
  1462   001A9E  EF53  F00D         	goto	u4450
  1463   001AA2                     u4451:
  1464   001AA2  EF57  F00D         	goto	l4734
  1465   001AA6                     u4450:
  1466   001AA6                     
  1467                           ; BSR set to: 0
  1468                           ;main.c: 100:                     consecuitive++;
  1469   001AA6  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1470   001AA8  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1471                           
  1472                           ;main.c: 101:                 }
  1473   001AAA  EF5B  F00D         	goto	l4736
  1474   001AAE                     l4734:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;main.c: 103:                     consecuitive=0;
  1478   001AAE  0E00               	movlw	0
  1479   001AB0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1480   001AB2  0E00               	movlw	0
  1481   001AB4  6FEA               	movwf	main@consecuitive& (0+255),b
  1482   001AB6                     l4736:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;main.c: 105:                 prev_colour=colour;
  1486   001AB6  C0EC  F0EE         	movff	main@colour,main@prev_colour
  1487   001ABA  C0ED  F0EF         	movff	main@colour+1,main@prev_colour+1
  1488   001ABE                     
  1489                           ; BSR set to: 0
  1490                           ;main.c: 106:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1491   001ABE  0E05               	movlw	5
  1492   001AC0  6E5A               	movwf	(??_main+1)^0,c
  1493   001AC2  0E0F               	movlw	15
  1494   001AC4  6E59               	movwf	??_main^0,c
  1495   001AC6  0EF1               	movlw	241
  1496   001AC8                     u4727:
  1497   001AC8  2EE8               	decfsz	wreg,f,c
  1498   001ACA  D7FE               	bra	u4727
  1499   001ACC  2E59               	decfsz	??_main^0,f,c
  1500   001ACE  D7FC               	bra	u4727
  1501   001AD0  2E5A               	decfsz	(??_main+1)^0,f,c
  1502   001AD2  D7FA               	bra	u4727
  1503   001AD4  F000               	nop	
  1504   001AD6                     l4740:
  1505                           
  1506                           ;main.c: 97:             while (consecuitive<20){
  1507   001AD6  0100               	movlb	0	; () banked
  1508   001AD8  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1509   001ADA  EF78  F00D         	goto	u4461
  1510   001ADE  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1511   001AE0  E109               	bnz	u4460
  1512   001AE2  0E14               	movlw	20
  1513   001AE4  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1514   001AE6  A0D8               	btfss	status,0,c
  1515   001AE8  EF78  F00D         	goto	u4461
  1516   001AEC  EF7A  F00D         	goto	u4460
  1517   001AF0                     u4461:
  1518   001AF0  EF38  F00D         	goto	l4728
  1519   001AF4                     u4460:
  1520   001AF4                     
  1521                           ; BSR set to: 0
  1522                           ;main.c: 108:             consecuitive=0;
  1523   001AF4  0E00               	movlw	0
  1524   001AF6  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1525   001AF8  0E00               	movlw	0
  1526   001AFA  6FEA               	movwf	main@consecuitive& (0+255),b
  1527   001AFC                     
  1528                           ; BSR set to: 0
  1529                           ;main.c: 109:             int temp=TMR0L;
  1530   001AFC  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1531   001B00  6BE5               	clrf	(main@temp+1)& (0+255),b
  1532   001B02                     
  1533                           ; BSR set to: 0
  1534                           ;main.c: 110:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1535   001B02  0E80               	movlw	low main@buf
  1536   001B04  6F60               	movwf	sprintf@s& (0+255),b
  1537   001B06  0E00               	movlw	high main@buf
  1538   001B08  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1539   001B0A  0E01               	movlw	low STR_1
  1540   001B0C  6F62               	movwf	sprintf@fmt& (0+255),b
  1541   001B0E  0E0E               	movlw	high STR_1
  1542   001B10  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1543   001B12  C1C7  F064         	movff	_vals,?_sprintf+4
  1544   001B16  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1545   001B1A  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1546   001B1E  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1547   001B22  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1548   001B26  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1549   001B2A  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1550   001B2E  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1551   001B30  EC8F  F022         	call	_sprintf	;wreg free
  1552   001B34                     
  1553                           ;main.c: 113:             sendStringSerial4(buf);
  1554   001B34  0E80               	movlw	low main@buf
  1555   001B36  6E02               	movwf	sendStringSerial4@string^0,c
  1556   001B38  0E00               	movlw	high main@buf
  1557   001B3A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1558   001B3C  EC6A  F025         	call	_sendStringSerial4	;wreg free
  1559   001B40                     
  1560                           ;main.c: 115:             if (prev_colour==1){
  1561   001B40  0100               	movlb	0	; () banked
  1562   001B42  05EE               	decf	main@prev_colour& (0+255),w,b
  1563   001B44  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1564   001B46  A4D8               	btfss	status,2,c
  1565   001B48  EFA8  F00D         	goto	u4471
  1566   001B4C  EFAA  F00D         	goto	u4470
  1567   001B50                     u4471:
  1568   001B50  EFC3  F00D         	goto	l4760
  1569   001B54                     u4470:
  1570   001B54                     
  1571                           ; BSR set to: 0
  1572                           ;main.c: 116:                 RedMove(&motorL, &motorR);
  1573   001B54  0EF5               	movlw	low _motorL
  1574   001B56  6E20               	movwf	RedMove@mL^0,c
  1575   001B58  0E00               	movlw	high _motorL
  1576   001B5A  6E21               	movwf	(RedMove@mL+1)^0,c
  1577   001B5C  0EBE               	movlw	low _motorR
  1578   001B5E  6E22               	movwf	RedMove@mR^0,c
  1579   001B60  0E01               	movlw	high _motorR
  1580   001B62  6E23               	movwf	(RedMove@mR+1)^0,c
  1581   001B64  EC10  F025         	call	_RedMove	;wreg free
  1582   001B68                     
  1583                           ;main.c: 117:                 TMR0H=0;
  1584   001B68  0E00               	movlw	0
  1585   001B6A  6ED4               	movwf	212,c	;volatile
  1586   001B6C                     
  1587                           ;main.c: 118:                 TMR0L=0;
  1588   001B6C  0E00               	movlw	0
  1589   001B6E  6ED3               	movwf	211,c	;volatile
  1590   001B70                     
  1591                           ;main.c: 119:                 WayBack[move_count]=1;
  1592   001B70  0E60               	movlw	low _WayBack
  1593   001B72  0100               	movlb	0	; () banked
  1594   001B74  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1595   001B76  6ED9               	movwf	fsr2l,c
  1596   001B78  0E01               	movlw	high _WayBack
  1597   001B7A  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1598   001B7C  6EDA               	movwf	fsr2h,c
  1599   001B7E  0E01               	movlw	1
  1600   001B80  6EDF               	movwf	indf2,c
  1601                           
  1602                           ;main.c: 120:             }
  1603   001B82  EFFF  F00E         	goto	l4836
  1604   001B86                     l4760:
  1605                           
  1606                           ; BSR set to: 0
  1607   001B86  0E02               	movlw	2
  1608   001B88  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1609   001B8A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1610   001B8C  A4D8               	btfss	status,2,c
  1611   001B8E  EFCB  F00D         	goto	u4481
  1612   001B92  EFCD  F00D         	goto	u4480
  1613   001B96                     u4481:
  1614   001B96  EFE6  F00D         	goto	l4770
  1615   001B9A                     u4480:
  1616   001B9A                     
  1617                           ; BSR set to: 0
  1618                           ;main.c: 122:                 OrangeMove(&motorL, &motorR);
  1619   001B9A  0EF5               	movlw	low _motorL
  1620   001B9C  6E20               	movwf	OrangeMove@mL^0,c
  1621   001B9E  0E00               	movlw	high _motorL
  1622   001BA0  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1623   001BA2  0EBE               	movlw	low _motorR
  1624   001BA4  6E22               	movwf	OrangeMove@mR^0,c
  1625   001BA6  0E01               	movlw	high _motorR
  1626   001BA8  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1627   001BAA  ECB8  F022         	call	_OrangeMove	;wreg free
  1628   001BAE                     
  1629                           ;main.c: 123:                 TMR0H=0;
  1630   001BAE  0E00               	movlw	0
  1631   001BB0  6ED4               	movwf	212,c	;volatile
  1632   001BB2                     
  1633                           ;main.c: 124:                 TMR0L=0;
  1634   001BB2  0E00               	movlw	0
  1635   001BB4  6ED3               	movwf	211,c	;volatile
  1636   001BB6                     
  1637                           ;main.c: 125:                 WayBack[move_count]=2;
  1638   001BB6  0E60               	movlw	low _WayBack
  1639   001BB8  0100               	movlb	0	; () banked
  1640   001BBA  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1641   001BBC  6ED9               	movwf	fsr2l,c
  1642   001BBE  0E01               	movlw	high _WayBack
  1643   001BC0  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1644   001BC2  6EDA               	movwf	fsr2h,c
  1645   001BC4  0E02               	movlw	2
  1646   001BC6  6EDF               	movwf	indf2,c
  1647                           
  1648                           ;main.c: 126:             }
  1649   001BC8  EFFF  F00E         	goto	l4836
  1650   001BCC                     l4770:
  1651                           
  1652                           ; BSR set to: 0
  1653   001BCC  0E03               	movlw	3
  1654   001BCE  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1655   001BD0  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1656   001BD2  A4D8               	btfss	status,2,c
  1657   001BD4  EFEE  F00D         	goto	u4491
  1658   001BD8  EFF0  F00D         	goto	u4490
  1659   001BDC                     u4491:
  1660   001BDC  EF09  F00E         	goto	l4780
  1661   001BE0                     u4490:
  1662   001BE0                     
  1663                           ; BSR set to: 0
  1664                           ;main.c: 128:                 YellowMove(&motorL, &motorR);
  1665   001BE0  0EF5               	movlw	low _motorL
  1666   001BE2  6E20               	movwf	YellowMove@mL^0,c
  1667   001BE4  0E00               	movlw	high _motorL
  1668   001BE6  6E21               	movwf	(YellowMove@mL+1)^0,c
  1669   001BE8  0EBE               	movlw	low _motorR
  1670   001BEA  6E22               	movwf	YellowMove@mR^0,c
  1671   001BEC  0E01               	movlw	high _motorR
  1672   001BEE  6E23               	movwf	(YellowMove@mR+1)^0,c
  1673   001BF0  EC33  F023         	call	_YellowMove	;wreg free
  1674   001BF4                     
  1675                           ;main.c: 129:                 TMR0H=0;
  1676   001BF4  0E00               	movlw	0
  1677   001BF6  6ED4               	movwf	212,c	;volatile
  1678   001BF8                     
  1679                           ;main.c: 130:                 TMR0L=0;
  1680   001BF8  0E00               	movlw	0
  1681   001BFA  6ED3               	movwf	211,c	;volatile
  1682   001BFC                     
  1683                           ;main.c: 131:                 WayBack[move_count]=3;
  1684   001BFC  0E60               	movlw	low _WayBack
  1685   001BFE  0100               	movlb	0	; () banked
  1686   001C00  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1687   001C02  6ED9               	movwf	fsr2l,c
  1688   001C04  0E01               	movlw	high _WayBack
  1689   001C06  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1690   001C08  6EDA               	movwf	fsr2h,c
  1691   001C0A  0E03               	movlw	3
  1692   001C0C  6EDF               	movwf	indf2,c
  1693                           
  1694                           ;main.c: 132:             }
  1695   001C0E  EFFF  F00E         	goto	l4836
  1696   001C12                     l4780:
  1697                           
  1698                           ; BSR set to: 0
  1699   001C12  0E04               	movlw	4
  1700   001C14  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1701   001C16  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1702   001C18  A4D8               	btfss	status,2,c
  1703   001C1A  EF11  F00E         	goto	u4501
  1704   001C1E  EF13  F00E         	goto	u4500
  1705   001C22                     u4501:
  1706   001C22  EF2C  F00E         	goto	l4790
  1707   001C26                     u4500:
  1708   001C26                     
  1709                           ; BSR set to: 0
  1710                           ;main.c: 134:                 BlueMove(&motorL, &motorR);
  1711   001C26  0EF5               	movlw	low _motorL
  1712   001C28  6E20               	movwf	BlueMove@mL^0,c
  1713   001C2A  0E00               	movlw	high _motorL
  1714   001C2C  6E21               	movwf	(BlueMove@mL+1)^0,c
  1715   001C2E  0EBE               	movlw	low _motorR
  1716   001C30  6E22               	movwf	BlueMove@mR^0,c
  1717   001C32  0E01               	movlw	high _motorR
  1718   001C34  6E23               	movwf	(BlueMove@mR+1)^0,c
  1719   001C36  EC21  F021         	call	_BlueMove	;wreg free
  1720   001C3A                     
  1721                           ;main.c: 135:                 TMR0H=0;
  1722   001C3A  0E00               	movlw	0
  1723   001C3C  6ED4               	movwf	212,c	;volatile
  1724   001C3E                     
  1725                           ;main.c: 136:                 TMR0L=0;
  1726   001C3E  0E00               	movlw	0
  1727   001C40  6ED3               	movwf	211,c	;volatile
  1728   001C42                     
  1729                           ;main.c: 137:                 WayBack[move_count]=4;
  1730   001C42  0E60               	movlw	low _WayBack
  1731   001C44  0100               	movlb	0	; () banked
  1732   001C46  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1733   001C48  6ED9               	movwf	fsr2l,c
  1734   001C4A  0E01               	movlw	high _WayBack
  1735   001C4C  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1736   001C4E  6EDA               	movwf	fsr2h,c
  1737   001C50  0E04               	movlw	4
  1738   001C52  6EDF               	movwf	indf2,c
  1739                           
  1740                           ;main.c: 138:             }
  1741   001C54  EFFF  F00E         	goto	l4836
  1742   001C58                     l4790:
  1743                           
  1744                           ; BSR set to: 0
  1745   001C58  0E05               	movlw	5
  1746   001C5A  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1747   001C5C  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1748   001C5E  A4D8               	btfss	status,2,c
  1749   001C60  EF34  F00E         	goto	u4511
  1750   001C64  EF36  F00E         	goto	u4510
  1751   001C68                     u4511:
  1752   001C68  EF4F  F00E         	goto	l4800
  1753   001C6C                     u4510:
  1754   001C6C                     
  1755                           ; BSR set to: 0
  1756                           ;main.c: 140:                 GreenMove(&motorL, &motorR);
  1757   001C6C  0EF5               	movlw	low _motorL
  1758   001C6E  6E20               	movwf	GreenMove@mL^0,c
  1759   001C70  0E00               	movlw	high _motorL
  1760   001C72  6E21               	movwf	(GreenMove@mL+1)^0,c
  1761   001C74  0EBE               	movlw	low _motorR
  1762   001C76  6E22               	movwf	GreenMove@mR^0,c
  1763   001C78  0E01               	movlw	high _motorR
  1764   001C7A  6E23               	movwf	(GreenMove@mR+1)^0,c
  1765   001C7C  EC2F  F025         	call	_GreenMove	;wreg free
  1766   001C80                     
  1767                           ;main.c: 141:                 TMR0H=0;
  1768   001C80  0E00               	movlw	0
  1769   001C82  6ED4               	movwf	212,c	;volatile
  1770   001C84                     
  1771                           ;main.c: 142:                 TMR0L=0;
  1772   001C84  0E00               	movlw	0
  1773   001C86  6ED3               	movwf	211,c	;volatile
  1774   001C88                     
  1775                           ;main.c: 143:                 WayBack[move_count]=5;
  1776   001C88  0E60               	movlw	low _WayBack
  1777   001C8A  0100               	movlb	0	; () banked
  1778   001C8C  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1779   001C8E  6ED9               	movwf	fsr2l,c
  1780   001C90  0E01               	movlw	high _WayBack
  1781   001C92  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1782   001C94  6EDA               	movwf	fsr2h,c
  1783   001C96  0E05               	movlw	5
  1784   001C98  6EDF               	movwf	indf2,c
  1785                           
  1786                           ;main.c: 144:             }
  1787   001C9A  EFFF  F00E         	goto	l4836
  1788   001C9E                     l4800:
  1789                           
  1790                           ; BSR set to: 0
  1791   001C9E  0E06               	movlw	6
  1792   001CA0  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1793   001CA2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1794   001CA4  A4D8               	btfss	status,2,c
  1795   001CA6  EF57  F00E         	goto	u4521
  1796   001CAA  EF59  F00E         	goto	u4520
  1797   001CAE                     u4521:
  1798   001CAE  EF72  F00E         	goto	l4810
  1799   001CB2                     u4520:
  1800   001CB2                     
  1801                           ; BSR set to: 0
  1802                           ;main.c: 146:                 LightBlueMove(&motorL, &motorR);
  1803   001CB2  0EF5               	movlw	low _motorL
  1804   001CB4  6E20               	movwf	LightBlueMove@mL^0,c
  1805   001CB6  0E00               	movlw	high _motorL
  1806   001CB8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1807   001CBA  0EBE               	movlw	low _motorR
  1808   001CBC  6E22               	movwf	LightBlueMove@mR^0,c
  1809   001CBE  0E01               	movlw	high _motorR
  1810   001CC0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1811   001CC2  ECE1  F022         	call	_LightBlueMove	;wreg free
  1812   001CC6                     
  1813                           ;main.c: 147:                 TMR0H=0;
  1814   001CC6  0E00               	movlw	0
  1815   001CC8  6ED4               	movwf	212,c	;volatile
  1816   001CCA                     
  1817                           ;main.c: 148:                 TMR0L=0;
  1818   001CCA  0E00               	movlw	0
  1819   001CCC  6ED3               	movwf	211,c	;volatile
  1820   001CCE                     
  1821                           ;main.c: 149:                 WayBack[move_count]=6;
  1822   001CCE  0E60               	movlw	low _WayBack
  1823   001CD0  0100               	movlb	0	; () banked
  1824   001CD2  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1825   001CD4  6ED9               	movwf	fsr2l,c
  1826   001CD6  0E01               	movlw	high _WayBack
  1827   001CD8  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1828   001CDA  6EDA               	movwf	fsr2h,c
  1829   001CDC  0E06               	movlw	6
  1830   001CDE  6EDF               	movwf	indf2,c
  1831                           
  1832                           ;main.c: 150:             }
  1833   001CE0  EFFF  F00E         	goto	l4836
  1834   001CE4                     l4810:
  1835                           
  1836                           ; BSR set to: 0
  1837   001CE4  0E07               	movlw	7
  1838   001CE6  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1839   001CE8  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1840   001CEA  A4D8               	btfss	status,2,c
  1841   001CEC  EF7A  F00E         	goto	u4531
  1842   001CF0  EF7C  F00E         	goto	u4530
  1843   001CF4                     u4531:
  1844   001CF4  EF95  F00E         	goto	l4820
  1845   001CF8                     u4530:
  1846   001CF8                     
  1847                           ; BSR set to: 0
  1848                           ;main.c: 152:                 PinkMove(&motorL, &motorR);
  1849   001CF8  0EF5               	movlw	low _motorL
  1850   001CFA  6E20               	movwf	PinkMove@mL^0,c
  1851   001CFC  0E00               	movlw	high _motorL
  1852   001CFE  6E21               	movwf	(PinkMove@mL+1)^0,c
  1853   001D00  0EBE               	movlw	low _motorR
  1854   001D02  6E22               	movwf	PinkMove@mR^0,c
  1855   001D04  0E01               	movlw	high _motorR
  1856   001D06  6E23               	movwf	(PinkMove@mR+1)^0,c
  1857   001D08  EC5C  F023         	call	_PinkMove	;wreg free
  1858   001D0C                     
  1859                           ;main.c: 153:                 TMR0H=0;
  1860   001D0C  0E00               	movlw	0
  1861   001D0E  6ED4               	movwf	212,c	;volatile
  1862   001D10                     
  1863                           ;main.c: 154:                 TMR0L=0;
  1864   001D10  0E00               	movlw	0
  1865   001D12  6ED3               	movwf	211,c	;volatile
  1866   001D14                     
  1867                           ;main.c: 155:                 WayBack[move_count]=7;
  1868   001D14  0E60               	movlw	low _WayBack
  1869   001D16  0100               	movlb	0	; () banked
  1870   001D18  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1871   001D1A  6ED9               	movwf	fsr2l,c
  1872   001D1C  0E01               	movlw	high _WayBack
  1873   001D1E  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1874   001D20  6EDA               	movwf	fsr2h,c
  1875   001D22  0E07               	movlw	7
  1876   001D24  6EDF               	movwf	indf2,c
  1877                           
  1878                           ;main.c: 156:             }
  1879   001D26  EFFF  F00E         	goto	l4836
  1880   001D2A                     l4820:
  1881                           
  1882                           ; BSR set to: 0
  1883   001D2A  0E0A               	movlw	10
  1884   001D2C  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1885   001D2E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1886   001D30  A4D8               	btfss	status,2,c
  1887   001D32  EF9D  F00E         	goto	u4541
  1888   001D36  EF9F  F00E         	goto	u4540
  1889   001D3A                     u4541:
  1890   001D3A  EFAB  F00E         	goto	l4824
  1891   001D3E                     u4540:
  1892   001D3E                     
  1893                           ; BSR set to: 0
  1894                           ;main.c: 158:                 RetryMove(&motorL, &motorR);
  1895   001D3E  0EF5               	movlw	low _motorL
  1896   001D40  6E1A               	movwf	RetryMove@mL^0,c
  1897   001D42  0E00               	movlw	high _motorL
  1898   001D44  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1899   001D46  0EBE               	movlw	low _motorR
  1900   001D48  6E1C               	movwf	RetryMove@mR^0,c
  1901   001D4A  0E01               	movlw	high _motorR
  1902   001D4C  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1903   001D4E  ECF2  F01F         	call	_RetryMove	;wreg free
  1904                           
  1905                           ;main.c: 159:             }
  1906   001D52  EFFF  F00E         	goto	l4836
  1907   001D56                     l4824:
  1908                           
  1909                           ; BSR set to: 0
  1910   001D56  51EE               	movf	main@prev_colour& (0+255),w,b
  1911   001D58  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1912   001D5A  A4D8               	btfss	status,2,c
  1913   001D5C  EFB2  F00E         	goto	u4551
  1914   001D60  EFB4  F00E         	goto	u4550
  1915   001D64                     u4551:
  1916   001D64  EFDA  F00E         	goto	l422
  1917   001D68                     u4550:
  1918   001D68                     
  1919                           ; BSR set to: 0
  1920                           ;main.c: 161:                 BlueMove(&motorL, &motorR);
  1921   001D68  0EF5               	movlw	low _motorL
  1922   001D6A  6E20               	movwf	BlueMove@mL^0,c
  1923   001D6C  0E00               	movlw	high _motorL
  1924   001D6E  6E21               	movwf	(BlueMove@mL+1)^0,c
  1925   001D70  0EBE               	movlw	low _motorR
  1926   001D72  6E22               	movwf	BlueMove@mR^0,c
  1927   001D74  0E01               	movlw	high _motorR
  1928   001D76  6E23               	movwf	(BlueMove@mR+1)^0,c
  1929   001D78  EC21  F021         	call	_BlueMove	;wreg free
  1930   001D7C                     
  1931                           ;main.c: 162:                 T0CON0bits.T0EN=0;
  1932   001D7C  9ED5               	bcf	213,7,c	;volatile
  1933                           
  1934                           ;main.c: 163:                 go_Home(WayBack, Time_forward);
  1935   001D7E  0E60               	movlw	low _WayBack
  1936   001D80  6E24               	movwf	go_Home@WayBack^0,c
  1937   001D82  0E01               	movlw	high _WayBack
  1938   001D84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1939   001D86  0E00               	movlw	low _Time_forward
  1940   001D88  6E26               	movwf	go_Home@Time_forward^0,c
  1941   001D8A  0E02               	movlw	high _Time_forward
  1942   001D8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1943   001D8E  EC23  F018         	call	_go_Home	;wreg free
  1944                           
  1945                           ;main.c: 164:                 stop(&motorL, &motorR);
  1946   001D92  0EF5               	movlw	low _motorL
  1947   001D94  6E14               	movwf	stop@mL^0,c
  1948   001D96  0E00               	movlw	high _motorL
  1949   001D98  6E15               	movwf	(stop@mL+1)^0,c
  1950   001D9A  0EBE               	movlw	low _motorR
  1951   001D9C  6E16               	movwf	stop@mR^0,c
  1952   001D9E  0E01               	movlw	high _motorR
  1953   001DA0  6E17               	movwf	(stop@mR+1)^0,c
  1954   001DA2  EC33  F020         	call	_stop	;wreg free
  1955   001DA6                     
  1956                           ;main.c: 165:                 run_flag=0;
  1957   001DA6  0E00               	movlw	0
  1958   001DA8  0100               	movlb	0	; () banked
  1959   001DAA  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1960   001DAC  0E00               	movlw	0
  1961   001DAE  6FE8               	movwf	main@run_flag& (0+255),b
  1962   001DB0  EFFF  F00E         	goto	l4836
  1963   001DB4                     l422:
  1964                           
  1965                           ; BSR set to: 0
  1966   001DB4  EFFF  F00E         	goto	l4836
  1967   001DB8                     l405:
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;main.c: 171:             int temp=TMR0L;
  1971   001DB8  CFD3 F0E6          	movff	4051,main@temp_1191	;volatile
  1972   001DBC  0100               	movlb	0	; () banked
  1973   001DBE  6BE7               	clrf	(main@temp_1191+1)& (0+255),b
  1974   001DC0                     
  1975                           ; BSR set to: 0
  1976                           ;main.c: 172:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1977   001DC0  0E80               	movlw	low main@buf
  1978   001DC2  6F60               	movwf	sprintf@s& (0+255),b
  1979   001DC4  0E00               	movlw	high main@buf
  1980   001DC6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1981   001DC8  0E01               	movlw	low STR_1
  1982   001DCA  6F62               	movwf	sprintf@fmt& (0+255),b
  1983   001DCC  0E0E               	movlw	high STR_1
  1984   001DCE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1985   001DD0  C1C7  F064         	movff	_vals,?_sprintf+4
  1986   001DD4  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1987   001DD8  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1988   001DDC  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1989   001DE0  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1990   001DE4  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1991   001DE8  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1992   001DEC  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1993   001DEE  EC8F  F022         	call	_sprintf	;wreg free
  1994   001DF2                     
  1995                           ;main.c: 173:             sendStringSerial4(buf);
  1996   001DF2  0E80               	movlw	low main@buf
  1997   001DF4  6E02               	movwf	sendStringSerial4@string^0,c
  1998   001DF6  0E00               	movlw	high main@buf
  1999   001DF8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2000   001DFA  EC6A  F025         	call	_sendStringSerial4	;wreg free
  2001   001DFE                     l4836:
  2002                           
  2003                           ;main.c: 69:     while (run_flag)
  2004   001DFE  0100               	movlb	0	; () banked
  2005   001E00  51E8               	movf	main@run_flag& (0+255),w,b
  2006   001E02  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  2007   001E04  A4D8               	btfss	status,2,c
  2008   001E06  EF07  F00F         	goto	u4561
  2009   001E0A  EF09  F00F         	goto	u4560
  2010   001E0E                     u4561:
  2011   001E0E  EFE8  F00C         	goto	l4710
  2012   001E12                     u4560:
  2013   001E12                     
  2014                           ; BSR set to: 0
  2015   001E12  EF07  F000         	goto	start
  2016   001E16                     __end_of_main:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _sprintf *****************
  2020 ;; Defined at:
  2021 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2024 ;;		 -> main@buf(100), 
  2025 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2026 ;;		 -> STR_2(36), STR_1(36), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2029 ;;  ap              2   12[BANK0 ] PTR void [1]
  2030 ;;		 -> ?_sprintf(2), 
  2031 ;;  ret             2    0        int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2    0[BANK0 ] int 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2041 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2044 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2045 ;;Total ram usage:       25 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 8
  2048 ;; This function calls:
  2049 ;;		_vfprintf
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text1
  2056   00451E                     __ptext1:
  2057                           	callstack 0
  2058   00451E                     _sprintf:
  2059                           	callstack 22
  2060   00451E  0E64               	movlw	low (?_sprintf+4)
  2061   004520  0100               	movlb	0	; () banked
  2062   004522  6F6C               	movwf	sprintf@ap& (0+255),b
  2063   004524  0E00               	movlw	high (?_sprintf+4)
  2064   004526  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2065   004528  C060  F06E         	movff	sprintf@s,sprintf@f
  2066   00452C  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2067   004530                     
  2068                           ; BSR set to: 0
  2069   004530  0E00               	movlw	0
  2070   004532  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2071   004534  0E00               	movlw	0
  2072   004536  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2073   004538                     
  2074                           ; BSR set to: 0
  2075   004538  0E00               	movlw	0
  2076   00453A  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2077   00453C  0E00               	movlw	0
  2078   00453E  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2079   004540                     
  2080                           ; BSR set to: 0
  2081   004540  0E6E               	movlw	low sprintf@f
  2082   004542  6E51               	movwf	vfprintf@fp^0,c
  2083   004544  0E00               	movlw	high sprintf@f
  2084   004546  6E52               	movwf	(vfprintf@fp+1)^0,c
  2085   004548  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2086   00454C  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2087   004550  0E6C               	movlw	low sprintf@ap
  2088   004552  6E55               	movwf	vfprintf@ap^0,c
  2089   004554  0E00               	movlw	high sprintf@ap
  2090   004556  6E56               	movwf	(vfprintf@ap+1)^0,c
  2091   004558  EC25  F024         	call	_vfprintf	;wreg free
  2092   00455C  0100               	movlb	0	; () banked
  2093   00455E  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2094   004560  2560               	addwf	sprintf@s& (0+255),w,b
  2095   004562  6ED9               	movwf	fsr2l,c
  2096   004564  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2097   004566  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2098   004568  6EDA               	movwf	fsr2h,c
  2099   00456A  0E00               	movlw	0
  2100   00456C  6EDF               	movwf	indf2,c
  2101   00456E                     
  2102                           ; BSR set to: 0
  2103   00456E  0012               	return		;funcret
  2104   004570                     __end_of_sprintf:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _vfprintf *****************
  2108 ;; Defined at:
  2109 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2112 ;;		 -> sprintf@f(11), 
  2113 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2114 ;;		 -> STR_2(36), STR_1(36), 
  2115 ;;  ap              2   84[COMRAM] PTR PTR void 
  2116 ;;		 -> sprintf@ap(2), 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2119 ;;		 -> STR_2(36), STR_1(36), 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2   80[COMRAM] int 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2129 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2132 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;Total ram usage:        8 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 7
  2136 ;; This function calls:
  2137 ;;		_vfpfcnvrt
  2138 ;; This function is called by:
  2139 ;;		_sprintf
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text2
  2144   00484A                     __ptext2:
  2145                           	callstack 0
  2146   00484A                     _vfprintf:
  2147                           	callstack 22
  2148   00484A                     
  2149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2150   00484A  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2151   00484E  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2154   004852  EF39  F024         	goto	l4214
  2155   004856                     l4212:
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2158   004856  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2159   00485A  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2160   00485E  0E57               	movlw	low vfprintf@cfmt
  2161   004860  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2162   004862  0E00               	movlw	high vfprintf@cfmt
  2163   004864  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2164   004866  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2165   00486A  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2166   00486E  EC39  F01C         	call	_vfpfcnvrt	;wreg free
  2167   004872                     l4214:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2170   004872  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2171   004876  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2172   00487A                     	if	0	;tblptru may be non-zero
  2173   00487A                     	endif
  2174   00487A                     	if	0	;tblptru may be non-zero
  2175   00487A                     	endif
  2176   00487A  0008               	tblrd		*
  2177   00487C  50F5               	movf	tablat,w,c
  2178   00487E  0900               	iorlw	0
  2179   004880  A4D8               	btfss	status,2,c
  2180   004882  EF45  F024         	goto	u3921
  2181   004886  EF47  F024         	goto	u3920
  2182   00488A                     u3921:
  2183   00488A  EF2B  F024         	goto	l4212
  2184   00488E                     u3920:
  2185   00488E                     
  2186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2187   00488E  0E00               	movlw	0
  2188   004890  6E52               	movwf	(?_vfprintf+1)^0,c
  2189   004892  0E00               	movlw	0
  2190   004894  6E51               	movwf	?_vfprintf^0,c
  2191   004896  0012               	return		;funcret
  2192   004898                     __end_of_vfprintf:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _vfpfcnvrt *****************
  2196 ;; Defined at:
  2197 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2200 ;;		 -> sprintf@f(11), 
  2201 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2202 ;;		 -> vfprintf@cfmt(2), 
  2203 ;;  ap              2   66[COMRAM] PTR PTR void 
  2204 ;;		 -> sprintf@ap(2), 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  convarg         8   70[COMRAM] struct .
  2207 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2208 ;;		 -> STR_2(36), STR_1(36), 
  2209 ;;  i               2    0        int 
  2210 ;;  done            2    0        int 
  2211 ;;  c               1    0        unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2221 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2224 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;Total ram usage:       18 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 6
  2228 ;; This function calls:
  2229 ;;		_dtoa
  2230 ;;		_fputc
  2231 ;; This function is called by:
  2232 ;;		_vfprintf
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text3
  2237   003872                     __ptext3:
  2238                           	callstack 0
  2239   003872                     _vfpfcnvrt:
  2240                           	callstack 22
  2241   003872                     
  2242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2243   003872  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2244   003876  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2245   00387A  CFDE FFF6          	movff	postinc2,tblptrl
  2246   00387E  CFDD FFF7          	movff	postdec2,tblptrh
  2247   003882                     	if	0	;tblptru may be non-zero
  2248   003882                     	endif
  2249   003882                     	if	0	;tblptru may be non-zero
  2250   003882                     	endif
  2251   003882  0008               	tblrd		*
  2252   003884  50F5               	movf	tablat,w,c
  2253   003886  0A25               	xorlw	37
  2254   003888  A4D8               	btfss	status,2,c
  2255   00388A  EF49  F01C         	goto	u3261
  2256   00388E  EF4B  F01C         	goto	u3260
  2257   003892                     u3261:
  2258   003892  EFCC  F01C         	goto	l3768
  2259   003896                     u3260:
  2260   003896                     
  2261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2262   003896  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2263   00389A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2264   00389E  2ADE               	incf	postinc2,f,c
  2265   0038A0  0E00               	movlw	0
  2266   0038A2  22DD               	addwfc	postdec2,f,c
  2267   0038A4                     
  2268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2269   0038A4  0E00               	movlw	0
  2270   0038A6  0101               	movlb	1	; () banked
  2271   0038A8  6F5D               	movwf	(_width+1)& (0+255),b
  2272   0038AA  0E00               	movlw	0
  2273   0038AC  6F5C               	movwf	_width& (0+255),b
  2274   0038AE  C15C  F0F4         	movff	_width,_flags
  2275   0038B2                     
  2276                           ; BSR set to: 1
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2278   0038B2  0100               	movlb	0	; () banked
  2279   0038B4  69F0               	setf	_prec& (0+255),b
  2280   0038B6  69F1               	setf	(_prec+1)& (0+255),b
  2281   0038B8                     
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2284   0038B8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2285   0038BC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2286   0038C0  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2287   0038C4  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2288   0038C8                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2291   0038C8  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2292   0038CC  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2293   0038D0                     	if	0	;tblptru may be non-zero
  2294   0038D0                     	endif
  2295   0038D0                     	if	0	;tblptru may be non-zero
  2296   0038D0                     	endif
  2297   0038D0  0008               	tblrd		*
  2298   0038D2  50F5               	movf	tablat,w,c
  2299   0038D4  0A64               	xorlw	100
  2300   0038D6  B4D8               	btfsc	status,2,c
  2301   0038D8  EF70  F01C         	goto	u3271
  2302   0038DC  EF72  F01C         	goto	u3270
  2303   0038E0                     u3271:
  2304   0038E0  EF80  F01C         	goto	l3758
  2305   0038E4                     u3270:
  2306   0038E4                     
  2307                           ; BSR set to: 0
  2308   0038E4  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2309   0038E8  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2310   0038EC                     	if	0	;tblptru may be non-zero
  2311   0038EC                     	endif
  2312   0038EC                     	if	0	;tblptru may be non-zero
  2313   0038EC                     	endif
  2314   0038EC  0008               	tblrd		*
  2315   0038EE  50F5               	movf	tablat,w,c
  2316   0038F0  0A69               	xorlw	105
  2317   0038F2  A4D8               	btfss	status,2,c
  2318   0038F4  EF7E  F01C         	goto	u3281
  2319   0038F8  EF80  F01C         	goto	u3280
  2320   0038FC                     u3281:
  2321   0038FC  EFC3  F01C         	goto	l3764
  2322   003900                     u3280:
  2323   003900                     l3758:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2327   003900  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2328   003904  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2329   003908  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2330   00390C  0E02               	movlw	2
  2331   00390E  26DE               	addwf	postinc2,f,c
  2332   003910  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2333   003914  0E00               	movlw	0
  2334   003916  22DD               	addwfc	postdec2,f,c
  2335   003918  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2336   00391C  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2337   003920  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2338   003924  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2339   003928  0E00               	movlw	0
  2340   00392A  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2341   00392C  0EFF               	movlw	-1
  2342   00392E  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2343   003930  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2344   003932  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2345   003934  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2346   003936  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2347   003938  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2350   00393A  0E01               	movlw	1
  2351   00393C  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2352   00393E  6E45               	movwf	??_vfpfcnvrt^0,c
  2353   003940  0E00               	movlw	0
  2354   003942  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2355   003944  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2356   003946  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2357   00394A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2358   00394E  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2359   003952  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2360   003956                     
  2361                           ; BSR set to: 0
  2362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2363   003956  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2364   00395A  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2365   00395E  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2366   003962  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2367   003966  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2368   00396A  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2369   00396E  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2370   003972  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2371   003976  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2372   00397A  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2373   00397E  ECE4  F016         	call	_dtoa	;wreg free
  2374   003982  EFE0  F01C         	goto	l1406
  2375   003986                     l3764:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2378   003986  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2379   00398A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2380   00398E  2ADE               	incf	postinc2,f,c
  2381   003990  0E00               	movlw	0
  2382   003992  22DD               	addwfc	postdec2,f,c
  2383   003994  EFE0  F01C         	goto	l1406
  2384   003998                     l3768:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2387   003998  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2388   00399C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2389   0039A0  CFDE FFF6          	movff	postinc2,tblptrl
  2390   0039A4  CFDD FFF7          	movff	postdec2,tblptrh
  2391   0039A8                     	if	0	;tblptru may be non-zero
  2392   0039A8                     	endif
  2393   0039A8                     	if	0	;tblptru may be non-zero
  2394   0039A8                     	endif
  2395   0039A8  0008               	tblrd		*
  2396   0039AA  50F5               	movf	tablat,w,c
  2397   0039AC  6E01               	movwf	fputc@c^0,c
  2398   0039AE  6A02               	clrf	(fputc@c+1)^0,c
  2399   0039B0  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2400   0039B4  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2401   0039B8  EC63  F01D         	call	_fputc	;wreg free
  2402   0039BC  EFC3  F01C         	goto	l3764
  2403   0039C0                     l1406:
  2404   0039C0  0012               	return		;funcret
  2405   0039C2                     __end_of_vfpfcnvrt:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _dtoa *****************
  2409 ;; Defined at:
  2410 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2413 ;;		 -> sprintf@f(11), 
  2414 ;;  d               8   29[COMRAM] long long 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  n               8   51[COMRAM] long long 
  2417 ;;  i               2   59[COMRAM] int 
  2418 ;;  w               2   49[COMRAM] int 
  2419 ;;  p               2   47[COMRAM] int 
  2420 ;;  s               1   61[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2430 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;Total ram usage:       35 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 5
  2437 ;; This function calls:
  2438 ;;		___aodiv
  2439 ;;		___aomod
  2440 ;;		_abs
  2441 ;;		_pad
  2442 ;; This function is called by:
  2443 ;;		_vfpfcnvrt
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text4
  2448   002DC8                     __ptext4:
  2449                           	callstack 0
  2450   002DC8                     _dtoa:
  2451                           	callstack 22
  2452   002DC8                     
  2453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2454   002DC8  C01E  F034         	movff	dtoa@d,dtoa@n
  2455   002DCC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2456   002DD0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2457   002DD4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2458   002DD8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2459   002DDC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2460   002DE0  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2461   002DE4  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2462   002DE8                     
  2463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2464   002DE8  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2465   002DEA  EFF9  F016         	goto	u2741
  2466   002DEE  EFFC  F016         	goto	u2740
  2467   002DF2                     u2741:
  2468   002DF2  0E01               	movlw	1
  2469   002DF4  EFFD  F016         	goto	u2750
  2470   002DF8                     u2740:
  2471   002DF8  0E00               	movlw	0
  2472   002DFA                     u2750:
  2473   002DFA  6E3E               	movwf	dtoa@s^0,c
  2474   002DFC                     
  2475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2476   002DFC  503E               	movf	dtoa@s^0,w,c
  2477   002DFE  B4D8               	btfsc	status,2,c
  2478   002E00  EF04  F017         	goto	u2761
  2479   002E04  EF06  F017         	goto	u2760
  2480   002E08                     u2761:
  2481   002E08  EF16  F017         	goto	l3438
  2482   002E0C                     u2760:
  2483   002E0C                     
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2485   002E0C  1E3B               	comf	(dtoa@n+7)^0,f,c
  2486   002E0E  1E3A               	comf	(dtoa@n+6)^0,f,c
  2487   002E10  1E39               	comf	(dtoa@n+5)^0,f,c
  2488   002E12  1E38               	comf	(dtoa@n+4)^0,f,c
  2489   002E14  1E37               	comf	(dtoa@n+3)^0,f,c
  2490   002E16  1E36               	comf	(dtoa@n+2)^0,f,c
  2491   002E18  1E35               	comf	(dtoa@n+1)^0,f,c
  2492   002E1A  6C34               	negf	dtoa@n^0,c
  2493   002E1C  0E00               	movlw	0
  2494   002E1E  2235               	addwfc	(dtoa@n+1)^0,f,c
  2495   002E20  2236               	addwfc	(dtoa@n+2)^0,f,c
  2496   002E22  2237               	addwfc	(dtoa@n+3)^0,f,c
  2497   002E24  2238               	addwfc	(dtoa@n+4)^0,f,c
  2498   002E26  2239               	addwfc	(dtoa@n+5)^0,f,c
  2499   002E28  223A               	addwfc	(dtoa@n+6)^0,f,c
  2500   002E2A  223B               	addwfc	(dtoa@n+7)^0,f,c
  2501   002E2C                     l3438:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2504   002E2C  0100               	movlb	0	; () banked
  2505   002E2E  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2506   002E30  EF24  F017         	goto	u2770
  2507   002E34  51F1               	movf	(_prec+1)& (0+255),w,b
  2508   002E36  E106               	bnz	u2771
  2509   002E38  05F0               	decf	_prec& (0+255),w,b
  2510   002E3A  B0D8               	btfsc	status,0,c
  2511   002E3C  EF22  F017         	goto	u2771
  2512   002E40  EF24  F017         	goto	u2770
  2513   002E44                     u2771:
  2514   002E44  EF2A  F017         	goto	l1385
  2515   002E48                     u2770:
  2516   002E48                     
  2517                           ; BSR set to: 0
  2518   002E48  0E00               	movlw	0
  2519   002E4A  6E31               	movwf	(dtoa@p+1)^0,c
  2520   002E4C  0E01               	movlw	1
  2521   002E4E  6E30               	movwf	dtoa@p^0,c
  2522   002E50  EF2E  F017         	goto	l1387
  2523   002E54                     l1385:
  2524                           
  2525                           ; BSR set to: 0
  2526   002E54  C0F0  F030         	movff	_prec,dtoa@p
  2527   002E58  C0F1  F031         	movff	_prec+1,dtoa@p+1
  2528   002E5C                     l1387:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2532   002E5C  C15C  F032         	movff	_width,dtoa@w
  2533   002E60  C15D  F033         	movff	_width+1,dtoa@w+1
  2534   002E64                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2537   002E64  503E               	movf	dtoa@s^0,w,c
  2538   002E66  B4D8               	btfsc	status,2,c
  2539   002E68  EF38  F017         	goto	u2781
  2540   002E6C  EF3A  F017         	goto	u2780
  2541   002E70                     u2781:
  2542   002E70  EF51  F017         	goto	l1388
  2543   002E74                     u2780:
  2544   002E74                     
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2547   002E74  0632               	decf	dtoa@w^0,f,c
  2548   002E76  A0D8               	btfss	status,0,c
  2549   002E78  0633               	decf	(dtoa@w+1)^0,f,c
  2550   002E7A                     
  2551                           ; BSR set to: 0
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2553   002E7A  503E               	movf	dtoa@s^0,w,c
  2554   002E7C  A4D8               	btfss	status,2,c
  2555   002E7E  EF43  F017         	goto	u2791
  2556   002E82  EF45  F017         	goto	u2790
  2557   002E86                     u2791:
  2558   002E86  EF4B  F017         	goto	l3450
  2559   002E8A                     u2790:
  2560   002E8A                     
  2561                           ; BSR set to: 0
  2562   002E8A  0E00               	movlw	0
  2563   002E8C  6E2F               	movwf	(_dtoa$2513+1)^0,c
  2564   002E8E  0E2B               	movlw	43
  2565   002E90  6E2E               	movwf	_dtoa$2513^0,c
  2566   002E92  EF4F  F017         	goto	l3452
  2567   002E96                     l3450:
  2568                           
  2569                           ; BSR set to: 0
  2570   002E96  0E00               	movlw	0
  2571   002E98  6E2F               	movwf	(_dtoa$2513+1)^0,c
  2572   002E9A  0E2D               	movlw	45
  2573   002E9C  6E2E               	movwf	_dtoa$2513^0,c
  2574   002E9E                     l3452:
  2575                           
  2576                           ; BSR set to: 0
  2577   002E9E  C02E  F03E         	movff	_dtoa$2513,dtoa@s
  2578   002EA2                     l1388:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2582   002EA2  0E00               	movlw	0
  2583   002EA4  6E3D               	movwf	(dtoa@i+1)^0,c
  2584   002EA6  0E1F               	movlw	31
  2585   002EA8  6E3C               	movwf	dtoa@i^0,c
  2586   002EAA                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2589   002EAA  0E00               	movlw	0
  2590   002EAC  0101               	movlb	1	; () banked
  2591   002EAE  6FB1               	movwf	(_dbuf+31)& (0+255),b
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2594   002EB0  EFD6  F017         	goto	l3466
  2595   002EB4                     l3456:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2598   002EB4  063C               	decf	dtoa@i^0,f,c
  2599   002EB6  A0D8               	btfss	status,0,c
  2600   002EB8  063D               	decf	(dtoa@i+1)^0,f,c
  2601   002EBA                     
  2602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2603   002EBA  0E92               	movlw	low _dbuf
  2604   002EBC  243C               	addwf	dtoa@i^0,w,c
  2605   002EBE  6ED9               	movwf	fsr2l,c
  2606   002EC0  0E01               	movlw	high _dbuf
  2607   002EC2  203D               	addwfc	(dtoa@i+1)^0,w,c
  2608   002EC4  6EDA               	movwf	fsr2h,c
  2609   002EC6  C034  F001         	movff	dtoa@n,___aomod@dividend
  2610   002ECA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2611   002ECE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2612   002ED2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2613   002ED6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2614   002EDA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2615   002EDE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2616   002EE2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2617   002EE6  0E0A               	movlw	10
  2618   002EE8  6E09               	movwf	___aomod@divisor^0,c
  2619   002EEA  0E00               	movlw	0
  2620   002EEC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2621   002EEE  0E00               	movlw	0
  2622   002EF0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2623   002EF2  0E00               	movlw	0
  2624   002EF4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2625   002EF6  0E00               	movlw	0
  2626   002EF8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2627   002EFA  0E00               	movlw	0
  2628   002EFC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2629   002EFE  0E00               	movlw	0
  2630   002F00  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2631   002F02  0E00               	movlw	0
  2632   002F04  6E10               	movwf	(___aomod@divisor+7)^0,c
  2633   002F06  EC87  F01B         	call	___aomod	;wreg free
  2634   002F0A  C001  F026         	movff	?___aomod,??_dtoa
  2635   002F0E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2636   002F12  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2637   002F16  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2638   002F1A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2639   002F1E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2640   002F22  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2641   002F26  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2642   002F2A  C026  F013         	movff	??_dtoa,abs@a
  2643   002F2E  C027  F014         	movff	??_dtoa+1,abs@a+1
  2644   002F32  ECB2  F024         	call	_abs	;wreg free
  2645   002F36  5013               	movf	?_abs^0,w,c
  2646   002F38  0F30               	addlw	48
  2647   002F3A  6EDF               	movwf	indf2,c
  2648   002F3C                     
  2649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2650   002F3C  0630               	decf	dtoa@p^0,f,c
  2651   002F3E  A0D8               	btfss	status,0,c
  2652   002F40  0631               	decf	(dtoa@p+1)^0,f,c
  2653   002F42                     
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2655   002F42  0632               	decf	dtoa@w^0,f,c
  2656   002F44  A0D8               	btfss	status,0,c
  2657   002F46  0633               	decf	(dtoa@w+1)^0,f,c
  2658   002F48                     
  2659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2660   002F48  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2661   002F4C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2662   002F50  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2663   002F54  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2664   002F58  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2665   002F5C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2666   002F60  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2667   002F64  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2668   002F68  0E0A               	movlw	10
  2669   002F6A  6E09               	movwf	___aodiv@divisor^0,c
  2670   002F6C  0E00               	movlw	0
  2671   002F6E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2672   002F70  0E00               	movlw	0
  2673   002F72  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2674   002F74  0E00               	movlw	0
  2675   002F76  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2676   002F78  0E00               	movlw	0
  2677   002F7A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2678   002F7C  0E00               	movlw	0
  2679   002F7E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2680   002F80  0E00               	movlw	0
  2681   002F82  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2682   002F84  0E00               	movlw	0
  2683   002F86  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2684   002F88  EC0D  F01A         	call	___aodiv	;wreg free
  2685   002F8C  C001  F034         	movff	?___aodiv,dtoa@n
  2686   002F90  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2687   002F94  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2688   002F98  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2689   002F9C  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2690   002FA0  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2691   002FA4  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2692   002FA8  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2693   002FAC                     l3466:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2696   002FAC  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2697   002FAE  EFE1  F017         	goto	u2801
  2698   002FB2  503D               	movf	(dtoa@i+1)^0,w,c
  2699   002FB4  E108               	bnz	u2800
  2700   002FB6  043C               	decf	dtoa@i^0,w,c
  2701   002FB8  A0D8               	btfss	status,0,c
  2702   002FBA  EFE1  F017         	goto	u2801
  2703   002FBE  EFE3  F017         	goto	u2800
  2704   002FC2                     u2801:
  2705   002FC2  EFFF  F017         	goto	l3472
  2706   002FC6                     u2800:
  2707   002FC6  5034               	movf	dtoa@n^0,w,c
  2708   002FC8  1035               	iorwf	(dtoa@n+1)^0,w,c
  2709   002FCA  1036               	iorwf	(dtoa@n+2)^0,w,c
  2710   002FCC  1037               	iorwf	(dtoa@n+3)^0,w,c
  2711   002FCE  1038               	iorwf	(dtoa@n+4)^0,w,c
  2712   002FD0  1039               	iorwf	(dtoa@n+5)^0,w,c
  2713   002FD2  103A               	iorwf	(dtoa@n+6)^0,w,c
  2714   002FD4  103B               	iorwf	(dtoa@n+7)^0,w,c
  2715   002FD6  A4D8               	btfss	status,2,c
  2716   002FD8  EFF0  F017         	goto	u2811
  2717   002FDC  EFF2  F017         	goto	u2810
  2718   002FE0                     u2811:
  2719   002FE0  EF5A  F017         	goto	l3456
  2720   002FE4                     u2810:
  2721   002FE4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2722   002FE6  EFFF  F017         	goto	u2820
  2723   002FEA  5031               	movf	(dtoa@p+1)^0,w,c
  2724   002FEC  E106               	bnz	u2821
  2725   002FEE  0430               	decf	dtoa@p^0,w,c
  2726   002FF0  B0D8               	btfsc	status,0,c
  2727   002FF2  EFFD  F017         	goto	u2821
  2728   002FF6  EFFF  F017         	goto	u2820
  2729   002FFA                     u2821:
  2730   002FFA  EF5A  F017         	goto	l3456
  2731   002FFE                     u2820:
  2732   002FFE                     l3472:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2735   002FFE  503E               	movf	dtoa@s^0,w,c
  2736   003000  B4D8               	btfsc	status,2,c
  2737   003002  EF05  F018         	goto	u2831
  2738   003006  EF07  F018         	goto	u2830
  2739   00300A                     u2831:
  2740   00300A  EF12  F018         	goto	l3478
  2741   00300E                     u2830:
  2742   00300E                     
  2743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2744   00300E  063C               	decf	dtoa@i^0,f,c
  2745   003010  A0D8               	btfss	status,0,c
  2746   003012  063D               	decf	(dtoa@i+1)^0,f,c
  2747   003014                     
  2748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2749   003014  0E92               	movlw	low _dbuf
  2750   003016  243C               	addwf	dtoa@i^0,w,c
  2751   003018  6ED9               	movwf	fsr2l,c
  2752   00301A  0E01               	movlw	high _dbuf
  2753   00301C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2754   00301E  6EDA               	movwf	fsr2h,c
  2755   003020  C03E  FFDF         	movff	dtoa@s,indf2
  2756   003024                     l3478:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2759   003024  C01C  F011         	movff	dtoa@fp,pad@fp
  2760   003028  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2761   00302C  0E92               	movlw	low _dbuf
  2762   00302E  243C               	addwf	dtoa@i^0,w,c
  2763   003030  6E13               	movwf	pad@buf^0,c
  2764   003032  0E01               	movlw	high _dbuf
  2765   003034  203D               	addwfc	(dtoa@i+1)^0,w,c
  2766   003036  6E14               	movwf	(pad@buf+1)^0,c
  2767   003038  C032  F015         	movff	dtoa@w,pad@p
  2768   00303C  C033  F016         	movff	dtoa@w+1,pad@p+1
  2769   003040  EC72  F020         	call	_pad	;wreg free
  2770   003044  0012               	return		;funcret
  2771   003046                     __end_of_dtoa:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _pad *****************
  2775 ;; Defined at:
  2776 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2779 ;;		 -> sprintf@f(11), 
  2780 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2781 ;;		 -> dbuf(32), 
  2782 ;;  p               2   20[COMRAM] int 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  w               2   25[COMRAM] int 
  2785 ;;  i               2   23[COMRAM] int 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2795 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;Total ram usage:       11 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 4
  2802 ;; This function calls:
  2803 ;;		_fputc
  2804 ;;		_fputs
  2805 ;; This function is called by:
  2806 ;;		_dtoa
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text5
  2811   0040E4                     __ptext5:
  2812                           	callstack 0
  2813   0040E4                     _pad:
  2814                           	callstack 22
  2815   0040E4                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2817   0040E4  BE16               	btfsc	(pad@p+1)^0,7,c
  2818   0040E6  EF77  F020         	goto	u2591
  2819   0040EA  EF79  F020         	goto	u2590
  2820   0040EE                     u2591:
  2821   0040EE  EF7F  F020         	goto	l3342
  2822   0040F2                     u2590:
  2823   0040F2  C015  F01A         	movff	pad@p,pad@w
  2824   0040F6  C016  F01B         	movff	pad@p+1,pad@w+1
  2825   0040FA  EF83  F020         	goto	l1376
  2826   0040FE                     l3342:
  2827   0040FE  0E00               	movlw	0
  2828   004100  6E1B               	movwf	(pad@w+1)^0,c
  2829   004102  0E00               	movlw	0
  2830   004104  6E1A               	movwf	pad@w^0,c
  2831   004106                     l1376:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2834   004106  0E00               	movlw	0
  2835   004108  6E19               	movwf	(pad@i+1)^0,c
  2836   00410A  0E00               	movlw	0
  2837   00410C  6E18               	movwf	pad@i^0,c
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2840   00410E  EF95  F020         	goto	l3348
  2841   004112                     l3344:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2844   004112  0E00               	movlw	0
  2845   004114  6E02               	movwf	(fputc@c+1)^0,c
  2846   004116  0E20               	movlw	32
  2847   004118  6E01               	movwf	fputc@c^0,c
  2848   00411A  C011  F003         	movff	pad@fp,fputc@fp
  2849   00411E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2850   004122  EC63  F01D         	call	_fputc	;wreg free
  2851   004126                     
  2852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2853   004126  4A18               	infsnz	pad@i^0,f,c
  2854   004128  2A19               	incf	(pad@i+1)^0,f,c
  2855   00412A                     l3348:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2858   00412A  501A               	movf	pad@w^0,w,c
  2859   00412C  5C18               	subwf	pad@i^0,w,c
  2860   00412E  5019               	movf	(pad@i+1)^0,w,c
  2861   004130  0A80               	xorlw	128
  2862   004132  6E17               	movwf	??_pad^0,c
  2863   004134  501B               	movf	(pad@w+1)^0,w,c
  2864   004136  0A80               	xorlw	128
  2865   004138  5817               	subwfb	??_pad^0,w,c
  2866   00413A  A0D8               	btfss	status,0,c
  2867   00413C  EFA2  F020         	goto	u2601
  2868   004140  EFA4  F020         	goto	u2600
  2869   004144                     u2601:
  2870   004144  EF89  F020         	goto	l3344
  2871   004148                     u2600:
  2872   004148                     
  2873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2874   004148  C013  F00A         	movff	pad@buf,fputs@s
  2875   00414C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2876   004150  C011  F00C         	movff	pad@fp,fputs@fp
  2877   004154  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2878   004158  EC6F  F024         	call	_fputs	;wreg free
  2879   00415C  0012               	return		;funcret
  2880   00415E                     __end_of_pad:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _fputs *****************
  2884 ;; Defined at:
  2885 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2888 ;;		 -> dbuf(32), 
  2889 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2890 ;;		 -> sprintf@f(11), 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  i               2   14[COMRAM] int 
  2893 ;;  c               1   13[COMRAM] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    9[COMRAM] int 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;Total ram usage:        7 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 3
  2910 ;; This function calls:
  2911 ;;		_fputc
  2912 ;; This function is called by:
  2913 ;;		_pad
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text6
  2918   0048DE                     __ptext6:
  2919                           	callstack 0
  2920   0048DE                     _fputs:
  2921                           	callstack 22
  2922   0048DE  0E00               	movlw	0
  2923   0048E0  6E10               	movwf	(fputs@i+1)^0,c
  2924   0048E2  0E00               	movlw	0
  2925   0048E4  6E0F               	movwf	fputs@i^0,c
  2926   0048E6  EF80  F024         	goto	l3240
  2927   0048EA                     l3236:
  2928   0048EA  C00E  F001         	movff	fputs@c,fputc@c
  2929   0048EE  6A02               	clrf	(fputc@c+1)^0,c
  2930   0048F0  C00C  F003         	movff	fputs@fp,fputc@fp
  2931   0048F4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2932   0048F8  EC63  F01D         	call	_fputc	;wreg free
  2933   0048FC  4A0F               	infsnz	fputs@i^0,f,c
  2934   0048FE  2A10               	incf	(fputs@i+1)^0,f,c
  2935   004900                     l3240:
  2936   004900  500F               	movf	fputs@i^0,w,c
  2937   004902  240A               	addwf	fputs@s^0,w,c
  2938   004904  6ED9               	movwf	fsr2l,c
  2939   004906  5010               	movf	(fputs@i+1)^0,w,c
  2940   004908  200B               	addwfc	(fputs@s+1)^0,w,c
  2941   00490A  6EDA               	movwf	fsr2h,c
  2942   00490C  50DF               	movf	indf2,w,c
  2943   00490E  6E0E               	movwf	fputs@c^0,c
  2944   004910  500E               	movf	fputs@c^0,w,c
  2945   004912  A4D8               	btfss	status,2,c
  2946   004914  EF8E  F024         	goto	u2431
  2947   004918  EF90  F024         	goto	u2430
  2948   00491C                     u2431:
  2949   00491C  EF75  F024         	goto	l3236
  2950   004920                     u2430:
  2951   004920  0012               	return		;funcret
  2952   004922                     __end_of_fputs:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _fputc *****************
  2956 ;; Defined at:
  2957 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  c               2    0[COMRAM] int 
  2960 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2961 ;;		 -> sprintf@f(11), 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  2    0[COMRAM] int 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;Total ram usage:        9 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 2
  2980 ;; This function calls:
  2981 ;;		_putch
  2982 ;; This function is called by:
  2983 ;;		_pad
  2984 ;;		_vfpfcnvrt
  2985 ;;		_fputs
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text7
  2990   003AC6                     __ptext7:
  2991                           	callstack 0
  2992   003AC6                     _fputc:
  2993                           	callstack 25
  2994   003AC6  5003               	movf	fputc@fp^0,w,c
  2995   003AC8  1004               	iorwf	(fputc@fp+1)^0,w,c
  2996   003ACA  B4D8               	btfsc	status,2,c
  2997   003ACC  EF6A  F01D         	goto	u2361
  2998   003AD0  EF6C  F01D         	goto	u2360
  2999   003AD4                     u2361:
  3000   003AD4  EF75  F01D         	goto	l3196
  3001   003AD8                     u2360:
  3002   003AD8  5003               	movf	fputc@fp^0,w,c
  3003   003ADA  1004               	iorwf	(fputc@fp+1)^0,w,c
  3004   003ADC  A4D8               	btfss	status,2,c
  3005   003ADE  EF73  F01D         	goto	u2371
  3006   003AE2  EF75  F01D         	goto	u2370
  3007   003AE6                     u2371:
  3008   003AE6  EF7A  F01D         	goto	l3198
  3009   003AEA                     u2370:
  3010   003AEA                     l3196:
  3011   003AEA  5001               	movf	fputc@c^0,w,c
  3012   003AEC  EC25  F026         	call	_putch
  3013   003AF0  EFC7  F01D         	goto	l1431
  3014   003AF4                     l3198:
  3015   003AF4  EE20 F009          	lfsr	2,9
  3016   003AF8  5003               	movf	fputc@fp^0,w,c
  3017   003AFA  26D9               	addwf	fsr2l,f,c
  3018   003AFC  5004               	movf	(fputc@fp+1)^0,w,c
  3019   003AFE  22DA               	addwfc	fsr2h,f,c
  3020   003B00  50DE               	movf	postinc2,w,c
  3021   003B02  10DE               	iorwf	postinc2,w,c
  3022   003B04  B4D8               	btfsc	status,2,c
  3023   003B06  EF87  F01D         	goto	u2381
  3024   003B0A  EF89  F01D         	goto	u2380
  3025   003B0E                     u2381:
  3026   003B0E  EFA4  F01D         	goto	l3202
  3027   003B12                     u2380:
  3028   003B12  EE20 F009          	lfsr	2,9
  3029   003B16  5003               	movf	fputc@fp^0,w,c
  3030   003B18  26D9               	addwf	fsr2l,f,c
  3031   003B1A  5004               	movf	(fputc@fp+1)^0,w,c
  3032   003B1C  22DA               	addwfc	fsr2h,f,c
  3033   003B1E  EE10 F003          	lfsr	1,3
  3034   003B22  5003               	movf	fputc@fp^0,w,c
  3035   003B24  26E1               	addwf	fsr1l,f,c
  3036   003B26  5004               	movf	(fputc@fp+1)^0,w,c
  3037   003B28  22E2               	addwfc	fsr1h,f,c
  3038   003B2A  50DE               	movf	postinc2,w,c
  3039   003B2C  5CE6               	subwf	postinc1,w,c
  3040   003B2E  50E6               	movf	postinc1,w,c
  3041   003B30  0A80               	xorlw	128
  3042   003B32  6E09               	movwf	(??_fputc+4)^0,c
  3043   003B34  50DE               	movf	postinc2,w,c
  3044   003B36  0A80               	xorlw	128
  3045   003B38  5809               	subwfb	(??_fputc+4)^0,w,c
  3046   003B3A  B0D8               	btfsc	status,0,c
  3047   003B3C  EFA2  F01D         	goto	u2391
  3048   003B40  EFA4  F01D         	goto	u2390
  3049   003B44                     u2391:
  3050   003B44  EFC7  F01D         	goto	l1431
  3051   003B48                     u2390:
  3052   003B48                     l3202:
  3053   003B48  EE20 F003          	lfsr	2,3
  3054   003B4C  5003               	movf	fputc@fp^0,w,c
  3055   003B4E  26D9               	addwf	fsr2l,f,c
  3056   003B50  5004               	movf	(fputc@fp+1)^0,w,c
  3057   003B52  22DA               	addwfc	fsr2h,f,c
  3058   003B54  CFDE F005          	movff	postinc2,??_fputc
  3059   003B58  CFDD F006          	movff	postdec2,??_fputc+1
  3060   003B5C  C003  FFD9         	movff	fputc@fp,fsr2l
  3061   003B60  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3062   003B64  CFDE F007          	movff	postinc2,??_fputc+2
  3063   003B68  CFDD F008          	movff	postdec2,??_fputc+3
  3064   003B6C  5005               	movf	??_fputc^0,w,c
  3065   003B6E  2407               	addwf	(??_fputc+2)^0,w,c
  3066   003B70  6ED9               	movwf	fsr2l,c
  3067   003B72  5006               	movf	(??_fputc+1)^0,w,c
  3068   003B74  2008               	addwfc	(??_fputc+3)^0,w,c
  3069   003B76  6EDA               	movwf	fsr2h,c
  3070   003B78  C001  FFDF         	movff	fputc@c,indf2
  3071   003B7C  EE20 F003          	lfsr	2,3
  3072   003B80  5003               	movf	fputc@fp^0,w,c
  3073   003B82  26D9               	addwf	fsr2l,f,c
  3074   003B84  5004               	movf	(fputc@fp+1)^0,w,c
  3075   003B86  22DA               	addwfc	fsr2h,f,c
  3076   003B88  2ADE               	incf	postinc2,f,c
  3077   003B8A  0E00               	movlw	0
  3078   003B8C  22DD               	addwfc	postdec2,f,c
  3079   003B8E                     l1431:
  3080   003B8E  0012               	return		;funcret
  3081   003B90                     __end_of_fputc:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _putch *****************
  3085 ;; Defined at:
  3086 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  c               1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  c               1    0[COMRAM] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 1
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_fputc
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text8
  3115   004C4A                     __ptext8:
  3116                           	callstack 0
  3117   004C4A                     _putch:
  3118                           	callstack 25
  3119   004C4A  0012               	return		;funcret
  3120   004C4C                     __end_of_putch:
  3121                           	callstack 0
  3122                           
  3123 ;; *************** function _abs *****************
  3124 ;; Defined at:
  3125 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  a               2   18[COMRAM] int 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2   18[COMRAM] int 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;Total ram usage:        4 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 1
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_dtoa
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text9
  3154   004964                     __ptext9:
  3155                           	callstack 0
  3156   004964                     _abs:
  3157                           	callstack 25
  3158   004964  BE14               	btfsc	(abs@a+1)^0,7,c
  3159   004966  EFBF  F024         	goto	u2610
  3160   00496A  5014               	movf	(abs@a+1)^0,w,c
  3161   00496C  E106               	bnz	u2611
  3162   00496E  0413               	decf	abs@a^0,w,c
  3163   004970  B0D8               	btfsc	status,0,c
  3164   004972  EFBD  F024         	goto	u2611
  3165   004976  EFBF  F024         	goto	u2610
  3166   00497A                     u2611:
  3167   00497A  EFCD  F024         	goto	l1416
  3168   00497E                     u2610:
  3169   00497E  C013  F015         	movff	abs@a,??_abs
  3170   004982  C014  F016         	movff	abs@a+1,??_abs+1
  3171   004986  1E15               	comf	??_abs^0,f,c
  3172   004988  1E16               	comf	(??_abs+1)^0,f,c
  3173   00498A  4A15               	infsnz	??_abs^0,f,c
  3174   00498C  2A16               	incf	(??_abs+1)^0,f,c
  3175   00498E  C015  F013         	movff	??_abs,?_abs
  3176   004992  C016  F014         	movff	??_abs+1,?_abs+1
  3177   004996  EFD1  F024         	goto	l1419
  3178   00499A                     l1416:
  3179   00499A  C013  F013         	movff	abs@a,?_abs
  3180   00499E  C014  F014         	movff	abs@a+1,?_abs+1
  3181   0049A2                     l1419:
  3182   0049A2  0012               	return		;funcret
  3183   0049A4                     __end_of_abs:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function ___aomod *****************
  3187 ;; Defined at:
  3188 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  dividend        8    0[COMRAM] long long 
  3191 ;;  divisor         8    8[COMRAM] long long 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  sign            1   17[COMRAM] unsigned char 
  3194 ;;  counter         1   16[COMRAM] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  8    0[COMRAM] long long 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3204 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;Total ram usage:       18 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_dtoa
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text10
  3219   00370E                     __ptext10:
  3220                           	callstack 0
  3221   00370E                     ___aomod:
  3222                           	callstack 25
  3223   00370E  0E00               	movlw	0
  3224   003710  6E12               	movwf	___aomod@sign^0,c
  3225   003712  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3226   003714  EF90  F01B         	goto	u2530
  3227   003718  EF8E  F01B         	goto	u2531
  3228   00371C                     u2531:
  3229   00371C  EFA2  F01B         	goto	l3310
  3230   003720                     u2530:
  3231   003720  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3232   003722  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3233   003724  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3234   003726  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3235   003728  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3236   00372A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3237   00372C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3238   00372E  6C01               	negf	___aomod@dividend^0,c
  3239   003730  0E00               	movlw	0
  3240   003732  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3241   003734  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3242   003736  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3243   003738  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3244   00373A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3245   00373C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3246   00373E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3247   003740  0E01               	movlw	1
  3248   003742  6E12               	movwf	___aomod@sign^0,c
  3249   003744                     l3310:
  3250   003744  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3251   003746  EFA9  F01B         	goto	u2540
  3252   00374A  EFA7  F01B         	goto	u2541
  3253   00374E                     u2541:
  3254   00374E  EFB9  F01B         	goto	l3314
  3255   003752                     u2540:
  3256   003752  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3257   003754  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3258   003756  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3259   003758  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3260   00375A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3261   00375C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3262   00375E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3263   003760  6C09               	negf	___aomod@divisor^0,c
  3264   003762  0E00               	movlw	0
  3265   003764  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3266   003766  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3267   003768  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3268   00376A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3269   00376C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3270   00376E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3271   003770  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3272   003772                     l3314:
  3273   003772  5009               	movf	___aomod@divisor^0,w,c
  3274   003774  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3275   003776  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3276   003778  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3277   00377A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3278   00377C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3279   00377E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3280   003780  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3281   003782  B4D8               	btfsc	status,2,c
  3282   003784  EFC6  F01B         	goto	u2551
  3283   003788  EFC8  F01B         	goto	u2550
  3284   00378C                     u2551:
  3285   00378C  EF10  F01C         	goto	l3330
  3286   003790                     u2550:
  3287   003790  0E01               	movlw	1
  3288   003792  6E11               	movwf	___aomod@counter^0,c
  3289   003794  EFD6  F01B         	goto	l3320
  3290   003798                     l3318:
  3291   003798  90D8               	bcf	status,0,c
  3292   00379A  3609               	rlcf	___aomod@divisor^0,f,c
  3293   00379C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3294   00379E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3295   0037A0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3296   0037A2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3297   0037A4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3298   0037A6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3299   0037A8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3300   0037AA  2A11               	incf	___aomod@counter^0,f,c
  3301   0037AC                     l3320:
  3302   0037AC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3303   0037AE  EFDB  F01B         	goto	u2561
  3304   0037B2  EFDD  F01B         	goto	u2560
  3305   0037B6                     u2561:
  3306   0037B6  EFCC  F01B         	goto	l3318
  3307   0037BA                     u2560:
  3308   0037BA                     l3322:
  3309   0037BA  5009               	movf	___aomod@divisor^0,w,c
  3310   0037BC  5C01               	subwf	___aomod@dividend^0,w,c
  3311   0037BE  500A               	movf	(___aomod@divisor+1)^0,w,c
  3312   0037C0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3313   0037C2  500B               	movf	(___aomod@divisor+2)^0,w,c
  3314   0037C4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3315   0037C6  500C               	movf	(___aomod@divisor+3)^0,w,c
  3316   0037C8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3317   0037CA  500D               	movf	(___aomod@divisor+4)^0,w,c
  3318   0037CC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3319   0037CE  500E               	movf	(___aomod@divisor+5)^0,w,c
  3320   0037D0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3321   0037D2  500F               	movf	(___aomod@divisor+6)^0,w,c
  3322   0037D4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3323   0037D6  5010               	movf	(___aomod@divisor+7)^0,w,c
  3324   0037D8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3325   0037DA  A0D8               	btfss	status,0,c
  3326   0037DC  EFF2  F01B         	goto	u2571
  3327   0037E0  EFF4  F01B         	goto	u2570
  3328   0037E4                     u2571:
  3329   0037E4  EF04  F01C         	goto	l3326
  3330   0037E8                     u2570:
  3331   0037E8  5009               	movf	___aomod@divisor^0,w,c
  3332   0037EA  5E01               	subwf	___aomod@dividend^0,f,c
  3333   0037EC  500A               	movf	(___aomod@divisor+1)^0,w,c
  3334   0037EE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3335   0037F0  500B               	movf	(___aomod@divisor+2)^0,w,c
  3336   0037F2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3337   0037F4  500C               	movf	(___aomod@divisor+3)^0,w,c
  3338   0037F6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3339   0037F8  500D               	movf	(___aomod@divisor+4)^0,w,c
  3340   0037FA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3341   0037FC  500E               	movf	(___aomod@divisor+5)^0,w,c
  3342   0037FE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3343   003800  500F               	movf	(___aomod@divisor+6)^0,w,c
  3344   003802  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3345   003804  5010               	movf	(___aomod@divisor+7)^0,w,c
  3346   003806  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3347   003808                     l3326:
  3348   003808  90D8               	bcf	status,0,c
  3349   00380A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3350   00380C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3351   00380E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3352   003810  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3353   003812  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3354   003814  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3355   003816  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3356   003818  3209               	rrcf	___aomod@divisor^0,f,c
  3357   00381A  2E11               	decfsz	___aomod@counter^0,f,c
  3358   00381C  EFDD  F01B         	goto	l3322
  3359   003820                     l3330:
  3360   003820  5012               	movf	___aomod@sign^0,w,c
  3361   003822  B4D8               	btfsc	status,2,c
  3362   003824  EF16  F01C         	goto	u2581
  3363   003828  EF18  F01C         	goto	u2580
  3364   00382C                     u2581:
  3365   00382C  EF28  F01C         	goto	l3334
  3366   003830                     u2580:
  3367   003830  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3368   003832  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3369   003834  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3370   003836  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3371   003838  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3372   00383A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3373   00383C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3374   00383E  6C01               	negf	___aomod@dividend^0,c
  3375   003840  0E00               	movlw	0
  3376   003842  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3377   003844  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3378   003846  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3379   003848  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3380   00384A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3381   00384C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3382   00384E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3383   003850                     l3334:
  3384   003850  C001  F001         	movff	___aomod@dividend,?___aomod
  3385   003854  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3386   003858  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3387   00385C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3388   003860  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3389   003864  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3390   003868  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3391   00386C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3392   003870  0012               	return		;funcret
  3393   003872                     __end_of___aomod:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function ___aodiv *****************
  3397 ;; Defined at:
  3398 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  dividend        8    0[COMRAM] long long 
  3401 ;;  divisor         8    8[COMRAM] long long 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  quotient        8   18[COMRAM] long long 
  3404 ;;  sign            1   17[COMRAM] unsigned char 
  3405 ;;  counter         1   16[COMRAM] unsigned char 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  8    0[COMRAM] long long 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3415 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3416 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;Total ram usage:       26 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 1
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_dtoa
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text11
  3430   00341A                     __ptext11:
  3431                           	callstack 0
  3432   00341A                     ___aodiv:
  3433                           	callstack 25
  3434   00341A  0E00               	movlw	0
  3435   00341C  6E12               	movwf	___aodiv@sign^0,c
  3436   00341E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3437   003420  EF16  F01A         	goto	u2460
  3438   003424  EF14  F01A         	goto	u2461
  3439   003428                     u2461:
  3440   003428  EF28  F01A         	goto	l3266
  3441   00342C                     u2460:
  3442   00342C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3443   00342E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3444   003430  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3445   003432  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3446   003434  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3447   003436  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3448   003438  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3449   00343A  6C09               	negf	___aodiv@divisor^0,c
  3450   00343C  0E00               	movlw	0
  3451   00343E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3452   003440  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3453   003442  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3454   003444  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3455   003446  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3456   003448  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3457   00344A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3458   00344C  0E01               	movlw	1
  3459   00344E  6E12               	movwf	___aodiv@sign^0,c
  3460   003450                     l3266:
  3461   003450  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3462   003452  EF2F  F01A         	goto	u2470
  3463   003456  EF2D  F01A         	goto	u2471
  3464   00345A                     u2471:
  3465   00345A  EF41  F01A         	goto	l3272
  3466   00345E                     u2470:
  3467   00345E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3468   003460  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3469   003462  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3470   003464  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3471   003466  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3472   003468  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3473   00346A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3474   00346C  6C01               	negf	___aodiv@dividend^0,c
  3475   00346E  0E00               	movlw	0
  3476   003470  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3477   003472  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3478   003474  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3479   003476  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3480   003478  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3481   00347A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3482   00347C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3483   00347E  0E01               	movlw	1
  3484   003480  1A12               	xorwf	___aodiv@sign^0,f,c
  3485   003482                     l3272:
  3486   003482  EE20  F013         	lfsr	2,___aodiv@quotient
  3487   003486  0E07               	movlw	7
  3488   003488                     u2481:
  3489   003488  6ADE               	clrf	postinc2,c
  3490   00348A  06E8               	decf	wreg,f,c
  3491   00348C  E2FD               	bc	u2481
  3492   00348E  5009               	movf	___aodiv@divisor^0,w,c
  3493   003490  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3494   003492  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3495   003494  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3496   003496  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3497   003498  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3498   00349A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3499   00349C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3500   00349E  B4D8               	btfsc	status,2,c
  3501   0034A0  EF54  F01A         	goto	u2491
  3502   0034A4  EF56  F01A         	goto	u2490
  3503   0034A8                     u2491:
  3504   0034A8  EFA8  F01A         	goto	l3294
  3505   0034AC                     u2490:
  3506   0034AC  0E01               	movlw	1
  3507   0034AE  6E11               	movwf	___aodiv@counter^0,c
  3508   0034B0  EF64  F01A         	goto	l3280
  3509   0034B4                     l3278:
  3510   0034B4  90D8               	bcf	status,0,c
  3511   0034B6  3609               	rlcf	___aodiv@divisor^0,f,c
  3512   0034B8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3513   0034BA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3514   0034BC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3515   0034BE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3516   0034C0  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3517   0034C2  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3518   0034C4  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3519   0034C6  2A11               	incf	___aodiv@counter^0,f,c
  3520   0034C8                     l3280:
  3521   0034C8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3522   0034CA  EF69  F01A         	goto	u2501
  3523   0034CE  EF6B  F01A         	goto	u2500
  3524   0034D2                     u2501:
  3525   0034D2  EF5A  F01A         	goto	l3278
  3526   0034D6                     u2500:
  3527   0034D6                     l3282:
  3528   0034D6  90D8               	bcf	status,0,c
  3529   0034D8  3613               	rlcf	___aodiv@quotient^0,f,c
  3530   0034DA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3531   0034DC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3532   0034DE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3533   0034E0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3534   0034E2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3535   0034E4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3536   0034E6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3537   0034E8  5009               	movf	___aodiv@divisor^0,w,c
  3538   0034EA  5C01               	subwf	___aodiv@dividend^0,w,c
  3539   0034EC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3540   0034EE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3541   0034F0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3542   0034F2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3543   0034F4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3544   0034F6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3545   0034F8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3546   0034FA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3547   0034FC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3548   0034FE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3549   003500  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3550   003502  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3551   003504  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3552   003506  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3553   003508  A0D8               	btfss	status,0,c
  3554   00350A  EF89  F01A         	goto	u2511
  3555   00350E  EF8B  F01A         	goto	u2510
  3556   003512                     u2511:
  3557   003512  EF9C  F01A         	goto	l3290
  3558   003516                     u2510:
  3559   003516  5009               	movf	___aodiv@divisor^0,w,c
  3560   003518  5E01               	subwf	___aodiv@dividend^0,f,c
  3561   00351A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3562   00351C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3563   00351E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3564   003520  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3565   003522  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3566   003524  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3567   003526  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3568   003528  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3569   00352A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3570   00352C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3571   00352E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3572   003530  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3573   003532  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3574   003534  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3575   003536  8013               	bsf	___aodiv@quotient^0,0,c
  3576   003538                     l3290:
  3577   003538  90D8               	bcf	status,0,c
  3578   00353A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3579   00353C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3580   00353E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3581   003540  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3582   003542  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3583   003544  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3584   003546  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3585   003548  3209               	rrcf	___aodiv@divisor^0,f,c
  3586   00354A  2E11               	decfsz	___aodiv@counter^0,f,c
  3587   00354C  EF6B  F01A         	goto	l3282
  3588   003550                     l3294:
  3589   003550  5012               	movf	___aodiv@sign^0,w,c
  3590   003552  B4D8               	btfsc	status,2,c
  3591   003554  EFAE  F01A         	goto	u2521
  3592   003558  EFB0  F01A         	goto	u2520
  3593   00355C                     u2521:
  3594   00355C  EFC0  F01A         	goto	l3298
  3595   003560                     u2520:
  3596   003560  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3597   003562  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3598   003564  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3599   003566  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3600   003568  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3601   00356A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3602   00356C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3603   00356E  6C13               	negf	___aodiv@quotient^0,c
  3604   003570  0E00               	movlw	0
  3605   003572  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3606   003574  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3607   003576  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3608   003578  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3609   00357A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3610   00357C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3611   00357E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3612   003580                     l3298:
  3613   003580  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3614   003584  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3615   003588  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3616   00358C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3617   003590  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3618   003594  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3619   003598  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3620   00359C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3621   0035A0  0012               	return		;funcret
  3622   0035A2                     __end_of___aodiv:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function _sendStringSerial4 *****************
  3626 ;; Defined at:
  3627 ;;		line 33 in file "serial.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  string          2    1[COMRAM] PTR unsigned char 
  3630 ;;		 -> main@buf(100), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;Total ram usage:        2 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 2
  3649 ;; This function calls:
  3650 ;;		_sendCharSerial4
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text12
  3657   004AD4                     __ptext12:
  3658                           	callstack 0
  3659   004AD4                     _sendStringSerial4:
  3660                           	callstack 28
  3661   004AD4                     
  3662                           ;serial.c: 34:     while (*string!=0){
  3663   004AD4  EF75  F025         	goto	l4470
  3664   004AD8                     l4466:
  3665                           
  3666                           ;serial.c: 35:         sendCharSerial4(*string++);
  3667   004AD8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3668   004ADC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3669   004AE0  50DF               	movf	indf2,w,c
  3670   004AE2  EC00  F026         	call	_sendCharSerial4
  3671   004AE6  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3672   004AE8  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3673   004AEA                     l4470:
  3674                           
  3675                           ;serial.c: 34:     while (*string!=0){
  3676   004AEA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3677   004AEE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3678   004AF2  50DF               	movf	indf2,w,c
  3679   004AF4  A4D8               	btfss	status,2,c
  3680   004AF6  EF7F  F025         	goto	u4261
  3681   004AFA  EF81  F025         	goto	u4260
  3682   004AFE                     u4261:
  3683   004AFE  EF6C  F025         	goto	l4466
  3684   004B02                     u4260:
  3685   004B02  0012               	return		;funcret
  3686   004B04                     __end_of_sendStringSerial4:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _sendCharSerial4 *****************
  3690 ;; Defined at:
  3691 ;;		line 26 in file "serial.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  charToSend      1    wreg     unsigned char 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  charToSend      1    0[COMRAM] unsigned char 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;Total ram usage:        1 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 1
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_sendStringSerial4
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text13
  3720   004C00                     __ptext13:
  3721                           	callstack 0
  3722   004C00                     _sendCharSerial4:
  3723                           	callstack 28
  3724                           
  3725                           ;incstack = 0
  3726                           ;sendCharSerial4@charToSend stored from wreg
  3727   004C00  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3728   004C02                     l209:
  3729   004C02  010E               	movlb	14	; () banked
  3730   004C04  A537               	btfss	55,2,b	;volatile
  3731   004C06  EF07  F026         	goto	u3291
  3732   004C0A  EF09  F026         	goto	u3290
  3733   004C0E                     u3291:
  3734   004C0E  EF01  F026         	goto	l209
  3735   004C12                     u3290:
  3736   004C12                     
  3737                           ; BSR set to: 14
  3738                           ;serial.c: 28:     TX4REG = charToSend;
  3739   004C12  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3740   004C16                     
  3741                           ; BSR set to: 14
  3742   004C16  0012               	return		;funcret
  3743   004C18                     __end_of_sendCharSerial4:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _readColours *****************
  3747 ;; Defined at:
  3748 ;;		line 105 in file "color.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  vals            2   11[COMRAM] PTR struct RGB
  3751 ;;		 -> vals(8), 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;Total ram usage:        2 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 4
  3770 ;; This function calls:
  3771 ;;		_color_read_Blue
  3772 ;;		_color_read_Green
  3773 ;;		_color_read_Red
  3774 ;;		_color_read_lum
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text14
  3781   0042A8                     __ptext14:
  3782                           	callstack 0
  3783   0042A8                     _readColours:
  3784                           	callstack 26
  3785   0042A8                     
  3786                           ;color.c: 107:     vals ->R = color_read_Red();
  3787   0042A8  ECAD  F023         	call	_color_read_Red	;wreg free
  3788   0042AC  C00C  FFD9         	movff	readColours@vals,fsr2l
  3789   0042B0  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3790   0042B4  C005  FFDE         	movff	?_color_read_Red,postinc2
  3791   0042B8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3792                           
  3793                           ;color.c: 108:     vals ->B = color_read_Blue();
  3794   0042BC  ECFD  F023         	call	_color_read_Blue	;wreg free
  3795   0042C0  EE20 F004          	lfsr	2,4
  3796   0042C4  500C               	movf	readColours@vals^0,w,c
  3797   0042C6  26D9               	addwf	fsr2l,f,c
  3798   0042C8  500D               	movf	(readColours@vals+1)^0,w,c
  3799   0042CA  22DA               	addwfc	fsr2h,f,c
  3800   0042CC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3801   0042D0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3802                           
  3803                           ;color.c: 109:     vals ->G = color_read_Green();
  3804   0042D4  ECD5  F023         	call	_color_read_Green	;wreg free
  3805   0042D8  EE20 F002          	lfsr	2,2
  3806   0042DC  500C               	movf	readColours@vals^0,w,c
  3807   0042DE  26D9               	addwf	fsr2l,f,c
  3808   0042E0  500D               	movf	(readColours@vals+1)^0,w,c
  3809   0042E2  22DA               	addwfc	fsr2h,f,c
  3810   0042E4  C005  FFDE         	movff	?_color_read_Green,postinc2
  3811   0042E8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3812                           
  3813                           ;color.c: 110:     vals ->L = color_read_lum();
  3814   0042EC  EC85  F023         	call	_color_read_lum	;wreg free
  3815   0042F0  EE20 F006          	lfsr	2,6
  3816   0042F4  500C               	movf	readColours@vals^0,w,c
  3817   0042F6  26D9               	addwf	fsr2l,f,c
  3818   0042F8  500D               	movf	(readColours@vals+1)^0,w,c
  3819   0042FA  22DA               	addwfc	fsr2h,f,c
  3820   0042FC  C005  FFDE         	movff	?_color_read_lum,postinc2
  3821   004300  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3822   004304  0012               	return		;funcret
  3823   004306                     __end_of_readColours:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _color_read_lum *****************
  3827 ;; Defined at:
  3828 ;;		line 49 in file "color.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  tmp             2    9[COMRAM] unsigned int 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2    4[COMRAM] unsigned int 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;Total ram usage:        7 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 3
  3849 ;; This function calls:
  3850 ;;		_I2C_2_Master_Read
  3851 ;;		_I2C_2_Master_RepStart
  3852 ;;		_I2C_2_Master_Start
  3853 ;;		_I2C_2_Master_Stop
  3854 ;;		_I2C_2_Master_Write
  3855 ;; This function is called by:
  3856 ;;		_readColours
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text15
  3861   00470A                     __ptext15:
  3862                           	callstack 0
  3863   00470A                     _color_read_lum:
  3864                           	callstack 26
  3865   00470A                     
  3866                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3867   00470A  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  3868                           
  3869                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3870   00470E  0E52               	movlw	82
  3871   004710  EC0C  F026         	call	_I2C_2_Master_Write
  3872                           
  3873                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3874   004714  0EB4               	movlw	180
  3875   004716  EC0C  F026         	call	_I2C_2_Master_Write
  3876                           
  3877                           ;color.c: 55:  I2C_2_Master_RepStart();
  3878   00471A  EC12  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3879                           
  3880                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3881   00471E  0E53               	movlw	83
  3882   004720  EC0C  F026         	call	_I2C_2_Master_Write
  3883                           
  3884                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3885   004724  0E01               	movlw	1
  3886   004726  EC91  F024         	call	_I2C_2_Master_Read
  3887   00472A  6E07               	movwf	??_color_read_lum^0,c
  3888   00472C  5007               	movf	??_color_read_lum^0,w,c
  3889   00472E  6E0A               	movwf	color_read_lum@tmp^0,c
  3890   004730  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3891                           
  3892                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3893   004732  0E00               	movlw	0
  3894   004734  EC91  F024         	call	_I2C_2_Master_Read
  3895   004738  6E07               	movwf	??_color_read_lum^0,c
  3896   00473A  5007               	movf	??_color_read_lum^0,w,c
  3897   00473C  6E09               	movwf	(??_color_read_lum+2)^0,c
  3898   00473E  6A08               	clrf	(??_color_read_lum+1)^0,c
  3899   004740  500A               	movf	color_read_lum@tmp^0,w,c
  3900   004742  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3901   004744  6E0A               	movwf	color_read_lum@tmp^0,c
  3902   004746  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3903   004748  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3904   00474A  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3905                           
  3906                           ;color.c: 59:  I2C_2_Master_Stop();
  3907   00474C  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  3908   004750                     
  3909                           ;color.c: 60:  return tmp;
  3910   004750  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3911   004754  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3912   004758  0012               	return		;funcret
  3913   00475A                     __end_of_color_read_lum:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _color_read_Red *****************
  3917 ;; Defined at:
  3918 ;;		line 63 in file "color.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  tmp             2    9[COMRAM] unsigned int 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2    4[COMRAM] unsigned int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3934 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3935 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3936 ;;Total ram usage:        7 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; Hardware stack levels required when called: 3
  3939 ;; This function calls:
  3940 ;;		_I2C_2_Master_Read
  3941 ;;		_I2C_2_Master_RepStart
  3942 ;;		_I2C_2_Master_Start
  3943 ;;		_I2C_2_Master_Stop
  3944 ;;		_I2C_2_Master_Write
  3945 ;; This function is called by:
  3946 ;;		_readColours
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text16
  3951   00475A                     __ptext16:
  3952                           	callstack 0
  3953   00475A                     _color_read_Red:
  3954                           	callstack 26
  3955   00475A                     
  3956                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3957   00475A  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  3958                           
  3959                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3960   00475E  0E52               	movlw	82
  3961   004760  EC0C  F026         	call	_I2C_2_Master_Write
  3962                           
  3963                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3964   004764  0EB6               	movlw	182
  3965   004766  EC0C  F026         	call	_I2C_2_Master_Write
  3966                           
  3967                           ;color.c: 69:  I2C_2_Master_RepStart();
  3968   00476A  EC12  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3969                           
  3970                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3971   00476E  0E53               	movlw	83
  3972   004770  EC0C  F026         	call	_I2C_2_Master_Write
  3973                           
  3974                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3975   004774  0E01               	movlw	1
  3976   004776  EC91  F024         	call	_I2C_2_Master_Read
  3977   00477A  6E07               	movwf	??_color_read_Red^0,c
  3978   00477C  5007               	movf	??_color_read_Red^0,w,c
  3979   00477E  6E0A               	movwf	color_read_Red@tmp^0,c
  3980   004780  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3981                           
  3982                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3983   004782  0E00               	movlw	0
  3984   004784  EC91  F024         	call	_I2C_2_Master_Read
  3985   004788  6E07               	movwf	??_color_read_Red^0,c
  3986   00478A  5007               	movf	??_color_read_Red^0,w,c
  3987   00478C  6E09               	movwf	(??_color_read_Red+2)^0,c
  3988   00478E  6A08               	clrf	(??_color_read_Red+1)^0,c
  3989   004790  500A               	movf	color_read_Red@tmp^0,w,c
  3990   004792  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3991   004794  6E0A               	movwf	color_read_Red@tmp^0,c
  3992   004796  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3993   004798  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3994   00479A  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3995                           
  3996                           ;color.c: 73:  I2C_2_Master_Stop();
  3997   00479C  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  3998   0047A0                     
  3999                           ;color.c: 74:  return tmp;
  4000   0047A0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4001   0047A4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4002   0047A8  0012               	return		;funcret
  4003   0047AA                     __end_of_color_read_Red:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _color_read_Green *****************
  4007 ;; Defined at:
  4008 ;;		line 76 in file "color.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  tmp             2    9[COMRAM] unsigned int 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2    4[COMRAM] unsigned int 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;Total ram usage:        7 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 3
  4029 ;; This function calls:
  4030 ;;		_I2C_2_Master_Read
  4031 ;;		_I2C_2_Master_RepStart
  4032 ;;		_I2C_2_Master_Start
  4033 ;;		_I2C_2_Master_Stop
  4034 ;;		_I2C_2_Master_Write
  4035 ;; This function is called by:
  4036 ;;		_readColours
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text17
  4041   0047AA                     __ptext17:
  4042                           	callstack 0
  4043   0047AA                     _color_read_Green:
  4044                           	callstack 26
  4045   0047AA                     
  4046                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4047   0047AA  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  4048                           
  4049                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4050   0047AE  0E52               	movlw	82
  4051   0047B0  EC0C  F026         	call	_I2C_2_Master_Write
  4052                           
  4053                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4054   0047B4  0EB8               	movlw	184
  4055   0047B6  EC0C  F026         	call	_I2C_2_Master_Write
  4056                           
  4057                           ;color.c: 82:  I2C_2_Master_RepStart();
  4058   0047BA  EC12  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4059                           
  4060                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4061   0047BE  0E53               	movlw	83
  4062   0047C0  EC0C  F026         	call	_I2C_2_Master_Write
  4063                           
  4064                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4065   0047C4  0E01               	movlw	1
  4066   0047C6  EC91  F024         	call	_I2C_2_Master_Read
  4067   0047CA  6E07               	movwf	??_color_read_Green^0,c
  4068   0047CC  5007               	movf	??_color_read_Green^0,w,c
  4069   0047CE  6E0A               	movwf	color_read_Green@tmp^0,c
  4070   0047D0  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4071                           
  4072                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4073   0047D2  0E00               	movlw	0
  4074   0047D4  EC91  F024         	call	_I2C_2_Master_Read
  4075   0047D8  6E07               	movwf	??_color_read_Green^0,c
  4076   0047DA  5007               	movf	??_color_read_Green^0,w,c
  4077   0047DC  6E09               	movwf	(??_color_read_Green+2)^0,c
  4078   0047DE  6A08               	clrf	(??_color_read_Green+1)^0,c
  4079   0047E0  500A               	movf	color_read_Green@tmp^0,w,c
  4080   0047E2  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4081   0047E4  6E0A               	movwf	color_read_Green@tmp^0,c
  4082   0047E6  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4083   0047E8  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4084   0047EA  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4085                           
  4086                           ;color.c: 86:  I2C_2_Master_Stop();
  4087   0047EC  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  4088   0047F0                     
  4089                           ;color.c: 87:  return tmp;
  4090   0047F0  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4091   0047F4  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4092   0047F8  0012               	return		;funcret
  4093   0047FA                     __end_of_color_read_Green:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function _color_read_Blue *****************
  4097 ;; Defined at:
  4098 ;;		line 90 in file "color.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  tmp             2    9[COMRAM] unsigned int 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  2    4[COMRAM] unsigned int 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;Total ram usage:        7 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 3
  4119 ;; This function calls:
  4120 ;;		_I2C_2_Master_Read
  4121 ;;		_I2C_2_Master_RepStart
  4122 ;;		_I2C_2_Master_Start
  4123 ;;		_I2C_2_Master_Stop
  4124 ;;		_I2C_2_Master_Write
  4125 ;; This function is called by:
  4126 ;;		_readColours
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text18
  4131   0047FA                     __ptext18:
  4132                           	callstack 0
  4133   0047FA                     _color_read_Blue:
  4134                           	callstack 26
  4135   0047FA                     
  4136                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4137   0047FA  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  4138                           
  4139                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4140   0047FE  0E52               	movlw	82
  4141   004800  EC0C  F026         	call	_I2C_2_Master_Write
  4142                           
  4143                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4144   004804  0EBA               	movlw	186
  4145   004806  EC0C  F026         	call	_I2C_2_Master_Write
  4146                           
  4147                           ;color.c: 96:  I2C_2_Master_RepStart();
  4148   00480A  EC12  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4149                           
  4150                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4151   00480E  0E53               	movlw	83
  4152   004810  EC0C  F026         	call	_I2C_2_Master_Write
  4153                           
  4154                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4155   004814  0E01               	movlw	1
  4156   004816  EC91  F024         	call	_I2C_2_Master_Read
  4157   00481A  6E07               	movwf	??_color_read_Blue^0,c
  4158   00481C  5007               	movf	??_color_read_Blue^0,w,c
  4159   00481E  6E0A               	movwf	color_read_Blue@tmp^0,c
  4160   004820  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4161                           
  4162                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4163   004822  0E00               	movlw	0
  4164   004824  EC91  F024         	call	_I2C_2_Master_Read
  4165   004828  6E07               	movwf	??_color_read_Blue^0,c
  4166   00482A  5007               	movf	??_color_read_Blue^0,w,c
  4167   00482C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4168   00482E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4169   004830  500A               	movf	color_read_Blue@tmp^0,w,c
  4170   004832  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4171   004834  6E0A               	movwf	color_read_Blue@tmp^0,c
  4172   004836  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4173   004838  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4174   00483A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4175                           
  4176                           ;color.c: 100:  I2C_2_Master_Stop();
  4177   00483C  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  4178   004840                     
  4179                           ;color.c: 101:  return tmp;
  4180   004840  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4181   004844  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4182   004848  0012               	return		;funcret
  4183   00484A                     __end_of_color_read_Blue:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _I2C_2_Master_RepStart *****************
  4187 ;; Defined at:
  4188 ;;		line 33 in file "i2c.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;Total ram usage:        0 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 2
  4209 ;; This function calls:
  4210 ;;		_I2C_2_Master_Idle
  4211 ;; This function is called by:
  4212 ;;		_color_read_lum
  4213 ;;		_color_read_Red
  4214 ;;		_color_read_Green
  4215 ;;		_color_read_Blue
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text19
  4220   004C24                     __ptext19:
  4221                           	callstack 0
  4222   004C24                     _I2C_2_Master_RepStart:
  4223                           	callstack 26
  4224   004C24                     
  4225                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4226   004C24  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  4227   004C28                     
  4228                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4229   004C28  010E               	movlb	14	; () banked
  4230   004C2A  83DA               	bsf	218,1,b	;volatile
  4231   004C2C                     
  4232                           ; BSR set to: 14
  4233   004C2C  0012               	return		;funcret
  4234   004C2E                     __end_of_I2C_2_Master_RepStart:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _I2C_2_Master_Read *****************
  4238 ;; Defined at:
  4239 ;;		line 51 in file "i2c.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  ack             1    wreg     unsigned char 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  ack             1    2[COMRAM] unsigned char 
  4244 ;;  tmp             1    3[COMRAM] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      unsigned char 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;Total ram usage:        3 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 2
  4261 ;; This function calls:
  4262 ;;		_I2C_2_Master_Idle
  4263 ;; This function is called by:
  4264 ;;		_color_read_lum
  4265 ;;		_color_read_Red
  4266 ;;		_color_read_Green
  4267 ;;		_color_read_Blue
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text20
  4272   004922                     __ptext20:
  4273                           	callstack 0
  4274   004922                     _I2C_2_Master_Read:
  4275                           	callstack 26
  4276                           
  4277                           ; BSR set to: 14
  4278                           ;incstack = 0
  4279                           ;I2C_2_Master_Read@ack stored from wreg
  4280   004922  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4281   004924                     
  4282                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4283   004924  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  4284   004928                     
  4285                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4286   004928  010E               	movlb	14	; () banked
  4287   00492A  87DA               	bsf	218,3,b	;volatile
  4288                           
  4289                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4290   00492C  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  4291   004930                     
  4292                           ;i2c.c: 57:   tmp = SSP2BUF;
  4293   004930  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4294                           
  4295                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4296   004934  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  4297   004938                     
  4298                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4299   004938  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4300   00493A  B4D8               	btfsc	status,2,c
  4301   00493C  EFA2  F024         	goto	u2841
  4302   004940  EFA6  F024         	goto	u2840
  4303   004944                     u2841:
  4304   004944  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4305   004946  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4306   004948  EFA7  F024         	goto	u2858
  4307   00494C                     u2840:
  4308   00494C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4309   00494E                     u2858:
  4310   00494E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4311   004950  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4312   004952  010E               	movlb	14	; () banked
  4313   004954  51DA               	movf	218,w,b	;volatile
  4314   004956  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4315   004958  0BDF               	andlw	-33
  4316   00495A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4317   00495C  6FDA               	movwf	218,b	;volatile
  4318   00495E                     
  4319                           ; BSR set to: 14
  4320                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4321   00495E  89DA               	bsf	218,4,b	;volatile
  4322   004960                     
  4323                           ; BSR set to: 14
  4324                           ;i2c.c: 61:   return tmp;
  4325   004960  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4326   004962                     
  4327                           ; BSR set to: 14
  4328   004962  0012               	return		;funcret
  4329   004964                     __end_of_I2C_2_Master_Read:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _initUSART4 *****************
  4333 ;; Defined at:
  4334 ;;		line 4 in file "serial.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 1
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text21
  4363   004BE2                     __ptext21:
  4364                           	callstack 0
  4365   004BE2                     _initUSART4:
  4366                           	callstack 29
  4367   004BE2                     
  4368                           ;serial.c: 5:     RC0PPS = 0x12;
  4369   004BE2  0E12               	movlw	18
  4370   004BE4  010E               	movlb	14	; () banked
  4371   004BE6  6F62               	movwf	98,b	;volatile
  4372                           
  4373                           ;serial.c: 6:     RX4PPS = 0x11;
  4374   004BE8  0E11               	movlw	17
  4375   004BEA  6F15               	movwf	21,b	;volatile
  4376   004BEC                     
  4377                           ; BSR set to: 14
  4378                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4379   004BEC  97E9               	bcf	233,3,b	;volatile
  4380   004BEE                     
  4381                           ; BSR set to: 14
  4382                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4383   004BEE  95E8               	bcf	232,2,b	;volatile
  4384                           
  4385                           ;serial.c: 9:     SP4BRGL = 51;
  4386   004BF0  0E33               	movlw	51
  4387   004BF2  6FE5               	movwf	229,b	;volatile
  4388                           
  4389                           ;serial.c: 10:     SP4BRGH = 0;
  4390   004BF4  0E00               	movlw	0
  4391   004BF6  6FE6               	movwf	230,b	;volatile
  4392   004BF8                     
  4393                           ; BSR set to: 14
  4394                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4395   004BF8  89E7               	bsf	231,4,b	;volatile
  4396   004BFA                     
  4397                           ; BSR set to: 14
  4398                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4399   004BFA  8BE8               	bsf	232,5,b	;volatile
  4400   004BFC                     
  4401                           ; BSR set to: 14
  4402                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4403   004BFC  8FE7               	bsf	231,7,b	;volatile
  4404   004BFE                     
  4405                           ; BSR set to: 14
  4406   004BFE  0012               	return		;funcret
  4407   004C00                     __end_of_initUSART4:
  4408                           	callstack 0
  4409                           
  4410 ;; *************** function _initDCmotorsPWM *****************
  4411 ;; Defined at:
  4412 ;;		line 5 in file "dc_motor.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;Total ram usage:        2 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_main
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text22
  4441   003F5C                     __ptext22:
  4442                           	callstack 0
  4443   003F5C                     _initDCmotorsPWM:
  4444                           	callstack 29
  4445   003F5C                     
  4446                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4447   003F5C  0E05               	movlw	5
  4448   003F5E  010E               	movlb	14	; () banked
  4449   003F60  6F74               	movwf	116,b	;volatile
  4450                           
  4451                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4452   003F62  0E06               	movlw	6
  4453   003F64  6F76               	movwf	118,b	;volatile
  4454                           
  4455                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4456   003F66  0E07               	movlw	7
  4457   003F68  6F69               	movwf	105,b	;volatile
  4458                           
  4459                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4460   003F6A  0E08               	movlw	8
  4461   003F6C  6F88               	movwf	136,b	;volatile
  4462   003F6E                     
  4463                           ; BSR set to: 14
  4464                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  4465   003F6E  9485               	bcf	133,2,c	;volatile
  4466   003F70                     
  4467                           ; BSR set to: 14
  4468                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  4469   003F70  9885               	bcf	133,4,c	;volatile
  4470   003F72                     
  4471                           ; BSR set to: 14
  4472                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  4473   003F72  9E83               	bcf	131,7,c	;volatile
  4474   003F74                     
  4475                           ; BSR set to: 14
  4476                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4477   003F74  9C87               	bcf	135,6,c	;volatile
  4478                           
  4479                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  4480   003F76  50BD               	movf	189,w,c	;volatile
  4481   003F78  0B8F               	andlw	-113
  4482   003F7A  0930               	iorlw	48
  4483   003F7C  6EBD               	movwf	189,c	;volatile
  4484                           
  4485                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  4486   003F7E  0EE0               	movlw	-32
  4487   003F80  16BE               	andwf	190,f,c	;volatile
  4488                           
  4489                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  4490   003F82  50BF               	movf	191,w,c	;volatile
  4491   003F84  0BF0               	andlw	-16
  4492   003F86  0901               	iorlw	1
  4493   003F88  6EBF               	movwf	191,c	;volatile
  4494   003F8A                     
  4495                           ; BSR set to: 14
  4496                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  4497   003F8A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4498   003F8E                     
  4499                           ; BSR set to: 14
  4500                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  4501   003F8E  8EBD               	bsf	189,7,c	;volatile
  4502                           
  4503                           ;dc_motor.c: 33:     CCPR1H=0;
  4504   003F90  0E00               	movlw	0
  4505   003F92  6EAA               	movwf	170,c	;volatile
  4506                           
  4507                           ;dc_motor.c: 34:     CCPR2H=0;
  4508   003F94  0E00               	movlw	0
  4509   003F96  6EA6               	movwf	166,c	;volatile
  4510                           
  4511                           ;dc_motor.c: 35:     CCPR3H=0;
  4512   003F98  0E00               	movlw	0
  4513   003F9A  010F               	movlb	15	; () banked
  4514   003F9C  6F25               	movwf	37,b	;volatile
  4515                           
  4516                           ;dc_motor.c: 36:     CCPR4H=0;
  4517   003F9E  0E00               	movlw	0
  4518   003FA0  6F21               	movwf	33,b	;volatile
  4519                           
  4520                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  4521   003FA2  0EFC               	movlw	-4
  4522   003FA4  16AD               	andwf	173,f,c	;volatile
  4523                           
  4524                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4525   003FA6  0EF3               	movlw	-13
  4526   003FA8  16AD               	andwf	173,f,c	;volatile
  4527                           
  4528                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4529   003FAA  0ECF               	movlw	-49
  4530   003FAC  16AD               	andwf	173,f,c	;volatile
  4531                           
  4532                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4533   003FAE  0E3F               	movlw	-193
  4534   003FB0  16AD               	andwf	173,f,c	;volatile
  4535   003FB2                     
  4536                           ; BSR set to: 15
  4537                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4538   003FB2  88AB               	bsf	171,4,c	;volatile
  4539                           
  4540                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4541   003FB4  50AB               	movf	171,w,c	;volatile
  4542   003FB6  0BF0               	andlw	-16
  4543   003FB8  090C               	iorlw	12
  4544   003FBA  6EAB               	movwf	171,c	;volatile
  4545   003FBC                     
  4546                           ; BSR set to: 15
  4547                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4548   003FBC  8EAB               	bsf	171,7,c	;volatile
  4549   003FBE                     
  4550                           ; BSR set to: 15
  4551                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4552   003FBE  88A7               	bsf	167,4,c	;volatile
  4553                           
  4554                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4555   003FC0  50A7               	movf	167,w,c	;volatile
  4556   003FC2  0BF0               	andlw	-16
  4557   003FC4  090C               	iorlw	12
  4558   003FC6  6EA7               	movwf	167,c	;volatile
  4559   003FC8                     
  4560                           ; BSR set to: 15
  4561                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4562   003FC8  8EA7               	bsf	167,7,c	;volatile
  4563   003FCA                     
  4564                           ; BSR set to: 15
  4565                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4566   003FCA  8926               	bsf	38,4,b	;volatile
  4567                           
  4568                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4569   003FCC  5126               	movf	38,w,b	;volatile
  4570   003FCE  0BF0               	andlw	-16
  4571   003FD0  090C               	iorlw	12
  4572   003FD2  6F26               	movwf	38,b	;volatile
  4573   003FD4                     
  4574                           ; BSR set to: 15
  4575                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4576   003FD4  8F26               	bsf	38,7,b	;volatile
  4577   003FD6                     
  4578                           ; BSR set to: 15
  4579                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4580   003FD6  8922               	bsf	34,4,b	;volatile
  4581                           
  4582                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4583   003FD8  5122               	movf	34,w,b	;volatile
  4584   003FDA  0BF0               	andlw	-16
  4585   003FDC  090C               	iorlw	12
  4586   003FDE  6F22               	movwf	34,b	;volatile
  4587   003FE0                     
  4588                           ; BSR set to: 15
  4589                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4590   003FE0  8F22               	bsf	34,7,b	;volatile
  4591   003FE2                     
  4592                           ; BSR set to: 15
  4593   003FE2  0012               	return		;funcret
  4594   003FE4                     __end_of_initDCmotorsPWM:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function _go_Home *****************
  4598 ;; Defined at:
  4599 ;;		line 4 in file "Memory.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  4602 ;;		 -> WayBack(50), 
  4603 ;;  Time_forward    2   37[COMRAM] PTR int 
  4604 ;;		 -> Time_forward(100), 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  i               2   42[COMRAM] int 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;Total ram usage:        9 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 6
  4623 ;; This function calls:
  4624 ;;		_BlueMove
  4625 ;;		_GreenMove
  4626 ;;		_LightBlueMove
  4627 ;;		_OrangeMove
  4628 ;;		_RedMove
  4629 ;;		_ReversePink
  4630 ;;		_ReverseYellow
  4631 ;;		_timed_forward
  4632 ;; This function is called by:
  4633 ;;		_main
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text23
  4638   003046                     __ptext23:
  4639                           	callstack 0
  4640   003046                     _go_Home:
  4641                           	callstack 24
  4642   003046                     
  4643                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  4644   003046  C0F2  F02B         	movff	_move_count,go_Home@i	;volatile
  4645   00304A  C0F3  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  4646   00304E                     l4562:
  4647   00304E  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  4648   003050  EF2E  F018         	goto	u4300
  4649   003054  EF2C  F018         	goto	u4301
  4650   003058                     u4301:
  4651   003058  EF30  F018         	goto	l4566
  4652   00305C                     u4300:
  4653   00305C  EF32  F019         	goto	l641
  4654   003060                     l4566:
  4655                           
  4656                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  4657   003060  0EF5               	movlw	low _motorL
  4658   003062  6E14               	movwf	timed_forward@mL^0,c
  4659   003064  0E00               	movlw	high _motorL
  4660   003066  6E15               	movwf	(timed_forward@mL+1)^0,c
  4661   003068  0EBE               	movlw	low _motorR
  4662   00306A  6E16               	movwf	timed_forward@mR^0,c
  4663   00306C  0E01               	movlw	high _motorR
  4664   00306E  6E17               	movwf	(timed_forward@mR+1)^0,c
  4665   003070  90D8               	bcf	status,0,c
  4666   003072  342B               	rlcf	go_Home@i^0,w,c
  4667   003074  6ED9               	movwf	fsr2l,c
  4668   003076  342C               	rlcf	(go_Home@i+1)^0,w,c
  4669   003078  6EDA               	movwf	fsr2h,c
  4670   00307A  5026               	movf	go_Home@Time_forward^0,w,c
  4671   00307C  26D9               	addwf	fsr2l,f,c
  4672   00307E  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  4673   003080  22DA               	addwfc	fsr2h,f,c
  4674   003082  CFDE F018          	movff	postinc2,timed_forward@time
  4675   003086  CFDD F019          	movff	postdec2,timed_forward@time+1
  4676   00308A  ECC8  F01D         	call	_timed_forward	;wreg free
  4677   00308E                     
  4678                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  4679   00308E  502B               	movf	go_Home@i^0,w,c
  4680   003090  2424               	addwf	go_Home@WayBack^0,w,c
  4681   003092  6E28               	movwf	??_go_Home^0,c
  4682   003094  502C               	movf	(go_Home@i+1)^0,w,c
  4683   003096  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4684   003098  6E29               	movwf	(??_go_Home+1)^0,c
  4685   00309A  0EFF               	movlw	255
  4686   00309C  2428               	addwf	??_go_Home^0,w,c
  4687   00309E  6ED9               	movwf	fsr2l,c
  4688   0030A0  0EFF               	movlw	255
  4689   0030A2  2029               	addwfc	(??_go_Home+1)^0,w,c
  4690   0030A4  6EDA               	movwf	fsr2h,c
  4691   0030A6  04DE               	decf	postinc2,w,c
  4692   0030A8  A4D8               	btfss	status,2,c
  4693   0030AA  EF59  F018         	goto	u4311
  4694   0030AE  EF5B  F018         	goto	u4310
  4695   0030B2                     u4311:
  4696   0030B2  EF67  F018         	goto	l4572
  4697   0030B6                     u4310:
  4698   0030B6                     
  4699                           ;Memory.c: 22:             GreenMove(&motorL, &motorR);
  4700   0030B6  0EF5               	movlw	low _motorL
  4701   0030B8  6E20               	movwf	GreenMove@mL^0,c
  4702   0030BA  0E00               	movlw	high _motorL
  4703   0030BC  6E21               	movwf	(GreenMove@mL+1)^0,c
  4704   0030BE  0EBE               	movlw	low _motorR
  4705   0030C0  6E22               	movwf	GreenMove@mR^0,c
  4706   0030C2  0E01               	movlw	high _motorR
  4707   0030C4  6E23               	movwf	(GreenMove@mR+1)^0,c
  4708   0030C6  EC2F  F025         	call	_GreenMove	;wreg free
  4709                           
  4710                           ;Memory.c: 23:         }
  4711   0030CA  EF2D  F019         	goto	l4596
  4712   0030CE                     l4572:
  4713   0030CE  502B               	movf	go_Home@i^0,w,c
  4714   0030D0  2424               	addwf	go_Home@WayBack^0,w,c
  4715   0030D2  6E28               	movwf	??_go_Home^0,c
  4716   0030D4  502C               	movf	(go_Home@i+1)^0,w,c
  4717   0030D6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4718   0030D8  6E29               	movwf	(??_go_Home+1)^0,c
  4719   0030DA  0EFF               	movlw	255
  4720   0030DC  2428               	addwf	??_go_Home^0,w,c
  4721   0030DE  6ED9               	movwf	fsr2l,c
  4722   0030E0  0EFF               	movlw	255
  4723   0030E2  2029               	addwfc	(??_go_Home+1)^0,w,c
  4724   0030E4  6EDA               	movwf	fsr2h,c
  4725   0030E6  0E02               	movlw	2
  4726   0030E8  18DE               	xorwf	postinc2,w,c
  4727   0030EA  A4D8               	btfss	status,2,c
  4728   0030EC  EF7A  F018         	goto	u4321
  4729   0030F0  EF7C  F018         	goto	u4320
  4730   0030F4                     u4321:
  4731   0030F4  EF88  F018         	goto	l4576
  4732   0030F8                     u4320:
  4733   0030F8                     
  4734                           ;Memory.c: 25:             LightBlueMove(&motorL, &motorR);
  4735   0030F8  0EF5               	movlw	low _motorL
  4736   0030FA  6E20               	movwf	LightBlueMove@mL^0,c
  4737   0030FC  0E00               	movlw	high _motorL
  4738   0030FE  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  4739   003100  0EBE               	movlw	low _motorR
  4740   003102  6E22               	movwf	LightBlueMove@mR^0,c
  4741   003104  0E01               	movlw	high _motorR
  4742   003106  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  4743   003108  ECE1  F022         	call	_LightBlueMove	;wreg free
  4744                           
  4745                           ;Memory.c: 26:         }
  4746   00310C  EF2D  F019         	goto	l4596
  4747   003110                     l4576:
  4748   003110  502B               	movf	go_Home@i^0,w,c
  4749   003112  2424               	addwf	go_Home@WayBack^0,w,c
  4750   003114  6E28               	movwf	??_go_Home^0,c
  4751   003116  502C               	movf	(go_Home@i+1)^0,w,c
  4752   003118  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4753   00311A  6E29               	movwf	(??_go_Home+1)^0,c
  4754   00311C  0EFF               	movlw	255
  4755   00311E  2428               	addwf	??_go_Home^0,w,c
  4756   003120  6ED9               	movwf	fsr2l,c
  4757   003122  0EFF               	movlw	255
  4758   003124  2029               	addwfc	(??_go_Home+1)^0,w,c
  4759   003126  6EDA               	movwf	fsr2h,c
  4760   003128  0E03               	movlw	3
  4761   00312A  18DE               	xorwf	postinc2,w,c
  4762   00312C  A4D8               	btfss	status,2,c
  4763   00312E  EF9B  F018         	goto	u4331
  4764   003132  EF9D  F018         	goto	u4330
  4765   003136                     u4331:
  4766   003136  EFA9  F018         	goto	l4580
  4767   00313A                     u4330:
  4768   00313A                     
  4769                           ;Memory.c: 28:             ReverseYellow(&motorL, &motorR);
  4770   00313A  0EF5               	movlw	low _motorL
  4771   00313C  6E20               	movwf	ReverseYellow@mL^0,c
  4772   00313E  0E00               	movlw	high _motorL
  4773   003140  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  4774   003142  0EBE               	movlw	low _motorR
  4775   003144  6E22               	movwf	ReverseYellow@mR^0,c
  4776   003146  0E01               	movlw	high _motorR
  4777   003148  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  4778   00314A  ECD2  F024         	call	_ReverseYellow	;wreg free
  4779                           
  4780                           ;Memory.c: 29:         }
  4781   00314E  EF2D  F019         	goto	l4596
  4782   003152                     l4580:
  4783   003152  502B               	movf	go_Home@i^0,w,c
  4784   003154  2424               	addwf	go_Home@WayBack^0,w,c
  4785   003156  6E28               	movwf	??_go_Home^0,c
  4786   003158  502C               	movf	(go_Home@i+1)^0,w,c
  4787   00315A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4788   00315C  6E29               	movwf	(??_go_Home+1)^0,c
  4789   00315E  0EFF               	movlw	255
  4790   003160  2428               	addwf	??_go_Home^0,w,c
  4791   003162  6ED9               	movwf	fsr2l,c
  4792   003164  0EFF               	movlw	255
  4793   003166  2029               	addwfc	(??_go_Home+1)^0,w,c
  4794   003168  6EDA               	movwf	fsr2h,c
  4795   00316A  0E04               	movlw	4
  4796   00316C  18DE               	xorwf	postinc2,w,c
  4797   00316E  A4D8               	btfss	status,2,c
  4798   003170  EFBC  F018         	goto	u4341
  4799   003174  EFBE  F018         	goto	u4340
  4800   003178                     u4341:
  4801   003178  EFCA  F018         	goto	l4584
  4802   00317C                     u4340:
  4803   00317C                     
  4804                           ;Memory.c: 31:             BlueMove(&motorL, &motorR);
  4805   00317C  0EF5               	movlw	low _motorL
  4806   00317E  6E20               	movwf	BlueMove@mL^0,c
  4807   003180  0E00               	movlw	high _motorL
  4808   003182  6E21               	movwf	(BlueMove@mL+1)^0,c
  4809   003184  0EBE               	movlw	low _motorR
  4810   003186  6E22               	movwf	BlueMove@mR^0,c
  4811   003188  0E01               	movlw	high _motorR
  4812   00318A  6E23               	movwf	(BlueMove@mR+1)^0,c
  4813   00318C  EC21  F021         	call	_BlueMove	;wreg free
  4814                           
  4815                           ;Memory.c: 32:         }
  4816   003190  EF2D  F019         	goto	l4596
  4817   003194                     l4584:
  4818   003194  502B               	movf	go_Home@i^0,w,c
  4819   003196  2424               	addwf	go_Home@WayBack^0,w,c
  4820   003198  6E28               	movwf	??_go_Home^0,c
  4821   00319A  502C               	movf	(go_Home@i+1)^0,w,c
  4822   00319C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4823   00319E  6E29               	movwf	(??_go_Home+1)^0,c
  4824   0031A0  0EFF               	movlw	255
  4825   0031A2  2428               	addwf	??_go_Home^0,w,c
  4826   0031A4  6ED9               	movwf	fsr2l,c
  4827   0031A6  0EFF               	movlw	255
  4828   0031A8  2029               	addwfc	(??_go_Home+1)^0,w,c
  4829   0031AA  6EDA               	movwf	fsr2h,c
  4830   0031AC  0E05               	movlw	5
  4831   0031AE  18DE               	xorwf	postinc2,w,c
  4832   0031B0  A4D8               	btfss	status,2,c
  4833   0031B2  EFDD  F018         	goto	u4351
  4834   0031B6  EFDF  F018         	goto	u4350
  4835   0031BA                     u4351:
  4836   0031BA  EFEB  F018         	goto	l4588
  4837   0031BE                     u4350:
  4838   0031BE                     
  4839                           ;Memory.c: 34:             RedMove(&motorL, &motorR);
  4840   0031BE  0EF5               	movlw	low _motorL
  4841   0031C0  6E20               	movwf	RedMove@mL^0,c
  4842   0031C2  0E00               	movlw	high _motorL
  4843   0031C4  6E21               	movwf	(RedMove@mL+1)^0,c
  4844   0031C6  0EBE               	movlw	low _motorR
  4845   0031C8  6E22               	movwf	RedMove@mR^0,c
  4846   0031CA  0E01               	movlw	high _motorR
  4847   0031CC  6E23               	movwf	(RedMove@mR+1)^0,c
  4848   0031CE  EC10  F025         	call	_RedMove	;wreg free
  4849                           
  4850                           ;Memory.c: 35:         }
  4851   0031D2  EF2D  F019         	goto	l4596
  4852   0031D6                     l4588:
  4853   0031D6  502B               	movf	go_Home@i^0,w,c
  4854   0031D8  2424               	addwf	go_Home@WayBack^0,w,c
  4855   0031DA  6E28               	movwf	??_go_Home^0,c
  4856   0031DC  502C               	movf	(go_Home@i+1)^0,w,c
  4857   0031DE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4858   0031E0  6E29               	movwf	(??_go_Home+1)^0,c
  4859   0031E2  0EFF               	movlw	255
  4860   0031E4  2428               	addwf	??_go_Home^0,w,c
  4861   0031E6  6ED9               	movwf	fsr2l,c
  4862   0031E8  0EFF               	movlw	255
  4863   0031EA  2029               	addwfc	(??_go_Home+1)^0,w,c
  4864   0031EC  6EDA               	movwf	fsr2h,c
  4865   0031EE  0E06               	movlw	6
  4866   0031F0  18DE               	xorwf	postinc2,w,c
  4867   0031F2  A4D8               	btfss	status,2,c
  4868   0031F4  EFFE  F018         	goto	u4361
  4869   0031F8  EF00  F019         	goto	u4360
  4870   0031FC                     u4361:
  4871   0031FC  EF0C  F019         	goto	l4592
  4872   003200                     u4360:
  4873   003200                     
  4874                           ;Memory.c: 37:             OrangeMove(&motorL, &motorR);
  4875   003200  0EF5               	movlw	low _motorL
  4876   003202  6E20               	movwf	OrangeMove@mL^0,c
  4877   003204  0E00               	movlw	high _motorL
  4878   003206  6E21               	movwf	(OrangeMove@mL+1)^0,c
  4879   003208  0EBE               	movlw	low _motorR
  4880   00320A  6E22               	movwf	OrangeMove@mR^0,c
  4881   00320C  0E01               	movlw	high _motorR
  4882   00320E  6E23               	movwf	(OrangeMove@mR+1)^0,c
  4883   003210  ECB8  F022         	call	_OrangeMove	;wreg free
  4884                           
  4885                           ;Memory.c: 38:         }
  4886   003214  EF2D  F019         	goto	l4596
  4887   003218                     l4592:
  4888   003218  502B               	movf	go_Home@i^0,w,c
  4889   00321A  2424               	addwf	go_Home@WayBack^0,w,c
  4890   00321C  6E28               	movwf	??_go_Home^0,c
  4891   00321E  502C               	movf	(go_Home@i+1)^0,w,c
  4892   003220  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4893   003222  6E29               	movwf	(??_go_Home+1)^0,c
  4894   003224  0EFF               	movlw	255
  4895   003226  2428               	addwf	??_go_Home^0,w,c
  4896   003228  6ED9               	movwf	fsr2l,c
  4897   00322A  0EFF               	movlw	255
  4898   00322C  2029               	addwfc	(??_go_Home+1)^0,w,c
  4899   00322E  6EDA               	movwf	fsr2h,c
  4900   003230  0E07               	movlw	7
  4901   003232  18DE               	xorwf	postinc2,w,c
  4902   003234  A4D8               	btfss	status,2,c
  4903   003236  EF1F  F019         	goto	u4371
  4904   00323A  EF21  F019         	goto	u4370
  4905   00323E                     u4371:
  4906   00323E  EF2D  F019         	goto	l635
  4907   003242                     u4370:
  4908   003242                     
  4909                           ;Memory.c: 40:             ReversePink(&motorL, &motorR);
  4910   003242  0EF5               	movlw	low _motorL
  4911   003244  6E20               	movwf	ReversePink@mL^0,c
  4912   003246  0E00               	movlw	high _motorL
  4913   003248  6E21               	movwf	(ReversePink@mL+1)^0,c
  4914   00324A  0EBE               	movlw	low _motorR
  4915   00324C  6E22               	movwf	ReversePink@mR^0,c
  4916   00324E  0E01               	movlw	high _motorR
  4917   003250  6E23               	movwf	(ReversePink@mR+1)^0,c
  4918   003252  ECF1  F024         	call	_ReversePink	;wreg free
  4919   003256  EF2D  F019         	goto	l4596
  4920   00325A                     l635:
  4921   00325A                     l4596:
  4922                           
  4923                           ;Memory.c: 44:   }
  4924   00325A  062B               	decf	go_Home@i^0,f,c
  4925   00325C  A0D8               	btfss	status,0,c
  4926   00325E  062C               	decf	(go_Home@i+1)^0,f,c
  4927   003260  EF27  F018         	goto	l4562
  4928   003264                     l641:
  4929   003264  0012               	return		;funcret
  4930   003266                     __end_of_go_Home:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _timed_forward *****************
  4934 ;; Defined at:
  4935 ;;		line 164 in file "dc_motor.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  4938 ;;		 -> motorL(9), 
  4939 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  4940 ;;		 -> motorR(9), 
  4941 ;;  time            2   23[COMRAM] int 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4953 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;Total ram usage:        8 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 3
  4960 ;; This function calls:
  4961 ;;		_delayed_ms
  4962 ;;		_setMotorPWM
  4963 ;; This function is called by:
  4964 ;;		_go_Home
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text24
  4969   003B90                     __ptext24:
  4970                           	callstack 0
  4971   003B90                     _timed_forward:
  4972                           	callstack 26
  4973   003B90                     
  4974                           ;dc_motor.c: 164: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 165: {;dc_motor.c: 167:     mL->direction =1;
  4975   003B90  EE20 F001          	lfsr	2,1
  4976   003B94  5014               	movf	timed_forward@mL^0,w,c
  4977   003B96  26D9               	addwf	fsr2l,f,c
  4978   003B98  5015               	movf	(timed_forward@mL+1)^0,w,c
  4979   003B9A  22DA               	addwfc	fsr2h,f,c
  4980   003B9C  0E01               	movlw	1
  4981   003B9E  6EDF               	movwf	indf2,c
  4982                           
  4983                           ;dc_motor.c: 168:     mR->direction =1;
  4984   003BA0  EE20 F001          	lfsr	2,1
  4985   003BA4  5016               	movf	timed_forward@mR^0,w,c
  4986   003BA6  26D9               	addwf	fsr2l,f,c
  4987   003BA8  5017               	movf	(timed_forward@mR+1)^0,w,c
  4988   003BAA  22DA               	addwfc	fsr2h,f,c
  4989   003BAC  0E01               	movlw	1
  4990   003BAE  6EDF               	movwf	indf2,c
  4991                           
  4992                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  4993   003BB0  EFFE  F01D         	goto	l3836
  4994   003BB4                     l3828:
  4995                           
  4996                           ;dc_motor.c: 171:         mL->power+=10;
  4997   003BB4  C014  FFD9         	movff	timed_forward@mL,fsr2l
  4998   003BB8  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  4999   003BBC  0E0A               	movlw	10
  5000   003BBE  26DF               	addwf	indf2,f,c
  5001                           
  5002                           ;dc_motor.c: 172:         mR->power+=10;
  5003   003BC0  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5004   003BC4  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5005   003BC8  0E0A               	movlw	10
  5006   003BCA  26DF               	addwf	indf2,f,c
  5007   003BCC                     
  5008                           ;dc_motor.c: 174:         setMotorPWM(mL);
  5009   003BCC  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  5010   003BD0  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  5011   003BD4  ECD1  F01A         	call	_setMotorPWM	;wreg free
  5012   003BD8                     
  5013                           ;dc_motor.c: 175:         setMotorPWM(mR);
  5014   003BD8  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  5015   003BDC  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  5016   003BE0  ECD1  F01A         	call	_setMotorPWM	;wreg free
  5017   003BE4                     
  5018                           ;dc_motor.c: 178:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5019   003BE4  0E02               	movlw	2
  5020   003BE6  6E1B               	movwf	(??_timed_forward+1)^0,c
  5021   003BE8  0EA0               	movlw	160
  5022   003BEA  6E1A               	movwf	??_timed_forward^0,c
  5023   003BEC  0E92               	movlw	146
  5024   003BEE                     u4737:
  5025   003BEE  2EE8               	decfsz	wreg,f,c
  5026   003BF0  D7FE               	bra	u4737
  5027   003BF2  2E1A               	decfsz	??_timed_forward^0,f,c
  5028   003BF4  D7FC               	bra	u4737
  5029   003BF6  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  5030   003BF8  D7FA               	bra	u4737
  5031   003BFA  D000               	nop2	
  5032   003BFC                     l3836:
  5033   003BFC  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5034   003C00  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5035   003C04  0E1E               	movlw	30
  5036   003C06  60DF               	cpfslt	indf2,c
  5037   003C08  EF08  F01E         	goto	u3301
  5038   003C0C  EF0A  F01E         	goto	u3300
  5039   003C10                     u3301:
  5040   003C10  EF16  F01E         	goto	l3840
  5041   003C14                     u3300:
  5042   003C14  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5043   003C18  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5044   003C1C  0E1D               	movlw	29
  5045   003C1E  64DF               	cpfsgt	indf2,c
  5046   003C20  EF14  F01E         	goto	u3311
  5047   003C24  EF16  F01E         	goto	u3310
  5048   003C28                     u3311:
  5049   003C28  EFDA  F01D         	goto	l3828
  5050   003C2C                     u3310:
  5051   003C2C                     l3840:
  5052                           
  5053                           ;dc_motor.c: 180:     delayed_ms(time);
  5054   003C2C  C018  F001         	movff	timed_forward@time,delayed_ms@time
  5055   003C30  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  5056   003C34  EC4E  F025         	call	_delayed_ms	;wreg free
  5057   003C38  0012               	return		;funcret
  5058   003C3A                     __end_of_timed_forward:
  5059                           	callstack 0
  5060                           
  5061 ;; *************** function _delayed_ms *****************
  5062 ;; Defined at:
  5063 ;;		line 39 in file "timers.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  time            2    0[COMRAM] int 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;  i               2    3[COMRAM] unsigned int 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5079 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5080 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5081 ;;Total ram usage:        5 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; Hardware stack levels required when called: 1
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		_timed_forward
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text25
  5092   004A9C                     __ptext25:
  5093                           	callstack 0
  5094   004A9C                     _delayed_ms:
  5095                           	callstack 27
  5096   004A9C                     
  5097                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  5098   004A9C  0E00               	movlw	0
  5099   004A9E  6E05               	movwf	(delayed_ms@i+1)^0,c
  5100   004AA0  0E00               	movlw	0
  5101   004AA2  6E04               	movwf	delayed_ms@i^0,c
  5102   004AA4  EF5E  F025         	goto	l670
  5103   004AA8                     l3514:
  5104                           
  5105                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5106   004AA8  0E15               	movlw	21
  5107   004AAA  6E03               	movwf	??_delayed_ms^0,c
  5108   004AAC  0EC6               	movlw	198
  5109   004AAE                     u4747:
  5110   004AAE  2EE8               	decfsz	wreg,f,c
  5111   004AB0  D7FE               	bra	u4747
  5112   004AB2  2E03               	decfsz	??_delayed_ms^0,f,c
  5113   004AB4  D7FC               	bra	u4747
  5114   004AB6  D000               	nop2	
  5115   004AB8                     
  5116                           ;timers.c: 42:     }
  5117   004AB8  4A04               	infsnz	delayed_ms@i^0,f,c
  5118   004ABA  2A05               	incf	(delayed_ms@i+1)^0,f,c
  5119   004ABC                     l670:
  5120   004ABC  5001               	movf	delayed_ms@time^0,w,c
  5121   004ABE  5C04               	subwf	delayed_ms@i^0,w,c
  5122   004AC0  5002               	movf	(delayed_ms@time+1)^0,w,c
  5123   004AC2  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  5124   004AC4  A0D8               	btfss	status,0,c
  5125   004AC6  EF67  F025         	goto	u2861
  5126   004ACA  EF69  F025         	goto	u2860
  5127   004ACE                     u2861:
  5128   004ACE  EF54  F025         	goto	l3514
  5129   004AD2                     u2860:
  5130   004AD2  0012               	return		;funcret
  5131   004AD4                     __end_of_delayed_ms:
  5132                           	callstack 0
  5133                           
  5134 ;; *************** function _ReverseYellow *****************
  5135 ;; Defined at:
  5136 ;;		line 324 in file "dc_motor.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5139 ;;		 -> motorL(9), 
  5140 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5141 ;;		 -> motorR(9), 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;Total ram usage:        4 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; Hardware stack levels required when called: 5
  5160 ;; This function calls:
  5161 ;;		_ForwardOneBlock
  5162 ;;		_turnLeft45
  5163 ;; This function is called by:
  5164 ;;		_go_Home
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text26
  5169   0049A4                     __ptext26:
  5170                           	callstack 0
  5171   0049A4                     _ReverseYellow:
  5172                           	callstack 24
  5173   0049A4                     
  5174                           ;dc_motor.c: 325:     turnLeft45(&motorL, &motorR);
  5175   0049A4  0EF5               	movlw	low _motorL
  5176   0049A6  6E1A               	movwf	turnLeft45@mL^0,c
  5177   0049A8  0E00               	movlw	high _motorL
  5178   0049AA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5179   0049AC  0EBE               	movlw	low _motorR
  5180   0049AE  6E1C               	movwf	turnLeft45@mR^0,c
  5181   0049B0  0E01               	movlw	high _motorR
  5182   0049B2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5183   0049B4  EC63  F022         	call	_turnLeft45	;wreg free
  5184                           
  5185                           ;dc_motor.c: 326:     turnLeft45(&motorL, &motorR);
  5186   0049B8  0EF5               	movlw	low _motorL
  5187   0049BA  6E1A               	movwf	turnLeft45@mL^0,c
  5188   0049BC  0E00               	movlw	high _motorL
  5189   0049BE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5190   0049C0  0EBE               	movlw	low _motorR
  5191   0049C2  6E1C               	movwf	turnLeft45@mR^0,c
  5192   0049C4  0E01               	movlw	high _motorR
  5193   0049C6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5194   0049C8  EC63  F022         	call	_turnLeft45	;wreg free
  5195                           
  5196                           ;dc_motor.c: 327:     ForwardOneBlock(&motorL, &motorR);
  5197   0049CC  0EF5               	movlw	low _motorL
  5198   0049CE  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5199   0049D0  0E00               	movlw	high _motorL
  5200   0049D2  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5201   0049D4  0EBE               	movlw	low _motorR
  5202   0049D6  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5203   0049D8  0E01               	movlw	high _motorR
  5204   0049DA  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5205   0049DC  EC83  F021         	call	_ForwardOneBlock	;wreg free
  5206   0049E0  0012               	return		;funcret
  5207   0049E2                     __end_of_ReverseYellow:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _ReversePink *****************
  5211 ;; Defined at:
  5212 ;;		line 329 in file "dc_motor.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5215 ;;		 -> motorL(9), 
  5216 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5217 ;;		 -> motorR(9), 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;Total ram usage:        4 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 5
  5236 ;; This function calls:
  5237 ;;		_ForwardOneBlock
  5238 ;;		_turnRight45
  5239 ;; This function is called by:
  5240 ;;		_go_Home
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text27
  5245   0049E2                     __ptext27:
  5246                           	callstack 0
  5247   0049E2                     _ReversePink:
  5248                           	callstack 24
  5249   0049E2                     
  5250                           ;dc_motor.c: 330:     turnRight45(&motorL, &motorR);
  5251   0049E2  0EF5               	movlw	low _motorL
  5252   0049E4  6E1A               	movwf	turnRight45@mL^0,c
  5253   0049E6  0E00               	movlw	high _motorL
  5254   0049E8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5255   0049EA  0EBE               	movlw	low _motorR
  5256   0049EC  6E1C               	movwf	turnRight45@mR^0,c
  5257   0049EE  0E01               	movlw	high _motorR
  5258   0049F0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5259   0049F2  EC37  F022         	call	_turnRight45	;wreg free
  5260                           
  5261                           ;dc_motor.c: 331:     turnRight45(&motorL, &motorR);
  5262   0049F6  0EF5               	movlw	low _motorL
  5263   0049F8  6E1A               	movwf	turnRight45@mL^0,c
  5264   0049FA  0E00               	movlw	high _motorL
  5265   0049FC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5266   0049FE  0EBE               	movlw	low _motorR
  5267   004A00  6E1C               	movwf	turnRight45@mR^0,c
  5268   004A02  0E01               	movlw	high _motorR
  5269   004A04  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5270   004A06  EC37  F022         	call	_turnRight45	;wreg free
  5271                           
  5272                           ;dc_motor.c: 332:     ForwardOneBlock(&motorL, &motorR);
  5273   004A0A  0EF5               	movlw	low _motorL
  5274   004A0C  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5275   004A0E  0E00               	movlw	high _motorL
  5276   004A10  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5277   004A12  0EBE               	movlw	low _motorR
  5278   004A14  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5279   004A16  0E01               	movlw	high _motorR
  5280   004A18  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5281   004A1A  EC83  F021         	call	_ForwardOneBlock	;wreg free
  5282   004A1E  0012               	return		;funcret
  5283   004A20                     __end_of_ReversePink:
  5284                           	callstack 0
  5285                           
  5286 ;; *************** function _ForwardOneBlock *****************
  5287 ;; Defined at:
  5288 ;;		line 228 in file "dc_motor.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5291 ;;		 -> motorL(9), 
  5292 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5293 ;;		 -> motorR(9), 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5308 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;Total ram usage:        6 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 4
  5312 ;; This function calls:
  5313 ;;		_fullSpeedAhead
  5314 ;;		_stop
  5315 ;; This function is called by:
  5316 ;;		_ReverseYellow
  5317 ;;		_ReversePink
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text28
  5322   004306                     __ptext28:
  5323                           	callstack 0
  5324   004306                     _ForwardOneBlock:
  5325                           	callstack 24
  5326   004306                     
  5327                           ;dc_motor.c: 229:     fullSpeedAhead(mL,mR);
  5328   004306  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5329   00430A  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5330   00430E  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5331   004312  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5332   004316  EC5F  F01F         	call	_fullSpeedAhead	;wreg free
  5333   00431A                     
  5334                           ;dc_motor.c: 230:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  5335   00431A  0EA3               	movlw	163
  5336   00431C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5337   00431E  0E57               	movlw	87
  5338   004320  6E1E               	movwf	??_ForwardOneBlock^0,c
  5339   004322  0E02               	movlw	2
  5340   004324                     u4757:
  5341   004324  2EE8               	decfsz	wreg,f,c
  5342   004326  D7FE               	bra	u4757
  5343   004328  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5344   00432A  D7FC               	bra	u4757
  5345   00432C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5346   00432E  D7FA               	bra	u4757
  5347   004330  D000               	nop2	
  5348   004332                     
  5349                           ;dc_motor.c: 231:     stop(&motorL, &motorR);
  5350   004332  0EF5               	movlw	low _motorL
  5351   004334  6E14               	movwf	stop@mL^0,c
  5352   004336  0E00               	movlw	high _motorL
  5353   004338  6E15               	movwf	(stop@mL+1)^0,c
  5354   00433A  0EBE               	movlw	low _motorR
  5355   00433C  6E16               	movwf	stop@mR^0,c
  5356   00433E  0E01               	movlw	high _motorR
  5357   004340  6E17               	movwf	(stop@mR+1)^0,c
  5358   004342  EC33  F020         	call	_stop	;wreg free
  5359                           
  5360                           ;dc_motor.c: 232:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5361   004346  0E52               	movlw	82
  5362   004348  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5363   00434A  0E2B               	movlw	43
  5364   00434C  6E1E               	movwf	??_ForwardOneBlock^0,c
  5365   00434E  0E00               	movlw	0
  5366   004350                     u4767:
  5367   004350  2EE8               	decfsz	wreg,f,c
  5368   004352  D7FE               	bra	u4767
  5369   004354  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5370   004356  D7FC               	bra	u4767
  5371   004358  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5372   00435A  D7FA               	bra	u4767
  5373   00435C  D000               	nop2	
  5374   00435E  0012               	return		;funcret
  5375   004360                     __end_of_ForwardOneBlock:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function _RedMove *****************
  5379 ;; Defined at:
  5380 ;;		line 252 in file "dc_motor.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5383 ;;		 -> motorL(9), 
  5384 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5385 ;;		 -> motorR(9), 
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;Total ram usage:        4 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; Hardware stack levels required when called: 5
  5404 ;; This function calls:
  5405 ;;		_reverseDetect
  5406 ;;		_turnRight45
  5407 ;; This function is called by:
  5408 ;;		_main
  5409 ;;		_go_Home
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text29
  5414   004A20                     __ptext29:
  5415                           	callstack 0
  5416   004A20                     _RedMove:
  5417                           	callstack 24
  5418   004A20                     
  5419                           ;dc_motor.c: 253:     reverseDetect(&motorL, &motorR);
  5420   004A20  0EF5               	movlw	low _motorL
  5421   004A22  6E1A               	movwf	reverseDetect@mL^0,c
  5422   004A24  0E00               	movlw	high _motorL
  5423   004A26  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5424   004A28  0EBE               	movlw	low _motorR
  5425   004A2A  6E1C               	movwf	reverseDetect@mR^0,c
  5426   004A2C  0E01               	movlw	high _motorR
  5427   004A2E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5428   004A30  ECDD  F021         	call	_reverseDetect	;wreg free
  5429                           
  5430                           ;dc_motor.c: 255:     turnRight45(&motorL, &motorR);
  5431   004A34  0EF5               	movlw	low _motorL
  5432   004A36  6E1A               	movwf	turnRight45@mL^0,c
  5433   004A38  0E00               	movlw	high _motorL
  5434   004A3A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5435   004A3C  0EBE               	movlw	low _motorR
  5436   004A3E  6E1C               	movwf	turnRight45@mR^0,c
  5437   004A40  0E01               	movlw	high _motorR
  5438   004A42  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5439   004A44  EC37  F022         	call	_turnRight45	;wreg free
  5440                           
  5441                           ;dc_motor.c: 256:     turnRight45(&motorL, &motorR);
  5442   004A48  0EF5               	movlw	low _motorL
  5443   004A4A  6E1A               	movwf	turnRight45@mL^0,c
  5444   004A4C  0E00               	movlw	high _motorL
  5445   004A4E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5446   004A50  0EBE               	movlw	low _motorR
  5447   004A52  6E1C               	movwf	turnRight45@mR^0,c
  5448   004A54  0E01               	movlw	high _motorR
  5449   004A56  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5450   004A58  EC37  F022         	call	_turnRight45	;wreg free
  5451   004A5C  0012               	return		;funcret
  5452   004A5E                     __end_of_RedMove:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _OrangeMove *****************
  5456 ;; Defined at:
  5457 ;;		line 298 in file "dc_motor.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5460 ;;		 -> motorL(9), 
  5461 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5462 ;;		 -> motorR(9), 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5478 ;;Total ram usage:        4 bytes
  5479 ;; Hardware stack levels used: 1
  5480 ;; Hardware stack levels required when called: 5
  5481 ;; This function calls:
  5482 ;;		_reverseDetect
  5483 ;;		_turnRight45
  5484 ;; This function is called by:
  5485 ;;		_main
  5486 ;;		_go_Home
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text30
  5491   004570                     __ptext30:
  5492                           	callstack 0
  5493   004570                     _OrangeMove:
  5494                           	callstack 24
  5495   004570                     
  5496                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  5497   004570  0EF5               	movlw	low _motorL
  5498   004572  6E1A               	movwf	reverseDetect@mL^0,c
  5499   004574  0E00               	movlw	high _motorL
  5500   004576  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5501   004578  0EBE               	movlw	low _motorR
  5502   00457A  6E1C               	movwf	reverseDetect@mR^0,c
  5503   00457C  0E01               	movlw	high _motorR
  5504   00457E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5505   004580  ECDD  F021         	call	_reverseDetect	;wreg free
  5506                           
  5507                           ;dc_motor.c: 301:     turnRight45(&motorL, &motorR);
  5508   004584  0EF5               	movlw	low _motorL
  5509   004586  6E1A               	movwf	turnRight45@mL^0,c
  5510   004588  0E00               	movlw	high _motorL
  5511   00458A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5512   00458C  0EBE               	movlw	low _motorR
  5513   00458E  6E1C               	movwf	turnRight45@mR^0,c
  5514   004590  0E01               	movlw	high _motorR
  5515   004592  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5516   004594  EC37  F022         	call	_turnRight45	;wreg free
  5517                           
  5518                           ;dc_motor.c: 302:     turnRight45(&motorL, &motorR);
  5519   004598  0EF5               	movlw	low _motorL
  5520   00459A  6E1A               	movwf	turnRight45@mL^0,c
  5521   00459C  0E00               	movlw	high _motorL
  5522   00459E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5523   0045A0  0EBE               	movlw	low _motorR
  5524   0045A2  6E1C               	movwf	turnRight45@mR^0,c
  5525   0045A4  0E01               	movlw	high _motorR
  5526   0045A6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5527   0045A8  EC37  F022         	call	_turnRight45	;wreg free
  5528                           
  5529                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  5530   0045AC  0EF5               	movlw	low _motorL
  5531   0045AE  6E1A               	movwf	turnRight45@mL^0,c
  5532   0045B0  0E00               	movlw	high _motorL
  5533   0045B2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5534   0045B4  0EBE               	movlw	low _motorR
  5535   0045B6  6E1C               	movwf	turnRight45@mR^0,c
  5536   0045B8  0E01               	movlw	high _motorR
  5537   0045BA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5538   0045BC  EC37  F022         	call	_turnRight45	;wreg free
  5539   0045C0  0012               	return		;funcret
  5540   0045C2                     __end_of_OrangeMove:
  5541                           	callstack 0
  5542                           
  5543 ;; *************** function _LightBlueMove *****************
  5544 ;; Defined at:
  5545 ;;		line 307 in file "dc_motor.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5548 ;;		 -> motorL(9), 
  5549 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5550 ;;		 -> motorR(9), 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5565 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;Total ram usage:        4 bytes
  5567 ;; Hardware stack levels used: 1
  5568 ;; Hardware stack levels required when called: 5
  5569 ;; This function calls:
  5570 ;;		_reverseDetect
  5571 ;;		_turnLeft45
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;;		_go_Home
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text31
  5579   0045C2                     __ptext31:
  5580                           	callstack 0
  5581   0045C2                     _LightBlueMove:
  5582                           	callstack 24
  5583   0045C2                     
  5584                           ;dc_motor.c: 308:     reverseDetect(&motorL, &motorR);
  5585   0045C2  0EF5               	movlw	low _motorL
  5586   0045C4  6E1A               	movwf	reverseDetect@mL^0,c
  5587   0045C6  0E00               	movlw	high _motorL
  5588   0045C8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5589   0045CA  0EBE               	movlw	low _motorR
  5590   0045CC  6E1C               	movwf	reverseDetect@mR^0,c
  5591   0045CE  0E01               	movlw	high _motorR
  5592   0045D0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5593   0045D2  ECDD  F021         	call	_reverseDetect	;wreg free
  5594                           
  5595                           ;dc_motor.c: 310:     turnLeft45(&motorL, &motorR);
  5596   0045D6  0EF5               	movlw	low _motorL
  5597   0045D8  6E1A               	movwf	turnLeft45@mL^0,c
  5598   0045DA  0E00               	movlw	high _motorL
  5599   0045DC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5600   0045DE  0EBE               	movlw	low _motorR
  5601   0045E0  6E1C               	movwf	turnLeft45@mR^0,c
  5602   0045E2  0E01               	movlw	high _motorR
  5603   0045E4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5604   0045E6  EC63  F022         	call	_turnLeft45	;wreg free
  5605                           
  5606                           ;dc_motor.c: 311:     turnLeft45(&motorL, &motorR);
  5607   0045EA  0EF5               	movlw	low _motorL
  5608   0045EC  6E1A               	movwf	turnLeft45@mL^0,c
  5609   0045EE  0E00               	movlw	high _motorL
  5610   0045F0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5611   0045F2  0EBE               	movlw	low _motorR
  5612   0045F4  6E1C               	movwf	turnLeft45@mR^0,c
  5613   0045F6  0E01               	movlw	high _motorR
  5614   0045F8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5615   0045FA  EC63  F022         	call	_turnLeft45	;wreg free
  5616                           
  5617                           ;dc_motor.c: 312:     turnLeft45(&motorL, &motorR);
  5618   0045FE  0EF5               	movlw	low _motorL
  5619   004600  6E1A               	movwf	turnLeft45@mL^0,c
  5620   004602  0E00               	movlw	high _motorL
  5621   004604  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5622   004606  0EBE               	movlw	low _motorR
  5623   004608  6E1C               	movwf	turnLeft45@mR^0,c
  5624   00460A  0E01               	movlw	high _motorR
  5625   00460C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5626   00460E  EC63  F022         	call	_turnLeft45	;wreg free
  5627   004612  0012               	return		;funcret
  5628   004614                     __end_of_LightBlueMove:
  5629                           	callstack 0
  5630                           
  5631 ;; *************** function _GreenMove *****************
  5632 ;; Defined at:
  5633 ;;		line 260 in file "dc_motor.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5636 ;;		 -> motorL(9), 
  5637 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5638 ;;		 -> motorR(9), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5654 ;;Total ram usage:        4 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; Hardware stack levels required when called: 5
  5657 ;; This function calls:
  5658 ;;		_reverseDetect
  5659 ;;		_turnLeft45
  5660 ;; This function is called by:
  5661 ;;		_main
  5662 ;;		_go_Home
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text32
  5667   004A5E                     __ptext32:
  5668                           	callstack 0
  5669   004A5E                     _GreenMove:
  5670                           	callstack 24
  5671   004A5E                     
  5672                           ;dc_motor.c: 261:     reverseDetect(&motorL, &motorR);
  5673   004A5E  0EF5               	movlw	low _motorL
  5674   004A60  6E1A               	movwf	reverseDetect@mL^0,c
  5675   004A62  0E00               	movlw	high _motorL
  5676   004A64  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5677   004A66  0EBE               	movlw	low _motorR
  5678   004A68  6E1C               	movwf	reverseDetect@mR^0,c
  5679   004A6A  0E01               	movlw	high _motorR
  5680   004A6C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5681   004A6E  ECDD  F021         	call	_reverseDetect	;wreg free
  5682                           
  5683                           ;dc_motor.c: 263:     turnLeft45(&motorL, &motorR);
  5684   004A72  0EF5               	movlw	low _motorL
  5685   004A74  6E1A               	movwf	turnLeft45@mL^0,c
  5686   004A76  0E00               	movlw	high _motorL
  5687   004A78  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5688   004A7A  0EBE               	movlw	low _motorR
  5689   004A7C  6E1C               	movwf	turnLeft45@mR^0,c
  5690   004A7E  0E01               	movlw	high _motorR
  5691   004A80  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5692   004A82  EC63  F022         	call	_turnLeft45	;wreg free
  5693                           
  5694                           ;dc_motor.c: 264:     turnLeft45(&motorL, &motorR);
  5695   004A86  0EF5               	movlw	low _motorL
  5696   004A88  6E1A               	movwf	turnLeft45@mL^0,c
  5697   004A8A  0E00               	movlw	high _motorL
  5698   004A8C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5699   004A8E  0EBE               	movlw	low _motorR
  5700   004A90  6E1C               	movwf	turnLeft45@mR^0,c
  5701   004A92  0E01               	movlw	high _motorR
  5702   004A94  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5703   004A96  EC63  F022         	call	_turnLeft45	;wreg free
  5704   004A9A  0012               	return		;funcret
  5705   004A9C                     __end_of_GreenMove:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _BlueMove *****************
  5709 ;; Defined at:
  5710 ;;		line 268 in file "dc_motor.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5713 ;;		 -> motorL(9), 
  5714 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5715 ;;		 -> motorR(9), 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5731 ;;Total ram usage:        4 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 5
  5734 ;; This function calls:
  5735 ;;		_reverseDetect
  5736 ;;		_turnRight45
  5737 ;; This function is called by:
  5738 ;;		_main
  5739 ;;		_go_Home
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text33
  5744   004242                     __ptext33:
  5745                           	callstack 0
  5746   004242                     _BlueMove:
  5747                           	callstack 24
  5748   004242                     
  5749                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  5750   004242  0EF5               	movlw	low _motorL
  5751   004244  6E1A               	movwf	reverseDetect@mL^0,c
  5752   004246  0E00               	movlw	high _motorL
  5753   004248  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5754   00424A  0EBE               	movlw	low _motorR
  5755   00424C  6E1C               	movwf	reverseDetect@mR^0,c
  5756   00424E  0E01               	movlw	high _motorR
  5757   004250  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5758   004252  ECDD  F021         	call	_reverseDetect	;wreg free
  5759                           
  5760                           ;dc_motor.c: 271:     turnRight45(&motorL, &motorR);
  5761   004256  0EF5               	movlw	low _motorL
  5762   004258  6E1A               	movwf	turnRight45@mL^0,c
  5763   00425A  0E00               	movlw	high _motorL
  5764   00425C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5765   00425E  0EBE               	movlw	low _motorR
  5766   004260  6E1C               	movwf	turnRight45@mR^0,c
  5767   004262  0E01               	movlw	high _motorR
  5768   004264  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5769   004266  EC37  F022         	call	_turnRight45	;wreg free
  5770                           
  5771                           ;dc_motor.c: 272:     turnRight45(&motorL, &motorR);
  5772   00426A  0EF5               	movlw	low _motorL
  5773   00426C  6E1A               	movwf	turnRight45@mL^0,c
  5774   00426E  0E00               	movlw	high _motorL
  5775   004270  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5776   004272  0EBE               	movlw	low _motorR
  5777   004274  6E1C               	movwf	turnRight45@mR^0,c
  5778   004276  0E01               	movlw	high _motorR
  5779   004278  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5780   00427A  EC37  F022         	call	_turnRight45	;wreg free
  5781                           
  5782                           ;dc_motor.c: 273:     turnRight45(&motorL, &motorR);
  5783   00427E  0EF5               	movlw	low _motorL
  5784   004280  6E1A               	movwf	turnRight45@mL^0,c
  5785   004282  0E00               	movlw	high _motorL
  5786   004284  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5787   004286  0EBE               	movlw	low _motorR
  5788   004288  6E1C               	movwf	turnRight45@mR^0,c
  5789   00428A  0E01               	movlw	high _motorR
  5790   00428C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5791   00428E  EC37  F022         	call	_turnRight45	;wreg free
  5792                           
  5793                           ;dc_motor.c: 274:     turnRight45(&motorL, &motorR);
  5794   004292  0EF5               	movlw	low _motorL
  5795   004294  6E1A               	movwf	turnRight45@mL^0,c
  5796   004296  0E00               	movlw	high _motorL
  5797   004298  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5798   00429A  0EBE               	movlw	low _motorR
  5799   00429C  6E1C               	movwf	turnRight45@mR^0,c
  5800   00429E  0E01               	movlw	high _motorR
  5801   0042A0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5802   0042A2  EC37  F022         	call	_turnRight45	;wreg free
  5803   0042A6  0012               	return		;funcret
  5804   0042A8                     __end_of_BlueMove:
  5805                           	callstack 0
  5806                           
  5807 ;; *************** function _getTMR0val *****************
  5808 ;; Defined at:
  5809 ;;		line 28 in file "timers.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  moving          2    0[COMRAM] int 
  5814 ;;  temp            2    0        unsigned int 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      void 
  5817 ;; Registers used:
  5818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;Total ram usage:        2 bytes
  5829 ;; Hardware stack levels used: 1
  5830 ;; Hardware stack levels required when called: 1
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_main
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text34
  5839   004B56                     __ptext34:
  5840                           	callstack 0
  5841   004B56                     _getTMR0val:
  5842                           	callstack 29
  5843   004B56  50D3               	movf	211,w,c	;volatile
  5844   004B58                     
  5845                           ;timers.c: 32:     int moving=TMR0H<<8;
  5846   004B58  50D4               	movf	212,w,c	;volatile
  5847   004B5A  6E02               	movwf	(getTMR0val@moving+1)^0,c
  5848   004B5C  6A01               	clrf	getTMR0val@moving^0,c
  5849   004B5E                     
  5850                           ;timers.c: 33:     Time_forward[move_count]=moving;
  5851   004B5E  90D8               	bcf	status,0,c
  5852   004B60  0100               	movlb	0	; () banked
  5853   004B62  35F2               	rlcf	_move_count& (0+255),w,b	;volatile
  5854   004B64  6ED9               	movwf	fsr2l,c
  5855   004B66  35F3               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  5856   004B68  6EDA               	movwf	fsr2h,c
  5857   004B6A  0E00               	movlw	low _Time_forward
  5858   004B6C  26D9               	addwf	fsr2l,f,c
  5859   004B6E  0E02               	movlw	high _Time_forward
  5860   004B70  22DA               	addwfc	fsr2h,f,c
  5861   004B72  C001  FFDE         	movff	getTMR0val@moving,postinc2
  5862   004B76  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  5863   004B7A                     
  5864                           ; BSR set to: 0
  5865   004B7A  0012               	return		;funcret
  5866   004B7C                     __end_of_getTMR0val:
  5867                           	callstack 0
  5868                           
  5869 ;; *************** function _colour_rel *****************
  5870 ;; Defined at:
  5871 ;;		line 114 in file "color.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  vals            2   49[COMRAM] PTR struct RGB
  5874 ;;		 -> vals(8), 
  5875 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  5876 ;;		 -> rel(12), 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  B               4   73[COMRAM] float 
  5879 ;;  G               4   69[COMRAM] float 
  5880 ;;  R               4   65[COMRAM] float 
  5881 ;;  L               4   53[COMRAM] float 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5894 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5895 ;;Total ram usage:       28 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; Hardware stack levels required when called: 2
  5898 ;; This function calls:
  5899 ;;		___fladd
  5900 ;;		___fldiv
  5901 ;;		___xxtofl
  5902 ;; This function is called by:
  5903 ;;		_main
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text35
  5908   002A9A                     __ptext35:
  5909                           	callstack 0
  5910   002A9A                     _colour_rel:
  5911                           	callstack 28
  5912   002A9A                     
  5913                           ;color.c: 115:     float R = vals->R;
  5914   002A9A  C032  FFD9         	movff	colour_rel@vals,fsr2l
  5915   002A9E  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  5916   002AA2  CFDE F001          	movff	postinc2,___xxtofl@val
  5917   002AA6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5918   002AAA  0E00               	movlw	0
  5919   002AAC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5920   002AAE  0EFF               	movlw	-1
  5921   002AB0  6E03               	movwf	(___xxtofl@val+2)^0,c
  5922   002AB2  6E04               	movwf	(___xxtofl@val+3)^0,c
  5923   002AB4  0E01               	movlw	1
  5924   002AB6  EC33  F019         	call	___xxtofl
  5925   002ABA  C001  F042         	movff	?___xxtofl,colour_rel@R
  5926   002ABE  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  5927   002AC2  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  5928   002AC6  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  5929                           
  5930                           ;color.c: 116:     float G = vals->G;
  5931   002ACA  EE20 F002          	lfsr	2,2
  5932   002ACE  5032               	movf	colour_rel@vals^0,w,c
  5933   002AD0  26D9               	addwf	fsr2l,f,c
  5934   002AD2  5033               	movf	(colour_rel@vals+1)^0,w,c
  5935   002AD4  22DA               	addwfc	fsr2h,f,c
  5936   002AD6  CFDE F001          	movff	postinc2,___xxtofl@val
  5937   002ADA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5938   002ADE  0E00               	movlw	0
  5939   002AE0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5940   002AE2  0EFF               	movlw	-1
  5941   002AE4  6E03               	movwf	(___xxtofl@val+2)^0,c
  5942   002AE6  6E04               	movwf	(___xxtofl@val+3)^0,c
  5943   002AE8  0E01               	movlw	1
  5944   002AEA  EC33  F019         	call	___xxtofl
  5945   002AEE  C001  F046         	movff	?___xxtofl,colour_rel@G
  5946   002AF2  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  5947   002AF6  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  5948   002AFA  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  5949                           
  5950                           ;color.c: 117:     float B = vals->B;
  5951   002AFE  EE20 F004          	lfsr	2,4
  5952   002B02  5032               	movf	colour_rel@vals^0,w,c
  5953   002B04  26D9               	addwf	fsr2l,f,c
  5954   002B06  5033               	movf	(colour_rel@vals+1)^0,w,c
  5955   002B08  22DA               	addwfc	fsr2h,f,c
  5956   002B0A  CFDE F001          	movff	postinc2,___xxtofl@val
  5957   002B0E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5958   002B12  0E00               	movlw	0
  5959   002B14  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5960   002B16  0EFF               	movlw	-1
  5961   002B18  6E03               	movwf	(___xxtofl@val+2)^0,c
  5962   002B1A  6E04               	movwf	(___xxtofl@val+3)^0,c
  5963   002B1C  0E01               	movlw	1
  5964   002B1E  EC33  F019         	call	___xxtofl
  5965   002B22  C001  F04A         	movff	?___xxtofl,colour_rel@B
  5966   002B26  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  5967   002B2A  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  5968   002B2E  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  5969                           
  5970                           ;color.c: 118:     float L = vals->L;
  5971   002B32  EE20 F006          	lfsr	2,6
  5972   002B36  5032               	movf	colour_rel@vals^0,w,c
  5973   002B38  26D9               	addwf	fsr2l,f,c
  5974   002B3A  5033               	movf	(colour_rel@vals+1)^0,w,c
  5975   002B3C  22DA               	addwfc	fsr2h,f,c
  5976   002B3E  CFDE F001          	movff	postinc2,___xxtofl@val
  5977   002B42  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5978   002B46  0E00               	movlw	0
  5979   002B48  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5980   002B4A  0EFF               	movlw	-1
  5981   002B4C  6E03               	movwf	(___xxtofl@val+2)^0,c
  5982   002B4E  6E04               	movwf	(___xxtofl@val+3)^0,c
  5983   002B50  0E01               	movlw	1
  5984   002B52  EC33  F019         	call	___xxtofl
  5985   002B56  C001  F036         	movff	?___xxtofl,colour_rel@L
  5986   002B5A  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  5987   002B5E  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  5988   002B62  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  5989   002B66                     
  5990                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5991   002B66  C046  F005         	movff	colour_rel@G,___fladd@a
  5992   002B6A  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5993   002B6E  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5994   002B72  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5995   002B76  C042  F001         	movff	colour_rel@R,___fladd@b
  5996   002B7A  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5997   002B7E  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5998   002B82  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5999   002B86  EC0B  F00F         	call	___fladd	;wreg free
  6000   002B8A  C001  F03A         	movff	?___fladd,_colour_rel$2835
  6001   002B8E  C002  F03B         	movff	?___fladd+1,_colour_rel$2835+1
  6002   002B92  C003  F03C         	movff	?___fladd+2,_colour_rel$2835+2
  6003   002B96  C004  F03D         	movff	?___fladd+3,_colour_rel$2835+3
  6004   002B9A                     
  6005                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6006   002B9A  C04A  F005         	movff	colour_rel@B,___fladd@a
  6007   002B9E  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6008   002BA2  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6009   002BA6  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6010   002BAA  C03A  F001         	movff	_colour_rel$2835,___fladd@b
  6011   002BAE  C03B  F002         	movff	_colour_rel$2835+1,___fladd@b+1
  6012   002BB2  C03C  F003         	movff	_colour_rel$2835+2,___fladd@b+2
  6013   002BB6  C03D  F004         	movff	_colour_rel$2835+3,___fladd@b+3
  6014   002BBA  EC0B  F00F         	call	___fladd	;wreg free
  6015   002BBE  C001  F03E         	movff	?___fladd,_colour_rel$2836
  6016   002BC2  C002  F03F         	movff	?___fladd+1,_colour_rel$2836+1
  6017   002BC6  C003  F040         	movff	?___fladd+2,_colour_rel$2836+2
  6018   002BCA  C004  F041         	movff	?___fladd+3,_colour_rel$2836+3
  6019                           
  6020                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6021   002BCE  C042  F019         	movff	colour_rel@R,___fldiv@b
  6022   002BD2  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  6023   002BD6  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  6024   002BDA  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  6025   002BDE  C036  F005         	movff	colour_rel@L,___fladd@a
  6026   002BE2  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6027   002BE6  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6028   002BEA  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6029   002BEE  C03E  F001         	movff	_colour_rel$2836,___fladd@b
  6030   002BF2  C03F  F002         	movff	_colour_rel$2836+1,___fladd@b+1
  6031   002BF6  C040  F003         	movff	_colour_rel$2836+2,___fladd@b+2
  6032   002BFA  C041  F004         	movff	_colour_rel$2836+3,___fladd@b+3
  6033   002BFE  EC0B  F00F         	call	___fladd	;wreg free
  6034   002C02  C001  F01D         	movff	?___fladd,___fldiv@a
  6035   002C06  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6036   002C0A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6037   002C0E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6038   002C12  EC80  F013         	call	___fldiv	;wreg free
  6039   002C16  C034  FFD9         	movff	colour_rel@rel,fsr2l
  6040   002C1A  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  6041   002C1E  C019  FFDE         	movff	?___fldiv,postinc2
  6042   002C22  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6043   002C26  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6044   002C2A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6045   002C2E                     
  6046                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6047   002C2E  C046  F005         	movff	colour_rel@G,___fladd@a
  6048   002C32  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6049   002C36  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6050   002C3A  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6051   002C3E  C042  F001         	movff	colour_rel@R,___fladd@b
  6052   002C42  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6053   002C46  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6054   002C4A  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6055   002C4E  EC0B  F00F         	call	___fladd	;wreg free
  6056   002C52  C001  F03A         	movff	?___fladd,_colour_rel$2835
  6057   002C56  C002  F03B         	movff	?___fladd+1,_colour_rel$2835+1
  6058   002C5A  C003  F03C         	movff	?___fladd+2,_colour_rel$2835+2
  6059   002C5E  C004  F03D         	movff	?___fladd+3,_colour_rel$2835+3
  6060   002C62                     
  6061                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6062   002C62  C04A  F005         	movff	colour_rel@B,___fladd@a
  6063   002C66  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6064   002C6A  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6065   002C6E  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6066   002C72  C03A  F001         	movff	_colour_rel$2835,___fladd@b
  6067   002C76  C03B  F002         	movff	_colour_rel$2835+1,___fladd@b+1
  6068   002C7A  C03C  F003         	movff	_colour_rel$2835+2,___fladd@b+2
  6069   002C7E  C03D  F004         	movff	_colour_rel$2835+3,___fladd@b+3
  6070   002C82  EC0B  F00F         	call	___fladd	;wreg free
  6071   002C86  C001  F03E         	movff	?___fladd,_colour_rel$2836
  6072   002C8A  C002  F03F         	movff	?___fladd+1,_colour_rel$2836+1
  6073   002C8E  C003  F040         	movff	?___fladd+2,_colour_rel$2836+2
  6074   002C92  C004  F041         	movff	?___fladd+3,_colour_rel$2836+3
  6075                           
  6076                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6077   002C96  C04A  F019         	movff	colour_rel@B,___fldiv@b
  6078   002C9A  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  6079   002C9E  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  6080   002CA2  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  6081   002CA6  C036  F005         	movff	colour_rel@L,___fladd@a
  6082   002CAA  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6083   002CAE  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6084   002CB2  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6085   002CB6  C03E  F001         	movff	_colour_rel$2836,___fladd@b
  6086   002CBA  C03F  F002         	movff	_colour_rel$2836+1,___fladd@b+1
  6087   002CBE  C040  F003         	movff	_colour_rel$2836+2,___fladd@b+2
  6088   002CC2  C041  F004         	movff	_colour_rel$2836+3,___fladd@b+3
  6089   002CC6  EC0B  F00F         	call	___fladd	;wreg free
  6090   002CCA  C001  F01D         	movff	?___fladd,___fldiv@a
  6091   002CCE  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6092   002CD2  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6093   002CD6  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6094   002CDA  EC80  F013         	call	___fldiv	;wreg free
  6095   002CDE  EE20 F008          	lfsr	2,8
  6096   002CE2  5034               	movf	colour_rel@rel^0,w,c
  6097   002CE4  26D9               	addwf	fsr2l,f,c
  6098   002CE6  5035               	movf	(colour_rel@rel+1)^0,w,c
  6099   002CE8  22DA               	addwfc	fsr2h,f,c
  6100   002CEA  C019  FFDE         	movff	?___fldiv,postinc2
  6101   002CEE  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6102   002CF2  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6103   002CF6  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6104   002CFA                     
  6105                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6106   002CFA  C046  F005         	movff	colour_rel@G,___fladd@a
  6107   002CFE  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6108   002D02  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6109   002D06  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6110   002D0A  C042  F001         	movff	colour_rel@R,___fladd@b
  6111   002D0E  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6112   002D12  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6113   002D16  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6114   002D1A  EC0B  F00F         	call	___fladd	;wreg free
  6115   002D1E  C001  F03A         	movff	?___fladd,_colour_rel$2835
  6116   002D22  C002  F03B         	movff	?___fladd+1,_colour_rel$2835+1
  6117   002D26  C003  F03C         	movff	?___fladd+2,_colour_rel$2835+2
  6118   002D2A  C004  F03D         	movff	?___fladd+3,_colour_rel$2835+3
  6119   002D2E                     
  6120                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6121   002D2E  C04A  F005         	movff	colour_rel@B,___fladd@a
  6122   002D32  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6123   002D36  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6124   002D3A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6125   002D3E  C03A  F001         	movff	_colour_rel$2835,___fladd@b
  6126   002D42  C03B  F002         	movff	_colour_rel$2835+1,___fladd@b+1
  6127   002D46  C03C  F003         	movff	_colour_rel$2835+2,___fladd@b+2
  6128   002D4A  C03D  F004         	movff	_colour_rel$2835+3,___fladd@b+3
  6129   002D4E  EC0B  F00F         	call	___fladd	;wreg free
  6130   002D52  C001  F03E         	movff	?___fladd,_colour_rel$2836
  6131   002D56  C002  F03F         	movff	?___fladd+1,_colour_rel$2836+1
  6132   002D5A  C003  F040         	movff	?___fladd+2,_colour_rel$2836+2
  6133   002D5E  C004  F041         	movff	?___fladd+3,_colour_rel$2836+3
  6134                           
  6135                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6136   002D62  C046  F019         	movff	colour_rel@G,___fldiv@b
  6137   002D66  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6138   002D6A  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6139   002D6E  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6140   002D72  C036  F005         	movff	colour_rel@L,___fladd@a
  6141   002D76  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6142   002D7A  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6143   002D7E  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6144   002D82  C03E  F001         	movff	_colour_rel$2836,___fladd@b
  6145   002D86  C03F  F002         	movff	_colour_rel$2836+1,___fladd@b+1
  6146   002D8A  C040  F003         	movff	_colour_rel$2836+2,___fladd@b+2
  6147   002D8E  C041  F004         	movff	_colour_rel$2836+3,___fladd@b+3
  6148   002D92  EC0B  F00F         	call	___fladd	;wreg free
  6149   002D96  C001  F01D         	movff	?___fladd,___fldiv@a
  6150   002D9A  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6151   002D9E  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6152   002DA2  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6153   002DA6  EC80  F013         	call	___fldiv	;wreg free
  6154   002DAA  EE20 F004          	lfsr	2,4
  6155   002DAE  5034               	movf	colour_rel@rel^0,w,c
  6156   002DB0  26D9               	addwf	fsr2l,f,c
  6157   002DB2  5035               	movf	(colour_rel@rel+1)^0,w,c
  6158   002DB4  22DA               	addwfc	fsr2h,f,c
  6159   002DB6  C019  FFDE         	movff	?___fldiv,postinc2
  6160   002DBA  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6161   002DBE  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6162   002DC2  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6163   002DC6  0012               	return		;funcret
  6164   002DC8                     __end_of_colour_rel:
  6165                           	callstack 0
  6166                           
  6167 ;; *************** function _color_click_init *****************
  6168 ;; Defined at:
  6169 ;;		line 7 in file "color.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;		None
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;Total ram usage:        1 bytes
  6188 ;; Hardware stack levels used: 1
  6189 ;; Hardware stack levels required when called: 4
  6190 ;; This function calls:
  6191 ;;		_I2C_2_Master_Init
  6192 ;;		_color_writetoaddr
  6193 ;; This function is called by:
  6194 ;;		_main
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text36
  6199   004614                     __ptext36:
  6200                           	callstack 0
  6201   004614                     _color_click_init:
  6202                           	callstack 26
  6203   004614                     
  6204                           ;color.c: 10:     I2C_2_Master_Init();
  6205   004614  EC82  F025         	call	_I2C_2_Master_Init	;wreg free
  6206   004618                     
  6207                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6208   004618  0E01               	movlw	1
  6209   00461A  6E03               	movwf	color_writetoaddr@value^0,c
  6210   00461C  0E00               	movlw	0
  6211   00461E  ECD1  F025         	call	_color_writetoaddr
  6212   004622                     
  6213                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6214   004622  0E3F               	movlw	63
  6215   004624  6E05               	movwf	??_color_click_init^0,c
  6216   004626  0E55               	movlw	85
  6217   004628                     u4777:
  6218   004628  2EE8               	decfsz	wreg,f,c
  6219   00462A  D7FE               	bra	u4777
  6220   00462C  2E05               	decfsz	??_color_click_init^0,f,c
  6221   00462E  D7FC               	bra	u4777
  6222   004630  F000               	nop	
  6223   004632                     
  6224                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6225   004632  0E03               	movlw	3
  6226   004634  6E03               	movwf	color_writetoaddr@value^0,c
  6227   004636  0E00               	movlw	0
  6228   004638  ECD1  F025         	call	_color_writetoaddr
  6229   00463C                     
  6230                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6231   00463C  0ED5               	movlw	213
  6232   00463E  6E03               	movwf	color_writetoaddr@value^0,c
  6233   004640  0E01               	movlw	1
  6234   004642  ECD1  F025         	call	_color_writetoaddr
  6235   004646                     
  6236                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6237   004646  0E00               	movlw	0
  6238   004648  6E03               	movwf	color_writetoaddr@value^0,c
  6239   00464A  0E0F               	movlw	15
  6240   00464C  ECD1  F025         	call	_color_writetoaddr
  6241   004650                     
  6242                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6243   004650  9287               	bcf	135,1,c	;volatile
  6244   004652                     
  6245                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6246   004652  9881               	bcf	129,4,c	;volatile
  6247   004654                     
  6248                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6249   004654  9E86               	bcf	134,7,c	;volatile
  6250   004656                     
  6251                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6252   004656  9684               	bcf	132,3,c	;volatile
  6253   004658                     
  6254                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6255   004658  9884               	bcf	132,4,c	;volatile
  6256   00465A                     
  6257                           ;color.c: 28:     LATGbits.LATG1=0;
  6258   00465A  927F               	bcf	127,1,c	;volatile
  6259   00465C                     
  6260                           ;color.c: 29:     LATFbits.LATF7=0;
  6261   00465C  9E7E               	bcf	126,7,c	;volatile
  6262   00465E                     
  6263                           ;color.c: 30:     LATAbits.LATA4=0;
  6264   00465E  9879               	bcf	121,4,c	;volatile
  6265   004660                     
  6266                           ;color.c: 32:     LATDbits.LATD3=0;
  6267   004660  967C               	bcf	124,3,c	;volatile
  6268   004662                     
  6269                           ;color.c: 33:     LATDbits.LATD4=0;
  6270   004662  987C               	bcf	124,4,c	;volatile
  6271   004664  0012               	return		;funcret
  6272   004666                     __end_of_color_click_init:
  6273                           	callstack 0
  6274                           
  6275 ;; *************** function _color_writetoaddr *****************
  6276 ;; Defined at:
  6277 ;;		line 41 in file "color.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  address         1    wreg     unsigned char 
  6280 ;;  value           1    2[COMRAM] unsigned char 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  address         1    3[COMRAM] unsigned char 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6292 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6296 ;;Total ram usage:        2 bytes
  6297 ;; Hardware stack levels used: 1
  6298 ;; Hardware stack levels required when called: 3
  6299 ;; This function calls:
  6300 ;;		_I2C_2_Master_Start
  6301 ;;		_I2C_2_Master_Stop
  6302 ;;		_I2C_2_Master_Write
  6303 ;; This function is called by:
  6304 ;;		_color_click_init
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text37
  6309   004BA2                     __ptext37:
  6310                           	callstack 0
  6311   004BA2                     _color_writetoaddr:
  6312                           	callstack 26
  6313                           
  6314                           ;incstack = 0
  6315                           ;color_writetoaddr@address stored from wreg
  6316   004BA2  6E04               	movwf	color_writetoaddr@address^0,c
  6317   004BA4                     
  6318                           ;color.c: 42:     I2C_2_Master_Start();
  6319   004BA4  EC1C  F026         	call	_I2C_2_Master_Start	;wreg free
  6320                           
  6321                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6322   004BA8  0E52               	movlw	82
  6323   004BAA  EC0C  F026         	call	_I2C_2_Master_Write
  6324                           
  6325                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6326   004BAE  5004               	movf	color_writetoaddr@address^0,w,c
  6327   004BB0  0980               	iorlw	128
  6328   004BB2  EC0C  F026         	call	_I2C_2_Master_Write
  6329                           
  6330                           ;color.c: 45:     I2C_2_Master_Write(value);
  6331   004BB6  5003               	movf	color_writetoaddr@value^0,w,c
  6332   004BB8  EC0C  F026         	call	_I2C_2_Master_Write
  6333                           
  6334                           ;color.c: 46:     I2C_2_Master_Stop();
  6335   004BBC  EC17  F026         	call	_I2C_2_Master_Stop	;wreg free
  6336   004BC0  0012               	return		;funcret
  6337   004BC2                     __end_of_color_writetoaddr:
  6338                           	callstack 0
  6339                           
  6340 ;; *************** function _I2C_2_Master_Write *****************
  6341 ;; Defined at:
  6342 ;;		line 45 in file "i2c.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  data_byte       1    wreg     unsigned char 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  data_byte       1    1[COMRAM] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;Total ram usage:        1 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 2
  6363 ;; This function calls:
  6364 ;;		_I2C_2_Master_Idle
  6365 ;; This function is called by:
  6366 ;;		_color_writetoaddr
  6367 ;;		_color_read_lum
  6368 ;;		_color_read_Red
  6369 ;;		_color_read_Green
  6370 ;;		_color_read_Blue
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text38
  6375   004C18                     __ptext38:
  6376                           	callstack 0
  6377   004C18                     _I2C_2_Master_Write:
  6378                           	callstack 26
  6379                           
  6380                           ;incstack = 0
  6381                           ;I2C_2_Master_Write@data_byte stored from wreg
  6382   004C18  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6383   004C1A                     
  6384                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6385   004C1A  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  6386   004C1E                     
  6387                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6388   004C1E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6389   004C22  0012               	return		;funcret
  6390   004C24                     __end_of_I2C_2_Master_Write:
  6391                           	callstack 0
  6392                           
  6393 ;; *************** function _I2C_2_Master_Stop *****************
  6394 ;; Defined at:
  6395 ;;		line 39 in file "i2c.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6413 ;;Total ram usage:        0 bytes
  6414 ;; Hardware stack levels used: 1
  6415 ;; Hardware stack levels required when called: 2
  6416 ;; This function calls:
  6417 ;;		_I2C_2_Master_Idle
  6418 ;; This function is called by:
  6419 ;;		_color_writetoaddr
  6420 ;;		_color_read_lum
  6421 ;;		_color_read_Red
  6422 ;;		_color_read_Green
  6423 ;;		_color_read_Blue
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text39
  6428   004C2E                     __ptext39:
  6429                           	callstack 0
  6430   004C2E                     _I2C_2_Master_Stop:
  6431                           	callstack 26
  6432   004C2E                     
  6433                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6434   004C2E  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  6435   004C32                     
  6436                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6437   004C32  010E               	movlb	14	; () banked
  6438   004C34  85DA               	bsf	218,2,b	;volatile
  6439   004C36                     
  6440                           ; BSR set to: 14
  6441   004C36  0012               	return		;funcret
  6442   004C38                     __end_of_I2C_2_Master_Stop:
  6443                           	callstack 0
  6444                           
  6445 ;; *************** function _I2C_2_Master_Start *****************
  6446 ;; Defined at:
  6447 ;;		line 27 in file "i2c.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;Total ram usage:        0 bytes
  6466 ;; Hardware stack levels used: 1
  6467 ;; Hardware stack levels required when called: 2
  6468 ;; This function calls:
  6469 ;;		_I2C_2_Master_Idle
  6470 ;; This function is called by:
  6471 ;;		_color_writetoaddr
  6472 ;;		_color_read_lum
  6473 ;;		_color_read_Red
  6474 ;;		_color_read_Green
  6475 ;;		_color_read_Blue
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text40
  6480   004C38                     __ptext40:
  6481                           	callstack 0
  6482   004C38                     _I2C_2_Master_Start:
  6483                           	callstack 26
  6484   004C38                     
  6485                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6486   004C38  EC97  F025         	call	_I2C_2_Master_Idle	;wreg free
  6487   004C3C                     
  6488                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6489   004C3C  010E               	movlb	14	; () banked
  6490   004C3E  81DA               	bsf	218,0,b	;volatile
  6491   004C40                     
  6492                           ; BSR set to: 14
  6493   004C40  0012               	return		;funcret
  6494   004C42                     __end_of_I2C_2_Master_Start:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function _I2C_2_Master_Idle *****************
  6498 ;; Defined at:
  6499 ;;		line 22 in file "i2c.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;		None
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;                  1    wreg      void 
  6506 ;; Registers used:
  6507 ;;		wreg, status,2, status,0
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6517 ;;Total ram usage:        1 bytes
  6518 ;; Hardware stack levels used: 1
  6519 ;; Hardware stack levels required when called: 1
  6520 ;; This function calls:
  6521 ;;		Nothing
  6522 ;; This function is called by:
  6523 ;;		_I2C_2_Master_Start
  6524 ;;		_I2C_2_Master_RepStart
  6525 ;;		_I2C_2_Master_Stop
  6526 ;;		_I2C_2_Master_Write
  6527 ;;		_I2C_2_Master_Read
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text41
  6532   004B2E                     __ptext41:
  6533                           	callstack 0
  6534   004B2E                     _I2C_2_Master_Idle:
  6535                           	callstack 26
  6536   004B2E                     l143:
  6537   004B2E  010E               	movlb	14	; () banked
  6538   004B30  B5D8               	btfsc	216,2,b	;volatile
  6539   004B32  EF9D  F025         	goto	u2621
  6540   004B36  EF9F  F025         	goto	u2620
  6541   004B3A                     u2621:
  6542   004B3A  EF97  F025         	goto	l143
  6543   004B3E                     u2620:
  6544   004B3E                     
  6545                           ; BSR set to: 14
  6546   004B3E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6547   004B42  0E1F               	movlw	31
  6548   004B44  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6549   004B46  A4D8               	btfss	status,2,c
  6550   004B48  EFA8  F025         	goto	u2631
  6551   004B4C  EFAA  F025         	goto	u2630
  6552   004B50                     u2631:
  6553   004B50  EF97  F025         	goto	l143
  6554   004B54                     u2630:
  6555   004B54                     
  6556                           ; BSR set to: 14
  6557   004B54  0012               	return		;funcret
  6558   004B56                     __end_of_I2C_2_Master_Idle:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function _I2C_2_Master_Init *****************
  6562 ;; Defined at:
  6563 ;;		line 4 in file "i2c.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used: 1
  6583 ;; Hardware stack levels required when called: 1
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_color_click_init
  6588 ;;		_main
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text42
  6593   004B04                     __ptext42:
  6594                           	callstack 0
  6595   004B04                     _I2C_2_Master_Init:
  6596                           	callstack 28
  6597   004B04                     
  6598                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6599   004B04  010E               	movlb	14	; () banked
  6600   004B06  51D9               	movf	217,w,b	;volatile
  6601   004B08  0BF0               	andlw	-16
  6602   004B0A  0908               	iorlw	8
  6603   004B0C  6FD9               	movwf	217,b	;volatile
  6604   004B0E                     
  6605                           ; BSR set to: 14
  6606                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6607   004B0E  8BD9               	bsf	217,5,b	;volatile
  6608                           
  6609                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6610   004B10  0E9F               	movlw	159
  6611   004B12  6FD6               	movwf	214,b	;volatile
  6612   004B14                     
  6613                           ; BSR set to: 14
  6614                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6615   004B14  8A84               	bsf	132,5,c	;volatile
  6616   004B16                     
  6617                           ; BSR set to: 14
  6618                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6619   004B16  8C84               	bsf	132,6,c	;volatile
  6620   004B18                     
  6621                           ; BSR set to: 14
  6622                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6623   004B18  9BA7               	bcf	167,5,b	;volatile
  6624   004B1A                     
  6625                           ; BSR set to: 14
  6626                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6627   004B1A  9DA7               	bcf	167,6,b	;volatile
  6628                           
  6629                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6630   004B1C  0E1D               	movlw	29
  6631   004B1E  6F1D               	movwf	29,b	;volatile
  6632                           
  6633                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6634   004B20  0E1E               	movlw	30
  6635   004B22  6F1C               	movwf	28,b	;volatile
  6636                           
  6637                           ;i2c.c: 18:   RD5PPS=0x1C;
  6638   004B24  0E1C               	movlw	28
  6639   004B26  6F6F               	movwf	111,b	;volatile
  6640                           
  6641                           ;i2c.c: 19:   RD6PPS=0x1B;
  6642   004B28  0E1B               	movlw	27
  6643   004B2A  6F70               	movwf	112,b	;volatile
  6644   004B2C                     
  6645                           ; BSR set to: 14
  6646   004B2C  0012               	return		;funcret
  6647   004B2E                     __end_of_I2C_2_Master_Init:
  6648                           	callstack 0
  6649                           
  6650 ;; *************** function _YellowMove *****************
  6651 ;; Defined at:
  6652 ;;		line 278 in file "dc_motor.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6655 ;;		 -> motorL(9), 
  6656 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6657 ;;		 -> motorR(9), 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;		None
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      void 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6673 ;;Total ram usage:        4 bytes
  6674 ;; Hardware stack levels used: 1
  6675 ;; Hardware stack levels required when called: 5
  6676 ;; This function calls:
  6677 ;;		_reverseDetect
  6678 ;;		_reverseOneBlock
  6679 ;;		_turnRight45
  6680 ;; This function is called by:
  6681 ;;		_main
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text43
  6686   004666                     __ptext43:
  6687                           	callstack 0
  6688   004666                     _YellowMove:
  6689                           	callstack 25
  6690   004666                     
  6691                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  6692   004666  0EF5               	movlw	low _motorL
  6693   004668  6E1A               	movwf	reverseDetect@mL^0,c
  6694   00466A  0E00               	movlw	high _motorL
  6695   00466C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6696   00466E  0EBE               	movlw	low _motorR
  6697   004670  6E1C               	movwf	reverseDetect@mR^0,c
  6698   004672  0E01               	movlw	high _motorR
  6699   004674  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6700   004676  ECDD  F021         	call	_reverseDetect	;wreg free
  6701                           
  6702                           ;dc_motor.c: 281:     reverseOneBlock(&motorL, &motorR);
  6703   00467A  0EF5               	movlw	low _motorL
  6704   00467C  6E1A               	movwf	reverseOneBlock@mL^0,c
  6705   00467E  0E00               	movlw	high _motorL
  6706   004680  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  6707   004682  0EBE               	movlw	low _motorR
  6708   004684  6E1C               	movwf	reverseOneBlock@mR^0,c
  6709   004686  0E01               	movlw	high _motorR
  6710   004688  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  6711   00468A  ECB0  F021         	call	_reverseOneBlock	;wreg free
  6712                           
  6713                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  6714   00468E  0EF5               	movlw	low _motorL
  6715   004690  6E1A               	movwf	turnRight45@mL^0,c
  6716   004692  0E00               	movlw	high _motorL
  6717   004694  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6718   004696  0EBE               	movlw	low _motorR
  6719   004698  6E1C               	movwf	turnRight45@mR^0,c
  6720   00469A  0E01               	movlw	high _motorR
  6721   00469C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6722   00469E  EC37  F022         	call	_turnRight45	;wreg free
  6723                           
  6724                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  6725   0046A2  0EF5               	movlw	low _motorL
  6726   0046A4  6E1A               	movwf	turnRight45@mL^0,c
  6727   0046A6  0E00               	movlw	high _motorL
  6728   0046A8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6729   0046AA  0EBE               	movlw	low _motorR
  6730   0046AC  6E1C               	movwf	turnRight45@mR^0,c
  6731   0046AE  0E01               	movlw	high _motorR
  6732   0046B0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6733   0046B2  EC37  F022         	call	_turnRight45	;wreg free
  6734   0046B6  0012               	return		;funcret
  6735   0046B8                     __end_of_YellowMove:
  6736                           	callstack 0
  6737                           
  6738 ;; *************** function _turnRight45 *****************
  6739 ;; Defined at:
  6740 ;;		line 201 in file "dc_motor.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6743 ;;		 -> motorL(9), 
  6744 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6745 ;;		 -> motorR(9), 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      void 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6760 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6761 ;;Total ram usage:        6 bytes
  6762 ;; Hardware stack levels used: 1
  6763 ;; Hardware stack levels required when called: 4
  6764 ;; This function calls:
  6765 ;;		_stop
  6766 ;;		_turnRight
  6767 ;; This function is called by:
  6768 ;;		_RedMove
  6769 ;;		_BlueMove
  6770 ;;		_YellowMove
  6771 ;;		_OrangeMove
  6772 ;;		_ReversePink
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text44
  6777   00446E                     __ptext44:
  6778                           	callstack 0
  6779   00446E                     _turnRight45:
  6780                           	callstack 24
  6781   00446E                     
  6782                           ;dc_motor.c: 202:     turnRight(mL,mR);
  6783   00446E  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  6784   004472  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  6785   004476  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  6786   00447A  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  6787   00447E  EC72  F01E         	call	_turnRight	;wreg free
  6788   004482                     
  6789                           ;dc_motor.c: 203:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  6790   004482  0E12               	movlw	18
  6791   004484  6E1F               	movwf	(??_turnRight45+1)^0,c
  6792   004486  0EDC               	movlw	220
  6793   004488  6E1E               	movwf	??_turnRight45^0,c
  6794   00448A  0E60               	movlw	96
  6795   00448C                     u4787:
  6796   00448C  2EE8               	decfsz	wreg,f,c
  6797   00448E  D7FE               	bra	u4787
  6798   004490  2E1E               	decfsz	??_turnRight45^0,f,c
  6799   004492  D7FC               	bra	u4787
  6800   004494  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6801   004496  D7FA               	bra	u4787
  6802   004498                     
  6803                           ;dc_motor.c: 204:     stop(&motorL, &motorR);
  6804   004498  0EF5               	movlw	low _motorL
  6805   00449A  6E14               	movwf	stop@mL^0,c
  6806   00449C  0E00               	movlw	high _motorL
  6807   00449E  6E15               	movwf	(stop@mL+1)^0,c
  6808   0044A0  0EBE               	movlw	low _motorR
  6809   0044A2  6E16               	movwf	stop@mR^0,c
  6810   0044A4  0E01               	movlw	high _motorR
  6811   0044A6  6E17               	movwf	(stop@mR+1)^0,c
  6812   0044A8  EC33  F020         	call	_stop	;wreg free
  6813                           
  6814                           ;dc_motor.c: 205:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6815   0044AC  0E52               	movlw	82
  6816   0044AE  6E1F               	movwf	(??_turnRight45+1)^0,c
  6817   0044B0  0E2B               	movlw	43
  6818   0044B2  6E1E               	movwf	??_turnRight45^0,c
  6819   0044B4  0E00               	movlw	0
  6820   0044B6                     u4797:
  6821   0044B6  2EE8               	decfsz	wreg,f,c
  6822   0044B8  D7FE               	bra	u4797
  6823   0044BA  2E1E               	decfsz	??_turnRight45^0,f,c
  6824   0044BC  D7FC               	bra	u4797
  6825   0044BE  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6826   0044C0  D7FA               	bra	u4797
  6827   0044C2  D000               	nop2	
  6828   0044C4  0012               	return		;funcret
  6829   0044C6                     __end_of_turnRight45:
  6830                           	callstack 0
  6831                           
  6832 ;; *************** function _turnRight *****************
  6833 ;; Defined at:
  6834 ;;		line 128 in file "dc_motor.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6837 ;;		 -> motorL(9), 
  6838 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6839 ;;		 -> motorR(9), 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;		None
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6855 ;;Total ram usage:        6 bytes
  6856 ;; Hardware stack levels used: 1
  6857 ;; Hardware stack levels required when called: 3
  6858 ;; This function calls:
  6859 ;;		_setMotorPWM
  6860 ;; This function is called by:
  6861 ;;		_turnRight45
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text45
  6866   003CE4                     __ptext45:
  6867                           	callstack 0
  6868   003CE4                     _turnRight:
  6869                           	callstack 24
  6870   003CE4                     
  6871                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  6872   003CE4  EE20 F001          	lfsr	2,1
  6873   003CE8  5014               	movf	turnRight@mL^0,w,c
  6874   003CEA  26D9               	addwf	fsr2l,f,c
  6875   003CEC  5015               	movf	(turnRight@mL+1)^0,w,c
  6876   003CEE  22DA               	addwfc	fsr2h,f,c
  6877   003CF0  0E01               	movlw	1
  6878   003CF2  6EDF               	movwf	indf2,c
  6879                           
  6880                           ;dc_motor.c: 131:     mR->direction =0;
  6881   003CF4  EE20 F001          	lfsr	2,1
  6882   003CF8  5016               	movf	turnRight@mR^0,w,c
  6883   003CFA  26D9               	addwf	fsr2l,f,c
  6884   003CFC  5017               	movf	(turnRight@mR+1)^0,w,c
  6885   003CFE  22DA               	addwfc	fsr2h,f,c
  6886   003D00  0E00               	movlw	0
  6887   003D02  6EDF               	movwf	indf2,c
  6888                           
  6889                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  6890   003D04  EFA8  F01E         	goto	l3412
  6891   003D08                     l3404:
  6892                           
  6893                           ;dc_motor.c: 135:         mL->power+=10;
  6894   003D08  C014  FFD9         	movff	turnRight@mL,fsr2l
  6895   003D0C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6896   003D10  0E0A               	movlw	10
  6897   003D12  26DF               	addwf	indf2,f,c
  6898                           
  6899                           ;dc_motor.c: 136:         mR->power+=10;
  6900   003D14  C016  FFD9         	movff	turnRight@mR,fsr2l
  6901   003D18  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6902   003D1C  0E0A               	movlw	10
  6903   003D1E  26DF               	addwf	indf2,f,c
  6904   003D20                     
  6905                           ;dc_motor.c: 138:         setMotorPWM(mL);
  6906   003D20  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  6907   003D24  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  6908   003D28  ECD1  F01A         	call	_setMotorPWM	;wreg free
  6909   003D2C                     
  6910                           ;dc_motor.c: 139:         setMotorPWM(mR);
  6911   003D2C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  6912   003D30  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  6913   003D34  ECD1  F01A         	call	_setMotorPWM	;wreg free
  6914   003D38                     
  6915                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  6916   003D38  0E02               	movlw	2
  6917   003D3A  6E19               	movwf	(??_turnRight+1)^0,c
  6918   003D3C  0EA0               	movlw	160
  6919   003D3E  6E18               	movwf	??_turnRight^0,c
  6920   003D40  0E92               	movlw	146
  6921   003D42                     u4807:
  6922   003D42  2EE8               	decfsz	wreg,f,c
  6923   003D44  D7FE               	bra	u4807
  6924   003D46  2E18               	decfsz	??_turnRight^0,f,c
  6925   003D48  D7FC               	bra	u4807
  6926   003D4A  2E19               	decfsz	(??_turnRight+1)^0,f,c
  6927   003D4C  D7FA               	bra	u4807
  6928   003D4E  D000               	nop2	
  6929   003D50                     l3412:
  6930   003D50  C014  FFD9         	movff	turnRight@mL,fsr2l
  6931   003D54  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6932   003D58  0E1E               	movlw	30
  6933   003D5A  60DF               	cpfslt	indf2,c
  6934   003D5C  EFB2  F01E         	goto	u2701
  6935   003D60  EFB4  F01E         	goto	u2700
  6936   003D64                     u2701:
  6937   003D64  EFC0  F01E         	goto	l516
  6938   003D68                     u2700:
  6939   003D68  C016  FFD9         	movff	turnRight@mR,fsr2l
  6940   003D6C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6941   003D70  0E1D               	movlw	29
  6942   003D72  64DF               	cpfsgt	indf2,c
  6943   003D74  EFBE  F01E         	goto	u2711
  6944   003D78  EFC0  F01E         	goto	u2710
  6945   003D7C                     u2711:
  6946   003D7C  EF84  F01E         	goto	l3404
  6947   003D80                     u2710:
  6948   003D80                     l516:
  6949   003D80  0012               	return		;funcret
  6950   003D82                     __end_of_turnRight:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _Timer0_init *****************
  6954 ;; Defined at:
  6955 ;;		line 8 in file "timers.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;Total ram usage:        0 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_main
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text46
  6984   004BC2                     __ptext46:
  6985                           	callstack 0
  6986   004BC2                     _Timer0_init:
  6987                           	callstack 29
  6988   004BC2                     
  6989                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  6990   004BC2  50D6               	movf	214,w,c	;volatile
  6991   004BC4  0B1F               	andlw	-225
  6992   004BC6  0940               	iorlw	64
  6993   004BC8  6ED6               	movwf	214,c	;volatile
  6994   004BCA                     
  6995                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  6996   004BCA  88D6               	bsf	214,4,c	;volatile
  6997                           
  6998                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  6999   004BCC  50D6               	movf	214,w,c	;volatile
  7000   004BCE  0BF0               	andlw	-16
  7001   004BD0  090E               	iorlw	14
  7002   004BD2  6ED6               	movwf	214,c	;volatile
  7003   004BD4                     
  7004                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  7005   004BD4  88D5               	bsf	213,4,c	;volatile
  7006                           
  7007                           ;timers.c: 16:     TMR0H=0;
  7008   004BD6  0E00               	movlw	0
  7009   004BD8  6ED4               	movwf	212,c	;volatile
  7010                           
  7011                           ;timers.c: 17:     TMR0L=0;
  7012   004BDA  0E00               	movlw	0
  7013   004BDC  6ED3               	movwf	211,c	;volatile
  7014   004BDE                     
  7015                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  7016   004BDE  8ED5               	bsf	213,7,c	;volatile
  7017   004BE0  0012               	return		;funcret
  7018   004BE2                     __end_of_Timer0_init:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _RetryMove *****************
  7022 ;; Defined at:
  7023 ;;		line 315 in file "dc_motor.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7026 ;;		 -> motorL(9), 
  7027 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7028 ;;		 -> motorR(9), 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7043 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7044 ;;Total ram usage:        6 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; Hardware stack levels required when called: 4
  7047 ;; This function calls:
  7048 ;;		_fullSpeedAhead
  7049 ;;		_fullSpeedBack
  7050 ;;		_stop
  7051 ;; This function is called by:
  7052 ;;		_main
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text47
  7057   003FE4                     __ptext47:
  7058                           	callstack 0
  7059   003FE4                     _RetryMove:
  7060                           	callstack 26
  7061   003FE4                     
  7062                           ;dc_motor.c: 316:     fullSpeedBack(mL,mR);
  7063   003FE4  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  7064   003FE8  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  7065   003FEC  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  7066   003FF0  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  7067   003FF4  EC10  F01F         	call	_fullSpeedBack	;wreg free
  7068   003FF8                     
  7069                           ;dc_motor.c: 317:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7070   003FF8  0E29               	movlw	41
  7071   003FFA  6E1F               	movwf	(??_RetryMove+1)^0,c
  7072   003FFC  0E96               	movlw	150
  7073   003FFE  6E1E               	movwf	??_RetryMove^0,c
  7074   004000  0E7F               	movlw	127
  7075   004002                     u4817:
  7076   004002  2EE8               	decfsz	wreg,f,c
  7077   004004  D7FE               	bra	u4817
  7078   004006  2E1E               	decfsz	??_RetryMove^0,f,c
  7079   004008  D7FC               	bra	u4817
  7080   00400A  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7081   00400C  D7FA               	bra	u4817
  7082   00400E  F000               	nop	
  7083   004010                     
  7084                           ;dc_motor.c: 318:     stop(&motorL, &motorR);
  7085   004010  0EF5               	movlw	low _motorL
  7086   004012  6E14               	movwf	stop@mL^0,c
  7087   004014  0E00               	movlw	high _motorL
  7088   004016  6E15               	movwf	(stop@mL+1)^0,c
  7089   004018  0EBE               	movlw	low _motorR
  7090   00401A  6E16               	movwf	stop@mR^0,c
  7091   00401C  0E01               	movlw	high _motorR
  7092   00401E  6E17               	movwf	(stop@mR+1)^0,c
  7093   004020  EC33  F020         	call	_stop	;wreg free
  7094   004024                     
  7095                           ;dc_motor.c: 319:     fullSpeedAhead(mL,mR);
  7096   004024  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  7097   004028  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  7098   00402C  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  7099   004030  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  7100   004034  EC5F  F01F         	call	_fullSpeedAhead	;wreg free
  7101   004038                     
  7102                           ;dc_motor.c: 320:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7103   004038  0E29               	movlw	41
  7104   00403A  6E1F               	movwf	(??_RetryMove+1)^0,c
  7105   00403C  0E96               	movlw	150
  7106   00403E  6E1E               	movwf	??_RetryMove^0,c
  7107   004040  0E7F               	movlw	127
  7108   004042                     u4827:
  7109   004042  2EE8               	decfsz	wreg,f,c
  7110   004044  D7FE               	bra	u4827
  7111   004046  2E1E               	decfsz	??_RetryMove^0,f,c
  7112   004048  D7FC               	bra	u4827
  7113   00404A  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7114   00404C  D7FA               	bra	u4827
  7115   00404E  F000               	nop	
  7116                           
  7117                           ;dc_motor.c: 321:     stop(&motorL, &motorR);
  7118   004050  0EF5               	movlw	low _motorL
  7119   004052  6E14               	movwf	stop@mL^0,c
  7120   004054  0E00               	movlw	high _motorL
  7121   004056  6E15               	movwf	(stop@mL+1)^0,c
  7122   004058  0EBE               	movlw	low _motorR
  7123   00405A  6E16               	movwf	stop@mR^0,c
  7124   00405C  0E01               	movlw	high _motorR
  7125   00405E  6E17               	movwf	(stop@mR+1)^0,c
  7126   004060  EC33  F020         	call	_stop	;wreg free
  7127   004064  0012               	return		;funcret
  7128   004066                     __end_of_RetryMove:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function _PinkMove *****************
  7132 ;; Defined at:
  7133 ;;		line 288 in file "dc_motor.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7136 ;;		 -> motorL(9), 
  7137 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7138 ;;		 -> motorR(9), 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7153 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7154 ;;Total ram usage:        4 bytes
  7155 ;; Hardware stack levels used: 1
  7156 ;; Hardware stack levels required when called: 5
  7157 ;; This function calls:
  7158 ;;		_reverseDetect
  7159 ;;		_reverseOneBlock
  7160 ;;		_turnLeft45
  7161 ;; This function is called by:
  7162 ;;		_main
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text48
  7167   0046B8                     __ptext48:
  7168                           	callstack 0
  7169   0046B8                     _PinkMove:
  7170                           	callstack 25
  7171   0046B8                     
  7172                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  7173   0046B8  0EF5               	movlw	low _motorL
  7174   0046BA  6E1A               	movwf	reverseDetect@mL^0,c
  7175   0046BC  0E00               	movlw	high _motorL
  7176   0046BE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7177   0046C0  0EBE               	movlw	low _motorR
  7178   0046C2  6E1C               	movwf	reverseDetect@mR^0,c
  7179   0046C4  0E01               	movlw	high _motorR
  7180   0046C6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7181   0046C8  ECDD  F021         	call	_reverseDetect	;wreg free
  7182                           
  7183                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  7184   0046CC  0EF5               	movlw	low _motorL
  7185   0046CE  6E1A               	movwf	reverseOneBlock@mL^0,c
  7186   0046D0  0E00               	movlw	high _motorL
  7187   0046D2  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7188   0046D4  0EBE               	movlw	low _motorR
  7189   0046D6  6E1C               	movwf	reverseOneBlock@mR^0,c
  7190   0046D8  0E01               	movlw	high _motorR
  7191   0046DA  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7192   0046DC  ECB0  F021         	call	_reverseOneBlock	;wreg free
  7193                           
  7194                           ;dc_motor.c: 293:     turnLeft45(&motorL, &motorR);
  7195   0046E0  0EF5               	movlw	low _motorL
  7196   0046E2  6E1A               	movwf	turnLeft45@mL^0,c
  7197   0046E4  0E00               	movlw	high _motorL
  7198   0046E6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7199   0046E8  0EBE               	movlw	low _motorR
  7200   0046EA  6E1C               	movwf	turnLeft45@mR^0,c
  7201   0046EC  0E01               	movlw	high _motorR
  7202   0046EE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7203   0046F0  EC63  F022         	call	_turnLeft45	;wreg free
  7204                           
  7205                           ;dc_motor.c: 294:     turnLeft45(&motorL, &motorR);
  7206   0046F4  0EF5               	movlw	low _motorL
  7207   0046F6  6E1A               	movwf	turnLeft45@mL^0,c
  7208   0046F8  0E00               	movlw	high _motorL
  7209   0046FA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7210   0046FC  0EBE               	movlw	low _motorR
  7211   0046FE  6E1C               	movwf	turnLeft45@mR^0,c
  7212   004700  0E01               	movlw	high _motorR
  7213   004702  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7214   004704  EC63  F022         	call	_turnLeft45	;wreg free
  7215   004708  0012               	return		;funcret
  7216   00470A                     __end_of_PinkMove:
  7217                           	callstack 0
  7218                           
  7219 ;; *************** function _turnLeft45 *****************
  7220 ;; Defined at:
  7221 ;;		line 208 in file "dc_motor.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7224 ;;		 -> motorL(9), 
  7225 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7226 ;;		 -> motorR(9), 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;Total ram usage:        6 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; Hardware stack levels required when called: 4
  7245 ;; This function calls:
  7246 ;;		_stop
  7247 ;;		_turnLeft
  7248 ;; This function is called by:
  7249 ;;		_GreenMove
  7250 ;;		_PinkMove
  7251 ;;		_LightBlueMove
  7252 ;;		_ReverseYellow
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text49
  7257   0044C6                     __ptext49:
  7258                           	callstack 0
  7259   0044C6                     _turnLeft45:
  7260                           	callstack 24
  7261   0044C6                     
  7262                           ;dc_motor.c: 209:     turnLeft(mL,mR);
  7263   0044C6  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7264   0044CA  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7265   0044CE  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7266   0044D2  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7267   0044D6  ECC1  F01E         	call	_turnLeft	;wreg free
  7268   0044DA                     
  7269                           ;dc_motor.c: 210:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7270   0044DA  0E12               	movlw	18
  7271   0044DC  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7272   0044DE  0EDC               	movlw	220
  7273   0044E0  6E1E               	movwf	??_turnLeft45^0,c
  7274   0044E2  0E60               	movlw	96
  7275   0044E4                     u4837:
  7276   0044E4  2EE8               	decfsz	wreg,f,c
  7277   0044E6  D7FE               	bra	u4837
  7278   0044E8  2E1E               	decfsz	??_turnLeft45^0,f,c
  7279   0044EA  D7FC               	bra	u4837
  7280   0044EC  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7281   0044EE  D7FA               	bra	u4837
  7282   0044F0                     
  7283                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7284   0044F0  0EF5               	movlw	low _motorL
  7285   0044F2  6E14               	movwf	stop@mL^0,c
  7286   0044F4  0E00               	movlw	high _motorL
  7287   0044F6  6E15               	movwf	(stop@mL+1)^0,c
  7288   0044F8  0EBE               	movlw	low _motorR
  7289   0044FA  6E16               	movwf	stop@mR^0,c
  7290   0044FC  0E01               	movlw	high _motorR
  7291   0044FE  6E17               	movwf	(stop@mR+1)^0,c
  7292   004500  EC33  F020         	call	_stop	;wreg free
  7293                           
  7294                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7295   004504  0E52               	movlw	82
  7296   004506  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7297   004508  0E2B               	movlw	43
  7298   00450A  6E1E               	movwf	??_turnLeft45^0,c
  7299   00450C  0E00               	movlw	0
  7300   00450E                     u4847:
  7301   00450E  2EE8               	decfsz	wreg,f,c
  7302   004510  D7FE               	bra	u4847
  7303   004512  2E1E               	decfsz	??_turnLeft45^0,f,c
  7304   004514  D7FC               	bra	u4847
  7305   004516  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7306   004518  D7FA               	bra	u4847
  7307   00451A  D000               	nop2	
  7308   00451C  0012               	return		;funcret
  7309   00451E                     __end_of_turnLeft45:
  7310                           	callstack 0
  7311                           
  7312 ;; *************** function _turnLeft *****************
  7313 ;; Defined at:
  7314 ;;		line 110 in file "dc_motor.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7317 ;;		 -> motorL(9), 
  7318 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7319 ;;		 -> motorR(9), 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;Total ram usage:        6 bytes
  7336 ;; Hardware stack levels used: 1
  7337 ;; Hardware stack levels required when called: 3
  7338 ;; This function calls:
  7339 ;;		_setMotorPWM
  7340 ;; This function is called by:
  7341 ;;		_turnLeft45
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text50
  7346   003D82                     __ptext50:
  7347                           	callstack 0
  7348   003D82                     _turnLeft:
  7349                           	callstack 24
  7350   003D82                     
  7351                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  7352   003D82  EE20 F001          	lfsr	2,1
  7353   003D86  5014               	movf	turnLeft@mL^0,w,c
  7354   003D88  26D9               	addwf	fsr2l,f,c
  7355   003D8A  5015               	movf	(turnLeft@mL+1)^0,w,c
  7356   003D8C  22DA               	addwfc	fsr2h,f,c
  7357   003D8E  0E00               	movlw	0
  7358   003D90  6EDF               	movwf	indf2,c
  7359                           
  7360                           ;dc_motor.c: 113:     mR->direction =1;
  7361   003D92  EE20 F001          	lfsr	2,1
  7362   003D96  5016               	movf	turnLeft@mR^0,w,c
  7363   003D98  26D9               	addwf	fsr2l,f,c
  7364   003D9A  5017               	movf	(turnLeft@mR+1)^0,w,c
  7365   003D9C  22DA               	addwfc	fsr2h,f,c
  7366   003D9E  0E01               	movlw	1
  7367   003DA0  6EDF               	movwf	indf2,c
  7368                           
  7369                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  7370   003DA2  EFF7  F01E         	goto	l3398
  7371   003DA6                     l3390:
  7372                           
  7373                           ;dc_motor.c: 117:         mL->power+=10;
  7374   003DA6  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7375   003DAA  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7376   003DAE  0E0A               	movlw	10
  7377   003DB0  26DF               	addwf	indf2,f,c
  7378                           
  7379                           ;dc_motor.c: 118:         mR->power+=10;
  7380   003DB2  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7381   003DB6  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7382   003DBA  0E0A               	movlw	10
  7383   003DBC  26DF               	addwf	indf2,f,c
  7384   003DBE                     
  7385                           ;dc_motor.c: 120:         setMotorPWM(mL);
  7386   003DBE  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7387   003DC2  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7388   003DC6  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7389   003DCA                     
  7390                           ;dc_motor.c: 121:         setMotorPWM(mR);
  7391   003DCA  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7392   003DCE  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7393   003DD2  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7394   003DD6                     
  7395                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7396   003DD6  0E02               	movlw	2
  7397   003DD8  6E19               	movwf	(??_turnLeft+1)^0,c
  7398   003DDA  0EA0               	movlw	160
  7399   003DDC  6E18               	movwf	??_turnLeft^0,c
  7400   003DDE  0E92               	movlw	146
  7401   003DE0                     u4857:
  7402   003DE0  2EE8               	decfsz	wreg,f,c
  7403   003DE2  D7FE               	bra	u4857
  7404   003DE4  2E18               	decfsz	??_turnLeft^0,f,c
  7405   003DE6  D7FC               	bra	u4857
  7406   003DE8  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7407   003DEA  D7FA               	bra	u4857
  7408   003DEC  D000               	nop2	
  7409   003DEE                     l3398:
  7410   003DEE  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7411   003DF2  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7412   003DF6  0E1E               	movlw	30
  7413   003DF8  60DF               	cpfslt	indf2,c
  7414   003DFA  EF01  F01F         	goto	u2681
  7415   003DFE  EF03  F01F         	goto	u2680
  7416   003E02                     u2681:
  7417   003E02  EF0F  F01F         	goto	l508
  7418   003E06                     u2680:
  7419   003E06  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7420   003E0A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7421   003E0E  0E1D               	movlw	29
  7422   003E10  64DF               	cpfsgt	indf2,c
  7423   003E12  EF0D  F01F         	goto	u2691
  7424   003E16  EF0F  F01F         	goto	u2690
  7425   003E1A                     u2691:
  7426   003E1A  EFD3  F01E         	goto	l3390
  7427   003E1E                     u2690:
  7428   003E1E                     l508:
  7429   003E1E  0012               	return		;funcret
  7430   003E20                     __end_of_turnLeft:
  7431                           	callstack 0
  7432                           
  7433 ;; *************** function _reverseOneBlock *****************
  7434 ;; Defined at:
  7435 ;;		line 222 in file "dc_motor.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7438 ;;		 -> motorL(9), 
  7439 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7440 ;;		 -> motorR(9), 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      void 
  7445 ;; Registers used:
  7446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;Total ram usage:        6 bytes
  7457 ;; Hardware stack levels used: 1
  7458 ;; Hardware stack levels required when called: 4
  7459 ;; This function calls:
  7460 ;;		_fullSpeedBack
  7461 ;;		_stop
  7462 ;; This function is called by:
  7463 ;;		_YellowMove
  7464 ;;		_PinkMove
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text51
  7469   004360                     __ptext51:
  7470                           	callstack 0
  7471   004360                     _reverseOneBlock:
  7472                           	callstack 25
  7473   004360                     
  7474                           ;dc_motor.c: 223:     fullSpeedBack(mL,mR);
  7475   004360  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7476   004364  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7477   004368  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7478   00436C  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7479   004370  EC10  F01F         	call	_fullSpeedBack	;wreg free
  7480   004374                     
  7481                           ;dc_motor.c: 224:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  7482   004374  0EA3               	movlw	163
  7483   004376  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7484   004378  0E57               	movlw	87
  7485   00437A  6E1E               	movwf	??_reverseOneBlock^0,c
  7486   00437C  0E02               	movlw	2
  7487   00437E                     u4867:
  7488   00437E  2EE8               	decfsz	wreg,f,c
  7489   004380  D7FE               	bra	u4867
  7490   004382  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7491   004384  D7FC               	bra	u4867
  7492   004386  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7493   004388  D7FA               	bra	u4867
  7494   00438A  D000               	nop2	
  7495   00438C                     
  7496                           ;dc_motor.c: 225:     stop(&motorL, &motorR);
  7497   00438C  0EF5               	movlw	low _motorL
  7498   00438E  6E14               	movwf	stop@mL^0,c
  7499   004390  0E00               	movlw	high _motorL
  7500   004392  6E15               	movwf	(stop@mL+1)^0,c
  7501   004394  0EBE               	movlw	low _motorR
  7502   004396  6E16               	movwf	stop@mR^0,c
  7503   004398  0E01               	movlw	high _motorR
  7504   00439A  6E17               	movwf	(stop@mR+1)^0,c
  7505   00439C  EC33  F020         	call	_stop	;wreg free
  7506                           
  7507                           ;dc_motor.c: 226:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7508   0043A0  0E52               	movlw	82
  7509   0043A2  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7510   0043A4  0E2B               	movlw	43
  7511   0043A6  6E1E               	movwf	??_reverseOneBlock^0,c
  7512   0043A8  0E00               	movlw	0
  7513   0043AA                     u4877:
  7514   0043AA  2EE8               	decfsz	wreg,f,c
  7515   0043AC  D7FE               	bra	u4877
  7516   0043AE  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7517   0043B0  D7FC               	bra	u4877
  7518   0043B2  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7519   0043B4  D7FA               	bra	u4877
  7520   0043B6  D000               	nop2	
  7521   0043B8  0012               	return		;funcret
  7522   0043BA                     __end_of_reverseOneBlock:
  7523                           	callstack 0
  7524                           
  7525 ;; *************** function _reverseDetect *****************
  7526 ;; Defined at:
  7527 ;;		line 215 in file "dc_motor.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7530 ;;		 -> motorL(9), 
  7531 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7532 ;;		 -> motorR(9), 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;		None
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7548 ;;Total ram usage:        6 bytes
  7549 ;; Hardware stack levels used: 1
  7550 ;; Hardware stack levels required when called: 4
  7551 ;; This function calls:
  7552 ;;		_fullSpeedBack
  7553 ;;		_stop
  7554 ;; This function is called by:
  7555 ;;		_RedMove
  7556 ;;		_GreenMove
  7557 ;;		_BlueMove
  7558 ;;		_YellowMove
  7559 ;;		_PinkMove
  7560 ;;		_OrangeMove
  7561 ;;		_LightBlueMove
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text52
  7566   0043BA                     __ptext52:
  7567                           	callstack 0
  7568   0043BA                     _reverseDetect:
  7569                           	callstack 24
  7570   0043BA                     
  7571                           ;dc_motor.c: 216:     fullSpeedBack(mL,mR);
  7572   0043BA  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  7573   0043BE  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  7574   0043C2  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  7575   0043C6  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  7576   0043CA  EC10  F01F         	call	_fullSpeedBack	;wreg free
  7577   0043CE                     
  7578                           ;dc_motor.c: 217:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7579   0043CE  0E11               	movlw	17
  7580   0043D0  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7581   0043D2  0E3C               	movlw	60
  7582   0043D4  6E1E               	movwf	??_reverseDetect^0,c
  7583   0043D6  0ECB               	movlw	203
  7584   0043D8                     u4887:
  7585   0043D8  2EE8               	decfsz	wreg,f,c
  7586   0043DA  D7FE               	bra	u4887
  7587   0043DC  2E1E               	decfsz	??_reverseDetect^0,f,c
  7588   0043DE  D7FC               	bra	u4887
  7589   0043E0  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7590   0043E2  D7FA               	bra	u4887
  7591   0043E4  F000               	nop	
  7592   0043E6                     
  7593                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  7594   0043E6  0EF5               	movlw	low _motorL
  7595   0043E8  6E14               	movwf	stop@mL^0,c
  7596   0043EA  0E00               	movlw	high _motorL
  7597   0043EC  6E15               	movwf	(stop@mL+1)^0,c
  7598   0043EE  0EBE               	movlw	low _motorR
  7599   0043F0  6E16               	movwf	stop@mR^0,c
  7600   0043F2  0E01               	movlw	high _motorR
  7601   0043F4  6E17               	movwf	(stop@mR+1)^0,c
  7602   0043F6  EC33  F020         	call	_stop	;wreg free
  7603                           
  7604                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7605   0043FA  0E52               	movlw	82
  7606   0043FC  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7607   0043FE  0E2B               	movlw	43
  7608   004400  6E1E               	movwf	??_reverseDetect^0,c
  7609   004402  0E00               	movlw	0
  7610   004404                     u4897:
  7611   004404  2EE8               	decfsz	wreg,f,c
  7612   004406  D7FE               	bra	u4897
  7613   004408  2E1E               	decfsz	??_reverseDetect^0,f,c
  7614   00440A  D7FC               	bra	u4897
  7615   00440C  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7616   00440E  D7FA               	bra	u4897
  7617   004410  D000               	nop2	
  7618   004412  0012               	return		;funcret
  7619   004414                     __end_of_reverseDetect:
  7620                           	callstack 0
  7621                           
  7622 ;; *************** function _fullSpeedBack *****************
  7623 ;; Defined at:
  7624 ;;		line 184 in file "dc_motor.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7627 ;;		 -> motorL(9), 
  7628 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7629 ;;		 -> motorR(9), 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7645 ;;Total ram usage:        6 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; Hardware stack levels required when called: 3
  7648 ;; This function calls:
  7649 ;;		_setMotorPWM
  7650 ;; This function is called by:
  7651 ;;		_reverseDetect
  7652 ;;		_reverseOneBlock
  7653 ;;		_RetryMove
  7654 ;;		_Backhalfblock
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text53
  7659   003E20                     __ptext53:
  7660                           	callstack 0
  7661   003E20                     _fullSpeedBack:
  7662                           	callstack 24
  7663   003E20                     
  7664                           ;dc_motor.c: 184: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 185: {;dc_motor.c: 187:     mL->direction =0;
  7665   003E20  EE20 F001          	lfsr	2,1
  7666   003E24  5014               	movf	fullSpeedBack@mL^0,w,c
  7667   003E26  26D9               	addwf	fsr2l,f,c
  7668   003E28  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  7669   003E2A  22DA               	addwfc	fsr2h,f,c
  7670   003E2C  0E00               	movlw	0
  7671   003E2E  6EDF               	movwf	indf2,c
  7672                           
  7673                           ;dc_motor.c: 188:     mR->direction =0;
  7674   003E30  EE20 F001          	lfsr	2,1
  7675   003E34  5016               	movf	fullSpeedBack@mR^0,w,c
  7676   003E36  26D9               	addwf	fsr2l,f,c
  7677   003E38  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  7678   003E3A  22DA               	addwfc	fsr2h,f,c
  7679   003E3C  0E00               	movlw	0
  7680   003E3E  6EDF               	movwf	indf2,c
  7681                           
  7682                           ;dc_motor.c: 189:     while (mL->power < power && mR->power < power){
  7683   003E40  EF46  F01F         	goto	l3426
  7684   003E44                     l3418:
  7685                           
  7686                           ;dc_motor.c: 191:         mL->power+=10;
  7687   003E44  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7688   003E48  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7689   003E4C  0E0A               	movlw	10
  7690   003E4E  26DF               	addwf	indf2,f,c
  7691                           
  7692                           ;dc_motor.c: 192:         mR->power+=10;
  7693   003E50  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7694   003E54  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7695   003E58  0E0A               	movlw	10
  7696   003E5A  26DF               	addwf	indf2,f,c
  7697   003E5C                     
  7698                           ;dc_motor.c: 194:         setMotorPWM(mL);
  7699   003E5C  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  7700   003E60  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  7701   003E64  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7702   003E68                     
  7703                           ;dc_motor.c: 195:         setMotorPWM(mR);
  7704   003E68  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  7705   003E6C  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  7706   003E70  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7707   003E74                     
  7708                           ;dc_motor.c: 197:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7709   003E74  0E02               	movlw	2
  7710   003E76  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  7711   003E78  0EA0               	movlw	160
  7712   003E7A  6E18               	movwf	??_fullSpeedBack^0,c
  7713   003E7C  0E92               	movlw	146
  7714   003E7E                     u4907:
  7715   003E7E  2EE8               	decfsz	wreg,f,c
  7716   003E80  D7FE               	bra	u4907
  7717   003E82  2E18               	decfsz	??_fullSpeedBack^0,f,c
  7718   003E84  D7FC               	bra	u4907
  7719   003E86  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  7720   003E88  D7FA               	bra	u4907
  7721   003E8A  D000               	nop2	
  7722   003E8C                     l3426:
  7723   003E8C  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7724   003E90  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7725   003E94  0E1E               	movlw	30
  7726   003E96  60DF               	cpfslt	indf2,c
  7727   003E98  EF50  F01F         	goto	u2721
  7728   003E9C  EF52  F01F         	goto	u2720
  7729   003EA0                     u2721:
  7730   003EA0  EF5E  F01F         	goto	l540
  7731   003EA4                     u2720:
  7732   003EA4  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7733   003EA8  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7734   003EAC  0E1D               	movlw	29
  7735   003EAE  64DF               	cpfsgt	indf2,c
  7736   003EB0  EF5C  F01F         	goto	u2731
  7737   003EB4  EF5E  F01F         	goto	u2730
  7738   003EB8                     u2731:
  7739   003EB8  EF22  F01F         	goto	l3418
  7740   003EBC                     u2730:
  7741   003EBC                     l540:
  7742   003EBC  0012               	return		;funcret
  7743   003EBE                     __end_of_fullSpeedBack:
  7744                           	callstack 0
  7745                           
  7746 ;; *************** function _Interrupts_init *****************
  7747 ;; Defined at:
  7748 ;;		line 12 in file "interrupts.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;		None
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		None
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;Total ram usage:        0 bytes
  7767 ;; Hardware stack levels used: 1
  7768 ;; Hardware stack levels required when called: 1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_main
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text54
  7777   004C4C                     __ptext54:
  7778                           	callstack 0
  7779   004C4C                     _Interrupts_init:
  7780                           	callstack 29
  7781   004C4C  0012               	return		;funcret
  7782   004C4E                     __end_of_Interrupts_init:
  7783                           	callstack 0
  7784                           
  7785 ;; *************** function _Forwardhalfblock *****************
  7786 ;; Defined at:
  7787 ;;		line 235 in file "dc_motor.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7790 ;;		 -> motorL(9), 
  7791 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7792 ;;		 -> motorR(9), 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7808 ;;Total ram usage:        6 bytes
  7809 ;; Hardware stack levels used: 1
  7810 ;; Hardware stack levels required when called: 4
  7811 ;; This function calls:
  7812 ;;		_fullSpeedAhead
  7813 ;;		_stop
  7814 ;; This function is called by:
  7815 ;;		_main
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text55
  7820   004414                     __ptext55:
  7821                           	callstack 0
  7822   004414                     _Forwardhalfblock:
  7823                           	callstack 26
  7824   004414                     
  7825                           ;dc_motor.c: 236:     fullSpeedAhead(mL,mR);
  7826   004414  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  7827   004418  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  7828   00441C  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  7829   004420  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  7830   004424  EC5F  F01F         	call	_fullSpeedAhead	;wreg free
  7831   004428                     
  7832                           ;dc_motor.c: 237:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  7833   004428  0E52               	movlw	82
  7834   00442A  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  7835   00442C  0E2B               	movlw	43
  7836   00442E  6E1E               	movwf	??_Forwardhalfblock^0,c
  7837   004430  0E00               	movlw	0
  7838   004432                     u4917:
  7839   004432  2EE8               	decfsz	wreg,f,c
  7840   004434  D7FE               	bra	u4917
  7841   004436  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  7842   004438  D7FC               	bra	u4917
  7843   00443A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  7844   00443C  D7FA               	bra	u4917
  7845   00443E  D000               	nop2	
  7846   004440                     
  7847                           ;dc_motor.c: 238:     stop(&motorL, &motorR);
  7848   004440  0EF5               	movlw	low _motorL
  7849   004442  6E14               	movwf	stop@mL^0,c
  7850   004444  0E00               	movlw	high _motorL
  7851   004446  6E15               	movwf	(stop@mL+1)^0,c
  7852   004448  0EBE               	movlw	low _motorR
  7853   00444A  6E16               	movwf	stop@mR^0,c
  7854   00444C  0E01               	movlw	high _motorR
  7855   00444E  6E17               	movwf	(stop@mR+1)^0,c
  7856   004450  EC33  F020         	call	_stop	;wreg free
  7857                           
  7858                           ;dc_motor.c: 239:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7859   004454  0E52               	movlw	82
  7860   004456  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  7861   004458  0E2B               	movlw	43
  7862   00445A  6E1E               	movwf	??_Forwardhalfblock^0,c
  7863   00445C  0E00               	movlw	0
  7864   00445E                     u4927:
  7865   00445E  2EE8               	decfsz	wreg,f,c
  7866   004460  D7FE               	bra	u4927
  7867   004462  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  7868   004464  D7FC               	bra	u4927
  7869   004466  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  7870   004468  D7FA               	bra	u4927
  7871   00446A  D000               	nop2	
  7872   00446C  0012               	return		;funcret
  7873   00446E                     __end_of_Forwardhalfblock:
  7874                           	callstack 0
  7875                           
  7876 ;; *************** function _stop *****************
  7877 ;; Defined at:
  7878 ;;		line 92 in file "dc_motor.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7881 ;;		 -> motorL(9), 
  7882 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7883 ;;		 -> motorR(9), 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;Total ram usage:        6 bytes
  7900 ;; Hardware stack levels used: 1
  7901 ;; Hardware stack levels required when called: 3
  7902 ;; This function calls:
  7903 ;;		_setMotorPWM
  7904 ;; This function is called by:
  7905 ;;		_main
  7906 ;;		_turnRight45
  7907 ;;		_turnLeft45
  7908 ;;		_reverseDetect
  7909 ;;		_reverseOneBlock
  7910 ;;		_ForwardOneBlock
  7911 ;;		_Forwardhalfblock
  7912 ;;		_RetryMove
  7913 ;;		_Backhalfblock
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text56
  7918   004066                     __ptext56:
  7919                           	callstack 0
  7920   004066                     _stop:
  7921                           	callstack 27
  7922   004066                     
  7923                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  7924   004066  EF59  F020         	goto	l3384
  7925   00406A                     l3376:
  7926                           
  7927                           ;dc_motor.c: 96:         mL->power-=10;
  7928   00406A  C014  FFD9         	movff	stop@mL,fsr2l
  7929   00406E  C015  FFDA         	movff	stop@mL+1,fsr2h
  7930   004072  0E0A               	movlw	10
  7931   004074  5EDF               	subwf	indf2,f,c
  7932                           
  7933                           ;dc_motor.c: 97:         mR->power-=10;
  7934   004076  C016  FFD9         	movff	stop@mR,fsr2l
  7935   00407A  C017  FFDA         	movff	stop@mR+1,fsr2h
  7936   00407E  0E0A               	movlw	10
  7937   004080  5EDF               	subwf	indf2,f,c
  7938   004082                     
  7939                           ;dc_motor.c: 102:         setMotorPWM(mL);
  7940   004082  C014  F00E         	movff	stop@mL,setMotorPWM@m
  7941   004086  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  7942   00408A  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7943   00408E                     
  7944                           ;dc_motor.c: 103:         setMotorPWM(mR);
  7945   00408E  C016  F00E         	movff	stop@mR,setMotorPWM@m
  7946   004092  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  7947   004096  ECD1  F01A         	call	_setMotorPWM	;wreg free
  7948   00409A                     
  7949                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7950   00409A  0E02               	movlw	2
  7951   00409C  6E19               	movwf	(??_stop+1)^0,c
  7952   00409E  0EA0               	movlw	160
  7953   0040A0  6E18               	movwf	??_stop^0,c
  7954   0040A2  0E92               	movlw	146
  7955   0040A4                     u4937:
  7956   0040A4  2EE8               	decfsz	wreg,f,c
  7957   0040A6  D7FE               	bra	u4937
  7958   0040A8  2E18               	decfsz	??_stop^0,f,c
  7959   0040AA  D7FC               	bra	u4937
  7960   0040AC  2E19               	decfsz	(??_stop+1)^0,f,c
  7961   0040AE  D7FA               	bra	u4937
  7962   0040B0  D000               	nop2	
  7963   0040B2                     l3384:
  7964                           
  7965                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  7966   0040B2  C014  FFD9         	movff	stop@mL,fsr2l
  7967   0040B6  C015  FFDA         	movff	stop@mL+1,fsr2h
  7968   0040BA  50DF               	movf	indf2,w,c
  7969   0040BC  A4D8               	btfss	status,2,c
  7970   0040BE  EF63  F020         	goto	u2661
  7971   0040C2  EF65  F020         	goto	u2660
  7972   0040C6                     u2661:
  7973   0040C6  EF35  F020         	goto	l3376
  7974   0040CA                     u2660:
  7975   0040CA  C016  FFD9         	movff	stop@mR,fsr2l
  7976   0040CE  C017  FFDA         	movff	stop@mR+1,fsr2h
  7977   0040D2  50DF               	movf	indf2,w,c
  7978   0040D4  A4D8               	btfss	status,2,c
  7979   0040D6  EF6F  F020         	goto	u2671
  7980   0040DA  EF71  F020         	goto	u2670
  7981   0040DE                     u2671:
  7982   0040DE  EF35  F020         	goto	l3376
  7983   0040E2                     u2670:
  7984   0040E2  0012               	return		;funcret
  7985   0040E4                     __end_of_stop:
  7986                           	callstack 0
  7987                           
  7988 ;; *************** function _fullSpeedAhead *****************
  7989 ;; Defined at:
  7990 ;;		line 146 in file "dc_motor.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7993 ;;		 -> motorL(9), 
  7994 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7995 ;;		 -> motorR(9), 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8011 ;;Total ram usage:        6 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 3
  8014 ;; This function calls:
  8015 ;;		_setMotorPWM
  8016 ;; This function is called by:
  8017 ;;		_main
  8018 ;;		_ForwardOneBlock
  8019 ;;		_Forwardhalfblock
  8020 ;;		_RetryMove
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           	psect	text57
  8025   003EBE                     __ptext57:
  8026                           	callstack 0
  8027   003EBE                     _fullSpeedAhead:
  8028                           	callstack 24
  8029   003EBE                     
  8030                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  8031   003EBE  EE20 F001          	lfsr	2,1
  8032   003EC2  5014               	movf	fullSpeedAhead@mL^0,w,c
  8033   003EC4  26D9               	addwf	fsr2l,f,c
  8034   003EC6  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8035   003EC8  22DA               	addwfc	fsr2h,f,c
  8036   003ECA  0E01               	movlw	1
  8037   003ECC  6EDF               	movwf	indf2,c
  8038                           
  8039                           ;dc_motor.c: 150:     mR->direction =1;
  8040   003ECE  EE20 F001          	lfsr	2,1
  8041   003ED2  5016               	movf	fullSpeedAhead@mR^0,w,c
  8042   003ED4  26D9               	addwf	fsr2l,f,c
  8043   003ED6  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8044   003ED8  22DA               	addwfc	fsr2h,f,c
  8045   003EDA  0E01               	movlw	1
  8046   003EDC  6EDF               	movwf	indf2,c
  8047                           
  8048                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  8049   003EDE  EF95  F01F         	goto	l3370
  8050   003EE2                     l3362:
  8051                           
  8052                           ;dc_motor.c: 153:         mL->power+=10;
  8053   003EE2  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8054   003EE6  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8055   003EEA  0E0A               	movlw	10
  8056   003EEC  26DF               	addwf	indf2,f,c
  8057                           
  8058                           ;dc_motor.c: 154:         mR->power+=10;
  8059   003EEE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8060   003EF2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8061   003EF6  0E0A               	movlw	10
  8062   003EF8  26DF               	addwf	indf2,f,c
  8063   003EFA                     
  8064                           ;dc_motor.c: 156:         setMotorPWM(mL);
  8065   003EFA  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8066   003EFE  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8067   003F02  ECD1  F01A         	call	_setMotorPWM	;wreg free
  8068   003F06                     
  8069                           ;dc_motor.c: 157:         setMotorPWM(mR);
  8070   003F06  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8071   003F0A  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8072   003F0E  ECD1  F01A         	call	_setMotorPWM	;wreg free
  8073   003F12                     
  8074                           ;dc_motor.c: 160:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8075   003F12  0E02               	movlw	2
  8076   003F14  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  8077   003F16  0EA0               	movlw	160
  8078   003F18  6E18               	movwf	??_fullSpeedAhead^0,c
  8079   003F1A  0E92               	movlw	146
  8080   003F1C                     u4947:
  8081   003F1C  2EE8               	decfsz	wreg,f,c
  8082   003F1E  D7FE               	bra	u4947
  8083   003F20  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  8084   003F22  D7FC               	bra	u4947
  8085   003F24  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  8086   003F26  D7FA               	bra	u4947
  8087   003F28  D000               	nop2	
  8088   003F2A                     l3370:
  8089   003F2A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8090   003F2E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8091   003F32  0E1E               	movlw	30
  8092   003F34  60DF               	cpfslt	indf2,c
  8093   003F36  EF9F  F01F         	goto	u2641
  8094   003F3A  EFA1  F01F         	goto	u2640
  8095   003F3E                     u2641:
  8096   003F3E  EFAD  F01F         	goto	l524
  8097   003F42                     u2640:
  8098   003F42  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8099   003F46  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8100   003F4A  0E1D               	movlw	29
  8101   003F4C  64DF               	cpfsgt	indf2,c
  8102   003F4E  EFAB  F01F         	goto	u2651
  8103   003F52  EFAD  F01F         	goto	u2650
  8104   003F56                     u2651:
  8105   003F56  EF71  F01F         	goto	l3362
  8106   003F5A                     u2650:
  8107   003F5A                     l524:
  8108   003F5A  0012               	return		;funcret
  8109   003F5C                     __end_of_fullSpeedAhead:
  8110                           	callstack 0
  8111                           
  8112 ;; *************** function _setMotorPWM *****************
  8113 ;; Defined at:
  8114 ;;		line 67 in file "dc_motor.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8117 ;;		 -> motorR(9), motorL(9), 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  negDuty         1   18[COMRAM] unsigned char 
  8120 ;;  posDuty         1   17[COMRAM] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;Total ram usage:        6 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; Hardware stack levels required when called: 2
  8137 ;; This function calls:
  8138 ;;		___lwdiv
  8139 ;;		___wmul
  8140 ;; This function is called by:
  8141 ;;		_stop
  8142 ;;		_turnLeft
  8143 ;;		_turnRight
  8144 ;;		_fullSpeedAhead
  8145 ;;		_timed_forward
  8146 ;;		_fullSpeedBack
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text58
  8151   0035A2                     __ptext58:
  8152                           	callstack 0
  8153   0035A2                     _setMotorPWM:
  8154                           	callstack 27
  8155   0035A2                     
  8156                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  8157   0035A2  EE20 F002          	lfsr	2,2
  8158   0035A6  500E               	movf	setMotorPWM@m^0,w,c
  8159   0035A8  26D9               	addwf	fsr2l,f,c
  8160   0035AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8161   0035AC  22DA               	addwfc	fsr2h,f,c
  8162   0035AE  50DF               	movf	indf2,w,c
  8163   0035B0  B4D8               	btfsc	status,2,c
  8164   0035B2  EFDD  F01A         	goto	u2441
  8165   0035B6  EFDF  F01A         	goto	u2440
  8166   0035BA                     u2441:
  8167   0035BA  EF13  F01B         	goto	l3248
  8168   0035BE                     u2440:
  8169   0035BE                     
  8170                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8171   0035BE  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8172   0035C2  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8173   0035C6  50DF               	movf	indf2,w,c
  8174   0035C8  6E10               	movwf	??_setMotorPWM^0,c
  8175   0035CA  5010               	movf	??_setMotorPWM^0,w,c
  8176   0035CC  6E01               	movwf	___wmul@multiplier^0,c
  8177   0035CE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8178   0035D0  EE20 F003          	lfsr	2,3
  8179   0035D4  500E               	movf	setMotorPWM@m^0,w,c
  8180   0035D6  26D9               	addwf	fsr2l,f,c
  8181   0035D8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8182   0035DA  22DA               	addwfc	fsr2h,f,c
  8183   0035DC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8184   0035E0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8185   0035E4  ECBE  F025         	call	___wmul	;wreg free
  8186   0035E8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8187   0035EC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8188   0035F0  0E00               	movlw	0
  8189   0035F2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8190   0035F4  0E64               	movlw	100
  8191   0035F6  6E09               	movwf	___lwdiv@divisor^0,c
  8192   0035F8  ECAF  F020         	call	___lwdiv	;wreg free
  8193   0035FC  EE20 F003          	lfsr	2,3
  8194   003600  500E               	movf	setMotorPWM@m^0,w,c
  8195   003602  26D9               	addwf	fsr2l,f,c
  8196   003604  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8197   003606  22DA               	addwfc	fsr2h,f,c
  8198   003608  50DF               	movf	indf2,w,c
  8199   00360A  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8200   00360C  5007               	movf	?___lwdiv^0,w,c
  8201   00360E  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8202   003610  6E12               	movwf	setMotorPWM@posDuty^0,c
  8203   003612                     
  8204                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  8205   003612  EE20 F003          	lfsr	2,3
  8206   003616  500E               	movf	setMotorPWM@m^0,w,c
  8207   003618  26D9               	addwf	fsr2l,f,c
  8208   00361A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8209   00361C  22DA               	addwfc	fsr2h,f,c
  8210   00361E  50DF               	movf	indf2,w,c
  8211   003620  6E13               	movwf	setMotorPWM@negDuty^0,c
  8212                           
  8213                           ;dc_motor.c: 74:     }
  8214   003622  EF36  F01B         	goto	l3252
  8215   003626                     l3248:
  8216                           
  8217                           ;dc_motor.c: 76:         posDuty=0;
  8218   003626  0E00               	movlw	0
  8219   003628  6E12               	movwf	setMotorPWM@posDuty^0,c
  8220   00362A                     
  8221                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8222   00362A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8223   00362E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8224   003632  50DF               	movf	indf2,w,c
  8225   003634  6E10               	movwf	??_setMotorPWM^0,c
  8226   003636  5010               	movf	??_setMotorPWM^0,w,c
  8227   003638  6E01               	movwf	___wmul@multiplier^0,c
  8228   00363A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8229   00363C  EE20 F003          	lfsr	2,3
  8230   003640  500E               	movf	setMotorPWM@m^0,w,c
  8231   003642  26D9               	addwf	fsr2l,f,c
  8232   003644  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8233   003646  22DA               	addwfc	fsr2h,f,c
  8234   003648  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8235   00364C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8236   003650  ECBE  F025         	call	___wmul	;wreg free
  8237   003654  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8238   003658  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8239   00365C  0E00               	movlw	0
  8240   00365E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8241   003660  0E64               	movlw	100
  8242   003662  6E09               	movwf	___lwdiv@divisor^0,c
  8243   003664  ECAF  F020         	call	___lwdiv	;wreg free
  8244   003668  5007               	movf	?___lwdiv^0,w,c
  8245   00366A  6E13               	movwf	setMotorPWM@negDuty^0,c
  8246   00366C                     l3252:
  8247                           
  8248                           ;dc_motor.c: 80:     if (m->direction) {
  8249   00366C  EE20 F001          	lfsr	2,1
  8250   003670  500E               	movf	setMotorPWM@m^0,w,c
  8251   003672  26D9               	addwf	fsr2l,f,c
  8252   003674  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8253   003676  22DA               	addwfc	fsr2h,f,c
  8254   003678  50DF               	movf	indf2,w,c
  8255   00367A  B4D8               	btfsc	status,2,c
  8256   00367C  EF42  F01B         	goto	u2451
  8257   003680  EF44  F01B         	goto	u2450
  8258   003684                     u2451:
  8259   003684  EF66  F01B         	goto	l3256
  8260   003688                     u2450:
  8261   003688                     
  8262                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8263   003688  EE20 F005          	lfsr	2,5
  8264   00368C  500E               	movf	setMotorPWM@m^0,w,c
  8265   00368E  26D9               	addwf	fsr2l,f,c
  8266   003690  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8267   003692  22DA               	addwfc	fsr2h,f,c
  8268   003694  CFDE F010          	movff	postinc2,??_setMotorPWM
  8269   003698  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8270   00369C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8271   0036A0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8272   0036A4  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8273                           
  8274                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8275   0036A8  EE20 F007          	lfsr	2,7
  8276   0036AC  500E               	movf	setMotorPWM@m^0,w,c
  8277   0036AE  26D9               	addwf	fsr2l,f,c
  8278   0036B0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8279   0036B2  22DA               	addwfc	fsr2h,f,c
  8280   0036B4  CFDE F010          	movff	postinc2,??_setMotorPWM
  8281   0036B8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8282   0036BC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8283   0036C0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8284   0036C4  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8285                           
  8286                           ;dc_motor.c: 85:     } else {
  8287   0036C8  EF86  F01B         	goto	l494
  8288   0036CC                     l3256:
  8289                           
  8290                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  8291   0036CC  EE20 F005          	lfsr	2,5
  8292   0036D0  500E               	movf	setMotorPWM@m^0,w,c
  8293   0036D2  26D9               	addwf	fsr2l,f,c
  8294   0036D4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8295   0036D6  22DA               	addwfc	fsr2h,f,c
  8296   0036D8  CFDE F010          	movff	postinc2,??_setMotorPWM
  8297   0036DC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8298   0036E0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8299   0036E4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8300   0036E8  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8301                           
  8302                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  8303   0036EC  EE20 F007          	lfsr	2,7
  8304   0036F0  500E               	movf	setMotorPWM@m^0,w,c
  8305   0036F2  26D9               	addwf	fsr2l,f,c
  8306   0036F4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8307   0036F6  22DA               	addwfc	fsr2h,f,c
  8308   0036F8  CFDE F010          	movff	postinc2,??_setMotorPWM
  8309   0036FC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8310   003700  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8311   003704  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8312   003708  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8313   00370C                     l494:
  8314   00370C  0012               	return		;funcret
  8315   00370E                     __end_of_setMotorPWM:
  8316                           	callstack 0
  8317                           
  8318 ;; *************** function ___wmul *****************
  8319 ;; Defined at:
  8320 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  multiplier      2    0[COMRAM] unsigned int 
  8323 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;  product         2    4[COMRAM] unsigned int 
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  2    0[COMRAM] unsigned int 
  8328 ;; Registers used:
  8329 ;;		wreg, status,2, status,0, prodl, prodh
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;Total ram usage:        6 bytes
  8340 ;; Hardware stack levels used: 1
  8341 ;; Hardware stack levels required when called: 1
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_setMotorPWM
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text59
  8350   004B7C                     __ptext59:
  8351                           	callstack 0
  8352   004B7C                     ___wmul:
  8353                           	callstack 27
  8354   004B7C  5001               	movf	___wmul@multiplier^0,w,c
  8355   004B7E  0203               	mulwf	___wmul@multiplicand^0,c
  8356   004B80  CFF3 F005          	movff	prodl,___wmul@product
  8357   004B84  CFF4 F006          	movff	prodh,___wmul@product+1
  8358   004B88  5001               	movf	___wmul@multiplier^0,w,c
  8359   004B8A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8360   004B8C  50F3               	movf	243,w,c
  8361   004B8E  2606               	addwf	(___wmul@product+1)^0,f,c
  8362   004B90  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8363   004B92  0203               	mulwf	___wmul@multiplicand^0,c
  8364   004B94  50F3               	movf	243,w,c
  8365   004B96  2606               	addwf	(___wmul@product+1)^0,f,c
  8366   004B98  C005  F001         	movff	___wmul@product,?___wmul
  8367   004B9C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8368   004BA0  0012               	return		;funcret
  8369   004BA2                     __end_of___wmul:
  8370                           	callstack 0
  8371                           
  8372 ;; *************** function ___lwdiv *****************
  8373 ;; Defined at:
  8374 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;  dividend        2    6[COMRAM] unsigned int 
  8377 ;;  divisor         2    8[COMRAM] unsigned int 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  quotient        2   10[COMRAM] unsigned int 
  8380 ;;  counter         1   12[COMRAM] unsigned char 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  2    6[COMRAM] unsigned int 
  8383 ;; Registers used:
  8384 ;;		wreg, status,2, status,0
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;Total ram usage:        7 bytes
  8395 ;; Hardware stack levels used: 1
  8396 ;; Hardware stack levels required when called: 1
  8397 ;; This function calls:
  8398 ;;		Nothing
  8399 ;; This function is called by:
  8400 ;;		_setMotorPWM
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text60
  8405   00415E                     __ptext60:
  8406                           	callstack 0
  8407   00415E                     ___lwdiv:
  8408                           	callstack 27
  8409   00415E  0E00               	movlw	0
  8410   004160  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8411   004162  0E00               	movlw	0
  8412   004164  6E0B               	movwf	___lwdiv@quotient^0,c
  8413   004166  5009               	movf	___lwdiv@divisor^0,w,c
  8414   004168  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8415   00416A  B4D8               	btfsc	status,2,c
  8416   00416C  EFBA  F020         	goto	u2401
  8417   004170  EFBC  F020         	goto	u2400
  8418   004174                     u2401:
  8419   004174  EFE4  F020         	goto	l1167
  8420   004178                     u2400:
  8421   004178  0E01               	movlw	1
  8422   00417A  6E0D               	movwf	___lwdiv@counter^0,c
  8423   00417C  EFC4  F020         	goto	l3220
  8424   004180                     l3218:
  8425   004180  90D8               	bcf	status,0,c
  8426   004182  3609               	rlcf	___lwdiv@divisor^0,f,c
  8427   004184  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8428   004186  2A0D               	incf	___lwdiv@counter^0,f,c
  8429   004188                     l3220:
  8430   004188  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8431   00418A  EFC9  F020         	goto	u2411
  8432   00418E  EFCB  F020         	goto	u2410
  8433   004192                     u2411:
  8434   004192  EFC0  F020         	goto	l3218
  8435   004196                     u2410:
  8436   004196                     l3222:
  8437   004196  90D8               	bcf	status,0,c
  8438   004198  360B               	rlcf	___lwdiv@quotient^0,f,c
  8439   00419A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8440   00419C  5009               	movf	___lwdiv@divisor^0,w,c
  8441   00419E  5C07               	subwf	___lwdiv@dividend^0,w,c
  8442   0041A0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8443   0041A2  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8444   0041A4  A0D8               	btfss	status,0,c
  8445   0041A6  EFD7  F020         	goto	u2421
  8446   0041AA  EFD9  F020         	goto	u2420
  8447   0041AE                     u2421:
  8448   0041AE  EFDE  F020         	goto	l3230
  8449   0041B2                     u2420:
  8450   0041B2  5009               	movf	___lwdiv@divisor^0,w,c
  8451   0041B4  5E07               	subwf	___lwdiv@dividend^0,f,c
  8452   0041B6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8453   0041B8  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8454   0041BA  800B               	bsf	___lwdiv@quotient^0,0,c
  8455   0041BC                     l3230:
  8456   0041BC  90D8               	bcf	status,0,c
  8457   0041BE  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8458   0041C0  3209               	rrcf	___lwdiv@divisor^0,f,c
  8459   0041C2  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8460   0041C4  EFCB  F020         	goto	l3222
  8461   0041C8                     l1167:
  8462   0041C8  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8463   0041CC  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8464   0041D0  0012               	return		;funcret
  8465   0041D2                     __end_of___lwdiv:
  8466                           	callstack 0
  8467                           
  8468 ;; *************** function _Colour_decider *****************
  8469 ;; Defined at:
  8470 ;;		line 125 in file "color.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  vals            2   74[COMRAM] PTR struct RGB
  8473 ;;		 -> vals(8), 
  8474 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8475 ;;		 -> rel(12), 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  RGB_col        12    6[BANK0 ] float [3]
  8478 ;;  Hue             4   28[BANK0 ] float 
  8479 ;;  Cmin            4   22[BANK0 ] float 
  8480 ;;  Cmax            4   18[BANK0 ] float 
  8481 ;;  i               2   26[BANK0 ] int 
  8482 ;;  Cmax_i          2    4[BANK0 ] int 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  2   74[COMRAM] int 
  8485 ;; Registers used:
  8486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8492 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8493 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8495 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;Total ram usage:       38 bytes
  8497 ;; Hardware stack levels used: 1
  8498 ;; Hardware stack levels required when called: 3
  8499 ;; This function calls:
  8500 ;;		___fladd
  8501 ;;		___fldiv
  8502 ;;		___fleq
  8503 ;;		___flge
  8504 ;;		___flmul
  8505 ;;		___flsub
  8506 ;;		___xxtofl
  8507 ;; This function is called by:
  8508 ;;		_main
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text61
  8513   000E26                     __ptext61:
  8514                           	callstack 0
  8515   000E26                     _Colour_decider:
  8516                           	callstack 27
  8517   000E26                     
  8518                           ;color.c: 126:     float Cmax = 0;
  8519   000E26  0E00               	movlw	0
  8520   000E28  0100               	movlb	0	; () banked
  8521   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8522   000E2C  0E00               	movlw	0
  8523   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8524   000E30  0E00               	movlw	0
  8525   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8526   000E34  0E00               	movlw	0
  8527   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8528                           
  8529                           ;color.c: 127:     float Cmin= 100000;
  8530   000E38  0E00               	movlw	0
  8531   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8532   000E3C  0E50               	movlw	80
  8533   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8534   000E40  0EC3               	movlw	195
  8535   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8536   000E44  0E47               	movlw	71
  8537   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8538                           
  8539                           ;color.c: 128:     int Cmax_i =4;
  8540   000E48  0E00               	movlw	0
  8541   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8542   000E4C  0E04               	movlw	4
  8543   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8544   000E50                     
  8545                           ; BSR set to: 0
  8546                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8547   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8548   000E54  0E0B               	movlw	11
  8549   000E56                     u3931:
  8550   000E56  6ADE               	clrf	postinc2,c
  8551   000E58  06E8               	decf	wreg,f,c
  8552   000E5A  E2FD               	bc	u3931
  8553   000E5C                     
  8554                           ; BSR set to: 0
  8555   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8556   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8557   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  8558   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8559   000E6C  0E00               	movlw	0
  8560   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8561   000E70  0EFF               	movlw	-1
  8562   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  8563   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  8564   000E76  0E01               	movlw	1
  8565   000E78  EC33  F019         	call	___xxtofl
  8566   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8567   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8568   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8569   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8570   000E8C  EE20 F002          	lfsr	2,2
  8571   000E90  504B               	movf	Colour_decider@vals^0,w,c
  8572   000E92  26D9               	addwf	fsr2l,f,c
  8573   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8574   000E96  22DA               	addwfc	fsr2h,f,c
  8575   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8576   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8577   000EA0  0E00               	movlw	0
  8578   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8579   000EA4  0EFF               	movlw	-1
  8580   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8581   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8582   000EAA  0E01               	movlw	1
  8583   000EAC  EC33  F019         	call	___xxtofl
  8584   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8585   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8586   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8587   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8588   000EC0  EE20 F004          	lfsr	2,4
  8589   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8590   000EC6  26D9               	addwf	fsr2l,f,c
  8591   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8592   000ECA  22DA               	addwfc	fsr2h,f,c
  8593   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8594   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8595   000ED4  0E00               	movlw	0
  8596   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8597   000ED8  0EFF               	movlw	-1
  8598   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8599   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8600   000EDE  0E01               	movlw	1
  8601   000EE0  EC33  F019         	call	___xxtofl
  8602   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8603   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8604   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8605   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8606   000EF4                     
  8607                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8608   000EF4  0E00               	movlw	0
  8609   000EF6  0100               	movlb	0	; () banked
  8610   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8611   000EFA  0E00               	movlw	0
  8612   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  8613   000EFE                     l4284:
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8617   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  8618   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8619   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8620   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8621   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  8622   000F10  6E4F               	movwf	??_Colour_decider^0,c
  8623   000F12  0E00               	movlw	high Colour_decider@RGB_col
  8624   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  8625   000F16  90D8               	bcf	status,0,c
  8626   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8627   000F1A  6ED9               	movwf	fsr2l,c
  8628   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8629   000F1E  6EDA               	movwf	fsr2h,c
  8630   000F20  90D8               	bcf	status,0,c
  8631   000F22  36D9               	rlcf	fsr2l,f,c
  8632   000F24  36DA               	rlcf	fsr2h,f,c
  8633   000F26  504F               	movf	??_Colour_decider^0,w,c
  8634   000F28  26D9               	addwf	fsr2l,f,c
  8635   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8636   000F2C  22DA               	addwfc	fsr2h,f,c
  8637   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  8638   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  8639   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  8640   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  8641   000F3E  ECE1  F01C         	call	___flge	;wreg free
  8642   000F42  B0D8               	btfsc	status,0,c
  8643   000F44  EFA6  F007         	goto	u3941
  8644   000F48  EFA8  F007         	goto	u3940
  8645   000F4C                     u3941:
  8646   000F4C  EFC5  F007         	goto	l4290
  8647   000F50                     u3940:
  8648   000F50                     
  8649                           ;color.c: 137:             Cmax=RGB_col[i];
  8650   000F50  0E66               	movlw	low Colour_decider@RGB_col
  8651   000F52  6E4F               	movwf	??_Colour_decider^0,c
  8652   000F54  0E00               	movlw	high Colour_decider@RGB_col
  8653   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  8654   000F58  90D8               	bcf	status,0,c
  8655   000F5A  0100               	movlb	0	; () banked
  8656   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8657   000F5E  6ED9               	movwf	fsr2l,c
  8658   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8659   000F62  6EDA               	movwf	fsr2h,c
  8660   000F64  90D8               	bcf	status,0,c
  8661   000F66  36D9               	rlcf	fsr2l,f,c
  8662   000F68  36DA               	rlcf	fsr2h,f,c
  8663   000F6A  504F               	movf	??_Colour_decider^0,w,c
  8664   000F6C  26D9               	addwf	fsr2l,f,c
  8665   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8666   000F70  22DA               	addwfc	fsr2h,f,c
  8667   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8668   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8669   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8670   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8671   000F82                     
  8672                           ; BSR set to: 0
  8673                           ;color.c: 138:             Cmax_i=i;
  8674   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8675   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8676   000F8A                     l4290:
  8677                           
  8678                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8679   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  8680   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  8681   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  8682   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  8683   000F92  90D8               	bcf	status,0,c
  8684   000F94  0100               	movlb	0	; () banked
  8685   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8686   000F98  6ED9               	movwf	fsr2l,c
  8687   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8688   000F9C  6EDA               	movwf	fsr2h,c
  8689   000F9E  90D8               	bcf	status,0,c
  8690   000FA0  36D9               	rlcf	fsr2l,f,c
  8691   000FA2  36DA               	rlcf	fsr2h,f,c
  8692   000FA4  504F               	movf	??_Colour_decider^0,w,c
  8693   000FA6  26D9               	addwf	fsr2l,f,c
  8694   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  8695   000FAA  22DA               	addwfc	fsr2h,f,c
  8696   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  8697   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  8698   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  8699   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  8700   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  8701   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  8702   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  8703   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  8704   000FCC  ECE1  F01C         	call	___flge	;wreg free
  8705   000FD0  B0D8               	btfsc	status,0,c
  8706   000FD2  EFED  F007         	goto	u3951
  8707   000FD6  EFEF  F007         	goto	u3950
  8708   000FDA                     u3951:
  8709   000FDA  EF08  F008         	goto	l4294
  8710   000FDE                     u3950:
  8711   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  8712   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  8713   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  8714   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  8715   000FE6  90D8               	bcf	status,0,c
  8716   000FE8  0100               	movlb	0	; () banked
  8717   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8718   000FEC  6ED9               	movwf	fsr2l,c
  8719   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8720   000FF0  6EDA               	movwf	fsr2h,c
  8721   000FF2  90D8               	bcf	status,0,c
  8722   000FF4  36D9               	rlcf	fsr2l,f,c
  8723   000FF6  36DA               	rlcf	fsr2h,f,c
  8724   000FF8  504F               	movf	??_Colour_decider^0,w,c
  8725   000FFA  26D9               	addwf	fsr2l,f,c
  8726   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  8727   000FFE  22DA               	addwfc	fsr2h,f,c
  8728   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  8729   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  8730   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  8731   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  8732   001010                     l4294:
  8733                           
  8734                           ;color.c: 141:     }
  8735   001010  0100               	movlb	0	; () banked
  8736   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  8737   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  8738   001016                     
  8739                           ; BSR set to: 0
  8740   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  8741   001018  EF17  F008         	goto	u3961
  8742   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  8743   00101E  E109               	bnz	u3960
  8744   001020  0E03               	movlw	3
  8745   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  8746   001024  A0D8               	btfss	status,0,c
  8747   001026  EF17  F008         	goto	u3961
  8748   00102A  EF19  F008         	goto	u3960
  8749   00102E                     u3961:
  8750   00102E  EF7F  F007         	goto	l4284
  8751   001032                     u3960:
  8752   001032                     
  8753                           ; BSR set to: 0
  8754                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  8755   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8756   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8757   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8758   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8759   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8760   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8761   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8762   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8763   001052  EC4C  F024         	call	___flsub	;wreg free
  8764   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  8765   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  8766   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  8767   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  8768   001066  0E00               	movlw	0
  8769   001068  6E1D               	movwf	___fleq@ff2^0,c
  8770   00106A  0E00               	movlw	0
  8771   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8772   00106E  0E00               	movlw	0
  8773   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8774   001072  0E00               	movlw	0
  8775   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  8776   001076  EC1D  F01E         	call	___fleq	;wreg free
  8777   00107A  A0D8               	btfss	status,0,c
  8778   00107C  EF42  F008         	goto	u3971
  8779   001080  EF44  F008         	goto	u3970
  8780   001084                     u3971:
  8781   001084  EF4A  F008         	goto	l4304
  8782   001088                     u3970:
  8783   001088                     l4300:
  8784   001088  0E00               	movlw	0
  8785   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8786   00108C  0E00               	movlw	0
  8787   00108E  6E4B               	movwf	?_Colour_decider^0,c
  8788   001090  EF80  F00C         	goto	l76
  8789   001094                     l4304:
  8790                           
  8791                           ;color.c: 146:     if (Cmax_i==0){
  8792   001094  0100               	movlb	0	; () banked
  8793   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  8794   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8795   00109A  A4D8               	btfss	status,2,c
  8796   00109C  EF52  F008         	goto	u3981
  8797   0010A0  EF54  F008         	goto	u3980
  8798   0010A4                     u3981:
  8799   0010A4  EFC8  F008         	goto	l4312
  8800   0010A8                     u3980:
  8801   0010A8                     
  8802                           ; BSR set to: 0
  8803                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8804   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8805   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8806   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8807   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8808   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8809   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8810   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8811   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8812   0010C8  EC4C  F024         	call	___flsub	;wreg free
  8813   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  8814   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8815   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8816   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8817   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  8818   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8819   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8820   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8821   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  8822   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8823   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8824   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8825   0010FC  EC4C  F024         	call	___flsub	;wreg free
  8826   001100  C011  F019         	movff	?___flsub,___fldiv@b
  8827   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8828   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8829   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8830   001110  EC80  F013         	call	___fldiv	;wreg free
  8831   001114  C019  F032         	movff	?___fldiv,___flmul@b
  8832   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  8833   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  8834   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  8835   001124  0E00               	movlw	0
  8836   001126  6E36               	movwf	___flmul@a^0,c
  8837   001128  0E00               	movlw	0
  8838   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  8839   00112C  0E70               	movlw	112
  8840   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  8841   001130  0E42               	movlw	66
  8842   001132  6E39               	movwf	(___flmul@a+3)^0,c
  8843   001134  EC6B  F011         	call	___flmul	;wreg free
  8844   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8845   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8846   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8847   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8848   001148                     
  8849                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  8850   001148  0100               	movlb	0	; () banked
  8851   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  8852   00114C  EFAC  F008         	goto	u3990
  8853   001150  EFAA  F008         	goto	u3991
  8854   001154                     u3991:
  8855   001154  EFA7  F009         	goto	l4322
  8856   001158                     u3990:
  8857   001158                     
  8858                           ; BSR set to: 0
  8859   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  8860   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  8861   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  8862   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  8863   001168  0E00               	movlw	0
  8864   00116A  6E05               	movwf	___fladd@a^0,c
  8865   00116C  0E00               	movlw	0
  8866   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  8867   001170  0EB4               	movlw	180
  8868   001172  6E07               	movwf	(___fladd@a+2)^0,c
  8869   001174  0E43               	movlw	67
  8870   001176  6E08               	movwf	(___fladd@a+3)^0,c
  8871   001178  EC0B  F00F         	call	___fladd	;wreg free
  8872   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  8873   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  8874   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  8875   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  8876   00118C  EFA7  F009         	goto	l4322
  8877   001190                     l4312:
  8878                           
  8879                           ; BSR set to: 0
  8880   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  8881   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8882   001194  A4D8               	btfss	status,2,c
  8883   001196  EFCF  F008         	goto	u4001
  8884   00119A  EFD1  F008         	goto	u4000
  8885   00119E                     u4001:
  8886   00119E  EF3D  F009         	goto	l4318
  8887   0011A2                     u4000:
  8888   0011A2                     
  8889                           ; BSR set to: 0
  8890                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8891   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8892   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8893   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8894   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8895   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8896   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8897   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8898   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8899   0011C2  EC4C  F024         	call	___flsub	;wreg free
  8900   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  8901   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8902   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8903   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8904   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  8905   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  8906   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  8907   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  8908   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  8909   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  8910   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  8911   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  8912   0011F6  EC4C  F024         	call	___flsub	;wreg free
  8913   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  8914   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8915   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8916   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8917   00120A  EC80  F013         	call	___fldiv	;wreg free
  8918   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$2837
  8919   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2837+1
  8920   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2837+2
  8921   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2837+3
  8922   00121E                     
  8923                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8924   00121E  0E00               	movlw	0
  8925   001220  6E05               	movwf	___fladd@a^0,c
  8926   001222  0E00               	movlw	0
  8927   001224  6E06               	movwf	(___fladd@a+1)^0,c
  8928   001226  0E00               	movlw	0
  8929   001228  6E07               	movwf	(___fladd@a+2)^0,c
  8930   00122A  0E40               	movlw	64
  8931   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  8932   00122E  C060  F001         	movff	_Colour_decider$2837,___fladd@b
  8933   001232  C061  F002         	movff	_Colour_decider$2837+1,___fladd@b+1
  8934   001236  C062  F003         	movff	_Colour_decider$2837+2,___fladd@b+2
  8935   00123A  C063  F004         	movff	_Colour_decider$2837+3,___fladd@b+3
  8936   00123E  EC0B  F00F         	call	___fladd	;wreg free
  8937   001242  C001  F032         	movff	?___fladd,___flmul@b
  8938   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  8939   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  8940   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  8941   001252  0E00               	movlw	0
  8942   001254  6E36               	movwf	___flmul@a^0,c
  8943   001256  0E00               	movlw	0
  8944   001258  6E37               	movwf	(___flmul@a+1)^0,c
  8945   00125A  0E70               	movlw	112
  8946   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  8947   00125E  0E42               	movlw	66
  8948   001260  6E39               	movwf	(___flmul@a+3)^0,c
  8949   001262  EC6B  F011         	call	___flmul	;wreg free
  8950   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8951   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8952   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8953   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8954                           
  8955                           ;color.c: 155:     }
  8956   001276  EFA7  F009         	goto	l4322
  8957   00127A                     l4318:
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8961   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8962   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8963   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8964   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8965   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8966   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8967   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8968   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8969   00129A  EC4C  F024         	call	___flsub	;wreg free
  8970   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  8971   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8972   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8973   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8974   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  8975   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  8976   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  8977   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  8978   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  8979   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  8980   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  8981   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  8982   0012CE  EC4C  F024         	call	___flsub	;wreg free
  8983   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  8984   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8985   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8986   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8987   0012E2  EC80  F013         	call	___fldiv	;wreg free
  8988   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$2837
  8989   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2837+1
  8990   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2837+2
  8991   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2837+3
  8992   0012F6                     
  8993                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8994   0012F6  0E00               	movlw	0
  8995   0012F8  6E05               	movwf	___fladd@a^0,c
  8996   0012FA  0E00               	movlw	0
  8997   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  8998   0012FE  0E80               	movlw	128
  8999   001300  6E07               	movwf	(___fladd@a+2)^0,c
  9000   001302  0E40               	movlw	64
  9001   001304  6E08               	movwf	(___fladd@a+3)^0,c
  9002   001306  C060  F001         	movff	_Colour_decider$2837,___fladd@b
  9003   00130A  C061  F002         	movff	_Colour_decider$2837+1,___fladd@b+1
  9004   00130E  C062  F003         	movff	_Colour_decider$2837+2,___fladd@b+2
  9005   001312  C063  F004         	movff	_Colour_decider$2837+3,___fladd@b+3
  9006   001316  EC0B  F00F         	call	___fladd	;wreg free
  9007   00131A  C001  F032         	movff	?___fladd,___flmul@b
  9008   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9009   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9010   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9011   00132A  0E00               	movlw	0
  9012   00132C  6E36               	movwf	___flmul@a^0,c
  9013   00132E  0E00               	movlw	0
  9014   001330  6E37               	movwf	(___flmul@a+1)^0,c
  9015   001332  0E70               	movlw	112
  9016   001334  6E38               	movwf	(___flmul@a+2)^0,c
  9017   001336  0E42               	movlw	66
  9018   001338  6E39               	movwf	(___flmul@a+3)^0,c
  9019   00133A  EC6B  F011         	call	___flmul	;wreg free
  9020   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9021   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9022   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9023   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9024   00134E                     l4322:
  9025                           
  9026                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9027   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9028   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9029   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9030   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9031   00135E  0E00               	movlw	0
  9032   001360  6E05               	movwf	___flge@ff2^0,c
  9033   001362  0E00               	movlw	0
  9034   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  9035   001366  0EA5               	movlw	165
  9036   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  9037   00136A  0E43               	movlw	67
  9038   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  9039   00136E  ECE1  F01C         	call	___flge	;wreg free
  9040   001372  A0D8               	btfss	status,0,c
  9041   001374  EFBE  F009         	goto	u4011
  9042   001378  EFC0  F009         	goto	u4010
  9043   00137C                     u4011:
  9044   00137C  EFDF  F009         	goto	l4332
  9045   001380                     u4010:
  9046   001380  0E00               	movlw	0
  9047   001382  6E01               	movwf	___flge@ff1^0,c
  9048   001384  0E00               	movlw	0
  9049   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  9050   001388  0EB4               	movlw	180
  9051   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  9052   00138C  0E43               	movlw	67
  9053   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  9054   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9055   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9056   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9057   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9058   0013A0  ECE1  F01C         	call	___flge	;wreg free
  9059   0013A4  A0D8               	btfss	status,0,c
  9060   0013A6  EFD7  F009         	goto	u4021
  9061   0013AA  EFD9  F009         	goto	u4020
  9062   0013AE                     u4021:
  9063   0013AE  EFDF  F009         	goto	l4332
  9064   0013B2                     u4020:
  9065   0013B2                     
  9066                           ;color.c: 164:         return 1;
  9067   0013B2  0E00               	movlw	0
  9068   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9069   0013B6  0E01               	movlw	1
  9070   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  9071   0013BA  EF80  F00C         	goto	l76
  9072   0013BE                     l4332:
  9073   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9074   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9075   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9076   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9077   0013CE  0E00               	movlw	0
  9078   0013D0  6E05               	movwf	___flge@ff2^0,c
  9079   0013D2  0E00               	movlw	0
  9080   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  9081   0013D6  0EA0               	movlw	160
  9082   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  9083   0013DA  0E40               	movlw	64
  9084   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  9085   0013DE  ECE1  F01C         	call	___flge	;wreg free
  9086   0013E2  A0D8               	btfss	status,0,c
  9087   0013E4  EFF6  F009         	goto	u4031
  9088   0013E8  EFF8  F009         	goto	u4030
  9089   0013EC                     u4031:
  9090   0013EC  EF17  F00A         	goto	l4342
  9091   0013F0                     u4030:
  9092   0013F0  0E00               	movlw	0
  9093   0013F2  6E01               	movwf	___flge@ff1^0,c
  9094   0013F4  0E00               	movlw	0
  9095   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  9096   0013F8  0E40               	movlw	64
  9097   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  9098   0013FC  0E41               	movlw	65
  9099   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  9100   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9101   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9102   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9103   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9104   001410  ECE1  F01C         	call	___flge	;wreg free
  9105   001414  A0D8               	btfss	status,0,c
  9106   001416  EF0F  F00A         	goto	u4041
  9107   00141A  EF11  F00A         	goto	u4040
  9108   00141E                     u4041:
  9109   00141E  EF17  F00A         	goto	l4342
  9110   001422                     u4040:
  9111   001422                     
  9112                           ;color.c: 168:         return 2;
  9113   001422  0E00               	movlw	0
  9114   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9115   001426  0E02               	movlw	2
  9116   001428  6E4B               	movwf	?_Colour_decider^0,c
  9117   00142A  EF80  F00C         	goto	l76
  9118   00142E                     l4342:
  9119   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9120   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9121   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9122   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9123   00143E  0E00               	movlw	0
  9124   001440  6E05               	movwf	___flge@ff2^0,c
  9125   001442  0E00               	movlw	0
  9126   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  9127   001446  0EA0               	movlw	160
  9128   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  9129   00144A  0E41               	movlw	65
  9130   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  9131   00144E  ECE1  F01C         	call	___flge	;wreg free
  9132   001452  A0D8               	btfss	status,0,c
  9133   001454  EF2E  F00A         	goto	u4051
  9134   001458  EF30  F00A         	goto	u4050
  9135   00145C                     u4051:
  9136   00145C  EFB0  F00A         	goto	l4368
  9137   001460                     u4050:
  9138   001460  0E00               	movlw	0
  9139   001462  6E01               	movwf	___flge@ff1^0,c
  9140   001464  0E00               	movlw	0
  9141   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  9142   001468  0EE8               	movlw	232
  9143   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  9144   00146C  0E41               	movlw	65
  9145   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  9146   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9147   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9148   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9149   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9150   001480  ECE1  F01C         	call	___flge	;wreg free
  9151   001484  A0D8               	btfss	status,0,c
  9152   001486  EF47  F00A         	goto	u4061
  9153   00148A  EF49  F00A         	goto	u4060
  9154   00148E                     u4061:
  9155   00148E  EFB0  F00A         	goto	l4368
  9156   001492                     u4060:
  9157   001492                     
  9158                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  9159   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9160   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9161   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  9162   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9163   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9164   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9165   0014AA  0ECD               	movlw	205
  9166   0014AC  6E05               	movwf	___flge@ff2^0,c
  9167   0014AE  0ECC               	movlw	204
  9168   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  9169   0014B2  0E4C               	movlw	76
  9170   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  9171   0014B6  0E3E               	movlw	62
  9172   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  9173   0014BA  ECE1  F01C         	call	___flge	;wreg free
  9174   0014BE  A0D8               	btfss	status,0,c
  9175   0014C0  EF64  F00A         	goto	u4071
  9176   0014C4  EF66  F00A         	goto	u4070
  9177   0014C8                     u4071:
  9178   0014C8  EF85  F00A         	goto	l4356
  9179   0014CC                     u4070:
  9180   0014CC  0E00               	movlw	0
  9181   0014CE  6E01               	movwf	___flge@ff1^0,c
  9182   0014D0  0E00               	movlw	0
  9183   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  9184   0014D4  0E80               	movlw	128
  9185   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  9186   0014D8  0E3E               	movlw	62
  9187   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9188   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9189   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9190   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9191   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9192   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9193   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9194   0014F4  ECE1  F01C         	call	___flge	;wreg free
  9195   0014F8  A0D8               	btfss	status,0,c
  9196   0014FA  EF81  F00A         	goto	u4081
  9197   0014FE  EF83  F00A         	goto	u4080
  9198   001502                     u4081:
  9199   001502  EF85  F00A         	goto	l4356
  9200   001506                     u4080:
  9201   001506  EF44  F008         	goto	l4300
  9202   00150A                     l4356:
  9203   00150A  EE20 F008          	lfsr	2,8
  9204   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9205   001510  26D9               	addwf	fsr2l,f,c
  9206   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9207   001514  22DA               	addwfc	fsr2h,f,c
  9208   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9209   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9210   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9211   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9212   001526  0E29               	movlw	41
  9213   001528  6E05               	movwf	___flge@ff2^0,c
  9214   00152A  0E5C               	movlw	92
  9215   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9216   00152E  0E0F               	movlw	15
  9217   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9218   001532  0E3E               	movlw	62
  9219   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9220   001536  ECE1  F01C         	call	___flge	;wreg free
  9221   00153A  A0D8               	btfss	status,0,c
  9222   00153C  EFA2  F00A         	goto	u4091
  9223   001540  EFA4  F00A         	goto	u4090
  9224   001544                     u4091:
  9225   001544  EFAA  F00A         	goto	l4364
  9226   001548                     u4090:
  9227   001548                     l4358:
  9228                           
  9229                           ;color.c: 179:             return 4;
  9230   001548  0E00               	movlw	0
  9231   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9232   00154C  0E04               	movlw	4
  9233   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9234   001550  EF80  F00C         	goto	l76
  9235   001554                     l4364:
  9236                           
  9237                           ;color.c: 182:             return 3;
  9238   001554  0E00               	movlw	0
  9239   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9240   001558  0E03               	movlw	3
  9241   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9242   00155C  EF80  F00C         	goto	l76
  9243   001560                     l4368:
  9244   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9245   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9246   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9247   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9248   001570  0E00               	movlw	0
  9249   001572  6E05               	movwf	___flge@ff2^0,c
  9250   001574  0E00               	movlw	0
  9251   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9252   001578  0E34               	movlw	52
  9253   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9254   00157C  0E42               	movlw	66
  9255   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9256   001580  ECE1  F01C         	call	___flge	;wreg free
  9257   001584  A0D8               	btfss	status,0,c
  9258   001586  EFC7  F00A         	goto	u4101
  9259   00158A  EFC9  F00A         	goto	u4100
  9260   00158E                     u4101:
  9261   00158E  EF2E  F00B         	goto	l4392
  9262   001592                     u4100:
  9263   001592  0E00               	movlw	0
  9264   001594  6E01               	movwf	___flge@ff1^0,c
  9265   001596  0E00               	movlw	0
  9266   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9267   00159A  0EA0               	movlw	160
  9268   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9269   00159E  0E42               	movlw	66
  9270   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9271   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9272   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9273   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9274   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9275   0015B2  ECE1  F01C         	call	___flge	;wreg free
  9276   0015B6  A0D8               	btfss	status,0,c
  9277   0015B8  EFE0  F00A         	goto	u4111
  9278   0015BC  EFE2  F00A         	goto	u4110
  9279   0015C0                     u4111:
  9280   0015C0  EF2E  F00B         	goto	l4392
  9281   0015C4                     u4110:
  9282   0015C4                     
  9283                           ;color.c: 188:         if(0.15<=rel->B){
  9284   0015C4  EE20 F008          	lfsr	2,8
  9285   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9286   0015CA  26D9               	addwf	fsr2l,f,c
  9287   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9288   0015CE  22DA               	addwfc	fsr2h,f,c
  9289   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9290   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9291   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9292   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9293   0015E0  0E9A               	movlw	154
  9294   0015E2  6E05               	movwf	___flge@ff2^0,c
  9295   0015E4  0E99               	movlw	153
  9296   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9297   0015E8  0E19               	movlw	25
  9298   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9299   0015EC  0E3E               	movlw	62
  9300   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9301   0015F0  ECE1  F01C         	call	___flge	;wreg free
  9302   0015F4  A0D8               	btfss	status,0,c
  9303   0015F6  EFFF  F00A         	goto	u4121
  9304   0015FA  EF01  F00B         	goto	u4120
  9305   0015FE                     u4121:
  9306   0015FE  EF03  F00B         	goto	l4380
  9307   001602                     u4120:
  9308   001602  EFA4  F00A         	goto	l4358
  9309   001606                     l4380:
  9310   001606  EE20 F008          	lfsr	2,8
  9311   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9312   00160C  26D9               	addwf	fsr2l,f,c
  9313   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9314   001610  22DA               	addwfc	fsr2h,f,c
  9315   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9316   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9317   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9318   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9319   001622  0E8F               	movlw	143
  9320   001624  6E05               	movwf	___flge@ff2^0,c
  9321   001626  0EC2               	movlw	194
  9322   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9323   00162A  0EF5               	movlw	245
  9324   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9325   00162E  0E3D               	movlw	61
  9326   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9327   001632  ECE1  F01C         	call	___flge	;wreg free
  9328   001636  A0D8               	btfss	status,0,c
  9329   001638  EF20  F00B         	goto	u4131
  9330   00163C  EF22  F00B         	goto	u4130
  9331   001640                     u4131:
  9332   001640  EF28  F00B         	goto	l4388
  9333   001644                     u4130:
  9334   001644                     l4382:
  9335                           
  9336                           ;color.c: 192:             return 6;
  9337   001644  0E00               	movlw	0
  9338   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9339   001648  0E06               	movlw	6
  9340   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9341   00164C  EF80  F00C         	goto	l76
  9342   001650                     l4388:
  9343                           
  9344                           ;color.c: 195:             return 5;
  9345   001650  0E00               	movlw	0
  9346   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9347   001654  0E05               	movlw	5
  9348   001656  6E4B               	movwf	?_Colour_decider^0,c
  9349   001658  EF80  F00C         	goto	l76
  9350   00165C                     l4392:
  9351   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9352   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9353   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9354   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9355   00166C  0E00               	movlw	0
  9356   00166E  6E05               	movwf	___flge@ff2^0,c
  9357   001670  0E00               	movlw	0
  9358   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9359   001674  0EA2               	movlw	162
  9360   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9361   001678  0E42               	movlw	66
  9362   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9363   00167C  ECE1  F01C         	call	___flge	;wreg free
  9364   001680  A0D8               	btfss	status,0,c
  9365   001682  EF45  F00B         	goto	u4141
  9366   001686  EF47  F00B         	goto	u4140
  9367   00168A                     u4141:
  9368   00168A  EF81  F00B         	goto	l4408
  9369   00168E                     u4140:
  9370   00168E  0E00               	movlw	0
  9371   001690  6E01               	movwf	___flge@ff1^0,c
  9372   001692  0E00               	movlw	0
  9373   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9374   001696  0EE6               	movlw	230
  9375   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9376   00169A  0E42               	movlw	66
  9377   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9378   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9379   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9380   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9381   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9382   0016AE  ECE1  F01C         	call	___flge	;wreg free
  9383   0016B2  A0D8               	btfss	status,0,c
  9384   0016B4  EF5E  F00B         	goto	u4151
  9385   0016B8  EF60  F00B         	goto	u4150
  9386   0016BC                     u4151:
  9387   0016BC  EF81  F00B         	goto	l4408
  9388   0016C0                     u4150:
  9389   0016C0                     
  9390                           ;color.c: 201:         if(0.15<=rel->B){
  9391   0016C0  EE20 F008          	lfsr	2,8
  9392   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9393   0016C6  26D9               	addwf	fsr2l,f,c
  9394   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9395   0016CA  22DA               	addwfc	fsr2h,f,c
  9396   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9397   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9398   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9399   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9400   0016DC  0E9A               	movlw	154
  9401   0016DE  6E05               	movwf	___flge@ff2^0,c
  9402   0016E0  0E99               	movlw	153
  9403   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9404   0016E4  0E19               	movlw	25
  9405   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9406   0016E8  0E3E               	movlw	62
  9407   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9408   0016EC  ECE1  F01C         	call	___flge	;wreg free
  9409   0016F0  A0D8               	btfss	status,0,c
  9410   0016F2  EF7D  F00B         	goto	u4161
  9411   0016F6  EF7F  F00B         	goto	u4160
  9412   0016FA                     u4161:
  9413   0016FA  EF22  F00B         	goto	l4382
  9414   0016FE                     u4160:
  9415   0016FE  EFA4  F00A         	goto	l4358
  9416   001702                     l4408:
  9417   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9418   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9419   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9420   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9421   001712  0E00               	movlw	0
  9422   001714  6E05               	movwf	___flge@ff2^0,c
  9423   001716  0E00               	movlw	0
  9424   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9425   00171A  0EF0               	movlw	240
  9426   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9427   00171E  0E41               	movlw	65
  9428   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9429   001722  ECE1  F01C         	call	___flge	;wreg free
  9430   001726  A0D8               	btfss	status,0,c
  9431   001728  EF98  F00B         	goto	u4171
  9432   00172C  EF9A  F00B         	goto	u4170
  9433   001730                     u4171:
  9434   001730  EFB3  F00B         	goto	l4412
  9435   001734                     u4170:
  9436   001734  0E00               	movlw	0
  9437   001736  6E01               	movwf	___flge@ff1^0,c
  9438   001738  0E00               	movlw	0
  9439   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9440   00173C  0E68               	movlw	104
  9441   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9442   001740  0E42               	movlw	66
  9443   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9444   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9445   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9446   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9447   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9448   001754  ECE1  F01C         	call	___flge	;wreg free
  9449   001758  B0D8               	btfsc	status,0,c
  9450   00175A  EFB1  F00B         	goto	u4181
  9451   00175E  EFB3  F00B         	goto	u4180
  9452   001762                     u4181:
  9453   001762  EFA4  F00A         	goto	l4358
  9454   001766                     u4180:
  9455   001766                     l4412:
  9456   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9457   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9458   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9459   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9460   001776  0E00               	movlw	0
  9461   001778  6E05               	movwf	___flge@ff2^0,c
  9462   00177A  0E00               	movlw	0
  9463   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9464   00177E  0EF0               	movlw	240
  9465   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9466   001782  0E42               	movlw	66
  9467   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9468   001786  ECE1  F01C         	call	___flge	;wreg free
  9469   00178A  A0D8               	btfss	status,0,c
  9470   00178C  EFCA  F00B         	goto	u4191
  9471   001790  EFCC  F00B         	goto	u4190
  9472   001794                     u4191:
  9473   001794  EFE7  F00B         	goto	l4422
  9474   001798                     u4190:
  9475   001798  0E00               	movlw	0
  9476   00179A  6E01               	movwf	___flge@ff1^0,c
  9477   00179C  0E00               	movlw	0
  9478   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9479   0017A0  0E5C               	movlw	92
  9480   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9481   0017A4  0E43               	movlw	67
  9482   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9483   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9484   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9485   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9486   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9487   0017B8  ECE1  F01C         	call	___flge	;wreg free
  9488   0017BC  A0D8               	btfss	status,0,c
  9489   0017BE  EFE3  F00B         	goto	u4201
  9490   0017C2  EFE5  F00B         	goto	u4200
  9491   0017C6                     u4201:
  9492   0017C6  EFE7  F00B         	goto	l4422
  9493   0017CA                     u4200:
  9494   0017CA  EFA4  F00A         	goto	l4358
  9495   0017CE                     l4422:
  9496   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9497   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9498   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9499   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9500   0017DE  0E00               	movlw	0
  9501   0017E0  6E05               	movwf	___flge@ff2^0,c
  9502   0017E2  0E00               	movlw	0
  9503   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9504   0017E6  0E60               	movlw	96
  9505   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9506   0017EA  0E41               	movlw	65
  9507   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9508   0017EE  ECE1  F01C         	call	___flge	;wreg free
  9509   0017F2  A0D8               	btfss	status,0,c
  9510   0017F4  EFFE  F00B         	goto	u4211
  9511   0017F8  EF00  F00C         	goto	u4210
  9512   0017FC                     u4211:
  9513   0017FC  EF7C  F00C         	goto	l4448
  9514   001800                     u4210:
  9515   001800  0E00               	movlw	0
  9516   001802  6E01               	movwf	___flge@ff1^0,c
  9517   001804  0E00               	movlw	0
  9518   001806  6E02               	movwf	(___flge@ff1+1)^0,c
  9519   001808  0E98               	movlw	152
  9520   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
  9521   00180C  0E41               	movlw	65
  9522   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
  9523   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9524   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9525   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9526   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9527   001820  ECE1  F01C         	call	___flge	;wreg free
  9528   001824  A0D8               	btfss	status,0,c
  9529   001826  EF17  F00C         	goto	u4221
  9530   00182A  EF19  F00C         	goto	u4220
  9531   00182E                     u4221:
  9532   00182E  EF7C  F00C         	goto	l4448
  9533   001832                     u4220:
  9534   001832                     
  9535                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9536   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9537   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9538   00183A  CFDE F001          	movff	postinc2,___flge@ff1
  9539   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9540   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
  9541   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
  9542   00184A  0ECD               	movlw	205
  9543   00184C  6E05               	movwf	___flge@ff2^0,c
  9544   00184E  0ECC               	movlw	204
  9545   001850  6E06               	movwf	(___flge@ff2+1)^0,c
  9546   001852  0E4C               	movlw	76
  9547   001854  6E07               	movwf	(___flge@ff2+2)^0,c
  9548   001856  0E3E               	movlw	62
  9549   001858  6E08               	movwf	(___flge@ff2+3)^0,c
  9550   00185A  ECE1  F01C         	call	___flge	;wreg free
  9551   00185E  A0D8               	btfss	status,0,c
  9552   001860  EF34  F00C         	goto	u4231
  9553   001864  EF36  F00C         	goto	u4230
  9554   001868                     u4231:
  9555   001868  EF55  F00C         	goto	l4436
  9556   00186C                     u4230:
  9557   00186C  0E1F               	movlw	31
  9558   00186E  6E01               	movwf	___flge@ff1^0,c
  9559   001870  0E85               	movlw	133
  9560   001872  6E02               	movwf	(___flge@ff1+1)^0,c
  9561   001874  0E6B               	movlw	107
  9562   001876  6E03               	movwf	(___flge@ff1+2)^0,c
  9563   001878  0E3E               	movlw	62
  9564   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
  9565   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9566   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9567   001884  CFDE F005          	movff	postinc2,___flge@ff2
  9568   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
  9569   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
  9570   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
  9571   001894  ECE1  F01C         	call	___flge	;wreg free
  9572   001898  A0D8               	btfss	status,0,c
  9573   00189A  EF51  F00C         	goto	u4241
  9574   00189E  EF53  F00C         	goto	u4240
  9575   0018A2                     u4241:
  9576   0018A2  EF55  F00C         	goto	l4436
  9577   0018A6                     u4240:
  9578   0018A6  EF44  F008         	goto	l4300
  9579   0018AA                     l4436:
  9580   0018AA  EE20 F008          	lfsr	2,8
  9581   0018AE  504D               	movf	Colour_decider@rel^0,w,c
  9582   0018B0  26D9               	addwf	fsr2l,f,c
  9583   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9584   0018B4  22DA               	addwfc	fsr2h,f,c
  9585   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
  9586   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9587   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9588   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9589   0018C6  0E9A               	movlw	154
  9590   0018C8  6E05               	movwf	___flge@ff2^0,c
  9591   0018CA  0E99               	movlw	153
  9592   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
  9593   0018CE  0E19               	movlw	25
  9594   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
  9595   0018D2  0E3E               	movlw	62
  9596   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
  9597   0018D6  ECE1  F01C         	call	___flge	;wreg free
  9598   0018DA  A0D8               	btfss	status,0,c
  9599   0018DC  EF72  F00C         	goto	u4251
  9600   0018E0  EF74  F00C         	goto	u4250
  9601   0018E4                     u4251:
  9602   0018E4  EF76  F00C         	goto	l4444
  9603   0018E8                     u4250:
  9604   0018E8  EFA4  F00A         	goto	l4358
  9605   0018EC                     l4444:
  9606                           
  9607                           ;color.c: 223:             return 7;
  9608   0018EC  0E00               	movlw	0
  9609   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9610   0018F0  0E07               	movlw	7
  9611   0018F2  6E4B               	movwf	?_Colour_decider^0,c
  9612   0018F4  EF80  F00C         	goto	l76
  9613   0018F8                     l4448:
  9614                           
  9615                           ;color.c: 227:         return 10;
  9616   0018F8  0E00               	movlw	0
  9617   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9618   0018FC  0E0A               	movlw	10
  9619   0018FE  6E4B               	movwf	?_Colour_decider^0,c
  9620   001900                     l76:
  9621   001900  0012               	return		;funcret
  9622   001902                     __end_of_Colour_decider:
  9623                           	callstack 0
  9624                           
  9625 ;; *************** function ___xxtofl *****************
  9626 ;; Defined at:
  9627 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  sign            1    wreg     unsigned char 
  9630 ;;  val             4    0[COMRAM] long 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  sign            1    8[COMRAM] unsigned char 
  9633 ;;  arg             4   10[COMRAM] unsigned long 
  9634 ;;  exp             1    9[COMRAM] unsigned char 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  4    0[COMRAM] unsigned char 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9645 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9647 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9648 ;;Total ram usage:       14 bytes
  9649 ;; Hardware stack levels used: 1
  9650 ;; Hardware stack levels required when called: 1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_colour_rel
  9655 ;;		_Colour_decider
  9656 ;;		_turnRight45
  9657 ;;		_turnLeft45
  9658 ;;		_reverseOneBlock
  9659 ;;		_ForwardOneBlock
  9660 ;;		_Forwardhalfblock
  9661 ;;		_Backhalfblock
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text62
  9666   003266                     __ptext62:
  9667                           	callstack 0
  9668   003266                     ___xxtofl:
  9669                           	callstack 28
  9670                           
  9671                           ;incstack = 0
  9672                           ;___xxtofl@sign stored from wreg
  9673   003266  6E09               	movwf	___xxtofl@sign^0,c
  9674   003268  5009               	movf	___xxtofl@sign^0,w,c
  9675   00326A  B4D8               	btfsc	status,2,c
  9676   00326C  EF3A  F019         	goto	u3821
  9677   003270  EF3C  F019         	goto	u3820
  9678   003274                     u3821:
  9679   003274  EF5E  F019         	goto	l1331
  9680   003278                     u3820:
  9681   003278  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9682   00327A  EF43  F019         	goto	u3830
  9683   00327E  EF41  F019         	goto	u3831
  9684   003282                     u3831:
  9685   003282  EF5E  F019         	goto	l1331
  9686   003286                     u3830:
  9687   003286  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9688   00328A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9689   00328E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9690   003292  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9691   003296  1E05               	comf	??___xxtofl^0,f,c
  9692   003298  1E06               	comf	(??___xxtofl+1)^0,f,c
  9693   00329A  1E07               	comf	(??___xxtofl+2)^0,f,c
  9694   00329C  1E08               	comf	(??___xxtofl+3)^0,f,c
  9695   00329E  2A05               	incf	??___xxtofl^0,f,c
  9696   0032A0  0E00               	movlw	0
  9697   0032A2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9698   0032A4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9699   0032A6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9700   0032A8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9701   0032AC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9702   0032B0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9703   0032B4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9704   0032B8  EF66  F019         	goto	l4170
  9705   0032BC                     l1331:
  9706   0032BC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9707   0032C0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9708   0032C4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9709   0032C8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9710   0032CC                     l4170:
  9711   0032CC  5001               	movf	___xxtofl@val^0,w,c
  9712   0032CE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9713   0032D0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9714   0032D2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9715   0032D4  A4D8               	btfss	status,2,c
  9716   0032D6  EF6F  F019         	goto	u3841
  9717   0032DA  EF71  F019         	goto	u3840
  9718   0032DE                     u3841:
  9719   0032DE  EF7B  F019         	goto	l4176
  9720   0032E2                     u3840:
  9721   0032E2  0E00               	movlw	0
  9722   0032E4  6E01               	movwf	?___xxtofl^0,c
  9723   0032E6  0E00               	movlw	0
  9724   0032E8  6E02               	movwf	(?___xxtofl+1)^0,c
  9725   0032EA  0E00               	movlw	0
  9726   0032EC  6E03               	movwf	(?___xxtofl+2)^0,c
  9727   0032EE  0E00               	movlw	0
  9728   0032F0  6E04               	movwf	(?___xxtofl+3)^0,c
  9729   0032F2  EF0C  F01A         	goto	l1334
  9730   0032F6                     l4176:
  9731   0032F6  0E96               	movlw	150
  9732   0032F8  6E0A               	movwf	___xxtofl@exp^0,c
  9733   0032FA  EF85  F019         	goto	l4180
  9734   0032FE                     l4178:
  9735   0032FE  2A0A               	incf	___xxtofl@exp^0,f,c
  9736   003300  90D8               	bcf	status,0,c
  9737   003302  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9738   003304  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9739   003306  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9740   003308  320B               	rrcf	___xxtofl@arg^0,f,c
  9741   00330A                     l4180:
  9742   00330A  0E00               	movlw	0
  9743   00330C  140B               	andwf	___xxtofl@arg^0,w,c
  9744   00330E  6E05               	movwf	??___xxtofl^0,c
  9745   003310  0E00               	movlw	0
  9746   003312  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9747   003314  6E06               	movwf	(??___xxtofl+1)^0,c
  9748   003316  0E00               	movlw	0
  9749   003318  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9750   00331A  6E07               	movwf	(??___xxtofl+2)^0,c
  9751   00331C  0EFE               	movlw	254
  9752   00331E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9753   003320  6E08               	movwf	(??___xxtofl+3)^0,c
  9754   003322  5005               	movf	??___xxtofl^0,w,c
  9755   003324  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9756   003326  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9757   003328  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9758   00332A  A4D8               	btfss	status,2,c
  9759   00332C  EF9A  F019         	goto	u3851
  9760   003330  EF9C  F019         	goto	u3850
  9761   003334                     u3851:
  9762   003334  EF7F  F019         	goto	l4178
  9763   003338                     u3850:
  9764   003338  EFAA  F019         	goto	l1338
  9765   00333C                     l4182:
  9766   00333C  2A0A               	incf	___xxtofl@exp^0,f,c
  9767   00333E  0E01               	movlw	1
  9768   003340  260B               	addwf	___xxtofl@arg^0,f,c
  9769   003342  0E00               	movlw	0
  9770   003344  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9771   003346  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9772   003348  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9773   00334A  90D8               	bcf	status,0,c
  9774   00334C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9775   00334E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9776   003350  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9777   003352  320B               	rrcf	___xxtofl@arg^0,f,c
  9778   003354                     l1338:
  9779   003354  0E00               	movlw	0
  9780   003356  140B               	andwf	___xxtofl@arg^0,w,c
  9781   003358  6E05               	movwf	??___xxtofl^0,c
  9782   00335A  0E00               	movlw	0
  9783   00335C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9784   00335E  6E06               	movwf	(??___xxtofl+1)^0,c
  9785   003360  0E00               	movlw	0
  9786   003362  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9787   003364  6E07               	movwf	(??___xxtofl+2)^0,c
  9788   003366  0EFF               	movlw	255
  9789   003368  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9790   00336A  6E08               	movwf	(??___xxtofl+3)^0,c
  9791   00336C  5005               	movf	??___xxtofl^0,w,c
  9792   00336E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9793   003370  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9794   003372  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9795   003374  A4D8               	btfss	status,2,c
  9796   003376  EFBF  F019         	goto	u3861
  9797   00337A  EFC1  F019         	goto	u3860
  9798   00337E                     u3861:
  9799   00337E  EF9E  F019         	goto	l4182
  9800   003382                     u3860:
  9801   003382  EFC9  F019         	goto	l4190
  9802   003386                     l4188:
  9803   003386  060A               	decf	___xxtofl@exp^0,f,c
  9804   003388  90D8               	bcf	status,0,c
  9805   00338A  360B               	rlcf	___xxtofl@arg^0,f,c
  9806   00338C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9807   00338E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9808   003390  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9809   003392                     l4190:
  9810   003392  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9811   003394  EFCE  F019         	goto	u3871
  9812   003398  EFD0  F019         	goto	u3870
  9813   00339C                     u3871:
  9814   00339C  EFD8  F019         	goto	l1345
  9815   0033A0                     u3870:
  9816   0033A0  0E02               	movlw	2
  9817   0033A2  600A               	cpfslt	___xxtofl@exp^0,c
  9818   0033A4  EFD6  F019         	goto	u3881
  9819   0033A8  EFD8  F019         	goto	u3880
  9820   0033AC                     u3881:
  9821   0033AC  EFC3  F019         	goto	l4188
  9822   0033B0                     u3880:
  9823   0033B0                     l1345:
  9824   0033B0  B00A               	btfsc	___xxtofl@exp^0,0,c
  9825   0033B2  EFDD  F019         	goto	u3891
  9826   0033B6  EFDF  F019         	goto	u3890
  9827   0033BA                     u3891:
  9828   0033BA  EFE0  F019         	goto	l4196
  9829   0033BE                     u3890:
  9830   0033BE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9831   0033C0                     l4196:
  9832   0033C0  90D8               	bcf	status,0,c
  9833   0033C2  320A               	rrcf	___xxtofl@exp^0,f,c
  9834   0033C4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9835   0033C8  6A06               	clrf	(??___xxtofl+1)^0,c
  9836   0033CA  6A07               	clrf	(??___xxtofl+2)^0,c
  9837   0033CC  6A08               	clrf	(??___xxtofl+3)^0,c
  9838   0033CE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9839   0033D2  6A07               	clrf	(??___xxtofl+2)^0,c
  9840   0033D4  6A06               	clrf	(??___xxtofl+1)^0,c
  9841   0033D6  6A05               	clrf	??___xxtofl^0,c
  9842   0033D8  5005               	movf	??___xxtofl^0,w,c
  9843   0033DA  120B               	iorwf	___xxtofl@arg^0,f,c
  9844   0033DC  5006               	movf	(??___xxtofl+1)^0,w,c
  9845   0033DE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9846   0033E0  5007               	movf	(??___xxtofl+2)^0,w,c
  9847   0033E2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9848   0033E4  5008               	movf	(??___xxtofl+3)^0,w,c
  9849   0033E6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9850   0033E8  5009               	movf	___xxtofl@sign^0,w,c
  9851   0033EA  B4D8               	btfsc	status,2,c
  9852   0033EC  EFFA  F019         	goto	u3901
  9853   0033F0  EFFC  F019         	goto	u3900
  9854   0033F4                     u3901:
  9855   0033F4  EF04  F01A         	goto	l4206
  9856   0033F8                     u3900:
  9857   0033F8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9858   0033FA  EF03  F01A         	goto	u3910
  9859   0033FE  EF01  F01A         	goto	u3911
  9860   003402                     u3911:
  9861   003402  EF04  F01A         	goto	l4206
  9862   003406                     u3910:
  9863   003406  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9864   003408                     l4206:
  9865   003408  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9866   00340C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9867   003410  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9868   003414  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9869   003418                     l1334:
  9870   003418  0012               	return		;funcret
  9871   00341A                     __end_of___xxtofl:
  9872                           	callstack 0
  9873                           
  9874 ;; *************** function ___flsub *****************
  9875 ;; Defined at:
  9876 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  b               4   16[COMRAM] unsigned char 
  9879 ;;  a               4   20[COMRAM] unsigned char 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  4   16[COMRAM] unsigned char 
  9884 ;; Registers used:
  9885 ;;		wreg, status,2, status,0, cstack
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9891 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9894 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9895 ;;Total ram usage:        8 bytes
  9896 ;; Hardware stack levels used: 1
  9897 ;; Hardware stack levels required when called: 2
  9898 ;; This function calls:
  9899 ;;		___fladd
  9900 ;; This function is called by:
  9901 ;;		_Colour_decider
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           	psect	text63
  9906   004898                     __ptext63:
  9907                           	callstack 0
  9908   004898                     ___flsub:
  9909                           	callstack 27
  9910   004898  0E00               	movlw	0
  9911   00489A  1A15               	xorwf	___flsub@a^0,f,c
  9912   00489C  0E00               	movlw	0
  9913   00489E  1A16               	xorwf	(___flsub@a+1)^0,f,c
  9914   0048A0  0E00               	movlw	0
  9915   0048A2  1A17               	xorwf	(___flsub@a+2)^0,f,c
  9916   0048A4  0E80               	movlw	128
  9917   0048A6  1A18               	xorwf	(___flsub@a+3)^0,f,c
  9918   0048A8  C011  F001         	movff	___flsub@b,___fladd@b
  9919   0048AC  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  9920   0048B0  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  9921   0048B4  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  9922   0048B8  C015  F005         	movff	___flsub@a,___fladd@a
  9923   0048BC  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  9924   0048C0  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  9925   0048C4  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  9926   0048C8  EC0B  F00F         	call	___fladd	;wreg free
  9927   0048CC  C001  F011         	movff	?___fladd,?___flsub
  9928   0048D0  C002  F012         	movff	?___fladd+1,?___flsub+1
  9929   0048D4  C003  F013         	movff	?___fladd+2,?___flsub+2
  9930   0048D8  C004  F014         	movff	?___fladd+3,?___flsub+3
  9931   0048DC  0012               	return		;funcret
  9932   0048DE                     __end_of___flsub:
  9933                           	callstack 0
  9934                           
  9935 ;; *************** function ___fladd *****************
  9936 ;; Defined at:
  9937 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;  b               4    0[COMRAM] unsigned char 
  9940 ;;  a               4    4[COMRAM] unsigned char 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  grs             1   15[COMRAM] unsigned char 
  9943 ;;  bexp            1   14[COMRAM] unsigned char 
  9944 ;;  aexp            1   13[COMRAM] unsigned char 
  9945 ;;  signs           1   12[COMRAM] unsigned char 
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  4    0[COMRAM] unsigned char 
  9948 ;; Registers used:
  9949 ;;		wreg, status,2, status,0
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9955 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9956 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9957 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9958 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9959 ;;Total ram usage:       16 bytes
  9960 ;; Hardware stack levels used: 1
  9961 ;; Hardware stack levels required when called: 1
  9962 ;; This function calls:
  9963 ;;		Nothing
  9964 ;; This function is called by:
  9965 ;;		_colour_rel
  9966 ;;		_Colour_decider
  9967 ;;		___flsub
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           	psect	text64
  9972   001E16                     __ptext64:
  9973                           	callstack 0
  9974   001E16                     ___fladd:
  9975                           	callstack 28
  9976   001E16  5004               	movf	(___fladd@b+3)^0,w,c
  9977   001E18  0B80               	andlw	128
  9978   001E1A  6E0D               	movwf	___fladd@signs^0,c
  9979   001E1C  5004               	movf	(___fladd@b+3)^0,w,c
  9980   001E1E  2404               	addwf	(___fladd@b+3)^0,w,c
  9981   001E20  6E0F               	movwf	___fladd@bexp^0,c
  9982   001E22  AE03               	btfss	(___fladd@b+2)^0,7,c
  9983   001E24  EF16  F00F         	goto	u2871
  9984   001E28  EF18  F00F         	goto	u2870
  9985   001E2C                     u2871:
  9986   001E2C  EF19  F00F         	goto	l3548
  9987   001E30                     u2870:
  9988   001E30  800F               	bsf	___fladd@bexp^0,0,c
  9989   001E32                     l3548:
  9990   001E32  500F               	movf	___fladd@bexp^0,w,c
  9991   001E34  B4D8               	btfsc	status,2,c
  9992   001E36  EF1F  F00F         	goto	u2881
  9993   001E3A  EF21  F00F         	goto	u2880
  9994   001E3E                     u2881:
  9995   001E3E  EF36  F00F         	goto	l3558
  9996   001E42                     u2880:
  9997   001E42  280F               	incf	___fladd@bexp^0,w,c
  9998   001E44  A4D8               	btfss	status,2,c
  9999   001E46  EF27  F00F         	goto	u2891
 10000   001E4A  EF29  F00F         	goto	u2890
 10001   001E4E                     u2891:
 10002   001E4E  EF31  F00F         	goto	l3554
 10003   001E52                     u2890:
 10004   001E52  0E00               	movlw	0
 10005   001E54  6E01               	movwf	___fladd@b^0,c
 10006   001E56  0E00               	movlw	0
 10007   001E58  6E02               	movwf	(___fladd@b+1)^0,c
 10008   001E5A  0E00               	movlw	0
 10009   001E5C  6E03               	movwf	(___fladd@b+2)^0,c
 10010   001E5E  0E00               	movlw	0
 10011   001E60  6E04               	movwf	(___fladd@b+3)^0,c
 10012   001E62                     l3554:
 10013   001E62  8E03               	bsf	(___fladd@b+2)^0,7,c
 10014   001E64  0E00               	movlw	0
 10015   001E66  6E04               	movwf	(___fladd@b+3)^0,c
 10016   001E68  EF3E  F00F         	goto	l3560
 10017   001E6C                     l3558:
 10018   001E6C  0E00               	movlw	0
 10019   001E6E  6E01               	movwf	___fladd@b^0,c
 10020   001E70  0E00               	movlw	0
 10021   001E72  6E02               	movwf	(___fladd@b+1)^0,c
 10022   001E74  0E00               	movlw	0
 10023   001E76  6E03               	movwf	(___fladd@b+2)^0,c
 10024   001E78  0E00               	movlw	0
 10025   001E7A  6E04               	movwf	(___fladd@b+3)^0,c
 10026   001E7C                     l3560:
 10027   001E7C  5008               	movf	(___fladd@a+3)^0,w,c
 10028   001E7E  0B80               	andlw	128
 10029   001E80  6E0E               	movwf	___fladd@aexp^0,c
 10030   001E82  500D               	movf	___fladd@signs^0,w,c
 10031   001E84  180E               	xorwf	___fladd@aexp^0,w,c
 10032   001E86  B4D8               	btfsc	status,2,c
 10033   001E88  EF48  F00F         	goto	u2901
 10034   001E8C  EF4A  F00F         	goto	u2900
 10035   001E90                     u2901:
 10036   001E90  EF4B  F00F         	goto	l3566
 10037   001E94                     u2900:
 10038   001E94  8C0D               	bsf	___fladd@signs^0,6,c
 10039   001E96                     l3566:
 10040   001E96  5008               	movf	(___fladd@a+3)^0,w,c
 10041   001E98  2408               	addwf	(___fladd@a+3)^0,w,c
 10042   001E9A  6E0E               	movwf	___fladd@aexp^0,c
 10043   001E9C  AE07               	btfss	(___fladd@a+2)^0,7,c
 10044   001E9E  EF53  F00F         	goto	u2911
 10045   001EA2  EF55  F00F         	goto	u2910
 10046   001EA6                     u2911:
 10047   001EA6  EF56  F00F         	goto	l3572
 10048   001EAA                     u2910:
 10049   001EAA  800E               	bsf	___fladd@aexp^0,0,c
 10050   001EAC                     l3572:
 10051   001EAC  500E               	movf	___fladd@aexp^0,w,c
 10052   001EAE  B4D8               	btfsc	status,2,c
 10053   001EB0  EF5C  F00F         	goto	u2921
 10054   001EB4  EF5E  F00F         	goto	u2920
 10055   001EB8                     u2921:
 10056   001EB8  EF73  F00F         	goto	l3582
 10057   001EBC                     u2920:
 10058   001EBC  280E               	incf	___fladd@aexp^0,w,c
 10059   001EBE  A4D8               	btfss	status,2,c
 10060   001EC0  EF64  F00F         	goto	u2931
 10061   001EC4  EF66  F00F         	goto	u2930
 10062   001EC8                     u2931:
 10063   001EC8  EF6E  F00F         	goto	l3578
 10064   001ECC                     u2930:
 10065   001ECC  0E00               	movlw	0
 10066   001ECE  6E05               	movwf	___fladd@a^0,c
 10067   001ED0  0E00               	movlw	0
 10068   001ED2  6E06               	movwf	(___fladd@a+1)^0,c
 10069   001ED4  0E00               	movlw	0
 10070   001ED6  6E07               	movwf	(___fladd@a+2)^0,c
 10071   001ED8  0E00               	movlw	0
 10072   001EDA  6E08               	movwf	(___fladd@a+3)^0,c
 10073   001EDC                     l3578:
 10074   001EDC  8E07               	bsf	(___fladd@a+2)^0,7,c
 10075   001EDE  0E00               	movlw	0
 10076   001EE0  6E08               	movwf	(___fladd@a+3)^0,c
 10077   001EE2  EF7B  F00F         	goto	l3584
 10078   001EE6                     l3582:
 10079   001EE6  0E00               	movlw	0
 10080   001EE8  6E05               	movwf	___fladd@a^0,c
 10081   001EEA  0E00               	movlw	0
 10082   001EEC  6E06               	movwf	(___fladd@a+1)^0,c
 10083   001EEE  0E00               	movlw	0
 10084   001EF0  6E07               	movwf	(___fladd@a+2)^0,c
 10085   001EF2  0E00               	movlw	0
 10086   001EF4  6E08               	movwf	(___fladd@a+3)^0,c
 10087   001EF6                     l3584:
 10088   001EF6  500F               	movf	___fladd@bexp^0,w,c
 10089   001EF8  5C0E               	subwf	___fladd@aexp^0,w,c
 10090   001EFA  B0D8               	btfsc	status,0,c
 10091   001EFC  EF82  F00F         	goto	u2941
 10092   001F00  EF84  F00F         	goto	u2940
 10093   001F04                     u2941:
 10094   001F04  EFAB  F00F         	goto	l3620
 10095   001F08                     u2940:
 10096   001F08  AC0D               	btfss	___fladd@signs^0,6,c
 10097   001F0A  EF89  F00F         	goto	u2951
 10098   001F0E  EF8B  F00F         	goto	u2950
 10099   001F12                     u2951:
 10100   001F12  EF8D  F00F         	goto	l3590
 10101   001F16                     u2950:
 10102   001F16  0E80               	movlw	128
 10103   001F18  1A0D               	xorwf	___fladd@signs^0,f,c
 10104   001F1A                     l3590:
 10105   001F1A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10106   001F1E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10107   001F22  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10108   001F26  C001  F010         	movff	___fladd@b,___fladd@grs
 10109   001F2A  C005  F001         	movff	___fladd@a,___fladd@b
 10110   001F2E  C010  F005         	movff	___fladd@grs,___fladd@a
 10111   001F32  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10112   001F36  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10113   001F3A  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10114   001F3E  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10115   001F42  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10116   001F46  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10117   001F4A  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10118   001F4E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10119   001F52  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10120   001F56                     l3620:
 10121   001F56  0E00               	movlw	0
 10122   001F58  6E10               	movwf	___fladd@grs^0,c
 10123   001F5A  500F               	movf	___fladd@bexp^0,w,c
 10124   001F5C  C00E  F009         	movff	___fladd@aexp,??___fladd
 10125   001F60  6A0A               	clrf	(??___fladd+1)^0,c
 10126   001F62  5E09               	subwf	??___fladd^0,f,c
 10127   001F64  0E00               	movlw	0
 10128   001F66  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10129   001F68  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10130   001F6A  EFC0  F00F         	goto	u2961
 10131   001F6E  500A               	movf	(??___fladd+1)^0,w,c
 10132   001F70  E109               	bnz	u2960
 10133   001F72  0E1A               	movlw	26
 10134   001F74  5C09               	subwf	??___fladd^0,w,c
 10135   001F76  A0D8               	btfss	status,0,c
 10136   001F78  EFC0  F00F         	goto	u2961
 10137   001F7C  EFC2  F00F         	goto	u2960
 10138   001F80                     u2961:
 10139   001F80  EFF9  F00F         	goto	l1205
 10140   001F84                     u2960:
 10141   001F84  5001               	movf	___fladd@b^0,w,c
 10142   001F86  1002               	iorwf	(___fladd@b+1)^0,w,c
 10143   001F88  1003               	iorwf	(___fladd@b+2)^0,w,c
 10144   001F8A  1004               	iorwf	(___fladd@b+3)^0,w,c
 10145   001F8C  A4D8               	btfss	status,2,c
 10146   001F8E  EFCB  F00F         	goto	u2971
 10147   001F92  EFCE  F00F         	goto	u2970
 10148   001F96                     u2971:
 10149   001F96  0E01               	movlw	1
 10150   001F98  EFCF  F00F         	goto	u2980
 10151   001F9C                     u2970:
 10152   001F9C  0E00               	movlw	0
 10153   001F9E                     u2980:
 10154   001F9E  6E10               	movwf	___fladd@grs^0,c
 10155   001FA0  0E00               	movlw	0
 10156   001FA2  6E01               	movwf	___fladd@b^0,c
 10157   001FA4  0E00               	movlw	0
 10158   001FA6  6E02               	movwf	(___fladd@b+1)^0,c
 10159   001FA8  0E00               	movlw	0
 10160   001FAA  6E03               	movwf	(___fladd@b+2)^0,c
 10161   001FAC  0E00               	movlw	0
 10162   001FAE  6E04               	movwf	(___fladd@b+3)^0,c
 10163   001FB0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10164   001FB4  EF02  F010         	goto	l1204
 10165   001FB8                     l1206:
 10166   001FB8  A010               	btfss	___fladd@grs^0,0,c
 10167   001FBA  EFE1  F00F         	goto	u2991
 10168   001FBE  EFE3  F00F         	goto	u2990
 10169   001FC2                     u2991:
 10170   001FC2  EFE9  F00F         	goto	l3632
 10171   001FC6                     u2990:
 10172   001FC6  90D8               	bcf	status,0,c
 10173   001FC8  3010               	rrcf	___fladd@grs^0,w,c
 10174   001FCA  0901               	iorlw	1
 10175   001FCC  6E10               	movwf	___fladd@grs^0,c
 10176   001FCE  EFEB  F00F         	goto	l3634
 10177   001FD2                     l3632:
 10178   001FD2  90D8               	bcf	status,0,c
 10179   001FD4  3210               	rrcf	___fladd@grs^0,f,c
 10180   001FD6                     l3634:
 10181   001FD6  A001               	btfss	___fladd@b^0,0,c
 10182   001FD8  EFF0  F00F         	goto	u3001
 10183   001FDC  EFF2  F00F         	goto	u3000
 10184   001FE0                     u3001:
 10185   001FE0  EFF3  F00F         	goto	l3638
 10186   001FE4                     u3000:
 10187   001FE4  8E10               	bsf	___fladd@grs^0,7,c
 10188   001FE6                     l3638:
 10189   001FE6  3404               	rlcf	(___fladd@b+3)^0,w,c
 10190   001FE8  3204               	rrcf	(___fladd@b+3)^0,f,c
 10191   001FEA  3203               	rrcf	(___fladd@b+2)^0,f,c
 10192   001FEC  3202               	rrcf	(___fladd@b+1)^0,f,c
 10193   001FEE  3201               	rrcf	___fladd@b^0,f,c
 10194   001FF0  2A0F               	incf	___fladd@bexp^0,f,c
 10195   001FF2                     l1205:
 10196   001FF2  500E               	movf	___fladd@aexp^0,w,c
 10197   001FF4  5C0F               	subwf	___fladd@bexp^0,w,c
 10198   001FF6  A0D8               	btfss	status,0,c
 10199   001FF8  EF00  F010         	goto	u3011
 10200   001FFC  EF02  F010         	goto	u3010
 10201   002000                     u3011:
 10202   002000  EFDC  F00F         	goto	l1206
 10203   002004                     u3010:
 10204   002004                     l1204:
 10205   002004  BC0D               	btfsc	___fladd@signs^0,6,c
 10206   002006  EF07  F010         	goto	u3021
 10207   00200A  EF09  F010         	goto	u3020
 10208   00200E                     u3021:
 10209   00200E  EF49  F010         	goto	l3666
 10210   002012                     u3020:
 10211   002012  500F               	movf	___fladd@bexp^0,w,c
 10212   002014  A4D8               	btfss	status,2,c
 10213   002016  EF0F  F010         	goto	u3031
 10214   00201A  EF11  F010         	goto	u3030
 10215   00201E                     u3031:
 10216   00201E  EF1B  F010         	goto	l3648
 10217   002022                     u3030:
 10218   002022  0E00               	movlw	0
 10219   002024  6E01               	movwf	?___fladd^0,c
 10220   002026  0E00               	movlw	0
 10221   002028  6E02               	movwf	(?___fladd+1)^0,c
 10222   00202A  0E00               	movlw	0
 10223   00202C  6E03               	movwf	(?___fladd+2)^0,c
 10224   00202E  0E00               	movlw	0
 10225   002030  6E04               	movwf	(?___fladd+3)^0,c
 10226   002032  EF6A  F011         	goto	l1213
 10227   002036                     l3648:
 10228   002036  5005               	movf	___fladd@a^0,w,c
 10229   002038  2601               	addwf	___fladd@b^0,f,c
 10230   00203A  5006               	movf	(___fladd@a+1)^0,w,c
 10231   00203C  2202               	addwfc	(___fladd@b+1)^0,f,c
 10232   00203E  5007               	movf	(___fladd@a+2)^0,w,c
 10233   002040  2203               	addwfc	(___fladd@b+2)^0,f,c
 10234   002042  5008               	movf	(___fladd@a+3)^0,w,c
 10235   002044  2204               	addwfc	(___fladd@b+3)^0,f,c
 10236   002046  A004               	btfss	(___fladd@b+3)^0,0,c
 10237   002048  EF28  F010         	goto	u3041
 10238   00204C  EF2A  F010         	goto	u3040
 10239   002050                     u3041:
 10240   002050  EFD6  F010         	goto	l3702
 10241   002054                     u3040:
 10242   002054  A010               	btfss	___fladd@grs^0,0,c
 10243   002056  EF2F  F010         	goto	u3051
 10244   00205A  EF31  F010         	goto	u3050
 10245   00205E                     u3051:
 10246   00205E  EF37  F010         	goto	l3656
 10247   002062                     u3050:
 10248   002062  90D8               	bcf	status,0,c
 10249   002064  3010               	rrcf	___fladd@grs^0,w,c
 10250   002066  0901               	iorlw	1
 10251   002068  6E10               	movwf	___fladd@grs^0,c
 10252   00206A  EF39  F010         	goto	l3658
 10253   00206E                     l3656:
 10254   00206E  90D8               	bcf	status,0,c
 10255   002070  3210               	rrcf	___fladd@grs^0,f,c
 10256   002072                     l3658:
 10257   002072  A001               	btfss	___fladd@b^0,0,c
 10258   002074  EF3E  F010         	goto	u3061
 10259   002078  EF40  F010         	goto	u3060
 10260   00207C                     u3061:
 10261   00207C  EF41  F010         	goto	l3662
 10262   002080                     u3060:
 10263   002080  8E10               	bsf	___fladd@grs^0,7,c
 10264   002082                     l3662:
 10265   002082  3404               	rlcf	(___fladd@b+3)^0,w,c
 10266   002084  3204               	rrcf	(___fladd@b+3)^0,f,c
 10267   002086  3203               	rrcf	(___fladd@b+2)^0,f,c
 10268   002088  3202               	rrcf	(___fladd@b+1)^0,f,c
 10269   00208A  3201               	rrcf	___fladd@b^0,f,c
 10270   00208C  2A0F               	incf	___fladd@bexp^0,f,c
 10271   00208E  EFD6  F010         	goto	l3702
 10272   002092                     l3666:
 10273   002092  5005               	movf	___fladd@a^0,w,c
 10274   002094  5C01               	subwf	___fladd@b^0,w,c
 10275   002096  5006               	movf	(___fladd@a+1)^0,w,c
 10276   002098  5802               	subwfb	(___fladd@b+1)^0,w,c
 10277   00209A  5007               	movf	(___fladd@a+2)^0,w,c
 10278   00209C  5803               	subwfb	(___fladd@b+2)^0,w,c
 10279   00209E  5004               	movf	(___fladd@b+3)^0,w,c
 10280   0020A0  0A80               	xorlw	128
 10281   0020A2  6E09               	movwf	??___fladd^0,c
 10282   0020A4  5008               	movf	(___fladd@a+3)^0,w,c
 10283   0020A6  0A80               	xorlw	128
 10284   0020A8  5809               	subwfb	??___fladd^0,w,c
 10285   0020AA  B0D8               	btfsc	status,0,c
 10286   0020AC  EF5A  F010         	goto	u3071
 10287   0020B0  EF5C  F010         	goto	u3070
 10288   0020B4                     u3071:
 10289   0020B4  EF87  F010         	goto	l3676
 10290   0020B8                     u3070:
 10291   0020B8  5001               	movf	___fladd@b^0,w,c
 10292   0020BA  5C05               	subwf	___fladd@a^0,w,c
 10293   0020BC  6E09               	movwf	??___fladd^0,c
 10294   0020BE  5002               	movf	(___fladd@b+1)^0,w,c
 10295   0020C0  5806               	subwfb	(___fladd@a+1)^0,w,c
 10296   0020C2  6E0A               	movwf	(??___fladd+1)^0,c
 10297   0020C4  5003               	movf	(___fladd@b+2)^0,w,c
 10298   0020C6  5807               	subwfb	(___fladd@a+2)^0,w,c
 10299   0020C8  6E0B               	movwf	(??___fladd+2)^0,c
 10300   0020CA  5004               	movf	(___fladd@b+3)^0,w,c
 10301   0020CC  5808               	subwfb	(___fladd@a+3)^0,w,c
 10302   0020CE  6E0C               	movwf	(??___fladd+3)^0,c
 10303   0020D0  0EFF               	movlw	255
 10304   0020D2  2409               	addwf	??___fladd^0,w,c
 10305   0020D4  6E01               	movwf	___fladd@b^0,c
 10306   0020D6  0EFF               	movlw	255
 10307   0020D8  200A               	addwfc	(??___fladd+1)^0,w,c
 10308   0020DA  6E02               	movwf	(___fladd@b+1)^0,c
 10309   0020DC  0EFF               	movlw	255
 10310   0020DE  200B               	addwfc	(??___fladd+2)^0,w,c
 10311   0020E0  6E03               	movwf	(___fladd@b+2)^0,c
 10312   0020E2  0EFF               	movlw	255
 10313   0020E4  200C               	addwfc	(??___fladd+3)^0,w,c
 10314   0020E6  6E04               	movwf	(___fladd@b+3)^0,c
 10315   0020E8  0E80               	movlw	128
 10316   0020EA  1A0D               	xorwf	___fladd@signs^0,f,c
 10317   0020EC  6C10               	negf	___fladd@grs^0,c
 10318   0020EE  5010               	movf	___fladd@grs^0,w,c
 10319   0020F0  A4D8               	btfss	status,2,c
 10320   0020F2  EF7D  F010         	goto	u3081
 10321   0020F6  EF7F  F010         	goto	u3080
 10322   0020FA                     u3081:
 10323   0020FA  EF8F  F010         	goto	l1221
 10324   0020FE                     u3080:
 10325   0020FE  0E01               	movlw	1
 10326   002100  2601               	addwf	___fladd@b^0,f,c
 10327   002102  0E00               	movlw	0
 10328   002104  2202               	addwfc	(___fladd@b+1)^0,f,c
 10329   002106  2203               	addwfc	(___fladd@b+2)^0,f,c
 10330   002108  2204               	addwfc	(___fladd@b+3)^0,f,c
 10331   00210A  EF8F  F010         	goto	l1221
 10332   00210E                     l3676:
 10333   00210E  5005               	movf	___fladd@a^0,w,c
 10334   002110  5E01               	subwf	___fladd@b^0,f,c
 10335   002112  5006               	movf	(___fladd@a+1)^0,w,c
 10336   002114  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10337   002116  5007               	movf	(___fladd@a+2)^0,w,c
 10338   002118  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10339   00211A  5008               	movf	(___fladd@a+3)^0,w,c
 10340   00211C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10341   00211E                     l1221:
 10342   00211E  5001               	movf	___fladd@b^0,w,c
 10343   002120  1002               	iorwf	(___fladd@b+1)^0,w,c
 10344   002122  1003               	iorwf	(___fladd@b+2)^0,w,c
 10345   002124  1004               	iorwf	(___fladd@b+3)^0,w,c
 10346   002126  A4D8               	btfss	status,2,c
 10347   002128  EF98  F010         	goto	u3091
 10348   00212C  EF9A  F010         	goto	u3090
 10349   002130                     u3091:
 10350   002130  EFCF  F010         	goto	l3700
 10351   002134                     u3090:
 10352   002134  5010               	movf	___fladd@grs^0,w,c
 10353   002136  A4D8               	btfss	status,2,c
 10354   002138  EFA0  F010         	goto	u3101
 10355   00213C  EFA2  F010         	goto	u3100
 10356   002140                     u3101:
 10357   002140  EFCF  F010         	goto	l3700
 10358   002144                     u3100:
 10359   002144  0E00               	movlw	0
 10360   002146  6E01               	movwf	?___fladd^0,c
 10361   002148  0E00               	movlw	0
 10362   00214A  6E02               	movwf	(?___fladd+1)^0,c
 10363   00214C  0E00               	movlw	0
 10364   00214E  6E03               	movwf	(?___fladd+2)^0,c
 10365   002150  0E00               	movlw	0
 10366   002152  6E04               	movwf	(?___fladd+3)^0,c
 10367   002154  EF6A  F011         	goto	l1213
 10368   002158                     l3684:
 10369   002158  90D8               	bcf	status,0,c
 10370   00215A  3601               	rlcf	___fladd@b^0,f,c
 10371   00215C  3602               	rlcf	(___fladd@b+1)^0,f,c
 10372   00215E  3603               	rlcf	(___fladd@b+2)^0,f,c
 10373   002160  3604               	rlcf	(___fladd@b+3)^0,f,c
 10374   002162  AE10               	btfss	___fladd@grs^0,7,c
 10375   002164  EFB6  F010         	goto	u3111
 10376   002168  EFB8  F010         	goto	u3110
 10377   00216C                     u3111:
 10378   00216C  EFB9  F010         	goto	l3690
 10379   002170                     u3110:
 10380   002170  8001               	bsf	___fladd@b^0,0,c
 10381   002172                     l3690:
 10382   002172  A010               	btfss	___fladd@grs^0,0,c
 10383   002174  EFBE  F010         	goto	u3121
 10384   002178  EFC0  F010         	goto	u3120
 10385   00217C                     u3121:
 10386   00217C  EFC4  F010         	goto	l3694
 10387   002180                     u3120:
 10388   002180  80D8               	bsf	status,0,c
 10389   002182  3610               	rlcf	___fladd@grs^0,f,c
 10390   002184  EFC6  F010         	goto	l3696
 10391   002188                     l3694:
 10392   002188  90D8               	bcf	status,0,c
 10393   00218A  3610               	rlcf	___fladd@grs^0,f,c
 10394   00218C                     l3696:
 10395   00218C  500F               	movf	___fladd@bexp^0,w,c
 10396   00218E  B4D8               	btfsc	status,2,c
 10397   002190  EFCC  F010         	goto	u3131
 10398   002194  EFCE  F010         	goto	u3130
 10399   002198                     u3131:
 10400   002198  EFCF  F010         	goto	l3700
 10401   00219C                     u3130:
 10402   00219C  060F               	decf	___fladd@bexp^0,f,c
 10403   00219E                     l3700:
 10404   00219E  AE03               	btfss	(___fladd@b+2)^0,7,c
 10405   0021A0  EFD4  F010         	goto	u3141
 10406   0021A4  EFD6  F010         	goto	u3140
 10407   0021A8                     u3141:
 10408   0021A8  EFAC  F010         	goto	l3684
 10409   0021AC                     u3140:
 10410   0021AC                     l3702:
 10411   0021AC  0E00               	movlw	0
 10412   0021AE  6E0E               	movwf	___fladd@aexp^0,c
 10413   0021B0  AE10               	btfss	___fladd@grs^0,7,c
 10414   0021B2  EFDD  F010         	goto	u3151
 10415   0021B6  EFDF  F010         	goto	u3150
 10416   0021BA                     u3151:
 10417   0021BA  EFF7  F010         	goto	l1230
 10418   0021BE                     u3150:
 10419   0021BE  C010  F009         	movff	___fladd@grs,??___fladd
 10420   0021C2  0E7F               	movlw	127
 10421   0021C4  1609               	andwf	??___fladd^0,f,c
 10422   0021C6  B4D8               	btfsc	status,2,c
 10423   0021C8  EFE8  F010         	goto	u3161
 10424   0021CC  EFEA  F010         	goto	u3160
 10425   0021D0                     u3161:
 10426   0021D0  EFEE  F010         	goto	l1231
 10427   0021D4                     u3160:
 10428   0021D4                     l3708:
 10429   0021D4  0E01               	movlw	1
 10430   0021D6  6E0E               	movwf	___fladd@aexp^0,c
 10431   0021D8  EFF7  F010         	goto	l1230
 10432   0021DC                     l1231:
 10433   0021DC  A001               	btfss	___fladd@b^0,0,c
 10434   0021DE  EFF3  F010         	goto	u3171
 10435   0021E2  EFF5  F010         	goto	u3170
 10436   0021E6                     u3171:
 10437   0021E6  EFF7  F010         	goto	l1230
 10438   0021EA                     u3170:
 10439   0021EA  EFEA  F010         	goto	l3708
 10440   0021EE                     l1230:
 10441   0021EE  500E               	movf	___fladd@aexp^0,w,c
 10442   0021F0  B4D8               	btfsc	status,2,c
 10443   0021F2  EFFD  F010         	goto	u3181
 10444   0021F6  EFFF  F010         	goto	u3180
 10445   0021FA                     u3181:
 10446   0021FA  EF2A  F011         	goto	l3720
 10447   0021FE                     u3180:
 10448   0021FE  0E01               	movlw	1
 10449   002200  2601               	addwf	___fladd@b^0,f,c
 10450   002202  0E00               	movlw	0
 10451   002204  2202               	addwfc	(___fladd@b+1)^0,f,c
 10452   002206  2203               	addwfc	(___fladd@b+2)^0,f,c
 10453   002208  2204               	addwfc	(___fladd@b+3)^0,f,c
 10454   00220A  A004               	btfss	(___fladd@b+3)^0,0,c
 10455   00220C  EF0A  F011         	goto	u3191
 10456   002210  EF0C  F011         	goto	u3190
 10457   002214                     u3191:
 10458   002214  EF2A  F011         	goto	l3720
 10459   002218                     u3190:
 10460   002218  C001  F009         	movff	___fladd@b,??___fladd
 10461   00221C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10462   002220  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10463   002224  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10464   002228  340C               	rlcf	(??___fladd+3)^0,w,c
 10465   00222A  320C               	rrcf	(??___fladd+3)^0,f,c
 10466   00222C  320B               	rrcf	(??___fladd+2)^0,f,c
 10467   00222E  320A               	rrcf	(??___fladd+1)^0,f,c
 10468   002230  3209               	rrcf	??___fladd^0,f,c
 10469   002232  C009  F001         	movff	??___fladd,___fladd@b
 10470   002236  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10471   00223A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10472   00223E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10473   002242  280F               	incf	___fladd@bexp^0,w,c
 10474   002244  B4D8               	btfsc	status,2,c
 10475   002246  EF27  F011         	goto	u3201
 10476   00224A  EF29  F011         	goto	u3200
 10477   00224E                     u3201:
 10478   00224E  EF2A  F011         	goto	l3720
 10479   002252                     u3200:
 10480   002252  2A0F               	incf	___fladd@bexp^0,f,c
 10481   002254                     l3720:
 10482   002254  280F               	incf	___fladd@bexp^0,w,c
 10483   002256  B4D8               	btfsc	status,2,c
 10484   002258  EF30  F011         	goto	u3211
 10485   00225C  EF32  F011         	goto	u3210
 10486   002260                     u3211:
 10487   002260  EF3A  F011         	goto	l3724
 10488   002264                     u3210:
 10489   002264  500F               	movf	___fladd@bexp^0,w,c
 10490   002266  A4D8               	btfss	status,2,c
 10491   002268  EF38  F011         	goto	u3221
 10492   00226C  EF3A  F011         	goto	u3220
 10493   002270                     u3221:
 10494   002270  EF4C  F011         	goto	l3728
 10495   002274                     u3220:
 10496   002274                     l3724:
 10497   002274  0E00               	movlw	0
 10498   002276  6E01               	movwf	___fladd@b^0,c
 10499   002278  0E00               	movlw	0
 10500   00227A  6E02               	movwf	(___fladd@b+1)^0,c
 10501   00227C  0E00               	movlw	0
 10502   00227E  6E03               	movwf	(___fladd@b+2)^0,c
 10503   002280  0E00               	movlw	0
 10504   002282  6E04               	movwf	(___fladd@b+3)^0,c
 10505   002284  500F               	movf	___fladd@bexp^0,w,c
 10506   002286  A4D8               	btfss	status,2,c
 10507   002288  EF48  F011         	goto	u3231
 10508   00228C  EF4A  F011         	goto	u3230
 10509   002290                     u3231:
 10510   002290  EF4C  F011         	goto	l3728
 10511   002294                     u3230:
 10512   002294  0E00               	movlw	0
 10513   002296  6E0D               	movwf	___fladd@signs^0,c
 10514   002298                     l3728:
 10515   002298  A00F               	btfss	___fladd@bexp^0,0,c
 10516   00229A  EF51  F011         	goto	u3241
 10517   00229E  EF53  F011         	goto	u3240
 10518   0022A2                     u3241:
 10519   0022A2  EF56  F011         	goto	l3732
 10520   0022A6                     u3240:
 10521   0022A6  8E03               	bsf	(___fladd@b+2)^0,7,c
 10522   0022A8  EF57  F011         	goto	l3734
 10523   0022AC                     l3732:
 10524   0022AC  9E03               	bcf	(___fladd@b+2)^0,7,c
 10525   0022AE                     l3734:
 10526   0022AE  90D8               	bcf	status,0,c
 10527   0022B0  300F               	rrcf	___fladd@bexp^0,w,c
 10528   0022B2  6E04               	movwf	(___fladd@b+3)^0,c
 10529   0022B4  AE0D               	btfss	___fladd@signs^0,7,c
 10530   0022B6  EF5F  F011         	goto	u3251
 10531   0022BA  EF61  F011         	goto	u3250
 10532   0022BE                     u3251:
 10533   0022BE  EF62  F011         	goto	l3740
 10534   0022C2                     u3250:
 10535   0022C2  8E04               	bsf	(___fladd@b+3)^0,7,c
 10536   0022C4                     l3740:
 10537   0022C4  C001  F001         	movff	___fladd@b,?___fladd
 10538   0022C8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10539   0022CC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10540   0022D0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10541   0022D4                     l1213:
 10542   0022D4  0012               	return		;funcret
 10543   0022D6                     __end_of___fladd:
 10544                           	callstack 0
 10545                           
 10546 ;; *************** function ___flmul *****************
 10547 ;; Defined at:
 10548 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  b               4   49[COMRAM] unsigned char 
 10551 ;;  a               4   53[COMRAM] unsigned char 
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;  prod            4   68[COMRAM] struct .
 10554 ;;  grs             4   62[COMRAM] unsigned long 
 10555 ;;  temp            2   72[COMRAM] struct .
 10556 ;;  bexp            1   67[COMRAM] unsigned char 
 10557 ;;  aexp            1   66[COMRAM] unsigned char 
 10558 ;;  sign            1   61[COMRAM] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  4   49[COMRAM] unsigned char 
 10561 ;; Registers used:
 10562 ;;		wreg, status,2, status,0, prodl, prodh
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10568 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10569 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10570 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10571 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10572 ;;Total ram usage:       25 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; Hardware stack levels required when called: 1
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_Colour_decider
 10579 ;;		_turnRight45
 10580 ;;		_turnLeft45
 10581 ;;		_reverseOneBlock
 10582 ;;		_ForwardOneBlock
 10583 ;;		_Forwardhalfblock
 10584 ;;		_Backhalfblock
 10585 ;; This function uses a non-reentrant model
 10586 ;;
 10587                           
 10588                           	psect	text65
 10589   0022D6                     __ptext65:
 10590                           	callstack 0
 10591   0022D6                     ___flmul:
 10592                           	callstack 28
 10593   0022D6  5035               	movf	(___flmul@b+3)^0,w,c
 10594   0022D8  0B80               	andlw	128
 10595   0022DA  6E3E               	movwf	___flmul@sign^0,c
 10596   0022DC  5035               	movf	(___flmul@b+3)^0,w,c
 10597   0022DE  2435               	addwf	(___flmul@b+3)^0,w,c
 10598   0022E0  6E44               	movwf	___flmul@bexp^0,c
 10599   0022E2  AE34               	btfss	(___flmul@b+2)^0,7,c
 10600   0022E4  EF76  F011         	goto	u3551
 10601   0022E8  EF78  F011         	goto	u3550
 10602   0022EC                     u3551:
 10603   0022EC  EF79  F011         	goto	l3996
 10604   0022F0                     u3550:
 10605   0022F0  8044               	bsf	___flmul@bexp^0,0,c
 10606   0022F2                     l3996:
 10607   0022F2  5044               	movf	___flmul@bexp^0,w,c
 10608   0022F4  B4D8               	btfsc	status,2,c
 10609   0022F6  EF7F  F011         	goto	u3561
 10610   0022FA  EF81  F011         	goto	u3560
 10611   0022FE                     u3561:
 10612   0022FE  EF94  F011         	goto	l4004
 10613   002302                     u3560:
 10614   002302  2844               	incf	___flmul@bexp^0,w,c
 10615   002304  A4D8               	btfss	status,2,c
 10616   002306  EF87  F011         	goto	u3571
 10617   00230A  EF89  F011         	goto	u3570
 10618   00230E                     u3571:
 10619   00230E  EF91  F011         	goto	l4002
 10620   002312                     u3570:
 10621   002312  0E00               	movlw	0
 10622   002314  6E32               	movwf	___flmul@b^0,c
 10623   002316  0E00               	movlw	0
 10624   002318  6E33               	movwf	(___flmul@b+1)^0,c
 10625   00231A  0E00               	movlw	0
 10626   00231C  6E34               	movwf	(___flmul@b+2)^0,c
 10627   00231E  0E00               	movlw	0
 10628   002320  6E35               	movwf	(___flmul@b+3)^0,c
 10629   002322                     l4002:
 10630   002322  8E34               	bsf	(___flmul@b+2)^0,7,c
 10631   002324  EF9C  F011         	goto	l4006
 10632   002328                     l4004:
 10633   002328  0E00               	movlw	0
 10634   00232A  6E32               	movwf	___flmul@b^0,c
 10635   00232C  0E00               	movlw	0
 10636   00232E  6E33               	movwf	(___flmul@b+1)^0,c
 10637   002330  0E00               	movlw	0
 10638   002332  6E34               	movwf	(___flmul@b+2)^0,c
 10639   002334  0E00               	movlw	0
 10640   002336  6E35               	movwf	(___flmul@b+3)^0,c
 10641   002338                     l4006:
 10642   002338  5039               	movf	(___flmul@a+3)^0,w,c
 10643   00233A  0B80               	andlw	128
 10644   00233C  1A3E               	xorwf	___flmul@sign^0,f,c
 10645   00233E  5039               	movf	(___flmul@a+3)^0,w,c
 10646   002340  2439               	addwf	(___flmul@a+3)^0,w,c
 10647   002342  6E43               	movwf	___flmul@aexp^0,c
 10648   002344  AE38               	btfss	(___flmul@a+2)^0,7,c
 10649   002346  EFA7  F011         	goto	u3581
 10650   00234A  EFA9  F011         	goto	u3580
 10651   00234E                     u3581:
 10652   00234E  EFAA  F011         	goto	l4014
 10653   002352                     u3580:
 10654   002352  8043               	bsf	___flmul@aexp^0,0,c
 10655   002354                     l4014:
 10656   002354  5043               	movf	___flmul@aexp^0,w,c
 10657   002356  B4D8               	btfsc	status,2,c
 10658   002358  EFB0  F011         	goto	u3591
 10659   00235C  EFB2  F011         	goto	u3590
 10660   002360                     u3591:
 10661   002360  EFC5  F011         	goto	l4022
 10662   002364                     u3590:
 10663   002364  2843               	incf	___flmul@aexp^0,w,c
 10664   002366  A4D8               	btfss	status,2,c
 10665   002368  EFB8  F011         	goto	u3601
 10666   00236C  EFBA  F011         	goto	u3600
 10667   002370                     u3601:
 10668   002370  EFC2  F011         	goto	l4020
 10669   002374                     u3600:
 10670   002374  0E00               	movlw	0
 10671   002376  6E36               	movwf	___flmul@a^0,c
 10672   002378  0E00               	movlw	0
 10673   00237A  6E37               	movwf	(___flmul@a+1)^0,c
 10674   00237C  0E00               	movlw	0
 10675   00237E  6E38               	movwf	(___flmul@a+2)^0,c
 10676   002380  0E00               	movlw	0
 10677   002382  6E39               	movwf	(___flmul@a+3)^0,c
 10678   002384                     l4020:
 10679   002384  8E38               	bsf	(___flmul@a+2)^0,7,c
 10680   002386  EFCD  F011         	goto	l1290
 10681   00238A                     l4022:
 10682   00238A  0E00               	movlw	0
 10683   00238C  6E36               	movwf	___flmul@a^0,c
 10684   00238E  0E00               	movlw	0
 10685   002390  6E37               	movwf	(___flmul@a+1)^0,c
 10686   002392  0E00               	movlw	0
 10687   002394  6E38               	movwf	(___flmul@a+2)^0,c
 10688   002396  0E00               	movlw	0
 10689   002398  6E39               	movwf	(___flmul@a+3)^0,c
 10690   00239A                     l1290:
 10691   00239A  5043               	movf	___flmul@aexp^0,w,c
 10692   00239C  B4D8               	btfsc	status,2,c
 10693   00239E  EFD3  F011         	goto	u3611
 10694   0023A2  EFD5  F011         	goto	u3610
 10695   0023A6                     u3611:
 10696   0023A6  EFDD  F011         	goto	l4026
 10697   0023AA                     u3610:
 10698   0023AA  5044               	movf	___flmul@bexp^0,w,c
 10699   0023AC  A4D8               	btfss	status,2,c
 10700   0023AE  EFDB  F011         	goto	u3621
 10701   0023B2  EFDD  F011         	goto	u3620
 10702   0023B6                     u3621:
 10703   0023B6  EFE7  F011         	goto	l4030
 10704   0023BA                     u3620:
 10705   0023BA                     l4026:
 10706   0023BA  0E00               	movlw	0
 10707   0023BC  6E32               	movwf	?___flmul^0,c
 10708   0023BE  0E00               	movlw	0
 10709   0023C0  6E33               	movwf	(?___flmul+1)^0,c
 10710   0023C2  0E00               	movlw	0
 10711   0023C4  6E34               	movwf	(?___flmul+2)^0,c
 10712   0023C6  0E00               	movlw	0
 10713   0023C8  6E35               	movwf	(?___flmul+3)^0,c
 10714   0023CA  EF7F  F013         	goto	l1294
 10715   0023CE                     l4030:
 10716   0023CE  5038               	movf	(___flmul@a+2)^0,w,c
 10717   0023D0  0232               	mulwf	___flmul@b^0,c
 10718   0023D2  CFF3 F049          	movff	prodl,___flmul@temp
 10719   0023D6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10720   0023DA  5049               	movf	___flmul@temp^0,w,c
 10721   0023DC  6E3F               	movwf	___flmul@grs^0,c
 10722   0023DE  6A40               	clrf	(___flmul@grs+1)^0,c
 10723   0023E0  6A41               	clrf	(___flmul@grs+2)^0,c
 10724   0023E2  6A42               	clrf	(___flmul@grs+3)^0,c
 10725   0023E4  504A               	movf	(___flmul@temp+1)^0,w,c
 10726   0023E6  6E45               	movwf	___flmul@prod^0,c
 10727   0023E8  6A46               	clrf	(___flmul@prod+1)^0,c
 10728   0023EA  6A47               	clrf	(___flmul@prod+2)^0,c
 10729   0023EC  6A48               	clrf	(___flmul@prod+3)^0,c
 10730   0023EE  5037               	movf	(___flmul@a+1)^0,w,c
 10731   0023F0  0233               	mulwf	(___flmul@b+1)^0,c
 10732   0023F2  CFF3 F049          	movff	prodl,___flmul@temp
 10733   0023F6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10734   0023FA  5049               	movf	___flmul@temp^0,w,c
 10735   0023FC  263F               	addwf	___flmul@grs^0,f,c
 10736   0023FE  0E00               	movlw	0
 10737   002400  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10738   002402  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10739   002404  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10740   002406  504A               	movf	(___flmul@temp+1)^0,w,c
 10741   002408  2645               	addwf	___flmul@prod^0,f,c
 10742   00240A  0E00               	movlw	0
 10743   00240C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10744   00240E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10745   002410  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10746   002412  5036               	movf	___flmul@a^0,w,c
 10747   002414  0234               	mulwf	(___flmul@b+2)^0,c
 10748   002416  CFF3 F049          	movff	prodl,___flmul@temp
 10749   00241A  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10750   00241E  5049               	movf	___flmul@temp^0,w,c
 10751   002420  263F               	addwf	___flmul@grs^0,f,c
 10752   002422  0E00               	movlw	0
 10753   002424  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10754   002426  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10755   002428  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10756   00242A  504A               	movf	(___flmul@temp+1)^0,w,c
 10757   00242C  2645               	addwf	___flmul@prod^0,f,c
 10758   00242E  0E00               	movlw	0
 10759   002430  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10760   002432  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10761   002434  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10762   002436  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10763   00243A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10764   00243E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10765   002442  6A3F               	clrf	___flmul@grs^0,c
 10766   002444  5036               	movf	___flmul@a^0,w,c
 10767   002446  0233               	mulwf	(___flmul@b+1)^0,c
 10768   002448  CFF3 F049          	movff	prodl,___flmul@temp
 10769   00244C  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10770   002450  5049               	movf	___flmul@temp^0,w,c
 10771   002452  263F               	addwf	___flmul@grs^0,f,c
 10772   002454  504A               	movf	(___flmul@temp+1)^0,w,c
 10773   002456  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10774   002458  0E00               	movlw	0
 10775   00245A  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10776   00245C  0E00               	movlw	0
 10777   00245E  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10778   002460  5037               	movf	(___flmul@a+1)^0,w,c
 10779   002462  0232               	mulwf	___flmul@b^0,c
 10780   002464  CFF3 F049          	movff	prodl,___flmul@temp
 10781   002468  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10782   00246C  5049               	movf	___flmul@temp^0,w,c
 10783   00246E  263F               	addwf	___flmul@grs^0,f,c
 10784   002470  504A               	movf	(___flmul@temp+1)^0,w,c
 10785   002472  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10786   002474  0E00               	movlw	0
 10787   002476  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10788   002478  0E00               	movlw	0
 10789   00247A  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10790   00247C  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10791   002480  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10792   002484  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10793   002488  6A3F               	clrf	___flmul@grs^0,c
 10794   00248A  5036               	movf	___flmul@a^0,w,c
 10795   00248C  0232               	mulwf	___flmul@b^0,c
 10796   00248E  CFF3 F049          	movff	prodl,___flmul@temp
 10797   002492  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10798   002496  5049               	movf	___flmul@temp^0,w,c
 10799   002498  263F               	addwf	___flmul@grs^0,f,c
 10800   00249A  504A               	movf	(___flmul@temp+1)^0,w,c
 10801   00249C  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10802   00249E  0E00               	movlw	0
 10803   0024A0  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10804   0024A2  0E00               	movlw	0
 10805   0024A4  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10806   0024A6  5038               	movf	(___flmul@a+2)^0,w,c
 10807   0024A8  0233               	mulwf	(___flmul@b+1)^0,c
 10808   0024AA  CFF3 F049          	movff	prodl,___flmul@temp
 10809   0024AE  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10810   0024B2  5049               	movf	___flmul@temp^0,w,c
 10811   0024B4  2645               	addwf	___flmul@prod^0,f,c
 10812   0024B6  504A               	movf	(___flmul@temp+1)^0,w,c
 10813   0024B8  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10814   0024BA  0E00               	movlw	0
 10815   0024BC  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10816   0024BE  0E00               	movlw	0
 10817   0024C0  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10818   0024C2  5037               	movf	(___flmul@a+1)^0,w,c
 10819   0024C4  0234               	mulwf	(___flmul@b+2)^0,c
 10820   0024C6  CFF3 F049          	movff	prodl,___flmul@temp
 10821   0024CA  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10822   0024CE  5049               	movf	___flmul@temp^0,w,c
 10823   0024D0  2645               	addwf	___flmul@prod^0,f,c
 10824   0024D2  504A               	movf	(___flmul@temp+1)^0,w,c
 10825   0024D4  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10826   0024D6  0E00               	movlw	0
 10827   0024D8  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10828   0024DA  0E00               	movlw	0
 10829   0024DC  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10830   0024DE  5038               	movf	(___flmul@a+2)^0,w,c
 10831   0024E0  0234               	mulwf	(___flmul@b+2)^0,c
 10832   0024E2  CFF3 F049          	movff	prodl,___flmul@temp
 10833   0024E6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10834   0024EA  5049               	movf	___flmul@temp^0,w,c
 10835   0024EC  6E3A               	movwf	??___flmul^0,c
 10836   0024EE  504A               	movf	(___flmul@temp+1)^0,w,c
 10837   0024F0  6E3B               	movwf	(??___flmul+1)^0,c
 10838   0024F2  6A3C               	clrf	(??___flmul+2)^0,c
 10839   0024F4  6A3D               	clrf	(??___flmul+3)^0,c
 10840   0024F6  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 10841   0024FA  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 10842   0024FE  C03A  F03B         	movff	??___flmul,??___flmul+1
 10843   002502  6A3A               	clrf	??___flmul^0,c
 10844   002504  503A               	movf	??___flmul^0,w,c
 10845   002506  2645               	addwf	___flmul@prod^0,f,c
 10846   002508  503B               	movf	(??___flmul+1)^0,w,c
 10847   00250A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10848   00250C  503C               	movf	(??___flmul+2)^0,w,c
 10849   00250E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10850   002510  503D               	movf	(??___flmul+3)^0,w,c
 10851   002512  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10852   002514  C03F  F03A         	movff	___flmul@grs,??___flmul
 10853   002518  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 10854   00251C  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 10855   002520  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 10856   002524  0E19               	movlw	25
 10857   002526  EF9A  F012         	goto	u3630
 10858   00252A                     u3635:
 10859   00252A  90D8               	bcf	status,0,c
 10860   00252C  323D               	rrcf	(??___flmul+3)^0,f,c
 10861   00252E  323C               	rrcf	(??___flmul+2)^0,f,c
 10862   002530  323B               	rrcf	(??___flmul+1)^0,f,c
 10863   002532  323A               	rrcf	??___flmul^0,f,c
 10864   002534                     u3630:
 10865   002534  2EE8               	decfsz	wreg,f,c
 10866   002536  EF95  F012         	goto	u3635
 10867   00253A  503A               	movf	??___flmul^0,w,c
 10868   00253C  2645               	addwf	___flmul@prod^0,f,c
 10869   00253E  503B               	movf	(??___flmul+1)^0,w,c
 10870   002540  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10871   002542  503C               	movf	(??___flmul+2)^0,w,c
 10872   002544  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10873   002546  503D               	movf	(??___flmul+3)^0,w,c
 10874   002548  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10875   00254A  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10876   00254E  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10877   002552  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10878   002556  6A3F               	clrf	___flmul@grs^0,c
 10879   002558  5043               	movf	___flmul@aexp^0,w,c
 10880   00255A  C044  F03A         	movff	___flmul@bexp,??___flmul
 10881   00255E  6A3B               	clrf	(??___flmul+1)^0,c
 10882   002560  263A               	addwf	??___flmul^0,f,c
 10883   002562  0E00               	movlw	0
 10884   002564  223B               	addwfc	(??___flmul+1)^0,f,c
 10885   002566  0E82               	movlw	130
 10886   002568  243A               	addwf	??___flmul^0,w,c
 10887   00256A  6E49               	movwf	___flmul@temp^0,c
 10888   00256C  0EFF               	movlw	255
 10889   00256E  203B               	addwfc	(??___flmul+1)^0,w,c
 10890   002570  6E4A               	movwf	(___flmul@temp+1)^0,c
 10891   002572  EFD0  F012         	goto	l4078
 10892   002576                     l4072:
 10893   002576  90D8               	bcf	status,0,c
 10894   002578  3645               	rlcf	___flmul@prod^0,f,c
 10895   00257A  3646               	rlcf	(___flmul@prod+1)^0,f,c
 10896   00257C  3647               	rlcf	(___flmul@prod+2)^0,f,c
 10897   00257E  3648               	rlcf	(___flmul@prod+3)^0,f,c
 10898   002580  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10899   002582  EFC5  F012         	goto	u3641
 10900   002586  EFC7  F012         	goto	u3640
 10901   00258A                     u3641:
 10902   00258A  EFC8  F012         	goto	l1297
 10903   00258E                     u3640:
 10904   00258E  8045               	bsf	___flmul@prod^0,0,c
 10905   002590                     l1297:
 10906   002590  90D8               	bcf	status,0,c
 10907   002592  363F               	rlcf	___flmul@grs^0,f,c
 10908   002594  3640               	rlcf	(___flmul@grs+1)^0,f,c
 10909   002596  3641               	rlcf	(___flmul@grs+2)^0,f,c
 10910   002598  3642               	rlcf	(___flmul@grs+3)^0,f,c
 10911   00259A  0649               	decf	___flmul@temp^0,f,c
 10912   00259C  A0D8               	btfss	status,0,c
 10913   00259E  064A               	decf	(___flmul@temp+1)^0,f,c
 10914   0025A0                     l4078:
 10915   0025A0  AE47               	btfss	(___flmul@prod+2)^0,7,c
 10916   0025A2  EFD5  F012         	goto	u3651
 10917   0025A6  EFD7  F012         	goto	u3650
 10918   0025AA                     u3651:
 10919   0025AA  EFBB  F012         	goto	l4072
 10920   0025AE                     u3650:
 10921   0025AE  0E00               	movlw	0
 10922   0025B0  6E43               	movwf	___flmul@aexp^0,c
 10923   0025B2  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10924   0025B4  EFDE  F012         	goto	u3661
 10925   0025B8  EFE0  F012         	goto	u3660
 10926   0025BC                     u3661:
 10927   0025BC  EF04  F013         	goto	l1299
 10928   0025C0                     u3660:
 10929   0025C0  0EFF               	movlw	255
 10930   0025C2  143F               	andwf	___flmul@grs^0,w,c
 10931   0025C4  6E3A               	movwf	??___flmul^0,c
 10932   0025C6  0EFF               	movlw	255
 10933   0025C8  1440               	andwf	(___flmul@grs+1)^0,w,c
 10934   0025CA  6E3B               	movwf	(??___flmul+1)^0,c
 10935   0025CC  0EFF               	movlw	255
 10936   0025CE  1441               	andwf	(___flmul@grs+2)^0,w,c
 10937   0025D0  6E3C               	movwf	(??___flmul+2)^0,c
 10938   0025D2  0E7F               	movlw	127
 10939   0025D4  1442               	andwf	(___flmul@grs+3)^0,w,c
 10940   0025D6  6E3D               	movwf	(??___flmul+3)^0,c
 10941   0025D8  503A               	movf	??___flmul^0,w,c
 10942   0025DA  103B               	iorwf	(??___flmul+1)^0,w,c
 10943   0025DC  103C               	iorwf	(??___flmul+2)^0,w,c
 10944   0025DE  103D               	iorwf	(??___flmul+3)^0,w,c
 10945   0025E0  B4D8               	btfsc	status,2,c
 10946   0025E2  EFF5  F012         	goto	u3671
 10947   0025E6  EFF7  F012         	goto	u3670
 10948   0025EA                     u3671:
 10949   0025EA  EFFB  F012         	goto	l1300
 10950   0025EE                     u3670:
 10951   0025EE                     l4086:
 10952   0025EE  0E01               	movlw	1
 10953   0025F0  6E43               	movwf	___flmul@aexp^0,c
 10954   0025F2  EF04  F013         	goto	l1299
 10955   0025F6                     l1300:
 10956   0025F6  A045               	btfss	___flmul@prod^0,0,c
 10957   0025F8  EF00  F013         	goto	u3681
 10958   0025FC  EF02  F013         	goto	u3680
 10959   002600                     u3681:
 10960   002600  EF04  F013         	goto	l1299
 10961   002604                     u3680:
 10962   002604  EFF7  F012         	goto	l4086
 10963   002608                     l1299:
 10964   002608  5043               	movf	___flmul@aexp^0,w,c
 10965   00260A  B4D8               	btfsc	status,2,c
 10966   00260C  EF0A  F013         	goto	u3691
 10967   002610  EF0C  F013         	goto	u3690
 10968   002614                     u3691:
 10969   002614  EF30  F013         	goto	l4098
 10970   002618                     u3690:
 10971   002618  0E01               	movlw	1
 10972   00261A  2645               	addwf	___flmul@prod^0,f,c
 10973   00261C  0E00               	movlw	0
 10974   00261E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10975   002620  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10976   002622  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10977   002624  A048               	btfss	(___flmul@prod+3)^0,0,c
 10978   002626  EF17  F013         	goto	u3701
 10979   00262A  EF19  F013         	goto	u3700
 10980   00262E                     u3701:
 10981   00262E  EF30  F013         	goto	l4098
 10982   002632                     u3700:
 10983   002632  C045  F03A         	movff	___flmul@prod,??___flmul
 10984   002636  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 10985   00263A  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 10986   00263E  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 10987   002642  343D               	rlcf	(??___flmul+3)^0,w,c
 10988   002644  323D               	rrcf	(??___flmul+3)^0,f,c
 10989   002646  323C               	rrcf	(??___flmul+2)^0,f,c
 10990   002648  323B               	rrcf	(??___flmul+1)^0,f,c
 10991   00264A  323A               	rrcf	??___flmul^0,f,c
 10992   00264C  C03A  F045         	movff	??___flmul,___flmul@prod
 10993   002650  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 10994   002654  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 10995   002658  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 10996   00265C  4A49               	infsnz	___flmul@temp^0,f,c
 10997   00265E  2A4A               	incf	(___flmul@temp+1)^0,f,c
 10998   002660                     l4098:
 10999   002660  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11000   002662  EF3B  F013         	goto	u3711
 11001   002666  504A               	movf	(___flmul@temp+1)^0,w,c
 11002   002668  E108               	bnz	u3710
 11003   00266A  2849               	incf	___flmul@temp^0,w,c
 11004   00266C  A0D8               	btfss	status,0,c
 11005   00266E  EF3B  F013         	goto	u3711
 11006   002672  EF3D  F013         	goto	u3710
 11007   002676                     u3711:
 11008   002676  EF47  F013         	goto	l4102
 11009   00267A                     u3710:
 11010   00267A  0E00               	movlw	0
 11011   00267C  6E45               	movwf	___flmul@prod^0,c
 11012   00267E  0E00               	movlw	0
 11013   002680  6E46               	movwf	(___flmul@prod+1)^0,c
 11014   002682  0E80               	movlw	128
 11015   002684  6E47               	movwf	(___flmul@prod+2)^0,c
 11016   002686  0E7F               	movlw	127
 11017   002688  6E48               	movwf	(___flmul@prod+3)^0,c
 11018   00268A  EF75  F013         	goto	l4114
 11019   00268E                     l4102:
 11020   00268E  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11021   002690  EF54  F013         	goto	u3720
 11022   002694  504A               	movf	(___flmul@temp+1)^0,w,c
 11023   002696  E106               	bnz	u3721
 11024   002698  0449               	decf	___flmul@temp^0,w,c
 11025   00269A  B0D8               	btfsc	status,0,c
 11026   00269C  EF52  F013         	goto	u3721
 11027   0026A0  EF54  F013         	goto	u3720
 11028   0026A4                     u3721:
 11029   0026A4  EF60  F013         	goto	l1307
 11030   0026A8                     u3720:
 11031   0026A8  0E00               	movlw	0
 11032   0026AA  6E45               	movwf	___flmul@prod^0,c
 11033   0026AC  0E00               	movlw	0
 11034   0026AE  6E46               	movwf	(___flmul@prod+1)^0,c
 11035   0026B0  0E00               	movlw	0
 11036   0026B2  6E47               	movwf	(___flmul@prod+2)^0,c
 11037   0026B4  0E00               	movlw	0
 11038   0026B6  6E48               	movwf	(___flmul@prod+3)^0,c
 11039   0026B8  0E00               	movlw	0
 11040   0026BA  6E3E               	movwf	___flmul@sign^0,c
 11041   0026BC  EF75  F013         	goto	l4114
 11042   0026C0                     l1307:
 11043   0026C0  C049  F044         	movff	___flmul@temp,___flmul@bexp
 11044   0026C4  0EFF               	movlw	255
 11045   0026C6  1645               	andwf	___flmul@prod^0,f,c
 11046   0026C8  0EFF               	movlw	255
 11047   0026CA  1646               	andwf	(___flmul@prod+1)^0,f,c
 11048   0026CC  0E7F               	movlw	127
 11049   0026CE  1647               	andwf	(___flmul@prod+2)^0,f,c
 11050   0026D0  0E00               	movlw	0
 11051   0026D2  1648               	andwf	(___flmul@prod+3)^0,f,c
 11052   0026D4  A044               	btfss	___flmul@bexp^0,0,c
 11053   0026D6  EF6F  F013         	goto	u3731
 11054   0026DA  EF71  F013         	goto	u3730
 11055   0026DE                     u3731:
 11056   0026DE  EF72  F013         	goto	l4112
 11057   0026E2                     u3730:
 11058   0026E2  8E47               	bsf	(___flmul@prod+2)^0,7,c
 11059   0026E4                     l4112:
 11060   0026E4  90D8               	bcf	status,0,c
 11061   0026E6  3044               	rrcf	___flmul@bexp^0,w,c
 11062   0026E8  6E48               	movwf	(___flmul@prod+3)^0,c
 11063   0026EA                     l4114:
 11064   0026EA  503E               	movf	___flmul@sign^0,w,c
 11065   0026EC  1248               	iorwf	(___flmul@prod+3)^0,f,c
 11066   0026EE  C045  F032         	movff	___flmul@prod,?___flmul
 11067   0026F2  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 11068   0026F6  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 11069   0026FA  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 11070   0026FE                     l1294:
 11071   0026FE  0012               	return		;funcret
 11072   002700                     __end_of___flmul:
 11073                           	callstack 0
 11074                           
 11075 ;; *************** function ___flge *****************
 11076 ;; Defined at:
 11077 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;  ff1             4    0[COMRAM] unsigned char 
 11080 ;;  ff2             4    4[COMRAM] unsigned char 
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;		None
 11083 ;; Return value:  Size  Location     Type
 11084 ;;		None               void
 11085 ;; Registers used:
 11086 ;;		wreg, status,2, status,0
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11092 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11094 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11095 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11096 ;;Total ram usage:       12 bytes
 11097 ;; Hardware stack levels used: 1
 11098 ;; Hardware stack levels required when called: 1
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_Colour_decider
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           	psect	text66
 11107   0039C2                     __ptext66:
 11108                           	callstack 0
 11109   0039C2                     ___flge:
 11110                           	callstack 28
 11111   0039C2  0E00               	movlw	0
 11112   0039C4  1401               	andwf	___flge@ff1^0,w,c
 11113   0039C6  6E09               	movwf	??___flge^0,c
 11114   0039C8  0E00               	movlw	0
 11115   0039CA  1402               	andwf	(___flge@ff1+1)^0,w,c
 11116   0039CC  6E0A               	movwf	(??___flge+1)^0,c
 11117   0039CE  0E80               	movlw	128
 11118   0039D0  1403               	andwf	(___flge@ff1+2)^0,w,c
 11119   0039D2  6E0B               	movwf	(??___flge+2)^0,c
 11120   0039D4  0E7F               	movlw	127
 11121   0039D6  1404               	andwf	(___flge@ff1+3)^0,w,c
 11122   0039D8  6E0C               	movwf	(??___flge+3)^0,c
 11123   0039DA  5009               	movf	??___flge^0,w,c
 11124   0039DC  100A               	iorwf	(??___flge+1)^0,w,c
 11125   0039DE  100B               	iorwf	(??___flge+2)^0,w,c
 11126   0039E0  100C               	iorwf	(??___flge+3)^0,w,c
 11127   0039E2  A4D8               	btfss	status,2,c
 11128   0039E4  EFF6  F01C         	goto	u3771
 11129   0039E8  EFF8  F01C         	goto	u3770
 11130   0039EC                     u3771:
 11131   0039EC  EF00  F01D         	goto	l4146
 11132   0039F0                     u3770:
 11133   0039F0  0E00               	movlw	0
 11134   0039F2  6E01               	movwf	___flge@ff1^0,c
 11135   0039F4  0E00               	movlw	0
 11136   0039F6  6E02               	movwf	(___flge@ff1+1)^0,c
 11137   0039F8  0E00               	movlw	0
 11138   0039FA  6E03               	movwf	(___flge@ff1+2)^0,c
 11139   0039FC  0E00               	movlw	0
 11140   0039FE  6E04               	movwf	(___flge@ff1+3)^0,c
 11141   003A00                     l4146:
 11142   003A00  0E00               	movlw	0
 11143   003A02  1405               	andwf	___flge@ff2^0,w,c
 11144   003A04  6E09               	movwf	??___flge^0,c
 11145   003A06  0E00               	movlw	0
 11146   003A08  1406               	andwf	(___flge@ff2+1)^0,w,c
 11147   003A0A  6E0A               	movwf	(??___flge+1)^0,c
 11148   003A0C  0E80               	movlw	128
 11149   003A0E  1407               	andwf	(___flge@ff2+2)^0,w,c
 11150   003A10  6E0B               	movwf	(??___flge+2)^0,c
 11151   003A12  0E7F               	movlw	127
 11152   003A14  1408               	andwf	(___flge@ff2+3)^0,w,c
 11153   003A16  6E0C               	movwf	(??___flge+3)^0,c
 11154   003A18  5009               	movf	??___flge^0,w,c
 11155   003A1A  100A               	iorwf	(??___flge+1)^0,w,c
 11156   003A1C  100B               	iorwf	(??___flge+2)^0,w,c
 11157   003A1E  100C               	iorwf	(??___flge+3)^0,w,c
 11158   003A20  A4D8               	btfss	status,2,c
 11159   003A22  EF15  F01D         	goto	u3781
 11160   003A26  EF17  F01D         	goto	u3780
 11161   003A2A                     u3781:
 11162   003A2A  EF1F  F01D         	goto	l4150
 11163   003A2E                     u3780:
 11164   003A2E  0E00               	movlw	0
 11165   003A30  6E05               	movwf	___flge@ff2^0,c
 11166   003A32  0E00               	movlw	0
 11167   003A34  6E06               	movwf	(___flge@ff2+1)^0,c
 11168   003A36  0E00               	movlw	0
 11169   003A38  6E07               	movwf	(___flge@ff2+2)^0,c
 11170   003A3A  0E00               	movlw	0
 11171   003A3C  6E08               	movwf	(___flge@ff2+3)^0,c
 11172   003A3E                     l4150:
 11173   003A3E  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11174   003A40  EF24  F01D         	goto	u3791
 11175   003A44  EF26  F01D         	goto	u3790
 11176   003A48                     u3791:
 11177   003A48  EF2F  F01D         	goto	l4154
 11178   003A4C                     u3790:
 11179   003A4C  6C01               	negf	___flge@ff1^0,c
 11180   003A4E  1E02               	comf	(___flge@ff1+1)^0,f,c
 11181   003A50  B0D8               	btfsc	status,0,c
 11182   003A52  2A02               	incf	(___flge@ff1+1)^0,f,c
 11183   003A54  1E03               	comf	(___flge@ff1+2)^0,f,c
 11184   003A56  B0D8               	btfsc	status,0,c
 11185   003A58  2A03               	incf	(___flge@ff1+2)^0,f,c
 11186   003A5A  0E80               	movlw	128
 11187   003A5C  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11188   003A5E                     l4154:
 11189   003A5E  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11190   003A60  EF34  F01D         	goto	u3801
 11191   003A64  EF36  F01D         	goto	u3800
 11192   003A68                     u3801:
 11193   003A68  EF3F  F01D         	goto	l941
 11194   003A6C                     u3800:
 11195   003A6C  6C05               	negf	___flge@ff2^0,c
 11196   003A6E  1E06               	comf	(___flge@ff2+1)^0,f,c
 11197   003A70  B0D8               	btfsc	status,0,c
 11198   003A72  2A06               	incf	(___flge@ff2+1)^0,f,c
 11199   003A74  1E07               	comf	(___flge@ff2+2)^0,f,c
 11200   003A76  B0D8               	btfsc	status,0,c
 11201   003A78  2A07               	incf	(___flge@ff2+2)^0,f,c
 11202   003A7A  0E80               	movlw	128
 11203   003A7C  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11204   003A7E                     l941:
 11205   003A7E  0E00               	movlw	0
 11206   003A80  1A01               	xorwf	___flge@ff1^0,f,c
 11207   003A82  0E00               	movlw	0
 11208   003A84  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11209   003A86  0E00               	movlw	0
 11210   003A88  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11211   003A8A  0E80               	movlw	128
 11212   003A8C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11213   003A8E  0E00               	movlw	0
 11214   003A90  1A05               	xorwf	___flge@ff2^0,f,c
 11215   003A92  0E00               	movlw	0
 11216   003A94  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11217   003A96  0E00               	movlw	0
 11218   003A98  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11219   003A9A  0E80               	movlw	128
 11220   003A9C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11221   003A9E  5005               	movf	___flge@ff2^0,w,c
 11222   003AA0  5C01               	subwf	___flge@ff1^0,w,c
 11223   003AA2  5006               	movf	(___flge@ff2+1)^0,w,c
 11224   003AA4  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11225   003AA6  5007               	movf	(___flge@ff2+2)^0,w,c
 11226   003AA8  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11227   003AAA  5008               	movf	(___flge@ff2+3)^0,w,c
 11228   003AAC  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11229   003AAE  B0D8               	btfsc	status,0,c
 11230   003AB0  EF5C  F01D         	goto	u3811
 11231   003AB4  EF5E  F01D         	goto	u3810
 11232   003AB8                     u3811:
 11233   003AB8  EF61  F01D         	goto	l4160
 11234   003ABC                     u3810:
 11235   003ABC  90D8               	bcf	status,0,c
 11236   003ABE  EF62  F01D         	goto	l946
 11237   003AC2                     l4160:
 11238   003AC2  80D8               	bsf	status,0,c
 11239   003AC4                     l946:
 11240   003AC4  0012               	return		;funcret
 11241   003AC6                     __end_of___flge:
 11242                           	callstack 0
 11243                           
 11244 ;; *************** function ___fleq *****************
 11245 ;; Defined at:
 11246 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11247 ;; Parameters:    Size  Location     Type
 11248 ;;  ff1             4   24[COMRAM] unsigned char 
 11249 ;;  ff2             4   28[COMRAM] unsigned char 
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;		None
 11252 ;; Return value:  Size  Location     Type
 11253 ;;		None               void
 11254 ;; Registers used:
 11255 ;;		wreg, status,2, status,0
 11256 ;; Tracked objects:
 11257 ;;		On entry : 0/0
 11258 ;;		On exit  : 0/0
 11259 ;;		Unchanged: 0/0
 11260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11261 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11264 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11265 ;;Total ram usage:       12 bytes
 11266 ;; Hardware stack levels used: 1
 11267 ;; Hardware stack levels required when called: 1
 11268 ;; This function calls:
 11269 ;;		Nothing
 11270 ;; This function is called by:
 11271 ;;		_Colour_decider
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275                           	psect	text67
 11276   003C3A                     __ptext67:
 11277                           	callstack 0
 11278   003C3A                     ___fleq:
 11279                           	callstack 28
 11280   003C3A  0E00               	movlw	0
 11281   003C3C  1419               	andwf	___fleq@ff1^0,w,c
 11282   003C3E  6E21               	movwf	??___fleq^0,c
 11283   003C40  0E00               	movlw	0
 11284   003C42  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11285   003C44  6E22               	movwf	(??___fleq+1)^0,c
 11286   003C46  0E80               	movlw	128
 11287   003C48  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11288   003C4A  6E23               	movwf	(??___fleq+2)^0,c
 11289   003C4C  0E7F               	movlw	127
 11290   003C4E  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11291   003C50  6E24               	movwf	(??___fleq+3)^0,c
 11292   003C52  5021               	movf	??___fleq^0,w,c
 11293   003C54  1022               	iorwf	(??___fleq+1)^0,w,c
 11294   003C56  1023               	iorwf	(??___fleq+2)^0,w,c
 11295   003C58  1024               	iorwf	(??___fleq+3)^0,w,c
 11296   003C5A  A4D8               	btfss	status,2,c
 11297   003C5C  EF32  F01E         	goto	u3741
 11298   003C60  EF34  F01E         	goto	u3740
 11299   003C64                     u3741:
 11300   003C64  EF3C  F01E         	goto	l4130
 11301   003C68                     u3740:
 11302   003C68  0E00               	movlw	0
 11303   003C6A  6E19               	movwf	___fleq@ff1^0,c
 11304   003C6C  0E00               	movlw	0
 11305   003C6E  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11306   003C70  0E00               	movlw	0
 11307   003C72  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11308   003C74  0E00               	movlw	0
 11309   003C76  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11310   003C78                     l4130:
 11311   003C78  0E00               	movlw	0
 11312   003C7A  141D               	andwf	___fleq@ff2^0,w,c
 11313   003C7C  6E21               	movwf	??___fleq^0,c
 11314   003C7E  0E00               	movlw	0
 11315   003C80  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11316   003C82  6E22               	movwf	(??___fleq+1)^0,c
 11317   003C84  0E80               	movlw	128
 11318   003C86  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11319   003C88  6E23               	movwf	(??___fleq+2)^0,c
 11320   003C8A  0E7F               	movlw	127
 11321   003C8C  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11322   003C8E  6E24               	movwf	(??___fleq+3)^0,c
 11323   003C90  5021               	movf	??___fleq^0,w,c
 11324   003C92  1022               	iorwf	(??___fleq+1)^0,w,c
 11325   003C94  1023               	iorwf	(??___fleq+2)^0,w,c
 11326   003C96  1024               	iorwf	(??___fleq+3)^0,w,c
 11327   003C98  A4D8               	btfss	status,2,c
 11328   003C9A  EF51  F01E         	goto	u3751
 11329   003C9E  EF53  F01E         	goto	u3750
 11330   003CA2                     u3751:
 11331   003CA2  EF5B  F01E         	goto	l4134
 11332   003CA6                     u3750:
 11333   003CA6  0E00               	movlw	0
 11334   003CA8  6E1D               	movwf	___fleq@ff2^0,c
 11335   003CAA  0E00               	movlw	0
 11336   003CAC  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11337   003CAE  0E00               	movlw	0
 11338   003CB0  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11339   003CB2  0E00               	movlw	0
 11340   003CB4  6E20               	movwf	(___fleq@ff2+3)^0,c
 11341   003CB6                     l4134:
 11342   003CB6  501D               	movf	___fleq@ff2^0,w,c
 11343   003CB8  1819               	xorwf	___fleq@ff1^0,w,c
 11344   003CBA  E10F               	bnz	u3760
 11345   003CBC  501E               	movf	(___fleq@ff2+1)^0,w,c
 11346   003CBE  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11347   003CC0  E10C               	bnz	u3760
 11348   003CC2  501F               	movf	(___fleq@ff2+2)^0,w,c
 11349   003CC4  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11350   003CC6  E109               	bnz	u3760
 11351   003CC8  5020               	movf	(___fleq@ff2+3)^0,w,c
 11352   003CCA  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11353   003CCC  B4D8               	btfsc	status,2,c
 11354   003CCE  EF6B  F01E         	goto	u3761
 11355   003CD2  EF6D  F01E         	goto	u3760
 11356   003CD6                     u3761:
 11357   003CD6  EF70  F01E         	goto	l4138
 11358   003CDA                     u3760:
 11359   003CDA  90D8               	bcf	status,0,c
 11360   003CDC  EF71  F01E         	goto	l935
 11361   003CE0                     l4138:
 11362   003CE0  80D8               	bsf	status,0,c
 11363   003CE2                     l935:
 11364   003CE2  0012               	return		;funcret
 11365   003CE4                     __end_of___fleq:
 11366                           	callstack 0
 11367                           
 11368 ;; *************** function ___fldiv *****************
 11369 ;; Defined at:
 11370 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;  b               4   24[COMRAM] unsigned char 
 11373 ;;  a               4   28[COMRAM] unsigned char 
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  grs             4   43[COMRAM] unsigned long 
 11376 ;;  rem             4   36[COMRAM] unsigned long 
 11377 ;;  new_exp         2   41[COMRAM] short 
 11378 ;;  aexp            1   48[COMRAM] unsigned char 
 11379 ;;  bexp            1   47[COMRAM] unsigned char 
 11380 ;;  sign            1   40[COMRAM] unsigned char 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  4   24[COMRAM] unsigned char 
 11383 ;; Registers used:
 11384 ;;		wreg, status,2, status,0
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11390 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11391 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11392 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11393 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11394 ;;Total ram usage:       25 bytes
 11395 ;; Hardware stack levels used: 1
 11396 ;; Hardware stack levels required when called: 1
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_colour_rel
 11401 ;;		_Colour_decider
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text68
 11406   002700                     __ptext68:
 11407                           	callstack 0
 11408   002700                     ___fldiv:
 11409                           	callstack 28
 11410   002700  501C               	movf	(___fldiv@b+3)^0,w,c
 11411   002702  0B80               	andlw	128
 11412   002704  6E29               	movwf	___fldiv@sign^0,c
 11413   002706  501C               	movf	(___fldiv@b+3)^0,w,c
 11414   002708  241C               	addwf	(___fldiv@b+3)^0,w,c
 11415   00270A  6E30               	movwf	___fldiv@bexp^0,c
 11416   00270C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11417   00270E  EF8B  F013         	goto	u3321
 11418   002712  EF8D  F013         	goto	u3320
 11419   002716                     u3321:
 11420   002716  EF8E  F013         	goto	l3858
 11421   00271A                     u3320:
 11422   00271A  8030               	bsf	___fldiv@bexp^0,0,c
 11423   00271C                     l3858:
 11424   00271C  5030               	movf	___fldiv@bexp^0,w,c
 11425   00271E  B4D8               	btfsc	status,2,c
 11426   002720  EF94  F013         	goto	u3331
 11427   002724  EF96  F013         	goto	u3330
 11428   002728                     u3331:
 11429   002728  EFAB  F013         	goto	l3868
 11430   00272C                     u3330:
 11431   00272C  2830               	incf	___fldiv@bexp^0,w,c
 11432   00272E  A4D8               	btfss	status,2,c
 11433   002730  EF9C  F013         	goto	u3341
 11434   002734  EF9E  F013         	goto	u3340
 11435   002738                     u3341:
 11436   002738  EFA6  F013         	goto	l3864
 11437   00273C                     u3340:
 11438   00273C  0E00               	movlw	0
 11439   00273E  6E19               	movwf	___fldiv@b^0,c
 11440   002740  0E00               	movlw	0
 11441   002742  6E1A               	movwf	(___fldiv@b+1)^0,c
 11442   002744  0E00               	movlw	0
 11443   002746  6E1B               	movwf	(___fldiv@b+2)^0,c
 11444   002748  0E00               	movlw	0
 11445   00274A  6E1C               	movwf	(___fldiv@b+3)^0,c
 11446   00274C                     l3864:
 11447   00274C  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11448   00274E  0E00               	movlw	0
 11449   002750  6E1C               	movwf	(___fldiv@b+3)^0,c
 11450   002752  EFB3  F013         	goto	l3870
 11451   002756                     l3868:
 11452   002756  0E00               	movlw	0
 11453   002758  6E19               	movwf	___fldiv@b^0,c
 11454   00275A  0E00               	movlw	0
 11455   00275C  6E1A               	movwf	(___fldiv@b+1)^0,c
 11456   00275E  0E00               	movlw	0
 11457   002760  6E1B               	movwf	(___fldiv@b+2)^0,c
 11458   002762  0E00               	movlw	0
 11459   002764  6E1C               	movwf	(___fldiv@b+3)^0,c
 11460   002766                     l3870:
 11461   002766  5020               	movf	(___fldiv@a+3)^0,w,c
 11462   002768  0B80               	andlw	128
 11463   00276A  1A29               	xorwf	___fldiv@sign^0,f,c
 11464   00276C  5020               	movf	(___fldiv@a+3)^0,w,c
 11465   00276E  2420               	addwf	(___fldiv@a+3)^0,w,c
 11466   002770  6E31               	movwf	___fldiv@aexp^0,c
 11467   002772  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11468   002774  EFBE  F013         	goto	u3351
 11469   002778  EFC0  F013         	goto	u3350
 11470   00277C                     u3351:
 11471   00277C  EFC1  F013         	goto	l3878
 11472   002780                     u3350:
 11473   002780  8031               	bsf	___fldiv@aexp^0,0,c
 11474   002782                     l3878:
 11475   002782  5031               	movf	___fldiv@aexp^0,w,c
 11476   002784  B4D8               	btfsc	status,2,c
 11477   002786  EFC7  F013         	goto	u3361
 11478   00278A  EFC9  F013         	goto	u3360
 11479   00278E                     u3361:
 11480   00278E  EFDE  F013         	goto	l3888
 11481   002792                     u3360:
 11482   002792  2831               	incf	___fldiv@aexp^0,w,c
 11483   002794  A4D8               	btfss	status,2,c
 11484   002796  EFCF  F013         	goto	u3371
 11485   00279A  EFD1  F013         	goto	u3370
 11486   00279E                     u3371:
 11487   00279E  EFD9  F013         	goto	l3884
 11488   0027A2                     u3370:
 11489   0027A2  0E00               	movlw	0
 11490   0027A4  6E1D               	movwf	___fldiv@a^0,c
 11491   0027A6  0E00               	movlw	0
 11492   0027A8  6E1E               	movwf	(___fldiv@a+1)^0,c
 11493   0027AA  0E00               	movlw	0
 11494   0027AC  6E1F               	movwf	(___fldiv@a+2)^0,c
 11495   0027AE  0E00               	movlw	0
 11496   0027B0  6E20               	movwf	(___fldiv@a+3)^0,c
 11497   0027B2                     l3884:
 11498   0027B2  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11499   0027B4  0E00               	movlw	0
 11500   0027B6  6E20               	movwf	(___fldiv@a+3)^0,c
 11501   0027B8  EFE6  F013         	goto	l3890
 11502   0027BC                     l3888:
 11503   0027BC  0E00               	movlw	0
 11504   0027BE  6E1D               	movwf	___fldiv@a^0,c
 11505   0027C0  0E00               	movlw	0
 11506   0027C2  6E1E               	movwf	(___fldiv@a+1)^0,c
 11507   0027C4  0E00               	movlw	0
 11508   0027C6  6E1F               	movwf	(___fldiv@a+2)^0,c
 11509   0027C8  0E00               	movlw	0
 11510   0027CA  6E20               	movwf	(___fldiv@a+3)^0,c
 11511   0027CC                     l3890:
 11512   0027CC  501D               	movf	___fldiv@a^0,w,c
 11513   0027CE  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11514   0027D0  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11515   0027D2  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11516   0027D4  A4D8               	btfss	status,2,c
 11517   0027D6  EFEF  F013         	goto	u3381
 11518   0027DA  EFF1  F013         	goto	u3380
 11519   0027DE                     u3381:
 11520   0027DE  EF09  F014         	goto	l3902
 11521   0027E2                     u3380:
 11522   0027E2  0E00               	movlw	0
 11523   0027E4  6E19               	movwf	___fldiv@b^0,c
 11524   0027E6  0E00               	movlw	0
 11525   0027E8  6E1A               	movwf	(___fldiv@b+1)^0,c
 11526   0027EA  0E00               	movlw	0
 11527   0027EC  6E1B               	movwf	(___fldiv@b+2)^0,c
 11528   0027EE  0E00               	movlw	0
 11529   0027F0  6E1C               	movwf	(___fldiv@b+3)^0,c
 11530   0027F2  0E80               	movlw	128
 11531   0027F4  121B               	iorwf	(___fldiv@b+2)^0,f,c
 11532   0027F6  0E7F               	movlw	127
 11533   0027F8  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11534   0027FA                     l3896:
 11535   0027FA  5029               	movf	___fldiv@sign^0,w,c
 11536   0027FC  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11537   0027FE  C019  F019         	movff	___fldiv@b,?___fldiv
 11538   002802  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 11539   002806  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 11540   00280A  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 11541   00280E  EF4C  F015         	goto	l1258
 11542   002812                     l3902:
 11543   002812  5030               	movf	___fldiv@bexp^0,w,c
 11544   002814  A4D8               	btfss	status,2,c
 11545   002816  EF0F  F014         	goto	u3391
 11546   00281A  EF11  F014         	goto	u3390
 11547   00281E                     u3391:
 11548   00281E  EF1B  F014         	goto	l3910
 11549   002822                     u3390:
 11550   002822  0E00               	movlw	0
 11551   002824  6E19               	movwf	?___fldiv^0,c
 11552   002826  0E00               	movlw	0
 11553   002828  6E1A               	movwf	(?___fldiv+1)^0,c
 11554   00282A  0E00               	movlw	0
 11555   00282C  6E1B               	movwf	(?___fldiv+2)^0,c
 11556   00282E  0E00               	movlw	0
 11557   002830  6E1C               	movwf	(?___fldiv+3)^0,c
 11558   002832  EF4C  F015         	goto	l1258
 11559   002836                     l3910:
 11560   002836  5031               	movf	___fldiv@aexp^0,w,c
 11561   002838  C030  F021         	movff	___fldiv@bexp,??___fldiv
 11562   00283C  6A22               	clrf	(??___fldiv+1)^0,c
 11563   00283E  5E21               	subwf	??___fldiv^0,f,c
 11564   002840  0E00               	movlw	0
 11565   002842  5A22               	subwfb	(??___fldiv+1)^0,f,c
 11566   002844  0E7F               	movlw	127
 11567   002846  2421               	addwf	??___fldiv^0,w,c
 11568   002848  6E2A               	movwf	___fldiv@new_exp^0,c
 11569   00284A  0E00               	movlw	0
 11570   00284C  2022               	addwfc	(??___fldiv+1)^0,w,c
 11571   00284E  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11572   002850  C019  F025         	movff	___fldiv@b,___fldiv@rem
 11573   002854  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 11574   002858  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 11575   00285C  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 11576   002860  0E00               	movlw	0
 11577   002862  6E19               	movwf	___fldiv@b^0,c
 11578   002864  0E00               	movlw	0
 11579   002866  6E1A               	movwf	(___fldiv@b+1)^0,c
 11580   002868  0E00               	movlw	0
 11581   00286A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11582   00286C  0E00               	movlw	0
 11583   00286E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11584   002870  0E00               	movlw	0
 11585   002872  6E2C               	movwf	___fldiv@grs^0,c
 11586   002874  0E00               	movlw	0
 11587   002876  6E2D               	movwf	(___fldiv@grs+1)^0,c
 11588   002878  0E00               	movlw	0
 11589   00287A  6E2E               	movwf	(___fldiv@grs+2)^0,c
 11590   00287C  0E00               	movlw	0
 11591   00287E  6E2F               	movwf	(___fldiv@grs+3)^0,c
 11592   002880  0E00               	movlw	0
 11593   002882  6E31               	movwf	___fldiv@aexp^0,c
 11594   002884  EF7C  F014         	goto	l1260
 11595   002888                     l3920:
 11596   002888  5031               	movf	___fldiv@aexp^0,w,c
 11597   00288A  B4D8               	btfsc	status,2,c
 11598   00288C  EF4A  F014         	goto	u3401
 11599   002890  EF4C  F014         	goto	u3400
 11600   002894                     u3401:
 11601   002894  EF63  F014         	goto	l3928
 11602   002898                     u3400:
 11603   002898  90D8               	bcf	status,0,c
 11604   00289A  3625               	rlcf	___fldiv@rem^0,f,c
 11605   00289C  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 11606   00289E  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 11607   0028A0  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 11608   0028A2  90D8               	bcf	status,0,c
 11609   0028A4  3619               	rlcf	___fldiv@b^0,f,c
 11610   0028A6  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11611   0028A8  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11612   0028AA  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11613   0028AC  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11614   0028AE  EF5B  F014         	goto	u3411
 11615   0028B2  EF5D  F014         	goto	u3410
 11616   0028B6                     u3411:
 11617   0028B6  EF5E  F014         	goto	l1263
 11618   0028BA                     u3410:
 11619   0028BA  8019               	bsf	___fldiv@b^0,0,c
 11620   0028BC                     l1263:
 11621   0028BC  90D8               	bcf	status,0,c
 11622   0028BE  362C               	rlcf	___fldiv@grs^0,f,c
 11623   0028C0  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11624   0028C2  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11625   0028C4  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11626   0028C6                     l3928:
 11627   0028C6  501D               	movf	___fldiv@a^0,w,c
 11628   0028C8  5C25               	subwf	___fldiv@rem^0,w,c
 11629   0028CA  501E               	movf	(___fldiv@a+1)^0,w,c
 11630   0028CC  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 11631   0028CE  501F               	movf	(___fldiv@a+2)^0,w,c
 11632   0028D0  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 11633   0028D2  5020               	movf	(___fldiv@a+3)^0,w,c
 11634   0028D4  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 11635   0028D6  A0D8               	btfss	status,0,c
 11636   0028D8  EF70  F014         	goto	u3421
 11637   0028DC  EF72  F014         	goto	u3420
 11638   0028E0                     u3421:
 11639   0028E0  EF7B  F014         	goto	l3934
 11640   0028E4                     u3420:
 11641   0028E4  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 11642   0028E6  501D               	movf	___fldiv@a^0,w,c
 11643   0028E8  5E25               	subwf	___fldiv@rem^0,f,c
 11644   0028EA  501E               	movf	(___fldiv@a+1)^0,w,c
 11645   0028EC  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 11646   0028EE  501F               	movf	(___fldiv@a+2)^0,w,c
 11647   0028F0  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 11648   0028F2  5020               	movf	(___fldiv@a+3)^0,w,c
 11649   0028F4  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 11650   0028F6                     l3934:
 11651   0028F6  2A31               	incf	___fldiv@aexp^0,f,c
 11652   0028F8                     l1260:
 11653   0028F8  0E19               	movlw	25
 11654   0028FA  6431               	cpfsgt	___fldiv@aexp^0,c
 11655   0028FC  EF82  F014         	goto	u3431
 11656   002900  EF84  F014         	goto	u3430
 11657   002904                     u3431:
 11658   002904  EF44  F014         	goto	l3920
 11659   002908                     u3430:
 11660   002908  5025               	movf	___fldiv@rem^0,w,c
 11661   00290A  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 11662   00290C  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 11663   00290E  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 11664   002910  B4D8               	btfsc	status,2,c
 11665   002912  EF8D  F014         	goto	u3441
 11666   002916  EF8F  F014         	goto	u3440
 11667   00291A                     u3441:
 11668   00291A  EFA7  F014         	goto	l3946
 11669   00291E                     u3440:
 11670   00291E  802C               	bsf	___fldiv@grs^0,0,c
 11671   002920  EFA7  F014         	goto	l3946
 11672   002924                     l3940:
 11673   002924  90D8               	bcf	status,0,c
 11674   002926  3619               	rlcf	___fldiv@b^0,f,c
 11675   002928  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11676   00292A  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11677   00292C  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11678   00292E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11679   002930  EF9C  F014         	goto	u3451
 11680   002934  EF9E  F014         	goto	u3450
 11681   002938                     u3451:
 11682   002938  EF9F  F014         	goto	l1269
 11683   00293C                     u3450:
 11684   00293C  8019               	bsf	___fldiv@b^0,0,c
 11685   00293E                     l1269:
 11686   00293E  90D8               	bcf	status,0,c
 11687   002940  362C               	rlcf	___fldiv@grs^0,f,c
 11688   002942  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11689   002944  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11690   002946  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11691   002948  062A               	decf	___fldiv@new_exp^0,f,c
 11692   00294A  A0D8               	btfss	status,0,c
 11693   00294C  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 11694   00294E                     l3946:
 11695   00294E  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11696   002950  EFAC  F014         	goto	u3461
 11697   002954  EFAE  F014         	goto	u3460
 11698   002958                     u3461:
 11699   002958  EF92  F014         	goto	l3940
 11700   00295C                     u3460:
 11701   00295C  0E00               	movlw	0
 11702   00295E  6E31               	movwf	___fldiv@aexp^0,c
 11703   002960  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11704   002962  EFB5  F014         	goto	u3471
 11705   002966  EFB7  F014         	goto	u3470
 11706   00296A                     u3471:
 11707   00296A  EFDB  F014         	goto	l1271
 11708   00296E                     u3470:
 11709   00296E  0EFF               	movlw	255
 11710   002970  142C               	andwf	___fldiv@grs^0,w,c
 11711   002972  6E21               	movwf	??___fldiv^0,c
 11712   002974  0EFF               	movlw	255
 11713   002976  142D               	andwf	(___fldiv@grs+1)^0,w,c
 11714   002978  6E22               	movwf	(??___fldiv+1)^0,c
 11715   00297A  0EFF               	movlw	255
 11716   00297C  142E               	andwf	(___fldiv@grs+2)^0,w,c
 11717   00297E  6E23               	movwf	(??___fldiv+2)^0,c
 11718   002980  0E7F               	movlw	127
 11719   002982  142F               	andwf	(___fldiv@grs+3)^0,w,c
 11720   002984  6E24               	movwf	(??___fldiv+3)^0,c
 11721   002986  5021               	movf	??___fldiv^0,w,c
 11722   002988  1022               	iorwf	(??___fldiv+1)^0,w,c
 11723   00298A  1023               	iorwf	(??___fldiv+2)^0,w,c
 11724   00298C  1024               	iorwf	(??___fldiv+3)^0,w,c
 11725   00298E  B4D8               	btfsc	status,2,c
 11726   002990  EFCC  F014         	goto	u3481
 11727   002994  EFCE  F014         	goto	u3480
 11728   002998                     u3481:
 11729   002998  EFD2  F014         	goto	l1272
 11730   00299C                     u3480:
 11731   00299C                     l3954:
 11732   00299C  0E01               	movlw	1
 11733   00299E  6E31               	movwf	___fldiv@aexp^0,c
 11734   0029A0  EFDB  F014         	goto	l1271
 11735   0029A4                     l1272:
 11736   0029A4  A019               	btfss	___fldiv@b^0,0,c
 11737   0029A6  EFD7  F014         	goto	u3491
 11738   0029AA  EFD9  F014         	goto	u3490
 11739   0029AE                     u3491:
 11740   0029AE  EFDB  F014         	goto	l1271
 11741   0029B2                     u3490:
 11742   0029B2  EFCE  F014         	goto	l3954
 11743   0029B6                     l1271:
 11744   0029B6  5031               	movf	___fldiv@aexp^0,w,c
 11745   0029B8  B4D8               	btfsc	status,2,c
 11746   0029BA  EFE1  F014         	goto	u3501
 11747   0029BE  EFE3  F014         	goto	u3500
 11748   0029C2                     u3501:
 11749   0029C2  EF07  F015         	goto	l3966
 11750   0029C6                     u3500:
 11751   0029C6  0E01               	movlw	1
 11752   0029C8  2619               	addwf	___fldiv@b^0,f,c
 11753   0029CA  0E00               	movlw	0
 11754   0029CC  221A               	addwfc	(___fldiv@b+1)^0,f,c
 11755   0029CE  221B               	addwfc	(___fldiv@b+2)^0,f,c
 11756   0029D0  221C               	addwfc	(___fldiv@b+3)^0,f,c
 11757   0029D2  A01C               	btfss	(___fldiv@b+3)^0,0,c
 11758   0029D4  EFEE  F014         	goto	u3511
 11759   0029D8  EFF0  F014         	goto	u3510
 11760   0029DC                     u3511:
 11761   0029DC  EF07  F015         	goto	l3966
 11762   0029E0                     u3510:
 11763   0029E0  C019  F021         	movff	___fldiv@b,??___fldiv
 11764   0029E4  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 11765   0029E8  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 11766   0029EC  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 11767   0029F0  3424               	rlcf	(??___fldiv+3)^0,w,c
 11768   0029F2  3224               	rrcf	(??___fldiv+3)^0,f,c
 11769   0029F4  3223               	rrcf	(??___fldiv+2)^0,f,c
 11770   0029F6  3222               	rrcf	(??___fldiv+1)^0,f,c
 11771   0029F8  3221               	rrcf	??___fldiv^0,f,c
 11772   0029FA  C021  F019         	movff	??___fldiv,___fldiv@b
 11773   0029FE  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 11774   002A02  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 11775   002A06  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 11776   002A0A  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 11777   002A0C  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 11778   002A0E                     l3966:
 11779   002A0E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11780   002A10  EF12  F015         	goto	u3521
 11781   002A14  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11782   002A16  E108               	bnz	u3520
 11783   002A18  282A               	incf	___fldiv@new_exp^0,w,c
 11784   002A1A  A0D8               	btfss	status,0,c
 11785   002A1C  EF12  F015         	goto	u3521
 11786   002A20  EF14  F015         	goto	u3520
 11787   002A24                     u3521:
 11788   002A24  EF1F  F015         	goto	l3970
 11789   002A28                     u3520:
 11790   002A28  0E00               	movlw	0
 11791   002A2A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11792   002A2C  682A               	setf	___fldiv@new_exp^0,c
 11793   002A2E  0E00               	movlw	0
 11794   002A30  6E19               	movwf	___fldiv@b^0,c
 11795   002A32  0E00               	movlw	0
 11796   002A34  6E1A               	movwf	(___fldiv@b+1)^0,c
 11797   002A36  0E00               	movlw	0
 11798   002A38  6E1B               	movwf	(___fldiv@b+2)^0,c
 11799   002A3A  0E00               	movlw	0
 11800   002A3C  6E1C               	movwf	(___fldiv@b+3)^0,c
 11801   002A3E                     l3970:
 11802   002A3E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11803   002A40  EF2C  F015         	goto	u3530
 11804   002A44  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11805   002A46  E106               	bnz	u3531
 11806   002A48  042A               	decf	___fldiv@new_exp^0,w,c
 11807   002A4A  B0D8               	btfsc	status,0,c
 11808   002A4C  EF2A  F015         	goto	u3531
 11809   002A50  EF2C  F015         	goto	u3530
 11810   002A54                     u3531:
 11811   002A54  EF3A  F015         	goto	l3974
 11812   002A58                     u3530:
 11813   002A58  0E00               	movlw	0
 11814   002A5A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11815   002A5C  0E00               	movlw	0
 11816   002A5E  6E2A               	movwf	___fldiv@new_exp^0,c
 11817   002A60  0E00               	movlw	0
 11818   002A62  6E19               	movwf	___fldiv@b^0,c
 11819   002A64  0E00               	movlw	0
 11820   002A66  6E1A               	movwf	(___fldiv@b+1)^0,c
 11821   002A68  0E00               	movlw	0
 11822   002A6A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11823   002A6C  0E00               	movlw	0
 11824   002A6E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11825   002A70  0E00               	movlw	0
 11826   002A72  6E29               	movwf	___fldiv@sign^0,c
 11827   002A74                     l3974:
 11828   002A74  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 11829   002A78  A030               	btfss	___fldiv@bexp^0,0,c
 11830   002A7A  EF41  F015         	goto	u3541
 11831   002A7E  EF43  F015         	goto	u3540
 11832   002A82                     u3541:
 11833   002A82  EF46  F015         	goto	l3980
 11834   002A86                     u3540:
 11835   002A86  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11836   002A88  EF47  F015         	goto	l3982
 11837   002A8C                     l3980:
 11838   002A8C  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 11839   002A8E                     l3982:
 11840   002A8E  90D8               	bcf	status,0,c
 11841   002A90  3030               	rrcf	___fldiv@bexp^0,w,c
 11842   002A92  6E1C               	movwf	(___fldiv@b+3)^0,c
 11843   002A94  EFFD  F013         	goto	l3896
 11844   002A98                     l1258:
 11845   002A98  0012               	return		;funcret
 11846   002A9A                     __end_of___fldiv:
 11847                           	callstack 0
 11848                           
 11849 ;; *************** function _HighISR *****************
 11850 ;; Defined at:
 11851 ;;		line 59 in file "interrupts.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;		None
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  1    wreg      void 
 11858 ;; Registers used:
 11859 ;;		None
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11869 ;;Total ram usage:        0 bytes
 11870 ;; Hardware stack levels used: 1
 11871 ;; This function calls:
 11872 ;;		Nothing
 11873 ;; This function is called by:
 11874 ;;		Interrupt level 2
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	intcode
 11879   000008                     __pintcode:
 11880                           	callstack 0
 11881   000008                     _HighISR:
 11882                           	callstack 22
 11883                           
 11884                           ;incstack = 0
 11885   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11886   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11887   00000C  0011               	retfie		f
 11888   00000E                     __end_of_HighISR:
 11889                           	callstack 0
 11890                           
 11891                           	psect	rparam
 11892   000000                     
 11893                           	psect	temp
 11894   00005F                     btemp:
 11895                           	callstack 0
 11896   00005F                     	ds	1
 11897   000000                     int$flags	set	btemp
 11898   000000                     wtemp8	set	btemp+1
 11899   000000                     ttemp5	set	btemp+1
 11900   000000                     ttemp6	set	btemp+4
 11901   000000                     ttemp7	set	btemp+8
 11902                           
 11903                           	psect	idloc
 11904                           
 11905                           ;Config register IDLOC0 @ 0x200000
 11906                           ;	unspecified, using default values
 11907   200000                     	org	2097152
 11908   200000  0FFF               	dw	4095
 11909                           
 11910                           ;Config register IDLOC1 @ 0x200002
 11911                           ;	unspecified, using default values
 11912   200002                     	org	2097154
 11913   200002  0FFF               	dw	4095
 11914                           
 11915                           ;Config register IDLOC2 @ 0x200004
 11916                           ;	unspecified, using default values
 11917   200004                     	org	2097156
 11918   200004  0FFF               	dw	4095
 11919                           
 11920                           ;Config register IDLOC3 @ 0x200006
 11921                           ;	unspecified, using default values
 11922   200006                     	org	2097158
 11923   200006  0FFF               	dw	4095
 11924                           
 11925                           ;Config register IDLOC4 @ 0x200008
 11926                           ;	unspecified, using default values
 11927   200008                     	org	2097160
 11928   200008  0FFF               	dw	4095
 11929                           
 11930                           ;Config register IDLOC5 @ 0x20000A
 11931                           ;	unspecified, using default values
 11932   20000A                     	org	2097162
 11933   20000A  0FFF               	dw	4095
 11934                           
 11935                           ;Config register IDLOC6 @ 0x20000C
 11936                           ;	unspecified, using default values
 11937   20000C                     	org	2097164
 11938   20000C  0FFF               	dw	4095
 11939                           
 11940                           ;Config register IDLOC7 @ 0x20000E
 11941                           ;	unspecified, using default values
 11942   20000E                     	org	2097166
 11943   20000E  0FFF               	dw	4095
 11944                           
 11945                           	psect	config
 11946                           
 11947                           ;Config register CONFIG1L @ 0x300000
 11948                           ;	External Oscillator mode Selection bits
 11949                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11950                           ;	Power-up default value for COSC bits
 11951                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11952   300000                     	org	3145728
 11953   300000  AA                 	db	170
 11954                           
 11955                           ;Config register CONFIG1H @ 0x300001
 11956                           ;	unspecified, using default values
 11957                           ;	Clock Out Enable bit
 11958                           ;	CLKOUTEN = 0x1, unprogrammed default
 11959                           ;	Clock Switch Enable bit
 11960                           ;	CSWEN = 0x1, unprogrammed default
 11961                           ;	Fail-Safe Clock Monitor Enable bit
 11962                           ;	FCMEN = 0x1, unprogrammed default
 11963   300001                     	org	3145729
 11964   300001  FF                 	db	255
 11965                           
 11966                           ;Config register CONFIG2L @ 0x300002
 11967                           ;	unspecified, using default values
 11968                           ;	Master Clear Enable bit
 11969                           ;	MCLRE = 0x1, unprogrammed default
 11970                           ;	Power-up Timer Enable bit
 11971                           ;	PWRTE = 0x1, unprogrammed default
 11972                           ;	Low-power BOR enable bit
 11973                           ;	LPBOREN = 0x1, unprogrammed default
 11974                           ;	Brown-out Reset Enable bits
 11975                           ;	BOREN = 0x3, unprogrammed default
 11976   300002                     	org	3145730
 11977   300002  FF                 	db	255
 11978                           
 11979                           ;Config register CONFIG2H @ 0x300003
 11980                           ;	unspecified, using default values
 11981                           ;	Brown Out Reset Voltage selection bits
 11982                           ;	BORV = 0x3, unprogrammed default
 11983                           ;	ZCD Disable bit
 11984                           ;	ZCD = 0x1, unprogrammed default
 11985                           ;	PPSLOCK bit One-Way Set Enable bit
 11986                           ;	PPS1WAY = 0x1, unprogrammed default
 11987                           ;	Stack Full/Underflow Reset Enable bit
 11988                           ;	STVREN = 0x1, unprogrammed default
 11989                           ;	Debugger Enable bit
 11990                           ;	DEBUG = 0x1, unprogrammed default
 11991                           ;	Extended Instruction Set Enable bit
 11992                           ;	XINST = 0x1, unprogrammed default
 11993   300003                     	org	3145731
 11994   300003  FF                 	db	255
 11995                           
 11996                           ;Config register CONFIG3L @ 0x300004
 11997                           ;	WDT Period Select bits
 11998                           ;	WDTCPS = 0x1F, unprogrammed default
 11999                           ;	WDT operating mode
 12000                           ;	WDTE = OFF, WDT Disabled
 12001   300004                     	org	3145732
 12002   300004  9F                 	db	159
 12003                           
 12004                           ;Config register CONFIG3H @ 0x300005
 12005                           ;	unspecified, using default values
 12006                           ;	WDT Window Select bits
 12007                           ;	WDTCWS = 0x7, unprogrammed default
 12008                           ;	WDT input clock selector
 12009                           ;	WDTCCS = 0x7, unprogrammed default
 12010   300005                     	org	3145733
 12011   300005  FF                 	db	255
 12012                           
 12013                           ;Config register CONFIG4L @ 0x300006
 12014                           ;	unspecified, using default values
 12015                           ;	Write Protection Block 0
 12016                           ;	WRT0 = 0x1, unprogrammed default
 12017                           ;	Write Protection Block 1
 12018                           ;	WRT1 = 0x1, unprogrammed default
 12019                           ;	Write Protection Block 2
 12020                           ;	WRT2 = 0x1, unprogrammed default
 12021                           ;	Write Protection Block 3
 12022                           ;	WRT3 = 0x1, unprogrammed default
 12023                           ;	Write Protection Block 3
 12024                           ;	WRT4 = 0x1, unprogrammed default
 12025                           ;	Write Protection Block 3
 12026                           ;	WRT5 = 0x1, unprogrammed default
 12027                           ;	Write Protection Block 3
 12028                           ;	WRT6 = 0x1, unprogrammed default
 12029                           ;	Write Protection Block 3
 12030                           ;	WRT7 = 0x1, unprogrammed default
 12031   300006                     	org	3145734
 12032   300006  FF                 	db	255
 12033                           
 12034                           ;Config register CONFIG4H @ 0x300007
 12035                           ;	unspecified, using default values
 12036                           ;	Configuration Register Write Protection bit
 12037                           ;	WRTC = 0x1, unprogrammed default
 12038                           ;	Boot Block Write Protection bit
 12039                           ;	WRTB = 0x1, unprogrammed default
 12040                           ;	Data EEPROM Write Protection bit
 12041                           ;	WRTD = 0x1, unprogrammed default
 12042                           ;	Scanner Enable bit
 12043                           ;	SCANE = 0x1, unprogrammed default
 12044                           ;	Low Voltage Programming Enable bit
 12045                           ;	LVP = 0x1, unprogrammed default
 12046   300007                     	org	3145735
 12047   300007  FF                 	db	255
 12048                           
 12049                           ;Config register CONFIG5L @ 0x300008
 12050                           ;	unspecified, using default values
 12051                           ;	UserNVM Program Memory Code Protection bit
 12052                           ;	CP = 0x1, unprogrammed default
 12053                           ;	DataNVM Memory Code Protection bit
 12054                           ;	CPD = 0x1, unprogrammed default
 12055   300008                     	org	3145736
 12056   300008  FF                 	db	255
 12057                           
 12058                           ;Config register CONFIG5H @ 0x300009
 12059                           ;	unspecified, using default values
 12060   300009                     	org	3145737
 12061   300009  FF                 	db	255
 12062                           
 12063                           ;Config register CONFIG6L @ 0x30000A
 12064                           ;	unspecified, using default values
 12065                           ;	Table Read Protection Block 0
 12066                           ;	EBTR0 = 0x1, unprogrammed default
 12067                           ;	Table Read Protection Block 1
 12068                           ;	EBTR1 = 0x1, unprogrammed default
 12069                           ;	Table Read Protection Block 2
 12070                           ;	EBTR2 = 0x1, unprogrammed default
 12071                           ;	Table Read Protection Block 3
 12072                           ;	EBTR3 = 0x1, unprogrammed default
 12073                           ;	Table Read Protection Block 4
 12074                           ;	EBTR4 = 0x1, unprogrammed default
 12075                           ;	Table Read Protection Block 5
 12076                           ;	EBTR5 = 0x1, unprogrammed default
 12077                           ;	Table Read Protection Block 6
 12078                           ;	EBTR6 = 0x1, unprogrammed default
 12079                           ;	Table Read Protection Block 7
 12080                           ;	EBTR7 = 0x1, unprogrammed default
 12081   30000A                     	org	3145738
 12082   30000A  FF                 	db	255
 12083                           
 12084                           ;Config register CONFIG6H @ 0x30000B
 12085                           ;	unspecified, using default values
 12086                           ;	Boot Block Table Read Protection bit
 12087                           ;	EBTRB = 0x1, unprogrammed default
 12088   30000B                     	org	3145739
 12089   30000B  FF                 	db	255
 12090                           tosu	equ	0xFFF
 12091                           tosh	equ	0xFFE
 12092                           tosl	equ	0xFFD
 12093                           stkptr	equ	0xFFC
 12094                           pclatu	equ	0xFFB
 12095                           pclath	equ	0xFFA
 12096                           pcl	equ	0xFF9
 12097                           tblptru	equ	0xFF8
 12098                           tblptrh	equ	0xFF7
 12099                           tblptrl	equ	0xFF6
 12100                           tablat	equ	0xFF5
 12101                           prodh	equ	0xFF4
 12102                           prodl	equ	0xFF3
 12103                           indf0	equ	0xFEF
 12104                           postinc0	equ	0xFEE
 12105                           postdec0	equ	0xFED
 12106                           preinc0	equ	0xFEC
 12107                           plusw0	equ	0xFEB
 12108                           fsr0h	equ	0xFEA
 12109                           fsr0l	equ	0xFE9
 12110                           wreg	equ	0xFE8
 12111                           indf1	equ	0xFE7
 12112                           postinc1	equ	0xFE6
 12113                           postdec1	equ	0xFE5
 12114                           preinc1	equ	0xFE4
 12115                           plusw1	equ	0xFE3
 12116                           fsr1h	equ	0xFE2
 12117                           fsr1l	equ	0xFE1
 12118                           bsr	equ	0xFE0
 12119                           indf2	equ	0xFDF
 12120                           postinc2	equ	0xFDE
 12121                           postdec2	equ	0xFDD
 12122                           preinc2	equ	0xFDC
 12123                           plusw2	equ	0xFDB
 12124                           fsr2h	equ	0xFDA
 12125                           fsr2l	equ	0xFD9
 12126                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        9
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     215
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2485$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2432$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2432$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  296239
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  112115
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   14556
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   15164
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   16076
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   16076
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   16228
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8096
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   22822
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8114
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9555
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   22214
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7506
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7658
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   21363
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1073
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2864
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D7       7       84.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRhlll        6      0       0      38        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     238      61        0.0%
DATA                 0      0     238       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 19:55:02 2023

               _color_read_Red 475A                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 470A                   ___fldiv@sign 0029                _color_read_Blue 47FA  
                           l51 4758                             l60 4848                             l45 4664  
                           l54 47A8                             l63 4304                             l48 4BC0  
                           l57 47F8                             l66 2DC6                             l76 1900  
              ??_timed_forward 001A            ___wmul@multiplicand 0003               _color_read_Green 47AA  
              readColours@vals 000C              ??_Interrupts_init 0001                            l200 4BFE  
                          l140 4B2C                            l212 4C16                            l143 4B2E  
                          l152 4C2C                            l400 199E                            l161 4962  
                          l209 4C02                            l146 4B54                            l218 4B02  
                          l155 4C36                            l500 40E2                            l149 4C40  
                          l405 1DB8                            l158 4C22                            l430 1E12  
                          l422 1DB4                            l272 4C4C                            l524 3F5A  
                          l540 3EBC                            l508 3E1E                            l516 3D80  
                          l532 3C38                            l543 44C4                            l552 43B8  
                          l641 3264                            l546 451C                            l570 42A6  
                          l555 435E                            l635 325A                            l803 3870  
                          l564 4A5C                            l549 4412                            l573 46B6  
                          l494 370C                            l558 446C                            l582 4612  
                          l670 4ABC                            l567 4A9A                            l591 4A1E  
                          l487 3FE2                            l576 4708                            l664 4BE0  
                          l585 4064                            l673 4AD2                            l667 4B7A  
                          l579 45C0                            l676 4BA0                            l588 49E0  
                          l941 3A7E                            l790 35A0                            l935 3CE2  
                          l946 3AC4                            _abs 4964                            _pad 40E4  
                          _rel 01B2                            wreg 000FE8                   ___flmul@aexp 0043  
                 ___flmul@bexp 0044                   ___flmul@sign 003E                   ___flmul@temp 0049  
                 ___flmul@prod 0045                Colour_decider@i 007A                           ?_abs 0013  
                         l1300 25F6                           l1204 2004                           l1221 211E  
                         l1213 22D4                           l1205 1FF2                           l1230 21EE  
                         l1206 1FB8                           l1231 21DC                           l1307 26C0  
                         l1331 32BC                           l1260 28F8                           l1412 4896  
                         l1246 48DC                           l1334 3418                           l1174 41D0  
                         l1406 39C0                           l1271 29B6                           l1263 28BC  
                         l1167 41C8                           l1431 3B8E                           l1272 29A4  
                         l4000 2312                           l1416 499A                           l3200 3B12  
                         l1345 33B0                           l1258 2A98                           l1290 239A  
                         l4010 2344                           l4002 2322                           l1338 3354  
                         l1442 4C4A                           l3202 3B48                           l1354 456E  
                         l1419 49A2                           l4100 267A                           l4020 2384  
                         l4012 2352                           l4004 2328                           l3220 4188  
                         l3212 415E                           l1380 415C                           l1269 293E  
                         l4110 26E2                           l4102 268E                           l1294 26FE  
                         l4030 23CE                           l4022 238A                           l4014 2354  
                         l4006 2338                           l3230 41BC                           l3222 4196  
                         l3214 4166                           l3206 4B7C                           l3310 3744  
                         l3302 370E                           l1439 4920                           l4112 26E4  
                         l4104 26A8                           l4040 241E                           l4032 23DA  
                         l4024 23AA                           l4016 2364                           l4008 233E  
                         l4120 4898                           l4200 33E8                           l3232 41C2  
                         l3224 419C                           l3216 4178                           l3208 4B98  
                         l3400 3E06                           l3320 37AC                           l3312 3752  
                         l3304 3712                           l3240 4900                           l1376 4106  
                         l1297 2590                           l1385 2E54                           l4130 3C78  
                         l4106 26C4                           l4114 26EA                           l4050 2460  
                         l4042 242A                           l4034 23E4                           l4026 23BA  
                         l4018 2374                           l4122 48A8                           l4202 33F8  
                         l3226 41B2                           l3218 4180                           l3250 362A  
                         l3242 35A2                           l3410 3D38                           l3402 3CE4  
                         l3322 37BA                           l3330 3820                           l3314 3772  
                         l3306 3720                           l3234 48DE                           l4210 484A  
                         l1299 2608                           l1387 2E5C                           l4132 3CA6  
                         l4116 26EE                           l4108 26D4                           l4060 24C2  
                         l4052 246C                           l4044 2436                           l4036 23FA  
                         l4204 3406                           l4300 1088                           l3228 41BA  
                         l3252 366C                           l3244 35BE                           l3420 3E5C  
                         l3404 3D08                           l3412 3D50                           l4220 4614  
                         l3500 4928                           l3260 341E                           l3332 3830  
                         l3324 37E8                           l3316 3790                           l3308 3740  
                         l3236 48EA                           l3340 40F2                           l1388 2EA2  
                         l4212 4856                           l4134 3CB6                           l4126 3C3A  
                         l4150 3A3E                           l4142 39C2                           l4070 2558  
                         l4062 24CE                           l4054 247C                           l4046 2444  
                         l4038 2406                           l4206 3408                           l4310 1158  
                         l3254 3688                           l3246 3612                           l3422 3E68  
                         l3414 3D68                           l3406 3D20                           l4230 4646  
                         l4222 4618                           l3502 4930                           l3270 347E  
                         l3262 342C                           l3334 3850                           l3326 3808  
                         l3318 3798                           l3238 48FC                           l3350 4148  
                         l3342 40FE                           l3430 2DC8                           l4214 4872  
                         l1399 3044                           l4136 3CDA                           l4128 3C68  
                         l4160 3AC2                           l4152 3A4C                           l4144 39F0  
                         l4080 25AE                           l4072 2576                           l4064 24EA  
                         l4056 2496                           l4048 2450                           l3600 1F2E  
                         l4320 12F6                           l4312 1190                           l4304 1094  
                         l3256 36CC                           l3248 3626                           l3360 3EBE  
                         l3424 3E74                           l3416 3E20                           l3408 3D2C  
                         l3520 4482                           l4240 4658                           l4232 4650  
                         l4224 4622                           l3512 4A9C                           l3504 4938  
                         l3280 34C8                           l3272 3482                           l3264 344C  
                         l3328 381A                           l3352 4964                           l3192 3AC6  
                         l3344 4112                           l3440 2E48                           l3432 2DE8  
                         l4216 488E                           l4138 3CE0                           l4154 3A5E  
                         l4146 3A00                           l4090 2618                           l4082 25B2  
                         l4074 2580                           l4066 2514                           l4058 24A6  
                         l3610 1F42                           l3602 1F32                           l4170 32CC  
                         l4410 1734                           l4314 11A2                           l4322 134E  
                         l4306 10A8                           l3362 3EE2                           l3370 3F2A  
                         l3418 3E44                           l3426 3E8C                           l3530 43BA  
                         l3522 4498                           l4250 4662                           l4242 465A  
                         l4234 4652                           l4226 4632                           l3514 4AA8  
                         l3506 495E                           l3290 3538                           l3282 34D6  
                         l3274 348E                           l3266 3450                           l3258 341A  
                         l3354 497E                           l3194 3AD8                           l3346 4126  
                         l3338 40E4                           l3450 2E96                           l3442 2E64  
                         l3434 2DFC                           l4156 3A6C                           l4148 3A2E  
                         l4092 2624                           l4084 25C0                           l4076 258E  
                         l4068 254A                           l3700 219E                           l3612 1F46  
                         l3604 1F36                           l3620 1F56                           l4180 330A  
                         l4172 32E2                           l4164 3268                           l4412 1766  
                         l4324 1380                           l4332 13BE                           l4316 121E  
                         l4308 1148                           l3372 3F42                           l3364 3EFA  
                         l3380 408E                           l3428 3EA4                           l3532 43CE  
                         l3524 44C6                           l3356 4B2E                           l4244 465C  
                         l4236 4654                           l4228 463C                           l4260 2C2E  
                         l3540 4332                           l3516 4AB8                           l4500 3F74  
                         l3508 4960                           l4252 42A8                           l3292 354A  
                         l3284 34E8                           l3276 34AC                           l3268 345E  
                         l3196 3AEA                           l3348 412A                           l3460 2F3C  
                         l3452 2E9E                           l3444 2E74                           l3436 2E0C  
                         l4158 3ABC                           l4094 2632                           l4086 25EE  
                         l4078 25A0                           l3702 21AC                           l3630 1FC6  
                         l3622 1F5A                           l3614 1F4A                           l3606 1F3A  
                         l3550 1E42                           l3542 1E16                           l4190 3392  
                         l4182 333C                           l4166 3278                           l4414 1798  
                         l4422 17CE                           l4334 13F0                           l4342 142E  
                         l4326 13B2                           l4318 127A                           l4270 0E50  
                         l3366 3F06                           l3382 409A                           l3374 4066  
                         l3534 43E6                           l3390 3DA6                           l3526 44DA  
                         l3518 446E                           l3358 4B3E                           l4246 465E  
                         l4238 4656                           l4262 2C62                           l4254 2A9A  
                         l4510 3FBE                           l4502 3F8A                           l3286 3516  
                         l3278 34B4                           l3294 3550                           l3198 3AF4  
                         l3470 2FE4                           l3462 2F42                           l3454 2EAA  
                         l3446 2E7A                           l3438 2E2C                           l4096 265C  
                         l3712 21FE                           l3720 2254                           l3704 21B0  
                         l3640 1FF0                           l3632 1FD2                           l3624 1F84  
                         l3616 1F4E                           l3608 1F3E                           l3560 1E7C  
                         l3552 1E52                           l3544 1E22                           l4192 33A0  
                         l4184 333E                           l4176 32F6                           l4168 3286  
                         l4424 1800                           l4408 1702                           l4344 1460  
                         l4336 1422                           l4272 0E5C                           l3368 3F12  
                         l3376 406A                           l3384 40B2                           l3392 3DBE  
                         l3528 44F0                           l4248 4660                           l4264 2CFA  
                         l4256 2B66                           l3536 4306                           l4520 3FE0  
                         l4512 3FC8                           l4504 3F8E                           l3800 47AA  
                         l3296 3560                           l3288 3536                           l3472 2FFE  
                         l3464 2F48                           l3456 2EB4                           l3448 2E8A  
                         l4098 2660                           l3730 22A6                           l3722 2264  
                         l3714 220A                           l3706 21BE                           l3650 2046  
                         l3642 2012                           l3634 1FD6                           l3626 1FA0  
                         l3618 1F52                           l3570 1EAA                           l3562 1E82  
                         l3554 1E62                           l3546 1E30                           l4194 33BE  
                         l4186 334A                           l4178 32FE                           l4426 1832  
                         l4370 1592                           l4346 1492                           l4290 0F8A  
                         l4274 0E8C                           l3386 40CA                           l3378 4082  
                         l4530 4428                           l3394 3DCA                           l3482 4C38  
                         l3490 4C2E                           l4266 2D2E                           l4258 2B9A  
                         l4522 4B56                           l3538 431A                           l4514 3FCA  
                         l4506 3FB2                           l3802 47F0                           l3298 3580  
                         l3474 300E                           l3458 2EBA                           l3466 2FAC  
                         l3740 22C4                           l3732 22AC                           l3724 2274  
                         l3716 2218                           l3708 21D4                           l3660 2080  
                         l3652 2054                           l3644 2022                           l3636 1FE4  
                         l3628 1FB0                           l3580 1EDE                           l3572 1EAC  
                         l3564 1E94                           l3556 1E64                           l3548 1E32  
                         l4196 33C0                           l4188 3386                           l4444 18EC  
                         l4428 186C                           l4436 18AA                           l4380 1606  
                         l4372 15C4                           l4364 1554                           l4348 14CC  
                         l4356 150A                           l4292 0FDE                           l4284 0EFE  
                         l4276 0EC0                           l4268 0E26                           l4532 4440  
                         l3396 3DD6                           l3388 3D82                           l3484 4C3C  
                         l3492 4C32                           l4524 4B58                           l3820 4242  
                         l4516 3FD4                           l4508 3FBC                           l4460 4BFA  
                         l4452 4BE2                           l3812 4C02                           l3476 3014  
                         l3468 2FC6                           l4540 4540                           l4700 1992  
                         l3910 2836                           l3902 2812                           l3734 22AE  
                         l3726 2294                           l3718 2252                           l3670 20EC  
                         l3662 2082                           l3654 2062                           l3638 1FE6  
                         l3590 1F1A                           l3574 1EBC                           l3582 1EE6  
                         l3566 1E96                           l3558 1E6C                           l4198 33C4  
                         l4382 1644                           l4358 1548                           l4294 1010  
                         l4286 0F50                           l4278 0EF4                           l3398 3DEE  
                         l4550 3FE4                           l3486 4C1A                           l4526 4B5E  
                         l3822 4A5E                           l3830 3BCC                           l4518 3FD6  
                         l4462 4BFC                           l4454 4BEC                           l3494 4C24  
                         l3806 47FA                           l3814 4C12                           l4470 4AEA  
                         l3478 3024                           l3750 38B2                           l4542 455C  
                         l4534 451E                           l4710 19D0                           l4702 199A  
                         ?_pad 0011                           l3920 2888                           l3912 2850  
                         l3904 2822                           l3736 22B4                           l3728 2298  
                         l3680 2144                           l3672 20EE                           l3664 208C  
                         l3656 206E                           l3648 2036                           l3592 1F1E  
                         l3584 1EF6                           l3576 1ECC                           l3568 1E9C  
                         l4448 18F8                           l4392 165C                           l4368 1560  
                         l4296 1016                           l4288 0F82                           l4528 4414  
                         l4552 3FF8                           l3488 4C1E                           l3824 45C2  
                         l3816 4A20                           l3840 3C2C                           l3832 3BD8  
                         l4560 3046                           l4456 4BEE                           l3496 4C28  
                         l3808 4840                           l4464 4AD4                           l3760 3956  
                         l3752 38B8                           l3744 3872                           l4536 4530  
                         l4800 1C9E                           l4720 1A28                           l4712 19E4  
                         l4704 19AC                           l3930 28E4                           l3922 2898  
                         l3914 2860                           l3906 2822                           l3738 22C2  
                         l3690 2172                           l3674 20FE                           l3658 2072  
                         l3666 2092                           l3594 1F22                           l3586 1F08  
                         l3578 1EDC                           l4394 168E                           l4298 1032  
                         l3842 4360                           l4554 4010                           l4490 4BDE  
                         l4546 4666                           l3818 4570                           l3850 49E2  
                         l3834 3BE4                           l3826 3B90                           l4570 30B6  
                         l4562 304E                           l4458 4BF8                           l3498 4924  
                         l4466 4AD8                           l3754 38C8                           l3746 3896  
                         l4538 4538                           l4802 1CB2                           l4810 1CE4  
                         l4730 1A8C                           l4722 1A2C                           l4714 19F0  
                         l4706 19C4                           l4650 190E                           l3940 2924  
                         l3932 28E6                           l3924 28AC                           l3916 2870  
                         l3860 272C                           l3852 2700                           l3692 2180  
                         l3684 2158                           l3668 20B8                           l3676 210E  
                         l3596 1F26                           l3588 1F16                           l4396 16C0  
                         l4388 1650                           l3844 4374                           l4548 46B8  
                         l4556 4024                           l4484 4BC2                           l3780 4B16  
                         l3828 3BB4                           l3836 3BFC                           l4580 3152  
                         l4572 30CE                           l4492 3F5C                           l4468 4AE6  
                         l3764 3986                           l3756 38E4                           l3748 38A4  
                         l4812 1CF8                           l4820 1D2A                           l4804 1CC6  
                         l4732 1AA6                           l4740 1AD6                           l4724 1A40  
                         l4716 1A04                           l4708 19C8                           l4660 1926  
                         l4652 1912                           l4644 1902                           l3950 2960  
                         l3942 292E                           l3934 28F6                           l3926 28BA  
                         l3918 2880                           l3870 2766                           l3862 273C  
                         l3854 270C                           l3694 2188                           l3686 2162  
                         l3678 2134                           l3598 1F2A                           l3846 438C  
                         l4558 4038                           l4486 4BCA                           l3782 4B18  
                         l3774 4B04                           l3838 3C14                           l4590 3200  
                         l4582 317C                           l4574 30F8                           l4566 3060  
                         l4494 3F6E                           l3790 4750                           l3758 3900  
                         l4830 1DA6                           l4822 1D3E                           l4814 1D0C  
                         l4806 1CCA                           l4750 1B40                           l4742 1AF4  
                         l4734 1AAE                           l4726 1A54                           l4718 1A22  
                         l4670 1932                           l4662 1928                           l4654 1916  
                         l4646 1906                           l3960 29D2                           l3952 296E  
                         l3944 293C                           l3936 2908                           l3928 28C6  
                         l3880 2792                           l3872 276C                           l3864 274C  
                         l3856 271A                           l3696 218C                           l3688 2170  
                         l4488 4BD4                           l3784 4B1A                           l3776 4B0E  
                         l3848 49A4                           l4592 3218                           l4584 3194  
                         l4576 3110                           l4568 308E                           l4496 3F70  
                         l3768 3998                           l4832 1DC0                           l4824 1D56  
                         l4816 1D10                           l4808 1CCE                           l4752 1B54  
                         l4760 1B86                           l4744 1AFC                           l4736 1AB6  
                         l4728 1A70                           l4680 194A                           l4672 1934  
                         l4664 192A                           l4656 1922                           l4648 190A  
                         l3970 2A3E                           l3962 29E0                           l3954 299C  
                         l3938 291E                           l3946 294E                           l3890 27CC  
                         l3882 27A2                           l3874 2772                           l3866 274E  
                         l3858 271C                           l3698 219C                           l3778 4B14  
                         l3786 4BA4                           l4594 3242                           l4586 31BE  
                         l4578 313A                           l4498 3F72                           l3794 475A  
                         l4834 1DF2                           l4826 1D68                           l4818 1D14  
                         l4762 1B9A                           l4770 1BCC                           l4754 1B68  
                         l4746 1B02                           l4738 1ABE                           l4690 1968  
                         l4682 1952                           l4674 193A                           l4666 192E  
                         l4658 1924                           l3980 2A8C                           l3972 2A58  
                         l3964 2A0A                           l3948 295C                           l3892 27E2  
                         l3884 27B2                           l3876 2780                           l3868 2756  
                         l4588 31D6                           l4596 325A                           l3796 47A0  
                         l3788 470A                           l4828 1D7C                           l4772 1BE0  
                         l4780 1C12                           l4764 1BAE                           l4756 1B6C  
                         l4748 1B34                           l4836 1DFE                           l4692 1970  
                         l4684 195A                           l4676 193E                           l4668 1930  
                         l3982 2A8E                           l3974 2A74                           l3958 29C6  
                         l3966 2A0E                           l3894 27F2                           l3886 27B4  
                         l3878 2782                           l3990 22D6                           l4782 1C26  
                         l4790 1C58                           l4774 1BF4                           l4766 1BB2  
                         l4758 1B70                           l4694 1978                           l4686 1960  
                         l4678 1942                           l3976 2A78                           l3968 2A28  
                         l3896 27FA                           l3888 27BC                           l3992 22E2  
                         l4792 1C6C                           l4784 1C3A                           l4776 1BF8  
                         l4768 1BB6                           l4696 1980                           l4688 1964  
                         l3978 2A86                           l3898 27FE                           l3994 22F0  
                         l4794 1C80                           l4786 1C3E                           l4778 1BFC  
                         l4698 198A                           l3996 22F2                           l4796 1C84  
                         l4788 1C42                           l3998 2302                           l4798 1C88  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E01                           u3000 1FE4                           u3001 1FE0  
                         u3010 2004                           u3011 2000                           u3100 2144  
                         u3020 2012                           u3101 2140                           u3021 200E  
                         u3110 2170                           u3030 2022                           u3111 216C  
                         u3031 201E                           u3200 2252                           u3120 2180  
                         u3040 2054                           u4000 11A2                           u2400 4178  
                 _BAUD4CONbits 000EE9                           u3201 224E                           u3121 217C  
                         u3041 2050                           u4001 119E                           u2401 4174  
                         u3210 2264                           u3130 219C                           u3050 2062  
                         u4010 1380                           u2410 4196                           u3211 2260  
                         u3131 2198                           u3051 205E                           u4011 137C  
                         u2411 4192                           u3220 2274                           u3140 21AC  
                         u3060 2080                           u4100 1592                           u4020 13B2  
                         u2420 41B2                           u3300 3C14                           u2500 34D6  
                         u3221 2270                           u3141 21A8                           u3061 207C  
                         u4101 158E                           u4021 13AE                           u2421 41AE  
                         u3301 3C10                           u2501 34D2                           u3230 2294  
                         u3150 21BE                           u3070 20B8                           u4110 15C4  
                         u4030 13F0                           u3310 3C2C                           u2510 3516  
                         u2430 4920                           u3231 2290                           u3151 21BA  
                         u3071 20B4                           u4111 15C0                           u4031 13EC  
                         u3311 3C28                           u2511 3512                           u2431 491C  
                         u3400 2898                           u3320 271A                           u3240 22A6  
                         u3160 21D4                           u3080 20FE                           u4200 17CA  
                         u4120 1602                           u4040 1422                           u2440 35BE  
                         u2520 3560                           u2360 3AD8                           u2600 4148  
                         u3401 2894                           u3321 2716                           u3241 22A2  
                         u3161 21D0                           u3081 20FA                           u4201 17C6  
                         u4121 15FE                           u4041 141E                           u2441 35BA  
                         u2521 355C                           u2361 3AD4                           u2601 4144  
                         u3410 28BA                           u3330 272C                           u3250 22C2  
                         u3170 21EA                           u3090 2134                           u4210 1800  
                         u4130 1644                           u4050 1460                           u2450 3688  
                         u2530 3720                           u2610 497E                           u2370 3AEA  
                         _T2PR 000FBC                           u3411 28B6                           u3331 2728  
                         u3251 22BE                           u3171 21E6                           u3091 2130  
                         u4211 17FC                           u4131 1640                           u4051 145C  
                         u2451 3684                           u2531 371C                           u2611 497A  
                         u2371 3AE6                           u3500 29C6                           u3420 28E4  
                         u3340 273C                           u3180 21FE                           u4220 1832  
                         u4140 168E                           u4060 1492                           u2700 3D68  
                         u2620 4B3E                           u4300 305C                           u2460 342C  
                         u2540 3752                           u2380 3B12                           u3260 3896  
                         u3501 29C2                           u3421 28E0                           u3341 2738  
                         u3181 21FA                           u4221 182E                           u4141 168A  
                         u4061 148E                           u2701 3D64                           u2621 4B3A  
                         u4301 3058                           u2461 3428                           u2541 374E  
                         u2381 3B0E                           u3261 3892                           u3510 29E0  
                         u3430 2908                           u3350 2780                           u3190 2218  
                         u4230 186C                           u4150 16C0                           u4070 14CC  
                         u2710 3D80                           u2630 4B54                           u4310 30B6  
                         u2470 345E                           u2550 3790                           u2390 3B48  
                         u3270 38E4                           u3511 29DC                           u3431 2904  
                         u3351 277C                           u3191 2214                           u4231 1868  
                         u4151 16BC                           u4071 14C8                           u2711 3D7C  
                         u2631 4B50                           u4311 30B2                           u2471 345A  
                         u2551 378C                           u2391 3B44                           u3271 38E0  
                         u3520 2A28                           u3440 291E                           u3360 2792  
                         u3600 2374                           u4240 18A6                           u4160 16FE  
                         u4080 1506                           u2640 3F42                           u2720 3EA4  
                         u4320 30F8                           u2560 37BA                           u2800 2FC6  
                         u3280 3900                           u3521 2A24                           u3441 291A  
                         u3361 278E                           u3601 2370                           u4241 18A2  
                         u4161 16FA                           u4081 1502                           u2641 3F3E  
                         u2721 3EA0                           u4321 30F4                           u2481 3488  
                         u2561 37B6                           u2801 2FC2                           u3281 38FC  
                         u3530 2A58                           u3450 293C                           u3370 27A2  
                         u3610 23AA                           u4250 18E8                           u4170 1734  
                         u4090 1548                           u2650 3F5A                           u2730 3EBC  
                         u4330 313A                           u3290 4C12                           u2490 34AC  
                         u2570 37E8                           u2810 2FE4                           u3531 2A54  
                         u3451 2938                           u3371 279E                           u3611 23A6  
                         u4251 18E4                           u4171 1730                           u4091 1544  
                         u2651 3F56                           u2731 3EB8                           u4331 3136  
                         u3291 4C0E                           u2491 34A8                           u2571 37E4  
                         u2811 2FE0                           u3540 2A86                           u3460 295C  
                         u3380 27E2                           u3700 2632                           u3620 23BA  
                         u2900 1E94                           u4180 1766                           u2660 40CA  
                         u4340 317C                           u4260 4B02                           u2580 3830  
                         u2820 2FFE                           u2740 2DF8                           u4500 1C26  
                         u3541 2A82                           u3461 2958                           u3381 27DE  
                         u3701 262E                           u3621 23B6                           u2901 1E90  
                         u4181 1762                           u2661 40C6                           u4341 3178  
                         u4261 4AFE                           u2581 382C                           u2821 2FFA  
                         u2741 2DF2                           u4501 1C22                           u3470 296E  
                         u3390 2822                           u3710 267A                           u3630 2534  
                         u3550 22F0                           u2910 1EAA                           u4190 1798  
                         u2670 40E2                           u4350 31BE                           u2590 40F2  
                         u2830 300E                           u2750 2DFA                           u4510 1C6C  
                         u4430 19AC                           u3471 296A                           u3391 281E  
                         u3711 2676                           u3551 22EC                           u2911 1EA6  
                         u4191 1794                           u2671 40DE                           u4351 31BA  
                         u2591 40EE                           u2831 300A                           u4511 1C68  
                         u4431 19A8                           u3480 299C                           u3800 3A6C  
                         u3720 26A8                           u3640 258E                           u3560 2302  
                         u2920 1EBC                           u2680 3E06                           u4360 3200  
                         u2840 494C                           u2760 2E0C                           u4520 1CB2  
                         u4440 1A22                           u3481 2998                           u3801 3A68  
                         u3721 26A4                           u3641 258A                           u3561 22FE  
                         u2921 1EB8                           u2681 3E02                           u4361 31FC  
                         u2841 4944                           u2761 2E08                           u4521 1CAE  
                         u4441 1A1E                           u3490 29B2                           u3810 3ABC  
                         u3730 26E2                           u3650 25AE                           u3570 2312  
                         u2930 1ECC                           u2690 3E1E                           u4370 3242  
                         u2770 2E48                           u4530 1CF8                           u4450 1AA6  
                         u3491 29AE                           u3811 3AB8                           u3731 26DE  
                         u3651 25AA                           u3635 252A                           u3571 230E  
                         u2931 1EC8                           u2691 3E1A                           u4371 323E  
                         u2771 2E44                           u4531 1CF4                           u4451 1AA2  
                         u3740 3C68                           u3660 25C0                           u3580 2352  
                         u2940 1F08                           u3900 33F8                           u3820 3278  
                         u2860 4AD2                           u2780 2E74                           u4540 1D3E  
                         u4460 1AF4                           u3741 3C64                           u3661 25BC  
                         u3581 234E                           u2941 1F04                           u3901 33F4  
                         u3821 3274                           u2861 4ACE                           u2781 2E70  
                         u4541 1D3A                           u4461 1AF0                           u3750 3CA6  
                         u3670 25EE                           u3590 2364                           u2950 1F16  
                         u2870 1E30                           u3910 3406                           u3830 3286  
                         u2790 2E8A                           u4550 1D68                           u4470 1B54  
                         u3751 3CA2                           u3671 25EA                           u3591 2360  
                         u2951 1F12                           u2871 1E2C                           u3911 3402  
                         u3831 3282                           u2791 2E86                           u4551 1D64  
                         u4471 1B50                           u3760 3CDA                           u3680 2604  
                         u2960 1F84                           u2880 1E42                           u3840 32E2  
                         u3920 488E                           u4560 1E12                           u4480 1B9A  
                         u3761 3CD6                           u3681 2600                           u2961 1F80  
                         u2881 1E3E                           u3841 32DE                           u3921 488A  
                         u4561 1E0E                           u4481 1B96                           u3770 39F0  
                         u3690 2618                           u2970 1F9C                           u2890 1E52  
                         u3850 3338                           u2858 494E                           u4490 1BE0  
                         u3771 39EC                           u3691 2614                           u2971 1F96  
                         u2891 1E4E                           u3851 3334                           u3931 0E56  
                         u4491 1BDC                           u4707 19B6                           u3780 3A2E  
                         u2980 1F9E                           u3860 3382                           u3940 0F50  
                         u3781 3A2A                           u3861 337E                           u3941 0F4C  
                         u4717 1A5E                           u3790 3A4C                           u2990 1FC6  
                         u3870 33A0                           u3950 0FDE                           u3791 3A48  
                         u2991 1FC2                           u3871 339C                           u3951 0FDA  
                         u4807 3D42                           u4727 1AC8                           u3880 33B0  
                         u3960 1032                           u3881 33AC                           u3961 102E  
                         u4817 4002                           u4737 3BEE                           u3890 33BE  
                         u3970 1088                           u3891 33BA                           u3971 1084  
                         u4907 3E7E                           u4827 4042                           u4747 4AAE  
                         u3980 10A8                           u3981 10A4                           u4917 4432  
                         u4837 44E4                           u4757 4324                           u3990 1158  
                         u3991 1154                           u4927 445E                           u4847 450E  
                         u4767 4350                           u4937 40A4                           u4857 3DE0  
                         u4777 4628                           u4947 3F1C                           u4867 437E  
                         u4787 448C                           u4877 43AA                           u4797 44B6  
                         u4887 43D8                           u4897 4404                  _LightBlueMove 45C2  
                         abs@a 0013                           _dbuf 0192                           _main 1902  
                         _dtoa 2DC8                           _prec 00F0                           _vals 01C7  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 4066                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 002A         __end_of_color_read_Red 47AA  
              __end_of_HighISR 000E         __end_of_color_read_lum 475A                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 4A5E  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 446E                _RunOneBlockTime 01D1                __end_of___aodiv 35A2  
              __end_of___fladd 22D6                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 3872                __end_of___fldiv 2A9A                __end_of___flmul 2700  
              __end_of___flsub 48DE                    colour_rel@B 004A                    colour_rel@G 0046  
                        ?_stop 0014                    colour_rel@L 0036                    colour_rel@R 0042  
              __end_of___lwdiv 41D2                          i2l277 000A                   vfpfcnvrt@fmt 0041  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3266  
      __end_of_sendCharSerial4 4C18     __end_of_I2C_2_Master_Start 4C42     __end_of_I2C_2_Master_Write 4C24  
                 YellowMove@mL 0020                          _flags 00F4                   YellowMove@mR 0022  
                        _fputc 3AC6                          _fputs 48DE                 delayed_ms@time 0001  
                        pad@fp 0011                          _power 01D5                          _width 015C  
                        _putch 4C4A                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                   main@run_flag 00E8                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 4570        __end_of_color_read_Blue 484A  
        _I2C_2_Master_RepStart 4C24               __end_of_BlueMove 42A8                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 41D2                _reverseOneBlock 4360                   __end_of_main 1E16  
                 __end_of_dtoa 3046                   __end_of_stop 40E4                _colour_rel$2835 003A  
              _colour_rel$2836 003E                         ??_main 0059                         ??_dtoa 0026  
        __end_of_ReverseYellow 49E2               __end_of_PinkMove 470A                         ??_stop 0018  
                __activetblptr 000001              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 4666  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 4570  
             __end_of___xxtofl 341A                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                  ??_ReversePink 0024  
                       ___flge 39C2                         ___fleq 3C3A                      ??___aodiv 0011  
                main@temp_1191 00E6                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 4B7C              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 0021                      ??___flmul 003A                      ??___flsub 0019  
                    ??___lwdiv 000B                         clear_0 420A                         clear_1 4216  
                       clear_2 4222                         _motorL 00F5                         _motorR 01BE  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 4898  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 3E20                     ___flge@ff1 0001  
                   _YellowMove 4666                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0019  
                   ___fleq@ff2 001D                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 4230        __end_of_reverseOneBlock 43BA  
     __end_of_color_read_Green 47FA         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4C4C                 __pcstackCOMRAM 0001  
                _fullSpeedBack 3E20                   __pidataBANK0 4C4E                   __pidataBANK1 4C42  
                __end_of_fputc 3B90                  __end_of_fputs 4922                  __end_of_putch 4C4C  
            __end_of_GreenMove 4A9C            __end_of_Timer0_init 4BE2            __end_of_ReversePink 4A20  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14352 0150          __end_of_reverseDetect 4414                        ??_putch 0001  
                   __pbssBANK0 00F0                     __pbssBANK1 0100                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 4414                     _getTMR0val 4B56              __end_of_RetryMove 4066  
                    ?_PinkMove 0020              _color_writetoaddr 4BA2                     _delayed_ms 4A9C  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 0001  
                      ?___fleq 0019             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                   ?_turnRight45 001A          __end_of_timed_forward 3C3A  
          ??_color_writetoaddr 0004                  colour_rel@rel 0034                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 2A9A  
      __end_of_Interrupts_init 4C4E         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 00EA                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 4BC2                        _RedMove 4A20  
           _I2C_2_Master_Start 4C38                     ??_PinkMove 0024                     _initUSART4 4BE2  
           _I2C_2_Master_Write 4C18                        __Hparam 0000                        _WayBack 0160  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 4BC2  
                  RetryMove@mL 001A                    RetryMove@mR 001C        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 49E2  
                      ___aodiv 341A                        ___fladd 1E16                        ___aomod 370E  
                      ___fldiv 2700                        ___flmul 22D6                        ___flsub 4898  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 415E            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0051                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 41D2                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 3046                        __ptext0 1902  
                      __ptext1 451E                        __ptext2 484A                        __ptext3 3872  
                      __ptext4 2DC8                        __ptext5 40E4                        __ptext6 48DE  
                      __ptext7 3AC6                        __ptext8 4C4A                        __ptext9 4964  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005E              color_read_lum@tmp 000A                        main@buf 0080  
                      _sprintf 451E           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 4230                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 00F2                    ?_delayed_ms 0001              __end_of_vfpfcnvrt 39C2  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 01D3  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0047                     ??_vfprintf 0057                _initDCmotorsPWM 3F5C  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 3D82                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 002C                    ___fldiv@rem 0025  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 0032               ?_Interrupts_init 0001                    ___flmul@grs 003F  
                  _CCP1CONbits 000FAB                     main@colour 00EC                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 44C6                 __end_of___flge 3AC6  
               __end_of___fleq 3CE4                 _fullSpeedAhead 3EBE                    vfpfcnvrt@ap 0043  
                  vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F                 __end_of___wmul 4BA2  
     __end_of_Forwardhalfblock 446E                      _GreenMove 4A5E            start_initialization 41D2  
                  __end_of_abs 49A4                    __end_of_pad 415E                  _TxBufWriteCnt 005C  
        __end_of_LightBlueMove 4614                   ??_OrangeMove 0024            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 3FE4                    vfprintf@fmt 0053         __end_of_fullSpeedAhead 3F5C  
                     ??___flge 0009                       ??___fleq 0021                      _RetryMove 3FE4  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                  __pdataBANK0 00FE                    __pdataBANK1 01CF                _ForwardOneBlock 4306  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 49A4  
                    ___fldiv@a 001D                      ___fldiv@b 0019                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 45C2  
                    ___flmul@a 0036                      ___flmul@b 0032                    __pbssCOMRAM 005B  
                    ___flsub@a 0015                      ___flsub@b 0011                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020               ___lwdiv@dividend 0007  
                    _dtoa$2513 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 001A                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0019               ___aodiv@quotient 0013                       ?___flmul 0032  
                     ?___flsub 0011            _Colour_decider$2837 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 46B8           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 4306              _I2C_2_Master_Idle 4B2E  
            _I2C_2_Master_Init 4B04              _I2C_2_Master_Read 4922              _I2C_2_Master_Stop 4C2E  
                _low_threshold 015E                   _RxBufReadCnt 005D             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0060               getTMR0val@moving 0001                 colour_rel@vals 0032  
            _sendStringSerial4 4AD4            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                   ??_getTMR0val 0001             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D        __end_of_ForwardOneBlock 4360                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E26            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 3872      __end_of_I2C_2_Master_Idle 4B56      __end_of_I2C_2_Master_Init 4B2E  
    __end_of_I2C_2_Master_Read 4964              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4C38  
                 setMotorPWM@m 000E                       _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 4B7C  
                 _TxBufReadCnt 005B                       _BlueMove 4242                      _turnRight 3CE4  
           __end_of_delayed_ms 4AD4                      copy_data0 41E6      __end_of_sendStringSerial4 4B04  
                 ??_colour_rel 0036                  _reverseDetect 43BA  __end_of_I2C_2_Master_RepStart 4C2E  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 370E                   ??_initUSART4 0001  
                     _PinkMove 46B8                       __Hrparam 0000         __end_of_Colour_decider 1902  
                   vfprintf@ap 0055                       __Lrparam 0000                     vfprintf@fp 0051  
        __end_of_fullSpeedBack 3EBE                   __Lsmallconst 0E00                    ??_RetryMove 001E  
                  _readColours 42A8                ??_ReverseYellow 0024                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 2DC8  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                  _timed_forward 3B90  
                   sprintf@fmt 0062              ?_Forwardhalfblock 001A                       ___xxtofl 3266  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                   _Time_forward 0200  
              ___lwdiv@divisor 0009             __end_of_initUSART4 4C00                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 370E  
                     __ptext11 341A                       __ptext20 4922                       __ptext12 4AD4  
                     __ptext21 4BE2                       __ptext13 4C00                       __ptext30 4570  
                     __ptext22 3F5C                       __ptext14 42A8                       __ptext31 45C2  
                     __ptext23 3046                       __ptext15 470A                       __ptext40 4C38  
                     __ptext32 4A5E                       __ptext24 3B90                       __ptext16 475A  
                     __ptext41 4B2E                       __ptext33 4242                       __ptext25 4A9C  
                     __ptext17 47AA                       __ptext50 3D82                       __ptext42 4B04  
                     __ptext34 4B56                       __ptext26 49A4                       __ptext18 47FA  
                     __ptext51 4360                       __ptext43 4666                       __ptext35 2A9A  
                     __ptext27 49E2                       __ptext19 4C24                       __ptext60 415E  
                     __ptext52 43BA                       __ptext44 446E                       __ptext36 4614  
                     __ptext28 4306                       __ptext61 0E26                       __ptext53 3E20  
                     __ptext45 3CE4                       __ptext37 4BA2                       __ptext29 4A20  
                     __ptext62 3266                       __ptext54 4C4C                       __ptext46 4BC2  
                     __ptext38 4C18                       __ptext63 4898                       __ptext55 4414  
                     __ptext47 3FE4                       __ptext39 4C2E                       __ptext64 1E16  
                     __ptext56 4066                       __ptext48 46B8                       __ptext65 22D6  
                     __ptext57 3EBE                       __ptext49 44C6                       __ptext66 39C2  
                     __ptext58 35A2                       __ptext67 3C3A                       __ptext59 4B7C  
                     __ptext68 2700                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 484A                  ??_turnRight45 001E                       main@temp 00E4  
                     _turnLeft 3D82               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                main@prev_colour 00EE  
                  _setMotorPWM 35A2                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 006C                 _high_threshold 01CF  
             ??_fullSpeedAhead 0018                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                ___aomod@divisor 0009                    ??_vfpfcnvrt 0045  
              ___aomod@counter 0011               _color_click_init 4614                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 44C6                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 451E                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 4C00                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
